uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

ValueMetadata *type metadata accessor for CHDMonotonicTime()
{
  return &type metadata for CHDMonotonicTime;
}

void sub_1DA798C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getWFLinkActionWorkflowRunnerClientClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!VoiceShortcutClientLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __VoiceShortcutClientLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_1E6BDA960;
    uint64_t v5 = 0;
    VoiceShortcutClientLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!VoiceShortcutClientLibraryCore_frameworkLibrary) {
    __getWFLinkActionWorkflowRunnerClientClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("WFLinkActionWorkflowRunnerClient");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getWFLinkActionWorkflowRunnerClientClass_block_invoke_cold_2();
  }
  getWFLinkActionWorkflowRunnerClientClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __VoiceShortcutClientLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  VoiceShortcutClientLibraryCore_frameworkLibrary = result;
  return result;
}

dispatch_time_t CHDMonotonicTimeFromNow(int64_t delta)
{
  return dispatch_time(0x8000000000000000, delta);
}

dispatch_time_t CHDMonotonicTimePlusInterval(dispatch_time_t a1, int64_t a2)
{
  _CHDMonotonicNSEC(a1, (uint64_t)"time");

  return dispatch_time(a1, a2);
}

uint64_t _CHDMonotonicNSEC(uint64_t a1, uint64_t a2)
{
  uint64_t result = -1;
  if (a1 != -1)
  {
    if ((dispatch_time_to_nsec() & 1) == 0)
    {
      uint64_t v5 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v6 = objc_msgSend(NSString, "stringWithUTF8String:", "uint64_t _CHDMonotonicNSEC(CHDMonotonicTime, char *)");
      objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, @"CHDMonotonicTimer.m", 26, @"failed to decompose %s %llu", a2, a1);
    }
    return -1;
  }
  return result;
}

BOOL CHDMonotonicTimeLessThan(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = _CHDMonotonicNSEC(a1, (uint64_t)"lhs");
  return v3 < _CHDMonotonicNSEC(a2, (uint64_t)"rhs");
}

BOOL CHDMonotonicTimeEqual(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = _CHDMonotonicNSEC(a1, (uint64_t)"lhs");
  return v3 == _CHDMonotonicNSEC(a2, (uint64_t)"rhs");
}

void *CodableHostConfiguration<>.toData()()
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  v5[0] = 0;
  id v1 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v0, 1, v5);
  id v2 = v5[0];
  if (v1)
  {
    uint64_t v3 = (void *)sub_1DA9894E8();
  }
  else
  {
    uint64_t v3 = v2;
    sub_1DA9892D8();

    swift_willThrow();
  }
  return v3;
}

uint64_t CodableHostConfiguration<>.init(data:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1DA98B8D8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790]();
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A1A08(0, &qword_1EBE58EF0);
  uint64_t v10 = sub_1DA98C578();
  if (!v2)
  {
    uint64_t v3 = v10;
    if (!v10)
    {
      sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE59128);
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F46C10], v6);
      sub_1DA98C778();
      swift_willThrow();
    }
  }
  sub_1DA79DA70(a1, a2);
  return v3;
}

void CodableHostConfiguration<>.succinctDescription()()
{
  id v1 = objc_msgSend(v0, sel_succinctDescriptionBuilder);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_build);

    if (v3)
    {
      sub_1DA98C038();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t HostRecord.identity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t HostRecord.identity.setter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*HostRecord.identity.modify())()
{
  return CGSizeMake;
}

uint64_t HostRecord.type.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_1DA989B88();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t HostRecord.type.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1DA989B88();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*HostRecord.type.modify())()
{
  return CGSizeMake;
}

uint64_t HostRecord.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 40));
}

uint64_t HostRecord.configuration.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 40), a1);
}

uint64_t (*HostRecord.configuration.modify())()
{
  return CGSizeMake;
}

uint64_t HostRecord.activationState.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 44);
  uint64_t v5 = sub_1DA989B18();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t HostRecord.activationState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 44);
  uint64_t v5 = sub_1DA989B18();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*HostRecord.activationState.modify())()
{
  return CGSizeMake;
}

uint64_t HostRecord.init(identity:type:configuration:activationState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a6, a1, v12);
  v13 = (int *)type metadata accessor for HostRecord();
  uint64_t v14 = a6 + v13[9];
  uint64_t v15 = sub_1DA989B88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a2, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6 + v13[10], a3, a5);
  uint64_t v16 = a6 + v13[11];
  uint64_t v17 = sub_1DA989B18();
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32);

  return v18(v16, a4, v17);
}

uint64_t sub_1DA799B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v54 = a1;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v6 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  v52 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a2;
  uint64_t v59 = a3;
  uint64_t v8 = type metadata accessor for HostRecord();
  uint64_t v51 = sub_1DA98C838();
  v9 = *(void (***)(char *, uint64_t))(v51 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v51);
  v50 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v12);
  v49 = (char *)&v41 - v16;
  uint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  unint64_t v17 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](45);
  unint64_t v58 = v17;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v18 = sub_1DA989B78();
  if (v18 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v42 = v9;
  uint64_t v19 = v6;
  uint64_t v20 = v15;
  uint64_t v21 = sub_1DA79E944(v18);
  unint64_t v23 = v22;
  char v25 = v24;
  sub_1DA8E40CC(v21, v22, v24);
  sub_1DA79EB2C(v21, v23, v25);
  uint64_t v26 = v58;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
LABEL_15:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  uint64_t v28 = Strong;
  uint64_t v29 = sub_1DA7BEF9C(v26);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v30 = v29;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_1DA7A0410(&qword_1EBE5A138, &qword_1EBE66B90);
    uint64_t v31 = sub_1DA98BE48();
    uint64_t v56 = v31;
    uint64_t v32 = v30;
    uint64_t v54 = *(void *)(v30 + 16);
    if (v54)
    {
      uint64_t v33 = 0;
      v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      v46 = (void (**)(char *, char *, uint64_t))(v19 + 16);
      v47 = (void (**)(char *, char *, uint64_t))(v20 + 32);
      v44 = (void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
      v45 = (void (**)(char *, char *, uint64_t))(v20 + 16);
      v43 = (void (**)(char *, uint64_t))(v20 + 8);
      uint64_t v41 = 0;
      ++v42;
      v35 = v50;
      do
      {
        uint64_t v36 = swift_bridgeObjectRetain();
        sub_1DA79A1C8(v36, v55, v59, (uint64_t)v14);
        swift_bridgeObjectRelease();
        if ((*v34)(v14, 1, v8) == 1)
        {
          (*v42)(v14, v51);
        }
        else
        {
          uint64_t v37 = v32;
          v38 = v49;
          (*v47)(v49, v14, v8);
          (*v46)(v52, v38, v53);
          (*v45)(v35, v38, v8);
          (*v44)(v35, 0, 1, v8);
          sub_1DA98BF68();
          sub_1DA98BF98();
          v39 = v38;
          uint64_t v32 = v37;
          (*v43)(v39, v8);
        }
        ++v33;
      }
      while (v54 != v33);
      swift_bridgeObjectRelease();
      return v56;
    }
    else
    {
      uint64_t v28 = v31;
      swift_bridgeObjectRelease();
    }
  }
  return v28;
}

uint64_t sub_1DA79A1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v8 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  v123 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = *(void *)(a2 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  v122 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  v125 = (char *)&v108 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59DF0);
  MEMORY[0x1F4188790](v13 - 8);
  v129 = (void (*)(char *, char *, uint64_t))((char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1DA989B18();
  uint64_t v126 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  v120 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v108 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59DF8);
  MEMORY[0x1F4188790](v20 - 8);
  v128 = (void (*)(char *, char *, uint64_t))((char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_1DA989B88();
  uint64_t v130 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  v124 = (char *)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v119 = (char *)&v108 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v108 - v27;
  uint64_t v29 = sub_1DA98CA38();
  uint64_t v30 = a1;
  uint64_t v32 = v31;
  uint64_t v33 = *(void *)(a1 + 16);
  if (!v33)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  uint64_t v34 = v29;
  v116 = v28;
  uint64_t v118 = v22;
  v115 = v19;
  uint64_t v117 = v15;
  uint64_t v131 = a3;
  uint64_t v132 = a2;
  uint64_t v127 = v30;
  v35 = (unsigned __int8 *)(v30 + 64);
  uint64_t v36 = v33;
  while (1)
  {
    uint64_t v37 = *((void *)v35 - 2);
    unint64_t v38 = *((void *)v35 - 1);
    uint64_t v39 = *v35;
    BOOL v40 = *((void *)v35 - 4) == v34 && *((void *)v35 - 3) == v32;
    if (v40 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v35 += 40;
    if (!--v36) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v37, v38, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_1DA8F6590(v37, v38, v39);
  unint64_t v43 = v42;
  sub_1DA79EB2C(v37, v38, v39);
  if (!v43)
  {
LABEL_42:
    if (qword_1EBE59148 != -1) {
      swift_once();
    }
    uint64_t v74 = sub_1DA989F38();
    __swift_project_value_buffer(v74, (uint64_t)qword_1EBE6F0A8);
    v75 = sub_1DA989F18();
    os_log_type_t v76 = sub_1DA98C528();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v77 = 0;
      _os_log_impl(&dword_1DA795000, v75, v76, "Encountered malformed result for host configuration data.", v77, 2u);
      MEMORY[0x1E0178DA0](v77, -1, -1);
    }

    uint64_t v78 = type metadata accessor for HostRecord();
    v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56);
    return v79(a4, 1, 1, v78);
  }
  uint64_t v112 = v41;
  unint64_t v113 = v43;
  uint64_t v114 = a4;
  uint64_t v44 = sub_1DA98CA38();
  unint64_t v46 = v45;
  uint64_t v47 = 0;
  uint64_t v48 = (unsigned __int8 *)(v127 + 64);
  while (1)
  {
    uint64_t v49 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
LABEL_64:
      uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0C0);
      uint64_t v127 = sub_1DA7A0410((unint64_t *)&unk_1EBE5A088, &qword_1EBE5A0C0);
      sub_1DA7A0410((unint64_t *)&unk_1EBE5A0B0, &qword_1EBE5A0C0);
      sub_1DA7A0410(&qword_1EBE5A098, &qword_1EBE5A0C0);
      sub_1DA7A0410((unint64_t *)&unk_1EBE5A0A0, &qword_1EBE5A0C0);
      uint64_t v102 = (uint64_t)v123;
      sub_1DA989AA8();
      sub_1DA7A1ACC(v39, v46);
      uint64_t v103 = (uint64_t)v119;
      v128(v119, v116, v118);
      uint64_t v104 = (uint64_t)v122;
      (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v122, v125, v47);
      uint64_t v105 = (uint64_t)v120;
      v129(v120, v115, v117);
      uint64_t v106 = v114;
      HostRecord.init(identity:type:configuration:activationState:)(v102, v103, v104, v105, v47, v114);
      uint64_t v107 = type metadata accessor for HostRecord();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v106, 0, 1, v107);
    }
    uint64_t v50 = *((void *)v48 - 2);
    unint64_t v51 = *((void *)v48 - 1);
    uint64_t v39 = *v48;
    BOOL v52 = *((void *)v48 - 4) == v44 && *((void *)v48 - 3) == v46;
    if (v52 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v48 += 40;
    ++v47;
    if (v49 == v33)
    {
LABEL_20:
      swift_bridgeObjectRelease();
LABEL_41:
      swift_bridgeObjectRelease();
      a4 = v114;
      goto LABEL_42;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v50, v51, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v53 = sub_1DA8F6584(v50, v51, v39);
  char v55 = v54;
  sub_1DA79EB2C(v50, v51, v39);
  if (v55) {
    goto LABEL_41;
  }
  uint64_t v111 = v53;
  uint64_t v56 = sub_1DA98CA38();
  uint64_t v58 = v57;
  uint64_t v59 = 0;
  v60 = (unsigned __int8 *)(v127 + 64);
  while (1)
  {
    uint64_t v61 = v59 + 1;
    if (__OFADD__(v59, 1))
    {
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      swift_once();
      goto LABEL_58;
    }
    uint64_t v62 = *((void *)v60 - 2);
    unint64_t v63 = *((void *)v60 - 1);
    uint64_t v39 = *v60;
    BOOL v64 = *((void *)v60 - 4) == v56 && *((void *)v60 - 3) == v58;
    if (v64 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v60 += 40;
    ++v59;
    if (v61 == v33) {
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v62, v63, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA8F6418(v62, v63, v39, &v134);
  sub_1DA79EB2C(v62, v63, v39);
  if (*((void *)&v134 + 1) >> 60 == 15) {
    goto LABEL_41;
  }
  unint64_t v109 = *((void *)&v134 + 1);
  uint64_t v110 = v134;
  uint64_t v65 = sub_1DA98CA38();
  uint64_t v67 = v66;
  uint64_t v68 = 0;
  v69 = (unsigned __int8 *)(v127 + 64);
  while (1)
  {
    uint64_t v70 = v68 + 1;
    if (__OFADD__(v68, 1)) {
      goto LABEL_66;
    }
    uint64_t v71 = *((void *)v69 - 2);
    unint64_t v72 = *((void *)v69 - 1);
    uint64_t v39 = *v69;
    BOOL v73 = *((void *)v69 - 4) == v65 && *((void *)v69 - 3) == v67;
    if (v73 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v69 += 40;
    ++v68;
    if (v70 == v33)
    {
      swift_bridgeObjectRelease();
      sub_1DA7A1ACC(v110, v109);
      goto LABEL_41;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v71, v72, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = sub_1DA8F6584(v71, v72, v39);
  char v83 = v82;
  sub_1DA79EB2C(v71, v72, v39);
  uint64_t v84 = v131;
  if (v83)
  {
    sub_1DA7A1ACC(v110, v109);
    swift_bridgeObjectRelease();
    a4 = v114;
    goto LABEL_42;
  }
  uint64_t v85 = v132;
  uint64_t v33 = v110;
  if (v111 < 0) {
    goto LABEL_68;
  }
  uint64_t v86 = (uint64_t)v128;
  sub_1DA989B68();
  uint64_t v87 = v130;
  uint64_t v88 = v118;
  int v89 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48))(v86, 1, v118);
  uint64_t v90 = v117;
  uint64_t v91 = (uint64_t)v129;
  if (v89 == 1)
  {
    sub_1DA7A1AE0(v86, &qword_1EBE59DF8);
    goto LABEL_57;
  }
  v92 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 32);
  v92(v116, v86, v88);
  if (v81 < 0)
  {
LABEL_68:
    uint64_t result = sub_1DA98CBA8();
    __break(1u);
    return result;
  }
  sub_1DA989AF8();
  uint64_t v93 = v126;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v91, 1, v90) != 1)
  {
    v128 = (void (*)(char *, char *, uint64_t))v92;
    uint64_t v47 = v85;
    v129 = *(void (**)(char *, char *, uint64_t))(v93 + 32);
    v129(v115, (char *)v91, v90);
    v101 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v84 + 16);
    uint64_t v39 = v110;
    unint64_t v46 = v109;
    sub_1DA7A1B3C(v110, v109);
    v101(v39, v46, v47, v84);
    goto LABEL_64;
  }
  (*(void (**)(char *, uint64_t))(v87 + 8))(v116, v118);
  sub_1DA7A1AE0(v91, &qword_1EBE59DF0);
  uint64_t v33 = v110;
LABEL_57:
  uint64_t v39 = v114;
  if (qword_1EBE59148 != -1) {
    goto LABEL_67;
  }
LABEL_58:
  uint64_t v94 = sub_1DA989F38();
  __swift_project_value_buffer(v94, (uint64_t)qword_1EBE6F0A8);
  unint64_t v95 = v113;
  swift_bridgeObjectRetain();
  v96 = sub_1DA989F18();
  os_log_type_t v97 = sub_1DA98C528();
  if (os_log_type_enabled(v96, v97))
  {
    v98 = (uint8_t *)swift_slowAlloc();
    uint64_t v99 = swift_slowAlloc();
    *(void *)&long long v134 = v99;
    *(_DWORD *)v98 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v133 = sub_1DA8C5E00(v112, v95, (uint64_t *)&v134);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v96, v97, "Encountered malformed result for host data: %s", v98, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v99, -1, -1);
    MEMORY[0x1E0178DA0](v98, -1, -1);

    sub_1DA7A1ACC(v33, v109);
  }
  else
  {
    sub_1DA7A1ACC(v33, v109);

    swift_bridgeObjectRelease_n();
  }
  uint64_t v100 = type metadata accessor for HostRecord();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v39, 1, 1, v100);
}

uint64_t ChronoMetadataStore.HostConfigurationStore.deinit()
{
  swift_weakDestroy();
  return v0;
}

uint64_t sub_1DA79B380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_14;
  }
  uint64_t v8 = Strong;
  uint64_t v9 = *(void *)(Strong + 24);
  uint64_t v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  uint64_t v11 = *(void *)(v8 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  swift_release();
  if (!v11)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  type metadata accessor for HostRecord();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  if (v4) {
    return result;
  }
  uint64_t v14 = result;
  unint64_t v15 = v13;
  if (!swift_weakLoadStrong())
  {
LABEL_14:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  unint64_t v16 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](181);
  uint64_t v53 = v16;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v17 = sub_1DA989AB8();
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1DA79EBC0(v17, v19, MEMORY[0x1E4FBB1A0], (uint64_t)&off_1F34D99C8);
  unint64_t v22 = v21;
  char v24 = v23;
  sub_1DA8E40CC(v20, v21, v23);
  sub_1DA79EB2C(v20, v22, v24);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v25 = sub_1DA989B78();
  if (v25 < 0) {
    goto LABEL_11;
  }
  uint64_t v26 = sub_1DA79E944(v25);
  unint64_t v28 = v27;
  char v30 = v29;
  sub_1DA8E40CC(v26, v27, v29);
  sub_1DA79EB2C(v26, v28, v30);
  sub_1DA98C148();
  sub_1DA79ED98(v14, v15);
  sub_1DA79ED98(v14, v15);
  uint64_t v31 = sub_1DA79EBC0(v14, v15, MEMORY[0x1E4F277C0], (uint64_t)&off_1F34D5038);
  unint64_t v33 = v32;
  char v35 = v34;
  sub_1DA8E40CC(v31, v32, v34);
  sub_1DA79EB2C(v31, v33, v35);
  sub_1DA79DA70(v14, v15);
  sub_1DA98C148();
  uint64_t v36 = sub_1DA989B08();
  if (v36 < 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v37 = sub_1DA79E944(v36);
  unint64_t v39 = v38;
  char v41 = v40;
  sub_1DA8E40CC(v37, v38, v40);
  sub_1DA79EB2C(v37, v39, v41);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA79ED98(v14, v15);
  sub_1DA79ED98(v14, v15);
  uint64_t v42 = sub_1DA79EBC0(v14, v15, MEMORY[0x1E4F277C0], (uint64_t)&off_1F34D5038);
  unint64_t v44 = v43;
  char v46 = v45;
  sub_1DA8E40CC(v42, v43, v45);
  sub_1DA79EB2C(v42, v44, v46);
  sub_1DA79DA70(v14, v15);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v47 = sub_1DA989B08();
  if (v47 < 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v48 = sub_1DA79E944(v47);
  unint64_t v50 = v49;
  char v52 = v51;
  sub_1DA8E40CC(v48, v49, v51);
  sub_1DA79EB2C(v48, v50, v52);
  sub_1DA7BEF9C(v53);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1DA79DA70(v14, v15);
}

uint64_t sub_1DA79BA40()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_12;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void *)(Strong + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = *(void *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!swift_weakLoadStrong())
  {
LABEL_12:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  unint64_t v7 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](58);
  uint64_t v29 = v7;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v8 = sub_1DA989B08();
  if (v8 < 0) {
    goto LABEL_10;
  }
  uint64_t v9 = sub_1DA79E944(v8);
  unint64_t v11 = v10;
  char v13 = v12;
  sub_1DA8E40CC(v9, v10, v12);
  sub_1DA79EB2C(v9, v11, v13);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v14 = sub_1DA989AB8();
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1DA79EBC0(v14, v16, MEMORY[0x1E4FBB1A0], (uint64_t)&off_1F34D99C8);
  unint64_t v19 = v18;
  char v21 = v20;
  sub_1DA8E40CC(v17, v18, v20);
  sub_1DA79EB2C(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v22 = sub_1DA989B78();
  if (v22 < 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v23 = sub_1DA79E944(v22);
  unint64_t v25 = v24;
  char v27 = v26;
  sub_1DA8E40CC(v23, v24, v26);
  sub_1DA79EB2C(v23, v25, v27);
  sub_1DA7BEF9C(v29);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA79BDF0()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_10;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void *)(Strong + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = *(void *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!swift_weakLoadStrong())
  {
LABEL_10:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  unint64_t v7 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](48);
  uint64_t v23 = v7;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v8 = sub_1DA989AB8();
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1DA79EBC0(v8, v10, MEMORY[0x1E4FBB1A0], (uint64_t)&off_1F34D99C8);
  unint64_t v13 = v12;
  char v15 = v14;
  sub_1DA8E40CC(v11, v12, v14);
  sub_1DA79EB2C(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v16 = sub_1DA989B78();
  if (v16 < 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v17 = sub_1DA79E944(v16);
  unint64_t v19 = v18;
  char v21 = v20;
  sub_1DA8E40CC(v17, v18, v20);
  sub_1DA79EB2C(v17, v19, v21);
  sub_1DA7BEF9C(v23);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9ChronoKit0A13MetadataStoreC017HostConfigurationD0CfD_0()
{
  swift_weakDestroy();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA79C144@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5;
      v5 += 2;
      uint64_t v6 = v7;
      if ((v7 & ~v4) != 0)
      {
        swift_bridgeObjectRelease();
        v4 |= v6;
      }
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = 0;
  return result;
}

uint64_t default argument 3 of UserDefault.init(domain:key:defaultValue:appleInternalOnly:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1, a1);
}

uint64_t default argument 0 of LayerSnapshotter.init(renderBoxFormat:coreAnimationFormat:logger:screenshotManager:dataProtectionMonitor:)@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBE630F8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for RBLayer.SnapshotFormat(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBE630D8);
  return sub_1DA79EDF0(v3, a1, type metadata accessor for RBLayer.SnapshotFormat);
}

uint64_t default argument 1 of LayerSnapshotter.init(renderBoxFormat:coreAnimationFormat:logger:screenshotManager:dataProtectionMonitor:)@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA8E5510 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for CALayer.SnapshotFormat(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA8E58D0);
  return sub_1DA79EDF0(v3, a1, type metadata accessor for CALayer.SnapshotFormat);
}

id default argument 3 of LayerSnapshotter.init(renderBoxFormat:coreAnimationFormat:logger:screenshotManager:dataProtectionMonitor:)()
{
  id v0 = objc_msgSend(self, sel_sharedManager);

  return v0;
}

uint64_t default argument 0 of View.widgetURLReader(enabled:_:)()
{
  return 1;
}

unint64_t sub_1DA79C348(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE59110);
  uint64_t v2 = (void *)sub_1DA98CC08();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 4);
    uint64_t v6 = *((void *)v4 - 3);
    uint64_t v7 = *((void *)v4 - 2);
    unint64_t v8 = *((void *)v4 - 1);
    char v9 = *v4;
    swift_bridgeObjectRetain();
    sub_1DA7A1AA8(v7, v8, v9);
    unint64_t result = sub_1DA7FDF54(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v12 = v5;
    v12[1] = v6;
    uint64_t v13 = v2[7] + 24 * result;
    *(void *)uint64_t v13 = v7;
    *(void *)(v13 + 8) = v8;
    *(unsigned char *)(v13 + 16) = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v4 += 40;
    v2[2] = v16;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA79C48C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5768);
  uint64_t v2 = (void *)sub_1DA98CC08();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DA7FDF54(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v11 = (uint64_t *)(v2[6] + 16 * result);
    *char v11 = v5;
    v11[1] = v6;
    unint64_t v12 = (void *)(v2[7] + 16 * result);
    *unint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA79C5B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE62B80);
  uint64_t v2 = sub_1DA98CC08();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DA7A1F58(v6, (uint64_t)&v13, &qword_1EBE62A78);
    uint64_t v7 = v13;
    unint64_t result = sub_1DA7FDFCC(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1DA7A1930(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA79C6E0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62B90);
  uint64_t v2 = sub_1DA98CC08();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DA7A1F58(v6, (uint64_t)&v13, &qword_1EBE62AC8);
    uint64_t v7 = v13;
    unint64_t result = sub_1DA7FE084(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1DA7A1930(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA79C810(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE5A748);
  uint64_t v2 = (void *)sub_1DA98CC08();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 56);
  while (1)
  {
    unint64_t v5 = *((void *)v4 - 3);
    uint64_t v6 = *((void *)v4 - 2);
    uint64_t v7 = *((void *)v4 - 1);
    char v8 = *v4;
    sub_1DA7A19BC(v5);
    unint64_t result = sub_1DA7FE27C(v5);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v5;
    uint64_t v11 = v2[7] + 24 * result;
    *(void *)uint64_t v11 = v6;
    *(void *)(v11 + 8) = v7;
    *(unsigned char *)(v11 + 16) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 32;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA79C93C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62B78);
  uint64_t v2 = sub_1DA98CC08();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DA7A1F58(v6, (uint64_t)&v15, (uint64_t *)&unk_1EBE58EC0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1DA7FDF54(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1DA7A1930(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA79CA74(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58EA8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58F50);
  uint64_t v6 = sub_1DA98CC08();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1DA7A1F58(v12, (uint64_t)v5, &qword_1EBE58EA8);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_1DA7FDF54(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *unint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_1DA989638();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA79CC74(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58F70);
  uint64_t v2 = sub_1DA98CC08();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DA7A1F58(v6, (uint64_t)v15, (uint64_t *)&unk_1EBE58F28);
    unint64_t result = sub_1DA7FE2EC((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1DA7A1930(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA79CDB8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE58F60);
  uint64_t v2 = (void *)sub_1DA98CC08();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DA7FDF54(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA79CED4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5750);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA8E5758);
  uint64_t v6 = sub_1DA98CC08();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1DA7A1F58(v12, (uint64_t)v5, &qword_1EA8E5750);
    unint64_t result = sub_1DA7FE964((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = sub_1DA989638();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, v9, v20);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA79D10C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A150);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5748);
  uint64_t v6 = sub_1DA98CC08();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1DA7A1F58(v12, (uint64_t)v5, &qword_1EBE5A150);
    unint64_t result = sub_1DA7FE964((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA79D308(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A6C0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A758);
  uint64_t v6 = sub_1DA98CC08();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1DA7A1F58(v12, (uint64_t)v5, &qword_1EBE5A6C0);
    uint64_t v14 = *v5;
    unint64_t result = sub_1DA7FE920(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v7[6] + 8 * result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = type metadata accessor for ExtensionMetadata();
    unint64_t result = sub_1DA7A1940(v9, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA79D4E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A1B0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE5A738);
  uint64_t v6 = sub_1DA98CC08();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (long long *)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1DA7A1F58(v12, (uint64_t)v5, &qword_1EBE5A1B0);
    unint64_t result = sub_1DA7FE778((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = sub_1DA7A19A4(v9, v7[7] + 40 * v16);
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *sub_1DA79D6F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E57B0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA8E57B8);
  uint64_t v6 = (void *)sub_1DA98CC08();
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return v6;
  }
  uint64_t v8 = *(int *)(v2 + 48);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v23 = a1;
  uint64_t v26 = *(void *)(v3 + 72);
  swift_retain();
  sub_1DA7A1F58(a1 + v9, (uint64_t)v5, &qword_1EA8E57B0);
  unint64_t v10 = sub_1DA7FEB28((uint64_t)v5);
  if (v11)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  unint64_t v12 = v10;
  unint64_t v25 = &v5[v8];
  uint64_t v24 = sub_1DA98AAB8();
  uint64_t v13 = *(void *)(v24 - 8);
  uint64_t v14 = *(void (**)(unint64_t, char *, uint64_t))(v13 + 32);
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v16 = v23 + v26 + v9;
  while (1)
  {
    *(void *)((char *)v6 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
    v14(v6[6] + v15 * v12, v5, v24);
    unint64_t result = memmove((void *)(v6[7] + 80 * v12), v25, 0x50uLL);
    uint64_t v18 = v6[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      break;
    }
    v6[2] = v20;
    if (!--v7) {
      goto LABEL_9;
    }
    uint64_t v21 = v16 + v26;
    sub_1DA7A1F58(v16, (uint64_t)v5, &qword_1EA8E57B0);
    unint64_t v12 = sub_1DA7FEB28((uint64_t)v5);
    uint64_t v16 = v21;
    if (v22) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t default argument 1 of MetadataInlineGraphicView.init(_:alwaysTemplate:parameters:)()
{
  return 0;
}

uint64_t default argument 2 of MetadataTextView.init(_:parameters:allowsCustomColors:)()
{
  return 0;
}

uint64_t default argument 1 of WidgetCacheManager.init(subdirectory:fileExtension:descriptorProvider:protectionLevelProvider:fileManager:)()
{
  return 0x742D6F6E6F726863;
}

id default argument 4 of WidgetCacheManager.init(subdirectory:fileExtension:descriptorProvider:protectionLevelProvider:fileManager:)()
{
  id v0 = objc_msgSend(self, sel_defaultManager);

  return v0;
}

uint64_t default argument 1 of _UIHostingViewable.configureRenderBox(async:isOpaque:minAnimationInterval:)()
{
  return 0;
}

double default argument 2 of _UIHostingViewable.configureRenderBox(async:isOpaque:minAnimationInterval:)()
{
  return 0.0;
}

uint64_t default argument 1 of CHDMonotonicTimer.init(time:repeat:)()
{
  return 0;
}

id default argument 4 of BaseCacheManager.init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)()
{
  id v0 = objc_msgSend(self, sel_defaultManager);

  return v0;
}

uint64_t default argument 10 of WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)()
{
  return 0;
}

uint64_t default argument 19 of WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)()
{
  return 0;
}

uint64_t default argument 21 of WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)()
{
  return 0;
}

uint64_t default argument 22 of WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t default argument 0 of Sequence<>.joined(separator:)()
{
  return 0;
}

uint64_t default argument 1 of WidgetPreviewHostingViewController.updateCurrentEntry(to:disableAnimations:)()
{
  return 0;
}

uint64_t default argument 0 of View.onSystemURLInvoked(enabled:_:)()
{
  return 1;
}

uint64_t default argument 0 of View.onWidgetLaunch(enabled:launchHandler:touchDownHandler:)()
{
  return 1;
}

uint64_t default argument 5 of StatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)()
{
  return 1;
}

uint64_t default argument 5 of ExtensionMetadata.init(id:version:originOSVersion:widgetDescriptors:controlDescriptors:activityDescriptors:)()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1DA79DA70(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t type metadata accessor for HostRecord()
{
  return __swift_instantiateGenericMetadata();
}

double default argument 5 of ActivityPreviewHostingViewController.init(viewCollections:currentStateIndex:widgetLocation:environment:viewKind:apertureTopEdgeMetric:islandSize:renderBoxRendersAsynchronously:appName:)()
{
  return 0.0;
}

uint64_t default argument 1 of ActivityPreviewHostingViewController.updateCurrentState(to:disableAnimations:)()
{
  return 0;
}

uint64_t default argument 4 of WidgetEntry.init(key:protectionType:environmentProvider:observer:entrySupportsRendering:)()
{
  return 1;
}

uint64_t default argument 2 of WidgetEntry.currentViewableEntry(with:overrideDate:ignoringEnvironmentKeys:)()
{
  return MEMORY[0x1E4FBC860];
}

double default argument 0 of WidgetUpdateTimer.init(quantum:queue:)()
{
  return 1.0;
}

uint64_t default argument 1 of WidgetUpdateTimer.init(quantum:queue:)()
{
  uint64_t v0 = sub_1DA98B448();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE65CB0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCB48], v0);
  uint64_t v4 = sub_1DA98C648();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void default argument 2 of InteractiveWidgetActionRunner.start(lnAction:source:authenticationPolicy:)(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

id _s9ChronoKit29BaseDirectoryCacheKeyProviderC9subsystem2in11fileManagerACyxq_GSS_So012NSSearchPathD0VSo06NSFileK0CtKcfcfA1__0()
{
  id v0 = objc_msgSend(self, sel_defaultManager);

  return v0;
}

uint64_t default argument 5 of PlaceholderStatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:expirationDuration:)()
{
  return 1;
}

uint64_t sub_1DA79DC6C(uint64_t a1, uint64_t a2)
{
  return sub_1DA79E7AC(a1, a2, MEMORY[0x1E4FBB198]);
}

void sub_1DA79DC98(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DA79DCA0()
{
  swift_getWitnessTable();

  return sub_1DA989B98();
}

void *sub_1DA79DD0C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1DA79DD1C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1DA79DD28(uint64_t a1, uint64_t a2)
{
  return sub_1DA79E7AC(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1DA79DD40()
{
  return sub_1DA989BB8();
}

uint64_t sub_1DA79DD8C()
{
  return sub_1DA989BA8();
}

uint64_t sub_1DA79DDE4()
{
  return sub_1DA79E55C();
}

void *sub_1DA79DDFC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1DA79DE10@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1DA79DE24@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1DA79DE38(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1DA79DE68@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1DA79DE94@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1DA79DEB8(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1DA79DECC(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1DA79DEE0(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1DA79DEF4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1DA79DF08(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1DA79DF1C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1DA79DF30(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1DA79DF44()
{
  return *v0 == 0;
}

uint64_t sub_1DA79DF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1DA79DF6C(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_1DA79DF80@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1DA79DF90(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_1DA79DF9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DA79DFB0(uint64_t a1, id *a2)
{
  uint64_t result = sub_1DA98C018();
  *a2 = 0;
  return result;
}

uint64_t sub_1DA79E028(uint64_t a1, id *a2)
{
  char v3 = sub_1DA98C028();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1DA79E0A8@<X0>(uint64_t *a1@<X8>)
{
  sub_1DA98C038();
  uint64_t v2 = sub_1DA98C008();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DA79E0EC()
{
  swift_getWitnessTable();

  return sub_1DA989B98();
}

BOOL sub_1DA79E158(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DA79E16C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1DA7A18F8(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1DA79E1B0(uint64_t a1)
{
  uint64_t v2 = sub_1DA7A0770(&qword_1EBE64D50, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v3 = sub_1DA7A0770(&qword_1EA8E57E8, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DA79E26C(uint64_t a1)
{
  uint64_t v2 = sub_1DA7A0770(&qword_1EA8E5710, type metadata accessor for FileProtectionType);
  uint64_t v3 = sub_1DA7A0770((unint64_t *)&unk_1EA8E5718, type metadata accessor for FileProtectionType);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DA79E328(uint64_t a1)
{
  uint64_t v2 = sub_1DA7A0770((unint64_t *)&unk_1EBE62AA0, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_1DA7A0770((unint64_t *)&unk_1EA8E57C8, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DA79E3E4(uint64_t a1)
{
  uint64_t v2 = sub_1DA7A0770(&qword_1EBE62B10, type metadata accessor for RBDrawableStatisticsKey);
  uint64_t v3 = sub_1DA7A0770((unint64_t *)&unk_1EA8E5738, type metadata accessor for RBDrawableStatisticsKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DA79E4A0()
{
  return sub_1DA989BB8();
}

uint64_t sub_1DA79E4EC()
{
  return sub_1DA989BA8();
}

uint64_t sub_1DA79E544()
{
  return sub_1DA79E55C();
}

uint64_t sub_1DA79E55C()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA79E5C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA98C038();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DA79E5EC(uint64_t a1)
{
  uint64_t v2 = sub_1DA7A0770((unint64_t *)&qword_1EBE66B10, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_1DA7A0770((unint64_t *)&unk_1EA8E5728, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DA79E6A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DA98C008();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DA79E6F0(uint64_t a1)
{
  uint64_t v2 = sub_1DA7A0770((unint64_t *)&unk_1EBE62AE0, type metadata accessor for RBLayerCopyImageKey);
  uint64_t v3 = sub_1DA7A0770((unint64_t *)&unk_1EA8E57D8, type metadata accessor for RBLayerCopyImageKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DA79E7AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1DA98C038();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DA79E7F0()
{
  sub_1DA98C038();
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA79E844()
{
  sub_1DA98C038();
  sub_1DA98CF18();
  sub_1DA98C108();
  uint64_t v0 = sub_1DA98CF68();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DA79E8B8()
{
  uint64_t v0 = sub_1DA98C038();
  uint64_t v2 = v1;
  if (v0 == sub_1DA98C038() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1DA98CE58();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1DA79E944(uint64_t a1)
{
  v5[3] = MEMORY[0x1E4FBC1C8];
  v5[4] = &off_1F34D9D78;
  v5[0] = a1;
  sub_1DA7A1A44((uint64_t)v5, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);

    uint64_t v1 = 0;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    return (uint64_t)v1;
  }
  if ((swift_dynamicCast() & 1) != 0
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    uint64_t v1 = v3;
    goto LABEL_9;
  }
  uint64_t result = sub_1DA98CBB8();
  __break(1u);
  return result;
}

uint64_t sub_1DA79EB2C(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 3) {
    return sub_1DA79DA70(result, a2);
  }
  if (a3 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DA79EB98(uint64_t a1, uint64_t a2)
{
  return sub_1DA79EBC0(a1, a2, MEMORY[0x1E4F277C0], (uint64_t)&off_1F34D5038);
}

uint64_t sub_1DA79EBAC(uint64_t a1, uint64_t a2)
{
  return sub_1DA79EBC0(a1, a2, MEMORY[0x1E4FBB1A0], (uint64_t)&off_1F34D99C8);
}

uint64_t sub_1DA79EBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v8[3] = a3;
  v8[4] = a4;
  v8[0] = a1;
  v8[1] = a2;
  sub_1DA7A1A44((uint64_t)v8, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);

    uint64_t v4 = 0;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return (uint64_t)v4;
  }
  if ((swift_dynamicCast() & 1) != 0
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    uint64_t v4 = v6;
    goto LABEL_9;
  }
  uint64_t result = sub_1DA98CBB8();
  __break(1u);
  return result;
}

uint64_t sub_1DA79ED98(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1DA79EDF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t dispatch thunk of CodableHostConfiguration.init(data:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of CodableHostConfiguration.toData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CodableHostConfiguration.extensionIdentities.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CodableHostConfiguration.succinctDescription()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1DA79EED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

void sub_1DA79EED8()
{
  sub_1DA7A02EC();
  if (v0 <= 0x3F)
  {
    sub_1DA989B88();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F)
      {
        sub_1DA989B18();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *sub_1DA79F01C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v4 = *(void *)(v32 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v31 = sub_1DA989B88();
  uint64_t v6 = *(void *)(v31 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v28 = v5 + v7;
  uint64_t v29 = *(void *)(v6 + 64);
  uint64_t v30 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v30 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = sub_1DA989B18();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = (v7 | *(unsigned char *)(v4 + 80) | v9 | *(unsigned char *)(v12 + 80));
  if (v15 <= 7
    && ((v14
       + ((v29 + (v28 & ~(unint64_t)v7) + v9) & ~(unint64_t)v9)) & ~v13)
     + *(void *)(*(void *)(v11 - 8) + 64) <= 0x18
    && ((v7 | *(_DWORD *)(v4 + 80) | v9 | *(_DWORD *)(v12 + 80)) & 0x100000) == 0)
  {
    uint64_t v26 = ~v13;
    uint64_t v27 = v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v32);
    BOOL v19 = a1;
    unint64_t v20 = ((unint64_t)a1 + v28) & ~(unint64_t)v7;
    unint64_t v21 = ((unint64_t)a2 + v28) & ~(unint64_t)v7;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v20, v21, v31);
    uint64_t v22 = v21 + v29;
    unint64_t v23 = (v20 + v29 + v9) & ~(unint64_t)v9;
    unint64_t v24 = (v22 + v9) & ~(unint64_t)v9;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v23, v24, v30);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))((v23 + v14) & v26, (v24 + v14) & v26, v27);
  }
  else
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    BOOL v19 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  return v19;
}

uint64_t sub_1DA79F2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(v5 + 56);
  uint64_t v7 = sub_1DA989B88();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 8;
  unint64_t v10 = (v6 + a1 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v11 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v12 = v11 + 8;
  unint64_t v13 = (v10 + *(void *)(v9 + 56) + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  (*(void (**)(unint64_t))(v11 + 8))(v13);
  uint64_t v14 = *(void *)(v12 + 56);
  uint64_t v15 = sub_1DA989B18();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(unint64_t, uint64_t))(v16 + 8);
  uint64_t v18 = v15;
  unint64_t v19 = (v13 + v14 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);

  return v17(v19, v18);
}

uint64_t sub_1DA79F43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_1DA989B88();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = (v8 + v12 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, v15, v9);
  uint64_t v16 = *(void *)(v11 + 48);
  uint64_t v17 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v18 = v17 + 16;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v21, v22);
  uint64_t v23 = *(void *)(v18 + 48);
  uint64_t v24 = sub_1DA989B18();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 16))((v23 + *(unsigned __int8 *)(v25 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (v23 + *(unsigned __int8 *)(v25 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), v24);
  return a1;
}

uint64_t sub_1DA79F5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = sub_1DA989B88();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = (v8 + v12 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v14, v15, v9);
  uint64_t v16 = *(void *)(v11 + 40);
  uint64_t v17 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v18 = v17 + 24;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v21, v22);
  uint64_t v23 = *(void *)(v18 + 40);
  uint64_t v24 = sub_1DA989B18();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 24))((v23 + *(unsigned __int8 *)(v25 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (v23 + *(unsigned __int8 *)(v25 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), v24);
  return a1;
}

uint64_t sub_1DA79F724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = sub_1DA989B88();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = (v8 + v12 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v14, v15, v9);
  uint64_t v16 = *(void *)(v11 + 32);
  uint64_t v17 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v18 = v17 + 32;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v17 + 32))(v21, v22);
  uint64_t v23 = *(void *)(v18 + 32);
  uint64_t v24 = sub_1DA989B18();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 32))((v23 + *(unsigned __int8 *)(v25 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (v23 + *(unsigned __int8 *)(v25 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), v24);
  return a1;
}

uint64_t sub_1DA79F898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v9 = sub_1DA989B88();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = (v8 + v12 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v14, v15, v9);
  uint64_t v16 = *(void *)(v11 + 24);
  uint64_t v17 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v18 = v17 + 40;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v17 + 40))(v21, v22);
  uint64_t v23 = *(void *)(v18 + 24);
  uint64_t v24 = sub_1DA989B18();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 40))((v23 + *(unsigned __int8 *)(v25 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (v23 + *(unsigned __int8 *)(v25 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), v24);
  return a1;
}

uint64_t sub_1DA79FA0C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v37 = sub_1DA989B88();
  uint64_t v8 = *(void *)(v37 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7) {
    unsigned int v10 = v7;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v35 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v35 - 8);
  unsigned int v36 = *(_DWORD *)(v11 + 84);
  if (v36 <= v10) {
    unsigned int v12 = v10;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v13 = *(void *)(sub_1DA989B18() - 8);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = *(void *)(v8 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = *(void *)(v11 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
  if (*(_DWORD *)(v13 + 84) <= v12) {
    unsigned int v19 = v12;
  }
  else {
    unsigned int v19 = *(_DWORD *)(v13 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v20 = *(void *)(v6 + 64) + v14;
  uint64_t v21 = a1;
  if (a2 <= v19) {
    goto LABEL_30;
  }
  uint64_t v22 = ((v17 + v18 + ((v15 + v16 + (v20 & ~v14)) & ~v16)) & ~v18) + *(void *)(v13 + 64);
  char v23 = 8 * v22;
  if (v22 > 3) {
    goto LABEL_13;
  }
  unsigned int v25 = ((a2 - v19 + ~(-1 << v23)) >> v23) + 1;
  if (HIWORD(v25))
  {
    int v24 = *(_DWORD *)((char *)a1 + v22);
    if (!v24) {
      goto LABEL_30;
    }
    goto LABEL_20;
  }
  if (v25 > 0xFF)
  {
    int v24 = *(unsigned __int16 *)((char *)a1 + v22);
    if (!*(unsigned __int16 *)((char *)a1 + v22)) {
      goto LABEL_30;
    }
    goto LABEL_20;
  }
  if (v25 >= 2)
  {
LABEL_13:
    int v24 = *((unsigned __int8 *)a1 + v22);
    if (!*((unsigned char *)a1 + v22)) {
      goto LABEL_30;
    }
LABEL_20:
    int v26 = (v24 - 1) << v23;
    if (v22 > 3) {
      int v26 = 0;
    }
    if (v22)
    {
      if (v22 <= 3) {
        int v27 = v22;
      }
      else {
        int v27 = 4;
      }
      switch(v27)
      {
        case 2:
          int v28 = *a1;
          break;
        case 3:
          int v28 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v28 = *(_DWORD *)a1;
          break;
        default:
          int v28 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v28 = 0;
    }
    return v19 + (v28 | v26) + 1;
  }
LABEL_30:
  if (!v19) {
    return 0;
  }
  if (v7 == v19)
  {
    uint64_t v29 = v38;
    uint64_t v30 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v31 = v7;
    return v30(v21, v31, v29);
  }
  uint64_t v21 = (unsigned __int16 *)(((unint64_t)a1 + v20) & ~v14);
  if (v9 == v19)
  {
    uint64_t v30 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v31 = v9;
    uint64_t v29 = v37;
    return v30(v21, v31, v29);
  }
  uint64_t v21 = (unsigned __int16 *)(((unint64_t)v21 + v15 + v16) & ~v16);
  if (v36 == v19)
  {
    uint64_t v30 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v31 = v36;
    uint64_t v29 = v35;
    return v30(v21, v31, v29);
  }
  unint64_t v33 = ((unint64_t)v21 + v17 + v18) & ~v18;
  char v34 = *(uint64_t (**)(unint64_t))(v13 + 48);

  return v34(v33);
}

void sub_1DA79FE48(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90) - 8);
  uint64_t v35 = v6;
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(sub_1DA989B88() - 8);
  uint64_t v36 = v8;
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= v7) {
    unsigned int v10 = v7;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v34 = *(_DWORD *)(v11 + 84);
  if (v34 <= v10) {
    unsigned int v12 = v10;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v13 = *(void *)(sub_1DA989B18() - 8);
  uint64_t v14 = v13;
  if (*(_DWORD *)(v13 + 84) <= v12) {
    unsigned int v15 = v12;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = *(void *)(v6 + 64) + v16;
  uint64_t v18 = *(void *)(v8 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v20 = *(void *)(v11 + 64);
  uint64_t v21 = *(unsigned __int8 *)(v13 + 80);
  size_t v22 = ((v20 + v21 + ((v18 + v19 + (v17 & ~v16)) & ~v19)) & ~v21) + *(void *)(v13 + 64);
  if (a3 <= v15)
  {
    int v25 = 0;
    char v23 = a1;
    unsigned int v24 = a2;
  }
  else
  {
    char v23 = a1;
    unsigned int v24 = a2;
    if (v22 <= 3)
    {
      unsigned int v28 = ((a3 - v15 + ~(-1 << (8 * v22))) >> (8 * v22)) + 1;
      if (HIWORD(v28))
      {
        int v25 = 4;
      }
      else if (v28 >= 0x100)
      {
        int v25 = 2;
      }
      else
      {
        int v25 = v28 > 1;
      }
    }
    else
    {
      int v25 = 1;
    }
  }
  if (v15 < v24)
  {
    unsigned int v26 = ~v15 + v24;
    if (v22 < 4)
    {
      int v27 = (v26 >> (8 * v22)) + 1;
      if (v22)
      {
        int v29 = v26 & ~(-1 << (8 * v22));
        bzero(v23, v22);
        if (v22 == 3)
        {
          *(_WORD *)char v23 = v29;
          void v23[2] = BYTE2(v29);
        }
        else if (v22 == 2)
        {
          *(_WORD *)char v23 = v29;
        }
        else
        {
          *char v23 = v29;
        }
      }
    }
    else
    {
      bzero(v23, v22);
      *(_DWORD *)char v23 = v26;
      int v27 = 1;
    }
    switch(v25)
    {
      case 1:
        v23[v22] = v27;
        return;
      case 2:
        *(_WORD *)&v23[v22] = v27;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&v23[v22] = v27;
        return;
      default:
        return;
    }
  }
  switch(v25)
  {
    case 1:
      v23[v22] = 0;
      if (!v24) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&v23[v22] = 0;
      if (!v24) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x1DA7A02C4);
    case 4:
      *(_DWORD *)&v23[v22] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (!v24) {
        return;
      }
LABEL_30:
      if (v7 == v15)
      {
        uint64_t v30 = *(void (**)(unsigned char *))(v35 + 56);
        uint64_t v31 = v23;
        goto LABEL_34;
      }
      uint64_t v31 = (unsigned char *)((unint64_t)&v23[v17] & ~v16);
      if (v9 == v15)
      {
        uint64_t v30 = *(void (**)(unsigned char *))(v36 + 56);
LABEL_34:
LABEL_36:
        v30(v31);
        return;
      }
      uint64_t v31 = (unsigned char *)((unint64_t)&v31[v18 + v19] & ~v19);
      if (v34 == v15)
      {
        uint64_t v30 = *(void (**)(unsigned char *))(v11 + 56);
        goto LABEL_36;
      }
      unint64_t v32 = (unint64_t)&v31[v20 + v21] & ~v21;
      unint64_t v33 = *(void (**)(unint64_t))(v14 + 56);
      v33(v32);
      return;
  }
}

void sub_1DA7A02EC()
{
  if (!qword_1EBE5A148)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE5A0C0);
    sub_1DA7A0410((unint64_t *)&unk_1EBE5A088, &qword_1EBE5A0C0);
    sub_1DA7A0410((unint64_t *)&unk_1EBE5A0B0, &qword_1EBE5A0C0);
    sub_1DA7A0410(&qword_1EBE5A098, &qword_1EBE5A0C0);
    sub_1DA7A0410((unint64_t *)&unk_1EBE5A0A0, &qword_1EBE5A0C0);
    unint64_t v0 = sub_1DA989AE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBE5A148);
    }
  }
}

uint64_t sub_1DA7A0410(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ChronoMetadataStore.HostConfigurationStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.HostConfigurationStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.HostConfigurationStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.HostConfigurationStore.allHosts<A>(matching:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableHostConfigurationStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.MutableHostConfigurationStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutableHostConfigurationStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableHostConfigurationStore.set<A>(host:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableHostConfigurationStore.set(hostIdentity:hostType:activationState:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableHostConfigurationStore.remove(hostIdentity:hostType:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

void type metadata accessor for RBColorMode(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1DA7A05D0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DA7A05F0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPath(uint64_t a1)
{
}

void type metadata accessor for BSSqliteDatabaseConnectionDataProtectionClass(uint64_t a1)
{
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
}

void type metadata accessor for CHSTintAccentedDesaturatedMode(uint64_t a1)
{
}

void type metadata accessor for CHSColorSchemes(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for CHSPlatform(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for RBDrawableStatisticsKey(uint64_t a1)
{
}

uint64_t sub_1DA7A06E0()
{
  return sub_1DA7A0770(&qword_1EA8E56A8, type metadata accessor for RBDrawableStatisticsKey);
}

uint64_t sub_1DA7A0728()
{
  return sub_1DA7A0770(&qword_1EA8E56B0, type metadata accessor for RBDrawableStatisticsKey);
}

uint64_t sub_1DA7A0770(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA7A07B8()
{
  return sub_1DA7A0770(&qword_1EA8E56B8, type metadata accessor for URLResourceKey);
}

uint64_t sub_1DA7A0800()
{
  return sub_1DA7A0770(&qword_1EA8E56C0, type metadata accessor for URLResourceKey);
}

uint64_t sub_1DA7A0848()
{
  return sub_1DA7A0770(&qword_1EA8E56C8, type metadata accessor for CHSColorSchemes);
}

uint64_t sub_1DA7A0890()
{
  return sub_1DA7A0770(&qword_1EA8E56D0, type metadata accessor for CHSColorSchemes);
}

uint64_t sub_1DA7A08D8()
{
  return sub_1DA7A0770(&qword_1EA8E56D8, type metadata accessor for CHSColorSchemes);
}

uint64_t sub_1DA7A0920()
{
  return sub_1DA7A0770(&qword_1EA8E56E0, type metadata accessor for CHSColorSchemes);
}

uint64_t sub_1DA7A0968()
{
  return sub_1DA7A0770(&qword_1EA8E56E8, type metadata accessor for FileProtectionType);
}

uint64_t sub_1DA7A09B0()
{
  return sub_1DA7A0770(&qword_1EA8E56F0, type metadata accessor for FileProtectionType);
}

uint64_t sub_1DA7A09F8()
{
  return sub_1DA7A0770(&qword_1EA8E56F8, type metadata accessor for FileProtectionType);
}

uint64_t sub_1DA7A0A40()
{
  return sub_1DA7A0770(&qword_1EA8E5700, type metadata accessor for CGPath);
}

uint64_t sub_1DA7A0A88()
{
  return sub_1DA7A0770(&qword_1EA8E5708, type metadata accessor for CGPath);
}

uint64_t sub_1DA7A0AD0()
{
  return sub_1DA7A0770(&qword_1EBE66B20, type metadata accessor for URLResourceKey);
}

uint64_t sub_1DA7A0B18()
{
  return sub_1DA7A0770(&qword_1EBE62B18, type metadata accessor for RBDrawableStatisticsKey);
}

uint64_t sub_1DA7A0B60(double a1)
{
  v5[3] = MEMORY[0x1E4FBB3D0];
  v5[4] = &off_1F34D99D0;
  *(double *)uint64_t v5 = a1;
  sub_1DA7A1A44((uint64_t)v5, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);

    uint64_t v1 = 0;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    return (uint64_t)v1;
  }
  if ((swift_dynamicCast() & 1) != 0
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    uint64_t v1 = v3;
    goto LABEL_9;
  }
  uint64_t result = sub_1DA98CBB8();
  __break(1u);
  return result;
}

uint64_t sub_1DA7A0D48(uint64_t a1)
{
  v6[3] = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
  v6[4] = &off_1F34D9D00;
  v6[0] = a1;
  sub_1DA7A1A44((uint64_t)v6, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);

    unint64_t v2 = 0;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    return (uint64_t)v2;
  }
  if ((swift_dynamicCast() & 1) != 0
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    unint64_t v2 = v4;
    goto LABEL_9;
  }
  uint64_t result = sub_1DA98CBB8();
  __break(1u);
  return result;
}

uint64_t sub_1DA7A0F30()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](86);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA7A10D0()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](60);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA7A122C()
{
  uint64_t v0 = sub_1DA989B88();
  uint64_t v17 = *(void *)(v0 - 8);
  uint64_t v18 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v16 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  unint64_t v2 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](163);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v3 = v22;
  sub_1DA7BEF9C(v2);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = 0;
    unint64_t v20 = 0xE000000000000000;
    unint64_t v5 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
    MEMORY[0x1E01772A0](57);
    unint64_t v21 = v5;
    sub_1DA98C148();
    sub_1DA98CA38();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA98CA38();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA98CA38();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA98CA38();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA98CA38();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA98CA38();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    unsigned int v7 = v16;
    uint64_t v6 = v17;
    uint64_t v8 = v18;
    (*(void (**)(char *, void, uint64_t))(v17 + 104))(v16, *MEMORY[0x1E4F58B38], v18);
    uint64_t v9 = sub_1DA989B78();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v7, v8);
    if (v9 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v10 = sub_1DA79E944(v9);
      unint64_t v12 = v11;
      char v14 = v13;
      sub_1DA8E40CC(v10, v11, v13);
      sub_1DA79EB2C(v10, v12, v14);
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA7BEF9C(v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      unint64_t v15 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
      MEMORY[0x1E01772A0](16);
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA7BEF9C(v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1DA7A18F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

_OWORD *sub_1DA7A1930(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1DA7A1940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExtensionMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA7A19A4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1DA7A19BC(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DA7A1A08(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1DA7A1A44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1DA7A1AA8(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 3) {
    return sub_1DA79ED98(result, a2);
  }
  if (a3 == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DA7A1ACC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1DA79DA70(a1, a2);
  }
  return a1;
}

uint64_t sub_1DA7A1AE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DA7A1B3C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1DA79ED98(a1, a2);
  }
  return a1;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for RBLayerCopyImageKey(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void type metadata accessor for CHSTintFilterStyle(uint64_t a1)
{
}

void type metadata accessor for CHSWidgetLocation(uint64_t a1)
{
}

void sub_1DA7A1BF8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1DA7A1C40()
{
  return sub_1DA7A0770(&qword_1EA8E5778, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1DA7A1C88()
{
  return sub_1DA7A0770(&qword_1EA8E5780, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1DA7A1CD0()
{
  return sub_1DA7A0770(&qword_1EA8E5788, type metadata accessor for RBLayerCopyImageKey);
}

uint64_t sub_1DA7A1D18()
{
  return sub_1DA7A0770(&qword_1EA8E5790, type metadata accessor for RBLayerCopyImageKey);
}

uint64_t sub_1DA7A1D60()
{
  return sub_1DA7A0770(&qword_1EA8E5798, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1DA7A1DA8()
{
  return sub_1DA7A0770((unint64_t *)&unk_1EA8E57A0, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1DA7A1DF0()
{
  return sub_1DA7A0770((unint64_t *)&qword_1EBE65C98, type metadata accessor for CFString);
}

uint64_t sub_1DA7A1E38()
{
  return sub_1DA7A0770(&qword_1EBE62AB0, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1DA7A1E80()
{
  return sub_1DA7A0770(&qword_1EBE66A98, type metadata accessor for CFString);
}

uint64_t sub_1DA7A1EC8()
{
  return sub_1DA7A0770(&qword_1EBE62AF0, type metadata accessor for RBLayerCopyImageKey);
}

uint64_t sub_1DA7A1F10()
{
  return sub_1DA7A0770(&qword_1EBE64D58, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1DA7A1F58(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t dispatch thunk of RemoteWidgetExtensionProviding.remoteWidgetExtensionsDidChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RemoteWidgetExtensionProviding.start()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t RemoteExtensionStore.__allocating_init(_:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t RemoteExtensionStore.init(_:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

unint64_t RemoteExtensionStore.allExtensions()()
{
  swift_retain();
  unint64_t v0 = sub_1DA90C29C();
  swift_release();
  return v0;
}

uint64_t RemoteExtensionStore.update(remoteWidgetExtensionInfo:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  v8[2] = a1;
  uint64_t v3 = *(void *)(v2 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_allocObject();
  uint64_t v4 = sub_1DA91BE30();
  uint64_t v5 = *(void *)(v2 + 128);
  uint64_t v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  swift_retain();
  sub_1DA7C2D00(0xD00000000000001ALL, 0x80000001DA99C9F0, v3, (void (*)(uint64_t))sub_1DA7A24BC, (uint64_t)v8, (uint64_t)v4);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_release();
  sub_1DA8FB09C();
  return swift_release();
}

void RemoteExtensionStore.removeExtension(with:)(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void **)(v3 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_initStackObject();
  uint64_t v5 = sub_1DA91BE30();
  uint64_t v6 = *(void *)(v3 + 128);
  unsigned int v7 = *(os_unfair_lock_s **)(v6 + 16);
  id v8 = a1;
  swift_retain();
  os_unfair_lock_lock(v7);
  swift_retain();
  sub_1DA7C2D1C(0xD00000000000001ALL, 0x80000001DA99CA10, v4, (uint64_t)v5, v8);

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  sub_1DA8FB09C();
  swift_release();
}

uint64_t sub_1DA7A22AC(uint64_t a1, void *a2)
{
  return ChronoMetadataStore.MutableRemoteExtensionStore.removeExtension(with:)(a2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RemoteExtensionStore.removeAllExtensions()()
{
  sub_1DA8F5D3C(0xD00000000000001DLL, 0x80000001DA99CA30, *(void *)(v0 + 16));
}

uint64_t RemoteExtensionStore.deinit()
{
  swift_release();
  return v0;
}

uint64_t RemoteExtensionStore.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

unint64_t sub_1DA7A2360()
{
  swift_retain();
  unint64_t v0 = sub_1DA90C29C();
  swift_release();
  return v0;
}

uint64_t sub_1DA7A23B4(uint64_t a1)
{
  v2[2] = a1;
  return ChronoMetadataStore.update(reason:_:)(0xD00000000000001ALL, 0x80000001DA99C9F0, (void (*)(uint64_t))sub_1DA7A25D8, (uint64_t)v2);
}

void sub_1DA7A2418(void *a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  id v3 = a1;
  sub_1DA91C0AC(0xD00000000000001ALL, 0x80000001DA99CA10, v2, v3);
}

uint64_t sub_1DA7A2484()
{
  return sub_1DA8F5D3C(0xD00000000000001DLL, 0x80000001DA99CA30, *(void *)(*(void *)v0 + 16));
}

uint64_t sub_1DA7A24BC()
{
  return ChronoMetadataStore.MutableRemoteExtensionStore.update(remoteWidgetExtensionInfo:)(*(void *)(v0 + 16));
}

uint64_t dispatch thunk of RemoteExtensionRetrieving.allExtensions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RemoteExtensionStoring.update(remoteWidgetExtensionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of RemoteExtensionStoring.removeExtension(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of RemoteExtensionStoring.removeAllExtensions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for RemoteExtensionStore()
{
  return self;
}

uint64_t method lookup function for RemoteExtensionStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteExtensionStore);
}

uint64_t dispatch thunk of RemoteExtensionStore.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1DA7A25D8()
{
  return sub_1DA7A24BC();
}

uint64_t dispatch thunk of DescriptorServicing.start(descriptorCache:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of DescriptorServicing.reloadDescriptors(for:userInitiated:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of DescriptorServicing.reloadDescriptors(for:userInitiated:reason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 48))();
}

{
  return (*(uint64_t (**)(void))(a8 + 56))();
}

uint64_t dispatch thunk of DescriptorServicing.getDescriptorsReloadingIfNecessary(forExtensionBundleIdentifier:userInitiated:reason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 64))();
}

uint64_t dispatch thunk of DescriptorServicing.getDescriptorsReloadingIfNecessary(forContainerBundleIdentifier:userInitiated:reason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 72))();
}

uint64_t dispatch thunk of DescriptorServicing.modifyDescriptorEnablement(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of DescriptorServicing.discoverDescriptors(userInitiated:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of DescriptorServicing.reloadConfigurationRecommendations(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_1DA7A26A4()
{
  uint64_t v0 = sub_1DA98C5F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DA98C598();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1DA98B4A8();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1DA7A6D9C();
  sub_1DA98B468();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1DA7A6DDC((unint64_t *)&qword_1EBE65CA0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE65C80);
  sub_1DA7A6E24((unint64_t *)&qword_1EBE65C88, &qword_1EBE65C80);
  sub_1DA98C918();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC68], v0);
  uint64_t result = sub_1DA98C638();
  qword_1EBE64A40 = result;
  return result;
}

uint64_t sub_1DA7A28E4()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DA7A28F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 120);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1DA7A2998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 128);
  swift_beginAccess();
  uint64_t v4 = sub_1DA98C838();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DA7A2A48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 176);
  swift_beginAccess();
  uint64_t v4 = sub_1DA98C838();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DA7A2AF8(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 176);
  swift_beginAccess();
  uint64_t v4 = sub_1DA98C838();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_1DA7A2BB0()
{
  return swift_weakLoadStrong();
}

uint64_t sub_1DA7A2BC0()
{
  sub_1DA7A4950();

  return swift_release();
}

uint64_t sub_1DA7A2BF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a3)
  {
    sub_1DA98C038();
    if (a4) {
      goto LABEL_3;
    }
LABEL_6:
    memset(v13, 0, sizeof(v13));
    id v10 = a5;
    id v11 = a1;
    if (!a5) {
      goto LABEL_7;
    }
    goto LABEL_4;
  }
  if (!a4) {
    goto LABEL_6;
  }
LABEL_3:
  swift_unknownObjectRetain();
  id v8 = a5;
  id v9 = a1;
  sub_1DA98C8C8();
  swift_unknownObjectRelease();
  if (a5)
  {
LABEL_4:
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_1DA7A6DDC(&qword_1EBE64D50, type metadata accessor for NSKeyValueChangeKey);
    sub_1DA98BE88();
  }
LABEL_7:
  sub_1DA7A4A44();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1DA7A6D20((uint64_t)v13);
}

uint64_t sub_1DA7A2D18()
{
  return sub_1DA7A4950();
}

void sub_1DA7A2D20()
{
}

id sub_1DA7A2D64()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UserDefault._KVOUserDefaultsObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DA7A2DD8()
{
  return swift_weakDestroy();
}

uint64_t UserDefault.__allocating_init(domain:key:defaultValue:appleInternalOnly:)(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  int has_internal_ui = os_variant_has_internal_ui();
  uint64_t v14 = sub_1DA7A54FC(a1, a2, a3, a4, a5, a6, has_internal_ui);
  uint64_t v15 = *(void *)(v6 + 80);
  uint64_t v16 = type metadata accessor for UserDefault.AppleInternalOnlyOption();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a6, v16);
  (*(void (**)(void *, uint64_t))(*(void *)(v15 - 8) + 8))(a5, v15);
  return v14;
}

void UserDefault.deinit()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *((void *)*v0 + 20);
  uint64_t v3 = *(id *)((char *)v0 + v2);
  if (v3)
  {
    uint64_t v4 = v0;
    id v5 = v0[2];
    swift_bridgeObjectRetain();
    id v6 = v3;
    unsigned int v7 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_removeObserver_forKeyPath_, v6, v7);

    id v8 = *(id *)((char *)v4 + v2);
    if (v8)
    {
      id v9 = v8;
      sub_1DA7A4950();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void))(*(void *)(v1[10] - 8) + 8))((char *)v4 + *((void *)*v4 + 15), v1[10]);
      id v10 = (char *)v4 + *((void *)*v4 + 16);
      uint64_t v11 = sub_1DA98C838();
      unint64_t v12 = *(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
      v12(v10, v11);
      swift_release();
      swift_release();

      swift_release();
      v12((char *)v4 + *((void *)*v4 + 22), v11);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t UserDefault.__deallocating_deinit()
{
  UserDefault.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA7A3174()
{
  uint64_t v1 = *(void *)(v0 + *(void *)(*(void *)v0 + 168));
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1DA7A31F0(v0, &v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v4;
}

uint64_t sub_1DA7A31F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  id v6 = (char *)&v9 - v5;
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7A42DC((uint64_t)v6);
  sub_1DA98CE08();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  unint64_t v8 = v10;
  *a2 = v9;
  a2[1] = v8;
  return result;
}

uint64_t sub_1DA7A3334(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1DA7A5618();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8);

  return v4(a1);
}

void (*sub_1DA7A33B0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  sub_1DA7A4218();
  return sub_1DA7A3484;
}

void sub_1DA7A3484(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    sub_1DA7A55A0((uint64_t)v3);
    unsigned int v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_1DA7A55A0(*(void *)(*(void *)a1 + 32));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t sub_1DA7A3560()
{
  return swift_retain();
}

uint64_t sub_1DA7A357C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = &v17[-v4];
  uint64_t v6 = sub_1DA98C838();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = &v17[-v11];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(&v17[-v11], 1, 1, v2);
  uint64_t v13 = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 168));
  uint64_t v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_retain();
  os_unfair_lock_lock(v14);
  sub_1DA7A3834(v1, (uint64_t)v12);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  swift_release();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(v10, v12, v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
  {
    uint64_t v15 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
    v15(v10, v6);
    return ((uint64_t (*)(unsigned char *, uint64_t))v15)(v12, v6);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v10, v2);
    swift_retain();
    sub_1DA989FE8();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t sub_1DA7A3834(uint64_t *a1, uint64_t a2)
{
  uint64_t v82 = a2;
  uint64_t v74 = *a1;
  uint64_t v3 = *(void *)(v74 + 80);
  uint64_t v4 = sub_1DA98C838();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v76 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v7 = ((char *)&v74 - v6);
  uint64_t v85 = *(void *)(v4 - 8);
  uint64_t v8 = v85;
  uint64_t v9 = MEMORY[0x1F4188790](v5);
  v80 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v75 = (char *)&v74 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v74 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v74 - v17;
  uint64_t v19 = *(void **)(v3 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v16);
  char v83 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v77 = (char *)&v74 - v23;
  MEMORY[0x1F4188790](v22);
  int v25 = (char *)&v74 - v24;
  sub_1DA7A42DC((uint64_t)&v74 - v24);
  unsigned int v26 = (void (*)(char *, char *, uint64_t))v19[2];
  uint64_t v91 = v25;
  uint64_t v86 = v19 + 2;
  uint64_t v87 = v26;
  v26(v18, v25, v3);
  uint64_t v78 = (void (*)(char *, void, uint64_t, uint64_t))v19[7];
  v79 = v19 + 7;
  v78(v18, 0, 1, v3);
  uint64_t v84 = a1;
  sub_1DA7A2A48((uint64_t)v15);
  int v27 = (char *)v7 + *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v81 = v8;
  unsigned int v28 = *(void (**)(NSObject *, char *, uint64_t))(v8 + 16);
  v28(v7, v18, v4);
  uint64_t v92 = v4;
  v28(v27, v15, v4);
  uint64_t v88 = v19;
  os_log_t v89 = v7;
  int v29 = (uint64_t (*)(char *, uint64_t, uint64_t))v19[6];
  if (v29((char *)v7, 1, v3) == 1)
  {
    os_log_t v30 = v89;
    uint64_t v31 = *(void (**)(char *, uint64_t))(v85 + 8);
    unint64_t v32 = v15;
    uint64_t v33 = v92;
    v31(v32, v92);
    v31(v18, v33);
    int v34 = v29(v27, 1, v3);
    uint64_t v35 = v3;
    if (v34 == 1)
    {
      v31((char *)v30, v33);
      return ((uint64_t (*)(char *, uint64_t))v88[1])(v91, v3);
    }
    char v40 = v88;
    os_log_t v42 = v30;
    char v41 = v84;
    goto LABEL_7;
  }
  uint64_t v37 = v75;
  v28(v75, (char *)v89, v92);
  int v38 = v29(v27, 1, v3);
  uint64_t v35 = v3;
  if (v38 == 1)
  {
    uint64_t v31 = *(void (**)(char *, uint64_t))(v85 + 8);
    unint64_t v39 = v15;
    uint64_t v33 = v92;
    v31(v39, v92);
    v31(v18, v33);
    char v40 = v88;
    ((void (*)(char *, uint64_t))v88[1])(v37, v35);
    char v41 = v84;
    os_log_t v42 = v89;
LABEL_7:
    (*(void (**)(os_log_t, uint64_t))(v76 + 8))(v42, TupleTypeMetadata2);
    unint64_t v43 = v83;
    goto LABEL_8;
  }
  char v40 = v88;
  uint64_t v53 = v77;
  ((void (*)(char *, char *, uint64_t))v88[4])(v77, v27, v35);
  LODWORD(TupleTypeMetadata2) = sub_1DA98BFF8();
  char v54 = (void (*)(char *, uint64_t))v40[1];
  v54(v53, v35);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v85 + 8);
  char v55 = v15;
  uint64_t v33 = v92;
  v31(v55, v92);
  v31(v18, v33);
  v54(v37, v35);
  v31((char *)v89, v33);
  unint64_t v43 = v83;
  char v41 = v84;
  if (TupleTypeMetadata2) {
    return ((uint64_t (*)(char *, uint64_t))v54)(v91, v35);
  }
LABEL_8:
  if (qword_1EBE64618 != -1) {
    swift_once();
  }
  TupleTypeMetadata2 = (uint64_t)v31;
  uint64_t v44 = sub_1DA989F38();
  __swift_project_value_buffer(v44, (uint64_t)qword_1EBE6F448);
  char v45 = v87;
  v87(v43, v91, v35);
  swift_retain_n();
  char v46 = sub_1DA989F18();
  int v47 = sub_1DA98C548();
  if (os_log_type_enabled(v46, (os_log_type_t)v47))
  {
    LODWORD(v85) = v47;
    os_log_t v89 = v46;
    uint64_t v48 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v95 = v49;
    *(_DWORD *)uint64_t v48 = 136315906;
    unint64_t v50 = v41[4];
    uint64_t v84 = (void *)v49;
    if (v50)
    {
      uint64_t v51 = v41[3];
      unint64_t v52 = v50;
    }
    else
    {
      id v56 = objc_msgSend(self, sel_mainBundle, v74);
      id v57 = objc_msgSend(v56, sel_bundleIdentifier);

      if (v57)
      {
        uint64_t v51 = sub_1DA98C038();
        unint64_t v52 = v58;
      }
      else
      {
        unint64_t v52 = 0xE300000000000000;
        uint64_t v51 = 7104878;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v93 = sub_1DA8C5E00(v51, v52, &v95);
    sub_1DA98C858();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2080;
    uint64_t v59 = v41[5];
    unint64_t v60 = v41[6];
    swift_bridgeObjectRetain();
    uint64_t v93 = sub_1DA8C5E00(v59, v60, &v95);
    char v83 = (char *)&v94;
    sub_1DA98C858();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 22) = 2080;
    uint64_t v61 = (uint64_t)v77;
    v87(v77, v43, v35);
    uint64_t v62 = sub_1DA98C0A8();
    uint64_t v93 = sub_1DA8C5E00(v62, v63, &v95);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    BOOL v64 = v88;
    ((void (*)(char *, uint64_t))v88[1])(v43, v35);
    *(_WORD *)(v48 + 32) = 2080;
    char v40 = v64;
    sub_1DA7A28F4(v61);
    uint64_t v65 = sub_1DA98C0A8();
    uint64_t v93 = sub_1DA8C5E00(v65, v66, &v95);
    sub_1DA98C858();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v67 = v89;
    _os_log_impl(&dword_1DA795000, v89, (os_log_type_t)v85, "Preferences[%s]: %s preference changed to %s [default=%s]", (uint8_t *)v48, 0x2Au);
    uint64_t v68 = v84;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v68, -1, -1);
    uint64_t v69 = v48;
    char v45 = v87;
    MEMORY[0x1E0178DA0](v69, -1, -1);

    uint64_t v33 = v92;
  }
  else
  {
    swift_release_n();
    ((void (*)(char *, uint64_t))v40[1])(v43, v35);

    swift_release_n();
  }
  uint64_t v70 = (uint64_t)v80;
  uint64_t v71 = v91;
  v45(v80, v91, v35);
  unint64_t v72 = (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v78;
  v78((char *)v70, 0, 1, v35);
  sub_1DA7A2AF8(v70);
  uint64_t v73 = v82;
  ((void (*)(uint64_t, uint64_t))TupleTypeMetadata2)(v82, v33);
  ((void (*)(uint64_t, char *, uint64_t))v40[4])(v73, v71, v35);
  return v72(v73, 0, 1, v35);
}

uint64_t sub_1DA7A4218()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for UnfairLock();
  uint64_t v4 = *(void *)(v2 + 80);
  swift_retain();
  sub_1DA7BBC88((void (*)(uint64_t))sub_1DA7A6EB8, v1, v3, v4, (uint64_t)&off_1F34D53C8);
  return swift_release();
}

uint64_t sub_1DA7A42DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *((void *)*v1 + 10);
  uint64_t v5 = sub_1DA98C838();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v20 - v10;
  os_unfair_lock_assert_owner((*(const os_unfair_lock ***)((char *)v1 + v3[21]))[2]);
  sub_1DA7A2998((uint64_t)v11);
  uint64_t v12 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v4) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v11, v4);
  }
  uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v21 = a1;
  v20(v11, v5);
  id v13 = v1[2];
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_valueForKey_, v14);

  if (v15)
  {
    sub_1DA98C8C8();
    swift_unknownObjectRelease();
    sub_1DA7A1930(&v22, v23);
  }
  else
  {
    memset(v23, 0, sizeof(v23));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B48);
  int v17 = swift_dynamicCast();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v19 = v21;
  if (v17)
  {
    v18(v9, 0, 1, v4);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v19, v9, v4);
  }
  else
  {
    v18(v9, 1, 1, v4);
    sub_1DA7A28F4(v19);
    return ((uint64_t (*)(char *, uint64_t))v20)(v9, v5);
  }
}

void sub_1DA7A45B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v23 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1DA98C838();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v22 - v13;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)((char *)v2 + *(void *)(v3 + 168)) + 16));
  sub_1DA7A2998((uint64_t)v14);
  LODWORD(v3) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v3 == 1)
  {
    sub_1DA7A42DC((uint64_t)v10);
    char v15 = sub_1DA98BFF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    if ((v15 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v23, v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B48);
      swift_dynamicCast();
      if (v25)
      {
        sub_1DA7A1930(&v24, &v26);
        uint64_t v16 = (void *)v2[2];
        __swift_project_boxed_opaque_existential_0(&v26, v27);
        id v17 = v16;
        uint64_t v18 = sub_1DA98CE38();
        swift_bridgeObjectRetain();
        uint64_t v19 = (void *)sub_1DA98C008();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_setObject_forKey_, v18, v19);

        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
      }
      else
      {
        sub_1DA7A6D20((uint64_t)&v24);
        id v20 = (id)v2[2];
        swift_bridgeObjectRetain();
        uint64_t v21 = (void *)sub_1DA98C008();
        swift_bridgeObjectRelease();
        objc_msgSend(v20, sel_removeObjectForKey_, v21);
      }
    }
  }
}

uint64_t sub_1DA7A492C()
{
  return sub_1DA7A3174();
}

uint64_t sub_1DA7A4950()
{
  return swift_weakAssign();
}

id sub_1DA7A4964()
{
  swift_weakInit();
  swift_weakAssign();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UserDefault._KVOUserDefaultsObserver();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_1DA7A4A08()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for UserDefault._KVOUserDefaultsObserver());
  return sub_1DA7A4964();
}

uint64_t sub_1DA7A4A44()
{
  uint64_t v0 = sub_1DA98B438();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DA98B4A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v12 = v4;
    if (qword_1EBE632B0 != -1) {
      swift_once();
    }
    v11[1] = qword_1EBE64A40;
    aBlock[4] = sub_1DA7A6D80;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DA7A6EE0;
    aBlock[3] = &block_descriptor;
    uint64_t v10 = _Block_copy(aBlock);
    swift_retain();
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1DA7A6DDC((unint64_t *)&qword_1EBE658C0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE65C60);
    sub_1DA7A6E24((unint64_t *)&qword_1EBE65C70, (uint64_t *)&unk_1EBE65C60);
    sub_1DA98C918();
    MEMORY[0x1E01777D0](0, v7, v3, v10);
    _Block_release(v10);
    swift_release();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
    return swift_release();
  }
  return result;
}

void sub_1DA7A4D2C()
{
}

uint64_t sub_1DA7A4D5C(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, int a7)
{
  uint64_t v8 = v7;
  LODWORD(v83) = a7;
  uint64_t v81 = a6;
  uint64_t v82 = a4;
  uint64_t v78 = a3;
  uint64_t v12 = *v7;
  uint64_t v13 = *((void *)*v7 + 10);
  uint64_t v14 = sub_1DA98C838();
  uint64_t v71 = *(void *)(v14 - 8);
  uint64_t v72 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v70 = (char *)v67 - v15;
  uint64_t v75 = v12[11];
  uint64_t v16 = type metadata accessor for UserDefault.AppleInternalOnlyOption();
  uint64_t v79 = *(void *)(v16 - 8);
  uint64_t v80 = v16;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v67 - v18;
  uint64_t v20 = *(void *)(v13 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v17);
  uint64_t v68 = (char *)v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v74 = (char *)v67 - v23;
  v7[3] = 0;
  v7[4] = 0;
  long long v24 = (char *)v7 + v12[16];
  uint64_t v76 = v20;
  uint64_t v25 = *(void (**)(void))(v20 + 56);
  uint64_t v69 = v24;
  v25();
  *(id *)((char *)v7 + *((void *)*v7 + 20)) = 0;
  uint64_t v26 = *((void *)*v7 + 21);
  type metadata accessor for UnfairLock();
  uint64_t v27 = swift_allocObject();
  unsigned int v28 = (_DWORD *)swift_slowAlloc();
  *unsigned int v28 = 0;
  *(void *)(v27 + 16) = v28;
  *(id *)((char *)v7 + v26) = (id)v27;
  int v29 = (char *)v8 + *((void *)*v8 + 22);
  uint64_t v77 = v13;
  uint64_t v30 = v13;
  char v31 = (char)v83;
  v67[0] = v25;
  v67[1] = v20 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v25)(v29, 1, 1, v30);
  unint64_t v32 = v19;
  uint64_t v33 = v82;
  if (!a2) {
    goto LABEL_8;
  }
  uint64_t v73 = v32;
  id v34 = objc_msgSend(self, sel_mainBundle);
  id v35 = objc_msgSend(v34, sel_bundleIdentifier);

  if (!v35)
  {
    char v31 = (char)v83;
    unint64_t v32 = v73;
    goto LABEL_9;
  }
  uint64_t v36 = sub_1DA98C038();
  int v38 = v37;

  if ((void *)v36 != a1 || v38 != a2)
  {
    char v39 = sub_1DA98CE58();
    swift_bridgeObjectRelease();
    char v31 = (char)v83;
    unint64_t v32 = v73;
    if (v39) {
      goto LABEL_8;
    }
LABEL_9:
    id v41 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
    swift_bridgeObjectRetain();
    os_log_t v42 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    id v40 = objc_msgSend(v41, sel_initWithSuiteName_, v42);

    if (!v40) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  char v31 = (char)v83;
  unint64_t v32 = v73;
LABEL_8:
  id v40 = objc_msgSend(self, sel_standardUserDefaults);
LABEL_10:
  void v7[2] = v40;
  v7[3] = a1;
  v7[4] = a2;
  swift_bridgeObjectRelease();
  uint64_t v43 = v77;
  v7[5] = v78;
  v7[6] = v33;
  uint64_t v44 = (char *)v7 + *((void *)*v7 + 15);
  uint64_t v45 = v76;
  char v46 = a5;
  char v83 = *(void (**)(char *, void *, uint64_t))(v76 + 16);
  v83(v44, a5, v43);
  *((unsigned char *)v8 + *((void *)*v8 + 17)) = v31 & 1;
  uint64_t v47 = v79;
  uint64_t v48 = v32;
  uint64_t v49 = v32;
  uint64_t v50 = v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v48, v81, v80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v49, 1, v43) == 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v50);
  }
  else
  {
    uint64_t v82 = v46;
    char v51 = v31;
    unint64_t v52 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    uint64_t v53 = v74;
    v52(v74, v49, v43);
    if (v51)
    {
      char v54 = v68;
      v52(v68, v53, v43);
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v44, v54, v43);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v53, v43);
      char v55 = v70;
      v83(v70, v82, v43);
      ((void (*)(char *, void, uint64_t, uint64_t))v67[0])(v55, 0, 1, v43);
      id v56 = v69;
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v71 + 40))(v56, v55, v72);
    }
    swift_endAccess();
  }
  sub_1DA98A018();
  uint64_t v57 = sub_1DA989FF8();
  *(id *)((char *)v8 + *((void *)*v8 + 18)) = (id)v57;
  uint64_t v84 = v57;
  swift_getWitnessTable();
  *(id *)((char *)v8 + *((void *)*v8 + 19)) = (id)sub_1DA98A0F8();
  uint64_t v58 = *((void *)*v8 + 20);
  uint64_t v59 = *(id *)((char *)v8 + v58);
  *(id *)((char *)v8 + v58) = 0;

  type metadata accessor for UserDefault._KVOUserDefaultsObserver();
  swift_retain();
  id v60 = sub_1DA7A4A08();
  swift_release();
  uint64_t v61 = *(id *)((char *)v8 + v58);
  *(id *)((char *)v8 + v58) = v60;

  uint64_t v62 = *(id *)((char *)v8 + v58);
  if (v62)
  {
    id v63 = v8[2];
    id v64 = v62;
    swift_bridgeObjectRetain();
    uint64_t v65 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    objc_msgSend(v63, sel_addObserver_forKeyPath_options_context_, v64, v65, 0, 0);

    return (uint64_t)v8;
  }
  __break(1u);
LABEL_19:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1DA7A54FC(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, int a7)
{
  return sub_1DA7A4D5C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t type metadata accessor for UserDefault.AppleInternalOnlyOption()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DA7A55A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + *(void *)(*(void *)v1 + 168));
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7A45B4(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));

  return swift_release();
}

uint64_t sub_1DA7A561C()
{
  return sub_1DA7A3330();
}

uint64_t sub_1DA7A5640()
{
  return sub_1DA7A5618();
}

uint64_t sub_1DA7A5664()
{
  return 16;
}

__n128 sub_1DA7A5670(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for _PreferenceUtilities()
{
  return self;
}

uint64_t sub_1DA7A56A4()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = sub_1DA98C838();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return v0;
}

uint64_t type metadata accessor for UserDefault()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for UserDefault(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UserDefault);
}

uint64_t dispatch thunk of UserDefault.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of UserDefault.wrappedValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of UserDefault.wrappedValue.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of UserDefault.wrappedValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of UserDefault.projectedValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t sub_1DA7A58E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1DA7A58E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_1DA7A5964(void *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = *(void *)(v6 + 64);
  if (v8) {
    size_t v10 = *(void *)(v6 + 64);
  }
  else {
    size_t v10 = v9 + 1;
  }
  uint64_t v11 = *(_DWORD *)(v6 + 80);
  if (v11 > 7 || (*(_DWORD *)(v7 + 80) & 0x100000) != 0 || v10 > 0x18)
  {
    uint64_t v14 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
    return a1;
  }
  if (!v8)
  {
    if (!*((unsigned char *)a2 + v9)) {
      goto LABEL_31;
    }
    int v15 = (*((unsigned __int8 *)a2 + v9) - 1) << (8 * v9);
    if (v9 > 3) {
      int v15 = 0;
    }
    if (v9)
    {
      int v16 = v9 <= 3 ? v9 : 4;
      switch(v16)
      {
        case 2:
          int v17 = *a2;
          break;
        case 3:
          int v17 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v17 = *(_DWORD *)a2;
          break;
        default:
          int v17 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v17 = 0;
    }
    if ((v17 | v15) == 0xFFFFFFFF) {
      goto LABEL_31;
    }
LABEL_30:
    memcpy(a1, a2, v10);
    return a1;
  }
  if ((*(unsigned int (**)(unsigned __int16 *, void, uint64_t))(v7 + 48))(a2, *(unsigned int *)(v7 + 84), v5))
  {
    goto LABEL_30;
  }
LABEL_31:
  (*(void (**)(void *, unsigned __int16 *, uint64_t))(v7 + 16))(a1, a2, v5);
  if (!v8) {
    *((unsigned char *)a1 + v9) = 0;
  }
  return a1;
}

uint64_t sub_1DA7A5B2C(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5)
  {
    uint64_t v11 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48))(a1, v5, v3);
    uint64_t v4 = v11;
    if (result) {
      return result;
    }
    goto LABEL_17;
  }
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_17;
  }
  int v8 = (*((unsigned __int8 *)a1 + v6) - 1) << (8 * v6);
  if (v6 > 3) {
    int v8 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  int v9 = v6 | v8;
  uint64_t result = (v9 + 1);
  if (v9 == -1)
  {
LABEL_17:
    size_t v10 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v4 + 8);
    return v10(a1, v3);
  }
  return result;
}

unsigned char *sub_1DA7A5C94(unsigned char *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7)
  {
    if (!(*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
    {
LABEL_22:
      (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
      if (!v7) {
        a1[v8] = 0;
      }
      return a1;
    }
  }
  else
  {
    if (!*((unsigned char *)a2 + v8)) {
      goto LABEL_22;
    }
    int v9 = (*((unsigned __int8 *)a2 + v8) - 1) << (8 * v8);
    if (v8 > 3) {
      int v9 = 0;
    }
    if (v8)
    {
      int v10 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
      switch(v10)
      {
        case 2:
          int v11 = *a2;
          break;
        case 3:
          int v11 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v11 = *(_DWORD *)a2;
          break;
        default:
          int v11 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v11 = 0;
    }
    if ((v11 | v9) == 0xFFFFFFFF) {
      goto LABEL_22;
    }
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

unsigned __int16 *sub_1DA7A5E18(unsigned __int16 *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (!v7)
  {
    char v12 = 8 * v8;
    if (*((unsigned char *)a1 + v8))
    {
      int v13 = (*((unsigned __int8 *)a1 + v8) - 1) << v12;
      if (v8 > 3) {
        int v13 = 0;
      }
      if (v8)
      {
        int v14 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
        switch(v14)
        {
          case 2:
            int v15 = *a1;
            break;
          case 3:
            int v15 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v15 = *(_DWORD *)a1;
            break;
          default:
            int v15 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v15 = 0;
      }
      if ((v15 | v13) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)a2 + v8)) {
          goto LABEL_54;
        }
        int v16 = (*((unsigned __int8 *)a2 + v8) - 1) << v12;
        if (v8 > 3) {
          int v16 = 0;
        }
        if (v8)
        {
          int v17 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
          switch(v17)
          {
            case 2:
              int v18 = *a2;
              break;
            case 3:
              int v18 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
              break;
            case 4:
              int v18 = *(_DWORD *)a2;
              break;
            default:
              int v18 = *(unsigned __int8 *)a2;
              break;
          }
        }
        else
        {
          int v18 = 0;
        }
        if ((v18 | v16) == 0xFFFFFFFF) {
          goto LABEL_54;
        }
        goto LABEL_45;
      }
    }
    if (!*((unsigned char *)a2 + v8))
    {
LABEL_49:
      (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    int v19 = (*((unsigned __int8 *)a2 + v8) - 1) << v12;
    if (v8 > 3) {
      int v19 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v20 = *(void *)(v6 + 64);
      }
      else {
        int v20 = 4;
      }
      switch(v20)
      {
        case 2:
          int v21 = *a2;
          break;
        case 3:
          int v21 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v21 = *(_DWORD *)a2;
          break;
        default:
          int v21 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v21 = 0;
    }
    int v11 = (v21 | v19) + 1;
LABEL_43:
    if (v11)
    {
      (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_45;
    }
    goto LABEL_49;
  }
  int v9 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
  int v10 = v9(a1, v7, v5);
  int v11 = v9(a2, v7, v5);
  if (!v10) {
    goto LABEL_43;
  }
  if (!v11)
  {
LABEL_54:
    (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
    if (!v7) {
      *((unsigned char *)a1 + v8) = 0;
    }
    return a1;
  }
LABEL_45:
  if (v7) {
    size_t v22 = v8;
  }
  else {
    size_t v22 = v8 + 1;
  }
  memcpy(a1, a2, v22);
  return a1;
}

unsigned char *sub_1DA7A612C(unsigned char *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7)
  {
    if (!(*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
    {
LABEL_22:
      (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v6 + 32))(a1, a2, v5);
      if (!v7) {
        a1[v8] = 0;
      }
      return a1;
    }
  }
  else
  {
    if (!*((unsigned char *)a2 + v8)) {
      goto LABEL_22;
    }
    int v9 = (*((unsigned __int8 *)a2 + v8) - 1) << (8 * v8);
    if (v8 > 3) {
      int v9 = 0;
    }
    if (v8)
    {
      int v10 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
      switch(v10)
      {
        case 2:
          int v11 = *a2;
          break;
        case 3:
          int v11 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v11 = *(_DWORD *)a2;
          break;
        default:
          int v11 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v11 = 0;
    }
    if ((v11 | v9) == 0xFFFFFFFF) {
      goto LABEL_22;
    }
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

unsigned __int16 *sub_1DA7A62B0(unsigned __int16 *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (!v7)
  {
    char v12 = 8 * v8;
    if (*((unsigned char *)a1 + v8))
    {
      int v13 = (*((unsigned __int8 *)a1 + v8) - 1) << v12;
      if (v8 > 3) {
        int v13 = 0;
      }
      if (v8)
      {
        int v14 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
        switch(v14)
        {
          case 2:
            int v15 = *a1;
            break;
          case 3:
            int v15 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v15 = *(_DWORD *)a1;
            break;
          default:
            int v15 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v15 = 0;
      }
      if ((v15 | v13) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)a2 + v8)) {
          goto LABEL_54;
        }
        int v16 = (*((unsigned __int8 *)a2 + v8) - 1) << v12;
        if (v8 > 3) {
          int v16 = 0;
        }
        if (v8)
        {
          int v17 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
          switch(v17)
          {
            case 2:
              int v18 = *a2;
              break;
            case 3:
              int v18 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
              break;
            case 4:
              int v18 = *(_DWORD *)a2;
              break;
            default:
              int v18 = *(unsigned __int8 *)a2;
              break;
          }
        }
        else
        {
          int v18 = 0;
        }
        if ((v18 | v16) == 0xFFFFFFFF) {
          goto LABEL_54;
        }
        goto LABEL_45;
      }
    }
    if (!*((unsigned char *)a2 + v8))
    {
LABEL_49:
      (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    int v19 = (*((unsigned __int8 *)a2 + v8) - 1) << v12;
    if (v8 > 3) {
      int v19 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v20 = *(void *)(v6 + 64);
      }
      else {
        int v20 = 4;
      }
      switch(v20)
      {
        case 2:
          int v21 = *a2;
          break;
        case 3:
          int v21 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v21 = *(_DWORD *)a2;
          break;
        default:
          int v21 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v21 = 0;
    }
    int v11 = (v21 | v19) + 1;
LABEL_43:
    if (v11)
    {
      (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_45;
    }
    goto LABEL_49;
  }
  int v9 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
  int v10 = v9(a1, v7, v5);
  int v11 = v9(a2, v7, v5);
  if (!v10) {
    goto LABEL_43;
  }
  if (!v11)
  {
LABEL_54:
    (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 32))(a1, a2, v5);
    if (!v7) {
      *((unsigned char *)a1 + v8) = 0;
    }
    return a1;
  }
LABEL_45:
  if (v7) {
    size_t v22 = v8;
  }
  else {
    size_t v22 = v8 + 1;
  }
  memcpy(a1, a2, v22);
  return a1;
}

uint64_t sub_1DA7A65C4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1DA7A6764(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  size_t v10 = *(void *)(v7 + 64);
  if (v8) {
    size_t v11 = *(void *)(v7 + 64);
  }
  else {
    size_t v11 = v10 + 1;
  }
  BOOL v12 = a3 >= v9;
  unsigned int v13 = a3 - v9;
  if (v13 == 0 || !v12)
  {
LABEL_16:
    if (v9 < a2) {
      goto LABEL_17;
    }
    goto LABEL_24;
  }
  if (v11 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_17;
    }
    goto LABEL_24;
  }
  unsigned int v14 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
  if (!HIWORD(v14))
  {
    if (v14 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v14 > 1;
    }
    goto LABEL_16;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_17:
    unsigned int v15 = ~v9 + a2;
    if (v11 < 4)
    {
      int v16 = (v15 >> (8 * v11)) + 1;
      if (v11)
      {
        int v17 = v15 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_56;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
LABEL_24:
  switch(v6)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x1DA7A6A34);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        if (v8 >= 2)
        {
          if (a2 + 1 <= v8)
          {
            if (a2 != -1)
            {
              int v21 = *(void (**)(void))(v7 + 56);
              v21();
            }
          }
          else
          {
            if (v10 <= 3) {
              int v18 = ~(-1 << (8 * v10));
            }
            else {
              int v18 = -1;
            }
            if (v10)
            {
              int v19 = v18 & (a2 - v8);
              if (v10 <= 3) {
                int v20 = v10;
              }
              else {
                int v20 = 4;
              }
              bzero(a1, v10);
              switch(v20)
              {
                case 2:
                  *(_WORD *)a1 = v19;
                  break;
                case 3:
                  *(_WORD *)a1 = v19;
                  a1[2] = BYTE2(v19);
                  break;
                case 4:
                  *(_DWORD *)a1 = v19;
                  break;
                default:
                  *a1 = v19;
                  break;
              }
            }
          }
        }
      }
      return;
  }
}

uint64_t sub_1DA7A6A6C(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  if (*(_DWORD *)(v2 + 84)) {
    return (*(uint64_t (**)(void))(v2 + 48))();
  }
  if (!*((unsigned char *)a1 + v3)) {
    return 0;
  }
  int v5 = (*((unsigned __int8 *)a1 + v3) - 1) << (8 * v3);
  if (v3 > 3) {
    int v5 = 0;
  }
  if (v3)
  {
    if (v3 > 3) {
      LODWORD(v3) = 4;
    }
    switch((int)v3)
    {
      case 2:
        LODWORD(v3) = *a1;
        break;
      case 3:
        LODWORD(v3) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v3) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v3) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v3 | v5) + 1;
}

void sub_1DA7A6B64(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  size_t v6 = *(void *)(v4 + 64);
  if (v5 >= a2)
  {
    if (v5)
    {
      if (!a2) {
        return;
      }
    }
    else
    {
      a1[v6] = 0;
      if (!a2) {
        return;
      }
    }
    size_t v10 = *(void (**)(void))(v4 + 56);
    v10();
    return;
  }
  unsigned int v7 = ~v5 + a2;
  if (v6 >= 4)
  {
    bzero(a1, v6);
    *(_DWORD *)a1 = v7;
    LOBYTE(v8) = 1;
    if (v5) {
      return;
    }
    goto LABEL_19;
  }
  int v8 = (v7 >> (8 * v6)) + 1;
  if (!v6)
  {
LABEL_18:
    if (v5) {
      return;
    }
    goto LABEL_19;
  }
  int v9 = v7 & ~(-1 << (8 * v6));
  bzero(a1, v6);
  if (v6 == 3)
  {
    *(_WORD *)a1 = v9;
    a1[2] = BYTE2(v9);
    goto LABEL_18;
  }
  if (v6 == 2)
  {
    *(_WORD *)a1 = v9;
    if (v5) {
      return;
    }
    goto LABEL_19;
  }
  *a1 = v9;
  if (!v5) {
LABEL_19:
  }
    a1[v6] = v8;
}

uint64_t sub_1DA7A6CC4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for UserDefault._KVOUserDefaultsObserver()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DA7A6D20(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_1DA7A6D9C()
{
  unint64_t result = qword_1EBE65CB0;
  if (!qword_1EBE65CB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE65CB0);
  }
  return result;
}

uint64_t sub_1DA7A6DDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA7A6E24(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1DA7A6EB8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7A42DC(a1);
}

uint64_t sub_1DA7A6EE0(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_1DA7A6F24()
{
  uint64_t v0 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  __swift_allocate_value_buffer(v0, qword_1EBE62E48);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBE62E48);
  return sub_1DA7A6F70(v1);
}

uint64_t sub_1DA7A6F70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v1 = sub_1DA9898A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  unsigned int v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unsigned int v7 = (char *)&v20[-1] - v6;
  uint64_t v8 = sub_1DA9898F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  size_t v11 = (void *)((char *)&v20[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA9898C8();
  BOOL v12 = *(void (**)(void *, void, uint64_t))(v9 + 104);
  v12(v11, *MEMORY[0x1E4F58890], v8);
  if ((sub_1DA9898D8() & 1) == 0)
  {
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
    *size_t v11 = 0x3FE999999999999ALL;
    v12(v11, *MEMORY[0x1E4F58898], v8);
  }
  sub_1DA989B38();
  sub_1DA989B28();
  __swift_project_boxed_opaque_existential_0(v20, v20[3]);
  sub_1DA989A08();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E4F58880], v1);
  char v13 = sub_1DA989898();
  unsigned int v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v5, v1);
  v14(v7, v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  if (v13) {
    int v15 = 0x40000000;
  }
  else {
    int v15 = 1065353216;
  }
  uint64_t v16 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  uint64_t v17 = v19;
  uint64_t result = (*(uint64_t (**)(uint64_t, void *, uint64_t))(v9 + 32))(v19 + *(int *)(v16 + 24), v11, v8);
  *(_DWORD *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 4) = 1;
  *(_DWORD *)(v17 + 8) = v15;
  *(unsigned char *)(v17 + 12) = 0;
  return result;
}

uint64_t static RBImageSnapshotter.RBImageOptions.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBE62E68 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBE62E48);
  swift_beginAccess();
  return sub_1DA7A7658(v3, a1, type metadata accessor for RBImageSnapshotter.RBImageOptions);
}

uint64_t static RBImageSnapshotter.RBImageOptions.default.setter(uint64_t a1)
{
  if (qword_1EBE62E68 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBE62E48);
  swift_beginAccess();
  sub_1DA7A7394(a1, v3);
  swift_endAccess();
  return sub_1DA7ABAAC(a1, type metadata accessor for RBImageSnapshotter.RBImageOptions);
}

uint64_t sub_1DA7A7394(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static RBImageSnapshotter.RBImageOptions.default.modify())()
{
  if (qword_1EBE62E68 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE62E48);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1DA7A748C()
{
  uint64_t v0 = sub_1DA9898F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  __swift_allocate_value_buffer(v4, qword_1EA8E58B8);
  unsigned int v5 = (unsigned char *)__swift_project_value_buffer(v4, (uint64_t)qword_1EA8E58B8);
  *uint64_t v3 = 0x3FE999999999999ALL;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F58898], v0);
  unint64_t v6 = sub_1DA79C48C(MEMORY[0x1E4FBC860]);
  *unsigned int v5 = 1;
  uint64_t result = (*(uint64_t (**)(unsigned char *, void *, uint64_t))(v1 + 32))(&v5[*(int *)(v4 + 20)], v3, v0);
  *(void *)&v5[*(int *)(v4 + 24)] = v6;
  return result;
}

uint64_t static CAMLSnapshotter.CAMLOptions.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA8E5500 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA8E58B8);
  return sub_1DA7A7658(v3, a1, type metadata accessor for CAMLSnapshotter.CAMLOptions);
}

uint64_t sub_1DA7A7658(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA7A76C0()
{
  uint64_t v0 = type metadata accessor for RBLayer.SnapshotFormat(0);
  __swift_allocate_value_buffer(v0, qword_1EBE630D8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBE630D8);
  if (qword_1EBE62E68 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBE62E48);
  swift_beginAccess();
  return sub_1DA7A7658(v3, v1, type metadata accessor for RBImageSnapshotter.RBImageOptions);
}

uint64_t static RBLayer.SnapshotFormat.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBE630F8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for RBLayer.SnapshotFormat(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBE630D8);
  return sub_1DA7A7658(v3, a1, type metadata accessor for RBLayer.SnapshotFormat);
}

uint64_t type metadata accessor for RBLayer.SnapshotFormat(uint64_t a1)
{
  return sub_1DA7A88D4(a1, qword_1EBE63248);
}

uint64_t sub_1DA7A7828()
{
  uint64_t v0 = type metadata accessor for CALayer.SnapshotFormat(0);
  __swift_allocate_value_buffer(v0, qword_1EA8E58D0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA8E58D0);
  uint64_t v2 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t static CALayer.SnapshotFormat.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA8E5510 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for CALayer.SnapshotFormat(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA8E58D0);
  return sub_1DA7A7658(v3, a1, type metadata accessor for CALayer.SnapshotFormat);
}

uint64_t type metadata accessor for CALayer.SnapshotFormat(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE64020);
}

uint64_t sub_1DA7A795C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CAMLSnapshotter(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CALayer.SnapshotFormat(0);
  MEMORY[0x1F4188790](v9 - 8);
  size_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A7658(v1, (uint64_t)v11, type metadata accessor for CALayer.SnapshotFormat);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62EF8);
    uint64_t v12 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63020);
    char v13 = (void *)swift_allocObject();
    _OWORD v13[2] = 0xD00000000000001FLL;
    v13[3] = 0x80000001DA99CE90;
  }
  else
  {
    sub_1DA7AE67C((uint64_t)v11, (uint64_t)v8, type metadata accessor for CAMLSnapshotter.CAMLOptions);
    sub_1DA7A7658((uint64_t)v8, (uint64_t)v4 + *(int *)(v2 + 20), type metadata accessor for CAMLSnapshotter.CAMLOptions);
    *uint64_t v4 = 0xD00000000000001BLL;
    v4[1] = 0x80000001DA99CEB0;
    sub_1DA7ABAAC((uint64_t)v8, type metadata accessor for CAMLSnapshotter.CAMLOptions);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62EF8);
    uint64_t v12 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E58E8);
    char v13 = (void *)swift_allocObject();
    sub_1DA7AE67C((uint64_t)v4, (uint64_t)v13 + *(void *)(*v13 + 128), type metadata accessor for CAMLSnapshotter);
  }
  *(void *)(v12 + 16) = v13;
  return v12;
}

void sub_1DA7A7C28()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1DA98C008();
  id v2 = objc_msgSend(v0, sel_createWorkLoopWithLabel_qos_, v1, 9);

  qword_1EBE6F340 = (uint64_t)v2;
}

void sub_1DA7A7CA4(void **a1, uint64_t *a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = v2;
  id v5 = v2;
}

id sub_1DA7A7CFC()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 32);

  return v1;
}

void sub_1DA7A7D40(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
}

uint64_t (*sub_1DA7A7D88())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DA7A7DDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7A8048(&OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_logger, MEMORY[0x1E4FBD360], a1);
}

uint64_t sub_1DA7A7DFC(uint64_t a1)
{
  return sub_1DA7A80F8(a1, &OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_logger, MEMORY[0x1E4FBD360]);
}

uint64_t (*sub_1DA7A7E1C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DA7A7E78@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a1 + *a2;
  swift_beginAccess();
  uint64_t v7 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a4, v6, v7);
}

uint64_t sub_1DA7A7F0C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void *a6)
{
  uint64_t v9 = a5(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - v11, a1, v9);
  uint64_t v13 = *a2 + *a6;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v13, v12, v9);
  return swift_endAccess();
}

uint64_t sub_1DA7A8028@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7A8048(&OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter, MEMORY[0x1E4FBD330], a1);
}

uint64_t sub_1DA7A8048@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *a1;
  swift_beginAccess();
  uint64_t v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t sub_1DA7A80D8(uint64_t a1)
{
  return sub_1DA7A80F8(a1, &OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter, MEMORY[0x1E4FBD330]);
}

uint64_t sub_1DA7A80F8(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *a2;
  swift_beginAccess();
  uint64_t v7 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v6, a1, v7);
  return swift_endAccess();
}

uint64_t (*sub_1DA7A8190())()
{
  return j__swift_endAccess;
}

uint64_t sub_1DA7A81F0(uint64_t a1, void *a2)
{
  sub_1DA7A1A44(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1DA7A19A4(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1DA7A8260@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor;
  swift_beginAccess();
  return sub_1DA7A1A44(v3, a1);
}

uint64_t sub_1DA7A82B4(long long *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1DA7A19A4(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1DA7A8318())()
{
  return j_j__swift_endAccess;
}

unint64_t LayerSnapshotter.Result.description.getter()
{
  id v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    if (*(unsigned char *)(v0 + 16) != 1)
    {
      sub_1DA98CA18();
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD000000000000020;
      sub_1DA98C148();
      sub_1DA98C148();
      return v10;
    }
    unint64_t v3 = 0xD00000000000001BLL;
    if (!v2) {
      return v3;
    }
    unint64_t v10 = 0;
    id v4 = v2;
    sub_1DA98CA18();
    sub_1DA98C148();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
    sub_1DA98CB58();
    sub_1DA98C148();
    id v5 = v2;
    uint64_t v6 = v1;
    unsigned __int8 v7 = 1;
  }
  else
  {
    unint64_t v10 = 0;
    id v8 = v2;
    sub_1DA98CA18();
    sub_1DA98C148();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
    sub_1DA98CB58();
    sub_1DA98C148();
    id v5 = v2;
    uint64_t v6 = v1;
    unsigned __int8 v7 = 0;
  }
  sub_1DA7A8564(v5, v6, v7);
  return v10;
}

void sub_1DA7A8564(void *a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a3 <= 1u)
  {
  }
}

char *LayerSnapshotter.__allocating_init(renderBoxFormat:coreAnimationFormat:logger:screenshotManager:dataProtectionMonitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a4;
  uint64_t v9 = sub_1DA989F38();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RBImageSnapshotter(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for RBLayer.SnapshotFormat(0);
  MEMORY[0x1F4188790](v16 - 8);
  int v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a1;
  sub_1DA7A7658(a1, (uint64_t)v18, type metadata accessor for RBLayer.SnapshotFormat);
  sub_1DA7AE67C((uint64_t)v18, (uint64_t)v15, type metadata accessor for RBImageSnapshotter.RBImageOptions);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62F00);
  uint64_t v19 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63028);
  uint64_t v20 = swift_allocObject();
  sub_1DA7AE67C((uint64_t)v15, v20 + *(void *)(*(void *)v20 + 128), type metadata accessor for RBImageSnapshotter);
  *(void *)(v19 + 16) = v20;
  uint64_t v21 = sub_1DA7A795C();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  sub_1DA7A1A44(a5, (uint64_t)v29);
  if (qword_1EBE62C88 != -1) {
    swift_once();
  }
  size_t v22 = (void *)qword_1EBE6F340;
  type metadata accessor for LayerSnapshotter(0);
  swift_allocObject();
  id v23 = v22;
  long long v24 = sub_1DA7AB7EC(v19, v21, (uint64_t)v12, v27, v29, (uint64_t)v23);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a5);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a3, v9);
  sub_1DA7ABAAC(a2, type metadata accessor for CALayer.SnapshotFormat);
  sub_1DA7ABAAC(v28, type metadata accessor for RBLayer.SnapshotFormat);
  return v24;
}

uint64_t type metadata accessor for LayerSnapshotter(uint64_t a1)
{
  return sub_1DA7A88D4(a1, qword_1EBE62018);
}

uint64_t sub_1DA7A88D4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DA7A890C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = v4;
  uint64_t v26 = a2;
  uint64_t v23 = *v5;
  uint64_t v24 = a3;
  uint64_t v8 = sub_1DA98B438();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E30);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v5[7];
  sub_1DA7A1F58(a1, (uint64_t)v15, &qword_1EBE62E30);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v5;
  sub_1DA7ABC90((uint64_t)v15, v18 + v16);
  uint64_t v19 = (void *)(v18 + v17);
  *uint64_t v19 = v24;
  v19[1] = a4;
  *(void *)(v18 + ((v17 + 23) & 0xFFFFFFFFFFFFFFF8)) = v23;
  aBlock[4] = sub_1DA7ABCF8;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA7A6EE0;
  aBlock[3] = &block_descriptor_0;
  uint64_t v20 = _Block_copy(aBlock);
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1DA7AD880((unint64_t *)&qword_1EBE658C0, MEMORY[0x1E4FBCB00]);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE65C60);
  sub_1DA7ABDB4();
  sub_1DA98C918();
  MEMORY[0x1E01777D0](0, v26, v11, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_1DA7A8C14(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *), uint64_t a4, uint64_t a5)
{
  uint64_t v141 = a5;
  uint64_t v158 = a4;
  v149 = a3;
  uint64_t v160 = a2;
  v136 = (void *)sub_1DA98B438();
  uint64_t v135 = *(v136 - 1);
  MEMORY[0x1F4188790](v136);
  uint64_t v133 = (char *)v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_1DA98B4A8();
  uint64_t v132 = *(void *)(v134 - 8);
  MEMORY[0x1F4188790](v134);
  uint64_t v131 = (char *)v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62DC8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v130 = (char *)v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E38);
  MEMORY[0x1F4188790](v10 - 8);
  v140 = (char *)v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v144 = (uint64_t)v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_1DA989478();
  uint64_t v148 = *(void *)(v147 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v147);
  v142 = (char *)v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = v15;
  MEMORY[0x1F4188790](v14);
  v145 = (char *)v125 - v16;
  unint64_t v17 = (void *)sub_1DA98B9E8();
  uint64_t v154 = *(v17 - 1);
  id v155 = v17;
  MEMORY[0x1F4188790](v17);
  v156 = (char *)v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E30);
  uint64_t v137 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v143 = (uint64_t)v125 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (id *)((char *)v125 - v22);
  uint64_t v24 = sub_1DA989E78();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)v125 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)v125 - v29;
  uint64_t v31 = sub_1DA989EB8();
  unint64_t v32 = *(void **)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  id v34 = (char *)v125 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = a1;
  uint64_t v35 = a1 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter;
  swift_beginAccess();
  v151 = v32;
  uint64_t v36 = (void (*)(char *, uint64_t, uint64_t))v32[2];
  uint64_t v152 = v31;
  v36(v34, v35, v31);
  uint64_t v157 = v19;
  uint64_t v37 = v160;
  uint64_t v38 = v160 + *(int *)(v19 + 40);
  uint64_t v153 = v25;
  char v39 = *(void (**)(char *))(v25 + 16);
  uint64_t v127 = v38;
  v39(v30);
  sub_1DA7A1F58(v37, (uint64_t)v23, &qword_1EBE62E30);
  v150 = (void (*)(unint64_t, char *, uint64_t))v34;
  id v40 = sub_1DA989EA8();
  int v41 = sub_1DA98C6B8();
  char v42 = sub_1DA98C7F8();
  uint64_t v146 = v25 + 16;
  if (v42)
  {
    ((void (*)(char *, char *, uint64_t))v39)(v28, v30, v24);
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v129 = v44;
    v128 = v43;
    *(_DWORD *)uint64_t v43 = 136446210;
    uint64_t aBlock = v44;
    v125[1] = v43 + 4;
    id v45 = *v23;
    id v46 = objc_msgSend(*v23, sel_widget);
    int v126 = v41;
    id v47 = v46;
    id v48 = objc_msgSend(v45, sel_metrics);
    id v49 = objc_msgSend(v47, sel__loggingIdentifierWithMetrics_, v48);

    uint64_t v50 = sub_1DA98C038();
    unint64_t v52 = v51;

    uint64_t v53 = v50;
    uint64_t v54 = v159;
    uint64_t v167 = sub_1DA8C5E00(v53, v52, &aBlock);
    sub_1DA98C858();
    uint64_t v55 = v158;
    swift_bridgeObjectRelease();
    sub_1DA7A1AE0((uint64_t)v23, &qword_1EBE62E30);
    os_signpost_id_t v56 = sub_1DA989E58();
    uint64_t v57 = v128;
    _os_signpost_emit_with_name_impl(&dword_1DA795000, v40, (os_signpost_type_t)v126, v56, "LayerSnapshotting", "<key>=%{public}s", v128, 0xCu);
    uint64_t v58 = v129;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v58, -1, -1);
    MEMORY[0x1E0178DA0](v57, -1, -1);

    uint64_t v59 = v153;
    (*(void (**)(char *, uint64_t))(v153 + 8))(v28, v24);
  }
  else
  {
    uint64_t v55 = v158;

    sub_1DA7A1AE0((uint64_t)v23, &qword_1EBE62E30);
    uint64_t v59 = v153;
    uint64_t v54 = v159;
  }
  v128 = (uint8_t *)v39;
  ((void (*)(char *, char *, uint64_t))v39)(v28, v30, v24);
  sub_1DA989EF8();
  swift_allocObject();
  uint64_t v60 = sub_1DA989EE8();
  uint64_t v61 = *(void (**)(char *, uint64_t))(v59 + 8);
  uint64_t v129 = v24;
  v61(v30, v24);
  ((void (*)(void (*)(unint64_t, char *, uint64_t), uint64_t))v151[1])(v150, v152);
  uint64_t v62 = v54 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor;
  swift_beginAccess();
  sub_1DA7A1A44(v62, (uint64_t)&aBlock);
  id v63 = v164;
  id v64 = v165;
  __swift_project_boxed_opaque_existential_0(&aBlock, (uint64_t)v164);
  uint64_t v65 = v156;
  (*((void (**)(void *, uint64_t (*)()))v64 + 2))(v63, v64);
  uint64_t v66 = v160;
  uint64_t v67 = v160 + *(int *)(v157 + 36);
  sub_1DA7AD880(&qword_1EBE62A18, MEMORY[0x1E4F46D40]);
  id v68 = v155;
  char v69 = sub_1DA98BFD8();
  (*(void (**)(char *, id))(v154 + 8))(v65, v68);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  if (v69)
  {
    uint64_t aBlock = 0xD00000000000001ELL;
    unint64_t v162 = 0x80000001DA99CE00;
    LOBYTE(v163) = 2;
    uint64_t v70 = v54;
    uint64_t v71 = v60;
    uint64_t v72 = v149;
    uint64_t v73 = v55;
LABEL_8:
    sub_1DA7AD8C8((uint64_t)&aBlock, v70, v71, v72, v73);
    return swift_release();
  }
  uint64_t v74 = v144;
  sub_1DA7AAD80(v66, v144);
  uint64_t v75 = v148;
  uint64_t v76 = v147;
  uint64_t v77 = v55;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v74, 1, v147) == 1)
  {
    sub_1DA7A1AE0(v74, (uint64_t *)&unk_1EBE66AB0);
    uint64_t aBlock = 0xD000000000000019;
    unint64_t v162 = 0x80000001DA99CDC0;
    LOBYTE(v163) = 2;
    uint64_t v70 = v54;
    uint64_t v71 = v60;
    uint64_t v72 = v149;
    uint64_t v73 = v55;
    goto LABEL_8;
  }
  uint64_t v152 = v60;
  uint64_t v79 = v75;
  uint64_t v80 = v75;
  uint64_t v81 = v54;
  uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 32);
  char v83 = v145;
  v82(v145, v74, v76);
  uint64_t v84 = *(void **)v66;
  uint64_t v85 = sub_1DA7AB15C(*(void **)v66);
  if (v85)
  {
    v150 = (void (*)(unint64_t, char *, uint64_t))v82;
    v151 = v85;
    uint64_t v86 = v66 + *(int *)(v157 + 44);
    uint64_t v87 = *(void **)v86;
    if (*(unsigned char *)(v86 + 8))
    {
      sub_1DA7A6D9C();
      v156 = v87;
      uint64_t v157 = sub_1DA98C608();
      sub_1DA7A1F58(v66, v143, &qword_1EBE62E30);
      uint64_t v88 = v148;
      (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v142, v145, v76);
      unint64_t v89 = (*(unsigned __int8 *)(v137 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80);
      unint64_t v90 = (v138 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v91 = (*(unsigned __int8 *)(v88 + 80) + v90 + 8) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
      unint64_t v92 = (v139 + v91 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v93 = (v92 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v94 = (v93 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v95 = swift_allocObject();
      *(void *)(v95 + 16) = v159;
      sub_1DA7ABC90(v143, v95 + v89);
      v96 = v156;
      *(void *)(v95 + v90) = v156;
      v150(v95 + v91, v142, v76);
      *(void *)(v95 + v92) = v151;
      *(void *)(v95 + v93) = v152;
      os_log_type_t v97 = (void *)(v95 + v94);
      uint64_t v98 = v158;
      *os_log_type_t v97 = v149;
      v97[1] = v98;
      *(void *)(v95 + ((v94 + 23) & 0xFFFFFFFFFFFFFFF8)) = v141;
      v165 = sub_1DA7AE1B8;
      uint64_t v166 = v95;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      unint64_t v162 = 1107296256;
      v163 = sub_1DA7A6EE0;
      v164 = &block_descriptor_27;
      uint64_t v99 = _Block_copy(&aBlock);
      uint64_t v100 = v96;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      v101 = v131;
      _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
      uint64_t aBlock = MEMORY[0x1E4FBC860];
      sub_1DA7AD880((unint64_t *)&qword_1EBE658C0, MEMORY[0x1E4FBCB00]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE65C60);
      sub_1DA7ABDB4();
      uint64_t v102 = v133;
      uint64_t v103 = v136;
      sub_1DA98C918();
      uint64_t v104 = (void *)v157;
      MEMORY[0x1E01777D0](0, v101, v102, v99);
      _Block_release(v99);

      swift_release();
      swift_release();

      (*(void (**)(char *, void *))(v135 + 8))(v102, v103);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v101, v134);
      return (*(uint64_t (**)(char *, uint64_t))(v148 + 8))(v145, v147);
    }
    else
    {
      uint64_t v105 = v159;
      uint64_t v157 = *(void *)(v159 + 16);
      v136 = *(void **)(v66 + 8);
      uint64_t v106 = *(void *)(v66 + 24);
      uint64_t v144 = *(void *)(v66 + 16);
      uint64_t v107 = (uint64_t)v156;
      (*(void (**)(char *, uint64_t, id))(v154 + 16))(v156, v67, v155);
      uint64_t v108 = (uint64_t)v130;
      uint64_t v109 = v129;
      ((void (*)(char *, uint64_t, uint64_t))v128)(v130, v127, v129);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v153 + 56))(v108, 0, 1, v109);
      swift_bridgeObjectRetain();
      id v110 = v87;
      id v155 = v110;
      id v111 = v84;
      uint64_t v112 = v136;
      sub_1DA7AB46C(v111, v112, v144, v106, v107, v108, (uint64_t)v110, &qword_1EBE62E38, v140);
      v156 = *(char **)(v105 + 56);
      sub_1DA7A1F58(v66, v143, &qword_1EBE62E30);
      uint64_t v113 = v148;
      uint64_t v114 = v142;
      (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v142, v145, v76);
      unint64_t v115 = (*(unsigned __int8 *)(v137 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80);
      unint64_t v116 = (v138 + *(unsigned __int8 *)(v113 + 80) + v115) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
      unint64_t v117 = (v139 + v116 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v118 = (void *)swift_allocObject();
      v118[2] = v151;
      v118[3] = v105;
      v119 = v149;
      v118[4] = v152;
      v118[5] = v119;
      v118[6] = v158;
      sub_1DA7ABC90(v143, (uint64_t)v118 + v115);
      v120 = (char *)v118 + v116;
      uint64_t v121 = v76;
      v150((unint64_t)v120, v114, v76);
      *(void *)((char *)v118 + v117) = v141;
      v122 = *(void (**)(char *, char *, char *, uint64_t (*)(), void *))(**(void **)(v157 + 16)
                                                                                               + 104);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v123 = v140;
      v124 = v145;
      v122(v140, v145, v156, sub_1DA7AE2F4, v118);
      swift_release();
      swift_release();

      swift_release();
      sub_1DA7A1AE0((uint64_t)v123, &qword_1EBE62E38);
      return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v124, v121);
    }
  }
  else
  {
    uint64_t aBlock = 0xD00000000000001FLL;
    unint64_t v162 = 0x80000001DA99CDE0;
    LOBYTE(v163) = 2;
    sub_1DA7AD8C8((uint64_t)&aBlock, v81, v152, v149, v77);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v83, v76);
  }
}

void sub_1DA7A9D9C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *), uint64_t a6, uint64_t a7)
{
  if (a1)
  {
    uint64_t v21 = a1;
    uint64_t v22 = 0;
    char v23 = 0;
    id v13 = a1;
    sub_1DA7AD8C8((uint64_t)&v21, a3, a4, a5, a6);
  }
  else
  {
    if (*(unsigned char *)(a7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E30) + 44) + 8)) {
      uint64_t v15 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v15 = *(void *)(a3 + 16);
    }
    (*(void (**)(void))(**(void **)(v15 + 16) + 96))();
    sub_1DA7A9FF0();
    swift_bridgeObjectRelease();
    sub_1DA7AA2E8(*(void *)(a7 + 16), *(void *)(a7 + 24));
    id v16 = objc_msgSend(self, sel_defaultManager);
    unint64_t v17 = (void *)sub_1DA98B9B8();
    sub_1DA951630(v17);

    uint64_t v21 = 0;
    uint64_t v22 = 0;
    char v23 = 1;
    sub_1DA7AD8C8((uint64_t)&v21, a3, a4, a5, a6);
  }
  uint64_t v18 = a2[2];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 16));
  uint64_t v19 = (void (*)(uint64_t))a2[3];
  a2[3] = 0;
  a2[4] = 0;
  sub_1DA7AE2F8((uint64_t)v19);
  sub_1DA7AD81C((uint64_t)v19);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
  if (v19)
  {
    uint64_t v20 = swift_retain();
    v19(v20);
    sub_1DA7AD81C((uint64_t)v19);
    sub_1DA7AD81C((uint64_t)v19);
  }
}

uint64_t sub_1DA7A9FF0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DA989078();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA98C088();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA98C078();
  uint64_t v11 = sub_1DA98C048();
  unint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v13 >> 60 == 15)
  {
    sub_1DA989058();
    uint64_t v14 = sub_1DA989478();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v3, v0, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v3, 0, 1, v14);
    sub_1DA989088();
    sub_1DA7A1AE0((uint64_t)v3, (uint64_t *)&unk_1EBE66AB0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
    return swift_willThrow();
  }
  else
  {
    v17[2] = v11;
    v17[3] = v13;
    sub_1DA7AE308();
    sub_1DA989328();
    return sub_1DA7A1ACC(v11, v13);
  }
}

uint64_t sub_1DA7AA2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA989078();
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DA98C088();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    return sub_1DA989348();
  }
  sub_1DA98C078();
  uint64_t v14 = sub_1DA98C048();
  unint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v16 >> 60 == 15)
  {
    sub_1DA989058();
    uint64_t v17 = sub_1DA989478();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v6, v2, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v6, 0, 1, v17);
    sub_1DA989088();
    sub_1DA7A1AE0((uint64_t)v6, (uint64_t *)&unk_1EBE66AB0);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
    return swift_willThrow();
  }
  else
  {
    uint64_t v22 = v14;
    unint64_t v23 = v16;
    sub_1DA7AE308();
    sub_1DA989328();
    return sub_1DA7A1ACC(v14, v16);
  }
}

uint64_t sub_1DA7AA600(uint64_t a1, void **a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v60 = a7;
  uint64_t v61 = a8;
  uint64_t v58 = a5;
  uint64_t v59 = a6;
  uint64_t v65 = a4;
  id v52 = a3;
  uint64_t v62 = a9;
  uint64_t v11 = sub_1DA989478();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  uint64_t v57 = *(void *)(v55 + 64);
  MEMORY[0x1F4188790](v11);
  id v64 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E30);
  uint64_t v14 = v13 - 8;
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v53 = *(void *)(v54 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v63 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62DC8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DA98B9E8();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E40);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v50 = v25;
  uint64_t v51 = v26;
  uint64_t v27 = *a2;
  uint64_t v28 = (uint64_t)a2[2];
  uint64_t v29 = (uint64_t)a2[3];
  id v48 = a2[1];
  uint64_t v49 = v28;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, (char *)a2 + *(int *)(v14 + 44), v19);
  uint64_t v30 = (char *)a2 + *(int *)(v14 + 48);
  uint64_t v31 = sub_1DA989E78();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v18, v30, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v18, 0, 1, v31);
  swift_bridgeObjectRetain();
  id v33 = v52;
  id v34 = v27;
  id v35 = v48;
  sub_1DA7AB46C(v34, v35, v49, v29, (uint64_t)v22, (uint64_t)v18, (uint64_t)v33, &qword_1EBE62E40, v25);
  id v52 = *(id *)(a1 + 56);
  sub_1DA7A1F58((uint64_t)a2, v63, &qword_1EBE62E30);
  uint64_t v37 = v55;
  uint64_t v36 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v64, v65, v56);
  unint64_t v38 = (*(unsigned __int8 *)(v54 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v39 = (v53 + *(unsigned __int8 *)(v37 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v40 = (v57 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  int v41 = (char *)swift_allocObject();
  uint64_t v42 = v59;
  *((void *)v41 + 2) = v58;
  *((void *)v41 + 3) = a1;
  uint64_t v43 = v60;
  uint64_t v44 = v61;
  *((void *)v41 + 4) = v42;
  *((void *)v41 + 5) = v43;
  *((void *)v41 + 6) = v44;
  sub_1DA7ABC90(v63, (uint64_t)&v41[v38]);
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v41[v39], v64, v36);
  *(void *)&v41[v40] = v62;
  id v45 = *(void (**)(char *, uint64_t, id, uint64_t (*)(), char *))(**(void **)(v51 + 16) + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v46 = (uint64_t)v50;
  v45(v50, v65, v52, sub_1DA7AE2F4, v41);
  swift_release();
  return sub_1DA7A1AE0(v46, &qword_1EBE62E40);
}

uint64_t sub_1DA7AAAC8(uint64_t a1)
{
  uint64_t v3 = sub_1DA989478();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v7 = *(void **)(v1 + 32);
  uint64_t v8 = *(void **)a1;
  id v9 = v7;
  id v10 = objc_msgSend(v8, sel_widget);
  id v11 = objc_msgSend(v8, sel_metrics);
  id v12 = objc_msgSend(v9, sel_URLForWidget_metrics_attributes_createIntermediateDirectories_, v10, v11, *(void *)(a1 + 8), 0);

  sub_1DA989438();
  uint64_t v15 = v6;
  type metadata accessor for SnapshotRequest();
  LOBYTE(v11) = sub_1DA818534(sub_1DA7ABE10);
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  return v11 & 1;
}

uint64_t sub_1DA7AAC84()
{
  uint64_t v0 = sub_1DA98C088();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1DA7AD82C();
  sub_1DA989318();
  sub_1DA98C078();
  uint64_t v1 = sub_1DA98C058();
  sub_1DA79DA70(v3, v4);
  return v1;
}

uint64_t sub_1DA7AAD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v33[0] = a2;
  v34[5] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1DA98C088();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1DA989478();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  id v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)v33 - v10;
  swift_beginAccess();
  id v12 = *(void **)(v2 + 32);
  uint64_t v13 = *(void **)a1;
  id v14 = v12;
  id v15 = objc_msgSend(v13, sel_widget);
  id v16 = objc_msgSend(v13, sel_metrics);
  id v17 = objc_msgSend(v14, sel_URLForWidget_metrics_attributes_createIntermediateDirectories_, v15, v16, *(void *)(a1 + 8), 0);

  sub_1DA989438();
  sub_1DA7AD82C();
  sub_1DA989318();
  id v24 = v34[0];
  id v25 = v34[1];
  sub_1DA98C078();
  uint64_t v26 = sub_1DA98C058();
  uint64_t v28 = v27;
  sub_1DA79DA70((uint64_t)v24, (unint64_t)v25);
  uint64_t v29 = *(void *)(a1 + 24);
  if (!v29)
  {
    if (v28)
    {
LABEL_11:
      swift_bridgeObjectRelease();
LABEL_12:
      uint64_t v31 = v33[0];
      (*(void (**)(void, char *, uint64_t))(v6 + 32))(v33[0], v11, v5);
      uint64_t v30 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v31, v30, 1, v5);
    }
LABEL_2:
    id v18 = objc_msgSend(self, sel_defaultManager);
    sub_1DA989418();
    uint64_t v19 = (void *)sub_1DA9893A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v34[0] = 0;
    unsigned int v20 = objc_msgSend(v18, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v19, 1, 0, v34);

    id v21 = v34[0];
    if (!v20)
    {
      uint64_t v22 = v21;
      uint64_t v23 = (void *)sub_1DA9892D8();

      swift_willThrow();
    }
    goto LABEL_12;
  }
  if (!v28) {
    goto LABEL_2;
  }
  if ((v26 != *(void *)(a1 + 16) || v28 != v29) && (sub_1DA98CE58() & 1) == 0) {
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  swift_bridgeObjectRelease();
  uint64_t v30 = 1;
  uint64_t v31 = v33[0];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v31, v30, 1, v5);
}

void *sub_1DA7AB15C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  id v6 = a1;
  char v7 = sub_1DA87CBA0(&v14, v6);
  swift_endAccess();

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  uint64_t v8 = 0;
  if (v7)
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v2;
    *(void *)(v9 + 24) = v6;
    type metadata accessor for BlockAssertion();
    uint64_t v8 = (void *)swift_allocObject();
    type metadata accessor for UnfairLock();
    uint64_t v10 = swift_allocObject();
    id v11 = v6;
    swift_retain();
    id v12 = (_DWORD *)swift_slowAlloc();
    *id v12 = 0;
    *(void *)(v10 + 16) = v12;
    v8[2] = v10;
    v8[3] = sub_1DA7AD814;
    void v8[4] = v9;
    sub_1DA7AD81C(0);
  }
  return v8;
}

void sub_1DA7AB2A0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  uint64_t v5 = (void *)sub_1DA866ED4(a2);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
}

uint64_t LayerSnapshotter.deinit()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_logger;
  uint64_t v2 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter;
  uint64_t v4 = sub_1DA989EB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor);
  return v0;
}

uint64_t LayerSnapshotter.__deallocating_deinit()
{
  LayerSnapshotter.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA7AB46C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, char *a9@<X8>)
{
  uint64_t v41 = a7;
  uint64_t v42 = a6;
  uint64_t v43 = a5;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62DC8);
  MEMORY[0x1F4188790](v15 - 8);
  id v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DA989E78();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v39 = a1;
  *(void *)a9 = a1;
  *((void *)a9 + 1) = a2;
  id v40 = a2;
  *((void *)a9 + 2) = a3;
  *((void *)a9 + 3) = a4;
  uint64_t v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(a8);
  uint64_t v23 = &a9[v22[9]];
  uint64_t v24 = sub_1DA98B9E8();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v23;
  uint64_t v27 = v18;
  uint64_t v28 = v42;
  uint64_t v29 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v26, v43, v24);
  sub_1DA7A1F58(v28, (uint64_t)v17, &qword_1EBE62DC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v27) != 1)
  {
    sub_1DA7A1AE0(v28, &qword_1EBE62DC8);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v29, v24);
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v36(v21, v17, v27);
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v36)(&a9[v22[10]], v21, v27);
    goto LABEL_7;
  }
  uint64_t v38 = v27;
  sub_1DA98CF78();
  id v30 = v39;
  id v31 = v40;
  sub_1DA98C7B8();
  long long v51 = v46;
  long long v52 = v47;
  uint64_t v53 = v48;
  long long v49 = v44;
  long long v50 = v45;
  uint64_t v32 = sub_1DA98CF58();
  if ((v32 & 0x8000000000000000) == 0)
  {
LABEL_5:
    sub_1DA989E88();

    sub_1DA7A1AE0(v42, &qword_1EBE62DC8);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v43, v24);
    sub_1DA7A1AE0((uint64_t)v17, &qword_1EBE62DC8);
    uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 32))(&a9[v22[10]], v21, v38);
LABEL_7:
    *(void *)&a9[v22[11]] = v41;
    return result;
  }
  BOOL v33 = __OFSUB__(0, v32);
  uint64_t v34 = -v32;
  if (v33)
  {
    __break(1u);
  }
  else if ((v34 & 0x8000000000000000) == 0)
  {
    goto LABEL_5;
  }
  uint64_t result = sub_1DA98CBA8();
  __break(1u);
  return result;
}

char *sub_1DA7AB7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6)
{
  id v30 = a5;
  uint64_t v31 = a6;
  uint64_t v29 = a4;
  uint64_t v10 = sub_1DA989F38();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DA989EB8();
  uint64_t v27 = *(void *)(v14 - 8);
  uint64_t v28 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v6 + 5) = MEMORY[0x1E4FBC870];
  type metadata accessor for UnfairLock();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = (_DWORD *)swift_slowAlloc();
  *uint64_t v18 = 0;
  *(void *)(v17 + 16) = v18;
  *((void *)v6 + 6) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62F00);
  uint64_t v19 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63018);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v19 + 16) = v20;
  *((void *)v6 + 3) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62EF8);
  uint64_t v21 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63010);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  *(void *)(v21 + 16) = v22;
  *((void *)v6 + 2) = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v23(&v6[OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_logger], a3, v10);
  v23(v13, a3, v10);
  swift_retain();
  swift_retain();
  sub_1DA989E98();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a3, v10);
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v6[OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter], v16, v28);
  uint64_t v24 = v30;
  *((void *)v6 + 4) = v29;
  sub_1DA7A19A4(v24, (uint64_t)&v6[OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor]);
  *((void *)v6 + 7) = v31;
  return v6;
}

uint64_t sub_1DA7ABAAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DA7ABB0C()
{
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E30) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  uint64_t v6 = v0 + v3;

  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[11];
  uint64_t v8 = sub_1DA98B9E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v6 + v1[12];
  uint64_t v10 = sub_1DA989E78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  swift_release();

  return MEMORY[0x1F4186498](v0, v5, v4);
}

uint64_t sub_1DA7ABC90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA7ABCF8()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E30) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *(uint64_t (**)(uint64_t *))(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v3 + 8);

  return sub_1DA7A8C14(v4, v0 + v2, v6, v7, v5);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_1DA7ABDB4()
{
  unint64_t result = qword_1EBE65C70;
  if (!qword_1EBE65C70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBE65C60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE65C70);
  }
  return result;
}

uint64_t sub_1DA7ABE10()
{
  return sub_1DA7AAC84();
}

id sub_1DA7ABE18@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 32);
  *a2 = v4;

  return v4;
}

uint64_t sub_1DA7ABE74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA7A7E78(a1, &OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_logger, MEMORY[0x1E4FBD360], a2);
}

uint64_t sub_1DA7ABEA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA7A7F0C(a1, a2, a3, a4, MEMORY[0x1E4FBD360], &OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_logger);
}

uint64_t sub_1DA7ABEDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA7A7E78(a1, &OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter, MEMORY[0x1E4FBD330], a2);
}

uint64_t sub_1DA7ABF10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA7A7F0C(a1, a2, a3, a4, MEMORY[0x1E4FBD330], &OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter);
}

uint64_t sub_1DA7ABF44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor;
  swift_beginAccess();
  return sub_1DA7A1A44(v3, a2);
}

void *_s14SnapshotFormatOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
    uint64_t v6 = *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
    uint64_t v7 = (char *)v4 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1DA9898F8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v4;
}

uint64_t destroy for RBImageSnapshotter(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  uint64_t v2 = sub_1DA9898F8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t initializeWithCopy for RBImageSnapshotter(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v4 = *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DA9898F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for RBImageSnapshotter(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  int v5 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v5;
  uint64_t v6 = *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = (uint64_t)a2 + v6;
  uint64_t v9 = sub_1DA9898F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for RBImageSnapshotter(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v4 = *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DA9898F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for RBImageSnapshotter(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v4 = *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DA9898F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s14SnapshotFormatOwet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);

  return MEMORY[0x1F4186578](a1, a2, v4, sub_1DA7AC3D8);
}

uint64_t sub_1DA7AC3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_1DA9898F8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t _s14SnapshotFormatOwst(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);

  return MEMORY[0x1F41867C0](a1, a2, a3, v6, sub_1DA7AC4B0);
}

uint64_t sub_1DA7AC4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_1DA9898F8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_1DA7AC524()
{
  return 0;
}

uint64_t sub_1DA7AC52C(uint64_t a1)
{
  uint64_t result = type metadata accessor for RBImageSnapshotter.RBImageOptions(319);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t *_s14SnapshotFormatOwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v10 = *(int *)(v7 + 20);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_1DA9898F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
      uint64_t v14 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      v14(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s14SnapshotFormatOwxx(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = a1 + *(int *)(v2 + 20);
    uint64_t v5 = sub_1DA9898F8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unsigned char *_s14SnapshotFormatOwcp(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1DA9898F8();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(void *)&a1[*(int *)(v6 + 24)] = *(void *)&a2[*(int *)(v6 + 24)];
    uint64_t v12 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v12(a1, 0, 1, v6);
  }
  return a1;
}

unsigned char *_s14SnapshotFormatOwca(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      uint64_t v17 = *(int *)(v6 + 20);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_1DA9898F8();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
      *(void *)&a1[*(int *)(v6 + 24)] = *(void *)&a2[*(int *)(v6 + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DA7ABAAC((uint64_t)a1, type metadata accessor for CAMLSnapshotter.CAMLOptions);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  uint64_t v11 = *(int *)(v6 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_1DA9898F8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  *(void *)&a1[*(int *)(v6 + 24)] = *(void *)&a2[*(int *)(v6 + 24)];
  uint64_t v15 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  v15(a1, 0, 1, v6);
  return a1;
}

unsigned char *_s14SnapshotFormatOwtk(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = *(int *)(v6 + 20);
    int v9 = &a1[v8];
    int v10 = &a2[v8];
    uint64_t v11 = sub_1DA9898F8();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)&a1[*(int *)(v6 + 24)] = *(void *)&a2[*(int *)(v6 + 24)];
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

unsigned char *_s14SnapshotFormatOwta(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      uint64_t v16 = *(int *)(v6 + 20);
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      uint64_t v19 = sub_1DA9898F8();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
      *(void *)&a1[*(int *)(v6 + 24)] = *(void *)&a2[*(int *)(v6 + 24)];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DA7ABAAC((uint64_t)a1, type metadata accessor for CAMLSnapshotter.CAMLOptions);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  uint64_t v11 = *(int *)(v6 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_1DA9898F8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)&a1[*(int *)(v6 + 24)] = *(void *)&a2[*(int *)(v6 + 24)];
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t _s14SnapshotFormatOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7ACEE4);
}

uint64_t sub_1DA7ACEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t _s14SnapshotFormatOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7ACF64);
}

uint64_t sub_1DA7ACF64(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1DA7ACFE4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1DA7AD04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t sub_1DA7AD0BC()
{
  uint64_t result = type metadata accessor for CAMLSnapshotter.CAMLOptions(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DA7AD134()
{
  return type metadata accessor for LayerSnapshotter(0);
}

uint64_t sub_1DA7AD13C()
{
  uint64_t result = sub_1DA989F38();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DA989EB8();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for LayerSnapshotter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayerSnapshotter);
}

uint64_t dispatch thunk of LayerSnapshotter.screenshotManager.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of LayerSnapshotter.screenshotManager.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of LayerSnapshotter.screenshotManager.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of LayerSnapshotter.logger.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of LayerSnapshotter.logger.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of LayerSnapshotter.logger.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of LayerSnapshotter.signposter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of LayerSnapshotter.signposter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of LayerSnapshotter.signposter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of LayerSnapshotter.dataProtectionMonitor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of LayerSnapshotter.dataProtectionMonitor.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of LayerSnapshotter.dataProtectionMonitor.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of LayerSnapshotter.snapshot(request:qualityOfService:completionHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of LayerSnapshotter.requestRequiresSnapshotting<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t initializeBufferWithCopyOfBuffer for LayerSnapshotter.SupportedLayer(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

void destroy for LayerSnapshotter.SupportedLayer(id *a1)
{
}

uint64_t assignWithCopy for LayerSnapshotter.SupportedLayer(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for LayerSnapshotter.SupportedLayer(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for LayerSnapshotter.SupportedLayer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LayerSnapshotter.SupportedLayer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DA7AD5C8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1DA7AD5D0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LayerSnapshotter.SupportedLayer()
{
  return &type metadata for LayerSnapshotter.SupportedLayer;
}

id sub_1DA7AD5F0(id result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2) {
    return (id)swift_bridgeObjectRetain();
  }
  if (a3 <= 1u) {
    return result;
  }
  return result;
}

void destroy for LayerSnapshotter.Result(uint64_t a1)
{
}

uint64_t _s9ChronoKit16LayerSnapshotterC6ResultOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1DA7AD5F0(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LayerSnapshotter.Result(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1DA7AD5F0(*(id *)a2, v4, v5);
  id v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1DA7A8564(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LayerSnapshotter.Result(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1DA7A8564(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LayerSnapshotter.Result(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LayerSnapshotter.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DA7AD7B4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1DA7AD7BC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LayerSnapshotter.Result()
{
  return &type metadata for LayerSnapshotter.Result;
}

uint64_t sub_1DA7AD7D4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1DA7AD814()
{
  sub_1DA7AB2A0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1DA7AD81C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1DA7AD82C()
{
  unint64_t result = qword_1EBE645F8;
  if (!qword_1EBE645F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE645F8);
  }
  return result;
}

uint64_t sub_1DA7AD880(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA7AD8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v56 = a5;
  uint64_t v53 = a4;
  uint64_t v7 = (const char *)sub_1DA989EC8();
  uint64_t v50 = *((void *)v7 - 1);
  long long v51 = v7;
  MEMORY[0x1F4188790](v7);
  long long v49 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v54 = sub_1DA989E78();
  uint64_t v57 = *(void *)(v54 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v54);
  long long v52 = &v43[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v43[-v11];
  uint64_t v13 = sub_1DA989EB8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = &v43[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = *(void **)a1;
  uint64_t v18 = *(void *)(a1 + 8);
  int v19 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v20 = a2 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter;
  swift_beginAccess();
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v55 = v13;
  v21(v16, v20, v13);
  sub_1DA7AD5F0(v17, v18, v19);
  sub_1DA7AD5F0(v17, v18, v19);
  sub_1DA7AD5F0(v17, v18, v19);
  sub_1DA7AD5F0(v17, v18, v19);
  uint64_t v22 = sub_1DA989EA8();
  sub_1DA989ED8();
  int v23 = sub_1DA98C6A8();
  if (sub_1DA98C7F8())
  {
    os_log_t v45 = v22;
    int v44 = v23;
    long long v46 = v16;
    uint64_t v48 = v12;
    uint64_t v47 = v14;
    uint64_t v24 = v54;
    swift_retain();
    uint64_t v25 = v49;
    sub_1DA989F08();
    swift_release();
    uint64_t v27 = v50;
    uint64_t v26 = v51;
    if ((*(unsigned int (**)(unsigned char *, const char *))(v50 + 88))(v25, v51) == *MEMORY[0x1E4FBD340])
    {
      char v28 = 0;
      long long v51 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, const char *))(v27 + 8))(v25, v26);
      long long v51 = "<snapshotTaken?>=%{name=snapshotTaken,public}s <error?>=%{name=error,public}s";
      char v28 = 2;
    }
    uint64_t v29 = v53;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v57 + 16))(v52, v48, v24);
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v59 = v31;
    *(unsigned char *)uint64_t v30 = v28;
    *(unsigned char *)(v30 + 1) = v28;
    *(_WORD *)(v30 + 2) = 2082;
    if (v19)
    {
      if (v19 == 1)
      {
        unint64_t v32 = 0xE300000000000000;
        uint64_t v33 = 5457241;
      }
      else
      {
        uint64_t v60 = 673206094;
        unint64_t v61 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        sub_1DA98C148();
        sub_1DA98C148();
        sub_1DA7A8564(v17, v18, 2u);
        uint64_t v33 = v60;
        unint64_t v32 = v61;
      }
    }
    else
    {
      unint64_t v32 = 0xE200000000000000;
      uint64_t v33 = 20302;
    }
    uint64_t v60 = sub_1DA8C5E00(v33, v32, &v59);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA7A8564(v17, v18, v19);
    sub_1DA7A8564(v17, v18, v19);
    *(_WORD *)(v30 + 12) = 2082;
    if (!v19 || (uint64_t v34 = 7104878, v19 == 1) && v17)
    {
      swift_getErrorValue();
      uint64_t v35 = v58;
      sub_1DA7AD5F0(v17, v18, v19);
      uint64_t v34 = sub_1DA9275A8(v35);
      unint64_t v37 = v36;
      sub_1DA7A8564(v17, v18, v19);
    }
    else
    {
      unint64_t v37 = 0xE300000000000000;
    }
    uint64_t v60 = sub_1DA8C5E00(v34, v37, &v59);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA7A8564(v17, v18, v19);
    sub_1DA7A8564(v17, v18, v19);
    uint64_t v38 = v52;
    os_signpost_id_t v39 = sub_1DA989E58();
    os_log_t v40 = v45;
    _os_signpost_emit_with_name_impl(&dword_1DA795000, v45, (os_signpost_type_t)v44, v39, "LayerSnapshotting", v51, (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v31, -1, -1);
    MEMORY[0x1E0178DA0](v30, -1, -1);

    uint64_t v41 = *(void (**)(unsigned char *, uint64_t))(v57 + 8);
    v41(v48, v24);
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v46, v55);
    v41(v38, v24);
  }
  else
  {

    sub_1DA7A8564(v17, v18, v19);
    sub_1DA7A8564(v17, v18, v19);
    sub_1DA7A8564(v17, v18, v19);
    sub_1DA7A8564(v17, v18, v19);
    (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v12, v54);
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v55);
    uint64_t v29 = v53;
  }
  uint64_t v60 = (uint64_t)v17;
  unint64_t v61 = v18;
  char v62 = v19;
  return v29(&v60);
}

uint64_t sub_1DA7ADF6C()
{
  unint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E30) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = sub_1DA989478();
  uint64_t v5 = *(void *)(v15 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + v6 + 8) & ~v6;
  uint64_t v16 = v2 | v6 | 7;
  unint64_t v14 = ((((((((*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  swift_release();
  uint64_t v8 = v0 + v3;

  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + v3 + v1[11];
  uint64_t v10 = sub_1DA98B9E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v8 + v1[12];
  uint64_t v12 = sub_1DA989E78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v15);
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, v14, v16);
}

uint64_t sub_1DA7AE1B8()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E30) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_1DA989478() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DA7AA600(*(void *)(v0 + 16), (void **)(v0 + v2), *(void **)(v0 + v3), v0 + v5, *(void *)(v0 + v6), *(void *)(v0 + v7), *(void *)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1DA7AE2F8(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_1DA7AE308()
{
  unint64_t result = qword_1EBE66CD0;
  if (!qword_1EBE66CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE66CD0);
  }
  return result;
}

uint64_t objectdestroy_29Tm()
{
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E30) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_1DA989478();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v9 = v2 | v7 | 7;
  unint64_t v10 = ((*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = v0 + v3;

  swift_bridgeObjectRelease();
  uint64_t v12 = v0 + v3 + v1[11];
  uint64_t v13 = sub_1DA98B9E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v11 + v1[12];
  uint64_t v15 = sub_1DA989E78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);

  return MEMORY[0x1F4186498](v0, v10, v9);
}

void sub_1DA7AE56C(void *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E30) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1DA989478();
  sub_1DA7A9D9C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint64_t (**)(uint64_t *))(v1 + 40), *(void *)(v1 + 48), v1 + v4);
}

uint64_t sub_1DA7AE67C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t dispatch thunk of StatefulStoreReloadFailurePolicy.reloadFailed(for:entries:originalConfiguration:nextConfiguration:nextState:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 72))();
}

uint64_t sub_1DA7AE76C()
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v0 + 88) + 16));
  swift_beginAccess();
  int v1 = *(unsigned __int8 *)(v0 + 57);
  if (v1 != 2) {
    return v1 & 1;
  }
  id v2 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_1DA98C8C8();
    swift_unknownObjectRelease();
    sub_1DA7A1930(&v6, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B48);
  if (swift_dynamicCast())
  {
    LOBYTE(v1) = v7;
    return v1 & 1;
  }
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_1DA7AE8A4()
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v0 + 104) + 16));
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 72) != 1) {
    return *(void *)(v0 + 64);
  }
  id v1 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  id v2 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_1DA98C8C8();
    swift_unknownObjectRelease();
    sub_1DA7A1930(&v6, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B48);
  uint64_t v5 = &v7;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v5 = (char *)(v0 + 56);
    swift_beginAccess();
  }
  return *(void *)v5;
}

uint64_t sub_1DA7AE9E0()
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v0 + 112) + 16));
  swift_beginAccess();
  if ((*(unsigned char *)(v0 + 81) & 1) == 0) {
    return *(void *)(v0 + 72);
  }
  id v1 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  id v2 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_1DA98C8C8();
    swift_unknownObjectRelease();
    sub_1DA7A1930(&v6, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5AB70);
  if (swift_dynamicCast())
  {
    uint64_t v5 = &v7;
  }
  else
  {
    uint64_t v5 = (char *)(v0 + 56);
    swift_beginAccess();
  }
  return *(void *)v5;
}

uint64_t sub_1DA7AEB3C()
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v0 + 104) + 16));
  swift_beginAccess();
  if (*(void *)(v0 + 64))
  {
    uint64_t v1 = *(void *)(v0 + 64);
  }
  else
  {
    id v2 = *(id *)(v0 + 16);
    swift_bridgeObjectRetain();
    id v3 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(v2, sel_valueForKey_, v3);

    if (v4)
    {
      sub_1DA98C8C8();
      swift_unknownObjectRelease();
      sub_1DA7A1930(&v6, v8);
    }
    else
    {
      memset(v8, 0, sizeof(v8));
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E58F8);
    if (swift_dynamicCast())
    {
      uint64_t v1 = v7;
    }
    else
    {
      swift_beginAccess();
      uint64_t v1 = *(void *)(v0 + 56);
      swift_bridgeObjectRetain();
    }
  }
  swift_bridgeObjectRetain();
  return v1;
}

BOOL static SystemDataMigrationState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SystemDataMigrationState.hash(into:)()
{
  return sub_1DA98CF28();
}

uint64_t SystemDataMigrationState.hashValue.getter()
{
  return sub_1DA98CF68();
}

uint64_t _s9ChronoKit31InteractionAuthenticationPolicyO9hashValueSivg_0()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA7AED64()
{
  return sub_1DA98CF28();
}

uint64_t sub_1DA7AED90()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA7AEDD4()
{
  type metadata accessor for _SystemDataMigrator();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A270);
  swift_allocObject();
  uint64_t result = sub_1DA98A038();
  *(void *)(v0 + 16) = result;
  qword_1EBE5A430 = v0;
  return result;
}

uint64_t static _SystemDataMigrator.shared.getter()
{
  if (qword_1EBE5A440 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1DA7AEE9C()
{
  return sub_1DA98A0F8();
}

uint64_t sub_1DA7AEF18()
{
  uint64_t v0 = DMIsMigrationNeeded();
  if (qword_1EBE66028 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(*((void *)off_1EBE66018 + 26) + 88);
  id v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LODWORD(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  if ((v0 | v2))
  {
    swift_retain();
    sub_1DA98A028();
    swift_release();
    if (v0) {
      DMPerformMigrationIfNeeded();
    }
    else {
      sub_1DA7AF18C();
    }
    swift_retain();
    sub_1DA98A028();
    swift_release();
  }
  return v0;
}

uint64_t sub_1DA7AF038(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t _SystemDataMigrator.deinit()
{
  swift_release();
  return v0;
}

uint64_t _SystemDataMigrator.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA7AF0E4()
{
  return sub_1DA7AEF18() & 1;
}

uint64_t sub_1DA7AF10C()
{
  return sub_1DA98A0F8();
}

void sub_1DA7AF18C()
{
  void aBlock[6] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1DA98C5F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DA98C598();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1DA98B4A8();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1DA7A6D9C();
  sub_1DA98B478();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1DA7AF9F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE65C80);
  sub_1DA7A0410((unint64_t *)&qword_1EBE65C88, &qword_1EBE65C80);
  sub_1DA98C918();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC68], v0);
  long long v6 = sub_1DA98C638();
  int out_token = -1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 60;
  uint64_t v8 = (uint64_t *)(v7 + 16);
  if (qword_1EA8E5570 != -1) {
    goto LABEL_15;
  }
  while (1)
  {
    uint64_t v9 = sub_1DA989F38();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EA8ED808);
    swift_retain();
    unint64_t v10 = sub_1DA989F18();
    os_log_type_t v11 = sub_1DA98C548();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 134217984;
      swift_beginAccess();
      aBlock[0] = *(void *)(v7 + 16);
      sub_1DA98C858();
      swift_release();
      _os_log_impl(&dword_1DA795000, v10, v11, "Simulating migration for %lds", v12, 0xCu);
      MEMORY[0x1E0178DA0](v12, -1, -1);
    }
    else
    {

      swift_release();
    }
    aBlock[4] = sub_1DA7AFA58;
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DA7AF038;
    aBlock[3] = &block_descriptor_1;
    uint64_t v13 = _Block_copy(aBlock);
    swift_retain();
    long long v6 = v6;
    swift_release();
    uint32_t v14 = notify_register_dispatch("com.apple.chronod.finishmigration", &out_token, v6, v13);
    _Block_release(v13);

    if (v14)
    {
      swift_release();
      goto LABEL_13;
    }
    swift_beginAccess();
    if (*v8 < 1) {
      break;
    }
    while (1)
    {
      sleep(1u);
      uint64_t v15 = *v8 - 1;
      if (__OFSUB__(*v8, 1)) {
        break;
      }
      *uint64_t v8 = v15;
      if (v15 <= 0) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_15:
    swift_once();
  }
LABEL_10:
  notify_cancel(out_token);
  uint64_t v16 = sub_1DA989F18();
  os_log_type_t v17 = sub_1DA98C548();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v19;
    *(_DWORD *)uint64_t v18 = 136446210;
    v20[1] = sub_1DA8C5E00(0xD000000000000021, 0x80000001DA99CF50, &v22);
    sub_1DA98C858();
    _os_log_impl(&dword_1DA795000, v16, v17, "%{public}s: Done simulating migration", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v19, -1, -1);
    MEMORY[0x1E0178DA0](v18, -1, -1);
    swift_release();

    return;
  }
  swift_release();

LABEL_13:
}

unint64_t sub_1DA7AF740()
{
  unint64_t result = qword_1EA8E58F0;
  if (!qword_1EA8E58F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E58F0);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SystemDataMigrationState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SystemDataMigrationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA7AF8FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1DA7AF924(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DA7AF92C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SystemDataMigrationState()
{
  return &type metadata for SystemDataMigrationState;
}

uint64_t dispatch thunk of SystemDataMigrator.migrateIfNeeded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SystemDataMigrator.isMigratingPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for _SystemDataMigrator()
{
  return self;
}

uint64_t method lookup function for _SystemDataMigrator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _SystemDataMigrator);
}

uint64_t dispatch thunk of _SystemDataMigrator.isMigratingPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of _SystemDataMigrator.migrateIfNeeded()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

unint64_t sub_1DA7AF9F0()
{
  unint64_t result = qword_1EBE65CA0;
  if (!qword_1EBE65CA0)
  {
    sub_1DA98C598();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE65CA0);
  }
  return result;
}

uint64_t sub_1DA7AFA48()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA7AFA58()
{
  uint64_t result = swift_beginAccess();
  *(void *)(v0 + 16) = 0;
  return result;
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t RemoteActivityArchiveBudgetType.description.getter()
{
  if (*v0) {
    return 0x6C616D726F6ELL;
  }
  else {
    return 0x676E697472656C61;
  }
}

uint64_t RemoteActivityArchiveBudgetType.hash(into:)()
{
  return sub_1DA98CF28();
}

BOOL static RemoteActivityArchiveBudgetType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DA7AFB20()
{
  return 0;
}

uint64_t sub_1DA7AFB2C()
{
  return 0;
}

void sub_1DA7AFB38(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DA7AFB44(uint64_t a1)
{
  unint64_t v2 = sub_1DA7B00C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DA7AFB80(uint64_t a1)
{
  unint64_t v2 = sub_1DA7B00C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1DA7AFBBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DA7AFBDC()
{
  if (*v0) {
    return 0x6C616D726F6ELL;
  }
  else {
    return 0x676E697472656C61;
  }
}

uint64_t sub_1DA7AFC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DA7B3CE0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DA7AFC3C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DA7AFC48(uint64_t a1)
{
  unint64_t v2 = sub_1DA7B0018();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DA7AFC84(uint64_t a1)
{
  unint64_t v2 = sub_1DA7B0018();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DA7AFCC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1DA7AFCF0(uint64_t a1)
{
  unint64_t v2 = sub_1DA7B006C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DA7AFD2C(uint64_t a1)
{
  unint64_t v2 = sub_1DA7B006C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static RemoteActivityArchiveBudgetType.allCases.getter()
{
  return &unk_1F34D9320;
}

uint64_t RemoteActivityArchiveBudgetType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5900);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5908);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  BOOL v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5910);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  os_log_type_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1DA7B0018();
  sub_1DA98CFC8();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1DA7B006C();
    uint32_t v14 = v18;
    sub_1DA98CD38();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1DA7B00C0();
    sub_1DA98CD38();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_1DA7B0018()
{
  unint64_t result = qword_1EA8E5918;
  if (!qword_1EA8E5918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5918);
  }
  return result;
}

unint64_t sub_1DA7B006C()
{
  unint64_t result = qword_1EA8E5920;
  if (!qword_1EA8E5920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5920);
  }
  return result;
}

unint64_t sub_1DA7B00C0()
{
  unint64_t result = qword_1EA8E5928;
  if (!qword_1EA8E5928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5928);
  }
  return result;
}

uint64_t RemoteActivityArchiveBudgetType.hashValue.getter()
{
  return sub_1DA98CF68();
}

uint64_t RemoteActivityArchiveBudgetType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5930);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5938);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  BOOL v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5940);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1DA7B0018();
  os_log_type_t v11 = v32;
  sub_1DA98CFB8();
  if (v11) {
    goto LABEL_6;
  }
  unint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint32_t v14 = v10;
  uint64_t v15 = sub_1DA98CD18();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1DA98CA88();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5948);
    *char v22 = &type metadata for RemoteActivityArchiveBudgetType;
    sub_1DA98CC78();
    sub_1DA98CA78();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1DA7B006C();
    uint64_t v18 = v14;
    sub_1DA98CC68();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1DA7B00C0();
    sub_1DA98CC68();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_1DA7B05B4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return RemoteActivityArchiveBudgetType.init(from:)(a1, a2);
}

uint64_t sub_1DA7B05CC(void *a1)
{
  return RemoteActivityArchiveBudgetType.encode(to:)(a1);
}

void sub_1DA7B05E4(void *a1@<X8>)
{
  *a1 = &unk_1F34D93D8;
}

uint64_t static RemoteActivityArchiveBudget.makeKey(activityBudgetID:activityBudgetType:)()
{
  sub_1DA989698();
  sub_1DA7B41EC(&qword_1EA8E5950, MEMORY[0x1E4F27990]);
  uint64_t v1 = sub_1DA98CDD8();
  sub_1DA98C148();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t RemoteActivityArchiveBudget.activityBudgetID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DA989698();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t RemoteActivityArchiveBudget.activityBudgetID.setter(uint64_t a1)
{
  uint64_t v3 = sub_1DA989698();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*RemoteActivityArchiveBudget.activityBudgetID.modify())()
{
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.activityBudgetType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for RemoteActivityArchiveBudget();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for RemoteActivityArchiveBudget()
{
  uint64_t result = qword_1EBE5AA98;
  if (!qword_1EBE5AA98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RemoteActivityArchiveBudget.activityBudgetType.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for RemoteActivityArchiveBudget();
  *(unsigned char *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*RemoteActivityArchiveBudget.activityBudgetType.modify())()
{
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.id.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RemoteActivityArchiveBudget.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RemoteActivityArchiveBudget.id.modify())()
{
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 28);
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RemoteActivityArchiveBudget.startDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 28);
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoteActivityArchiveBudget.startDate.modify())()
{
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.lastRefreshDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 32);
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RemoteActivityArchiveBudget.lastRefreshDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 32);
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RemoteActivityArchiveBudget.lastRefreshDate.modify())()
{
  return CGSizeMake;
}

double RemoteActivityArchiveBudget.windowDuration.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 36));
}

uint64_t RemoteActivityArchiveBudget.windowDuration.setter(double a1)
{
  uint64_t result = type metadata accessor for RemoteActivityArchiveBudget();
  *(double *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*RemoteActivityArchiveBudget.windowDuration.modify())()
{
  return CGSizeMake;
}

double RemoteActivityArchiveBudget.maximumDuration.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 40));
}

uint64_t RemoteActivityArchiveBudget.maximumDuration.setter(double a1)
{
  uint64_t result = type metadata accessor for RemoteActivityArchiveBudget();
  *(double *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*RemoteActivityArchiveBudget.maximumDuration.modify())()
{
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.maximumBudgetPerWindow.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 44));
}

uint64_t RemoteActivityArchiveBudget.maximumBudgetPerWindow.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for RemoteActivityArchiveBudget();
  *(void *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*RemoteActivityArchiveBudget.maximumBudgetPerWindow.modify())()
{
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.remainingBudget.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 48));
}

uint64_t RemoteActivityArchiveBudget.remainingBudget.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for RemoteActivityArchiveBudget();
  *(void *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*RemoteActivityArchiveBudget.remainingBudget.modify())()
{
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.init(activityBudgetID:activityBudgetType:windowDuration:maximumDuration:maximumBudgetPerWindow:startDate:remainingBudget:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  char v16 = *a2;
  uint64_t v17 = sub_1DA989698();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a7, a1, v17);
  uint64_t v19 = (int *)type metadata accessor for RemoteActivityArchiveBudget();
  *(unsigned char *)(a7 + v19[5]) = v16;
  sub_1DA7B41EC(&qword_1EA8E5950, MEMORY[0x1E4F27990]);
  uint64_t v28 = sub_1DA98CDD8();
  uint64_t v29 = v20;
  sub_1DA98C148();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);
  char v21 = (uint64_t *)(a7 + v19[6]);
  *char v21 = v28;
  v21[1] = v29;
  *(double *)(a7 + v19[9]) = a8;
  *(double *)(a7 + v19[10]) = a9;
  *(void *)(a7 + v19[11]) = a3;
  uint64_t v22 = a7 + v19[7];
  uint64_t v23 = sub_1DA989638();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, a4, v23);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(a7 + v19[8], a4, v23);
  uint64_t v26 = a5;
  if (a6) {
    uint64_t v26 = a3;
  }
  *(void *)(a7 + v19[12]) = v26;
  return result;
}

uint64_t RemoteActivityArchiveBudget.hash(into:)()
{
  return sub_1DA98CF28();
}

unint64_t sub_1DA7B1250(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 25705;
      break;
    case 3:
      unint64_t result = 0x7461447472617473;
      break;
    case 4:
      unint64_t result = 0x726665527473616CLL;
      break;
    case 5:
      unint64_t result = 0x7544776F646E6977;
      break;
    case 6:
      unint64_t result = 0x446D756D6978616DLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    case 8:
      unint64_t result = 0x6E696E69616D6572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DA7B1394()
{
  return sub_1DA7B1250(*v0);
}

uint64_t sub_1DA7B139C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DA7B3DCC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DA7B13C4(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1DA7B13D0(uint64_t a1)
{
  unint64_t v2 = sub_1DA7B2620();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DA7B140C(uint64_t a1)
{
  unint64_t v2 = sub_1DA7B2620();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RemoteActivityArchiveBudget.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5960);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1DA7B2620();
  sub_1DA98CFC8();
  v10[31] = 0;
  sub_1DA989698();
  sub_1DA7B41EC(&qword_1EBE5A068, MEMORY[0x1E4F27990]);
  sub_1DA98CDB8();
  if (!v2)
  {
    v10[30] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 20));
    v10[29] = 1;
    sub_1DA7B2674();
    sub_1DA98CDB8();
    v10[28] = 2;
    sub_1DA98CD68();
    v10[27] = 3;
    sub_1DA989638();
    sub_1DA7B41EC(&qword_1EBE58910, MEMORY[0x1E4F27928]);
    sub_1DA98CDB8();
    v10[26] = 4;
    sub_1DA98CDB8();
    v10[25] = 5;
    sub_1DA98CD88();
    v10[24] = 6;
    sub_1DA98CD88();
    v10[15] = 7;
    sub_1DA98CD98();
    v10[14] = 8;
    sub_1DA98CD98();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RemoteActivityArchiveBudget.hashValue.getter()
{
  return sub_1DA98CF68();
}

uint64_t RemoteActivityArchiveBudget.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_1DA989638();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = sub_1DA989698();
  uint64_t v45 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  os_log_type_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5978);
  uint64_t v41 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  MEMORY[0x1F4188790](v12);
  uint32_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for RemoteActivityArchiveBudget();
  MEMORY[0x1F4188790](v47);
  char v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  long long v46 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v17);
  sub_1DA7B2620();
  uint64_t v43 = v14;
  uint64_t v18 = v48;
  sub_1DA98CFB8();
  uint64_t v44 = v9;
  if (v18) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  }
  uint64_t v19 = v8;
  uint64_t v20 = v41;
  char v60 = 0;
  sub_1DA7B41EC(&qword_1EA8E5980, MEMORY[0x1E4F27990]);
  uint64_t v21 = v42;
  sub_1DA98CCF8();
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v16, v11, v9);
  char v58 = 1;
  sub_1DA7B26C8();
  sub_1DA98CCF8();
  uint64_t v22 = v16;
  uint64_t v23 = (int *)v47;
  v22[*(int *)(v47 + 20)] = v59;
  char v57 = 2;
  uint64_t v24 = sub_1DA98CCA8();
  uint64_t v25 = (uint64_t *)&v22[v23[6]];
  *uint64_t v25 = v24;
  v25[1] = v26;
  char v56 = 3;
  sub_1DA7B41EC(&qword_1EBE58918, MEMORY[0x1E4F27928]);
  uint64_t v48 = (uint64_t)v22;
  uint64_t v27 = v19;
  uint64_t v28 = v50;
  sub_1DA98CCF8();
  uint64_t v29 = v48 + v23[7];
  uint64_t v38 = *(void (**)(uint64_t, char *, uint64_t))(v49 + 32);
  uint64_t v39 = v49 + 32;
  v38(v29, v27, v28);
  char v55 = 4;
  unint64_t v37 = v6;
  sub_1DA98CCF8();
  uint64_t v30 = (uint64_t)v46;
  uint64_t v31 = v48;
  v38(v48 + v23[8], v37, v28);
  char v54 = 5;
  sub_1DA98CCC8();
  *(void *)(v31 + v23[9]) = v32;
  char v53 = 6;
  sub_1DA98CCC8();
  *(void *)(v31 + v23[10]) = v33;
  char v52 = 7;
  *(void *)(v31 + v23[11]) = sub_1DA98CCD8();
  char v51 = 8;
  uint64_t v34 = sub_1DA98CCD8();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v43, v21);
  *(void *)(v31 + v23[12]) = v34;
  sub_1DA7B271C(v31, v40);
  __swift_destroy_boxed_opaque_existential_1(v30);
  return sub_1DA7B2780(v31);
}

uint64_t sub_1DA7B1EEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DA7B1F24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DA989698();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_1DA7B1F8C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 20));
  return result;
}

uint64_t sub_1DA7B1F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_1DA989638();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

double sub_1DA7B200C(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 36));
}

double sub_1DA7B2018(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_1DA7B2024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_1DA989638();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1DA7B2094(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1DA989638();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*sub_1DA7B2104())()
{
  return CGSizeMake;
}

uint64_t sub_1DA7B2128(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_1DA7B2134(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 48));
}

uint64_t sub_1DA7B2140(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + *(int *)(a2 + 48)) = result;
  return result;
}

uint64_t (*sub_1DA7B214C())()
{
  return CGSizeMake;
}

uint64_t sub_1DA7B2170@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  char v10 = *a2;
  return RemoteActivityArchiveBudget.init(activityBudgetID:activityBudgetType:windowDuration:maximumDuration:maximumBudgetPerWindow:startDate:remainingBudget:)(a1, &v10, a3, a4, a5, a6 & 1, a7, a8, a9);
}

uint64_t sub_1DA7B21A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteActivityArchiveBudget.init(from:)(a1, a2);
}

uint64_t sub_1DA7B21B8(void *a1)
{
  return RemoteActivityArchiveBudget.encode(to:)(a1);
}

uint64_t sub_1DA7B21D4()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA7B2218()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA7B2258()
{
  uint64_t v1 = sub_1DA989638();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_1DA98CA18();
  uint64_t v8 = type metadata accessor for RemoteActivityArchiveBudget();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  v11[1] = *(void *)(v0 + *(int *)(v8 + 48));
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7B41EC((unint64_t *)&qword_1EBE58920, MEMORY[0x1E4F27928]);
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA989598();
  _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
  sub_1DA989548();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v4, v1);
  v9(v7, v1);
  sub_1DA98C3C8();
  sub_1DA98C148();
  return v12;
}

uint64_t sub_1DA7B2504@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a1 + 24));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

BOOL _s9ChronoKit27RemoteActivityArchiveBudgetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1DA989668() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for RemoteActivityArchiveBudget();
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = (int *)v4;
  uint64_t v6 = *(int *)(v4 + 24);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  BOOL v10 = v7 == *v9 && v8 == v9[1];
  if (v10 || (v11 = sub_1DA98CE58(), BOOL result = 0, (v11 & 1) != 0))
  {
    if ((sub_1DA9895E8() & 1) != 0
      && (sub_1DA9895E8() & 1) != 0
      && *(double *)(a1 + v5[9]) == *(double *)(a2 + v5[9])
      && *(double *)(a1 + v5[10]) == *(double *)(a2 + v5[10])
      && *(void *)(a1 + v5[11]) == *(void *)(a2 + v5[11]))
    {
      return *(void *)(a1 + v5[12]) == *(void *)(a2 + v5[12]);
    }
    return 0;
  }
  return result;
}

unint64_t sub_1DA7B2620()
{
  unint64_t result = qword_1EA8E5968;
  if (!qword_1EA8E5968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5968);
  }
  return result;
}

unint64_t sub_1DA7B2674()
{
  unint64_t result = qword_1EA8E5970;
  if (!qword_1EA8E5970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5970);
  }
  return result;
}

unint64_t sub_1DA7B26C8()
{
  unint64_t result = qword_1EA8E5988;
  if (!qword_1EA8E5988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5988);
  }
  return result;
}

uint64_t sub_1DA7B271C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteActivityArchiveBudget();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA7B2780(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoteActivityArchiveBudget();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DA7B27E0()
{
  unint64_t result = qword_1EA8E5990;
  if (!qword_1EA8E5990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5990);
  }
  return result;
}

unint64_t sub_1DA7B2838()
{
  unint64_t result = qword_1EA8E5998;
  if (!qword_1EA8E5998)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E59A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5998);
  }
  return result;
}

uint64_t sub_1DA7B2894()
{
  return sub_1DA7B41EC(&qword_1EA8E5950, MEMORY[0x1E4F27990]);
}

uint64_t sub_1DA7B28DC()
{
  return sub_1DA7B41EC(&qword_1EA8E5958, MEMORY[0x1E4F27990]);
}

unint64_t sub_1DA7B2928()
{
  unint64_t result = qword_1EA8E59A8;
  if (!qword_1EA8E59A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E59A8);
  }
  return result;
}

unint64_t sub_1DA7B2980()
{
  unint64_t result = qword_1EA8E59B0;
  if (!qword_1EA8E59B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E59B0);
  }
  return result;
}

uint64_t sub_1DA7B29DC(void *a1)
{
  a1[1] = sub_1DA7B41EC(&qword_1EA8E59B8, (void (*)(uint64_t))type metadata accessor for RemoteActivityArchiveBudget);
  a1[2] = sub_1DA7B41EC(&qword_1EA8E59C0, (void (*)(uint64_t))type metadata accessor for RemoteActivityArchiveBudget);
  a1[3] = sub_1DA7B41EC(&qword_1EA8E59C8, (void (*)(uint64_t))type metadata accessor for RemoteActivityArchiveBudget);
  a1[4] = sub_1DA7B41EC(&qword_1EA8E59D0, (void (*)(uint64_t))type metadata accessor for RemoteActivityArchiveBudget);
  uint64_t result = sub_1DA7B41EC(&qword_1EA8E59D8, (void (*)(uint64_t))type metadata accessor for RemoteActivityArchiveBudget);
  a1[5] = result;
  return result;
}

uint64_t sub_1DA7B2AD8()
{
  return sub_1DA7B41EC(&qword_1EA8E59E0, (void (*)(uint64_t))type metadata accessor for RemoteActivityArchiveBudget);
}

uint64_t sub_1DA7B2B20()
{
  return MEMORY[0x1E4FBB1B0];
}

ValueMetadata *type metadata accessor for RemoteActivityArchiveBudgetType()
{
  return &type metadata for RemoteActivityArchiveBudgetType;
}

void *initializeBufferWithCopyOfBuffer for RemoteActivityArchiveBudget(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DA989698();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (void *)((char *)a1 + v8);
    BOOL v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    unint64_t v13 = (char *)a1 + v12;
    uint32_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1DA989638();
    char v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v16((char *)a1 + a3[8], (char *)a2 + a3[8], v15);
    uint64_t v17 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    uint64_t v18 = a3[12];
    *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  }
  return a1;
}

uint64_t destroy for RemoteActivityArchiveBudget(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989698();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_1DA989638();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v6 - 8), v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 32);

  return v9(v7, v6);
}

uint64_t initializeWithCopy for RemoteActivityArchiveBudget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DA989698();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DA989638();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  return a1;
}

uint64_t assignWithCopy for RemoteActivityArchiveBudget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DA989698();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1DA989638();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(a1 + a3[8], a2 + a3[8], v13);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t initializeWithTake for RemoteActivityArchiveBudget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DA989698();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DA989638();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + a3[8], a2 + a3[8], v11);
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  return a1;
}

uint64_t assignWithTake for RemoteActivityArchiveBudget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DA989698();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1DA989638();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(a1 + a3[8], a2 + a3[8], v15);
  uint64_t v17 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteActivityArchiveBudget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7B32B8);
}

uint64_t sub_1DA7B32B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989698();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1DA989638();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for RemoteActivityArchiveBudget(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7B33FC);
}

uint64_t sub_1DA7B33FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DA989698();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1DA989638();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1DA7B352C()
{
  uint64_t result = sub_1DA989698();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DA989638();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RemoteActivityArchiveBudget.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RemoteActivityArchiveBudget.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA7B3778);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteActivityArchiveBudget.CodingKeys()
{
  return &type metadata for RemoteActivityArchiveBudget.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ReloadConfiguration.ReloadCost(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9ChronoKit31RemoteActivityArchiveBudgetTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA7B390CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1DA7B3934(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteActivityArchiveBudgetType.CodingKeys()
{
  return &type metadata for RemoteActivityArchiveBudgetType.CodingKeys;
}

ValueMetadata *type metadata accessor for RemoteActivityArchiveBudgetType.AlertingCodingKeys()
{
  return &type metadata for RemoteActivityArchiveBudgetType.AlertingCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteActivityArchiveBudgetType.NormalCodingKeys()
{
  return &type metadata for RemoteActivityArchiveBudgetType.NormalCodingKeys;
}

unint64_t sub_1DA7B3974()
{
  unint64_t result = qword_1EA8E59E8;
  if (!qword_1EA8E59E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E59E8);
  }
  return result;
}

unint64_t sub_1DA7B39CC()
{
  unint64_t result = qword_1EA8E59F0;
  if (!qword_1EA8E59F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E59F0);
  }
  return result;
}

unint64_t sub_1DA7B3A24()
{
  unint64_t result = qword_1EA8E59F8;
  if (!qword_1EA8E59F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E59F8);
  }
  return result;
}

unint64_t sub_1DA7B3A7C()
{
  unint64_t result = qword_1EA8E5A00;
  if (!qword_1EA8E5A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5A00);
  }
  return result;
}

unint64_t sub_1DA7B3AD4()
{
  unint64_t result = qword_1EA8E5A08;
  if (!qword_1EA8E5A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5A08);
  }
  return result;
}

unint64_t sub_1DA7B3B2C()
{
  unint64_t result = qword_1EA8E5A10;
  if (!qword_1EA8E5A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5A10);
  }
  return result;
}

unint64_t sub_1DA7B3B84()
{
  unint64_t result = qword_1EA8E5A18;
  if (!qword_1EA8E5A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5A18);
  }
  return result;
}

unint64_t sub_1DA7B3BDC()
{
  unint64_t result = qword_1EA8E5A20;
  if (!qword_1EA8E5A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5A20);
  }
  return result;
}

unint64_t sub_1DA7B3C34()
{
  unint64_t result = qword_1EA8E5A28;
  if (!qword_1EA8E5A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5A28);
  }
  return result;
}

unint64_t sub_1DA7B3C8C()
{
  unint64_t result = qword_1EA8E5A30;
  if (!qword_1EA8E5A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5A30);
  }
  return result;
}

uint64_t sub_1DA7B3CE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E697472656C61 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DA98CE58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616D726F6ELL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DA98CE58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DA7B3DCC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001DA99CFB0 || (sub_1DA98CE58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DA99CFD0 || (sub_1DA98CE58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1DA98CE58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065 || (sub_1DA98CE58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726665527473616CLL && a2 == 0xEF65746144687365 || (sub_1DA98CE58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7544776F646E6977 && a2 == 0xEE006E6F69746172 || (sub_1DA98CE58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x446D756D6978616DLL && a2 == 0xEF6E6F6974617275 || (sub_1DA98CE58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DA99CFF0 || (sub_1DA98CE58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E696E69616D6572 && a2 == 0xEF74656764754267)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_1DA98CE58();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_1DA7B41EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA7B4244()
{
  uint64_t result = sub_1DA98B3D8();
  qword_1EBE6F1A0 = result;
  return result;
}

uint64_t LiveWidgetEntryView.init(viewModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63830);
  sub_1DA98B268();
  *(_OWORD *)(a2 + 16) = v9;
  sub_1DA98B268();
  *(_OWORD *)(a2 + 32) = v9;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  uint64_t v4 = a1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logger;
  uint64_t v5 = a2 + *(int *)(type metadata accessor for LiveWidgetEntryView() + 36);
  uint64_t v6 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v5, v4, v6);
  type metadata accessor for LiveWidgetEntryViewModel(0);
  sub_1DA7BB5C4(&qword_1EBE63D60, (void (*)(uint64_t))type metadata accessor for LiveWidgetEntryViewModel);
  uint64_t result = sub_1DA98A318();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v8;
  return result;
}

uint64_t type metadata accessor for LiveWidgetEntryView()
{
  uint64_t result = qword_1EBE63C18;
  if (!qword_1EBE63C18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LiveWidgetEntryView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v192 = a1;
  uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59AD0);
  MEMORY[0x1F4188790](v188);
  uint64_t v191 = (uint64_t)&v146 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE599F0);
  MEMORY[0x1F4188790](v190);
  v189 = (char *)&v146 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61D78);
  MEMORY[0x1F4188790](v5 - 8);
  v187 = (char *)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DebugInfo();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v186 = (uint64_t)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DA989F38();
  uint64_t v184 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  v183 = (char *)&v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for InteractiveWidgetSetupViewModifier();
  MEMORY[0x1F4188790](v181);
  v182 = (uint64_t (**)(uint64_t))((char *)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for WidgetEntryKey();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v167 = (uint64_t (*)())((char *)&v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v151 = (uint64_t)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v146 - v17;
  uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59CB8);
  uint64_t v148 = *(void *)(v149 - 8);
  MEMORY[0x1F4188790](v149);
  uint64_t v147 = (char *)&v146 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59C28);
  MEMORY[0x1F4188790](v146);
  uint64_t v21 = (char *)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59C40);
  MEMORY[0x1F4188790](v150);
  uint64_t v23 = (char *)&v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59C58);
  MEMORY[0x1F4188790](v152);
  uint64_t v154 = (uint64_t (*)())((char *)&v146 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59C60);
  MEMORY[0x1F4188790](v153);
  uint64_t v159 = (uint64_t)&v146 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59A78);
  MEMORY[0x1F4188790](v158);
  uint64_t v193 = (uint64_t)&v146 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59A80);
  MEMORY[0x1F4188790](v162);
  uint64_t v164 = (uint64_t)&v146 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59A88);
  MEMORY[0x1F4188790](v163);
  uint64_t v166 = (uint64_t)&v146 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59A90);
  MEMORY[0x1F4188790](v165);
  uint64_t v169 = (uint64_t)&v146 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59AA8);
  MEMORY[0x1F4188790](v168);
  uint64_t v171 = (uint64_t)&v146 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59AA0);
  MEMORY[0x1F4188790](v170);
  uint64_t v174 = (uint64_t)&v146 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59A30);
  MEMORY[0x1F4188790](v173);
  uint64_t v175 = (uint64_t)&v146 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59B60);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v176 = (uint64_t)&v146 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59B30);
  MEMORY[0x1F4188790](v178);
  uint64_t v179 = (uint64_t)&v146 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59B20);
  uint64_t v37 = MEMORY[0x1F4188790](v36 - 8);
  v177 = (char *)&v146 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  uint64_t v180 = (uint64_t)&v146 - v39;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63F08);
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v42 = (char *)&v146 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = type metadata accessor for LiveWidgetEntryView();
  uint64_t v156 = *(void *)(v161 - 8);
  uint64_t v43 = MEMORY[0x1F4188790](v161);
  uint64_t v160 = (uint64_t)&v146 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v155 = (uint64_t)&v146 - v46;
  uint64_t v157 = v47;
  MEMORY[0x1F4188790](v45);
  uint64_t v49 = (char *)&v146 - v48;
  long long v198 = *(_OWORD *)(v1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63808);
  sub_1DA98B278();
  sub_1DA7B5DD8();
  long long v198 = *(_OWORD *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59CC0);
  sub_1DA98B278();
  uint64_t v50 = v201;
  if (*(unsigned char *)(*(void *)(v1 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__invalidated))
  {
    if (!v201)
    {
      *(void *)&long long v198 = sub_1DA98B1D8();
      uint64_t v50 = sub_1DA98B348();
    }
  }
  else
  {
    sub_1DA7B9BDC(v1, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    if (!v50)
    {
      uint64_t v51 = *((void *)v49 + 1);
      if (*(unsigned char *)(v51 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__hasLoadedViewOnce) == 1
        && (*(unsigned char *)(v51 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__needsViewRebuild) & 1) == 0)
      {
        swift_retain();
      }
      else
      {
        LOBYTE(v198) = 1;
        swift_retain();
        sub_1DA899808((char *)&v198);
      }
      uint64_t v52 = v51 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
      swift_beginAccess();
      sub_1DA7A1F58(v52, (uint64_t)v42, &qword_1EBE63F08);
      uint64_t v50 = sub_1DA7B9528();
      sub_1DA7A1AE0((uint64_t)v42, &qword_1EBE63F08);
      swift_release();
    }
    sub_1DA7BB60C((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  }
  *(void *)&long long v198 = v50;
  uint64_t v53 = *(void *)(v2 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
  swift_beginAccess();
  sub_1DA7A1F58(v53, (uint64_t)v18, &qword_1EBE61CC0);
  uint64_t v172 = v50;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63830);
  sub_1DA7B9A2C();
  char v54 = v147;
  sub_1DA98B068();
  sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE61CC0);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v56 = *(void *)(v2 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
  swift_beginAccess();
  char v57 = (uint64_t *)&v21[*(int *)(v146 + 36)];
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63768);
  sub_1DA7A1F58(v56, (uint64_t)v57 + *(int *)(v58 + 28), &qword_1EBE61CC0);
  *char v57 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v148 + 32))(v21, v54, v149);
  uint64_t v59 = swift_getKeyPath();
  uint64_t v60 = *(void *)(v2 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
  swift_beginAccess();
  uint64_t v61 = v151;
  sub_1DA7A1F58(v60, v151, &qword_1EBE61CC0);
  uint64_t v62 = sub_1DA989638();
  LOBYTE(v57) = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v61, 1, v62) != 1;
  sub_1DA7A1AE0(v61, &qword_1EBE61CC0);
  sub_1DA7A1F58((uint64_t)v21, (uint64_t)v23, &qword_1EBE59C28);
  uint64_t v63 = &v23[*(int *)(v150 + 36)];
  *(void *)uint64_t v63 = v59;
  v63[8] = (char)v57;
  sub_1DA7A1AE0((uint64_t)v21, &qword_1EBE59C28);
  uint64_t v64 = *(void *)(v2 + 56);
  uint64_t v185 = v9;
  if (v64)
  {
    uint64_t v196 = v64;
    __int16 v197 = 0;
    swift_retain();
  }
  else
  {
    swift_retain();
    sub_1DA892BB4((uint64_t)&v198);
    swift_release();
    uint64_t v196 = v198;
    LOBYTE(v197) = BYTE8(v198);
    HIBYTE(v197) = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59CA0);
  sub_1DA7B9B18();
  sub_1DA98AA68();
  uint64_t v65 = v198;
  char v66 = BYTE8(v198);
  char v67 = BYTE9(v198);
  uint64_t v68 = sub_1DA98B3A8();
  uint64_t v70 = v69;
  uint64_t v71 = v154;
  sub_1DA7A1F58((uint64_t)v23, (uint64_t)v154, &qword_1EBE59C40);
  uint64_t v72 = (char *)v71 + *(int *)(v152 + 36);
  *(void *)uint64_t v72 = v65;
  v72[8] = v66;
  v72[9] = v67;
  *((void *)v72 + 2) = v68;
  *((void *)v72 + 3) = v70;
  sub_1DA7A1AE0((uint64_t)v23, &qword_1EBE59C40);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v70) = v198;
  uint64_t v73 = v159;
  sub_1DA7A1F58((uint64_t)v71, v159, &qword_1EBE59C58);
  *(unsigned char *)(v73 + *(int *)(v153 + 36)) = v70;
  sub_1DA7A1AE0((uint64_t)v71, &qword_1EBE59C58);
  sub_1DA7A1A44(*(void *)(v2 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)&v198);
  uint64_t v74 = v199;
  uint64_t v75 = v200;
  __swift_project_boxed_opaque_existential_0(&v198, v199);
  uint64_t v76 = *(uint64_t (**)(uint64_t, uint64_t))(v75 + 8);
  swift_retain();
  uint64_t v77 = (void *)v76(v74, v75);
  uint64_t v154 = type metadata accessor for WidgetEntryKey;
  uint64_t v78 = (id *)v167;
  sub_1DA7B9BDC((uint64_t)v77 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v167, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);

  id v79 = v78[1];
  sub_1DA7BB60C((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v198);
  swift_release();
  uint64_t v80 = (id *)(*(void *)(v2 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
  swift_beginAccess();
  LOBYTE(v74) = objc_msgSend(*v80, sel_backgroundViewPolicy) != (id)1;
  type metadata accessor for DebugOverlayObserver();
  swift_allocObject();
  id v81 = v79;
  sub_1DA8D7FD4();
  sub_1DA7BB5C4(&qword_1EBE59BA0, (void (*)(uint64_t))type metadata accessor for DebugOverlayObserver);
  uint64_t v82 = sub_1DA98A318();
  uint64_t v84 = v83;
  uint64_t v85 = v193;
  sub_1DA7A1F58(v73, v193, &qword_1EBE59C60);

  uint64_t v86 = v85 + *(int *)(v158 + 36);
  *(void *)uint64_t v86 = v81;
  *(unsigned char *)(v86 + 8) = v74;
  *(void *)(v86 + 16) = v82;
  *(void *)(v86 + 24) = v84;
  sub_1DA7A1AE0(v73, &qword_1EBE59C60);
  sub_1DA7A1A44(*(void *)(v2 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)&v198);
  uint64_t v87 = v199;
  uint64_t v88 = v200;
  __swift_project_boxed_opaque_existential_0(&v198, v199);
  unint64_t v89 = *(uint64_t (**)(uint64_t, uint64_t))(v88 + 8);
  swift_retain();
  uint64_t v90 = v2;
  unint64_t v91 = (void *)v89(v87, v88);
  sub_1DA7B9BDC((uint64_t)v91 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v78, (uint64_t (*)(void))v154);

  id v92 = v78[1];
  sub_1DA7BB60C((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v198);
  swift_release();
  LOBYTE(v84) = *(unsigned char *)(v2 + 48);
  uint64_t v93 = v2;
  uint64_t v94 = v155;
  sub_1DA7B9BDC(v93, v155, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  char v95 = 1;
  if ((v84 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1DA98A0C8();
    swift_release();
    swift_release();
    swift_release();
    char v95 = v198;
  }
  sub_1DA7BB60C(v94, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  uint64_t v96 = v193;
  uint64_t v97 = v164;
  sub_1DA7A1F58(v193, v164, &qword_1EBE59A78);
  uint64_t v98 = v97 + *(int *)(v162 + 36);
  *(void *)uint64_t v98 = v92;
  *(unsigned char *)(v98 + 8) = v95;
  sub_1DA7A1AE0(v96, &qword_1EBE59A78);
  uint64_t v99 = swift_getKeyPath();
  uint64_t v100 = v166;
  sub_1DA7A1F58(v97, v166, &qword_1EBE59A80);
  uint64_t v101 = v100 + *(int *)(v163 + 36);
  *(void *)uint64_t v101 = v99;
  *(unsigned char *)(v101 + 8) = 1;
  sub_1DA7A1AE0(v97, &qword_1EBE59A80);
  uint64_t v102 = v160;
  uint64_t v167 = type metadata accessor for LiveWidgetEntryView;
  sub_1DA7B9BDC(v90, v160, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  uint64_t v103 = *(unsigned __int8 *)(v156 + 80);
  uint64_t v104 = (v103 + 16) & ~v103;
  uint64_t v193 = v103 | 7;
  uint64_t v164 = v104 + v157;
  uint64_t v105 = swift_allocObject();
  sub_1DA7BB410(v102, v105 + v104, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  uint64_t v106 = v90;
  uint64_t v107 = v169;
  sub_1DA7A1F58(v100, v169, &qword_1EBE59A88);
  uint64_t v108 = (uint64_t (**)())(v107 + *(int *)(v165 + 36));
  *uint64_t v108 = sub_1DA7B9CF0;
  v108[1] = (uint64_t (*)())v105;
  v108[2] = 0;
  v108[3] = 0;
  sub_1DA7A1AE0(v100, &qword_1EBE59A88);
  uint64_t v109 = (uint64_t *)(*(void *)(v106 + 8)
                   + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDateDidChangePublisher);
  swift_beginAccess();
  uint64_t v110 = *v109;
  sub_1DA7B9BDC(v106, v102, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  uint64_t v111 = swift_allocObject();
  sub_1DA7BB410(v102, v111 + v104, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  uint64_t v112 = v171;
  sub_1DA7A1F58(v107, v171, &qword_1EBE59A90);
  uint64_t v113 = v168;
  *(void *)(v112 + *(int *)(v168 + 52)) = v110;
  uint64_t v114 = (uint64_t (**)())(v112 + *(int *)(v113 + 56));
  *uint64_t v114 = sub_1DA7B9D50;
  v114[1] = (uint64_t (*)())v111;
  swift_retain();
  uint64_t v115 = v107;
  uint64_t v116 = v106;
  sub_1DA7A1AE0(v115, &qword_1EBE59A90);
  uint64_t v117 = *(void *)(*(void *)(v106 + 8)
                   + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntryDidChangePublisher);
  sub_1DA7B9BDC(v106, v102, (uint64_t (*)(void))v167);
  uint64_t v118 = swift_allocObject();
  sub_1DA7BB410(v102, v118 + v104, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  uint64_t v119 = v174;
  sub_1DA7A1F58(v112, v174, &qword_1EBE59AA8);
  uint64_t v120 = v170;
  *(void *)(v119 + *(int *)(v170 + 52)) = v117;
  uint64_t v121 = (uint64_t (**)(uint64_t *))(v119 + *(int *)(v120 + 56));
  *uint64_t v121 = sub_1DA7B9ED8;
  v121[1] = (uint64_t (*)(uint64_t *))v118;
  swift_retain();
  sub_1DA7A1AE0(v112, &qword_1EBE59AA8);
  uint64_t v122 = v184;
  v123 = v183;
  uint64_t v124 = v185;
  (*(void (**)(char *, uint64_t, uint64_t))(v184 + 16))(v183, v116 + *(int *)(v161 + 36), v185);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  uint64_t v125 = v194;
  if (v194)
  {
    uint64_t v126 = v195;
    uint64_t v127 = swift_allocObject();
    *(void *)(v127 + 16) = v125;
    *(void *)(v127 + 24) = v126;
    v128 = sub_1DA7BA3F8;
  }
  else
  {
    v128 = 0;
    uint64_t v127 = 0;
  }
  uint64_t v129 = (uint64_t)v182;
  *v182 = v128;
  *(void *)(v129 + 8) = v127;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  swift_release();
  *(unsigned char *)(v129 + 16) = v194;
  (*(void (**)(uint64_t, char *, uint64_t))(v122 + 32))(v129 + *(int *)(v181 + 24), v123, v124);
  uint64_t v130 = v175;
  sub_1DA7A1F58(v119, v175, &qword_1EBE59AA0);
  sub_1DA7BB410(v129, v130 + *(int *)(v173 + 36), (uint64_t (*)(void))type metadata accessor for InteractiveWidgetSetupViewModifier);
  sub_1DA7A1AE0(v119, &qword_1EBE59AA0);
  swift_retain();
  uint64_t v131 = v186;
  sub_1DA89B084(v186);
  swift_release();
  uint64_t v132 = v176;
  sub_1DA7B8134(v131, v176);
  sub_1DA7BB60C(v131, (uint64_t (*)(void))type metadata accessor for DebugInfo);
  sub_1DA7A1AE0(v130, &qword_1EBE59A30);
  uint64_t v133 = (uint64_t *)(*(void *)(v116 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewSequenceNumber);
  swift_beginAccess();
  uint64_t v134 = *v133;
  uint64_t v135 = v179;
  sub_1DA7B8588(v134, v179);
  sub_1DA7A1AE0(v132, &qword_1EBE59B60);
  uint64_t v193 = type metadata accessor for LiveWidgetEntryViewModel(0);
  sub_1DA7BB5C4(&qword_1EBE63D60, (void (*)(uint64_t))type metadata accessor for LiveWidgetEntryViewModel);
  sub_1DA98A328();
  swift_getKeyPath();
  uint64_t v136 = (uint64_t)v187;
  sub_1DA98A338();
  swift_release();
  swift_release();
  uint64_t v137 = (uint64_t)v189;
  sub_1DA7A1F58(v136, (uint64_t)&v189[*(int *)(v190 + 36)], &qword_1EBE61D78);
  sub_1DA7A1F58(v135, v137, &qword_1EBE59B30);
  sub_1DA7A1F58(v137, v191, &qword_1EBE599F0);
  swift_storeEnumTagMultiPayload();
  sub_1DA7BA008();
  sub_1DA7BA1C8(&qword_1EBE59B28, &qword_1EBE59B30, (void (*)(void))sub_1DA7BA0EC, (void (*)(void))sub_1DA7BA18C);
  uint64_t v138 = (uint64_t)v177;
  sub_1DA98AA68();
  sub_1DA7A1AE0(v137, &qword_1EBE599F0);
  uint64_t v139 = v180;
  sub_1DA7BA440(v138, v180, &qword_1EBE59B20);
  sub_1DA7A1AE0(v136, &qword_1EBE61D78);
  sub_1DA7A1AE0(v135, &qword_1EBE59B30);
  swift_retain();
  uint64_t v140 = sub_1DA98A318();
  uint64_t v142 = v141;
  swift_release();
  uint64_t v143 = v192;
  sub_1DA7A1F58(v139, v192, &qword_1EBE59B20);
  uint64_t v144 = (uint64_t *)(v143 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59A00) + 36));
  *uint64_t v144 = v140;
  v144[1] = v142;
  return sub_1DA7A1AE0(v139, &qword_1EBE59B20);
}

uint64_t sub_1DA7B5DD8()
{
  uint64_t v1 = sub_1DA989638();
  uint64_t v103 = *(void *)(v1 - 8);
  uint64_t v104 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v96 = (char *)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v95 = (uint64_t)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v102 = (uint64_t)&v95 - v6;
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63F08);
  uint64_t v7 = MEMORY[0x1F4188790](v98);
  uint64_t v100 = (uint64_t)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v99 = (uint64_t)&v95 - v9;
  uint64_t v10 = type metadata accessor for LiveWidgetEntryView();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v97 = (uint64_t)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v95 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v95 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v107 = (uint64_t)&v95 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v95 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v95 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v95 - v27;
  uint64_t v106 = sub_1DA989F38();
  uint64_t v108 = *(void *)(v106 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v106);
  uint64_t v101 = (char *)&v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v105 = (char *)&v95 - v31;
  if (qword_1EBE66028 != -1) {
    swift_once();
  }
  uint64_t v32 = *(void *)(*((void *)off_1EBE66018 + 29) + 88);
  uint64_t v33 = *(os_unfair_lock_s **)(v32 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v33);
  LOBYTE(v33) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v32 + 16));
  swift_release();
  swift_release();
  if ((v33 & 1) != 0 || MEMORY[0x1E0178390]("_logBodyEvaluation()"))
  {
    uint64_t v34 = v108;
    uint64_t v35 = v105;
    uint64_t v36 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v105, v0 + *(int *)(v10 + 36), v106);
    sub_1DA7B9BDC(v0, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    sub_1DA7B9BDC(v0, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    sub_1DA7B9BDC(v0, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    uint64_t v37 = v107;
    sub_1DA7B9BDC(v0, v107, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    uint64_t v38 = sub_1DA989F18();
    int v39 = sub_1DA98C548();
    if (os_log_type_enabled(v38, (os_log_type_t)v39))
    {
      LODWORD(v101) = v39;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v97 = swift_slowAlloc();
      uint64_t v111 = v97;
      *(_DWORD *)uint64_t v40 = 136446978;
      uint64_t v41 = (uint64_t *)(*((void *)v28 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      uint64_t v42 = *v41;
      unint64_t v43 = v41[1];
      swift_bridgeObjectRetain();
      uint64_t v113 = sub_1DA8C5E00(v42, v43, &v111);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      sub_1DA7BB60C((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      *(_WORD *)(v40 + 12) = 2050;
      uint64_t v44 = (uint64_t *)(*((void *)v26 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewSequenceNumber);
      swift_beginAccess();
      uint64_t v45 = *v44;
      sub_1DA7BB60C((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      uint64_t v112 = v45;
      sub_1DA98C858();
      *(_WORD *)(v40 + 22) = 2082;
      uint64_t v46 = *((void *)v23 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
      swift_beginAccess();
      uint64_t v47 = v99;
      sub_1DA7A1F58(v46, v99, &qword_1EBE63F08);
      uint64_t v48 = v100;
      sub_1DA7A1F58(v47, v100, &qword_1EBE63F08);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      unint64_t v50 = 0xEB00000000726564;
      uint64_t v51 = 0x6C6F686563616C50;
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v51 = 0x7974706D45;
        unint64_t v50 = 0xE500000000000000;
      }
      if (EnumCaseMultiPayload) {
        uint64_t v52 = v51;
      }
      else {
        uint64_t v52 = 1702259020;
      }
      if (EnumCaseMultiPayload) {
        unint64_t v53 = v50;
      }
      else {
        unint64_t v53 = 0xE400000000000000;
      }
      sub_1DA7A1AE0(v48, &qword_1EBE63F08);
      sub_1DA7A1AE0(v47, &qword_1EBE63F08);
      v110[0] = sub_1DA8C5E00(v52, v53, &v111);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      sub_1DA7BB60C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      *(_WORD *)(v40 + 32) = 2082;
      uint64_t v54 = *(void *)(v107 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
      swift_beginAccess();
      uint64_t v55 = v54;
      uint64_t v56 = v102;
      sub_1DA7A1F58(v55, v102, &qword_1EBE61CC0);
      uint64_t v58 = v103;
      uint64_t v57 = v104;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v56, 1, v104))
      {
        uint64_t v59 = 1701736302;
        sub_1DA7A1AE0(v56, &qword_1EBE61CC0);
        unint64_t v60 = 0xE400000000000000;
        uint64_t v61 = v108;
      }
      else
      {
        uint64_t v83 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v96, v56, v57);
        sub_1DA7A1AE0(v56, &qword_1EBE61CC0);
        uint64_t v61 = v108;
        if (qword_1EBE63290 != -1) {
          swift_once();
        }
        id v84 = (id)qword_1EBE63318;
        uint64_t v85 = (void *)sub_1DA989568();
        id v86 = objc_msgSend(v84, sel_stringFromDate_, v85);

        uint64_t v59 = sub_1DA98C038();
        unint64_t v60 = v87;

        (*(void (**)(char *, uint64_t))(v58 + 8))(v83, v57);
      }
      uint64_t v109 = sub_1DA8C5E00(v59, v60, &v111);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      sub_1DA7BB60C(v107, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      _os_log_impl(&dword_1DA795000, v38, (os_log_type_t)v101, "[%{public}s] Rendering view: %{public}lld - with content: %{public}s and referenceDate %{public}s", (uint8_t *)v40, 0x2Au);
      uint64_t v88 = v97;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v88, -1, -1);
      MEMORY[0x1E0178DA0](v40, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v105, v36);
    }
    else
    {
      sub_1DA7BB60C((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      sub_1DA7BB60C((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      sub_1DA7BB60C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      sub_1DA7BB60C(v37, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);

      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v36);
    }
  }
  else
  {
    uint64_t v63 = v0 + *(int *)(v10 + 36);
    uint64_t v64 = v108;
    uint64_t v65 = v101;
    uint64_t v66 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v101, v63, v106);
    sub_1DA7B9BDC(v0, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    sub_1DA7B9BDC(v0, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    uint64_t v67 = v97;
    sub_1DA7B9BDC(v0, v97, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    uint64_t v68 = sub_1DA989F18();
    os_log_type_t v69 = sub_1DA98C518();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      v110[0] = v71;
      *(_DWORD *)uint64_t v70 = 136446722;
      uint64_t v72 = (uint64_t *)(*((void *)v18 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      uint64_t v73 = *v72;
      unint64_t v74 = v72[1];
      swift_bridgeObjectRetain();
      uint64_t v113 = sub_1DA8C5E00(v73, v74, v110);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      sub_1DA7BB60C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      *(_WORD *)(v70 + 12) = 2050;
      uint64_t v75 = (uint64_t *)(*((void *)v15 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewSequenceNumber);
      swift_beginAccess();
      uint64_t v76 = *v75;
      sub_1DA7BB60C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      uint64_t v112 = v76;
      sub_1DA98C858();
      *(_WORD *)(v70 + 22) = 2082;
      uint64_t v77 = *(void *)(v67 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
      swift_beginAccess();
      uint64_t v78 = v95;
      sub_1DA7A1F58(v77, v95, &qword_1EBE61CC0);
      uint64_t v79 = v103;
      uint64_t v80 = v104;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v78, 1, v104))
      {
        uint64_t v81 = 1701736302;
        sub_1DA7A1AE0(v78, &qword_1EBE61CC0);
        unint64_t v82 = 0xE400000000000000;
      }
      else
      {
        unint64_t v89 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v96, v78, v80);
        sub_1DA7A1AE0(v78, &qword_1EBE61CC0);
        uint64_t v90 = v79;
        if (qword_1EBE63290 != -1) {
          swift_once();
        }
        id v91 = (id)qword_1EBE63318;
        id v92 = (void *)sub_1DA989568();
        id v93 = objc_msgSend(v91, sel_stringFromDate_, v92);

        uint64_t v81 = sub_1DA98C038();
        unint64_t v82 = v94;

        (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v80);
        uint64_t v67 = v97;
      }
      uint64_t v111 = sub_1DA8C5E00(v81, v82, v110);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      sub_1DA7BB60C(v67, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      _os_log_impl(&dword_1DA795000, v68, v69, "[%{public}s] Rendering view: %{public}lld with referenceDate %{public}s", (uint8_t *)v70, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v71, -1, -1);
      MEMORY[0x1E0178DA0](v70, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v101, v106);
    }
    else
    {
      sub_1DA7BB60C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      sub_1DA7BB60C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      sub_1DA7BB60C(v67, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);

      return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v65, v66);
    }
  }
}

uint64_t sub_1DA7B6BB0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1DA7A1F58(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EBE61CC0);
  return sub_1DA98A748();
}

uint64_t sub_1DA7B6C44()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LiveWidgetEntryView();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v51 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v47 - v5;
  uint64_t v7 = sub_1DA989F38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  uint64_t v53 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63F08);
  uint64_t v11 = MEMORY[0x1F4188790](v50);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v47 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v19 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__hasLoadedViewOnce) == 1
    && (*(unsigned char *)(v19 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__needsViewRebuild) & 1) == 0)
  {
    swift_retain();
  }
  else
  {
    v57[0] = 1;
    swift_retain();
    sub_1DA899808(v57);
  }
  uint64_t v20 = v19 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
  swift_beginAccess();
  sub_1DA7A1F58(v20, (uint64_t)v18, &qword_1EBE63F08);
  uint64_t v21 = sub_1DA7B9528();
  sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE63F08);
  swift_release();
  long long v55 = *(_OWORD *)(v1 + 16);
  uint64_t v56 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59CC0);
  sub_1DA98B288();
  uint64_t v22 = v1 + *(int *)(v2 + 36);
  uint64_t v23 = v52;
  uint64_t v24 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v10, v22, v52);
  sub_1DA7B9BDC(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  uint64_t v25 = v1;
  uint64_t v26 = v51;
  sub_1DA7B9BDC(v25, v51, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  uint64_t v27 = sub_1DA989F18();
  os_log_type_t v28 = sub_1DA98C548();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v49 = v10;
    uint64_t v29 = (uint64_t)v16;
    uint64_t v30 = v13;
    uint64_t v31 = v26;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t v56 = v48;
    *(_DWORD *)uint64_t v32 = 136446466;
    uint64_t v33 = (uint64_t *)(*((void *)v6 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
    uint64_t v34 = *v33;
    unint64_t v35 = v33[1];
    swift_bridgeObjectRetain();
    *(void *)&long long v55 = sub_1DA8C5E00(v34, v35, &v56);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA7BB60C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    *(_WORD *)(v32 + 12) = 2080;
    uint64_t v36 = *(void *)(v31 + 8);
    uint64_t v37 = (uint64_t)v30;
    uint64_t v38 = v29;
    uint64_t v39 = v36 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
    swift_beginAccess();
    sub_1DA7A1F58(v39, v29, &qword_1EBE63F08);
    sub_1DA7A1F58(v29, v37, &qword_1EBE63F08);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        unint64_t v41 = 0xEB00000000726564;
        uint64_t v42 = 0x6C6F686563616C50;
      }
      else
      {
        unint64_t v41 = 0xE500000000000000;
        uint64_t v42 = 0x7974706D45;
      }
    }
    else
    {
      unint64_t v41 = 0xE400000000000000;
      uint64_t v42 = 1702259020;
    }
    uint64_t v44 = v53;
    uint64_t v45 = v49;
    sub_1DA7A1AE0(v37, &qword_1EBE63F08);
    sub_1DA7A1AE0(v38, &qword_1EBE63F08);
    uint64_t v54 = sub_1DA8C5E00(v42, v41, &v56);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA7BB60C(v51, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    _os_log_impl(&dword_1DA795000, v27, v28, "[%{public}s] Cached [%s] view assigned.", (uint8_t *)v32, 0x16u);
    uint64_t v46 = v48;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v46, -1, -1);
    MEMORY[0x1E0178DA0](v32, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v52);
  }
  else
  {
    sub_1DA7BB60C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    sub_1DA7BB60C(v26, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);

    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v10, v23);
  }
}

uint64_t sub_1DA7B71F4()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63808);
  uint64_t result = sub_1DA98B278();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1DA98B288();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA7B727C(uint64_t *a1, uint64_t a2)
{
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63F08);
  uint64_t v4 = MEMORY[0x1F4188790](v66);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v62 - v7;
  uint64_t v9 = sub_1DA989F38();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v68 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for LiveWidgetEntryView();
  uint64_t v11 = MEMORY[0x1F4188790](v67);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v62 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v62 - v17;
  uint64_t v19 = *a1;
  sub_1DA7B7AB8(*a1);
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20) {
    return sub_1DA7B6C44();
  }
  swift_bridgeObjectRetain();
  uint64_t v65 = v6;
  uint64_t v64 = v8;
  unint64_t v21 = 0x1E4FB1000uLL;
  uint64_t v71 = a2;
  uint64_t v72 = v16;
  uint64_t v73 = v13;
  while (1)
  {
    if (v20 > *(void *)(v19 + 16))
    {
      __break(1u);
LABEL_30:
      swift_bridgeObjectRelease();
      return sub_1DA7B6C44();
    }
    int v22 = *(unsigned __int8 *)(v19 + v20 + 31);
    if ((v22 - 14) >= 2) {
      break;
    }
    objc_msgSend(self, sel_inheritedAnimationDuration);
    double v24 = v23;
    uint64_t v25 = (unsigned char *)(*(void *)(a2 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_supportsLowLuminance);
    swift_beginAccess();
    if (*v25 == 1 && v24 > 0.0)
    {
      uint64_t v40 = sub_1DA98B3E8();
      uint64_t v41 = v69;
      uint64_t v42 = v70;
      goto LABEL_17;
    }
LABEL_4:
    if (!--v20) {
      goto LABEL_30;
    }
  }
  if (v22 != 3) {
    goto LABEL_4;
  }
  uint64_t v77 = &type metadata for FeatureFlags.Widgets;
  unint64_t v78 = sub_1DA7BB390();
  LOBYTE(v76[0]) = 1;
  char v26 = sub_1DA989888();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
  sub_1DA7B9BDC(a2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  if ((v26 & 1) == 0) {
    goto LABEL_3;
  }
  sub_1DA7A1A44(*((void *)v18 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v76);
  uint64_t v27 = v18;
  os_log_type_t v28 = v77;
  unint64_t v29 = v78;
  __swift_project_boxed_opaque_existential_0(v76, (uint64_t)v77);
  unint64_t v30 = v21;
  uint64_t v31 = *(uint64_t (**)(ValueMetadata *, unint64_t))(v29 + 8);
  swift_retain();
  uint64_t v32 = (char *)v31(v28, v29);
  uint64_t v33 = *(void *)&v32[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  uint64_t v34 = *(os_unfair_lock_s **)(v33 + 16);
  swift_retain();
  os_unfair_lock_lock(v34);
  unint64_t v35 = *(void **)&v32[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor];
  uint64_t v36 = *(os_unfair_lock_s **)(v33 + 16);
  id v37 = v35;
  uint64_t v38 = v36;
  unint64_t v21 = v30;
  os_unfair_lock_unlock(v38);

  uint64_t v18 = v27;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
  uint64_t v16 = v72;
  uint64_t v13 = v73;
  a2 = v71;
  swift_release();
  if (!v35)
  {
LABEL_3:
    sub_1DA7BB60C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    goto LABEL_4;
  }
  unsigned __int8 v39 = objc_msgSend(v37, sel_isLinkedOnOrAfter_, 0);

  sub_1DA7BB60C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  if ((v39 & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t v41 = v69;
  uint64_t v42 = v70;
  if (qword_1EBE59CF8 != -1) {
    swift_once();
  }
  uint64_t v40 = qword_1EBE6F1A0;
  swift_retain();
LABEL_17:
  unint64_t v43 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v68, a2 + *(int *)(v67 + 36), v42);
  uint64_t v44 = v41;
  sub_1DA7B9BDC(a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  sub_1DA7B9BDC(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  uint64_t v45 = sub_1DA989F18();
  os_log_type_t v46 = sub_1DA98C518();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v67 = v40;
    uint64_t v47 = swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    v75[0] = v63;
    *(_DWORD *)uint64_t v47 = 136446466;
    uint64_t v48 = (uint64_t *)(*((void *)v16 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
    uint64_t v49 = *v48;
    unint64_t v50 = v48[1];
    swift_bridgeObjectRetain();
    v76[0] = sub_1DA8C5E00(v49, v50, v75);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA7BB60C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    *(_WORD *)(v47 + 12) = 2080;
    uint64_t v51 = *((void *)v73 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
    swift_beginAccess();
    uint64_t v52 = (uint64_t)v64;
    sub_1DA7A1F58(v51, (uint64_t)v64, &qword_1EBE63F08);
    uint64_t v53 = (uint64_t)v65;
    sub_1DA7A1F58(v52, (uint64_t)v65, &qword_1EBE63F08);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    unint64_t v55 = 0xEB00000000726564;
    uint64_t v56 = 0x6C6F686563616C50;
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v56 = 0x7974706D45;
      unint64_t v55 = 0xE500000000000000;
    }
    if (EnumCaseMultiPayload) {
      uint64_t v57 = v56;
    }
    else {
      uint64_t v57 = 1702259020;
    }
    if (EnumCaseMultiPayload) {
      unint64_t v58 = v55;
    }
    else {
      unint64_t v58 = 0xE400000000000000;
    }
    sub_1DA7A1AE0(v53, &qword_1EBE63F08);
    sub_1DA7A1AE0(v52, &qword_1EBE63F08);
    uint64_t v74 = sub_1DA8C5E00(v57, v58, v75);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA7BB60C((uint64_t)v73, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    _os_log_impl(&dword_1DA795000, v45, v46, "[%{public}s] Animating pending view change: %s", (uint8_t *)v47, 0x16u);
    uint64_t v59 = v63;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v59, -1, -1);
    MEMORY[0x1E0178DA0](v47, -1, -1);

    uint64_t v60 = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v68, v70);
  }
  else
  {
    sub_1DA7BB60C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    sub_1DA7BB60C((uint64_t)v73, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);

    uint64_t v60 = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v43, v42);
  }
  MEMORY[0x1F4188790](v60);
  *(&v62 - 2) = a2;
  swift_retain();
  sub_1DA98A2E8();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1DA7B7AB8(uint64_t a1)
{
  uint64_t v48 = a1;
  uint64_t v2 = type metadata accessor for LiveWidgetEntryView();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v47 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v45 - v5;
  uint64_t v7 = sub_1DA989F38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v45 - v12;
  if (qword_1EBE66028 != -1) {
    swift_once();
  }
  uint64_t v14 = *(void *)(*((void *)off_1EBE66018 + 29) + 88);
  uint64_t v15 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v15);
  LOBYTE(v15) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  swift_release();
  swift_release();
  uint64_t v16 = v1 + *(int *)(v2 + 36);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v18 = v8;
  if (v15)
  {
    v17(v13, v16, v7);
    sub_1DA7B9BDC(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_1DA989F18();
    os_log_type_t v20 = sub_1DA98C548();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v50 = v22;
      *(_DWORD *)uint64_t v21 = 136446466;
      uint64_t v46 = v7;
      double v23 = (uint64_t *)(*((void *)v6 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      uint64_t v47 = v18;
      uint64_t v24 = *v23;
      unint64_t v25 = v23[1];
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1DA8C5E00(v24, v25, &v50);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      sub_1DA7BB60C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      *(_WORD *)(v21 + 12) = 2082;
      uint64_t v26 = swift_bridgeObjectRetain();
      uint64_t v27 = MEMORY[0x1E0177440](v26, &type metadata for LiveWidgetViewChangeReason);
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      uint64_t v49 = sub_1DA8C5E00(v27, v29, &v50);
      sub_1DA98C858();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA795000, v19, v20, "[%{public}s] view changed for reasons: %{public}s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v22, -1, -1);
      MEMORY[0x1E0178DA0](v21, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v13, v46);
    }
    else
    {
      sub_1DA7BB60C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
  else
  {
    uint64_t v31 = v11;
    v17(v11, v16, v7);
    uint64_t v32 = v47;
    sub_1DA7B9BDC(v1, v47, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
    swift_bridgeObjectRetain_n();
    uint64_t v33 = sub_1DA989F18();
    os_log_type_t v34 = sub_1DA98C518();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v45 = v31;
      uint64_t v36 = v35;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v50 = v37;
      *(_DWORD *)uint64_t v36 = 136446466;
      uint64_t v46 = v7;
      uint64_t v38 = (uint64_t *)(*(void *)(v32 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      uint64_t v39 = *v38;
      unint64_t v40 = v38[1];
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1DA8C5E00(v39, v40, &v50);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      sub_1DA7BB60C(v32, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
      *(_WORD *)(v36 + 12) = 2082;
      uint64_t v41 = swift_bridgeObjectRetain();
      uint64_t v42 = MEMORY[0x1E0177440](v41, &type metadata for LiveWidgetViewChangeReason);
      unint64_t v44 = v43;
      swift_bridgeObjectRelease();
      uint64_t v49 = sub_1DA8C5E00(v42, v44, &v50);
      sub_1DA98C858();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA795000, v33, v34, "[%{public}s] view changed for reasons: %{public}s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v37, -1, -1);
      MEMORY[0x1E0178DA0](v36, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v45, v46);
    }
    else
    {
      sub_1DA7BB60C(v32, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v31, v7);
    }
  }
}

uint64_t sub_1DA7B8134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v35 = a2;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59A30);
  MEMORY[0x1F4188790](v36);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59AF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DA98AE08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59A60);
  MEMORY[0x1F4188790](v33);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBE66028 != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)(*((void *)off_1EBE66018 + 15) + 88);
  uint64_t v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v13);
  LOBYTE(v13) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  swift_release();
  if (v13)
  {
    uint64_t v14 = sub_1DA98B388();
    uint64_t v29 = v15;
    uint64_t v30 = v14;
    uint64_t v16 = sub_1DA98A9C8();
    sub_1DA8A5648(v31, (uint64_t)v37);
    *(_OWORD *)((char *)&v39[6] + 7) = v37[6];
    *(_OWORD *)((char *)&v39[5] + 7) = v37[5];
    *(_OWORD *)((char *)&v39[2] + 7) = v37[2];
    *(_OWORD *)((char *)&v39[1] + 7) = v37[1];
    *(_OWORD *)((char *)&v39[7] + 7) = v37[7];
    *(_OWORD *)((char *)&v39[3] + 7) = v37[3];
    char v40 = 1;
    *(void *)((char *)&v39[8] + 7) = v38;
    *(_OWORD *)((char *)&v39[4] + 7) = v37[4];
    *(_OWORD *)((char *)v39 + 7) = v37[0];
    long long v47 = v39[6];
    v48[0] = v39[7];
    *(_OWORD *)((char *)v48 + 15) = *(_OWORD *)((char *)&v39[7] + 15);
    long long v43 = v39[2];
    long long v44 = v39[3];
    long long v45 = v39[4];
    long long v46 = v39[5];
    long long v41 = v39[0];
    long long v42 = v39[1];
    sub_1DA98AEB8();
    sub_1DA98ADF8();
    uint64_t v17 = sub_1DA98AE18();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v19 = sub_1DA98B1B8();
    sub_1DA7A1F58(v32, (uint64_t)v11, &qword_1EBE59A30);
    os_log_type_t v20 = &v11[*(int *)(v33 + 36)];
    long long v21 = v45;
    *(_OWORD *)(v20 + 97) = v46;
    long long v22 = v48[0];
    *(_OWORD *)(v20 + 113) = v47;
    *(_OWORD *)(v20 + 129) = v22;
    *((_OWORD *)v20 + 9) = *(_OWORD *)((char *)v48 + 15);
    long long v23 = v41;
    *(_OWORD *)(v20 + 33) = v42;
    long long v24 = v44;
    *(_OWORD *)(v20 + 49) = v43;
    *(_OWORD *)(v20 + 65) = v24;
    *(_OWORD *)(v20 + 81) = v21;
    *(void *)os_log_type_t v20 = v16;
    *((void *)v20 + 1) = 0;
    v20[16] = 1;
    *(_OWORD *)(v20 + 17) = v23;
    *((void *)v20 + 20) = KeyPath;
    *((void *)v20 + 21) = v17;
    uint64_t v25 = v30;
    *((void *)v20 + 22) = v19;
    *((void *)v20 + 23) = v25;
    *((void *)v20 + 24) = v29;
    uint64_t v26 = &qword_1EBE59A60;
    sub_1DA7A1F58((uint64_t)v11, (uint64_t)v5, &qword_1EBE59A60);
    swift_storeEnumTagMultiPayload();
    sub_1DA7BA250();
    sub_1DA7BA2F0();
    sub_1DA98AA68();
    uint64_t v27 = (uint64_t)v11;
  }
  else
  {
    uint64_t v26 = &qword_1EBE59A30;
    sub_1DA7A1F58(v32, (uint64_t)v3, &qword_1EBE59A30);
    sub_1DA7A1F58((uint64_t)v3, (uint64_t)v5, &qword_1EBE59A30);
    swift_storeEnumTagMultiPayload();
    sub_1DA7BA250();
    sub_1DA7BA2F0();
    sub_1DA98AA68();
    uint64_t v27 = (uint64_t)v3;
  }
  return sub_1DA7A1AE0(v27, v26);
}

uint64_t sub_1DA7B8588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59B60);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59AD8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE599D0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBE66028 != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)(*((void *)off_1EBE66018 + 29) + 88);
  uint64_t v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v13);
  LOBYTE(v13) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  swift_release();
  if (v13)
  {
    uint64_t v14 = sub_1DA98B388();
    uint64_t v31 = v15;
    uint64_t v32 = v14;
    sub_1DA8A5394(v35, (uint64_t)v37);
    uint64_t v16 = v37[0];
    uint64_t v17 = v37[1];
    uint64_t v33 = v6;
    char v18 = v40;
    uint64_t v35 = v3;
    uint64_t v19 = v41;
    uint64_t v20 = v42;
    char v21 = v43;
    long long v30 = v44;
    uint64_t v29 = v45;
    uint64_t v34 = a2;
    uint64_t v22 = v46;
    long long v28 = v39;
    LOBYTE(v37[0]) = v38;
    char v48 = v47;
    sub_1DA7A1F58(v36, (uint64_t)v11, &qword_1EBE59B60);
    long long v23 = &v11[*(int *)(v9 + 36)];
    *(void *)long long v23 = v16;
    *((void *)v23 + 1) = v17;
    v23[16] = v37[0];
    *(_OWORD *)(v23 + 24) = v28;
    v23[40] = v18;
    *((void *)v23 + 6) = v19;
    *((void *)v23 + 7) = v20;
    v23[64] = v21;
    *(_OWORD *)(v23 + 72) = v30;
    *((void *)v23 + 11) = v29;
    *((void *)v23 + 12) = v22;
    v23[104] = v48;
    uint64_t v24 = v31;
    *((void *)v23 + 14) = v32;
    *((void *)v23 + 15) = v24;
    uint64_t v25 = &qword_1EBE599D0;
    sub_1DA7A1F58((uint64_t)v11, (uint64_t)v8, &qword_1EBE599D0);
    swift_storeEnumTagMultiPayload();
    sub_1DA7BA0EC();
    sub_1DA7BA18C();
    sub_1DA98AA68();
    uint64_t v26 = (uint64_t)v11;
  }
  else
  {
    uint64_t v25 = &qword_1EBE59B60;
    sub_1DA7A1F58(v36, (uint64_t)v5, &qword_1EBE59B60);
    sub_1DA7A1F58((uint64_t)v5, (uint64_t)v8, &qword_1EBE59B60);
    swift_storeEnumTagMultiPayload();
    sub_1DA7BA0EC();
    sub_1DA7BA18C();
    sub_1DA98AA68();
    uint64_t v26 = (uint64_t)v5;
  }
  return sub_1DA7A1AE0(v26, v25);
}

uint64_t sub_1DA7B88D8(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A1F58(a1, (uint64_t)v6, (uint64_t *)&unk_1EBE66AB0);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_currentActionURL;
  swift_beginAccess();
  sub_1DA7BB318((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t LiveWidgetEntryLaunchHandlingModifier.init(viewModel:)@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for LiveWidgetEntryViewModel(0);
  sub_1DA7BB5C4(&qword_1EBE63D60, (void (*)(uint64_t))type metadata accessor for LiveWidgetEntryViewModel);
  uint64_t result = sub_1DA98A318();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t LiveWidgetEntryView.customBackgroundView<A>(isEnabled:background:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  char v4 = a1;
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1DA7B9BDC(v6, a3, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  if (v4)
  {
    a2(result);
    uint64_t v8 = sub_1DA98B348();
    uint64_t result = swift_release();
    *(void *)(a3 + 56) = v8;
  }
  return result;
}

uint64_t LiveWidgetEntryView.clippedToShape(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1DA7B9BDC(v2, a2, (uint64_t (*)(void))type metadata accessor for LiveWidgetEntryView);
  *(unsigned char *)(a2 + 48) = a1;
  return result;
}

uint64_t sub_1DA7B8B60()
{
  return sub_1DA98B078();
}

uint64_t LiveWidgetEntryLaunchHandlingModifier.viewModel.getter()
{
  return swift_retain();
}

uint64_t LiveWidgetEntryLaunchHandlingModifier.viewModel.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*LiveWidgetEntryLaunchHandlingModifier.viewModel.modify())()
{
  return CGSizeMake;
}

uint64_t LiveWidgetEntryLaunchHandlingModifier.$viewModel.getter()
{
  type metadata accessor for LiveWidgetEntryViewModel(0);
  sub_1DA7BB5C4(&qword_1EBE63D60, (void (*)(uint64_t))type metadata accessor for LiveWidgetEntryViewModel);

  return sub_1DA98A328();
}

uint64_t LiveWidgetEntryLaunchHandlingModifier.body(content:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59B00);
  MEMORY[0x1F4188790](v2 - 8);
  char v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59B10);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE599E0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  uint64_t v12 = v1[1];
  uint64_t v13 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canConsumeLaunchRequest;
  char v14 = *(unsigned char *)(v12 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canConsumeLaunchRequest);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v11;
  *(void *)(v15 + 24) = v12;
  swift_retain_n();
  sub_1DA7B8F84(v14, (uint64_t)sub_1DA7BA430, v12, (uint64_t)sub_1DA7BA434, v15, (uint64_t)v4);
  swift_release();
  swift_release();
  char v16 = *(unsigned char *)(v12 + v13);
  swift_retain();
  sub_1DA7B9290(v16, (uint64_t)sub_1DA7BA43C, v12, (uint64_t)v7);
  swift_release();
  sub_1DA7A1AE0((uint64_t)v4, &qword_1EBE59B00);
  if (*(unsigned char *)(v12 + v13) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1DA98A0C8();
    swift_release();
    swift_release();
    swift_release();
    char v17 = v20 ^ 1;
  }
  else
  {
    char v17 = 0;
  }
  sub_1DA7A1F58((uint64_t)v7, (uint64_t)v10, &qword_1EBE59B10);
  v10[*(int *)(v8 + 36)] = v17 & 1;
  sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE59B10);
  return sub_1DA7BA440((uint64_t)v10, v19, &qword_1EBE599E0);
}

uint64_t sub_1DA7B8F10()
{
  return sub_1DA98A0D8();
}

uint64_t sub_1DA7B8F84@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v25 = a2;
  uint64_t v28 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59B80);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59AC0);
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59A20);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v19, v7, v10);
    char v21 = &v19[*(int *)(v17 + 36)];
    *(void *)char v21 = v25;
    *((void *)v21 + 1) = a3;
    uint64_t v22 = v27;
    *((void *)v21 + 2) = v26;
    *((void *)v21 + 3) = v22;
    *((void *)v21 + 4) = KeyPath;
    *((_WORD *)v21 + 20) = 0;
    sub_1DA7A1F58((uint64_t)v19, (uint64_t)v16, &qword_1EBE59A20);
    swift_storeEnumTagMultiPayload();
    sub_1DA7BB1B8();
    sub_1DA7A0410(&qword_1EBE59B78, &qword_1EBE59B80);
    swift_retain();
    swift_retain();
    sub_1DA98AA68();
    return sub_1DA7A1AE0((uint64_t)v19, &qword_1EBE59A20);
  }
  else
  {
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v24(v13, v7, v10);
    v24(v16, (uint64_t)v13, v10);
    swift_storeEnumTagMultiPayload();
    sub_1DA7BB1B8();
    sub_1DA7A0410(&qword_1EBE59B78, &qword_1EBE59B80);
    sub_1DA98AA68();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1DA7B9290@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  v22[1] = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59B00);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59AC8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE599C0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a2;
    *(void *)(v18 + 24) = a3;
    swift_retain();
    sub_1DA98A2C8();
    sub_1DA7A1F58(v5, (uint64_t)v17, &qword_1EBE59B00);
    uint64_t v19 = &qword_1EBE599C0;
    sub_1DA7A1F58((uint64_t)v17, (uint64_t)v14, &qword_1EBE599C0);
    swift_storeEnumTagMultiPayload();
    sub_1DA7BB06C();
    sub_1DA7BB118();
    sub_1DA98AA68();
    uint64_t v20 = (uint64_t)v17;
  }
  else
  {
    uint64_t v19 = &qword_1EBE59B00;
    sub_1DA7A1F58(v5, (uint64_t)v11, &qword_1EBE59B00);
    sub_1DA7A1F58((uint64_t)v11, (uint64_t)v14, &qword_1EBE59B00);
    swift_storeEnumTagMultiPayload();
    sub_1DA7BB06C();
    sub_1DA7BB118();
    sub_1DA98AA68();
    uint64_t v20 = (uint64_t)v11;
  }
  return sub_1DA7A1AE0(v20, v19);
}

uint64_t sub_1DA7B9508()
{
  return sub_1DA98A258();
}

uint64_t sub_1DA7B9528()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63600);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63F08);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A1F58(v1, (uint64_t)v10, &qword_1EBE63F08);
  if (swift_getEnumCaseMultiPayload() > 1) {
    return *(void *)v10;
  }
  sub_1DA7BB410((uint64_t)v10, (uint64_t)v7, type metadata accessor for DefaultWidgetLiveViewEntry);
  DefaultWidgetLiveViewEntry.view.getter((uint64_t)v4);
  sub_1DA7BB478();
  uint64_t v11 = sub_1DA98B348();
  sub_1DA7BB60C((uint64_t)v7, type metadata accessor for DefaultWidgetLiveViewEntry);
  return v11;
}

uint64_t sub_1DA7B96DC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DA7B992C(a1);
}

uint64_t sub_1DA7B96F0()
{
  return sub_1DA7B99BC();
}

uint64_t sub_1DA7B9704@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DA7B992C(a1);
}

uint64_t sub_1DA7B9718()
{
  return sub_1DA7B99BC();
}

uint64_t sub_1DA7B972C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DA7B992C(a1);
}

uint64_t sub_1DA7B9740()
{
  return sub_1DA7B99BC();
}

double sub_1DA7B9754@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1DA7B97D4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1DA7BB67C;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  if (v1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v3;
  }
  sub_1DA7AE2F8(v1);
  swift_retain();
  return sub_1DA98A0D8();
}

uint64_t sub_1DA7B98E0(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  return a2(&v3);
}

uint64_t sub_1DA7B9918@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DA7B992C(a1);
}

uint64_t sub_1DA7B992C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA98A0C8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA7B99A8()
{
  return sub_1DA7B99BC();
}

uint64_t sub_1DA7B99BC()
{
  return sub_1DA98A0D8();
}

unint64_t sub_1DA7B9A2C()
{
  unint64_t result = qword_1EBE59CC8;
  if (!qword_1EBE59CC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59CC8);
  }
  return result;
}

uint64_t sub_1DA7B9A98()
{
  return sub_1DA98A738();
}

uint64_t sub_1DA7B9AC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA98A528();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7B9AF0()
{
  return sub_1DA98A538();
}

unint64_t sub_1DA7B9B18()
{
  unint64_t result = qword_1EBE59C98;
  if (!qword_1EBE59C98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE59CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59C98);
  }
  return result;
}

uint64_t sub_1DA7B9B8C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DA7B992C(a1);
}

uint64_t sub_1DA7B9BB4()
{
  return sub_1DA7B99BC();
}

uint64_t sub_1DA7B9BDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA7B9C44@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DA7B992C(a1);
}

uint64_t sub_1DA7B9C6C()
{
  return sub_1DA7B99BC();
}

uint64_t sub_1DA7B9C94@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA98A5B8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7B9CC4()
{
  return sub_1DA98A5C8();
}

uint64_t sub_1DA7B9CF0()
{
  return sub_1DA7B6C44();
}

uint64_t sub_1DA7B9D50()
{
  type metadata accessor for LiveWidgetEntryView();

  return sub_1DA7B71F4();
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = (int *)(type metadata accessor for LiveWidgetEntryView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v6 + v1[11];
  uint64_t v8 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1DA7B9ED8(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for LiveWidgetEntryView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1DA7B727C(a1, v4);
}

uint64_t sub_1DA7B9F50@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DA7B992C(a1);
}

uint64_t sub_1DA7B9F78()
{
  return sub_1DA7B99BC();
}

uint64_t sub_1DA7B9FA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_currentActionURL;
  swift_beginAccess();
  return sub_1DA7A1F58(v3, a2, (uint64_t *)&unk_1EBE66AB0);
}

unint64_t sub_1DA7BA008()
{
  unint64_t result = qword_1EBE599E8;
  if (!qword_1EBE599E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE599F0);
    sub_1DA7BA1C8(&qword_1EBE59B28, &qword_1EBE59B30, (void (*)(void))sub_1DA7BA0EC, (void (*)(void))sub_1DA7BA18C);
    sub_1DA7BB5C4(&qword_1EBE63378, (void (*)(uint64_t))type metadata accessor for WidgetURLReaderModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE599E8);
  }
  return result;
}

unint64_t sub_1DA7BA0EC()
{
  unint64_t result = qword_1EBE599C8;
  if (!qword_1EBE599C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE599D0);
    sub_1DA7BA18C();
    sub_1DA7A0410(&qword_1EBE59AB0, &qword_1EBE59AB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE599C8);
  }
  return result;
}

uint64_t sub_1DA7BA18C()
{
  return sub_1DA7BA1C8(&qword_1EBE59B58, &qword_1EBE59B60, (void (*)(void))sub_1DA7BA250, (void (*)(void))sub_1DA7BA2F0);
}

uint64_t sub_1DA7BA1C8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DA7BA250()
{
  unint64_t result = qword_1EBE59A58;
  if (!qword_1EBE59A58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE59A60);
    sub_1DA7BA2F0();
    sub_1DA7A0410(&qword_1EBE59C68, &qword_1EBE59C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59A58);
  }
  return result;
}

unint64_t sub_1DA7BA2F0()
{
  unint64_t result = qword_1EBE59A28;
  if (!qword_1EBE59A28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE59A30);
    sub_1DA7A0410(&qword_1EBE59A98, &qword_1EBE59AA0);
    sub_1DA7BB5C4(&qword_1EBE59D68, (void (*)(uint64_t))type metadata accessor for InteractiveWidgetSetupViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59A28);
  }
  return result;
}

uint64_t sub_1DA7BA3C0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DA7BA3F8(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1DA7BA434()
{
  return sub_1DA7B8F10();
}

uint64_t sub_1DA7BA440(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA7BA4A4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DA7B992C(a1);
}

uint64_t sub_1DA7BA4CC()
{
  return sub_1DA7B99BC();
}

uint64_t sub_1DA7BA4F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA7BA510()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA7BA52C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_retain();
}

uint64_t sub_1DA7BA538(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 8) = v3;
  return result;
}

void *initializeBufferWithCopyOfBuffer for LiveWidgetEntryView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v14 = a1 + v8;
    uint64_t v9 = (uint64_t)a2 + v8;
    *(void *)(a1 + 56) = a2[7];
    uint64_t v10 = sub_1DA989F38();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v11(v14, v9, v10);
  }
  return v3;
}

uint64_t destroy for LiveWidgetEntryView(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1DA989F38();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for LiveWidgetEntryView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v7;
  uint64_t v8 = a2 + v7;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v9 = sub_1DA989F38();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v10(v12, v8, v9);
  return a1;
}

uint64_t assignWithCopy for LiveWidgetEntryView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for LiveWidgetEntryView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for LiveWidgetEntryView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveWidgetEntryView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7BAAC4);
}

uint64_t sub_1DA7BAAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DA989F38();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LiveWidgetEntryView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7BAB88);
}

uint64_t sub_1DA7BAB88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DA989F38();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DA7BAC30()
{
  uint64_t result = sub_1DA989F38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for LiveWidgetEntryLaunchHandlingModifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for LiveWidgetEntryLaunchHandlingModifier()
{
  return swift_release();
}

void *assignWithCopy for LiveWidgetEntryLaunchHandlingModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for LiveWidgetEntryLaunchHandlingModifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveWidgetEntryLaunchHandlingModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveWidgetEntryLaunchHandlingModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveWidgetEntryLaunchHandlingModifier()
{
  return &type metadata for LiveWidgetEntryLaunchHandlingModifier;
}

unint64_t sub_1DA7BAE30()
{
  unint64_t result = qword_1EBE599F8;
  if (!qword_1EBE599F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE59A00);
    sub_1DA7BAEAC();
    sub_1DA7BAF60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE599F8);
  }
  return result;
}

unint64_t sub_1DA7BAEAC()
{
  unint64_t result = qword_1EBE59B18;
  if (!qword_1EBE59B18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE59B20);
    sub_1DA7BA008();
    sub_1DA7BA1C8(&qword_1EBE59B28, &qword_1EBE59B30, (void (*)(void))sub_1DA7BA0EC, (void (*)(void))sub_1DA7BA18C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59B18);
  }
  return result;
}

unint64_t sub_1DA7BAF60()
{
  unint64_t result = qword_1EBE59BB8;
  if (!qword_1EBE59BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59BB8);
  }
  return result;
}

unint64_t sub_1DA7BAFB8()
{
  unint64_t result = qword_1EBE599D8;
  if (!qword_1EBE599D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE599E0);
    sub_1DA7BA1C8(&qword_1EBE59B08, &qword_1EBE59B10, (void (*)(void))sub_1DA7BB06C, (void (*)(void))sub_1DA7BB118);
    sub_1DA7BB2AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE599D8);
  }
  return result;
}

unint64_t sub_1DA7BB06C()
{
  unint64_t result = qword_1EBE599B8;
  if (!qword_1EBE599B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE599C0);
    sub_1DA7BB118();
    sub_1DA7BB5C4(&qword_1EBE63E58, (void (*)(uint64_t))type metadata accessor for SystemURLActionViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE599B8);
  }
  return result;
}

unint64_t sub_1DA7BB118()
{
  unint64_t result = qword_1EBE59AF8;
  if (!qword_1EBE59AF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE59B00);
    sub_1DA7BB1B8();
    sub_1DA7A0410(&qword_1EBE59B78, &qword_1EBE59B80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59AF8);
  }
  return result;
}

unint64_t sub_1DA7BB1B8()
{
  unint64_t result = qword_1EBE59A18;
  if (!qword_1EBE59A18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE59A20);
    sub_1DA7A0410(&qword_1EBE59B78, &qword_1EBE59B80);
    sub_1DA7BB258();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59A18);
  }
  return result;
}

unint64_t sub_1DA7BB258()
{
  unint64_t result = qword_1EBE63E08;
  if (!qword_1EBE63E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63E08);
  }
  return result;
}

unint64_t sub_1DA7BB2AC()
{
  unint64_t result = qword_1EBE59B88;
  if (!qword_1EBE59B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59B88);
  }
  return result;
}

uint64_t sub_1DA7BB300(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  return sub_1DA876774(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1DA7BB318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA7BB388(void *a1)
{
  return sub_1DA88A58C(a1, *(uint64_t (**)(void))(v1 + 16));
}

unint64_t sub_1DA7BB390()
{
  unint64_t result = qword_1EBE59CD8;
  if (!qword_1EBE59CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59CD8);
  }
  return result;
}

uint64_t sub_1DA7BB3E4()
{
  return sub_1DA7B6C44();
}

uint64_t sub_1DA7BB410(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DA7BB478()
{
  unint64_t result = qword_1EBE635F8;
  if (!qword_1EBE635F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63600);
    sub_1DA7A0410(&qword_1EBE63A28, qword_1EBE63A30);
    sub_1DA7BB518();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE635F8);
  }
  return result;
}

unint64_t sub_1DA7BB518()
{
  unint64_t result = qword_1EBE63528;
  if (!qword_1EBE63528)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63530);
    sub_1DA7BB5C4(&qword_1EBE63FE0, MEMORY[0x1E4F46ED8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63528);
  }
  return result;
}

uint64_t sub_1DA7BB5C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA7BB60C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t PowerlogSuggestionService.__allocating_init(owner:)(char *a1)
{
  uint64_t v14 = sub_1DA98C5F8();
  uint64_t v2 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DA98C598();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1DA98B4A8();
  MEMORY[0x1F4188790](v6 - 8);
  char v7 = *a1;
  uint64_t v8 = type metadata accessor for WidgetPowerlogProvider();
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = v7;
  sub_1DA7A6D9C();
  sub_1DA98B488();
  *(void *)&long long v15 = MEMORY[0x1E4FBC860];
  sub_1DA7BB9C8((unint64_t *)&qword_1EBE65CA0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE65C80);
  sub_1DA7BB96C();
  sub_1DA98C918();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCC68], v14);
  *(void *)(v9 + 24) = sub_1DA98C638();
  uint64_t v16 = v8;
  uint64_t v17 = sub_1DA7BB9C8(qword_1EBE64F70, (void (*)(uint64_t))type metadata accessor for WidgetPowerlogProvider);
  *(void *)&long long v15 = v9;
  type metadata accessor for PowerlogSuggestionService();
  uint64_t v10 = swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = (_DWORD *)swift_slowAlloc();
  *uint64_t v12 = 0;
  *(void *)(v11 + 16) = v12;
  *(void *)(v10 + 56) = v11;
  sub_1DA7A19A4(&v15, v10 + 16);
  return v10;
}

unint64_t sub_1DA7BB96C()
{
  unint64_t result = qword_1EBE65C88;
  if (!qword_1EBE65C88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE65C80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE65C88);
  }
  return result;
}

uint64_t sub_1DA7BB9C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for PowerlogSuggestionService()
{
  return self;
}

uint64_t sub_1DA7BBA34(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1DA7A1A44(v1 + 16, (uint64_t)v13);
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  __swift_project_boxed_opaque_existential_0(v13, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59690);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DA990050;
  *(void *)(v9 + 32) = v2;
  *(void *)(v9 + 40) = v3;
  *(void *)(v9 + 48) = v4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 64);
  id v11 = v2;
  swift_bridgeObjectRetain();
  v10(v9, v7, v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return swift_release();
}

uint64_t PowerlogSuggestionService.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t PowerlogSuggestionService.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA7BBB9C(uint64_t a1)
{
  return sub_1DA7BBA34(a1);
}

uint64_t method lookup function for PowerlogSuggestionService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PowerlogSuggestionService);
}

uint64_t dispatch thunk of PowerlogSuggestionService.noteWidgetSuggestionRequested(entry:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1DA7BBBFC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1DA7BBC10(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1DA7BBC24(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1DA7BBC38(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1DA7BBC4C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1DA7BBC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t sub_1DA7BBC88(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 8))(a3, a5);
  a1(v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a3, a5);
}

uint64_t sub_1DA7BBD30()
{
  MEMORY[0x1E0178DA0](*(void *)(v0 + 16), -1, -1);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnfairLock()
{
  return self;
}

void sub_1DA7BBD94()
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)v0 + 16));
}

void sub_1DA7BBDA0()
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)v0 + 16));
}

uint64_t (*sub_1DA7BBDAC())()
{
  return j__swift_endAccess;
}

uint64_t AssertedStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, long long a9, uint64_t a10)
{
  swift_allocObject();
  uint64_t v16 = sub_1DA7BE790(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  (*(void (**)(void, void))(*(void *)(a9 - 8) + 8))(a2, a9);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a8 - 8) + 8))(a1, a8);
  return v16;
}

uint64_t AssertedStatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, long long a9, uint64_t a10)
{
  uint64_t v13 = sub_1DA7BE790(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  (*(void (**)(void, void))(*(void *)(a9 - 8) + 8))(a2, a9);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a8 - 8) + 8))(a1, a8);
  return v13;
}

uint64_t sub_1DA7BBFD0()
{
  uint64_t v1 = sub_1DA8A9964();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
  sub_1DA8ABB5C((uint64_t)sub_1DA7BE9E0, v0, v2);
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BE9FC();
  sub_1DA98BFC8();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1DA7BC0D8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v104 = *a1;
  uint64_t v3 = v104;
  uint64_t v4 = *(void *)(v104 + 1504);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v106 = (char *)&v70 - v6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_1DA98C838();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v102 = v8;
  uint64_t v103 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v105 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v70 - v13;
  uint64_t v15 = *(void *)(v3 + 1496);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v85 = (char *)&v70 - v17;
  sub_1DA98BF68();
  uint64_t v91 = v15;
  uint64_t v18 = swift_getTupleTypeMetadata2();
  uint64_t v84 = sub_1DA98C838();
  uint64_t v19 = *(void *)(v84 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v84);
  id v86 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v83 = (char *)&v70 - v22;
  long long v23 = (uint64_t *)((char *)a1 + qword_1EBE59348);
  swift_beginAccess();
  uint64_t v24 = *v23;
  uint64_t v25 = v18;
  uint64_t v26 = *(void *)(v24 + 64);
  uint64_t v72 = v24 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v24 + 32);
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  else {
    uint64_t v28 = -1;
  }
  unint64_t v29 = v28 & v26;
  uint64_t v82 = v18 - 8;
  uint64_t v74 = v16 + 16;
  uint64_t v81 = (void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v79 = (uint64_t (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v94 = v5 + 16;
  uint64_t v95 = v5;
  uint64_t v100 = (void (**)(char *, char *, uint64_t))(v103 + 32);
  uint64_t v101 = TupleTypeMetadata2 - 8;
  uint64_t v98 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v99 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v75 = v16;
  unint64_t v78 = (uint64_t (**)(char *, uint64_t))(v16 + 8);
  long long v30 = v85;
  int64_t v73 = (unint64_t)(v27 + 63) >> 6;
  int64_t v70 = v73 - 1;
  uint64_t v76 = v24;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v87 = 0;
  uint64_t v32 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v77 = 0x80000001DA99D1F0;
  unint64_t v97 = 0x80000001DA99D210;
  uint64_t v103 = v4;
  uint64_t v88 = v18;
LABEL_5:
  uint64_t v90 = v32;
  if (!v29)
  {
    int64_t v39 = v87 + 1;
    uint64_t v34 = v105;
    if (__OFADD__(v87, 1)) {
      goto LABEL_63;
    }
    uint64_t result = (uint64_t)v86;
    if (v39 < v73)
    {
      unint64_t v40 = *(void *)(v72 + 8 * v39);
      if (v40)
      {
LABEL_11:
        uint64_t v89 = (v40 - 1) & v40;
        unint64_t v33 = __clz(__rbit64(v40)) + (v39 << 6);
        int64_t v87 = v39;
        goto LABEL_7;
      }
      int64_t v41 = v87 + 2;
      ++v87;
      if (v39 + 1 < v73)
      {
        unint64_t v40 = *(void *)(v72 + 8 * v41);
        if (v40)
        {
          ++v39;
          goto LABEL_11;
        }
        int64_t v42 = v39 + 2;
        int64_t v87 = v39 + 1;
        if (v39 + 2 < v73)
        {
          unint64_t v40 = *(void *)(v72 + 8 * v42);
          if (v40)
          {
            v39 += 2;
            goto LABEL_11;
          }
          while (1)
          {
            int64_t v39 = v42 + 1;
            if (__OFADD__(v42, 1)) {
              goto LABEL_64;
            }
            if (v39 >= v73) {
              break;
            }
            unint64_t v40 = *(void *)(v72 + 8 * v39);
            ++v42;
            if (v40) {
              goto LABEL_11;
            }
          }
          int64_t v87 = v70;
        }
      }
    }
    uint64_t v38 = *(void *)(v25 - 8);
    uint64_t v36 = v86;
    (*(void (**)(void))(v38 + 56))();
    uint64_t v89 = 0;
    goto LABEL_24;
  }
  uint64_t v89 = (v29 - 1) & v29;
  unint64_t v33 = __clz(__rbit64(v29)) | (v87 << 6);
  uint64_t v34 = v105;
LABEL_7:
  uint64_t v35 = v76;
  uint64_t v36 = v86;
  (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(v86, *(void *)(v76 + 48) + *(void *)(v75 + 72) * v33, v91);
  uint64_t v37 = v88;
  *(void *)&v36[*(int *)(v88 + 48)] = *(void *)(*(void *)(v35 + 56) + 8 * v33);
  uint64_t v38 = *(void *)(v37 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v36, 0, 1, v37);
  uint64_t v25 = v37;
  swift_bridgeObjectRetain();
LABEL_24:
  char v43 = v83;
  (*v81)(v83, v36, v84);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v43, 1, v25) == 1)
  {
    uint64_t result = swift_release();
    *uint64_t v71 = v90;
    return result;
  }
  uint64_t v44 = *(void *)&v43[*(int *)(v25 + 48)];
  uint64_t result = (*v79)(v30, v43, v91);
  int64_t v45 = 0;
  uint64_t v46 = *(void *)(v44 + 64);
  uint64_t v92 = v44 + 64;
  uint64_t v96 = v44;
  uint64_t v47 = 1 << *(unsigned char *)(v44 + 32);
  if (v47 < 64) {
    uint64_t v48 = ~(-1 << v47);
  }
  else {
    uint64_t v48 = -1;
  }
  unint64_t v49 = v48 & v46;
  int64_t v93 = (unint64_t)(v47 + 63) >> 6;
  int64_t v80 = v93 - 1;
  uint64_t v50 = (void *)MEMORY[0x1E4FBC860];
  if ((v48 & v46) != 0)
  {
LABEL_29:
    unint64_t v51 = __clz(__rbit64(v49));
    v49 &= v49 - 1;
    unint64_t v52 = v51 | (v45 << 6);
LABEL_30:
    uint64_t v53 = v96;
    (*(void (**)(char *, unint64_t, uint64_t))(v95 + 16))(v34, *(void *)(v96 + 48) + *(void *)(v95 + 72) * v52, v4);
    uint64_t v54 = 0;
    *(void *)&v34[*(int *)(TupleTypeMetadata2 + 48)] = *(void *)(*(void *)(v53 + 56) + 8 * v52);
    goto LABEL_43;
  }
  while (1)
  {
    int64_t v55 = v45 + 1;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
      goto LABEL_62;
    }
    if (v55 < v93)
    {
      unint64_t v56 = *(void *)(v92 + 8 * v55);
      if (v56) {
        goto LABEL_34;
      }
      v45 += 2;
      if (v55 + 1 >= v93)
      {
        unint64_t v49 = 0;
        uint64_t v54 = 1;
        int64_t v45 = v55;
        goto LABEL_43;
      }
      unint64_t v56 = *(void *)(v92 + 8 * v45);
      if (v56)
      {
        ++v55;
LABEL_34:
        unint64_t v49 = (v56 - 1) & v56;
        unint64_t v52 = __clz(__rbit64(v56)) + (v55 << 6);
        int64_t v45 = v55;
        goto LABEL_30;
      }
      int64_t v57 = v55 + 2;
      if (v55 + 2 < v93) {
        break;
      }
    }
    unint64_t v49 = 0;
    uint64_t v54 = 1;
LABEL_43:
    uint64_t v58 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v34, v54, 1, TupleTypeMetadata2);
    (*v100)(v14, v34, v102);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v14, 1, TupleTypeMetadata2) == 1)
    {
      swift_release();
      uint64_t v107 = 0;
      unint64_t v108 = 0xE000000000000000;
      sub_1DA98CA18();
      sub_1DA98C148();
      long long v30 = v85;
      sub_1DA98CE18();
      sub_1DA98C148();
      uint64_t v109 = v50;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
      sub_1DA7BE9FC();
      sub_1DA98BFC8();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      uint64_t v65 = v107;
      unint64_t v66 = v108;
      uint64_t v32 = v90;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v32 = sub_1DA7CA2FC(0, v32[2] + 1, 1, v32);
      }
      unint64_t v68 = v32[2];
      unint64_t v67 = v32[3];
      uint64_t v4 = v103;
      if (v68 >= v67 >> 1) {
        uint64_t v32 = sub_1DA7CA2FC((void *)(v67 > 1), v68 + 1, 1, v32);
      }
      v32[2] = v68 + 1;
      uint64_t v69 = &v32[2 * v68];
      v69[4] = v65;
      v69[5] = v66;
      uint64_t result = (*v78)(v30, v91);
      uint64_t v25 = v88;
      unint64_t v29 = v89;
      goto LABEL_5;
    }
    uint64_t v59 = *(void **)&v14[*(int *)(TupleTypeMetadata2 + 48)];
    (*v99)(v106, v14, v4);
    uint64_t v107 = 0;
    unint64_t v108 = 0xE000000000000000;
    sub_1DA98CA18();
    sub_1DA98C148();
    sub_1DA98CE18();
    sub_1DA98C148();
    uint64_t v109 = v59;
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    uint64_t v61 = v107;
    unint64_t v60 = v108;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v50 = sub_1DA7CA2FC(0, v50[2] + 1, 1, v50);
    }
    unint64_t v63 = v50[2];
    unint64_t v62 = v50[3];
    if (v63 >= v62 >> 1) {
      uint64_t v50 = sub_1DA7CA2FC((void *)(v62 > 1), v63 + 1, 1, v50);
    }
    v50[2] = v63 + 1;
    uint64_t v64 = &v50[2 * v63];
    v64[4] = v61;
    v64[5] = v60;
    uint64_t v4 = v103;
    uint64_t result = (*v98)(v106, v103);
    uint64_t v34 = v105;
    if (v49) {
      goto LABEL_29;
    }
  }
  unint64_t v56 = *(void *)(v92 + 8 * v57);
  if (v56)
  {
    v55 += 2;
    goto LABEL_34;
  }
  while (1)
  {
    int64_t v55 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      break;
    }
    if (v55 >= v93)
    {
      unint64_t v49 = 0;
      uint64_t v54 = 1;
      int64_t v45 = v80;
      goto LABEL_43;
    }
    unint64_t v56 = *(void *)(v92 + 8 * v55);
    ++v57;
    if (v56) {
      goto LABEL_34;
    }
  }
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_1DA7BCD50(uint64_t a1, uint64_t a2)
{
  if (!sub_1DA7BD8D0(a1)) {
    return 0;
  }

  return sub_1DA8A99D4(a1, a2);
}

uint64_t sub_1DA7BCDB0(uint64_t a1)
{
  if (!sub_1DA7BD8D0(a1)) {
    return 0;
  }

  return sub_1DA8C7300();
}

uint64_t sub_1DA7BCDE8()
{
  uint64_t v0 = sub_1DA7BEA58();
  sub_1DA7AE2F8(v0);
  return v0;
}

uint64_t sub_1DA7BCE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + qword_1EBE6F0C8);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_1DA7AD81C(v6);
}

uint64_t (*sub_1DA7BCE7C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DA7BCED8(uint64_t a1, uint64_t a2)
{
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E40);
  return sub_1DA8ABB5C((uint64_t)sub_1DA7BEAA0, (uint64_t)v4, v2);
}

void *sub_1DA7BCF44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v74 = a3;
  uint64_t v79 = (void *)*v3;
  uint64_t v6 = v79;
  uint64_t v7 = v79[187];
  uint64_t v87 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v75 = &v64[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v78 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v85 = &v64[-v11];
  uint64_t v12 = v6[188];
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v10);
  uint64_t v76 = &v64[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v77 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v84 = &v64[-v16];
  uint64_t v17 = (void *)((char *)v3 + qword_1EBE59348);
  swift_beginAccess();
  uint64_t v18 = *v17;
  uint64_t v19 = v6[193];
  uint64_t v20 = sub_1DA98BF68();
  uint64_t v88 = v3;
  uint64_t v21 = v6[191];
  swift_bridgeObjectRetain();
  uint64_t v86 = a1;
  uint64_t v83 = v21;
  MEMORY[0x1E0177130](&v89, a1, v18, v7, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t)v89;
  if (!v89)
  {
    swift_getTupleTypeMetadata2();
    sub_1DA98C2E8();
    uint64_t v22 = sub_1DA98BEC8();
  }
  uint64_t v93 = v22;
  uint64_t result = MEMORY[0x1E0177130](&v89, a2);
  uint64_t v24 = (uint64_t)v89;
  if (v90) {
    uint64_t v24 = 0;
  }
  uint64_t v25 = v24 + 1;
  if (__OFADD__(v24, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v25 < 1)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v73 = v19;
  uint64_t v26 = v12;
  uint64_t v68 = v12;
  uint64_t v69 = v13;
  uint64_t v27 = v13 + 16;
  uint64_t v81 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16);
  v81(v84, a2, v26);
  uint64_t v67 = v25;
  uint64_t v89 = (void *)v25;
  char v90 = 0;
  sub_1DA98BF98();
  uint64_t v28 = v86;
  uint64_t v30 = v87 + 16;
  unint64_t v29 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v87 + 16);
  uint64_t v82 = a2;
  v29(v85, v86, v7);
  uint64_t v94 = v93;
  swift_beginAccess();
  sub_1DA98BF68();
  swift_bridgeObjectRetain();
  sub_1DA98BF98();
  swift_endAccess();
  uint64_t v31 = v75;
  uint64_t v80 = v7;
  uint64_t v71 = v30;
  int64_t v70 = v29;
  v29(v75, v28, v7);
  uint64_t v32 = v68;
  unint64_t v33 = v76;
  uint64_t v72 = v27;
  v81(v76, v82, v68);
  uint64_t v34 = sub_1DA989F18();
  os_log_type_t v35 = sub_1DA98C548();
  int v36 = v35;
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    uint64_t v89 = (void *)v66;
    *(_DWORD *)uint64_t v37 = 136446722;
    int v65 = v36;
    uint64_t v38 = v80;
    uint64_t v39 = sub_1DA98CDD8();
    uint64_t v94 = sub_1DA8C5E00(v39, v40, (uint64_t *)&v89);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v31, v38);
    *(_WORD *)(v37 + 12) = 2082;
    uint64_t v41 = sub_1DA98CDD8();
    uint64_t v94 = sub_1DA8C5E00(v41, v42, (uint64_t *)&v89);
    sub_1DA98C858();
    uint64_t v43 = v69;
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v33, v32);
    *(_WORD *)(v37 + 22) = 2048;
    uint64_t v94 = v67;
    sub_1DA98C858();
    _os_log_impl(&dword_1DA795000, v34, (os_log_type_t)v65, "%{public}s:%{public}s assertion: acquired (%ld)", (uint8_t *)v37, 0x20u);
    uint64_t v44 = v66;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v44, -1, -1);
    MEMORY[0x1E0178DA0](v37, -1, -1);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v31, v80);
    uint64_t v43 = v69;
    (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v33, v32);
  }
  uint64_t v45 = v32;
  uint64_t v46 = swift_allocObject();
  swift_weakInit();
  uint64_t v47 = v85;
  uint64_t v48 = v80;
  v70(v85, v86, v80);
  unint64_t v49 = v84;
  v81(v84, v82, v45);
  uint64_t v50 = v87;
  unint64_t v51 = (*(unsigned __int8 *)(v87 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  unint64_t v52 = (v78 + *(unsigned __int8 *)(v43 + 80) + v51) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v53 = (char *)swift_allocObject();
  *((void *)v53 + 2) = v48;
  *((void *)v53 + 3) = v45;
  uint64_t v54 = v79;
  *((void *)v53 + 4) = v79[189];
  uint64_t v55 = v83;
  *((void *)v53 + 5) = v54[190];
  *((void *)v53 + 6) = v55;
  uint64_t v56 = v73;
  *((void *)v53 + 7) = v54[192];
  *((void *)v53 + 8) = v56;
  *((void *)v53 + 9) = v54[194];
  *((void *)v53 + 10) = v46;
  (*(void (**)(char *, unsigned char *, uint64_t))(v50 + 32))(&v53[v51], v47, v48);
  (*(void (**)(char *, unsigned char *, uint64_t))(v43 + 32))(&v53[v52], v49, v45);
  uint64_t v57 = type metadata accessor for BlockAssertion();
  uint64_t v58 = (void *)swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v59 = swift_allocObject();
  swift_retain();
  unint64_t v60 = (_DWORD *)swift_slowAlloc();
  _DWORD *v60 = 0;
  *(void *)(v59 + 16) = v60;
  v58[2] = v59;
  v58[3] = sub_1DA7BEC50;
  v58[4] = v53;
  sub_1DA7AD81C(0);
  swift_release();
  uint64_t v61 = (void (**)(void **, uint64_t))((char *)v88 + qword_1EBE6F0C8);
  swift_beginAccess();
  unint64_t v62 = *v61;
  if (*v61)
  {
    uint64_t v91 = v57;
    uint64_t v92 = &protocol witness table for BlockAssertion;
    uint64_t v89 = v58;
    sub_1DA7AE2F8((uint64_t)v62);
    swift_retain();
    v62(&v89, v86);
    sub_1DA7AD81C((uint64_t)v62);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
  }
  else
  {
    unint64_t v63 = v74;
    v74[3] = v57;
    v63[4] = &protocol witness table for BlockAssertion;
    *unint64_t v63 = v58;
  }
  return (void *)swift_bridgeObjectRelease();
}

uint64_t sub_1DA7BD838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = a2;
    uint64_t v9 = a3;
    sub_1DA8ABB5C((uint64_t)sub_1DA7BEF7C, (uint64_t)v6, MEMORY[0x1E4FBC848] + 8);
    return swift_release();
  }
  return result;
}

BOOL sub_1DA7BD8D0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)((char *)v1 + qword_1EBE59348);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(v3 + 1496);
  uint64_t v7 = sub_1DA98BF68();
  uint64_t v8 = *(void *)(v3 + 1528);
  swift_bridgeObjectRetain();
  MEMORY[0x1E0177130](&v11, a1, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = v11;
  if (v11) {
    swift_bridgeObjectRelease();
  }
  return v9 != 0;
}

uint64_t sub_1DA7BD9D8(uint64_t a1, uint64_t a2)
{
  v3[3] = a1;
  v3[4] = a2;
  return sub_1DA8ABB5C((uint64_t)sub_1DA7BEF7C, (uint64_t)v3, MEMORY[0x1E4FBC848] + 8);
}

void sub_1DA7BDA30(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v79 = a3;
  uint64_t v69 = (void *)*a1;
  uint64_t v5 = v69;
  uint64_t v6 = v69[187];
  uint64_t v76 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v68 = (uint64_t (*)())((char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v71 = (char *)&v66 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v72 = (char *)&v66 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v73 = (char *)&v66 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  int64_t v70 = (void (*)(char *, uint64_t, uint64_t))((char *)&v66 - v16);
  uint64_t v17 = (char *)v5[188];
  uint64_t v75 = *((void *)v17 - 1);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v66 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v67 = (char *)&v66 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v74 = (char *)&v66 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v66 - v25;
  uint64_t v27 = (uint64_t *)(v24 + qword_1EBE59348);
  swift_beginAccess();
  uint64_t v28 = *v27;
  unint64_t v29 = (char *)v5[193];
  uint64_t v30 = sub_1DA98BF68();
  uint64_t v78 = a1;
  uint64_t v31 = (char *)v5[191];
  swift_bridgeObjectRetain();
  uint64_t v77 = a2;
  uint64_t v80 = v6;
  MEMORY[0x1E0177130](&v82, a2, v28);
  swift_bridgeObjectRelease();
  uint64_t v32 = v82;
  if (!v82) {
    goto LABEL_23;
  }
  uint64_t v85 = v82;
  swift_bridgeObjectRetain();
  MEMORY[0x1E0177130](&v82, v79, v32, v17, MEMORY[0x1E4FBB550], v29);
  swift_bridgeObjectRelease();
  if (v83)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v71, v77, v80);
    (*(void (**)(char *, uint64_t, char *))(v75 + 16))(v67, v79, v17);
    uint64_t v82 = 0;
    unint64_t v83 = 0xE000000000000000;
    sub_1DA98CA18();
    sub_1DA98CE18();
    sub_1DA98C148();
    sub_1DA98CE18();
    sub_1DA98C148();
    goto LABEL_25;
  }
  uint64_t v33 = v82 - 1;
  uint64_t v34 = v73;
  if (__OFSUB__(v82, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v33 < 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    (*(void (**)(uint64_t (*)(), uint64_t, uint64_t))(v76 + 16))(v68, v77, v80);
    (*(void (**)(char *, uint64_t, char *))(v75 + 16))(v66, v79, v17);
    uint64_t v82 = 0;
    unint64_t v83 = 0xE000000000000000;
    sub_1DA98CA18();
    sub_1DA98CE18();
    sub_1DA98C148();
    sub_1DA98CE18();
    sub_1DA98C148();
LABEL_25:
    sub_1DA98CBB8();
    __break(1u);
    return;
  }
  uint64_t v71 = (char *)(v82 - 1);
  if (v82 == 1)
  {
    uint64_t v67 = v29;
    uint64_t v41 = v76;
    unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
    v42(v73, v77, v80);
    uint64_t v68 = sub_1DA7BBDAC();
    uint64_t v66 = (char *)sub_1DA98BF68();
    uint64_t v43 = (void (*)(uint64_t *, void))sub_1DA98BF78();
    uint64_t v45 = *v44;
    int64_t v70 = v42;
    if (v45) {
      sub_1DA98BEA8();
    }
    v43(v81, 0);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v80);
    ((void (*)(uint64_t *, void))v68)(&v82, 0);
    uint64_t v46 = (void *)((char *)v78 + qword_1EBE59348);
    swift_beginAccess();
    uint64_t v47 = *v46;
    swift_bridgeObjectRetain();
    uint64_t v38 = v77;
    MEMORY[0x1E0177130](v81, v77, v47, v80, v30, v31);
    swift_bridgeObjectRelease();
    if (v81[0])
    {
      int v36 = v17;
      char v48 = MEMORY[0x1E01770C0](v81[0], v17, MEMORY[0x1E4FBB550], v67);
      swift_bridgeObjectRelease();
      uint64_t v39 = v75;
      unint64_t v40 = v72;
      if (v48)
      {
        swift_beginAccess();
        sub_1DA98BEA8();
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
      uint64_t v35 = v79;
    }
    else
    {
      uint64_t v35 = v79;
      uint64_t v39 = v75;
      unint64_t v40 = v72;
      int v36 = v17;
    }
    uint64_t v37 = v70;
  }
  else
  {
    uint64_t v35 = v79;
    (*(void (**)(char *, uint64_t, char *))(v75 + 16))(v26, v79, v17);
    uint64_t v82 = v33;
    LOBYTE(v83) = 0;
    sub_1DA98BF98();
    uint64_t v73 = v31;
    int v36 = v17;
    uint64_t v68 = (uint64_t (*)())v30;
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
    uint64_t v38 = v77;
    v37((char *)v70, v77, v80);
    v81[0] = v85;
    swift_beginAccess();
    sub_1DA98BF68();
    swift_bridgeObjectRetain();
    uint64_t v39 = v75;
    sub_1DA98BF98();
    swift_endAccess();
    unint64_t v40 = v72;
  }
  unint64_t v49 = v74;
  v37(v40, v38, v80);
  (*(void (**)(char *, uint64_t, char *))(v39 + 16))(v49, v35, v36);
  uint64_t v50 = sub_1DA989F18();
  os_log_type_t v51 = sub_1DA98C548();
  int v52 = v51;
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v53 = swift_slowAlloc();
    uint64_t v72 = v36;
    uint64_t v54 = v53;
    uint64_t v75 = swift_slowAlloc();
    v81[0] = v75;
    *(_DWORD *)uint64_t v54 = 136446722;
    uint64_t v55 = v80;
    uint64_t v56 = sub_1DA98CDD8();
    uint64_t v84 = sub_1DA8C5E00(v56, v57, v81);
    LODWORD(v73) = v52;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v40, v55);
    *(_WORD *)(v54 + 12) = 2082;
    uint64_t v58 = v74;
    uint64_t v59 = v72;
    uint64_t v60 = sub_1DA98CDD8();
    uint64_t v84 = sub_1DA8C5E00(v60, v61, v81);
    uint64_t v62 = v77;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v39 + 8))(v58, v59);
    *(_WORD *)(v54 + 22) = 2048;
    unint64_t v63 = v71;
    uint64_t v84 = (uint64_t)v71;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v50, (os_log_type_t)v73, "%{public}s:%{public}s assertion released (%ld)", (uint8_t *)v54, 0x20u);
    uint64_t v64 = v75;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v64, -1, -1);
    MEMORY[0x1E0178DA0](v54, -1, -1);

    uint64_t v65 = v79;
    if (v63) {
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v76 + 8))(v40, v80);
    (*(void (**)(char *, char *))(v39 + 8))(v49, v36);

    swift_bridgeObjectRelease();
    uint64_t v62 = v77;
    uint64_t v65 = v79;
    if (v71) {
      return;
    }
  }
  sub_1DA8ADDE0(v62, v65);
}

uint64_t sub_1DA7BE548()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1EBE58B88;
  uint64_t v2 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(void *)(v0 + qword_1EBE6F0C8);

  return sub_1DA7AD81C(v3);
}

uint64_t AssertedStatefulStore.deinit()
{
  uint64_t v0 = StatefulStore.deinit();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1EBE58B88;
  uint64_t v2 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1DA7AD81C(*(void *)(v0 + qword_1EBE6F0C8));
  return v0;
}

uint64_t AssertedStatefulStore.__deallocating_deinit()
{
  AssertedStatefulStore.deinit();

  return swift_deallocClassInstance();
}

void *sub_1DA7BE6BC(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_1DA98CC18();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_1DA7BE760@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1DA7BE790(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, long long a9, uint64_t a10)
{
  uint64_t v30 = a8;
  int v28 = a6;
  int v29 = a7;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v25 = a1;
  long long v24 = a9;
  uint64_t v23 = a10;
  uint64_t v13 = sub_1DA989F38();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = qword_1EBE59348;
  sub_1DA98BF68();
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_1DA98C2E8();
  *(void *)(v10 + v17) = sub_1DA98BEC8();
  uint64_t v18 = (void *)(v10 + qword_1EBE6F0C8);
  *uint64_t v18 = 0;
  v18[1] = 0;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v19(v10 + qword_1EBE58B88, a4, v13);
  swift_release();
  v19((uint64_t)v16, a4, v13);
  sub_1DA7A1A44(a5, (uint64_t)v31);
  uint64_t v20 = sub_1DA8C6488(v25, v26, v27, (uint64_t)v16, v31, v28, v29, v30, v24, *((uint64_t *)&v24 + 1), v23);
  __swift_destroy_boxed_opaque_existential_1(a5);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  return v20;
}

uint64_t sub_1DA7BE9E0@<X0>(void *a1@<X8>)
{
  return sub_1DA7BC0D8(v1, a1);
}

unint64_t sub_1DA7BE9FC()
{
  unint64_t result = qword_1EBE62A48;
  if (!qword_1EBE62A48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE62A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE62A48);
  }
  return result;
}

uint64_t sub_1DA7BEA58()
{
  uint64_t v1 = v0 + qword_1EBE6F0C8;
  swift_beginAccess();
  return *(void *)v1;
}

void *sub_1DA7BEAA0@<X0>(void *a1@<X8>)
{
  return sub_1DA7BCF44(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1DA7BEAD4()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA7BEB0C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 88) & ~v4;
  uint64_t v6 = *(void *)(v2 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + *(void *)(v3 + 64) + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v4 | v7 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v2);

  return MEMORY[0x1F4186498](v0, v9, v10);
}

uint64_t sub_1DA7BEC50()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80);
  return sub_1DA7BD838(v0[10], (uint64_t)v0 + v1, (uint64_t)v0+ ((v1 + *(void *)(*(void *)(v0[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(v0[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[3] - 8) + 80)));
}

uint64_t sub_1DA7BED18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DA7BEA58();
  if (v2) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  *a1 = v2;
  a1[1] = v4;

  return sub_1DA7AE2F8(v2);
}

uint64_t sub_1DA7BED5C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (*a1) {
    uint64_t v2 = a1[1];
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1DA7AE2F8(*a1);
  return sub_1DA7BCE1C(v1, v2);
}

uint64_t sub_1DA7BEDA8()
{
  return 64;
}

__n128 sub_1DA7BEDB4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DA7BEDC8()
{
  uint64_t result = sub_1DA989F38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AssertedStatefulStore()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for AssertedStatefulStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AssertedStatefulStore);
}

uint64_t dispatch thunk of AssertedStatefulStore.lifetimeAssertionWrapper.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1608))();
}

uint64_t dispatch thunk of AssertedStatefulStore.lifetimeAssertionWrapper.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1616))();
}

uint64_t dispatch thunk of AssertedStatefulStore.lifetimeAssertionWrapper.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1624))();
}

uint64_t dispatch thunk of AssertedStatefulStore.acquireLifetimeAssertion(for:variantKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1632))();
}

uint64_t dispatch thunk of AssertedStatefulStore._locked_acquireLifetimeAssertion(for:variantKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1640))();
}

void sub_1DA7BEF7C()
{
  sub_1DA7BDA30(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1DA7BEF9C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  long long v4 = *(void **)(v2 + 32);
  uint64_t v5 = (void *)sub_1DA98C008();
  id v6 = objc_msgSend(v4, sel_prepareStatement_, v5);

  if (!v6)
  {
    sub_1DA7C7838();
    swift_allocError();
    unsigned char *v13 = 3;
    swift_willThrow();
    return v2;
  }
  uint64_t v7 = sub_1DA7C29C8(a1);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = MEMORY[0x1E4FBC860];
  sub_1DA85AC24((uint64_t)v7);
  swift_release();
  uint64_t v9 = (void *)sub_1DA98BE68();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_1DA7C79C0;
  uint64_t v36 = v8;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v32 = 1107296256;
  uint64_t v33 = sub_1DA7C1878;
  uint64_t v34 = &block_descriptor_31;
  uint64_t v10 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t aBlock = 0;
  unsigned __int8 v11 = objc_msgSend(v6, sel_executeWithBindings_resultRowHandler_error_, v9, v10, &aBlock);
  _Block_release(v10);

  uint64_t v12 = aBlock;
  if (v11)
  {

    swift_beginAccess();
    uint64_t v2 = *(void *)(v8 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    return v2;
  }
  uint64_t v14 = v12;
  uint64_t v15 = (void *)sub_1DA9892D8();

  swift_willThrow();
  id v30 = v15;
  id v16 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE59128);
  if (!swift_dynamicCast())
  {
LABEL_10:

    swift_release();
    return v2;
  }
  if (objc_msgSend(v29, sel_code) != (id)11)
  {

    goto LABEL_10;
  }

  if (*(unsigned char *)(v2 + 40) != 1)
  {
    id v17 = v29;
    swift_willThrow();

    goto LABEL_10;
  }
  if (qword_1EBE59148 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1DA989F38();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBE6F0A8);
  uint64_t v20 = v29;
  uint64_t v21 = sub_1DA989F18();
  os_log_type_t v22 = sub_1DA98C538();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    int v28 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 138543362;
    uint64_t aBlock = v20;
    long long v24 = v20;
    sub_1DA98C858();
    *int v28 = v20;

    _os_log_impl(&dword_1DA795000, v21, v22, "Corrupt database detected. Calling corruption handler and exiting: %{public}@", v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v28, -1, -1);
    MEMORY[0x1E0178DA0](v23, -1, -1);
  }
  else
  {

    uint64_t v21 = v20;
  }

  uint64_t v25 = *(void (**)(void))(v2 + 48);
  uint64_t v26 = v20;
  v25();

  uint64_t aBlock = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  uint64_t aBlock = 0xD00000000000002CLL;
  unint64_t v32 = 0x80000001DA99D5B0;
  id v27 = [v26 description];
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1DA98CBB8();
  __break(1u);
  return result;
}

void sub_1DA7BF4F0(uint64_t a1)
{
  uint64_t v2 = v1;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v2 + 24) + 16));
  if (a1 == 1)
  {
    if (!*(void *)(v2 + 80))
    {
      unint64_t v5 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
      MEMORY[0x1E01772A0](18);
      sub_1DA98C148();
      sub_1DA98CDD8();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA7BEF9C(v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else if (!a1 && *(void *)(v2 + 80) == 1)
  {
    unint64_t v4 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
    sub_1DA7BEF9C(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DA7BF6AC(void *a1, NSObject *a2, unsigned int a3, char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = v6;
  *(void *)(v8 + 16) = 10;
  type metadata accessor for UnfairLock();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = (_DWORD *)swift_slowAlloc();
  *uint64_t v15 = 0;
  *(void *)(v14 + 16) = v15;
  *(unsigned char *)(v8 + 40) = 0;
  *(void *)(v8 + 72) = 0;
  *(void *)(v8 + 80) = 0;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 64) = 0;
  *(void *)(v8 + 24) = v14;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 48) = a5;
  id v16 = a1;
  swift_retain();
  unint64_t v17 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  sub_1DA7BEF9C(v17);
  if (v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v8 + 32), sel_close);
    swift_release();
    if (qword_1EBE59148 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1DA989F38();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EBE6F0A8);
    id v20 = v7;
    uint64_t v21 = sub_1DA989F18();
    os_log_type_t v22 = sub_1DA98C528();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138543362;
      uint64_t v46 = sub_1DA9892C8();
      sub_1DA98C858();
      *uint64_t v43 = v46;

      _os_log_impl(&dword_1DA795000, v21, v22, "Failed to open database: %{public}@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v43, -1, -1);
      MEMORY[0x1E0178DA0](v23, -1, -1);
    }
    else
    {
    }
    swift_willThrow();

    swift_release();
    sub_1DA7A1AE0((uint64_t)a2, (uint64_t *)&unk_1EBE66AB0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v18 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
    sub_1DA7BEF9C(v18);
    uint64_t v44 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v25 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
    MEMORY[0x1E01772A0](18);
    sub_1DA98C148();
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA7BEF9C(v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v26 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
    sub_1DA7BEF9C(v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v27 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
    sub_1DA7BEF9C(v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v28 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
    sub_1DA7BEF9C(v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a4)
    {
      sub_1DA7BFEB8(a3, a4, a2);
      swift_bridgeObjectRelease();
    }
    unint64_t v29 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
    uint64_t v30 = sub_1DA7C0964(v29);
    swift_bridgeObjectRelease();
    unint64_t v31 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
    uint64_t v32 = sub_1DA7C0964(v31);
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 != -1) {
      swift_once();
    }
    double v33 = fmax((double)v32 * 0.05, 256.0);
    uint64_t v34 = sub_1DA989F38();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EBE6F0A8);
    uint64_t v35 = sub_1DA989F18();
    os_log_type_t v36 = sub_1DA98C548();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 134349312;
      sub_1DA98C858();
      *(_WORD *)(v37 + 12) = 2050;
      sub_1DA98C858();
      _os_log_impl(&dword_1DA795000, v35, v36, "Database has %{public}lld/%{public}lld free pages.", (uint8_t *)v37, 0x16u);
      uint64_t v38 = v37;
      id v16 = v44;
      MEMORY[0x1E0178DA0](v38, -1, -1);
    }

    if (v33 > (double)v30)
    {

      swift_release();
    }
    else
    {
      uint64_t v39 = sub_1DA989F18();
      os_log_type_t v40 = sub_1DA98C548();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v41 = 0;
        _os_log_impl(&dword_1DA795000, v39, v40, "Vacuuming", v41, 2u);
        MEMORY[0x1E0178DA0](v41, -1, -1);
      }

      unint64_t v42 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
      sub_1DA7BEF9C(v42);
      swift_bridgeObjectRelease();

      swift_release();
      swift_bridgeObjectRelease();
    }
    sub_1DA7A1AE0((uint64_t)a2, (uint64_t *)&unk_1EBE66AB0);
    *(unsigned char *)(v8 + 40) = 1;
  }
  return v8;
}

os_log_t sub_1DA7BFEB8(unsigned int a1, char *a2, NSObject *a3)
{
  os_log_t v75 = a3;
  uint64_t v77 = a2;
  unsigned int v76 = a1;
  v82[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1DA989638();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (unint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v62 - v13;
  unint64_t v15 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  uint64_t v16 = sub_1DA7C0964(v15);
  os_log_t result = (os_log_t)swift_bridgeObjectRelease();
  if (v4) {
    return result;
  }
  unint64_t v63 = v11;
  uint64_t v65 = v6;
  uint64_t v66 = v14;
  uint64_t v74 = v8;
  if (v16 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else
  {
    unint64_t v11 = v16;
    if (v16 <= 0x7FFFFFFF)
    {
      unint64_t v18 = *((void *)v77 + 2);
      if (v18 >= 0x10000)
      {
        os_log_t result = (os_log_t)sub_1DA98CBA8();
        __break(1u);
        return result;
      }
      unint64_t v15 = v3;
      uint64_t v14 = v77;
      uint64_t v73 = v5;
      unint64_t v68 = v18;
      unsigned int v71 = (unsigned __int16)v16;
      unsigned int v72 = (unsigned __int16)v18;
      if (qword_1EBE59148 == -1) {
        goto LABEL_6;
      }
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_30:
  swift_once();
LABEL_6:
  uint64_t v19 = sub_1DA989F38();
  uint64_t v67 = __swift_project_value_buffer(v19, (uint64_t)qword_1EBE6F0A8);
  id v20 = sub_1DA989F18();
  os_log_type_t v21 = sub_1DA98C548();
  BOOL v22 = os_log_type_enabled(v20, v21);
  unint64_t v69 = v11;
  uint64_t v70 = 0;
  if (v22)
  {
    unint64_t v23 = v11 >> 16;
    uint64_t v24 = swift_slowAlloc();
    unint64_t v64 = v15;
    unint64_t v11 = v24;
    uint64_t v62 = swift_slowAlloc();
    v82[0] = v62;
    *(_DWORD *)unint64_t v11 = 136446466;
    uint64_t v79 = 118;
    unint64_t v80 = 0xE100000000000000;
    __int16 v78 = v23;
    sub_1DA98CDD8();
    unsigned int v25 = v76;
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    __int16 v78 = v71;
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    uint64_t v79 = sub_1DA8C5E00(v79, v80, v82);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t v79 = 118;
    unint64_t v80 = 0xE100000000000000;
    __int16 v78 = v25;
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    __int16 v78 = v72;
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    uint64_t v79 = sub_1DA8C5E00(v79, v80, v82);
    uint64_t v14 = v77;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v20, v21, "Migrating database from %{public}s to %{public}s", (uint8_t *)v11, 0x16u);
    uint64_t v26 = v62;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v26, -1, -1);
    unint64_t v27 = v11;
    WORD1(v11) = WORD1(v69);
    unint64_t v28 = v64;
    MEMORY[0x1E0178DA0](v27, -1, -1);

    unint64_t v29 = v74;
  }
  else
  {

    unint64_t v29 = v74;
    unsigned int v25 = v76;
    unint64_t v28 = v15;
  }
  BOOL v30 = WORD1(v11) == (unsigned __int16)v25;
  uint64_t v31 = v73;
  unsigned int v32 = v25;
  os_log_t result = v75;
  if (v30)
  {
    if (v71 == v72) {
      return result;
    }
    unint64_t v81 = (unsigned __int16)v69;
    if (v72 >= v71)
    {
LABEL_25:
      unsigned int v60 = (unsigned __int16)v32 | ((unsigned __int16)v68 << 16);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1DA7C6B34(0x6F6974617267694DLL, 0xE90000000000006ELL, v28, v32, (uint64_t)v14, &v81, v28, v60);
      swift_bridgeObjectRelease();
      return (os_log_t)swift_release();
    }
    unint64_t v33 = v28;
    uint64_t v34 = (uint64_t)v66;
    sub_1DA7C788C((uint64_t)v75, (uint64_t)v66);
    uint64_t v35 = sub_1DA989F18();
    int v36 = sub_1DA98C528();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      LODWORD(v69) = v36;
      os_log_t v75 = v35;
      unint64_t v64 = v33;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v82[0] = v38;
      *(_DWORD *)uint64_t v37 = 136446722;
      uint64_t v79 = 118;
      unint64_t v80 = 0xE100000000000000;
      __int16 v78 = v32;
      sub_1DA98CDD8();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      __int16 v78 = v71;
      sub_1DA98CDD8();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      uint64_t v79 = sub_1DA8C5E00(v79, v80, v82);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2082;
      uint64_t v79 = 118;
      unint64_t v80 = 0xE100000000000000;
      __int16 v78 = v32;
      sub_1DA98CDD8();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      __int16 v78 = v72;
      sub_1DA98CDD8();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      uint64_t v79 = sub_1DA8C5E00(v79, v80, v82);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 22) = 2080;
      uint64_t v39 = v63;
      sub_1DA7C788C(v34, v63);
      uint64_t v40 = sub_1DA989478();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40) == 1)
      {
        sub_1DA7A1AE0(v39, (uint64_t *)&unk_1EBE66AB0);
        unint64_t v42 = 0xEB000000003E7972;
        uint64_t v43 = 0x6F6D656D2D6E693CLL;
      }
      else
      {
        uint64_t v43 = sub_1DA989368();
        unint64_t v42 = v51;
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
      }
      uint64_t v31 = v73;
      unint64_t v29 = v74;
      uint64_t v79 = sub_1DA8C5E00(v43, v42, v82);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      sub_1DA7A1AE0((uint64_t)v66, (uint64_t *)&unk_1EBE66AB0);
      os_log_t v52 = v75;
      _os_log_impl(&dword_1DA795000, v75, (os_log_type_t)v69, "Detected database schema downgrade from %{public}s to %{public}s. Will attempt to truncate %s", (uint8_t *)v37, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v38, -1, -1);
      MEMORY[0x1E0178DA0](v37, -1, -1);

      unint64_t v33 = v64;
      uint64_t v14 = v77;
      unsigned int v32 = v76;
    }
    else
    {
      sub_1DA7A1AE0(v34, (uint64_t *)&unk_1EBE66AB0);
    }
    uint64_t v53 = *(void **)(v33 + 32);
    uint64_t v79 = 0;
    unsigned int v54 = objc_msgSend(v53, sel_truncateDatabaseAndReturnError_, &v79);
    id v46 = (id)v79;
    uint64_t v55 = v65;
    if (v54)
    {
      unint64_t v81 = 0;
      uint64_t v56 = self;
      id v57 = v46;
      id v58 = objc_msgSend(v56, sel_standardUserDefaults);
      _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
      uint64_t v59 = (void *)sub_1DA989568();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v31);
      char v48 = sub_1DA98C008();
      objc_msgSend(v58, sel_setObject_forKey_, v59, v48);

LABEL_24:
      unint64_t v28 = v33;
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v44 = *(void **)(v28 + 32);
    uint64_t v79 = 0;
    unsigned int v45 = objc_msgSend(v44, sel_truncateDatabaseAndReturnError_, &v79);
    id v46 = (id)v79;
    if (v45)
    {
      unint64_t v33 = v28;
      unint64_t v81 = 0;
      id v47 = (id)v79;
      char v48 = sub_1DA989F18();
      os_log_type_t v49 = sub_1DA98C548();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v50 = 0;
        _os_log_impl(&dword_1DA795000, v48, v49, "Truncated database for major schema version migration.", v50, 2u);
        MEMORY[0x1E0178DA0](v50, -1, -1);
      }
      goto LABEL_24;
    }
  }
  id v61 = v46;
  sub_1DA9892D8();

  return (os_log_t)swift_willThrow();
}

uint64_t sub_1DA7C0964(uint64_t a1)
{
  uint64_t v3 = sub_1DA7BEF9C(a1);
  if (!v2)
  {
    uint64_t v1 = v3;
    if (!*(void *)(v3 + 16)
      || (uint64_t v4 = *(void *)(v3 + 32), swift_bridgeObjectRetain(),
                                     swift_bridgeObjectRelease(),
                                     *(void *)(v4 + 16) != 1))
    {
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    uint64_t v1 = *(void *)(v4 + 48);
    unint64_t v5 = *(void *)(v4 + 56);
    int v6 = *(unsigned __int8 *)(v4 + 64);
    swift_bridgeObjectRetain();
    sub_1DA7A1AA8(v1, v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      sub_1DA79EB2C(v1, v5, v6);
LABEL_7:
      sub_1DA7C7838();
      swift_allocError();
      *uint64_t v7 = 4;
      swift_willThrow();
    }
  }
  return v1;
}

uint64_t sub_1DA7C0A5C@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v3 = (void *)sub_1DA98C008();
  id v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_1DA98C8C8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1DA7C6354((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    uint64_t v5 = sub_1DA989638();
    int v6 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_1DA7A1AE0((uint64_t)v10, &qword_1EBE66B48);
    uint64_t v8 = sub_1DA989638();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t SQLDatabase.deinit()
{
  swift_release();

  swift_release();
  return v0;
}

uint64_t SQLDatabase.__deallocating_deinit()
{
  swift_release();

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLDatabase()
{
  return self;
}

uint64_t method lookup function for SQLDatabase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SQLDatabase);
}

uint64_t *initializeBufferWithCopyOfBuffer for SQLDatabase.Storage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588F8);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_1DA989478();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 48));
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for SQLDatabase.Storage(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588F8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_1DA989478();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

char *initializeWithCopy for SQLDatabase.Storage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1DA989478();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    *(void *)&a1[*(int *)(v6 + 48)] = *(void *)&a2[*(int *)(v6 + 48)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for SQLDatabase.Storage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588F8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_1DA989478();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      *(void *)&a1[*(int *)(v6 + 48)] = *(void *)&a2[*(int *)(v6 + 48)];
      return a1;
    }
    sub_1DA7A1AE0((uint64_t)a1, &qword_1EBE588F8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1DA989478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  *(void *)&a1[*(int *)(v6 + 48)] = *(void *)&a2[*(int *)(v6 + 48)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

char *initializeWithTake for SQLDatabase.Storage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1DA989478();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    *(void *)&a1[*(int *)(v6 + 48)] = *(void *)&a2[*(int *)(v6 + 48)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for SQLDatabase.Storage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588F8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_1DA989478();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      *(void *)&a1[*(int *)(v6 + 48)] = *(void *)&a2[*(int *)(v6 + 48)];
      return a1;
    }
    sub_1DA7A1AE0((uint64_t)a1, &qword_1EBE588F8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1DA989478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  *(void *)&a1[*(int *)(v6 + 48)] = *(void *)&a2[*(int *)(v6 + 48)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLDatabase.Storage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7C14D0);
}

uint64_t sub_1DA7C14D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588F8);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SQLDatabase.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7C1554);
}

uint64_t sub_1DA7C1554(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588F8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1DA7C15D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588F8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1DA7C1644(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588F8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for SQLDatabase.Storage()
{
  uint64_t result = qword_1EBE589B8;
  if (!qword_1EBE589B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DA7C1704()
{
  uint64_t result = sub_1DA989478();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DA7C179C(void *a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 16);
  unint64_t v4 = sub_1DA8EC274(a1);
  swift_beginAccess();
  uint64_t v5 = *(void **)(a2 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 16) = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_1DA7CA630(0, v5[2] + 1, 1, v5);
    *uint64_t v3 = v5;
  }
  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    uint64_t v5 = sub_1DA7CA630((void *)(v7 > 1), v8 + 1, 1, v5);
    *uint64_t v3 = v5;
  }
  long long v5[2] = v8 + 1;
  v5[v8 + 4] = v4;
  return swift_endAccess();
}

uint64_t sub_1DA7C187C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t result = *(void *)(v0 + 80);
  if (result == -1)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 80) = result + 1;
    sub_1DA7BF4F0(result);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
    swift_release();
    id v4 = objc_allocWithZone(MEMORY[0x1E4F4F838]);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v5 = (void *)sub_1DA98C008();
    uint64_t v6 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    v9[4] = sub_1DA7C6334;
    v9[5] = v0;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 1107296256;
    _OWORD v9[2] = sub_1DA7C1878;
    v9[3] = &block_descriptor_2;
    unint64_t v7 = _Block_copy(v9);
    id v8 = objc_msgSend(v4, sel_initWithIdentifier_forReason_invalidationBlock_, v5, v6, v7);

    _Block_release(v7);
    swift_release();
    return (uint64_t)v8;
  }
  return result;
}

uint64_t sub_1DA7C19F4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  if (qword_1EBE59148 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1DA989F38();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBE6F0A8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_1DA989F18();
  os_log_type_t v12 = sub_1DA98C518();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v18[0] = swift_slowAlloc();
    uint64_t v14 = v18[0];
    *(_DWORD *)uint64_t v13 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1DA8C5E00(a1, a2, v18);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1DA8C5E00(a3, a4, v18);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v11, v12, "Committing transaction savepoint [%{public}s]: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    uint64_t v15 = v14;
    uint64_t v5 = v4;
    MEMORY[0x1E0178DA0](v15, -1, -1);
    MEMORY[0x1E0178DA0](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v18[0] = 0;
  v18[1] = 0xE000000000000000;
  unint64_t v16 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](18);
  sub_1DA98C148();
  sub_1DA98C148();
  sub_1DA7BEF9C(v16);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA7C1CB8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  if (qword_1EBE59148 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1DA989F38();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBE6F0A8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_1DA989F18();
  os_log_type_t v12 = sub_1DA98C518();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v18 = v14;
    *(_DWORD *)uint64_t v13 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1DA8C5E00(a1, a2, &v18);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1DA8C5E00(a3, a4, &v18);
    uint64_t v5 = v4;
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v11, v12, "Rollback to transaction savepoint [%{public}s]: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v14, -1, -1);
    MEMORY[0x1E0178DA0](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  unint64_t v15 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](22);
  sub_1DA98C148();
  sub_1DA98C148();
  sub_1DA7BEF9C(v15);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    unint64_t v17 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
    MEMORY[0x1E01772A0](18);
    sub_1DA98C148();
    sub_1DA98C148();
    sub_1DA7BEF9C(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1DA7C2014(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  sub_1DA7BEF9C(v6);
  if (v3)
  {
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1DA989F38();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBE6F0A8);
    swift_bridgeObjectRetain_n();
    id v8 = sub_1DA989F18();
    os_log_type_t v9 = sub_1DA98C518();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v17 = v11;
      *(_DWORD *)uint64_t v10 = 136446210;
      swift_bridgeObjectRetain();
      sub_1DA8C5E00(a2, a3, &v17);
      sub_1DA98C858();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA795000, v8, v9, "Unable to execute wal_checkpoint(FULL, privacy: .public) for: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v11, -1, -1);
      MEMORY[0x1E0178DA0](v10, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1DA989F38();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EBE6F0A8);
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_1DA989F18();
    os_log_type_t v14 = sub_1DA98C518();
    if (os_log_type_enabled(v13, v14))
    {
      unint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = v16;
      *(_DWORD *)unint64_t v15 = 136446210;
      swift_bridgeObjectRetain();
      sub_1DA8C5E00(a2, a3, &v17);
      sub_1DA98C858();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA795000, v13, v14, "Successfully executed wal_checkpoint(FULL, privacy: .public) for: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v16, -1, -1);
      MEMORY[0x1E0178DA0](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1DA7C23A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  uint64_t result = *(void *)(a2 + 80);
  if (result)
  {
    *(void *)(a2 + 80) = result - 1;
    sub_1DA7BF4F0(result);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA7C2418(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, unsigned int a5)
{
  unint64_t v7 = *a3;
  if ((*a3 & 0x8000000000000000) != 0) {
    goto LABEL_34;
  }
  uint64_t v8 = v5;
  uint64_t v32 = *(void *)(a2 + 16);
  if (!v7) {
    goto LABEL_16;
  }
  if (!v32) {
    goto LABEL_27;
  }
  unint64_t v10 = v7 - 2;
  if (v7 < 2)
  {
LABEL_16:
    if (v7 == v32) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    while (v7 < *(void *)(a2 + 16))
    {
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = *(_OWORD *)(a2 + 16 * v7 + 32);
      uint64_t v18 = qword_1EBE59148;
      swift_retain();
      if (v18 != -1) {
        swift_once();
      }
      unint64_t v19 = v7 + 1;
      uint64_t v20 = sub_1DA989F38();
      __swift_project_value_buffer(v20, (uint64_t)qword_1EBE6F0A8);
      os_log_type_t v21 = sub_1DA989F18();
      os_log_type_t v22 = sub_1DA98C548();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 134349312;
        *(void *)(v23 + 4) = v7;
        *(_WORD *)(v23 + 12) = 2050;
        *(void *)(v23 + 14) = v19;
        _os_log_impl(&dword_1DA795000, v21, v22, "Migrating from minor revision %{public}ld to %{public}ld", (uint8_t *)v23, 0x16u);
        MEMORY[0x1E0178DA0](v23, -1, -1);
      }

      sub_1DA98CA18();
      swift_bridgeObjectRelease();
      strcpy((char *)v34, "MigratingFrom_");
      HIBYTE(v34[1]) = -18;
      sub_1DA98CDD8();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      unint64_t v35 = v7 + 1;
      sub_1DA98CDD8();
      int v6 = v24;
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      swift_retain();
      swift_retain();
      sub_1DA7C63BC(v34[0], v34[1], a4, (void (*)(uint64_t))sub_1DA7C7958, v17, a4);
      swift_bridgeObjectRelease();
      if (v8)
      {
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release();
        return 1;
      }
      swift_release_n();
      swift_release();
      ++v7;
      if (v32 == v19)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_once();
    goto LABEL_29;
  }
  if (v32 - 1 < v10) {
    unint64_t v10 = v32 - 1;
  }
  unint64_t v11 = v10 + 1;
  if (v11 >= 0x21)
  {
    uint64_t v13 = v11 & 0x1F;
    if ((v11 & 0x1F) == 0) {
      uint64_t v13 = 32;
    }
    unint64_t v14 = v11 - v13;
    uint64_t v12 = v14 + 1;
    do
      v14 -= 32;
    while (v14);
  }
  else
  {
    uint64_t v12 = 1;
  }
  unint64_t v15 = v7 - v12;
  uint64_t v16 = v32 - v12;
  while (v16)
  {
    --v16;
    if (!--v15) {
      goto LABEL_16;
    }
  }
LABEL_27:
  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  unint64_t v25 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](22);
  sub_1DA98C148();
  int v6 = __PAIR64__(a5, a5) >> 16;
  LODWORD(v35) = v6;
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA7BEF9C(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8) {
    return 1;
  }
  swift_bridgeObjectRelease();
  if (qword_1EBE59148 != -1) {
    goto LABEL_35;
  }
LABEL_29:
  uint64_t v26 = sub_1DA989F38();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBE6F0A8);
  unint64_t v27 = sub_1DA989F18();
  os_log_type_t v28 = sub_1DA98C548();
  if (os_log_type_enabled(v27, v28))
  {
    unint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v29 = 67240192;
    LODWORD(v34[0]) = v6;
    sub_1DA98C858();
    _os_log_impl(&dword_1DA795000, v27, v28, "Set revision to %{public}d", v29, 8u);
    MEMORY[0x1E0178DA0](v29, -1, -1);
  }

  return 1;
}

void sub_1DA7C2930(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1DA7C2998@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void *sub_1DA7C29C8(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58F58);
  uint64_t v2 = sub_1DA98CBE8();
  uint64_t v3 = (void *)v2;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v32 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v36 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = v2 + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    unint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = *(void *)(a1 + 56) + 24 * i;
    uint64_t v19 = *(void *)v18;
    unint64_t v20 = *(void *)(v18 + 8);
    switch(*(unsigned char *)(v18 + 16))
    {
      case 1:
        unint64_t v35 = &off_1F34D99D0;
        uint64_t v21 = MEMORY[0x1E4FBB3D0];
        goto LABEL_22;
      case 2:
        uint64_t v34 = MEMORY[0x1E4FBB1A0];
        unint64_t v35 = &off_1F34D99C8;
        *(void *)&long long v33 = v19;
        *((void *)&v33 + 1) = v20;
        swift_bridgeObjectRetain();
        uint64_t v22 = v19;
        unint64_t v23 = v20;
        char v24 = 2;
        goto LABEL_25;
      case 3:
        uint64_t v34 = MEMORY[0x1E4F277C0];
        unint64_t v35 = &off_1F34D5038;
        *(void *)&long long v33 = v19;
        *((void *)&v33 + 1) = v20;
        swift_bridgeObjectRetain();
        uint64_t v22 = v19;
        unint64_t v23 = v20;
        char v24 = 3;
LABEL_25:
        sub_1DA7A1AA8(v22, v23, v24);
        break;
      case 4:
        id v25 = objc_allocWithZone(MEMORY[0x1E4F1CA98]);
        swift_bridgeObjectRetain();
        id v26 = objc_msgSend(v25, sel_init);
        uint64_t v34 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
        unint64_t v35 = &off_1F34D9D00;
        *(void *)&long long v33 = v26;
        break;
      default:
        unint64_t v35 = &off_1F34D9D78;
        uint64_t v21 = MEMORY[0x1E4FBC1C8];
LABEL_22:
        uint64_t v34 = v21;
        *(void *)&long long v33 = v19;
        swift_bridgeObjectRetain();
        break;
    }
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    unint64_t v27 = (void *)(v3[6] + 16 * i);
    *unint64_t v27 = v17;
    v27[1] = v16;
    sub_1DA7A19A4(&v33, v3[7] + 40 * i);
    uint64_t v28 = v3[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v3[2] = v30;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_32;
    }
    if (v12 >= v36) {
      break;
    }
    unint64_t v13 = *(void *)(v32 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v36) {
        return v3;
      }
      unint64_t v13 = *(void *)(v32 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v36) {
          return v3;
        }
        unint64_t v13 = *(void *)(v32 + 8 * v4);
        if (!v13)
        {
          int64_t v14 = v12 + 3;
          if (v14 >= v36) {
            return v3;
          }
          unint64_t v13 = *(void *)(v32 + 8 * v14);
          if (v13)
          {
            int64_t v4 = v14;
            goto LABEL_18;
          }
          while (1)
          {
            int64_t v4 = v14 + 1;
            if (__OFADD__(v14, 1)) {
              break;
            }
            if (v4 >= v36) {
              return v3;
            }
            unint64_t v13 = *(void *)(v32 + 8 * v4);
            ++v14;
            if (v13) {
              goto LABEL_18;
            }
          }
LABEL_33:
          __break(1u);
          JUMPOUT(0x1DA7C2CECLL);
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  return v3;
}

uint64_t sub_1DA7C2D00(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  sub_1DA7C63BC(a1, a2, a3, a4, a5, a6);
  return v6 & 1;
}

void sub_1DA7C2D1C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v7 = v5;
  uint64_t v11 = a3[3];
  int64_t v12 = *(os_unfair_lock_s **)(v11 + 16);
  id v52 = a5;
  swift_retain();
  os_unfair_lock_lock(v12);
  uint64_t v13 = a3[9];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    goto LABEL_26;
  }
  a3[9] = v15;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v11 + 16));
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  int64_t v12 = (os_unfair_lock_s *)(v16 + v17);
  if (__OFADD__(v16, v17))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  swift_release();
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  strcpy((char *)v53, "transaction_");
  BYTE5(v53[1]) = 0;
  HIWORD(v53[1]) = -5120;
  sub_1DA98C148();
  sub_1DA98C148();
  uint64_t v54 = (uint64_t)v12;
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t v49 = a1;
  uint64_t v6 = v11;
  int64_t v12 = (os_unfair_lock_s *)v53[0];
  uint64_t v11 = v53[1];
  id v51 = (id)sub_1DA7C187C();
  v53[0] = 0;
  v53[1] = 0xE000000000000000;
  unint64_t v18 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](10);
  sub_1DA98C148();
  sub_1DA98C148();
  sub_1DA7BEF9C(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    uint64_t v47 = (uint64_t)a3;
    unint64_t v48 = a2;
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 == -1) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v19);
  uint64_t v20 = a3[9];
  BOOL v14 = __OFSUB__(v20, 1);
  uint64_t v21 = v20 - 1;
  if (!v14)
  {
    a3[9] = v21;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    swift_willThrow();
LABEL_17:
    objc_msgSend(v51, sel_invalidate);
    swift_unknownObjectRelease();

    swift_release();
    return;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  swift_once();
LABEL_7:
  uint64_t v22 = sub_1DA989F38();
  __swift_project_value_buffer(v22, (uint64_t)qword_1EBE6F0A8);
  swift_bridgeObjectRetain_n();
  unint64_t v23 = v11;
  swift_bridgeObjectRetain_n();
  char v24 = sub_1DA989F18();
  os_log_type_t v25 = sub_1DA98C518();
  uint64_t v26 = (uint64_t)v12;
  uint64_t v46 = v7;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v53[0] = v28;
    *(_DWORD *)uint64_t v27 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_1DA8C5E00(v49, v48, v53);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_1DA8C5E00(v26, v23, v53);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v24, v25, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v28, -1, -1);
    MEMORY[0x1E0178DA0](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  BOOL v29 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v29);
  uint64_t v31 = *(void *)(v47 + 64);
  uint64_t v30 = *(void *)(v47 + 72);
  BOOL v14 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v14)
  {
    __break(1u);
    goto LABEL_30;
  }
  *(void *)(v47 + 72) = v32;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
  uint64_t v33 = *(void *)(v47 + 64);
  BOOL v14 = __OFADD__(v33, 1);
  uint64_t v34 = v33 + 1;
  if (v14)
  {
LABEL_30:
    __break(1u);
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(void *)(v47 + 64) = v34;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  id v35 = v52;
  ChronoMetadataStore.MutableRemoteExtensionStore.removeExtension(with:)(v35);
  if (v46)
  {

    sub_1DA7C1CB8(v49, v48, v26, v23);
    swift_bridgeObjectRelease();
    swift_willThrow();
    int64_t v36 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v36);
    uint64_t v37 = *(void *)(v47 + 64);
    BOOL v14 = __OFSUB__(v37, 1);
    uint64_t v38 = v37 - 1;
    if (!v14)
    {
      *(void *)(v47 + 64) = v38;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
      swift_release();
      goto LABEL_17;
    }
    goto LABEL_31;
  }

  sub_1DA7C19F4(v49, v48, v26, v23);
  swift_bridgeObjectRelease();
  if (v31)
  {
    swift_retain();
    uint64_t v39 = sub_1DA989F18();
    os_log_type_t v40 = sub_1DA98C518();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 134349056;
      unint64_t v42 = *(os_unfair_lock_s **)(v6 + 16);
      swift_retain();
      os_unfair_lock_lock(v42);
      uint64_t v50 = *(void *)(v47 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
      swift_release();
      v53[0] = v50;
      sub_1DA98C858();
      swift_release();
      _os_log_impl(&dword_1DA795000, v39, v40, "Outstanding transactions remaining: %{public}ld", v41, 0xCu);
      MEMORY[0x1E0178DA0](v41, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1DA7C2014(v47, v49, v48);
  }
  uint64_t v43 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v43);
  uint64_t v44 = *(void *)(v47 + 64);
  BOOL v14 = __OFSUB__(v44, 1);
  uint64_t v45 = v44 - 1;
  if (!v14)
  {
    *(void *)(v47 + 64) = v45;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    objc_msgSend(v51, sel_invalidate);

    swift_release();
    swift_unknownObjectRelease();
    return;
  }
LABEL_32:
  __break(1u);
  __break(1u);
}

void sub_1DA7C34DC(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v6 = v3;
  uint64_t v10 = a3[3];
  uint64_t v11 = *(os_unfair_lock_s **)(v10 + 16);
  swift_retain();
  os_unfair_lock_lock(v11);
  uint64_t v12 = a3[9];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
    goto LABEL_25;
  }
  a3[9] = v14;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v10 + 16));
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  swift_release();
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  strcpy((char *)v54, "transaction_");
  BYTE5(v54[1]) = 0;
  HIWORD(v54[1]) = -5120;
  sub_1DA98C148();
  sub_1DA98C148();
  uint64_t v55 = v17;
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t v52 = a1;
  uint64_t v4 = v10;
  uint64_t v5 = v54[0];
  uint64_t v10 = v54[1];
  id v53 = (id)sub_1DA7C187C();
  v54[0] = 0;
  v54[1] = 0xE000000000000000;
  unint64_t v18 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](10);
  sub_1DA98C148();
  sub_1DA98C148();
  sub_1DA7BEF9C(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v6)
  {
    uint64_t v50 = (uint64_t)a3;
    unint64_t v51 = a2;
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 == -1) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v19);
  uint64_t v20 = a3[9];
  BOOL v13 = __OFSUB__(v20, 1);
  uint64_t v21 = v20 - 1;
  if (!v13)
  {
    a3[9] = v21;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v4 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    swift_release();
    swift_willThrow();
LABEL_16:
    objc_msgSend(v53, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  swift_once();
LABEL_7:
  uint64_t v22 = sub_1DA989F38();
  __swift_project_value_buffer(v22, (uint64_t)qword_1EBE6F0A8);
  unint64_t v23 = v51;
  swift_bridgeObjectRetain_n();
  unint64_t v24 = v10;
  swift_bridgeObjectRetain_n();
  os_log_type_t v25 = sub_1DA989F18();
  os_log_type_t v26 = sub_1DA98C518();
  uint64_t v27 = v5;
  uint64_t v28 = v4;
  if (os_log_type_enabled(v25, v26))
  {
    os_log_type_t v29 = v26;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v54[0] = v31;
    *(_DWORD *)uint64_t v30 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1DA8C5E00(v52, v51, v54);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1DA8C5E00(v27, v24, v54);
    unint64_t v23 = v51;
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v25, v29, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v31, -1, -1);
    MEMORY[0x1E0178DA0](v30, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v32 = *(os_unfair_lock_s **)(v28 + 16);
  swift_retain();
  os_unfair_lock_lock(v32);
  uint64_t v34 = *(void *)(v50 + 64);
  uint64_t v33 = *(void *)(v50 + 72);
  BOOL v13 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  *(void *)(v50 + 72) = v35;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v28 + 16));
  uint64_t v36 = *(void *)(v50 + 64);
  BOOL v13 = __OFADD__(v36, 1);
  uint64_t v37 = v36 + 1;
  if (v13)
  {
LABEL_29:
    __break(1u);
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(void *)(v50 + 64) = v37;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v28 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 16));
  swift_release();
  ChronoMetadataStore.MutableRemoteExtensionStore.removeAllExtensions()();
  if (v38)
  {
    sub_1DA7C1CB8(v52, v23, v27, v24);
    swift_bridgeObjectRelease();
    swift_willThrow();
    uint64_t v39 = *(os_unfair_lock_s **)(v28 + 16);
    swift_retain();
    os_unfair_lock_lock(v39);
    uint64_t v40 = *(void *)(v50 + 64);
    BOOL v13 = __OFSUB__(v40, 1);
    uint64_t v41 = v40 - 1;
    if (!v13)
    {
      *(void *)(v50 + 64) = v41;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v28 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 16));
      swift_release();
      goto LABEL_16;
    }
    goto LABEL_30;
  }
  sub_1DA7C19F4(v52, v23, v27, v24);
  swift_bridgeObjectRelease();
  if (v34)
  {
    swift_retain();
    unint64_t v42 = sub_1DA989F18();
    os_log_type_t v43 = sub_1DA98C518();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 134349056;
      uint64_t v45 = *(os_unfair_lock_s **)(v28 + 16);
      swift_retain();
      os_unfair_lock_lock(v45);
      uint64_t v46 = *(void *)(v50 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 16));
      swift_release();
      v54[0] = v46;
      sub_1DA98C858();
      swift_release();
      _os_log_impl(&dword_1DA795000, v42, v43, "Outstanding transactions remaining: %{public}ld", v44, 0xCu);
      MEMORY[0x1E0178DA0](v44, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1DA7C2014(v50, v52, v23);
  }
  uint64_t v47 = *(os_unfair_lock_s **)(v28 + 16);
  swift_retain();
  os_unfair_lock_lock(v47);
  uint64_t v48 = *(void *)(v50 + 64);
  BOOL v13 = __OFSUB__(v48, 1);
  uint64_t v49 = v48 - 1;
  if (!v13)
  {
    *(void *)(v50 + 64) = v49;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v28 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 16));
    swift_release();
    objc_msgSend(v53, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_31:
  __break(1u);
}

void sub_1DA7C3C3C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v7 = v6;
  unint64_t v11 = a3;
  unint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v15);
  uint64_t v16 = *(void *)(v11 + 72);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
    goto LABEL_25;
  }
  *(void *)(v11 + 72) = v18;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v14 + 16));
  uint64_t v19 = *(void *)(v11 + 64);
  uint64_t v20 = *(void *)(v11 + 72);
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  uint64_t v56 = a6;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  swift_release();
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  strcpy((char *)v59, "transaction_");
  BYTE5(v59[1]) = 0;
  HIWORD(v59[1]) = -5120;
  sub_1DA98C148();
  sub_1DA98C148();
  uint64_t v60 = v21;
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t v57 = a1;
  uint64_t v22 = v7;
  uint64_t v23 = v11;
  unint64_t v11 = v14;
  uint64_t v7 = v59[0];
  unint64_t v14 = v59[1];
  id v58 = (id)sub_1DA7C187C();
  v59[0] = 0;
  v59[1] = 0xE000000000000000;
  unint64_t v24 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](10);
  sub_1DA98C148();
  sub_1DA98C148();
  sub_1DA7BEF9C(v24);
  a5 = (uint64_t *)v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v22)
  {
    uint64_t v52 = v23;
    unint64_t v53 = a2;
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 == -1) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  os_log_type_t v25 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v25);
  uint64_t v26 = *(void *)(v23 + 72);
  BOOL v17 = __OFSUB__(v26, 1);
  uint64_t v27 = v26 - 1;
  if (!v17)
  {
    *(void *)(v23 + 72) = v27;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v11 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
    swift_release();
    swift_willThrow();
LABEL_16:
    objc_msgSend(v58, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  swift_once();
LABEL_7:
  uint64_t v28 = sub_1DA989F38();
  __swift_project_value_buffer(v28, (uint64_t)qword_1EBE6F0A8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v29 = sub_1DA989F18();
  os_log_type_t type = sub_1DA98C518();
  uint64_t v51 = v7;
  if (os_log_type_enabled(v29, type))
  {
    log = v29;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v59[0] = v31;
    *(_DWORD *)uint64_t v30 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_1DA8C5E00(v57, v53, v59);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_1DA8C5E00(v7, v14, v59);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, log, type, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v31, -1, -1);
    MEMORY[0x1E0178DA0](v30, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v32 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v32);
  uint64_t v34 = *(void *)(v52 + 64);
  uint64_t v33 = *(void *)(v52 + 72);
  BOOL v17 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  *(void *)(v52 + 72) = v35;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v11 + 16));
  uint64_t v36 = *(void *)(v52 + 64);
  BOOL v17 = __OFADD__(v36, 1);
  uint64_t v37 = v36 + 1;
  if (v17)
  {
LABEL_29:
    __break(1u);
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(void *)(v52 + 64) = v37;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v11 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  swift_release();
  sub_1DA80D954(v54, v55, v56);
  if (a5)
  {
    sub_1DA7C1CB8(v57, v53, v51, v14);
    swift_bridgeObjectRelease();
    swift_willThrow();
    uint64_t v38 = *(os_unfair_lock_s **)(v11 + 16);
    swift_retain();
    os_unfair_lock_lock(v38);
    uint64_t v39 = *(void *)(v52 + 64);
    BOOL v17 = __OFSUB__(v39, 1);
    uint64_t v40 = v39 - 1;
    if (!v17)
    {
      *(void *)(v52 + 64) = v40;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v11 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
      swift_release();
      goto LABEL_16;
    }
    goto LABEL_30;
  }
  sub_1DA7C19F4(v57, v53, v51, v14);
  swift_bridgeObjectRelease();
  if (v34)
  {
    swift_retain();
    uint64_t v41 = sub_1DA989F18();
    os_log_type_t v42 = sub_1DA98C518();
    if (os_log_type_enabled(v41, v42))
    {
      os_log_type_t v43 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v43 = 134349056;
      uint64_t v44 = *(os_unfair_lock_s **)(v11 + 16);
      swift_retain();
      os_unfair_lock_lock(v44);
      uint64_t v45 = *(void *)(v52 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
      swift_release();
      v59[0] = v45;
      sub_1DA98C858();
      swift_release();
      _os_log_impl(&dword_1DA795000, v41, v42, "Outstanding transactions remaining: %{public}ld", v43, 0xCu);
      MEMORY[0x1E0178DA0](v43, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1DA7C2014(v52, v57, v53);
  }
  uint64_t v46 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v46);
  uint64_t v47 = *(void *)(v52 + 64);
  BOOL v17 = __OFSUB__(v47, 1);
  uint64_t v48 = v47 - 1;
  if (!v17)
  {
    *(void *)(v52 + 64) = v48;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v11 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
    swift_release();
    objc_msgSend(v58, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_31:
  __break(1u);
}

void sub_1DA7C43AC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v13 = a3[3];
  unint64_t v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v14);
  uint64_t v15 = a3[9];
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_26;
  }
  a3[9] = v17;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v13 + 16));
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v57 = a5;
  uint64_t v60 = a6;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  swift_release();
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  strcpy((char *)v61, "transaction_");
  BYTE5(v61[1]) = 0;
  HIWORD(v61[1]) = -5120;
  sub_1DA98C148();
  sub_1DA98C148();
  uint64_t v62 = v20;
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t v21 = v61[0];
  uint64_t v22 = v61[1];
  id v59 = (id)sub_1DA7C187C();
  v61[0] = 0;
  v61[1] = 0xE000000000000000;
  unint64_t v23 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](10);
  sub_1DA98C148();
  sub_1DA98C148();
  unint64_t v58 = a2;
  sub_1DA7BEF9C(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a5 = v7;
  if (!v7)
  {
    uint64_t v54 = (uint64_t)a3;
    uint64_t v55 = v13;
    unint64_t v56 = v22;
    uint64_t v53 = v21;
    uint64_t v13 = a1;
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 == -1) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  unint64_t v24 = *(os_unfair_lock_s **)(v13 + 16);
  swift_retain();
  os_unfair_lock_lock(v24);
  uint64_t v25 = a3[9];
  BOOL v16 = __OFSUB__(v25, 1);
  uint64_t v26 = v25 - 1;
  if (!v16)
  {
    a3[9] = v26;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v13 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
    swift_release();
    swift_willThrow();
    uint64_t v27 = v59;
LABEL_17:
    objc_msgSend(v27, sel_invalidate);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  swift_once();
LABEL_7:
  uint64_t v28 = sub_1DA989F38();
  __swift_project_value_buffer(v28, (uint64_t)qword_1EBE6F0A8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v29 = sub_1DA989F18();
  os_log_type_t v30 = sub_1DA98C518();
  uint64_t v31 = a5;
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    v61[0] = v52;
    *(_DWORD *)uint64_t v32 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1DA8C5E00(v13, v58, v61);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1DA8C5E00(v53, v56, v61);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v29, v30, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v52, -1, -1);
    MEMORY[0x1E0178DA0](v32, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v33 = *(os_unfair_lock_s **)(v55 + 16);
  swift_retain();
  os_unfair_lock_lock(v33);
  uint64_t v35 = *(void *)(v54 + 64);
  uint64_t v34 = *(void *)(v54 + 72);
  BOOL v16 = __OFSUB__(v34, 1);
  uint64_t v36 = v34 - 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_30;
  }
  *(void *)(v54 + 72) = v36;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v55 + 16));
  uint64_t v37 = *(void *)(v54 + 64);
  BOOL v16 = __OFADD__(v37, 1);
  uint64_t v38 = v37 + 1;
  if (v16)
  {
LABEL_30:
    __break(1u);
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(void *)(v54 + 64) = v38;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v55 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v55 + 16));
  swift_release();
  swift_bridgeObjectRetain();
  sub_1DA95E544(v57, v60);
  if (v31)
  {
    swift_bridgeObjectRelease();
    sub_1DA7C1CB8(v13, v58, v53, v56);
    uint64_t v27 = v59;
    swift_bridgeObjectRelease();
    swift_willThrow();
    uint64_t v39 = *(os_unfair_lock_s **)(v55 + 16);
    swift_retain();
    os_unfair_lock_lock(v39);
    uint64_t v40 = *(void *)(v54 + 64);
    BOOL v16 = __OFSUB__(v40, 1);
    uint64_t v41 = v40 - 1;
    if (!v16)
    {
      *(void *)(v54 + 64) = v41;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v55 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v55 + 16));
      swift_release();
      goto LABEL_17;
    }
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  sub_1DA7C19F4(v13, v58, v53, v56);
  swift_bridgeObjectRelease();
  if (v35)
  {
    uint64_t v42 = v54;
    swift_retain();
    os_log_type_t v43 = sub_1DA989F18();
    os_log_type_t v44 = sub_1DA98C518();
    uint64_t v45 = v55;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 134349056;
      uint64_t v47 = *(os_unfair_lock_s **)(v55 + 16);
      swift_retain();
      os_unfair_lock_lock(v47);
      uint64_t v48 = *(void *)(v54 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v55 + 16));
      swift_release();
      v61[0] = v48;
      sub_1DA98C858();
      swift_release();
      _os_log_impl(&dword_1DA795000, v43, v44, "Outstanding transactions remaining: %{public}ld", v46, 0xCu);
      MEMORY[0x1E0178DA0](v46, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    uint64_t v42 = v54;
    sub_1DA7C2014(v54, v13, v58);
    uint64_t v45 = v55;
  }
  uint64_t v49 = *(os_unfair_lock_s **)(v45 + 16);
  swift_retain();
  os_unfair_lock_lock(v49);
  uint64_t v50 = *(void *)(v42 + 64);
  BOOL v16 = __OFSUB__(v50, 1);
  uint64_t v51 = v50 - 1;
  if (!v16)
  {
    *(void *)(v42 + 64) = v51;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v45 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v45 + 16));
    swift_release();
    objc_msgSend(v59, sel_invalidate);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
LABEL_32:
  __break(1u);
  __break(1u);
}

void sub_1DA7C4BDC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  unint64_t v13 = a3[3];
  unint64_t v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v14);
  uint64_t v15 = a3[9];
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_26;
  }
  a3[9] = v17;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v13 + 16));
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v55 = a5;
  uint64_t v56 = a4;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  swift_release();
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  strcpy((char *)v57, "transaction_");
  BYTE5(v57[1]) = 0;
  HIWORD(v57[1]) = -5120;
  sub_1DA98C148();
  sub_1DA98C148();
  uint64_t v58 = v20;
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t v52 = a1;
  uint64_t v21 = v7;
  unint64_t v6 = v13;
  uint64_t v7 = v57[0];
  unint64_t v13 = v57[1];
  id v53 = (id)sub_1DA7C187C();
  v57[0] = 0;
  v57[1] = 0xE000000000000000;
  unint64_t v22 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](10);
  sub_1DA98C148();
  sub_1DA98C148();
  sub_1DA7BEF9C(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v54 = v21;
  if (!v21)
  {
    uint64_t v50 = (uint64_t)a3;
    unint64_t v51 = a2;
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 == -1) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  unint64_t v23 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v23);
  uint64_t v24 = a3[9];
  BOOL v16 = __OFSUB__(v24, 1);
  uint64_t v25 = v24 - 1;
  if (!v16)
  {
    a3[9] = v25;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    swift_willThrow();
LABEL_17:
    objc_msgSend(v53, sel_invalidate);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  swift_once();
LABEL_7:
  uint64_t v26 = sub_1DA989F38();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBE6F0A8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v27 = sub_1DA989F18();
  os_log_type_t v28 = sub_1DA98C518();
  uint64_t v29 = v7;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc();
    v57[0] = swift_slowAlloc();
    uint64_t v31 = v57[0];
    *(_DWORD *)uint64_t v30 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_1DA8C5E00(v52, v51, v57);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_1DA8C5E00(v7, v13, v57);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v27, v28, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    uint64_t v32 = v31;
    uint64_t v29 = v7;
    MEMORY[0x1E0178DA0](v32, -1, -1);
    MEMORY[0x1E0178DA0](v30, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v33 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v33);
  uint64_t v35 = *(void *)(v50 + 64);
  uint64_t v34 = *(void *)(v50 + 72);
  BOOL v16 = __OFSUB__(v34, 1);
  uint64_t v36 = v34 - 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_30;
  }
  *(void *)(v50 + 72) = v36;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
  uint64_t v37 = *(void *)(v50 + 64);
  BOOL v16 = __OFADD__(v37, 1);
  uint64_t v38 = v37 + 1;
  if (v16)
  {
LABEL_30:
    __break(1u);
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(void *)(v50 + 64) = v38;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  swift_bridgeObjectRetain();
  sub_1DA96E4EC(v56, v55);
  if (v54)
  {
    swift_bridgeObjectRelease();
    sub_1DA7C1CB8(v52, v51, v29, v13);
    swift_bridgeObjectRelease();
    swift_willThrow();
    uint64_t v39 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v39);
    uint64_t v40 = *(void *)(v50 + 64);
    BOOL v16 = __OFSUB__(v40, 1);
    uint64_t v41 = v40 - 1;
    if (!v16)
    {
      *(void *)(v50 + 64) = v41;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
      swift_release();
      goto LABEL_17;
    }
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  sub_1DA7C19F4(v52, v51, v29, v13);
  swift_bridgeObjectRelease();
  if (v35)
  {
    swift_retain();
    uint64_t v42 = sub_1DA989F18();
    os_log_type_t v43 = sub_1DA98C518();
    if (os_log_type_enabled(v42, v43))
    {
      os_log_type_t v44 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v44 = 134349056;
      uint64_t v45 = *(os_unfair_lock_s **)(v6 + 16);
      swift_retain();
      os_unfair_lock_lock(v45);
      uint64_t v46 = *(void *)(v50 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
      swift_release();
      v57[0] = v46;
      sub_1DA98C858();
      swift_release();
      _os_log_impl(&dword_1DA795000, v42, v43, "Outstanding transactions remaining: %{public}ld", v44, 0xCu);
      MEMORY[0x1E0178DA0](v44, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1DA7C2014(v50, v52, v51);
  }
  uint64_t v47 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v47);
  uint64_t v48 = *(void *)(v50 + 64);
  BOOL v16 = __OFSUB__(v48, 1);
  uint64_t v49 = v48 - 1;
  if (!v16)
  {
    *(void *)(v50 + 64) = v49;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    objc_msgSend(v53, sel_invalidate);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
LABEL_32:
  __break(1u);
  __break(1u);
}

void sub_1DA7C53B8(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8 = v5;
  unint64_t v13 = a3[3];
  unint64_t v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v14);
  uint64_t v15 = a3[9];
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_28;
  }
  a3[9] = v17;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v13 + 16));
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v53 = a5;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  swift_release();
  id v55 = v8;
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  strcpy((char *)v56, "transaction_");
  BYTE5(v56[1]) = 0;
  HIWORD(v56[1]) = -5120;
  sub_1DA98C148();
  sub_1DA98C148();
  uint64_t v57 = v20;
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  unint64_t v6 = v13;
  uint64_t v7 = v56[0];
  unint64_t v13 = v56[1];
  id v52 = (id)sub_1DA7C187C();
  v56[0] = 0;
  v56[1] = 0xE000000000000000;
  unint64_t v21 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](10);
  sub_1DA98C148();
  sub_1DA98C148();
  uint64_t v51 = a1;
  sub_1DA7BEF9C(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v55)
  {
    uint64_t v49 = (uint64_t)a3;
    unint64_t v50 = a2;
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 == -1) {
      goto LABEL_7;
    }
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  unint64_t v22 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v22);
  uint64_t v23 = a3[9];
  BOOL v16 = __OFSUB__(v23, 1);
  uint64_t v24 = v23 - 1;
  if (!v16)
  {
    a3[9] = v24;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    swift_willThrow();
LABEL_22:
    objc_msgSend(v52, sel_invalidate);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  swift_once();
LABEL_7:
  uint64_t v25 = sub_1DA989F38();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EBE6F0A8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v26 = sub_1DA989F18();
  os_log_type_t v27 = sub_1DA98C518();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    v56[0] = v29;
    *(_DWORD *)uint64_t v28 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_1DA8C5E00(v51, v50, v56);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_1DA8C5E00(v7, v13, v56);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v26, v27, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v29, -1, -1);
    MEMORY[0x1E0178DA0](v28, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v30 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v30);
  uint64_t v31 = *(void *)(v49 + 72);
  BOOL v16 = __OFSUB__(v31, 1);
  uint64_t v32 = v31 - 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v33 = *(void *)(v49 + 64);
  *(void *)(v49 + 72) = v32;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
  uint64_t v34 = *(void *)(v49 + 64);
  BOOL v16 = __OFADD__(v34, 1);
  uint64_t v35 = v34 + 1;
  if (v16)
  {
LABEL_32:
    __break(1u);
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  *(void *)(v49 + 64) = v35;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  swift_bridgeObjectRetain();
  char v36 = sub_1DA91C1B4(a4, v53);
  if (v55)
  {
    swift_bridgeObjectRelease();
    sub_1DA7C1CB8(v51, v50, v7, v13);
    swift_bridgeObjectRelease();
    swift_willThrow();
    os_log_type_t v43 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v43);
    uint64_t v44 = *(void *)(v49 + 64);
    BOOL v16 = __OFSUB__(v44, 1);
    uint64_t v45 = v44 - 1;
    if (!v16)
    {
      *(void *)(v49 + 64) = v45;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
      swift_release();
      goto LABEL_22;
    }
    goto LABEL_33;
  }
  char v37 = v36;
  swift_bridgeObjectRelease();
  if (v37) {
    sub_1DA7C19F4(v51, v50, v7, v13);
  }
  else {
    sub_1DA7C1CB8(v51, v50, v7, v13);
  }
  swift_bridgeObjectRelease();
  if (v33)
  {
    swift_retain();
    uint64_t v38 = sub_1DA989F18();
    os_log_type_t v39 = sub_1DA98C518();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 134349056;
      uint64_t v41 = *(os_unfair_lock_s **)(v6 + 16);
      swift_retain();
      os_unfair_lock_lock(v41);
      uint64_t v42 = *(void *)(v49 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
      swift_release();
      v56[0] = v42;
      sub_1DA98C858();
      swift_release();
      _os_log_impl(&dword_1DA795000, v38, v39, "Outstanding transactions remaining: %{public}ld", v40, 0xCu);
      MEMORY[0x1E0178DA0](v40, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1DA7C2014(v49, v51, v50);
  }
  uint64_t v46 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v46);
  uint64_t v47 = *(void *)(v49 + 64);
  BOOL v16 = __OFSUB__(v47, 1);
  uint64_t v48 = v47 - 1;
  if (!v16)
  {
    *(void *)(v49 + 64) = v48;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    objc_msgSend(v52, sel_invalidate);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
LABEL_34:
  __break(1u);
}

void sub_1DA7C5B90(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v7 = v6;
  uint64_t v12 = a3[3];
  unint64_t v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  uint64_t v14 = a3[9];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    goto LABEL_25;
  }
  a3[9] = v16;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v12 + 16));
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v5 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v56 = a5;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  strcpy((char *)v61, "transaction_");
  BYTE5(v61[1]) = 0;
  HIWORD(v61[1]) = -5120;
  sub_1DA98C148();
  sub_1DA98C148();
  uint64_t v62 = v5;
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t v19 = v7;
  uint64_t v7 = v12;
  uint64_t v20 = v61[0];
  uint64_t v12 = v61[1];
  id v58 = (id)sub_1DA7C187C();
  v61[0] = 0;
  v61[1] = 0xE000000000000000;
  unint64_t v21 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](10);
  sub_1DA98C148();
  sub_1DA98C148();
  uint64_t v57 = a1;
  uint64_t v22 = v19;
  sub_1DA7BEF9C(v21);
  uint64_t v5 = (uint64_t)a3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v59 = v22;
  if (!v22)
  {
    uint64_t v54 = (uint64_t)a3;
    unint64_t v55 = a2;
    uint64_t v5 = v20;
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 == -1) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  uint64_t v23 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v23);
  uint64_t v24 = a3[9];
  BOOL v15 = __OFSUB__(v24, 1);
  uint64_t v25 = v24 - 1;
  if (!v15)
  {
    a3[9] = v25;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v7 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
    swift_release();
    swift_willThrow();
LABEL_16:
    objc_msgSend(v58, sel_invalidate);
    swift_unknownObjectRelease();
    swift_release();
    return;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  swift_once();
LABEL_7:
  uint64_t v26 = sub_1DA989F38();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBE6F0A8);
  swift_bridgeObjectRetain_n();
  unint64_t v27 = v12;
  swift_bridgeObjectRetain_n();
  uint64_t v28 = sub_1DA989F18();
  os_log_type_t v29 = sub_1DA98C518();
  uint64_t v30 = v7;
  if (os_log_type_enabled(v28, v29))
  {
    os_log_type_t type = v29;
    uint64_t v31 = swift_slowAlloc();
    v61[0] = swift_slowAlloc();
    uint64_t v32 = v5;
    uint64_t v33 = v61[0];
    *(_DWORD *)uint64_t v31 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1DA8C5E00(v57, v55, v61);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1DA8C5E00(v32, v27, v61);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v28, type, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    uint64_t v34 = v33;
    uint64_t v5 = v32;
    MEMORY[0x1E0178DA0](v34, -1, -1);
    MEMORY[0x1E0178DA0](v31, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v35 = *(os_unfair_lock_s **)(v30 + 16);
  swift_retain();
  os_unfair_lock_lock(v35);
  uint64_t v37 = *(void *)(v54 + 64);
  uint64_t v36 = *(void *)(v54 + 72);
  BOOL v15 = __OFSUB__(v36, 1);
  uint64_t v38 = v36 - 1;
  if (v15)
  {
    __break(1u);
    goto LABEL_29;
  }
  *(void *)(v54 + 72) = v38;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v30 + 16));
  uint64_t v39 = *(void *)(v54 + 64);
  BOOL v15 = __OFADD__(v39, 1);
  uint64_t v40 = v39 + 1;
  if (v15)
  {
LABEL_29:
    __break(1u);
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(void *)(v54 + 64) = v40;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v30 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v30 + 16));
  swift_release();
  v56(a4);
  if (v59)
  {
    sub_1DA7C1CB8(v57, v55, v5, v27);
    swift_bridgeObjectRelease();
    swift_willThrow();
    uint64_t v41 = *(os_unfair_lock_s **)(v30 + 16);
    swift_retain();
    os_unfair_lock_lock(v41);
    uint64_t v42 = *(void *)(v54 + 64);
    BOOL v15 = __OFSUB__(v42, 1);
    uint64_t v43 = v42 - 1;
    if (!v15)
    {
      *(void *)(v54 + 64) = v43;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v30 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v30 + 16));
      swift_release();
      goto LABEL_16;
    }
    goto LABEL_30;
  }
  sub_1DA7C19F4(v57, v55, v5, v27);
  swift_bridgeObjectRelease();
  if (v37)
  {
    uint64_t v44 = v54;
    swift_retain();
    uint64_t v45 = sub_1DA989F18();
    os_log_type_t v46 = sub_1DA98C518();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 134349056;
      uint64_t v48 = *(os_unfair_lock_s **)(v30 + 16);
      swift_retain();
      os_unfair_lock_lock(v48);
      uint64_t v49 = *(void *)(v54 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v30 + 16));
      swift_release();
      v61[0] = v49;
      uint64_t v44 = v54;
      sub_1DA98C858();
      swift_release();
      _os_log_impl(&dword_1DA795000, v45, v46, "Outstanding transactions remaining: %{public}ld", v47, 0xCu);
      MEMORY[0x1E0178DA0](v47, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    uint64_t v44 = v54;
    sub_1DA7C2014(v54, v57, v55);
  }
  unint64_t v50 = *(os_unfair_lock_s **)(v30 + 16);
  swift_retain();
  os_unfair_lock_lock(v50);
  uint64_t v51 = *(void *)(v44 + 64);
  BOOL v15 = __OFSUB__(v51, 1);
  uint64_t v52 = v51 - 1;
  if (!v15)
  {
    *(void *)(v44 + 64) = v52;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v30 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v30 + 16));
    swift_release();
    objc_msgSend(v58, sel_invalidate);
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_1DA7C6334(uint64_t a1)
{
  return sub_1DA7C23A4(a1, v1);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1DA7C6354(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DA7C63BC(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v10 = a3;
  uint64_t v13 = *(void *)(a3 + 24);
  uint64_t v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_retain();
  os_unfair_lock_lock(v14);
  uint64_t v15 = *(void *)(v10 + 72);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_25;
  }
  *(void *)(v10 + 72) = v17;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v13 + 16));
  uint64_t v18 = *(void *)(v10 + 64);
  uint64_t v19 = *(void *)(v10 + 72);
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v56 = a6;
  uint64_t v57 = a4;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  swift_release();
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  strcpy((char *)v61, "transaction_");
  BYTE5(v61[1]) = 0;
  HIWORD(v61[1]) = -5120;
  sub_1DA98C148();
  sub_1DA98C148();
  uint64_t v62 = v20;
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t v21 = v7;
  uint64_t v58 = a1;
  uint64_t v22 = v10;
  uint64_t v10 = v13;
  uint64_t v7 = v61[0];
  uint64_t v13 = v61[1];
  id v59 = (id)sub_1DA7C187C();
  v61[0] = 0;
  v61[1] = 0xE000000000000000;
  unint64_t v23 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](10);
  sub_1DA98C148();
  sub_1DA98C148();
  sub_1DA7BEF9C(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v60 = v21;
  if (!v21)
  {
    uint64_t v54 = v22;
    unint64_t v55 = a2;
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 == -1) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = *(os_unfair_lock_s **)(v10 + 16);
  swift_retain();
  os_unfair_lock_lock(v24);
  uint64_t v25 = *(void *)(v22 + 72);
  BOOL v16 = __OFSUB__(v25, 1);
  uint64_t v26 = v25 - 1;
  if (!v16)
  {
    *(void *)(v22 + 72) = v26;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v10 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
    swift_release();
    swift_willThrow();
LABEL_16:
    objc_msgSend(v59, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  swift_once();
LABEL_7:
  uint64_t v27 = sub_1DA989F38();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EBE6F0A8);
  unint64_t v28 = v55;
  swift_bridgeObjectRetain_n();
  unint64_t v29 = v13;
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_1DA989F18();
  os_log_type_t v31 = sub_1DA98C518();
  uint64_t v32 = v7;
  uint64_t v33 = v10;
  if (os_log_type_enabled(v30, v31))
  {
    os_log_type_t v34 = v31;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v61[0] = v36;
    *(_DWORD *)uint64_t v35 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1DA8C5E00(v58, v55, v61);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v35 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1DA8C5E00(v32, v29, v61);
    unint64_t v28 = v55;
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v30, v34, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v36, -1, -1);
    MEMORY[0x1E0178DA0](v35, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v37 = *(os_unfair_lock_s **)(v33 + 16);
  swift_retain();
  os_unfair_lock_lock(v37);
  uint64_t v39 = *(void *)(v54 + 64);
  uint64_t v38 = *(void *)(v54 + 72);
  BOOL v16 = __OFSUB__(v38, 1);
  uint64_t v40 = v38 - 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_29;
  }
  *(void *)(v54 + 72) = v40;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v33 + 16));
  uint64_t v41 = *(void *)(v54 + 64);
  BOOL v16 = __OFADD__(v41, 1);
  uint64_t v42 = v41 + 1;
  if (v16)
  {
LABEL_29:
    __break(1u);
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(void *)(v54 + 64) = v42;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v33 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
  swift_release();
  v57(v56);
  if (v60)
  {
    sub_1DA7C1CB8(v58, v28, v32, v29);
    swift_bridgeObjectRelease();
    swift_willThrow();
    uint64_t v43 = *(os_unfair_lock_s **)(v33 + 16);
    swift_retain();
    os_unfair_lock_lock(v43);
    uint64_t v44 = *(void *)(v54 + 64);
    BOOL v16 = __OFSUB__(v44, 1);
    uint64_t v45 = v44 - 1;
    if (!v16)
    {
      *(void *)(v54 + 64) = v45;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v33 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
      swift_release();
      goto LABEL_16;
    }
    goto LABEL_30;
  }
  sub_1DA7C19F4(v58, v28, v32, v29);
  swift_bridgeObjectRelease();
  if (v39)
  {
    swift_retain();
    os_log_type_t v46 = sub_1DA989F18();
    os_log_type_t v47 = sub_1DA98C518();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 134349056;
      uint64_t v49 = *(os_unfair_lock_s **)(v33 + 16);
      swift_retain();
      os_unfair_lock_lock(v49);
      uint64_t v50 = *(void *)(v54 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
      swift_release();
      v61[0] = v50;
      sub_1DA98C858();
      swift_release();
      _os_log_impl(&dword_1DA795000, v46, v47, "Outstanding transactions remaining: %{public}ld", v48, 0xCu);
      MEMORY[0x1E0178DA0](v48, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1DA7C2014(v54, v58, v28);
  }
  uint64_t v51 = *(os_unfair_lock_s **)(v33 + 16);
  swift_retain();
  os_unfair_lock_lock(v51);
  uint64_t v52 = *(void *)(v54 + 64);
  BOOL v16 = __OFSUB__(v52, 1);
  uint64_t v53 = v52 - 1;
  if (!v16)
  {
    *(void *)(v54 + 64) = v53;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v33 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
    swift_release();
    objc_msgSend(v59, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_31:
  __break(1u);
}

void sub_1DA7C6B34(uint64_t a1, unint64_t a2, unint64_t a3, unsigned int a4, uint64_t a5, unint64_t *a6, uint64_t a7, unsigned int a8)
{
  uint64_t v9 = v8;
  unint64_t v14 = a3;
  unint64_t v17 = *(void *)(a3 + 24);
  uint64_t v18 = *(os_unfair_lock_s **)(v17 + 16);
  swift_retain();
  os_unfair_lock_lock(v18);
  uint64_t v19 = *(void *)(v14 + 72);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v63 = a5;
  *(void *)(v14 + 72) = v21;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v17 + 16));
  uint64_t v22 = *(void *)(v14 + 64);
  uint64_t v23 = *(void *)(v14 + 72);
  uint64_t v24 = v22 + v23;
  if (__OFADD__(v22, v23))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v60 = a6;
  uint64_t v61 = a7;
  unsigned int v62 = a8;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 16));
  swift_release();
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  strcpy((char *)v67, "transaction_");
  BYTE5(v67[1]) = 0;
  HIWORD(v67[1]) = -5120;
  sub_1DA98C148();
  sub_1DA98C148();
  uint64_t v68 = v24;
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  unint64_t v25 = a2;
  uint64_t v26 = v9;
  uint64_t v65 = a1;
  uint64_t v27 = v14;
  unint64_t v14 = v17;
  uint64_t v9 = v67[0];
  unint64_t v17 = v67[1];
  unint64_t v28 = v25;
  id v66 = (id)sub_1DA7C187C();
  v67[0] = 0;
  v67[1] = 0xE000000000000000;
  unint64_t v29 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](10);
  sub_1DA98C148();
  sub_1DA98C148();
  sub_1DA7BEF9C(v29);
  a7 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v26)
  {
    uint64_t v58 = v27;
    unint64_t v59 = v28;
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 == -1) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v30);
  uint64_t v31 = *(void *)(v27 + 72);
  BOOL v20 = __OFSUB__(v31, 1);
  uint64_t v32 = v31 - 1;
  if (!v20)
  {
    *(void *)(v27 + 72) = v32;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v14 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
    swift_release();
    swift_willThrow();
LABEL_21:
    objc_msgSend(v66, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  swift_once();
LABEL_7:
  uint64_t v33 = sub_1DA989F38();
  __swift_project_value_buffer(v33, (uint64_t)qword_1EBE6F0A8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v34 = sub_1DA989F18();
  os_log_type_t type = sub_1DA98C518();
  uint64_t v57 = v9;
  if (os_log_type_enabled(v34, type))
  {
    log = v34;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v67[0] = v36;
    *(_DWORD *)uint64_t v35 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1DA8C5E00(v65, v59, v67);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v35 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1DA8C5E00(v9, v17, v67);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, log, type, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v36, -1, -1);
    MEMORY[0x1E0178DA0](v35, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v37 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v37);
  uint64_t v38 = *(void *)(v58 + 72);
  BOOL v20 = __OFSUB__(v38, 1);
  uint64_t v39 = v38 - 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v40 = *(void *)(v58 + 64);
  *(void *)(v58 + 72) = v39;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v14 + 16));
  uint64_t v41 = *(void *)(v58 + 64);
  BOOL v20 = __OFADD__(v41, 1);
  uint64_t v42 = v41 + 1;
  if (v20)
  {
LABEL_31:
    __break(1u);
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  *(void *)(v58 + 64) = v42;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v14 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  swift_release();
  char v43 = sub_1DA7C2418(a4, v63, v60, v61, v62);
  if (a7)
  {
    sub_1DA7C1CB8(v65, v59, v57, v17);
    swift_bridgeObjectRelease();
    swift_willThrow();
    uint64_t v49 = *(os_unfair_lock_s **)(v14 + 16);
    swift_retain();
    os_unfair_lock_lock(v49);
    uint64_t v50 = *(void *)(v58 + 64);
    BOOL v20 = __OFSUB__(v50, 1);
    uint64_t v51 = v50 - 1;
    if (!v20)
    {
      *(void *)(v58 + 64) = v51;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v14 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
      swift_release();
      goto LABEL_21;
    }
    goto LABEL_32;
  }
  if (v43) {
    sub_1DA7C19F4(v65, v59, v57, v17);
  }
  else {
    sub_1DA7C1CB8(v65, v59, v57, v17);
  }
  swift_bridgeObjectRelease();
  if (v40)
  {
    swift_retain();
    uint64_t v44 = sub_1DA989F18();
    os_log_type_t v45 = sub_1DA98C518();
    if (os_log_type_enabled(v44, v45))
    {
      os_log_type_t v46 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v46 = 134349056;
      os_log_type_t v47 = *(os_unfair_lock_s **)(v14 + 16);
      swift_retain();
      os_unfair_lock_lock(v47);
      uint64_t v48 = *(void *)(v58 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
      swift_release();
      v67[0] = v48;
      sub_1DA98C858();
      swift_release();
      _os_log_impl(&dword_1DA795000, v44, v45, "Outstanding transactions remaining: %{public}ld", v46, 0xCu);
      MEMORY[0x1E0178DA0](v46, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1DA7C2014(v58, v65, v59);
  }
  uint64_t v52 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v52);
  uint64_t v53 = *(void *)(v58 + 64);
  BOOL v20 = __OFSUB__(v53, 1);
  uint64_t v54 = v53 - 1;
  if (!v20)
  {
    *(void *)(v58 + 64) = v54;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v14 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
    swift_release();
    objc_msgSend(v66, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_1DA7C72E8(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v43 = a5;
  uint64_t v46 = a4;
  uint64_t v42 = a2;
  uint64_t v49 = sub_1DA989478();
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v8 - 8);
  os_log_type_t v45 = ((char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v13 = type metadata accessor for SQLDatabase.Storage();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v40 - v17;
  sub_1DA7C7778(a1, (uint64_t)&v40 - v17);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588F8);
  BOOL v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  int v21 = v20(v18, 1, v19);
  uint64_t result = sub_1DA7C77DC((uint64_t)v18);
  os_log_type_t v47 = a3;
  if (v21 != 1 || a3 == 0)
  {
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
    v24(v12, 1, 1, v49);
    uint64_t v44 = a1;
    sub_1DA7C7778(a1, (uint64_t)v15);
    if (v20(v15, 1, v19) == 1)
    {
      id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F848]), sel_initWithInMemoryDatabase);
    }
    else
    {
      uint64_t v40 = *(void *)&v15[*(int *)(v19 + 48)];
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
      uint64_t v27 = v41;
      uint64_t v28 = v49;
      v26(v41, v15, v49);
      id v29 = objc_allocWithZone(MEMORY[0x1E4F4F848]);
      uint64_t v30 = (void *)sub_1DA9893A8();
      id v25 = objc_msgSend(v29, sel_initWithFileURL_dataProtectionClass_, v30, v40);

      sub_1DA7A1AE0((uint64_t)v12, (uint64_t *)&unk_1EBE66AB0);
      v26(v12, v27, v28);
      v24(v12, 0, 1, v28);
    }
    uint64_t v31 = (uint64_t)v12;
    uint64_t v33 = v45;
    uint64_t v32 = v46;
    uint64_t v34 = v44;
    if (v25)
    {
      sub_1DA7C788C((uint64_t)v12, (uint64_t)v45);
      if (v32)
      {
        uint64_t v35 = swift_allocObject();
        uint64_t v36 = v43;
        *(void *)(v35 + 16) = v32;
        *(void *)(v35 + 24) = v36;
        uint64_t v37 = sub_1DA7C792C;
      }
      else
      {
        uint64_t v37 = (uint64_t (*)(void *))CGSizeMake;
        uint64_t v35 = 0;
      }
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v37;
      *(void *)(v39 + 24) = v35;
      type metadata accessor for SQLDatabase();
      swift_allocObject();
      uint64_t v12 = (char *)sub_1DA7BF6AC(v25, v33, v42, v47, (uint64_t)sub_1DA7BA3F8, v39);
      sub_1DA7C77DC(v34);
      sub_1DA7A1AE0(v31, (uint64_t *)&unk_1EBE66AB0);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1DA7C7838();
      swift_allocError();
      unsigned char *v38 = 2;
      swift_willThrow();
      sub_1DA7AD81C(v32);
      sub_1DA7C77DC(v34);
      sub_1DA7A1AE0((uint64_t)v12, (uint64_t *)&unk_1EBE66AB0);
    }
    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA7C7778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SQLDatabase.Storage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA7C77DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SQLDatabase.Storage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DA7C7838()
{
  unint64_t result = qword_1EA8E5A38;
  if (!qword_1EA8E5A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5A38);
  }
  return result;
}

uint64_t sub_1DA7C788C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA7C78F4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DA7C792C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1DA7C7958(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1DA7C7988()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA7C79C0(void *a1)
{
  return sub_1DA7C179C(a1, v1);
}

uint64_t getEnumTagSinglePayload for ReloadState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SQLiteError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA7C7B24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLiteError()
{
  return &type metadata for SQLiteError;
}

unint64_t sub_1DA7C7B60()
{
  unint64_t result = qword_1EA8E5A40;
  if (!qword_1EA8E5A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5A40);
  }
  return result;
}

uint64_t WidgetViewSecurityPolicyResult.description.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  unsigned int v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v6 = 0x6C6F686563616C50;
  if (EnumCaseMultiPayload != 1) {
    uint64_t v6 = 0x7974706D45;
  }
  if (EnumCaseMultiPayload) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 1702259020;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v7;
}

uint64_t WidgetViewSecurityPolicyResult.entryData.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a1);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v9, v2);
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(a1 + 24) + 32))(v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return v10;
}

uint64_t DefaultWidgetViewSecurityPolicy.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DefaultWidgetViewSecurityPolicy.init()()
{
  return v0;
}

uint64_t sub_1DA7C7EEC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v274 = a4;
  uint64_t v275 = a3;
  uint64_t v286 = type metadata accessor for WidgetViewSecurityPolicyResult();
  uint64_t v276 = *(void *)(v286 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v286);
  v260 = (uint64_t *)((char *)&v257 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  v285 = (char *)&v257 - v8;
  uint64_t v273 = sub_1DA98B9E8();
  uint64_t v272 = *(void *)(v273 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v273);
  v284 = (char *)&v257 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v283 = (char *)&v257 - v12;
  uint64_t v294 = *(a2 - 1);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v267 = (char *)&v257 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v259 = (char *)&v257 - v16;
  MEMORY[0x1F4188790](v15);
  v258 = (char *)&v257 - v17;
  v296 = (void (*)(void, void))a2;
  uint64_t v300 = sub_1DA98C838();
  uint64_t v291 = *(void *)(v300 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v300 - 8);
  v266 = (char *)&v257 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  v281 = (char *)&v257 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v262 = (char *)&v257 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  v263 = (char *)&v257 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  v261 = (char *)&v257 - v27;
  MEMORY[0x1F4188790](v26);
  v293 = (char *)&v257 - v28;
  uint64_t v290 = sub_1DA98A3F8();
  uint64_t v278 = *(void *)(v290 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v290);
  v292 = (char *)&v257 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  v289 = (char *)&v257 - v31;
  uint64_t v295 = sub_1DA98A888();
  uint64_t v301 = *(void *)(v295 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v295);
  v288 = (char *)&v257 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  v270 = (char *)&v257 - v35;
  MEMORY[0x1F4188790](v34);
  v287 = (char *)&v257 - v36;
  uint64_t v37 = sub_1DA989F38();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v41 = (char *)&v257 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x1F4188790](v39);
  v265 = (char *)&v257 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  v264 = (char *)&v257 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  v280 = (char *)&v257 - v47;
  uint64_t v48 = MEMORY[0x1F4188790](v46);
  v257 = (char *)&v257 - v49;
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  v277 = (char *)&v257 - v51;
  MEMORY[0x1F4188790](v50);
  uint64_t v53 = (char *)&v257 - v52;
  uint64_t v54 = a1[3];
  uint64_t v55 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v54);
  (*(void (**)(uint64_t, uint64_t))(v55 + 24))(v54, v55);
  sub_1DA7A1A44((uint64_t)a1, (uint64_t)&v307);
  uint64_t v56 = sub_1DA989F18();
  os_log_type_t v57 = sub_1DA98C518();
  BOOL v58 = os_log_type_enabled(v56, v57);
  uint64_t v298 = v37;
  uint64_t v299 = v38;
  v271 = v41;
  if (v58)
  {
    unint64_t v59 = (uint8_t *)swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    uint64_t v304 = v60;
    *(_DWORD *)unint64_t v59 = 136315138;
    v297 = (void (*)(char *, uint64_t))(v59 + 4);
    uint64_t v61 = v308;
    uint64_t v62 = v309;
    __swift_project_boxed_opaque_existential_0(&v307, v308);
    uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 32))(v61, v62);
    v306 = (void *)sub_1DA8C5E00(v63, v64, &v304);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);
    _os_log_impl(&dword_1DA795000, v56, v57, "[%s] viewEvaluate: begin", v59, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v60, -1, -1);
    MEMORY[0x1E0178DA0](v59, -1, -1);

    v297 = *(void (**)(char *, uint64_t))(v299 + 8);
    v297(v53, v298);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);

    v297 = *(void (**)(char *, uint64_t))(v38 + 8);
    v297(v53, v37);
  }
  v306 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v65 = a1[3];
  uint64_t v66 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v65);
  LODWORD(v282) = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 48))(v65, v66);
  uint64_t v67 = a1[3];
  uint64_t v68 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v67);
  LODWORD(v269) = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 56))(v67, v68);
  uint64_t v69 = a1[3];
  uint64_t v70 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v69);
  unsigned int v71 = v287;
  (*(void (**)(uint64_t, uint64_t))(v70 + 40))(v69, v70);
  unsigned int v72 = v289;
  sub_1DA98A4F8();
  uint64_t v73 = v301 + 8;
  uint64_t v74 = *(void (**)(char *, uint64_t))(v301 + 8);
  uint64_t v75 = v295;
  v74(v71, v295);
  unsigned int v76 = v292;
  sub_1DA98A3E8();
  unint64_t v77 = sub_1DA7CB898();
  uint64_t v78 = v290;
  unint64_t v279 = v77;
  int v268 = sub_1DA98C8E8();
  uint64_t v79 = *(void (**)(char *, uint64_t))(v278 + 8);
  v79(v76, v78);
  v79(v72, v78);
  uint64_t v80 = a1[3];
  uint64_t v81 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v80);
  (*(void (**)(uint64_t, uint64_t))(v81 + 40))(v80, v81);
  LOBYTE(v79) = sub_1DA98A528();
  uint64_t v301 = v73;
  v292 = (char *)v74;
  v74(v71, v75);
  uint64_t v82 = v296;
  char v83 = sub_1DA7CC018(v79 & 1, a1, &v306, v268 & 1, v282 & 1, v269 & 1);
  uint64_t v84 = a1[3];
  uint64_t v85 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v84);
  uint64_t v86 = v277;
  (*(void (**)(uint64_t, uint64_t))(v85 + 24))(v84, v85);
  sub_1DA7A1A44((uint64_t)a1, (uint64_t)&v307);
  uint64_t v87 = sub_1DA989F18();
  os_log_type_t v88 = sub_1DA98C518();
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v89 = swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    uint64_t v304 = v90;
    *(_DWORD *)uint64_t v89 = 136315394;
    uint64_t v92 = v308;
    uint64_t v91 = v309;
    __swift_project_boxed_opaque_existential_0(&v307, v308);
    uint64_t v93 = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 32))(v92, v91);
    uint64_t v303 = sub_1DA8C5E00(v93, v94, &v304);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);
    *(_WORD *)(v89 + 12) = 1024;
    LODWORD(v303) = v83 & 1;
    sub_1DA98C858();
    _os_log_impl(&dword_1DA795000, v87, v88, "[%s] viewEvaluate: securityAllowsLiveContent = %{BOOL}d", (uint8_t *)v89, 0x12u);
    swift_arrayDestroy();
    uint64_t v95 = v90;
    uint64_t v82 = v296;
    MEMORY[0x1E0178DA0](v95, -1, -1);
    MEMORY[0x1E0178DA0](v89, -1, -1);

    uint64_t v96 = v277;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);

    uint64_t v96 = v86;
  }
  uint64_t v97 = v298;
  v297(v96, v298);
  uint64_t v98 = v291;
  if (qword_1EBE66028 != -1) {
    swift_once();
  }
  uint64_t v99 = *(void *)(*((void *)off_1EBE66018 + 12) + 88);
  uint64_t v100 = *(os_unfair_lock_s **)(v99 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v100);
  char v101 = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v99 + 16));
  swift_release();
  swift_release();
  char v102 = v83;
  if (v101)
  {
    uint64_t v103 = v306;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v103 = sub_1DA7CA2FC(0, v103[2] + 1, 1, v103);
    }
    unint64_t v105 = v103[2];
    unint64_t v104 = v103[3];
    if (v105 >= v104 >> 1) {
      uint64_t v103 = sub_1DA7CA2FC((void *)(v104 > 1), v105 + 1, 1, v103);
    }
    v103[2] = v105 + 1;
    uint64_t v106 = &v103[2 * v105];
    v106[4] = 0xD000000000000049;
    v106[5] = 0x80000001DA99D700;
    v306 = v103;
    char v102 = 1;
    uint64_t v82 = v296;
  }
  unsigned __int8 v305 = v83 & ~v101 & 1;
  uint64_t v107 = v294;
  unint64_t v108 = *(void (**)(char *, void, uint64_t, void (*)(void, void)))(v294 + 56);
  v277 = (char *)(v294 + 56);
  v269 = v108;
  v108(v293, 1, 1, v82);
  if ((v102 & 1) == 0 && ((v282 ^ 1) & 1) == 0)
  {
    uint64_t v109 = a1[3];
    uint64_t v110 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v109);
    uint64_t v111 = v270;
    (*(void (**)(uint64_t, uint64_t))(v110 + 40))(v109, v110);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5A48);
    uint64_t v112 = swift_allocObject();
    *(_OWORD *)(v112 + 16) = xmmword_1DA990050;
    sub_1DA98A3E8();
    v307 = (void *)v112;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE630C8);
    sub_1DA7A0410(&qword_1EBE630D0, &qword_1EBE630C8);
    sub_1DA98C918();
    sub_1DA98A508();
    uint64_t v113 = a1[3];
    uint64_t v114 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v113);
    uint64_t v115 = v82;
    uint64_t v116 = v261;
    (*(void (**)(char *, uint64_t, uint64_t))(v114 + 88))(v111, v113, v114);
    uint64_t v117 = v293;
    uint64_t v118 = v116;
    uint64_t v82 = v115;
    (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v293, v118, v300);
    if ((*(unsigned int (**)(char *, uint64_t, void (*)(void, void)))(v107 + 48))(v117, 1, v115)|| (uint64_t v119 = v258, (*(void (**)(char *, char *, void (*)(void, void)))(v107 + 16))(v258, v293, v115), v120 = (*(uint64_t (**)(void (*)(void, void)))(v275 + 40))(v115), (*(void (**)(char *, void))(v107 + 8))(v119, v115), (v120 & 1) == 0))
    {
      ((void (*)(char *, uint64_t))v292)(v270, v295);
    }
    else
    {
      uint64_t v121 = a1[3];
      uint64_t v122 = a1[4];
      __swift_project_boxed_opaque_existential_0(a1, v121);
      v123 = v257;
      (*(void (**)(uint64_t, uint64_t))(v122 + 24))(v121, v122);
      sub_1DA7A1A44((uint64_t)a1, (uint64_t)&v307);
      uint64_t v124 = sub_1DA989F18();
      os_log_type_t v125 = sub_1DA98C518();
      if (os_log_type_enabled(v124, v125))
      {
        uint64_t v126 = (uint8_t *)swift_slowAlloc();
        uint64_t v127 = swift_slowAlloc();
        uint64_t v304 = v127;
        *(_DWORD *)uint64_t v126 = 136315138;
        v282 = v126 + 4;
        uint64_t v129 = v308;
        uint64_t v128 = v309;
        __swift_project_boxed_opaque_existential_0(&v307, v308);
        uint64_t v130 = *(uint64_t (**)(uint64_t, uint64_t))(v128 + 32);
        uint64_t v131 = v128;
        uint64_t v98 = v291;
        uint64_t v132 = v130(v129, v131);
        uint64_t v303 = sub_1DA8C5E00(v132, v133, &v304);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);
        _os_log_impl(&dword_1DA795000, v124, v125, "[%s] viewEvaluate: liveContentContainsPrivacyRedactions = true", v126, 0xCu);
        swift_arrayDestroy();
        uint64_t v134 = v127;
        uint64_t v82 = v296;
        MEMORY[0x1E0178DA0](v134, -1, -1);
        MEMORY[0x1E0178DA0](v126, -1, -1);

        uint64_t v135 = v257;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);

        uint64_t v135 = v123;
      }
      v297(v135, v97);
      v253 = v306;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v253 = sub_1DA7CA2FC(0, v253[2] + 1, 1, v253);
      }
      unint64_t v255 = v253[2];
      unint64_t v254 = v253[3];
      if (v255 >= v254 >> 1) {
        v253 = sub_1DA7CA2FC((void *)(v254 > 1), v255 + 1, 1, v253);
      }
      v253[2] = v255 + 1;
      v256 = &v253[2 * v255];
      v256[4] = 0xD000000000000021;
      v256[5] = 0x80000001DA99D6D0;
      v306 = v253;
      ((void (*)(char *, uint64_t))v292)(v270, v295);
      unsigned __int8 v305 = 1;
    }
  }
  uint64_t v136 = a1[3];
  uint64_t v137 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v136);
  (*(void (**)(uint64_t, uint64_t))(v137 + 80))(v136, v137);
  uint64_t v138 = a1[3];
  uint64_t v139 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v138);
  (*(void (**)(uint64_t, uint64_t))(v139 + 72))(v138, v139);
  char v140 = sub_1DA98B9C8();
  uint64_t v141 = v280;
  if ((v140 & 1) == 0)
  {
    uint64_t v142 = v306;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v142 = sub_1DA7CA2FC(0, v142[2] + 1, 1, v142);
    }
    unint64_t v144 = v142[2];
    unint64_t v143 = v142[3];
    if (v144 >= v143 >> 1) {
      uint64_t v142 = sub_1DA7CA2FC((void *)(v143 > 1), v144 + 1, 1, v142);
    }
    v142[2] = v144 + 1;
    v145 = &v142[2 * v144];
    v145[4] = 0xD000000000000042;
    v145[5] = 0x80000001DA99D5E0;
    v306 = v142;
    unsigned __int8 v305 = 0;
  }
  uint64_t v146 = a1[3];
  uint64_t v147 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v146);
  (*(void (**)(uint64_t, uint64_t))(v147 + 24))(v146, v147);
  sub_1DA7A1A44((uint64_t)a1, (uint64_t)&v307);
  int v148 = v305;
  uint64_t v149 = sub_1DA989F18();
  os_log_type_t v150 = sub_1DA98C518();
  if (os_log_type_enabled(v149, v150))
  {
    uint64_t v151 = swift_slowAlloc();
    uint64_t v152 = swift_slowAlloc();
    uint64_t v304 = v152;
    *(_DWORD *)uint64_t v151 = 136315394;
    uint64_t v153 = v308;
    uint64_t v154 = v309;
    __swift_project_boxed_opaque_existential_0(&v307, v308);
    uint64_t v155 = (*(uint64_t (**)(uint64_t, uint64_t))(v154 + 32))(v153, v154);
    uint64_t v303 = sub_1DA8C5E00(v155, v156, &v304);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);
    *(_WORD *)(v151 + 12) = 1024;
    LODWORD(v303) = v148;
    uint64_t v98 = v291;
    sub_1DA98C858();
    _os_log_impl(&dword_1DA795000, v149, v150, "[%s] viewEvaluate: allowedToFetchLiveContent = %{BOOL}d", (uint8_t *)v151, 0x12u);
    swift_arrayDestroy();
    uint64_t v157 = v152;
    uint64_t v82 = v296;
    MEMORY[0x1E0178DA0](v157, -1, -1);
    MEMORY[0x1E0178DA0](v151, -1, -1);

    uint64_t v158 = v280;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);

    uint64_t v158 = v141;
  }
  v297(v158, v298);
  uint64_t v159 = a1[3];
  uint64_t v160 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v159);
  (*(void (**)(uint64_t, uint64_t))(v160 + 40))(v159, v160);
  v307 = (void *)MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE630C8);
  sub_1DA7A0410(&qword_1EBE630D0, &qword_1EBE630C8);
  sub_1DA98C918();
  sub_1DA98A508();
  swift_beginAccess();
  uint64_t v161 = v294;
  if (v305 != 1) {
    goto LABEL_42;
  }
  uint64_t v162 = v262;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v262, v293, v300);
  sub_1DA7A1A44((uint64_t)a1, (uint64_t)&v307);
  uint64_t v163 = *(unsigned int (**)(char *, uint64_t, void (*)(void, void)))(v161 + 48);
  if (v163(v162, 1, v82) == 1)
  {
    uint64_t v164 = v308;
    uint64_t v165 = v309;
    __swift_project_boxed_opaque_existential_0(&v307, v308);
    uint64_t v166 = v263;
    (*(void (**)(char *, uint64_t, uint64_t))(v165 + 88))(v288, v164, v165);
    uint64_t v167 = v166;
    uint64_t v168 = v98;
    (*(void (**)(char *, uint64_t))(v98 + 8))(v162, v300);
  }
  else
  {
    uint64_t v168 = v98;
    uint64_t v167 = v263;
    (*(void (**)(char *, char *, void (*)(void, void)))(v161 + 32))(v263, v162, v82);
    v269(v167, 0, 1, v82);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);
  if (v163(v167, 1, v82) != 1)
  {
    v227 = *(void (**)(char *, char *, void (*)(void, void)))(v294 + 32);
    v228 = v259;
    v227(v259, v167, v82);
    v227(v285, v228, v82);
    swift_storeEnumTagMultiPayload();
    v229 = v271;
    uint64_t v98 = v168;
    goto LABEL_61;
  }
  uint64_t v98 = v168;
  (*(void (**)(char *, uint64_t))(v168 + 8))(v167, v300);
  if (v305 == 1)
  {
    uint64_t v169 = v306;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v169 = sub_1DA7CA2FC(0, v169[2] + 1, 1, v169);
    }
    unint64_t v171 = v169[2];
    unint64_t v170 = v169[3];
    if (v171 >= v170 >> 1) {
      uint64_t v169 = sub_1DA7CA2FC((void *)(v170 > 1), v171 + 1, 1, v169);
    }
    v169[2] = v171 + 1;
    uint64_t v172 = &v169[2 * v171];
    v172[4] = 0xD00000000000003DLL;
    uint64_t v173 = v172 + 4;
    uint64_t v174 = "Policy would prefer live entry, but couldn't find one to show";
  }
  else
  {
LABEL_42:
    uint64_t v169 = v306;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v169 = sub_1DA7CA2FC(0, v169[2] + 1, 1, v169);
    }
    unint64_t v176 = v169[2];
    unint64_t v175 = v169[3];
    if (v176 >= v175 >> 1) {
      uint64_t v169 = sub_1DA7CA2FC((void *)(v175 > 1), v176 + 1, 1, v169);
    }
    v169[2] = v176 + 1;
    v177 = &v169[2 * v176];
    v177[4] = 0xD000000000000024;
    uint64_t v173 = v177 + 4;
    uint64_t v174 = "Policy decided must show placeholder";
  }
  v173[1] = (unint64_t)(v174 - 32) | 0x8000000000000000;
  v306 = v169;
  uint64_t v178 = a1[3];
  uint64_t v179 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v178);
  uint64_t v180 = a1[3];
  uint64_t v181 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v180);
  v182 = v287;
  (*(void (**)(uint64_t, uint64_t))(v181 + 40))(v180, v181);
  v183 = v281;
  (*(void (**)(char *, uint64_t, uint64_t))(v179 + 96))(v182, v178, v179);
  ((void (*)(char *, uint64_t))v292)(v182, v295);
  uint64_t v184 = v266;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v266, v183, v300);
  uint64_t v185 = v294;
  uint64_t v186 = v296;
  if ((*(unsigned int (**)(char *, uint64_t, void (*)(void, void)))(v294 + 48))(v184, 1, v296) == 1)
  {
    uint64_t v187 = v98 + 8;
    v296 = *(void (**)(void, void))(v98 + 8);
    v296(v184, v300);
    uint64_t v188 = v306;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v188 = sub_1DA7CA2FC(0, v188[2] + 1, 1, v188);
    }
    unint64_t v190 = v188[2];
    unint64_t v189 = v188[3];
    if (v190 >= v189 >> 1) {
      uint64_t v188 = sub_1DA7CA2FC((void *)(v189 > 1), v190 + 1, 1, v188);
    }
    v188[2] = v190 + 1;
    uint64_t v191 = &v188[2 * v190];
    v191[4] = 0xD000000000000023;
    v191[5] = 0x80000001DA99D660;
    v306 = v188;
    v307 = v188;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
    sub_1DA7A0410((unint64_t *)&qword_1EBE62A48, &qword_1EBE62A40);
    uint64_t v192 = sub_1DA98BFC8();
    unint64_t v194 = v193;
    swift_bridgeObjectRelease();
    uint64_t v195 = a1[3];
    uint64_t v196 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v195);
    __int16 v197 = v265;
    (*(void (**)(uint64_t, uint64_t))(v196 + 24))(v195, v196);
    sub_1DA7A1A44((uint64_t)a1, (uint64_t)&v307);
    swift_bridgeObjectRetain();
    long long v198 = sub_1DA989F18();
    os_log_type_t v199 = sub_1DA98C528();
    if (os_log_type_enabled(v198, v199))
    {
      uint64_t v200 = swift_slowAlloc();
      uint64_t v201 = swift_slowAlloc();
      uint64_t v294 = v187;
      uint64_t v202 = v201;
      uint64_t v303 = v201;
      *(_DWORD *)uint64_t v200 = 136446466;
      uint64_t v290 = v192;
      uint64_t v204 = v308;
      uint64_t v203 = v309;
      __swift_project_boxed_opaque_existential_0(&v307, v308);
      uint64_t v205 = (*(uint64_t (**)(uint64_t, uint64_t))(v203 + 32))(v204, v203);
      uint64_t v302 = sub_1DA8C5E00(v205, v206, &v303);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);
      *(_WORD *)(v200 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v302 = sub_1DA8C5E00(v290, v194, &v303);
      sub_1DA98C858();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA795000, v198, v199, "[%{public}s] Security policy determined view will be empty: %{public}s.", (uint8_t *)v200, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v202, -1, -1);
      MEMORY[0x1E0178DA0](v200, -1, -1);

      v207 = v265;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);

      swift_bridgeObjectRelease_n();
      v207 = v197;
    }
    v297(v207, v298);
    uint64_t v98 = v291;
    uint64_t v230 = a1[3];
    uint64_t v231 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v230);
    uint64_t v232 = a1[3];
    uint64_t v233 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v232);
    v234 = v287;
    (*(void (**)(uint64_t, uint64_t))(v233 + 40))(v232, v233);
    uint64_t v235 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v231 + 104))(v234, v230, v231);
    ((void (*)(char *, uint64_t))v292)(v234, v295);
    v296(v281, v300);
    v236 = v260;
    uint64_t *v260 = v235;
    uint64_t v237 = v286;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t *, uint64_t))(v276 + 32))(v285, v236, v237);
    v229 = v271;
  }
  else
  {
    v210 = *(char **)(v185 + 32);
    uint64_t v208 = v185 + 32;
    v209 = v210;
    ((void (*)(char *, char *, void (*)(void, void)))v210)(v267, v184, v186);
    v307 = v306;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
    sub_1DA7A0410((unint64_t *)&qword_1EBE62A48, &qword_1EBE62A40);
    uint64_t v290 = sub_1DA98BFC8();
    unint64_t v212 = v211;
    swift_bridgeObjectRelease();
    uint64_t v213 = a1[3];
    uint64_t v214 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v213);
    v215 = v264;
    (*(void (**)(uint64_t, uint64_t))(v214 + 24))(v213, v214);
    sub_1DA7A1A44((uint64_t)a1, (uint64_t)&v307);
    swift_bridgeObjectRetain();
    v216 = sub_1DA989F18();
    os_log_type_t v217 = sub_1DA98C548();
    if (os_log_type_enabled(v216, v217))
    {
      uint64_t v218 = swift_slowAlloc();
      uint64_t v219 = swift_slowAlloc();
      v289 = v209;
      uint64_t v220 = v219;
      uint64_t v303 = v219;
      *(_DWORD *)uint64_t v218 = 136446466;
      uint64_t v294 = v208;
      uint64_t v222 = v308;
      uint64_t v221 = v309;
      __swift_project_boxed_opaque_existential_0(&v307, v308);
      uint64_t v223 = (*(uint64_t (**)(uint64_t, uint64_t))(v221 + 32))(v222, v221);
      uint64_t v302 = sub_1DA8C5E00(v223, v224, &v303);
      uint64_t v98 = v291;
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);
      *(_WORD *)(v218 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v302 = sub_1DA8C5E00(v290, v212, &v303);
      sub_1DA98C858();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA795000, v216, v217, "[%{public}s] Security policy yielding placeholder content: %{public}s.", (uint8_t *)v218, 0x16u);
      swift_arrayDestroy();
      uint64_t v225 = v220;
      v209 = v289;
      MEMORY[0x1E0178DA0](v225, -1, -1);
      MEMORY[0x1E0178DA0](v218, -1, -1);

      v226 = v264;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);
      v226 = v215;
    }
    v297(v226, v298);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v281, v300);
    v229 = v271;
    ((void (*)(char *, char *, void (*)(void, void)))v209)(v285, v267, v296);
    swift_storeEnumTagMultiPayload();
  }
LABEL_61:
  uint64_t v238 = a1[3];
  uint64_t v239 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v238);
  (*(void (**)(uint64_t, uint64_t))(v239 + 24))(v238, v239);
  sub_1DA7A1A44((uint64_t)a1, (uint64_t)&v307);
  v240 = sub_1DA989F18();
  os_log_type_t v241 = sub_1DA98C518();
  if (os_log_type_enabled(v240, v241))
  {
    v242 = (uint8_t *)swift_slowAlloc();
    v243 = v229;
    uint64_t v244 = swift_slowAlloc();
    uint64_t v303 = v244;
    *(_DWORD *)v242 = 136315138;
    uint64_t v245 = v308;
    uint64_t v246 = v309;
    __swift_project_boxed_opaque_existential_0(&v307, v308);
    uint64_t v247 = (*(uint64_t (**)(uint64_t, uint64_t))(v246 + 32))(v245, v246);
    uint64_t v302 = sub_1DA8C5E00(v247, v248, &v303);
    uint64_t v98 = v291;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);
    _os_log_impl(&dword_1DA795000, v240, v241, "[%s] viewEvaluate: end", v242, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v244, -1, -1);
    MEMORY[0x1E0178DA0](v242, -1, -1);

    v249 = v243;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v307);

    v249 = v229;
  }
  v297(v249, v298);
  swift_bridgeObjectRelease();
  v306 = (void *)MEMORY[0x1E4FBC860];
  ((void (*)(char *, uint64_t))v292)(v288, v295);
  v250 = *(void (**)(char *, uint64_t))(v272 + 8);
  uint64_t v251 = v273;
  v250(v284, v273);
  v250(v283, v251);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v276 + 32))(v274, v285, v286);
  return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v293, v300);
}

uint64_t DefaultWidgetViewSecurityPolicy.deinit()
{
  return v0;
}

uint64_t DefaultWidgetViewSecurityPolicy.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DA7CA2E4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1DA7C7EEC(a1, a2, a3, a4);
}

void *sub_1DA7CA2FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BA0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA7CBAD0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1DA7CA40C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59D98);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DA7CB9E8(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DA7CA508(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE58FB0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DA7CBE14(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DA7CA630(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58FA0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA7CBF24(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA7CA740(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA7CAC10(a1, a2, a3, a4, (uint64_t *)&unk_1EBE58F80, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
}

void *sub_1DA7CA774(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5A78);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA7CD3E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DA7CA884(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64048);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA7CD6F8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DA7CA994(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58F98);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DA7CD5E4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DA7CAAB8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A7A0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DA7CD4D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA7CABDC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA7CAC10(a1, a2, a3, a4, &qword_1EBE5A798, MEMORY[0x1E4F3C5D0], MEMORY[0x1E4F3C5D0]);
}

uint64_t sub_1DA7CAC10(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1DA98CBA8();
    __break(1u);
    return result;
  }
  uint64_t v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1DA7CD9F0(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1DA7CAE90(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A7A8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DA7CD804(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DA7CAFB4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5A80);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA7CD8FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DA7CB0C4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DA7CB0EC(a1, a2, a3, a4, &qword_1EBE5A7B8, &qword_1EBE5A680);
}

void *sub_1DA7CB0D8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DA7CB0EC(a1, a2, a3, a4, &qword_1EBE5A050, &qword_1EBE5A010);
}

void *sub_1DA7CB0EC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      _OWORD v13[2] = v11;
      void v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA7CD2D8(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1DA7CB208(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DA7CB0EC(a1, a2, a3, a4, &qword_1EBE5A7B0, &qword_1EBE5A668);
}

void *sub_1DA7CB21C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE595D0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DA7CB8F0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA7CB344(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA7CAC10(a1, a2, a3, a4, &qword_1EA8E5A70, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
}

uint64_t sub_1DA7CB378(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA7CAC10(a1, a2, a3, a4, &qword_1EA8E5A68, MEMORY[0x1E4F961F0], MEMORY[0x1E4F961F0]);
}

uint64_t sub_1DA7CB3AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA7CAC10(a1, a2, a3, a4, &qword_1EA8E5A60, (uint64_t (*)(void))type metadata accessor for WidgetExtensionInfo, (uint64_t (*)(void))type metadata accessor for WidgetExtensionInfo);
}

uint64_t sub_1DA7CB3E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA7CAC10(a1, a2, a3, a4, &qword_1EA8E5A58, (uint64_t (*)(void))type metadata accessor for PushSubscription, (uint64_t (*)(void))type metadata accessor for PushSubscription);
}

uint64_t sub_1DA7CB414(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA7CAC10(a1, a2, a3, a4, &qword_1EA8E5A50, (uint64_t (*)(void))type metadata accessor for PushToken, (uint64_t (*)(void))type metadata accessor for PushToken);
}

void *sub_1DA7CB448(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59DA0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DA7CDB4C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA7CB558(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DA7CAC10(a1, a2, a3, a4, &qword_1EBE58F90, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
}

uint64_t sub_1DA7CB58C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A790);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1DA98CBA8();
    __break(1u);
    return result;
  }
  _OWORD v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1DA7CDC44(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1DA7CB7FC(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1DA7CB828(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1DA7CB850@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for WidgetViewSecurityPolicyResult()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1DA7CB898()
{
  unint64_t result = qword_1EBE62DE8;
  if (!qword_1EBE62DE8)
  {
    sub_1DA98A3F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE62DE8);
  }
  return result;
}

uint64_t sub_1DA7CB8F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

char *sub_1DA7CB9E8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CBAD0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CBBC4(char a1, char a2, char a3, void **a4)
{
  uint64_t v8 = *a4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a1)
  {
    if (a2)
    {
      if (a3)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v8 = sub_1DA7CA2FC(0, v8[2] + 1, 1, v8);
        }
        unint64_t v11 = v8[2];
        unint64_t v10 = v8[3];
        if (v11 >= v10 >> 1) {
          uint64_t v8 = sub_1DA7CA2FC((void *)(v10 > 1), v11 + 1, 1, v8);
        }
        unint64_t v12 = &v8[2 * v11];
        v12[4] = 0xD000000000000036;
        uint64_t v13 = v12 + 4;
        _OWORD v8[2] = v11 + 1;
        unint64_t v14 = 0x80000001DA99D8E0;
        uint64_t result = 1;
        goto LABEL_25;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v8 = sub_1DA7CA2FC(0, v8[2] + 1, 1, v8);
      }
      unint64_t v24 = v8[2];
      unint64_t v23 = v8[3];
      if (v24 >= v23 >> 1) {
        uint64_t v8 = sub_1DA7CA2FC((void *)(v23 > 1), v24 + 1, 1, v8);
      }
      uint64_t result = 0;
      _OWORD v8[2] = v24 + 1;
      uint64_t v25 = &v8[2 * v24];
      v25[4] = 0xD00000000000003BLL;
      uint64_t v13 = v25 + 4;
      unint64_t v22 = "Keybag locked and user's Setting is set to hide widget data";
    }
    else
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v8 = sub_1DA7CA2FC(0, v8[2] + 1, 1, v8);
      }
      unint64_t v20 = v8[2];
      unint64_t v19 = v8[3];
      if (v20 >= v19 >> 1) {
        uint64_t v8 = sub_1DA7CA2FC((void *)(v19 > 1), v20 + 1, 1, v8);
      }
      uint64_t result = 0;
      _OWORD v8[2] = v20 + 1;
      uint64_t v21 = &v8[2 * v20];
      v21[4] = 0xD000000000000072;
      uint64_t v13 = v21 + 4;
      unint64_t v22 = "Keybag locked and widget's configured to not 'canAppearInSecureEnvironment' - error in widget host's configuration";
    }
    unint64_t v14 = (unint64_t)(v22 - 32) | 0x8000000000000000;
    goto LABEL_25;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v8 = sub_1DA7CA2FC(0, v8[2] + 1, 1, v8);
  }
  unint64_t v17 = v8[2];
  unint64_t v16 = v8[3];
  if (v17 >= v16 >> 1) {
    uint64_t v8 = sub_1DA7CA2FC((void *)(v16 > 1), v17 + 1, 1, v8);
  }
  _OWORD v8[2] = v17 + 1;
  unint64_t v18 = &v8[2 * v17];
  v18[4] = 0x752067616279654BLL;
  uint64_t v13 = v18 + 4;
  uint64_t result = 1;
  unint64_t v14 = 0xEF64656B636F6C6ELL;
LABEL_25:
  v13[1] = v14;
  *a4 = v8;
  return result;
}

uint64_t sub_1DA7CBE14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE58E98);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CBF24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CC018(char a1, void *a2, void **a3, char a4, char a5, char a6)
{
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v11);
  char v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 64))(v11, v12);
  if ((a1 & 1) == 0)
  {
LABEL_8:
    return sub_1DA7CBBC4(a4 & 1, a5 & 1, a6 & 1, a3);
  }
  char v14 = v13;
  BOOL v15 = *a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v15;
  if (v14)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      BOOL v15 = sub_1DA7CA2FC(0, v15[2] + 1, 1, v15);
      *a3 = v15;
    }
    unint64_t v18 = v15[2];
    unint64_t v17 = v15[3];
    if (v18 >= v17 >> 1)
    {
      BOOL v15 = sub_1DA7CA2FC((void *)(v17 > 1), v18 + 1, 1, v15);
      *a3 = v15;
    }
    _OWORD v15[2] = v18 + 1;
    unint64_t v19 = &v15[2 * v18];
    v19[4] = 0xD00000000000002ELL;
    v19[5] = 0x80000001DA99D9B0;
    goto LABEL_8;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    BOOL v15 = sub_1DA7CA2FC(0, v15[2] + 1, 1, v15);
    *a3 = v15;
  }
  unint64_t v22 = v15[2];
  unint64_t v21 = v15[3];
  if (v22 >= v21 >> 1)
  {
    BOOL v15 = sub_1DA7CA2FC((void *)(v21 > 1), v22 + 1, 1, v15);
    *a3 = v15;
  }
  _OWORD v15[2] = v22 + 1;
  unint64_t v23 = &v15[2 * v22];
  v23[4] = 0xD00000000000002DLL;
  v23[5] = 0x80000001DA99D980;
  return 0;
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.logger.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.logIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.currentEnvironment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.canAppearInSecureEnvironment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.userAllowsLiveContentWhenInSecureEnvironment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.prefersUnredactedContentInLowLuminanceEnvironment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.contentProtectionLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.currentProtectionLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.liveViewEntryProvider(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.placeholderViewEntryProvider(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.emptyView(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t sub_1DA7CC2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_1DA7CC2C8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1DA7CC364(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_25:
    swift_retain();
    return v3;
  }
  unsigned int v9 = a2[v5];
  unsigned int v10 = v9 - 3;
  if (v9 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v11 = v5;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_19;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_19:
        int v13 = (v12 | (v10 << (8 * v5))) + 3;
        unsigned int v9 = v12 + 3;
        if (v5 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 2)
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v5) = 2;
    goto LABEL_25;
  }
  if (v9 == 1)
  {
    (*(void (**)(void *))(v4 + 16))(a1);
    *((unsigned char *)v3 + v5) = 1;
  }
  else
  {
    (*(void (**)(void *))(v4 + 16))(a1);
    *((unsigned char *)v3 + v5) = 0;
  }
  return v3;
}

uint64_t sub_1DA7CC504(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 3;
  if (v3 >= 3)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 3;
        unsigned int v3 = v6 + 3;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 2) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_1DA7CC608(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 2)
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v5) = 2;
    swift_retain();
  }
  else if (v6 == 1)
  {
    (*(void (**)(void *))(v4 + 16))(a1);
    *((unsigned char *)a1 + v5) = 1;
  }
  else
  {
    (*(void (**)(void *))(v4 + 16))(a1);
    *((unsigned char *)a1 + v5) = 0;
  }
  return a1;
}

unsigned __int8 *sub_1DA7CC76C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 3;
    if (v8 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 3;
          unsigned int v8 = v11 + 3;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 2) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 3;
          unsigned int v13 = v16 + 3;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[v7] = 2;
      swift_retain();
    }
    else if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

void *sub_1DA7CC9BC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 2)
  {
    *a1 = *(void *)a2;
    char v11 = 2;
  }
  else if (v6 == 1)
  {
    (*(void (**)(void *))(v4 + 32))(a1);
    char v11 = 1;
  }
  else
  {
    (*(void (**)(void *))(v4 + 32))(a1);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v5) = v11;
  return a1;
}

unsigned __int8 *sub_1DA7CCB18(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 3;
    if (v8 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 3;
          unsigned int v8 = v11 + 3;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 2) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 3;
          unsigned int v13 = v16 + 3;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 2)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 2;
    }
    else if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1DA7CCD60(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1DA7CCE94(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1DA7CD05CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1DA7CD084(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 3;
        LODWORD(v4) = v7 + 3;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1DA7CD13C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 2)
  {
    unsigned int v5 = a2 - 3;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t dispatch thunk of WidgetViewEntrySecurityProviding.view.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of WidgetViewEntrySecurityProviding.entryData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of WidgetViewEntrySecurityProviding.containsPrivacyRedactions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of WidgetViewSecurityPolicy.evaluate<A>(dataSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for DefaultWidgetViewSecurityPolicy()
{
  return self;
}

uint64_t method lookup function for DefaultWidgetViewSecurityPolicy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultWidgetViewSecurityPolicy);
}

uint64_t dispatch thunk of DefaultWidgetViewSecurityPolicy.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of DefaultWidgetViewSecurityPolicy.evaluate<A>(dataSource:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t sub_1DA7CD2D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CD3E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CD4D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A368);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CD5E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E48);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CD6F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64058);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CD804(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CD8FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CD9F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CDB4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CDC44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7CDDA0()
{
  return sub_1DA989598();
}

uint64_t RemoteActivityWindowBudgeting.nextRefreshDate.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 168))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 152))(a1, a2);
  sub_1DA989598();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DA7CDECC()
{
  uint64_t v0 = sub_1DA989638();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v10 - v5;
  _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
  sub_1DA989598();
  char v7 = sub_1DA989578();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7 & 1;
}

uint64_t RemoteActivityWindowBudgeting.windowExpired.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  unint64_t v11 = (char *)&v17 - v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v17 - v12;
  _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
  (*(void (**)(uint64_t, uint64_t))(a2 + 168))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 152))(a1, a2);
  sub_1DA989598();
  unsigned int v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  char v15 = sub_1DA989578();
  v14(v11, v4);
  v14(v13, v4);
  return v15 & 1;
}

uint64_t sub_1DA7CE190(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  uint64_t result = *(void *)(v1 + *(int *)(a1 + 44));
  if (v2 >= 1)
  {
    BOOL v4 = __OFSUB__(result, v2);
    result -= v2;
    if (v4) {
      __break(1u);
    }
  }
  return result;
}

uint64_t RemoteActivityWindowBudgeting.consumedBudget.getter(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(uint64_t (**)(void))(a2 + 224);
  uint64_t v5 = v4();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 208))(a1, a2);
  if (v5 < 1) {
    return v6;
  }
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  BOOL v8 = __OFSUB__(v6, result);
  v6 -= result;
  if (!v8) {
    return v6;
  }
  __break(1u);
  return result;
}

BOOL sub_1DA7CE254(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 48)) < 1;
}

BOOL RemoteActivityWindowBudgeting.isExhausted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))() < 1;
}

uint64_t sub_1DA7CE298(uint64_t result)
{
  uint64_t v2 = *(int *)(result + 48);
  uint64_t v3 = *(void *)(v1 + v2);
  BOOL v4 = __OFSUB__(v3, 1);
  uint64_t v5 = v3 - 1;
  if (v4) {
    __break(1u);
  }
  else {
    *(void *)(v1 + v2) = v5;
  }
  return result;
}

Swift::Void __swiftcall RemoteActivityWindowBudgeting.decrement()()
{
  uint64_t v1 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(v0 + 240))(v3);
  if (__OFSUB__(*v2, 1))
  {
    __break(1u);
  }
  else
  {
    --*v2;
    v1(v3, 0);
  }
}

uint64_t sub_1DA7CE328(int *a1)
{
  uint64_t v3 = sub_1DA989638();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
  uint64_t v10 = v1 + a1[8];
  sub_1DA989598();
  char v11 = sub_1DA989578();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, v3);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v12)(v9, v3);
  if (v11)
  {
    *(void *)(v1 + a1[12]) = *(void *)(v1 + a1[11]);
    _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 40))(v10, v9, v3);
  }
  return result;
}

Swift::Void __swiftcall RemoteActivityWindowBudgeting.refreshIfNecessary()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  if ((*(uint64_t (**)(void))(v1 + 200))())
  {
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v2 + 280);
    v4(v3, v2);
  }
}

uint64_t sub_1DA7CE514(int *a1)
{
  uint64_t v3 = sub_1DA989638();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + a1[12]) = *(void *)(v1 + a1[11]);
  _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 40))(v1 + a1[8], v6, v3);
}

Swift::Void __swiftcall RemoteActivityWindowBudgeting.refresh()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = sub_1DA989638();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 208))(v3, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 232))(v7, v3, v2);
  _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 176))(v6, v3, v2);
}

uint64_t RemoteActivityWindowBudgeting.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v13 - v9;
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  sub_1DA98CA18();
  (*(void (**)(uint64_t, uint64_t))(a2 + 120))(a1, a2);
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  v13[1] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 224))(a1, a2);
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  (*(void (**)(uint64_t, uint64_t))(a2 + 144))(a1, a2);
  sub_1DA7CE9A8();
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  char v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v10, v4);
  sub_1DA98C148();
  (*(void (**)(uint64_t, uint64_t))(a2 + 192))(a1, a2);
  _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
  sub_1DA989548();
  v11(v8, v4);
  v11(v10, v4);
  sub_1DA98C3C8();
  sub_1DA98C148();
  return v14;
}

unint64_t sub_1DA7CE9A8()
{
  unint64_t result = qword_1EBE58920;
  if (!qword_1EBE58920)
  {
    sub_1DA989638();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE58920);
  }
  return result;
}

uint64_t RemoteActivityWindowBudgeting.budgetExpired.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  char v11 = (char *)&v17 - v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v17 - v12;
  _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
  (*(void (**)(uint64_t, uint64_t))(a2 + 144))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 160))(a1, a2);
  sub_1DA989598();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  char v15 = sub_1DA989578();
  v14(v11, v4);
  v14(v13, v4);
  return v15 & 1;
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.activityBudgetID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.activityBudgetType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.startDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.windowDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.maximumDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.lastRefreshDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.lastRefreshDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.lastRefreshDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.nextRefreshDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.windowExpired.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.maximumBudgetPerWindow.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.consumedBudget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.remainingBudget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.remainingBudget.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.remainingBudget.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.isExhausted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.init(activityBudgetID:activityBudgetType:windowDuration:maximumDuration:maximumBudgetPerWindow:startDate:remainingBudget:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a8 + 256))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.decrement()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.refreshIfNecessary()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t sub_1DA7CED60()
{
  return 60;
}

uint64_t DataProtectedArchiveFilePromise.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DA7CEDF4()
{
  uint64_t v2 = sub_1DA989E78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A578);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v21 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t result = sub_1DA7D01C0((uint64_t)&v21 - v13);
  if (!v1)
  {
    uint64_t v23 = v3;
    uint64_t v16 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
    uint64_t v24 = *(void *)(v16 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v14, 0, 1, v16);
    uint64_t v17 = v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
    swift_beginAccess();
    sub_1DA7D0C74((uint64_t)v14, v17);
    swift_endAccess();
    int v22 = sub_1DA98C6B8();
    if (qword_1EBE62C98 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_1EBE6F360;
    sub_1DA7A1F58(v17, (uint64_t)v12, &qword_1EBE5A578);
    char v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
    v24 += 48;
    uint64_t result = v18(v12, 1, v16);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v19 = v23;
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v5, &v12[*(int *)(v16 + 32)], v2);
      sub_1DA7D21BC((uint64_t)v12);
      sub_1DA989E28();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v2);
      sub_1DA7A1F58(v17, (uint64_t)v9, &qword_1EBE5A578);
      uint64_t result = v18(v9, 1, v16);
      if (result != 1)
      {
        id v20 = *(id *)&v9[*(int *)(v16 + 24)];
        sub_1DA7D21BC((uint64_t)v9);
        return (uint64_t)v20;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA7CF174(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1DA7CF1A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v2 = sub_1DA989078();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = sub_1DA989098();
  uint64_t v54 = *(void (***)(char *, uint64_t))(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A578);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void (**)(char *, uint64_t))((char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
  swift_beginAccess();
  sub_1DA7A1F58(v13, (uint64_t)v8, &qword_1EBE5A578);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v8, &qword_1EBE5A578);
    sub_1DA989028();
    sub_1DA7D2218(MEMORY[0x1E4FBC860]);
    sub_1DA7D3460(&qword_1EBE61C88, MEMORY[0x1E4F26C20]);
    sub_1DA9892B8();
    sub_1DA988FE8();
    v54[1](v5, v3);
    return swift_willThrow();
  }
  else
  {
    sub_1DA7D2350((uint64_t)v8, (uint64_t)v12);
    char v15 = v1 + 4;
    uint64_t v16 = v9;
    uint64_t v17 = v1[8];
    __swift_project_boxed_opaque_existential_0(v1 + 4, v1[7]);
    uint64_t v52 = v16;
    uint64_t v18 = *(int *)(v16 + 24);
    uint64_t v54 = v12;
    uint64_t v19 = *(void (**)(char *, uint64_t))((char *)v12 + v18);
    id v20 = *(void (**)(void))(v17 + 32);
    id v21 = v19;
    int v22 = (void *)v55;
    v20();
    uint64_t v23 = v22;
    if (v22)
    {

      uint64_t v23 = 0;
    }

    char v59 = 0;
    MEMORY[0x1F4188790](v24);
    *(&v52 - 4) = (uint64_t)&v59;
    *(&v52 - 3) = (uint64_t)v1;
    uint64_t v25 = (uint64_t)v54;
    *(&v52 - 2) = (uint64_t)v54;
    (*(void (**)(void (*)()))(*v1 + 160))(sub_1DA7D23B4);
    if (v23)
    {
      if (qword_1EBE62CA0 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1DA989F38();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EBE6F318);
      id v32 = v23;
      id v33 = v23;
      uint64_t v34 = sub_1DA989F18();
      os_log_type_t v35 = sub_1DA98C528();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 138543362;
        id v38 = v23;
        uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v57 = v39;
        sub_1DA98C858();
        *uint64_t v37 = v39;

        _os_log_impl(&dword_1DA795000, v34, v35, "There was an error during archiving: %{public}@", v36, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
        swift_arrayDestroy();
        uint64_t v40 = v37;
        uint64_t v25 = (uint64_t)v54;
        MEMORY[0x1E0178DA0](v40, -1, -1);
        MEMORY[0x1E0178DA0](v36, -1, -1);
      }
      else
      {
      }
      sub_1DA7D0CDC(1, 0x6620747065636341, 0xEE002E64656C6961);
      swift_willThrow();
      return sub_1DA7D21BC(v25);
    }
    else
    {
      uint64_t v26 = v1[7];
      uint64_t v27 = v1[8];
      __swift_project_boxed_opaque_existential_0(v15, v26);
      uint64_t v28 = (char *)v1 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 40))((uint64_t)v1 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination, v26, v27);
      uint64_t v29 = v1[7];
      uint64_t v30 = v1[8];
      __swift_project_boxed_opaque_existential_0(v15, v29);
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v30 + 88))(v25 + *(int *)(v52 + 20), v28, v29, v30);
      uint64_t v57 = 0;
      unint64_t v58 = 0xE000000000000000;
      sub_1DA98CA18();
      swift_bridgeObjectRelease();
      uint64_t v57 = 0xD000000000000019;
      unint64_t v58 = 0x80000001DA99DA00;
      sub_1DA989368();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA7D0CDC(0, v57, v58);
      swift_bridgeObjectRelease();
      id v41 = objc_msgSend(self, sel_defaultManager);
      sub_1DA989448();
      uint64_t v42 = (void *)sub_1DA98C008();
      swift_bridgeObjectRelease();
      unsigned __int8 v43 = objc_msgSend(v41, sel_fileExistsAtPath_, v42);

      if ((v43 & 1) == 0)
      {
        if (qword_1EBE62CA0 != -1) {
          swift_once();
        }
        uint64_t v44 = sub_1DA989F38();
        __swift_project_value_buffer(v44, (uint64_t)qword_1EBE6F318);
        swift_retain_n();
        uint64_t v45 = sub_1DA989F18();
        os_log_type_t v46 = sub_1DA98C538();
        if (os_log_type_enabled(v45, v46))
        {
          uint64_t v47 = (uint8_t *)swift_slowAlloc();
          uint64_t v55 = swift_slowAlloc();
          uint64_t v57 = v55;
          *(_DWORD *)uint64_t v47 = 136446210;
          uint64_t v48 = sub_1DA989448();
          uint64_t v56 = sub_1DA8C5E00(v48, v49, &v57);
          sub_1DA98C858();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DA795000, v45, v46, "Destination file DOES NOT EXIST at %{public}s.", v47, 0xCu);
          uint64_t v50 = v55;
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v50, -1, -1);
          MEMORY[0x1E0178DA0](v47, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        uint64_t v25 = (uint64_t)v54;
      }
      sub_1DA7D21BC(v25);
      uint64_t v51 = sub_1DA989478();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v53, v28, v51);
    }
  }
}

void sub_1DA7CFA68(unsigned char *a1, void *a2, uint64_t a3)
{
  uint64_t v56 = 0;
  uint64_t v57 = a3;
  uint64_t v5 = sub_1DA989478();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v51 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA98B9E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E70);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v50 = (uint64_t)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v54 = (uint64_t *)((char *)&v48 - v19);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  int v22 = (char *)&v48 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v48 - v23;
  *a1 = 1;
  unint64_t v58 = a2;
  uint64_t v25 = (uint64_t)a2 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))((char *)&v48 - v23, *MEMORY[0x1E4F46D20], v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v24, 0, 1, v7);
  uint64_t v26 = (uint64_t)&v14[*(int *)(v12 + 56)];
  uint64_t v55 = v25;
  sub_1DA7A1F58(v25, (uint64_t)v14, &qword_1EBE66AF0);
  sub_1DA7A1F58((uint64_t)v24, v26, &qword_1EBE66AF0);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v27((uint64_t)v14, 1, v7) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v24, &qword_1EBE66AF0);
    if (v27(v26, 1, v7) == 1)
    {
      sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE66AF0);
      goto LABEL_8;
    }
LABEL_6:
    sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE58E70);
    uint64_t v28 = v56;
    goto LABEL_15;
  }
  sub_1DA7A1F58((uint64_t)v14, (uint64_t)v22, &qword_1EBE66AF0);
  if (v27(v26, 1, v7) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v24, &qword_1EBE66AF0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v22, v7);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v10, v26, v7);
  sub_1DA7D3460((unint64_t *)&qword_1EBE66AE8, MEMORY[0x1E4F46D40]);
  LODWORD(v49) = sub_1DA98BFF8();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v8 + 8);
  v29(v10, v7);
  sub_1DA7A1AE0((uint64_t)v24, &qword_1EBE66AF0);
  v29(v22, v7);
  sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE66AF0);
  if ((v49 & 1) == 0)
  {
    uint64_t v28 = v56;
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v48 = v58 + 4;
  sub_1DA7A1A44((uint64_t)(v58 + 4), (uint64_t)v61);
  uint64_t v31 = v62;
  uint64_t v30 = v63;
  __swift_project_boxed_opaque_existential_0(v61, v62);
  id v32 = (void (*)(void, void))v54;
  sub_1DA7A1F58(v55, (uint64_t)v54, &qword_1EBE66AF0);
  unint64_t v49 = v27;
  if (v27((uint64_t)v32, 1, v7) == 1)
  {
    __break(1u);
    goto LABEL_19;
  }
  id v33 = (void *)sub_1DA98B9B8();
  uint64_t v54 = *(uint64_t **)(v8 + 8);
  ((void (*)(void, uint64_t))v54)(v32, v7);
  uint64_t v34 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  uint64_t v28 = v56;
  uint64_t v35 = v57 + *(int *)(v34 + 20);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v30 + 64))(v33, v35, v31, v30);
  if (!v28)
  {

    goto LABEL_14;
  }

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  sub_1DA7A1A44((uint64_t)v48, (uint64_t)v61);
  uint64_t v36 = v62;
  uint64_t v37 = v63;
  __swift_project_boxed_opaque_existential_0(v61, v62);
  uint64_t v39 = v51;
  uint64_t v38 = v52;
  uint64_t v40 = v35;
  uint64_t v41 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v40, v53);
  uint64_t v42 = v50;
  sub_1DA7A1F58(v55, v50, &qword_1EBE66AF0);
  if (v49(v42, 1, v7) == 1)
  {
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v43 = v42;
  uint64_t v44 = sub_1DA98B9D8();
  ((void (*)(uint64_t, uint64_t))v54)(v43, v7);
  uint64_t v59 = v44;
  char v60 = 0;
  uint64_t v28 = 0;
  (*(void (**)(char *, unint64_t, unint64_t, uint64_t *, void, void, void, uint64_t, uint64_t))(v37 + 48))(v39, 0xD00000000000002DLL, 0x80000001DA99DB30, &v59, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB580], MEMORY[0x1E4FBB558], v36, v37);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v41);
LABEL_14:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
LABEL_15:
  uint64_t v45 = v58[7];
  uint64_t v46 = v58[8];
  __swift_project_boxed_opaque_existential_0(v58 + 4, v45);
  uint64_t v47 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  (*(void (**)(void, uint64_t, uint64_t))(v46 + 32))(*(void *)(v57 + *(int *)(v47 + 28)), v45, v46);
  if (v28) {
}
  }

uint64_t sub_1DA7D0194()
{
  return sub_1DA7D0CDC(0, 0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DA7D01B0(uint64_t a1, unint64_t a2)
{
  return sub_1DA7D0CDC(0, a1, a2);
}

uint64_t sub_1DA7D01C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v81 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v87 = (uint8_t **)((char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v86 = sub_1DA98B9E8();
  uint64_t v85 = *(void *)(v86 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v86);
  uint64_t v84 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v82 = (char *)&v73 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  char v83 = (char *)&v73 - v9;
  MEMORY[0x1F4188790](v8);
  os_log_type_t v88 = (char *)&v73 - v10;
  uint64_t v92 = sub_1DA989478();
  uint64_t v11 = *(void *)(v92 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v92);
  uint64_t v89 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v73 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v73 - v17;
  uint64_t v19 = v1[7];
  uint64_t v20 = v1[8];
  __swift_project_boxed_opaque_existential_0(v1 + 4, v19);
  uint64_t v90 = v1;
  sub_1DA989418();
  uint64_t v21 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 8))(v16, v19, v20);
  if (v21) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v92);
  }
  uint64_t v91 = v1 + 4;
  uint64_t v77 = v11;
  uint64_t v23 = *(void (**)(void, void))(v11 + 8);
  uint64_t v24 = v92;
  uint64_t v78 = v11 + 8;
  uint64_t v79 = v23;
  v23(v16, v92);
  sub_1DA989398();
  uint64_t v25 = v89;
  uint64_t v80 = v18;
  sub_1DA9893F8();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA990050;
  uint64_t v27 = (void *)*MEMORY[0x1E4F28330];
  *(void *)(inited + 64) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 32) = v27;
  *(void *)(inited + 40) = 438;
  id v28 = v27;
  unint64_t v29 = sub_1DA79C6E0(inited);
  uint64_t v30 = (void (*)(void, void, void))v87;
  sub_1DA7A1F58((uint64_t)v90 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel, (uint64_t)v87, &qword_1EBE66AF0);
  uint64_t v31 = v85;
  uint64_t v32 = v86;
  if ((*(unsigned int (**)(void, uint64_t, uint64_t))(v85 + 48))(v30, 1, v86) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v30, &qword_1EBE66AF0);
  }
  else
  {
    unint64_t v76 = v29;
    id v33 = v88;
    (*(void (**)(char *, void, uint64_t))(v31 + 32))(v88, v30, v32);
    uint64_t v34 = v31;
    if (qword_1EBE62CA0 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1DA989F38();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EBE6F318);
    uint64_t v36 = v83;
    uint64_t v87 = *(uint8_t ***)(v31 + 16);
    ((void (*)(char *, char *, uint64_t))v87)(v83, v33, v32);
    uint64_t v37 = sub_1DA989F18();
    os_log_type_t v38 = sub_1DA98C518();
    if (os_log_type_enabled(v37, v38))
    {
      os_log_t v75 = v37;
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      *(void *)&long long v94 = v74;
      uint64_t v73 = v39;
      *(_DWORD *)uint64_t v39 = 136446210;
      sub_1DA7D3460(&qword_1EBE58E60, MEMORY[0x1E4F46D40]);
      uint64_t v40 = sub_1DA98CDD8();
      *(void *)&v93[0] = sub_1DA8C5E00(v40, v41, (uint64_t *)&v94);
      id v33 = v88;
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      char v83 = *(char **)(v34 + 8);
      ((void (*)(char *, uint64_t))v83)(v36, v32);
      uint64_t v37 = v75;
      os_log_type_t v42 = v38;
      uint64_t v43 = v73;
      _os_log_impl(&dword_1DA795000, v75, v42, "Specific FileDataProtectionLevel requested: %{public}s", v73, 0xCu);
      uint64_t v44 = v74;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v44, -1, -1);
      MEMORY[0x1E0178DA0](v43, -1, -1);
    }
    else
    {
      char v83 = *(char **)(v34 + 8);
      ((void (*)(char *, uint64_t))v83)(v36, v32);
    }

    uint64_t v45 = v82;
    uint64_t v46 = (void *)*MEMORY[0x1E4F28370];
    uint64_t v47 = v84;
    uint64_t v48 = (void (*)(char *, char *, uint64_t))v87;
    ((void (*)(char *, char *, uint64_t))v87)(v84, v33, v32);
    if ((*(unsigned int (**)(char *, uint64_t))(v34 + 88))(v47, v32) == *MEMORY[0x1E4F46D20])
    {
      (*(void (**)(char *, void, uint64_t))(v34 + 104))(v45, *MEMORY[0x1E4F46D28], v32);
      id v49 = v46;
      uint64_t v24 = v92;
      uint64_t v50 = v32;
      uint64_t v51 = (void (*)(char *, uint64_t))v83;
    }
    else
    {
      v48(v45, v33, v32);
      uint64_t v50 = v32;
      id v52 = v46;
      uint64_t v51 = (void (*)(char *, uint64_t))v83;
      ((void (*)(char *, uint64_t))v83)(v47, v32);
      uint64_t v24 = v92;
    }
    uint64_t v53 = sub_1DA98B9B8();
    v51(v45, v50);
    type metadata accessor for FileProtectionType(0);
    uint64_t v95 = v54;
    *(void *)&long long v94 = v53;
    sub_1DA7A1930(&v94, v93);
    unint64_t v55 = v76;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v96 = v55;
    sub_1DA916D5C(v93, v46, isUniquelyReferenced_nonNull_native);
    unint64_t v29 = v96;

    swift_bridgeObjectRelease();
    v51(v88, v50);
    uint64_t v25 = v89;
  }
  uint64_t v57 = v90;
  unint64_t v58 = v91;
  uint64_t v59 = v90[7];
  uint64_t v60 = v90[8];
  __swift_project_boxed_opaque_existential_0(v91, v59);
  (*(void (**)(char *, unint64_t, uint64_t, uint64_t))(v60 + 80))(v25, v29, v59, v60);
  swift_bridgeObjectRelease();
  uint64_t v61 = v57[7];
  uint64_t v62 = v57[8];
  __swift_project_boxed_opaque_existential_0(v58, v61);
  uint64_t v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 24))(v25, v61, v62);
  unint64_t v64 = v58;
  uint64_t v65 = v57[7];
  uint64_t v66 = v57[8];
  __swift_project_boxed_opaque_existential_0(v64, v65);
  uint64_t v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 16))(v25, v65, v66);
  uint64_t v68 = v80;
  uint64_t v92 = v67;
  if (qword_1EBE62C98 != -1) {
    swift_once();
  }
  id v69 = (id)qword_1EBE6F360;
  sub_1DA9893A8();
  uint64_t v70 = (int *)type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  uint64_t v71 = v81;
  sub_1DA989E48();
  unsigned int v72 = *(void (**)(uint64_t, char *, uint64_t))(v77 + 32);
  v72(v71, v68, v24);
  uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v72)(v71 + v70[5], v25, v24);
  *(void *)(v71 + v70[6]) = v63;
  *(void *)(v71 + v70[7]) = v92;
  return result;
}

uint64_t type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE5A568);
}

uint64_t sub_1DA7D0C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A578);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA7D0CDC(int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v66 = a2;
  int v67 = a1;
  uint64_t v6 = sub_1DA989E78();
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v70 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v68 = &v61[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A578);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v71 = &v61[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v61[-v11];
  uint64_t v13 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = &v61[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = &v61[-v19];
  MEMORY[0x1F4188790](v18);
  int v22 = &v61[-v21];
  uint64_t v23 = (uint64_t)v4 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
  swift_beginAccess();
  sub_1DA7A1F58(v23, (uint64_t)v12, &qword_1EBE5A578);
  uint64_t v24 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48);
  unsigned int v72 = (int *)v13;
  if (v24(v12, 1, v13) == 1) {
    return sub_1DA7A1AE0((uint64_t)v12, &qword_1EBE5A578);
  }
  sub_1DA7D2350((uint64_t)v12, (uint64_t)v22);
  if (qword_1EBE62CA0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1DA989F38();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBE6F318);
  sub_1DA7D33A8((uint64_t)v22, (uint64_t)v20);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v27 = sub_1DA989F18();
  os_log_type_t v28 = sub_1DA98C548();
  int v29 = v28;
  BOOL v30 = os_log_type_enabled(v27, v28);
  uint64_t v64 = v23;
  uint64_t v65 = v14;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    uint64_t v73 = v63;
    *(_DWORD *)uint64_t v31 = 136446722;
    int v62 = v29;
    uint64_t v33 = v4[2];
    unint64_t v32 = v4[3];
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_1DA8C5E00(v33, v32, &v73);
    sub_1DA98C858();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    sub_1DA7D33A8((uint64_t)v20, (uint64_t)v17);
    uint64_t v74 = 60;
    unint64_t v75 = 0xE100000000000000;
    sub_1DA989458();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    uint64_t v34 = v74;
    unint64_t v35 = v75;
    sub_1DA7D21BC((uint64_t)v17);
    uint64_t v74 = sub_1DA8C5E00(v34, v35, &v73);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA7D21BC((uint64_t)v20);
    *(_WORD *)(v31 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_1DA8C5E00(v66, a3, &v73);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v27, (os_log_type_t)v62, "Destroy promise for %{public}s - %{public}s for reason: %{public}s", (uint8_t *)v31, 0x20u);
    uint64_t v36 = v63;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v36, -1, -1);
    MEMORY[0x1E0178DA0](v31, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_1DA7D21BC((uint64_t)v20);

    swift_bridgeObjectRelease_n();
  }
  sub_1DA98C6A8();
  if (qword_1EBE62C98 != -1) {
    swift_once();
  }
  uint64_t v37 = v72;
  uint64_t v39 = v68;
  uint64_t v38 = v69;
  uint64_t v40 = v70;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v69 + 16))(v68, &v22[v72[8]], v70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58FD8);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1DA990050;
  unint64_t v42 = sub_1DA7D340C();
  BOOL v43 = (v67 & 1) == 0;
  uint64_t v44 = 20302;
  if (v67) {
    uint64_t v44 = 5457241;
  }
  unint64_t v45 = 0xE200000000000000;
  *(void *)(v41 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v41 + 64) = v42;
  if (!v43) {
    unint64_t v45 = 0xE300000000000000;
  }
  *(void *)(v41 + 32) = v44;
  *(void *)(v41 + 40) = v45;
  sub_1DA989E28();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v39, v40);
  uint64_t v46 = v4 + 4;
  uint64_t v47 = v4[8];
  __swift_project_boxed_opaque_existential_0(v4 + 4, v4[7]);
  uint64_t v48 = *(void **)&v22[v37[6]];
  id v49 = *(void (**)(void))(v47 + 32);
  id v50 = v48;
  v49();

  uint64_t v51 = v4[8];
  __swift_project_boxed_opaque_existential_0(v4 + 4, v4[7]);
  id v52 = *(void (**)(void))(v51 + 32);
  id v53 = *(id *)&v22[v72[7]];
  v52();
  uint64_t v54 = (uint64_t)v71;
  uint64_t v55 = v64;

  uint64_t v56 = v4[7];
  uint64_t v57 = v4[8];
  __swift_project_boxed_opaque_existential_0(v4 + 4, v56);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v57 + 40))(&v22[v72[5]], v56, v57);
  uint64_t v58 = v65;
  uint64_t v60 = v4[7];
  uint64_t v59 = v4[8];
  __swift_project_boxed_opaque_existential_0(v46, v60);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v59 + 40))(v22, v60, v59);
  (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v58 + 56))(v54, 1, 1, v72);
  swift_beginAccess();
  sub_1DA7D0C74(v54, v55);
  swift_endAccess();
  return sub_1DA7D21BC((uint64_t)v22);
}

uint64_t DataProtectedArchiveFilePromise.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination;
  uint64_t v2 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel, &qword_1EBE66AF0);
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates, &qword_1EBE5A578);
  return v0;
}

uint64_t DataProtectedArchiveFilePromise.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination;
  uint64_t v2 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel, &qword_1EBE66AF0);
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates, &qword_1EBE5A578);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA7D1630()
{
  return sub_1DA7CEDF4();
}

uint64_t sub_1DA7D1648@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7CF1A4(a1);
}

uint64_t sub_1DA7D1660@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *a1 = *(void *)(*(void *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void sub_1DA7D1670(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v68 = a2;
  uint64_t v69 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v5 - 8);
  int v67 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1DA989478();
  uint64_t v80 = *(void *)(v75 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v75);
  uint64_t v65 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v74 = (char *)&v57 - v9;
  uint64_t v73 = sub_1DA989638();
  uint64_t v10 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A578);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v66 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v57 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v57 - v19;
  uint64_t v21 = v4 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
  swift_beginAccess();
  uint64_t v72 = v21;
  sub_1DA7A1F58(v21, (uint64_t)v20, &qword_1EBE5A578);
  uint64_t v22 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  uint64_t v70 = v23 + 48;
  uint64_t v71 = v24;
  if (v24(v20, 1, v22) == 1)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_1DA98B878();
  id v25 = *(id *)&v20[*(int *)(v22 + 28)];
  sub_1DA7D21BC((uint64_t)v20);
  uint64_t v26 = sub_1DA98B868();

  if (v3) {
    return;
  }
  uint64_t v64 = 0;
  ((void (*)(void))v69)();
  uint64_t v78 = sub_1DA98BE38();
  uint64_t v79 = MEMORY[0x1E4F46EE0];
  v77[0] = v26;
  uint64_t v63 = v26;
  swift_retain();
  sub_1DA7D1E24(v77, (uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  uint64_t v59 = v4 + 32;
  sub_1DA7A1A44(v4 + 32, (uint64_t)v77);
  uint64_t v27 = v79;
  uint64_t v69 = v78;
  uint64_t v68 = __swift_project_boxed_opaque_existential_0(v77, v78);
  sub_1DA7A1F58(v72, (uint64_t)v18, &qword_1EBE5A578);
  if (v71(v18, 1, v22) == 1)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  os_log_type_t v28 = &v18[*(int *)(v22 + 20)];
  int v29 = (void *)(v80 + 16);
  BOOL v30 = v74;
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
  v58(v74, v28, v75);
  sub_1DA7D21BC((uint64_t)v18);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v32 = (uint64_t)v67;
  uint64_t v33 = v12;
  uint64_t v61 = v12;
  uint64_t v34 = v10;
  uint64_t v35 = v73;
  v31(v67, v33, v73);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v32, 0, 1, v35);
  int v62 = *(void (**)(char *, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 48);
  uint64_t v60 = v22;
  uint64_t v36 = v27;
  uint64_t v37 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  uint64_t v38 = sub_1DA7D3460(&qword_1EBE58918, MEMORY[0x1E4F27928]);
  uint64_t v39 = sub_1DA7D3460(&qword_1EBE58910, v37);
  uint64_t v40 = v64;
  v62(v30, 0xD00000000000001DLL, 0x80000001DA99DAC0, v32, v35, v38, v39, v69, v36);
  if (v40)
  {
    swift_release();
    sub_1DA7A1AE0(v32, &qword_1EBE61CC0);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v74, v75);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v61, v35);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    return;
  }
  uint64_t v41 = v60;
  uint64_t v68 = v29;
  uint64_t v69 = v34;
  sub_1DA7A1AE0(v32, &qword_1EBE61CC0);
  uint64_t v42 = v80 + 8;
  BOOL v43 = *(void (**)(char *, uint64_t))(v80 + 8);
  v43(v74, v75);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F6C8]), sel_init);
  if (v44)
  {
    unint64_t v45 = v44;
    uint64_t v64 = 0;
    uint64_t v80 = v42;
    id v46 = objc_msgSend(v44, sel_stringRepresentation);

    uint64_t v47 = sub_1DA98C038();
    uint64_t v49 = v48;

    sub_1DA7A1A44(v59, (uint64_t)v77);
    uint64_t v50 = v78;
    uint64_t v51 = v79;
    __swift_project_boxed_opaque_existential_0(v77, v78);
    uint64_t v52 = v66;
    sub_1DA7A1F58(v72, v66, &qword_1EBE5A578);
    if (v71((char *)v52, 1, v41) != 1)
    {
      uint64_t v53 = v52 + *(int *)(v41 + 20);
      uint64_t v54 = v65;
      uint64_t v55 = v75;
      v58(v65, (char *)v53, v75);
      sub_1DA7D21BC(v52);
      v76[0] = v47;
      v76[1] = v49;
      (*(void (**)(char *, unint64_t, unint64_t, void *, void, void, void, uint64_t, uint64_t))(v51 + 48))(v54, 0xD00000000000001FLL, 0x80000001DA99DAE0, v76, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1D8], MEMORY[0x1E4FBB1A8], v50, v51);
      uint64_t v56 = v73;
      swift_bridgeObjectRelease();
      swift_release();
      v43(v54, v55);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v61, v56);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
      return;
    }
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t))(v69 + 8))(v61, v73);
  swift_release();
}

uint64_t sub_1DA7D1E24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v17 = sub_1DA989178();
  uint64_t v3 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DA98BA68();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1DA98BB48();
  sub_1DA98BA58();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1DA7A1A44((uint64_t)a1, (uint64_t)v19);
  uint64_t v13 = sub_1DA989638();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
  {
    __swift_project_boxed_opaque_existential_0(v19, v19[3]);
    sub_1DA98BB98();
    sub_1DA989168();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
    sub_1DA7A1AE0((uint64_t)v8, &qword_1EBE61CC0);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v18, v8, v13);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_1DA7D20DC()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination;
  uint64_t v2 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel, &qword_1EBE66AF0);
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates, &qword_1EBE5A578);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA7D21BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DA7D2218(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62B78);
  uint64_t v2 = sub_1DA98CC08();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DA7A1F58(v6, (uint64_t)&v15, (uint64_t *)&unk_1EBE58EC0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1DA7D2420(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1DA7A1930(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DA7D2350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DA7D23B4()
{
  sub_1DA7CFA68(*(unsigned char **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1DA7D23C0(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1DA7D23F8(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_1DA7D2420(uint64_t a1, uint64_t a2)
{
  sub_1DA98CF18();
  sub_1DA98C108();
  uint64_t v4 = sub_1DA98CF68();

  return sub_1DA7D2498(a1, a2, v4);
}

unint64_t sub_1DA7D2498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1DA98CE58() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1DA98CE58() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_1DA98CE58()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

void sub_1DA7D25E0(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_1DA98C858();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    *uint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t dispatch thunk of FilePromise.open()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FilePromise.accept()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FilePromise.reject(withReason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1DA7D26FC()
{
  return type metadata accessor for DataProtectedArchiveFilePromise(0);
}

uint64_t type metadata accessor for DataProtectedArchiveFilePromise(uint64_t a1)
{
  return sub_1DA7A88D4(a1, qword_1EBE5A598);
}

void sub_1DA7D2724()
{
  sub_1DA989478();
  if (v0 <= 0x3F)
  {
    sub_1DA7D2944(319, (unint64_t *)&qword_1EBE58E68, MEMORY[0x1E4F46D40]);
    if (v1 <= 0x3F)
    {
      sub_1DA7D2944(319, &qword_1EBE5A580, (void (*)(uint64_t))type metadata accessor for DataProtectedArchiveFilePromise.Intermediates);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for DataProtectedArchiveFilePromise(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DataProtectedArchiveFilePromise);
}

uint64_t dispatch thunk of DataProtectedArchiveFilePromise.open()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DataProtectedArchiveFilePromise.accept()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DataProtectedArchiveFilePromise.reject()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DataProtectedArchiveFilePromise.reject(withReason:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

void sub_1DA7D2944(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DA98C838();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DA7D2998()
{
  return type metadata accessor for WidgetArchiveFilePromise(0);
}

uint64_t type metadata accessor for WidgetArchiveFilePromise(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE5A4E0);
}

uint64_t sub_1DA7D29C0()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_1DA7D29F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DA989478();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    uint64_t v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    uint64_t v12 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v12;
    uint64_t v13 = a3[8];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1DA989E78();
    long long v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    id v18 = v11;
    id v19 = v12;
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_1DA7D2B50(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DA989478();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);

  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = sub_1DA989E78();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_1DA7D2C3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DA989478();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v10;
  uint64_t v11 = *(void **)(a2 + v9);
  *(void *)(a1 + v9) = v11;
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1DA989E78();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  id v17 = v10;
  id v18 = v11;
  v16(v13, v14, v15);
  return a1;
}

uint64_t sub_1DA7D2D44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DA989478();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v8);
  uint64_t v10 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = v9;
  id v11 = v9;

  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)(a2 + v12);
  uint64_t v14 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = v13;
  id v15 = v13;

  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1DA989E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t sub_1DA7D2E54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DA989478();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1DA989E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t sub_1DA7D2F48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DA989478();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);

  uint64_t v10 = a3[7];
  uint64_t v11 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);

  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1DA989E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_1DA7D3050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7D3064);
}

uint64_t sub_1DA7D3064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989478();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1DA989E78();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1DA7D3190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7D31A4);
}

uint64_t sub_1DA7D31A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DA989478();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1DA989E78();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1DA7D32D0()
{
  uint64_t result = sub_1DA989478();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DA989E78();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DA7D33A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DA7D340C()
{
  unint64_t result = qword_1EBE58E78;
  if (!qword_1EBE58E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE58E78);
  }
  return result;
}

uint64_t sub_1DA7D3460(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of EnvironmentProvidingFactory.system.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EnvironmentProvidingFactory.makeProvider(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t WatchCompactJindoView.init(leadingView:trailingView:spacing:smartStackPlatterPadding:launchRequestHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  uint64_t v18 = (int *)type metadata accessor for WatchCompactJindoView();
  uint64_t v19 = (void *)(a7 + v18[16]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a7, a1, a5);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7 + v18[13], a2, a6);
  *(double *)(a7 + v18[14]) = a8;
  *(double *)(a7 + v18[15]) = a9;
  *uint64_t v19 = a3;
  v19[1] = a4;
  return result;
}

uint64_t type metadata accessor for WatchCompactJindoView()
{
  return swift_getGenericMetadata();
}

uint64_t WatchCompactJindoView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  swift_getTupleTypeMetadata3();
  sub_1DA98B3F8();
  swift_getWitnessTable();
  sub_1DA98B2A8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E5A88);
  sub_1DA98A388();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v46 = sub_1DA7D3A74();
  uint64_t v35 = MEMORY[0x1E4F3CC28];
  swift_getWitnessTable();
  uint64_t v6 = sub_1DA98B318();
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = sub_1DA98A388();
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  int v29 = (char *)&v27 - v10;
  uint64_t v11 = sub_1DA98A388();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  BOOL v30 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v31 = (char *)&v27 - v14;
  uint64_t v37 = v3;
  uint64_t v38 = v4;
  uint64_t v28 = a1;
  long long v39 = *(_OWORD *)(a1 + 32);
  uint64_t v40 = v2;
  sub_1DA98A9B8();
  uint64_t v15 = v8;
  sub_1DA98B308();
  sub_1DA98AD98();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = v29;
  sub_1DA98B148();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v6);
  uint64_t v18 = (uint64_t *)(v2 + *(int *)(v28 + 64));
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v43 = v16;
  uint64_t v44 = MEMORY[0x1E4F3CAA8];
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v22 = v30;
  sub_1DA8A4F6C(v19, v20, v9);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v9);
  unint64_t v23 = sub_1DA7D4070();
  uint64_t v41 = v21;
  unint64_t v42 = v23;
  swift_getWitnessTable();
  uint64_t v24 = v31;
  sub_1DA875B4C(v22);
  id v25 = *(void (**)(char *, uint64_t))(v34 + 8);
  v25(v22, v11);
  sub_1DA875B4C(v24);
  return ((uint64_t (*)(char *, uint64_t))v25)(v24, v11);
}

unint64_t sub_1DA7D3A74()
{
  unint64_t result = qword_1EA8E5A90;
  if (!qword_1EA8E5A90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E5A88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5A90);
  }
  return result;
}

uint64_t sub_1DA7D3AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v23 = a3;
  uint64_t v24 = a1;
  uint64_t v27 = a6;
  swift_getTupleTypeMetadata3();
  sub_1DA98B3F8();
  swift_getWitnessTable();
  uint64_t v7 = sub_1DA98B2A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E5A88);
  uint64_t v11 = sub_1DA98A388();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v22 - v16;
  uint64_t v28 = a2;
  uint64_t v29 = v23;
  uint64_t v30 = v25;
  uint64_t v31 = v26;
  uint64_t v32 = v24;
  sub_1DA98A898();
  sub_1DA98B298();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DA98B088();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  unint64_t v19 = sub_1DA7D3A74();
  uint64_t v33 = WitnessTable;
  unint64_t v34 = v19;
  swift_getWitnessTable();
  sub_1DA875B4C(v15);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v15, v11);
  sub_1DA875B4C(v17);
  return ((uint64_t (*)(char *, uint64_t))v20)(v17, v11);
}

uint64_t sub_1DA7D3DB4()
{
  return sub_1DA7D5028((uint64_t (*)(void, void, void, void, void))sub_1DA7D3AD0);
}

uint64_t sub_1DA7D3DCC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v35 = a6;
  uint64_t v11 = *(a3 - 1);
  uint64_t v12 = MEMORY[0x1F4188790](a1);
  unint64_t v34 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v14);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v32 - v23;
  uint64_t v33 = v25;
  sub_1DA875B4C(v22);
  unint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v26 = type metadata accessor for WatchCompactJindoView();
  uint64_t v27 = *(void *)(a1 + *(int *)(v26 + 56));
  sub_1DA875B4C(a1 + *(int *)(v26 + 52));
  (*(void (**)(char *, char *, char *))(v18 + 16))(v21, v24, a2);
  uint64_t v40 = v27;
  char v41 = 0;
  unint64_t v42 = v21;
  uint64_t v43 = &v40;
  uint64_t v28 = v34;
  (*(void (**)(char *, char *, uint64_t *))(v11 + 16))(v34, v16, a3);
  uint64_t v44 = v28;
  v39[0] = a2;
  v39[1] = MEMORY[0x1E4F3EDA0];
  v39[2] = a3;
  uint64_t v36 = v33;
  uint64_t v37 = MEMORY[0x1E4F3ED90];
  uint64_t v38 = a5;
  sub_1DA97619C((uint64_t)&v42, 3uLL, (uint64_t)v39);
  uint64_t v29 = *(void (**)(char *, uint64_t *))(v11 + 8);
  v29(v16, a3);
  uint64_t v30 = *(void (**)(char *, char *))(v18 + 8);
  v30(v24, a2);
  v29(v28, a3);
  return ((uint64_t (*)(char *, char *))v30)(v21, a2);
}

unint64_t sub_1DA7D4070()
{
  unint64_t result = qword_1EA8E5A98[0];
  if (!qword_1EA8E5A98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA8E5A98);
  }
  return result;
}

uint64_t sub_1DA7D40C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA7D410C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

uint64_t sub_1DA7D4114()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DA7D41FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((((((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    uint64_t v19 = (void *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v19 = *v20;
    uint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v21 = *v22;
    unint64_t v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v24 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
      return v4;
    }
    uint64_t v25 = *(void *)(v24 + 8);
    *(void *)unint64_t v23 = *(void *)v24;
    *(void *)(v23 + 8) = v25;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DA7D43E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t))(v6 + 8))(v8);
  if (*(void *)((((((*(void *)(v7 + 56) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA7D44D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  uint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v18;
  unint64_t v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v20 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
  }
  else
  {
    uint64_t v21 = *(void *)(v20 + 8);
    *(void *)unint64_t v19 = *(void *)v20;
    *(void *)(v19 + 8) = v21;
    swift_retain();
  }
  return a1;
}

uint64_t sub_1DA7D45E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  uint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v18;
  unint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = (unint64_t *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = *v20;
  if (*v19 < 0xFFFFFFFFuLL)
  {
    if (v21 >= 0xFFFFFFFF)
    {
      unint64_t v23 = v20[1];
      *unint64_t v19 = v21;
      v19[1] = v23;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
    return a1;
  }
  if (v21 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v22 = v20[1];
  *unint64_t v19 = v21;
  v19[1] = v22;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DA7D4730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  uint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v18;
  unint64_t v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (uint64_t *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = *v20;
  if ((unint64_t)*v20 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
  }
  else
  {
    uint64_t v22 = v20[1];
    *(void *)unint64_t v19 = v21;
    *(void *)(v19 + 8) = v22;
  }
  return a1;
}

uint64_t sub_1DA7D483C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  uint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v18;
  unint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = (unint64_t *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = *v20;
  if (*v19 < 0xFFFFFFFFuLL)
  {
    if (v21 >= 0xFFFFFFFF)
    {
      unint64_t v23 = v20[1];
      *unint64_t v19 = v21;
      v19[1] = v23;
      return a1;
    }
LABEL_7:
    *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
    return a1;
  }
  if (v21 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v22 = v20[1];
  *unint64_t v19 = v21;
  v19[1] = v22;
  swift_release();
  return a1;
}

uint64_t sub_1DA7D4980(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (v10 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  uint64_t v12 = *(void *)(v7 + 64) + 7;
  if (v10 < a2)
  {
    unint64_t v13 = ((((((v12 + (v11 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unsigned int v14 = a2 - v10;
    uint64_t v15 = v13 & 0xFFFFFFF8;
    if ((v13 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = v14 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v13);
        if (!v19) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v13);
        if (v19) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DA7D4B80);
      case 4:
        int v19 = *(int *)((char *)a1 + v13);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if (v15)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v10 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v6 == v10) {
    return (*(uint64_t (**)(int *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
  }
  unint64_t v23 = ((unint64_t)a1 + v11) & ~v9;
  if (v8 == v10) {
    return (*(uint64_t (**)(unint64_t))(v7 + 48))(v23);
  }
  unint64_t v24 = *(void *)((((((v12 + v23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v24 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  if ((v24 + 1) >= 2) {
    return v24;
  }
  else {
    return 0;
  }
}

void sub_1DA7D4B94(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v12 = 2147483646;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  unint64_t v15 = ((((((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v12 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_19:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_48;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v7 == v12)
            {
              unint64_t v23 = *(void (**)(void))(v6 + 56);
              v23();
            }
            else
            {
              unint64_t v24 = (unint64_t)&a1[v13] & ~v11;
              if (v10 == v12)
              {
                uint64_t v25 = *(void (**)(unint64_t))(v9 + 56);
                v25(v24);
              }
              else
              {
                uint64_t v26 = (void *)((((((v14 + v24) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                if (a2 > 0x7FFFFFFE)
                {
                  *uint64_t v26 = 0;
                  v26[1] = 0;
                  *(_DWORD *)uint64_t v26 = a2 - 0x7FFFFFFF;
                }
                else
                {
                  *uint64_t v26 = a2;
                }
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v12;
    if (((((((v14 + (v13 & ~v11)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_19;
    }
  }
  if (((((((v14 + (v13 & ~v11)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v21 = v20;
  }
  else {
    int v21 = 1;
  }
  if (((((((v14 + (v13 & ~v11)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    unsigned int v22 = ~v12 + a2;
    bzero(a1, ((((((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x1DA7D4E5CLL);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_1DA7D4E84()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DA7D5010()
{
  return sub_1DA7D5028((uint64_t (*)(void, void, void, void, void))sub_1DA7D3DCC);
}

uint64_t sub_1DA7D5028(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1DA7D5040@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63810);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63520);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_1DA98A898();
  *((void *)v6 + 1) = 0;
  unsigned char v6[16] = 1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63448);
  sub_1DA7D5210(a1, (uint64_t)&v6[*(int *)(v10 + 44)]);
  sub_1DA98A288();
  sub_1DA98A288();
  uint64_t v11 = *(void **)(a1 + *(int *)(type metadata accessor for InlineTextView(0) + 20));
  if (!v11) {
    goto LABEL_5;
  }
  id v12 = objc_msgSend(v11, sel_horizontalAlignment);
  if (v12 == (id)1)
  {
    sub_1DA98B3B8();
    goto LABEL_7;
  }
  if (v12 == (id)2) {
    sub_1DA98B3C8();
  }
  else {
LABEL_5:
  }
    sub_1DA98B3A8();
LABEL_7:
  sub_1DA98A278();
  sub_1DA7A1F58((uint64_t)v6, (uint64_t)v9, &qword_1EBE63810);
  uint64_t v13 = &v9[*(int *)(v7 + 36)];
  long long v14 = v16[1];
  *(_OWORD *)uint64_t v13 = v16[0];
  *((_OWORD *)v13 + 1) = v14;
  *((_OWORD *)v13 + 2) = v16[2];
  sub_1DA7A1AE0((uint64_t)v6, &qword_1EBE63810);
  return sub_1DA7BA440((uint64_t)v9, a2, &qword_1EBE63520);
}

uint64_t sub_1DA7D5210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63418);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v49 = (uint64_t *)((char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63420);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v46 = (uint64_t *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v50 = sub_1DA989638();
  uint64_t v48 = *(void *)(v50 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v50);
  uint64_t v47 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v43 = (char *)&v40 - v9;
  uint64_t v10 = sub_1DA989F38();
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v11 = v40;
  uint64_t v41 = v10;
  MEMORY[0x1F4188790](v10);
  unint64_t v42 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for InlineDateModifier(0) - 8;
  MEMORY[0x1F4188790](v45);
  uint64_t v44 = (uint64_t *)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63470);
  MEMORY[0x1F4188790](v15);
  unsigned int v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DA98AD28();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a1, v18);
  uint64_t v19 = type metadata accessor for InlineTextView(0);
  int v20 = *(void **)(a1 + *(int *)(v19 + 20));
  uint64_t v21 = a1 + *(int *)(v19 + 24);
  uint64_t v22 = type metadata accessor for MetadataInlineView(0);
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v24 = v41;
  v23(&v17[*(int *)(v22 + 24)], v21, v41);
  *(void *)&v17[*(int *)(v22 + 20)] = v20;
  id v25 = v20;
  sub_1DA98AC48();
  sub_1DA98B658();
  uint64_t v26 = v42;
  v23(v42, v21, v24);
  id v27 = v25;
  uint64_t v28 = v43;
  sub_1DA989628();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = (uint64_t)v46;
  *unint64_t v46 = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633F8);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = (uint64_t)v49;
  uint64_t *v49 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = (uint64_t)v44;
  *uint64_t v44 = v20;
  uint64_t v34 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v33 + *(int *)(v45 + 28), v26, v24);
  uint64_t v35 = v48;
  uint64_t v36 = v50;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v47, v28, v50);
  sub_1DA98B268();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v36);
  sub_1DA7BA440(v30, v33 + *(int *)(v34 + 36), &qword_1EBE63420);
  sub_1DA7BA440(v32, v33 + *(int *)(v34 + 40), &qword_1EBE63418);
  uint64_t v37 = v51;
  sub_1DA7A1F58((uint64_t)v17, v51, &qword_1EBE63470);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63550);
  sub_1DA7DFE70(v33, v37 + *(int *)(v38 + 36), type metadata accessor for InlineDateModifier);
  return sub_1DA7A1AE0((uint64_t)v17, &qword_1EBE63470);
}

uint64_t sub_1DA7D573C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v27 = a4;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE635D8);
  MEMORY[0x1F4188790](v26);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63778);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1DA98A378();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE634E0);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  unsigned int v17 = (uint64_t *)((char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v24 - v18;
  if (a1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4F3CBD8], v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v9 + *(int *)(v7 + 28), v13, v10);
    uint64_t *v9 = KeyPath;
    sub_1DA7A1F58((uint64_t)v9, (uint64_t)v17 + *(int *)(v14 + 36), &qword_1EBE63778);
    uint64_t v21 = v25;
    *unsigned int v17 = v24;
    v17[1] = v21;
    swift_retain();
    sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE63778);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1DA7BA440((uint64_t)v17, (uint64_t)v19, &qword_1EBE634E0);
    sub_1DA7A1F58((uint64_t)v19, (uint64_t)v6, &qword_1EBE634E0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63458);
    sub_1DA7DFC40();
    sub_1DA7A0410(&qword_1EBE63450, &qword_1EBE63458);
    sub_1DA98AA68();
    return sub_1DA7A1AE0((uint64_t)v19, &qword_1EBE634E0);
  }
  else
  {
    uint64_t v23 = v25;
    *uint64_t v6 = v24;
    v6[1] = v23;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63458);
    sub_1DA7DFC40();
    sub_1DA7A0410(&qword_1EBE63450, &qword_1EBE63458);
    return sub_1DA98AA68();
  }
}

uint64_t sub_1DA7D5AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1 - 8;
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63670);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7DFB94(v3, (uint64_t)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for InlineTextView);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = swift_allocObject();
  sub_1DA7DFE70((uint64_t)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for InlineTextView);
  uint64_t v13 = *(void **)(v3 + *(int *)(v5 + 28));
  if (v13) {
    LOBYTE(v13) = objc_msgSend(v13, sel_ignoresRTL);
  }
  sub_1DA7D573C((char)v13, (uint64_t)sub_1DA7DFC14, v12, (uint64_t)v10);
  swift_release();
  return sub_1DA7BA440((uint64_t)v10, a2, &qword_1EBE63670);
}

uint64_t MetadataInlineGraphicView.graphic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7DB268(MEMORY[0x1E4F3DE60], a1);
}

uint64_t MetadataInlineGraphicView.graphic.setter(uint64_t a1)
{
  return sub_1DA7DB2F0(a1, MEMORY[0x1E4F3DE60]);
}

uint64_t (*MetadataInlineGraphicView.graphic.modify())()
{
  return CGSizeMake;
}

uint64_t MetadataInlineGraphicView.alwaysTemplate.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MetadataInlineGraphicView(0) + 20));
}

uint64_t type metadata accessor for MetadataInlineGraphicView(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE63E18);
}

uint64_t MetadataInlineGraphicView.alwaysTemplate.setter(char a1)
{
  uint64_t result = type metadata accessor for MetadataInlineGraphicView(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*MetadataInlineGraphicView.alwaysTemplate.modify())(void, void, void, void)
{
  return CGSizeMake;
}

void *MetadataInlineGraphicView.parameters.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for MetadataInlineGraphicView(0) + 24));
  id v2 = v1;
  return v1;
}

void MetadataInlineGraphicView.parameters.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for MetadataInlineGraphicView(0) + 24);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*MetadataInlineGraphicView.parameters.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t MetadataInlineGraphicView.init(_:alwaysTemplate:parameters:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for MetadataInlineGraphicView(0);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = sub_1DA98ACF8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a4, a1, v10);
  *(unsigned char *)(a4 + *(int *)(v8 + 20)) = a2;
  *(void *)(a4 + v9) = a3;
  return result;
}

uint64_t MetadataInlineGraphicView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v65 = a1;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59A70);
  uint64_t v3 = MEMORY[0x1F4188790](v66);
  uint64_t v54 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v55 = (uint64_t)&v53 - v5;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59AE0);
  MEMORY[0x1F4188790](v63);
  uint64_t v64 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1DA98B188();
  uint64_t v7 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64F10);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v57 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DA98ACF8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1DA98BA18();
  uint64_t v16 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE599B0);
  MEMORY[0x1F4188790](v59);
  int v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59A40);
  MEMORY[0x1F4188790](v62);
  uint64_t v60 = (uint64_t)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v2, v12);
  uint64_t v58 = *(int *)(type metadata accessor for MetadataInlineGraphicView(0) + 24);
  uint64_t v22 = *(void **)(v2 + v58);
  if (v22) {
    unsigned int v56 = objc_msgSend(v22, sel_allowsNonSystemForegroundColors);
  }
  else {
    unsigned int v56 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64038);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1DA990050;
  if (v22 && (id v24 = objc_msgSend(v22, sel_foregroundColor)) != 0)
  {
    uint64_t v25 = v24;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F3EB10], v53);
    objc_msgSend(v25, sel_red);
    double v27 = v26;
    objc_msgSend(v25, sel_green);
    double v29 = v28;
    objc_msgSend(v25, sel_blue);
    double v31 = v30;
    objc_msgSend(v25, sel_alpha);
    uint64_t v33 = MEMORY[0x1E01763B0](v9, v27, v29, v31, v32);
  }
  else
  {
    uint64_t v33 = sub_1DA98B1E8();
  }
  *(void *)(v23 + 32) = v33;
  uint64_t v67 = v23;
  sub_1DA98C2A8();
  sub_1DA98ACD8();
  uint64_t v34 = sub_1DA98A9E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v57, 1, 1, v34);
  sub_1DA98BA38();
  sub_1DA98BA28();
  uint64_t v35 = sub_1DA7D6870(0, v22);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v37 = v61;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v18, v61);
  uint64_t v38 = (uint64_t *)&v20[*(int *)(v59 + 36)];
  uint64_t *v38 = KeyPath;
  v38[1] = v35;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v37);
  uint64_t v39 = v58;
  uint64_t v40 = *(void **)(v2 + v58);
  uint64_t v41 = v60;
  sub_1DA7A1F58((uint64_t)v20, v60, &qword_1EBE599B0);
  uint64_t v42 = v41 + *(int *)(v62 + 36);
  *(void *)uint64_t v42 = v40;
  *(unsigned char *)(v42 + 8) = 0;
  id v43 = v40;
  sub_1DA7A1AE0((uint64_t)v20, &qword_1EBE599B0);
  if (sub_1DA98ACD8())
  {
    sub_1DA7A1F58(v41, v64, &qword_1EBE59A40);
    swift_storeEnumTagMultiPayload();
    sub_1DA7E4A7C(&qword_1EBE59A38, &qword_1EBE59A40, (void (*)(void))sub_1DA7DE0E8, (void (*)(void))sub_1DA7DE1B8);
    sub_1DA7DE20C();
    sub_1DA98AA68();
  }
  else
  {
    uint64_t v44 = *(void *)(v2 + v39);
    if (v44)
    {
      objc_msgSend(*(id *)(v2 + v39), sel_graphicMaxSize);
      uint64_t v46 = v45;
      uint64_t v48 = v47;
    }
    else
    {
      uint64_t v46 = 0;
      uint64_t v48 = 0;
    }
    uint64_t v49 = v54;
    sub_1DA7A1F58(v41, v54, &qword_1EBE59A40);
    uint64_t v50 = v49 + *(int *)(v66 + 36);
    *(void *)uint64_t v50 = v46;
    *(void *)(v50 + 8) = v48;
    *(unsigned char *)(v50 + 16) = v44 == 0;
    uint64_t v51 = v55;
    sub_1DA7BA440(v49, v55, &qword_1EBE59A70);
    sub_1DA7A1F58(v51, v64, &qword_1EBE59A70);
    swift_storeEnumTagMultiPayload();
    sub_1DA7E4A7C(&qword_1EBE59A38, &qword_1EBE59A40, (void (*)(void))sub_1DA7DE0E8, (void (*)(void))sub_1DA7DE1B8);
    sub_1DA7DE20C();
    sub_1DA98AA68();
    sub_1DA7A1AE0(v51, &qword_1EBE59A70);
  }
  return sub_1DA7A1AE0(v41, &qword_1EBE59A40);
}

uint64_t sub_1DA7D66A0(void *a1, char a2)
{
  uint64_t v4 = sub_1DA98B188();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (!a1) {
      goto LABEL_8;
    }
    id v8 = objc_msgSend(a1, sel_foregroundDateColor);
    if (v8)
    {
LABEL_7:
      uint64_t v9 = v8;
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F3EB10], v4);
      objc_msgSend(v9, sel_red);
      double v11 = v10;
      objc_msgSend(v9, sel_green);
      double v13 = v12;
      objc_msgSend(v9, sel_blue);
      double v15 = v14;
      objc_msgSend(v9, sel_alpha);
      uint64_t v17 = MEMORY[0x1E01763B0](v7, v11, v13, v15, v16);

      return v17;
    }
  }
  else if (!a1)
  {
    goto LABEL_8;
  }
  id v8 = objc_msgSend(a1, sel_foregroundColor);
  if (v8) {
    goto LABEL_7;
  }
LABEL_8:

  return sub_1DA98B1E8();
}

uint64_t sub_1DA7D6870(uint64_t a1, void *a2)
{
  sub_1DA7DDCB8(a2);
  if (a2)
  {
    id v4 = a2;
    id v5 = objc_msgSend(v4, sel_fontSpecification);
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = objc_msgSend(v5, sel_weight);

      if (v7)
      {
        objc_msgSend(v7, sel_doubleValue);
        sub_1DA98AE38();

        goto LABEL_7;
      }
    }
  }
  sub_1DA98AE58();
LABEL_7:
  uint64_t v8 = sub_1DA98AE98();
  swift_release();
  if (a2)
  {
    id v9 = a2;
    id v10 = objc_msgSend(v9, sel_fontSpecification);
    if (v10)
    {
      double v11 = v10;
      id v12 = objc_msgSend(v10, sel_fontFeatures);

      sub_1DA7A1A08(0, (unint64_t *)&unk_1EBE64008);
      unint64_t v13 = sub_1DA98C288();
    }
    else
    {
      unint64_t v13 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    unint64_t v13 = MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = sub_1DA7DDF08(v13, v8);
  swift_release();
  swift_bridgeObjectRelease();
  if (!a1) {
    return v14;
  }
  swift_retain();
  uint64_t v15 = sub_1DA98AEC8();
  swift_release_n();
  return v15;
}

uint64_t sub_1DA7D6A48()
{
  uint64_t v1 = type metadata accessor for MetadataInlineTextGraphicView(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE635E8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63430);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DA7D6DC4();
  if (v10)
  {
    uint64_t v11 = v10;
    if (*(void *)(v10 + 16))
    {
      unsigned char *v9 = sub_1DA98AD88();
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5B78);
      sub_1DA7D7080(v11, v0, &v9[*(int *)(v12 + 44)]);
      swift_bridgeObjectRelease();
      sub_1DA7A1F58((uint64_t)v9, (uint64_t)v6, &qword_1EBE63430);
      swift_storeEnumTagMultiPayload();
      sub_1DA7A0410(&qword_1EBE63428, &qword_1EBE63430);
      sub_1DA7E00DC(&qword_1EBE63F00, (void (*)(uint64_t))type metadata accessor for MetadataInlineTextGraphicView);
      sub_1DA98AA68();
      return sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE63430);
    }
    swift_bridgeObjectRelease();
  }
  sub_1DA98ABE8();
  sub_1DA98AD08();
  uint64_t v14 = type metadata accessor for MetadataInlineView(0);
  uint64_t v15 = *(void **)(v0 + *(int *)(v14 + 20));
  uint64_t v16 = v0 + *(int *)(v14 + 24);
  uint64_t v17 = &v3[*(int *)(v1 + 28)];
  uint64_t v18 = sub_1DA989F38();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, v16, v18);
  id v19 = v15;
  sub_1DA98AC38();
  *(void *)&v3[*(int *)(v1 + 24)] = v15;
  sub_1DA7DFB94((uint64_t)v3, (uint64_t)v6, type metadata accessor for MetadataInlineTextGraphicView);
  swift_storeEnumTagMultiPayload();
  sub_1DA7A0410(&qword_1EBE63428, &qword_1EBE63430);
  sub_1DA7E00DC(&qword_1EBE63F00, (void (*)(uint64_t))type metadata accessor for MetadataInlineTextGraphicView);
  sub_1DA98AA68();
  return sub_1DA7E210C((uint64_t)v3, type metadata accessor for MetadataInlineTextGraphicView);
}

uint64_t sub_1DA7D6DC4()
{
  uint64_t v0 = sub_1DA98AD28();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetadataInlineView.IterableFallback(0);
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA98AD18();
  if (!v7) {
    return 0;
  }
  uint64_t v8 = v7;
  int64_t v9 = *(void *)(v7 + 16);
  if (v9)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1DA7F7AA4(0, v9, 0);
    uint64_t v10 = v1 + 16;
    uint64_t v11 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    unint64_t v12 = v8 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v13 = *(void *)(v10 + 56);
    uint64_t v19 = v8;
    uint64_t v20 = v13;
    uint64_t v21 = v10;
    uint64_t v14 = (void (**)(char *, uint64_t))(v10 - 8);
    do
    {
      v11(v3, v12, v0);
      v11(v6, (unint64_t)v3, v0);
      _s9ChronoKit26RemoteActivitySubscriptionV2id10activityID12hostIdentity0G5Owner7metrics6family16subscriptionType12creationDateAC10Foundation4UUIDV_SS0A8Services012DeviceScopedJ0VyAO15TypedIdentifierVyAO0xO0O10WidgetHostOGGAC0D9OwnershipO0yB00D17MetricsDefinitionVA0_0D6FamilyOAC0deO0OAL0Q0VSgtcfcfA__0();
      (*v14)(v3, v0);
      uint64_t v15 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA7F7AA4(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = v24;
      }
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1DA7F7AA4(v16 > 1, v17 + 1, 1);
        uint64_t v15 = v24;
      }
      *(void *)(v15 + 16) = v17 + 1;
      sub_1DA7DFE70((uint64_t)v6, v15+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v17, type metadata accessor for MetadataInlineView.IterableFallback);
      v12 += v20;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v15;
}

uint64_t sub_1DA7D7080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  unint64_t v104 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63730);
  MEMORY[0x1F4188790](v5 - 8);
  long long v94 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA989F38();
  uint64_t v92 = *(void *)(v7 - 8);
  uint64_t v93 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v90 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63750);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v85 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v89 = (char *)&v79 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63740);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v82 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v86 = (char *)&v79 - v16;
  uint64_t v17 = type metadata accessor for MetadataInlineTextGraphicView(0);
  uint64_t v102 = *(void *)(v17 - 8);
  uint64_t v103 = (int *)v17;
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v88 = (uint64_t)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v87 = (uint64_t)&v79 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5B80);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for MetadataInlineView.IterableFallback(0);
  uint64_t v24 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v84 = (uint64_t)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5B88);
  uint64_t v27 = MEMORY[0x1F4188790](v26 - 8);
  uint64_t v101 = (uint64_t)&v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v100 = (uint64_t)&v79 - v29;
  uint64_t v83 = type metadata accessor for MetadataInlineView(0);
  uint64_t v30 = *(void *)(v83 - 8);
  uint64_t v31 = *(void *)(v30 + 64);
  uint64_t v32 = MEMORY[0x1F4188790](v83);
  uint64_t v81 = (char *)&v79 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v32);
  uint64_t v80 = (uint64_t)&v79 - v34;
  MEMORY[0x1F4188790](v33);
  uint64_t v36 = (char *)&v79 - v35;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5B90);
  uint64_t v98 = *(void *)(v37 - 8);
  uint64_t v99 = v37;
  uint64_t v38 = MEMORY[0x1F4188790](v37);
  uint64_t v97 = (char *)&v79 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  uint64_t v41 = (char *)&v79 - v40;
  uint64_t v105 = a1;
  uint64_t v91 = a2;
  sub_1DA7DFB94(a2, (uint64_t)v36, type metadata accessor for MetadataInlineView);
  unint64_t v42 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v43 = swift_allocObject();
  sub_1DA7DFE70((uint64_t)v36, v43 + v42, type metadata accessor for MetadataInlineView);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5B98);
  sub_1DA989698();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5BA0);
  sub_1DA7A0410(&qword_1EA8E5BA8, &qword_1EA8E5B98);
  sub_1DA7E23A0();
  sub_1DA7E00DC(&qword_1EA8E5BB8, (void (*)(uint64_t))type metadata accessor for MetadataInlineView.IterableFallback);
  unint64_t v96 = v41;
  sub_1DA98B378();
  uint64_t v44 = *(void *)(a1 + 16);
  if (!v44)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v23, 1, 1, v95);
    goto LABEL_6;
  }
  sub_1DA7DFB94(a1+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * (v44 - 1), (uint64_t)v23, type metadata accessor for MetadataInlineView.IterableFallback);
  uint64_t v45 = v95;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v23, 0, 1, v95);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, v45) == 1)
  {
LABEL_6:
    sub_1DA7A1AE0((uint64_t)v23, &qword_1EA8E5B80);
    uint64_t v53 = 1;
    uint64_t v54 = v103;
    uint64_t v55 = v100;
    goto LABEL_12;
  }
  uint64_t v46 = v84;
  sub_1DA7DFE70((uint64_t)v23, v84, type metadata accessor for MetadataInlineView.IterableFallback);
  uint64_t v47 = (uint64_t)v82;
  sub_1DA98ABE8();
  uint64_t v48 = v91;
  uint64_t v49 = v80;
  sub_1DA7DFB94(v91, v80, type metadata accessor for MetadataInlineView);
  uint64_t v50 = sub_1DA98ACC8();
  uint64_t v51 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v47, 1, v50) == 1)
  {
    uint64_t v52 = (uint64_t)v86;
    sub_1DA98ABE8();
    sub_1DA7E210C(v49, type metadata accessor for MetadataInlineView);
    sub_1DA7A1AE0(v47, &qword_1EBE63740);
  }
  else
  {
    sub_1DA7E210C(v49, type metadata accessor for MetadataInlineView);
    uint64_t v52 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v86, v47, v50);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v50);
  }
  uint64_t v56 = (uint64_t)v89;
  uint64_t v57 = (uint64_t)v85;
  uint64_t v58 = (uint64_t)v81;
  sub_1DA98AD08();
  sub_1DA7DFB94(v48, v58, type metadata accessor for MetadataInlineView);
  uint64_t v59 = sub_1DA98ACF8();
  uint64_t v60 = *(void *)(v59 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v57, 1, v59) == 1)
  {
    sub_1DA98AD08();
    sub_1DA7E210C(v58, type metadata accessor for MetadataInlineView);
    sub_1DA7A1AE0(v57, &qword_1EBE63750);
  }
  else
  {
    sub_1DA7E210C(v58, type metadata accessor for MetadataInlineView);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v56, v57, v59);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v56, 0, 1, v59);
  }
  uint64_t v61 = *(void **)(v48 + *(int *)(v83 + 20));
  uint64_t v63 = v92;
  uint64_t v62 = v93;
  uint64_t v64 = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v90, v48 + *(int *)(v83 + 24), v93);
  id v65 = v61;
  uint64_t v66 = (uint64_t)v94;
  sub_1DA98AC38();
  sub_1DA7E210C(v46, type metadata accessor for MetadataInlineView.IterableFallback);
  uint64_t v67 = v88;
  sub_1DA7BA440(v52, v88, &qword_1EBE63740);
  uint64_t v54 = v103;
  sub_1DA7BA440(v56, v67 + v103[5], &qword_1EBE63750);
  *(void *)(v67 + v54[6]) = v61;
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v67 + v54[7], v64, v62);
  sub_1DA7BA440(v66, v67 + v54[8], &qword_1EBE63730);
  uint64_t v68 = v87;
  sub_1DA7DFE70(v67, v87, type metadata accessor for MetadataInlineTextGraphicView);
  uint64_t v55 = v100;
  sub_1DA7DFE70(v68, v100, type metadata accessor for MetadataInlineTextGraphicView);
  uint64_t v53 = 0;
LABEL_12:
  (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v102 + 56))(v55, v53, 1, v54);
  uint64_t v70 = v97;
  uint64_t v69 = v98;
  uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
  uint64_t v72 = v96;
  uint64_t v73 = v99;
  v71(v97, v96, v99);
  uint64_t v74 = v101;
  sub_1DA7A1F58(v55, v101, &qword_1EA8E5B88);
  uint64_t v75 = v104;
  v71(v104, v70, v73);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5BC0);
  sub_1DA7A1F58(v74, (uint64_t)&v75[*(int *)(v76 + 48)], &qword_1EA8E5B88);
  sub_1DA7A1AE0(v55, &qword_1EA8E5B88);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v69 + 8);
  v77(v72, v73);
  sub_1DA7A1AE0(v74, &qword_1EA8E5B88);
  return ((uint64_t (*)(char *, uint64_t))v77)(v70, v73);
}

uint64_t sub_1DA7D7C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63750);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v44 = (char *)&v40 - v9;
  uint64_t v43 = type metadata accessor for MetadataInlineView(0);
  uint64_t v10 = MEMORY[0x1F4188790](v43);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63740);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v40 - v19;
  uint64_t v21 = (int *)type metadata accessor for MetadataInlineTextGraphicView(0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5BA0);
  MEMORY[0x1F4188790](v41);
  uint64_t v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a1;
  sub_1DA98ABE8();
  uint64_t v42 = a2;
  sub_1DA7DFB94(a2, (uint64_t)v14, type metadata accessor for MetadataInlineView);
  uint64_t v26 = sub_1DA98ACC8();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v18, 1, v26) == 1)
  {
    sub_1DA98ABE8();
    sub_1DA7E210C((uint64_t)v14, type metadata accessor for MetadataInlineView);
    sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE63740);
  }
  else
  {
    sub_1DA7E210C((uint64_t)v14, type metadata accessor for MetadataInlineView);
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v20, v18, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v20, 0, 1, v26);
  }
  uint64_t v28 = (uint64_t)v20;
  sub_1DA98AD08();
  uint64_t v29 = v42;
  sub_1DA7DFB94(v42, (uint64_t)v12, type metadata accessor for MetadataInlineView);
  uint64_t v30 = sub_1DA98ACF8();
  uint64_t v31 = *(void *)(v30 - 8);
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v8, 1, v30);
  uint64_t v33 = (uint64_t)v44;
  if (v32 == 1)
  {
    sub_1DA98AD08();
    sub_1DA7E210C((uint64_t)v12, type metadata accessor for MetadataInlineView);
    sub_1DA7A1AE0((uint64_t)v8, &qword_1EBE63750);
  }
  else
  {
    sub_1DA7E210C((uint64_t)v12, type metadata accessor for MetadataInlineView);
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v33, v8, v30);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v33, 0, 1, v30);
  }
  uint64_t v34 = *(void **)(v29 + *(int *)(v43 + 20));
  uint64_t v35 = v29 + *(int *)(v43 + 24);
  uint64_t v36 = &v23[v21[7]];
  uint64_t v37 = sub_1DA989F38();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v36, v35, v37);
  id v38 = v34;
  sub_1DA98AC38();
  sub_1DA7BA440(v28, (uint64_t)v23, &qword_1EBE63740);
  sub_1DA7BA440(v33, (uint64_t)&v23[v21[5]], &qword_1EBE63750);
  *(void *)&v23[v21[6]] = v34;
  sub_1DA7DFB94((uint64_t)v23, (uint64_t)v25, type metadata accessor for MetadataInlineTextGraphicView);
  *(_WORD *)&v25[*(int *)(v41 + 36)] = 257;
  sub_1DA7E210C((uint64_t)v23, type metadata accessor for MetadataInlineTextGraphicView);
  return sub_1DA7BA440((uint64_t)v25, v45, &qword_1EA8E5BA0);
}

uint64_t sub_1DA7D81F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_1DA989698();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1DA7D8264@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v60 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63730);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v59 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v58 = (uint64_t)&v50 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v50 - v8;
  uint64_t v10 = sub_1DA98ABB8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63828);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637E8);
  uint64_t v17 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63518);
  MEMORY[0x1F4188790](v52);
  uint64_t v61 = (uint64_t)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63578);
  MEMORY[0x1F4188790](v54);
  uint64_t v57 = (uint64_t)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63588);
  MEMORY[0x1F4188790](v56);
  uint64_t v55 = (uint64_t)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v16 = sub_1DA98A898();
  *((void *)v16 + 1) = 0;
  v16[16] = 0;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63440);
  sub_1DA7D88C4(v2, (uint64_t)&v16[*(int *)(v23 + 44)]);
  sub_1DA98ABA8();
  sub_1DA7A0410(&qword_1EBE63820, &qword_1EBE63828);
  uint64_t v51 = v19;
  sub_1DA98B0E8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1DA7A1AE0((uint64_t)v16, &qword_1EBE63828);
  uint64_t v24 = v2 + *(int *)(type metadata accessor for MetadataInlineTextGraphicView(0) + 32);
  sub_1DA7A1F58(v24, (uint64_t)v9, &qword_1EBE63730);
  uint64_t v25 = sub_1DA98AC28();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v50(v9, 1, v25) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE63730);
    uint64_t v27 = 0;
    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v27 = sub_1DA98AC08();
    uint64_t v28 = v29;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v25);
  }
  uint64_t v30 = v61;
  uint64_t v31 = v51;
  uint64_t v32 = v53;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v61, v51, v53);
  uint64_t v33 = (uint64_t *)(v30 + *(int *)(v52 + 36));
  *uint64_t v33 = v27;
  v33[1] = v28;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v31, v32);
  uint64_t v34 = v24;
  uint64_t v35 = v58;
  sub_1DA7A1F58(v24, v58, &qword_1EBE63730);
  uint64_t v36 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v50;
  if (v50((char *)v35, 1, v25) == 1)
  {
    sub_1DA7A1AE0(v35, &qword_1EBE63730);
    uint64_t v37 = 0;
    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v37 = sub_1DA98AC18();
    uint64_t v38 = v39;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v35, v25);
  }
  uint64_t v40 = v57;
  uint64_t v41 = v61;
  sub_1DA7A1F58(v61, v57, &qword_1EBE63518);
  uint64_t v42 = (uint64_t *)(v40 + *(int *)(v54 + 36));
  *uint64_t v42 = v37;
  v42[1] = v38;
  sub_1DA7A1AE0(v41, &qword_1EBE63518);
  uint64_t v43 = v59;
  sub_1DA7A1F58(v34, v59, &qword_1EBE63730);
  if (v36(v43, 1, v25) == 1)
  {
    sub_1DA7A1AE0(v43, &qword_1EBE63730);
    uint64_t v44 = 0;
    uint64_t v45 = 0;
  }
  else
  {
    uint64_t v44 = sub_1DA98ABF8();
    uint64_t v45 = v46;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v43, v25);
  }
  uint64_t v47 = v55;
  sub_1DA7A1F58(v40, v55, &qword_1EBE63578);
  uint64_t v48 = (uint64_t *)(v47 + *(int *)(v56 + 36));
  *uint64_t v48 = v44;
  v48[1] = v45;
  sub_1DA7A1AE0(v40, &qword_1EBE63578);
  return sub_1DA7BA440(v47, v60, &qword_1EBE63588);
}

uint64_t sub_1DA7D88C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63858);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v98 = (uint64_t)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v99 = (uint64_t)&v87 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63678);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v96 = (uint64_t)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v93 = (char *)&v87 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63750);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v92 = (uint64_t)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v87 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63508);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v95 = (uint64_t)&v87 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v87 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63618);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  uint64_t v91 = (uint64_t)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v87 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v87 - v30;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63868);
  uint64_t v33 = MEMORY[0x1F4188790](v32 - 8);
  uint64_t v35 = (char *)&v87 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v37 = (char *)&v87 - v36;
  uint64_t v38 = type metadata accessor for MetadataInlineTextGraphicView(0);
  uint64_t v39 = *(void **)(a1 + *(int *)(v38 + 24));
  uint64_t v94 = *(int *)(v38 + 24);
  if (v39 && objc_msgSend(v39, sel_graphicAlignment) == (id)2) {
    sub_1DA98A9D8();
  }
  else {
    sub_1DA98A9C8();
  }
  sub_1DA98A9C8();
  if (sub_1DA98A9A8())
  {
    uint64_t v88 = v35;
    sub_1DA7D9354((uint64_t)v31);
    sub_1DA7A1F58(a1 + *(int *)(v38 + 20), (uint64_t)v15, &qword_1EBE63750);
    uint64_t v40 = sub_1DA98ACF8();
    int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v15, 1, v40);
    sub_1DA7A1AE0((uint64_t)v15, &qword_1EBE63750);
    uint64_t v89 = v38;
    uint64_t v90 = v19;
    if (v41 == 1)
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63500);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v23, 1, 1, v42);
    }
    else
    {
      sub_1DA98A918();
      uint64_t v45 = sub_1DA98AF98();
      uint64_t v47 = v46;
      uint64_t v87 = v37;
      uint64_t v100 = v45;
      uint64_t v101 = v46;
      char v49 = v48 & 1;
      char v102 = v48 & 1;
      uint64_t v103 = v50;
      sub_1DA98B0D8();
      sub_1DA7DF368(v45, v47, v49);
      uint64_t v37 = v87;
      swift_bridgeObjectRelease();
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63500);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v23, 0, 1, v51);
    }
    uint64_t v52 = v93;
    uint64_t v35 = v88;
    sub_1DA7A1F58((uint64_t)v31, (uint64_t)v29, &qword_1EBE63618);
    uint64_t v53 = v95;
    sub_1DA7A1F58((uint64_t)v23, v95, &qword_1EBE63508);
    sub_1DA7A1F58((uint64_t)v29, (uint64_t)v35, &qword_1EBE63618);
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63620);
    sub_1DA7A1F58(v53, (uint64_t)&v35[*(int *)(v54 + 48)], &qword_1EBE63508);
    sub_1DA7A1AE0((uint64_t)v23, &qword_1EBE63508);
    sub_1DA7A1AE0((uint64_t)v31, &qword_1EBE63618);
    sub_1DA7A1AE0(v53, &qword_1EBE63508);
    sub_1DA7A1AE0((uint64_t)v29, &qword_1EBE63618);
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63860);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v35, 0, 1, v55);
    sub_1DA7BA440((uint64_t)v35, (uint64_t)v37, &qword_1EBE63868);
    uint64_t v44 = (uint64_t)v52;
    uint64_t v38 = v89;
    uint64_t v19 = v90;
  }
  else
  {
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63860);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v37, 1, 1, v43);
    uint64_t v44 = (uint64_t)v93;
  }
  uint64_t v56 = v94;
  sub_1DA7D9978(v44);
  uint64_t v57 = *(void **)(a1 + v56);
  if (v57 && objc_msgSend(v57, sel_graphicAlignment) == (id)2) {
    sub_1DA98A9D8();
  }
  else {
    sub_1DA98A9C8();
  }
  sub_1DA98A9D8();
  if (sub_1DA98A9A8())
  {
    uint64_t v58 = v92;
    sub_1DA7A1F58(a1 + *(int *)(v38 + 20), v92, &qword_1EBE63750);
    uint64_t v59 = sub_1DA98ACF8();
    int v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v58, 1, v59);
    sub_1DA7A1AE0(v58, &qword_1EBE63750);
    if (v60 == 1)
    {
      uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63500);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v19, 1, 1, v61);
    }
    else
    {
      sub_1DA98A918();
      uint64_t v63 = sub_1DA98AF98();
      uint64_t v87 = v37;
      uint64_t v64 = v44;
      id v65 = v35;
      uint64_t v67 = v66;
      uint64_t v100 = v63;
      uint64_t v101 = v66;
      char v69 = v68 & 1;
      char v102 = v68 & 1;
      uint64_t v103 = v70;
      sub_1DA98B0D8();
      uint64_t v71 = v67;
      uint64_t v35 = v65;
      uint64_t v44 = v64;
      uint64_t v37 = v87;
      sub_1DA7DF368(v63, v71, v69);
      swift_bridgeObjectRelease();
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63500);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v19, 0, 1, v72);
    }
    sub_1DA7D9354((uint64_t)v29);
    uint64_t v73 = v95;
    sub_1DA7A1F58((uint64_t)v19, v95, &qword_1EBE63508);
    uint64_t v74 = v91;
    sub_1DA7A1F58((uint64_t)v29, v91, &qword_1EBE63618);
    uint64_t v75 = v98;
    sub_1DA7A1F58(v73, v98, &qword_1EBE63508);
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5BC8);
    sub_1DA7A1F58(v74, v75 + *(int *)(v76 + 48), &qword_1EBE63618);
    sub_1DA7A1AE0((uint64_t)v29, &qword_1EBE63618);
    sub_1DA7A1AE0((uint64_t)v19, &qword_1EBE63508);
    sub_1DA7A1AE0(v74, &qword_1EBE63618);
    sub_1DA7A1AE0(v73, &qword_1EBE63508);
    uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63850);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v75, 0, 1, v77);
    sub_1DA7BA440(v75, v99, &qword_1EBE63858);
  }
  else
  {
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63850);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v99, 1, 1, v62);
  }
  sub_1DA7A1F58((uint64_t)v37, (uint64_t)v35, &qword_1EBE63868);
  uint64_t v78 = v44;
  uint64_t v79 = v44;
  uint64_t v80 = v96;
  sub_1DA7A1F58(v78, v96, &qword_1EBE63678);
  uint64_t v81 = (uint64_t)v37;
  uint64_t v83 = v98;
  uint64_t v82 = v99;
  sub_1DA7A1F58(v99, v98, &qword_1EBE63858);
  uint64_t v84 = v97;
  sub_1DA7A1F58((uint64_t)v35, v97, &qword_1EBE63868);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63870);
  sub_1DA7A1F58(v80, v84 + *(int *)(v85 + 48), &qword_1EBE63678);
  sub_1DA7A1F58(v83, v84 + *(int *)(v85 + 64), &qword_1EBE63858);
  sub_1DA7A1AE0(v82, &qword_1EBE63858);
  sub_1DA7A1AE0(v79, &qword_1EBE63678);
  sub_1DA7A1AE0(v81, &qword_1EBE63868);
  sub_1DA7A1AE0(v83, &qword_1EBE63858);
  sub_1DA7A1AE0(v80, &qword_1EBE63678);
  return sub_1DA7A1AE0((uint64_t)v35, &qword_1EBE63868);
}

uint64_t sub_1DA7D9354@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE635B0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MetadataInlineGraphicView(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v47 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA989F38();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  MEMORY[0x1F4188790](v7);
  char v48 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63750);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DA98ACF8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v45 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v46 = (char *)v37 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v37 - v18;
  uint64_t v20 = type metadata accessor for MetadataInlineTextGraphicView(0);
  sub_1DA7A1F58(v1 + *(int *)(v20 + 20), (uint64_t)v11, &qword_1EBE63750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v11, &qword_1EBE63750);
    swift_storeEnumTagMultiPayload();
    sub_1DA7E00DC(&qword_1EBE63E10, (void (*)(uint64_t))type metadata accessor for MetadataInlineGraphicView);
    return sub_1DA98AA68();
  }
  else
  {
    uint64_t v42 = v5;
    uint64_t v43 = v2;
    uint64_t v44 = v4;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v11, v12);
    uint64_t v40 = v1;
    uint64_t v41 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v1 + *(int *)(v20 + 28), v50);
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v23 = v46;
    v22(v46, v19, v12);
    uint64_t v24 = sub_1DA989F18();
    os_log_type_t v25 = sub_1DA98C518();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v53 = v38;
      *(_DWORD *)uint64_t v26 = 136380675;
      v37[1] = v26 + 4;
      uint64_t v39 = v19;
      uint64_t v27 = v26;
      v22(v45, v23, v12);
      uint64_t v28 = sub_1DA98C0A8();
      uint64_t v52 = sub_1DA8C5E00(v28, v29, &v53);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v13 + 8);
      v30(v23, v12);
      _os_log_impl(&dword_1DA795000, v24, v25, "Inline image: %{private}s", v27, 0xCu);
      uint64_t v31 = v38;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v31, -1, -1);
      uint64_t v32 = v27;
      uint64_t v19 = v39;
      MEMORY[0x1E0178DA0](v32, -1, -1);
    }
    else
    {
      uint64_t v30 = *(void (**)(char *, uint64_t))(v13 + 8);
      v30(v23, v12);
    }

    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v50);
    uint64_t v33 = (uint64_t)v47;
    v22(v47, v19, v12);
    uint64_t v34 = *(void **)(v40 + *(int *)(v41 + 24));
    uint64_t v35 = *(int *)(v42 + 24);
    *(unsigned char *)(v33 + *(int *)(v42 + 20)) = 1;
    *(void *)(v33 + v35) = v34;
    sub_1DA7DFB94(v33, (uint64_t)v44, type metadata accessor for MetadataInlineGraphicView);
    swift_storeEnumTagMultiPayload();
    sub_1DA7E00DC(&qword_1EBE63E10, (void (*)(uint64_t))type metadata accessor for MetadataInlineGraphicView);
    id v36 = v34;
    sub_1DA98AA68();
    sub_1DA7E210C(v33, type metadata accessor for MetadataInlineGraphicView);
    return ((uint64_t (*)(char *, uint64_t))v30)(v19, v12);
  }
}

uint64_t sub_1DA7D9978@<X0>(uint64_t a1@<X8>)
{
  uint64_t v77 = a1;
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE635E0);
  MEMORY[0x1F4188790](v76);
  uint64_t v3 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for MetadataTextView(0);
  MEMORY[0x1F4188790](v68);
  uint64_t v70 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63468);
  MEMORY[0x1F4188790](v67);
  uint64_t v71 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63548);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v69 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v72 = (uint64_t)&v56 - v9;
  uint64_t v10 = sub_1DA989F38();
  uint64_t v74 = *(void *)(v10 - 8);
  uint64_t v75 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v73 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63740);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DA98ACC8();
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v78 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v56 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v56 - v22;
  MEMORY[0x1F4188790](v21);
  os_log_type_t v25 = (char *)&v56 - v24;
  uint64_t v27 = v26;
  sub_1DA7A1F58(v1, (uint64_t)v14, &qword_1EBE63740);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v14, 1, v15) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE63740);
    swift_storeEnumTagMultiPayload();
    sub_1DA7E487C();
    return sub_1DA98AA68();
  }
  else
  {
    unint64_t v29 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    uint64_t v63 = v27 + 32;
    uint64_t v64 = v6;
    uint64_t v61 = v3;
    uint64_t v62 = v29;
    v29(v25, v14, v15);
    uint64_t v59 = type metadata accessor for MetadataInlineTextGraphicView(0);
    uint64_t v30 = v1;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v73, v1 + *(int *)(v59 + 28), v75);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    uint64_t v66 = v25;
    uint64_t v32 = v25;
    uint64_t v33 = v31;
    v31(v23, v32, v15);
    uint64_t v34 = sub_1DA989F18();
    os_log_type_t v35 = sub_1DA98C518();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v65 = v27;
    if (v36)
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v80 = v57;
      *(_DWORD *)uint64_t v37 = 136380675;
      int v60 = (void (*)(char *, uint64_t))(v37 + 4);
      uint64_t v58 = v33;
      v33(v20, v23, v15);
      uint64_t v38 = sub_1DA98C0A8();
      uint64_t v79 = sub_1DA8C5E00(v38, v39, &v80);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      int v60 = *(void (**)(char *, uint64_t))(v65 + 8);
      v60(v23, v15);
      _os_log_impl(&dword_1DA795000, v34, v35, "Inline text: %{private}s", v37, 0xCu);
      uint64_t v40 = v57;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v40, -1, -1);
      MEMORY[0x1E0178DA0](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);
      uint64_t v41 = (uint64_t)v61;
      uint64_t v42 = v59;
      v58(v78, v66, v15);
    }
    else
    {
      int v60 = *(void (**)(char *, uint64_t))(v27 + 8);
      v60(v23, v15);

      (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);
      uint64_t v41 = (uint64_t)v61;
      uint64_t v42 = v59;
      v33(v78, v66, v15);
    }
    uint64_t v43 = *(void **)(v30 + *(int *)(v42 + 24));
    if (v43) {
      unsigned __int8 v44 = objc_msgSend(v43, sel_allowsNonSystemForegroundColors);
    }
    else {
      unsigned __int8 v44 = 0;
    }
    uint64_t v45 = v64;
    uint64_t v46 = v68;
    uint64_t v47 = *(int *)(v68 + 20);
    uint64_t v48 = (uint64_t)v70;
    v62(v70, v78, v15);
    *(void *)(v48 + v47) = v43;
    *(unsigned char *)(v48 + *(int *)(v46 + 24)) = v44;
    uint64_t v49 = v71;
    sub_1DA7DFB94(v48, v71, type metadata accessor for MetadataTextView);
    uint64_t v50 = v49 + *(int *)(v67 + 36);
    *(void *)uint64_t v50 = v43;
    *(unsigned char *)(v50 + 8) = 0;
    id v51 = v43;
    sub_1DA7E210C(v48, type metadata accessor for MetadataTextView);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v53 = v69;
    sub_1DA7A1F58(v49, v69, &qword_1EBE63468);
    uint64_t v54 = v53 + *(int *)(v45 + 36);
    *(void *)uint64_t v54 = KeyPath;
    *(void *)(v54 + 8) = 1;
    *(unsigned char *)(v54 + 16) = 0;
    sub_1DA7A1AE0(v49, &qword_1EBE63468);
    uint64_t v55 = v72;
    sub_1DA7BA440(v53, v72, &qword_1EBE63548);
    sub_1DA7A1F58(v55, v41, &qword_1EBE63548);
    swift_storeEnumTagMultiPayload();
    sub_1DA7E487C();
    sub_1DA98AA68();
    sub_1DA7A1AE0(v55, &qword_1EBE63548);
    return ((uint64_t (*)(char *, uint64_t))v60)(v66, v15);
  }
}

uint64_t MetadataTextView.init(_:parameters:allowsCustomColors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for MetadataTextView(0);
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = sub_1DA98ACC8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a4, a1, v10);
  *(void *)(a4 + v9) = a2;
  *(unsigned char *)(a4 + *(int *)(v8 + 24)) = a3;
  return result;
}

uint64_t sub_1DA7DA200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = *(unsigned char *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(unsigned char *)(a2 + 16) = v5;
  uint64_t v6 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5B20) + 44);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5B28);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(v6, a1, v7);
}

uint64_t sub_1DA7DA29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v13[1] = a6;
  uint64_t v6 = sub_1DA98A2B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA98A308();
  sub_1DA98A3B8();
  char v15 = v10 & 1;
  char v14 = v11 & 1;
  sub_1DA98A298();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DA7DA458(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v6;
  sub_1DA98A2F8();
  sub_1DA7E00DC(&qword_1EA8E5B70, MEMORY[0x1E4F3C980]);
  sub_1DA98C448();
  sub_1DA98C478();
  uint64_t result = sub_1DA98C468();
  if (result == 1) {
    return sub_1DA7DA29C(a1, a2 & 1, a3, a4 & 1, a5, v12);
  }
  return result;
}

uint64_t sub_1DA7DA570(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1DA7DFED8(a9, a1, a2, a3, a4, a10, *v10);
}

uint64_t sub_1DA7DA584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1DA7DA5F4(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x1E4F3ED60]);
}

uint64_t sub_1DA7DA5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1DA7DA5F4(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x1E4F3ED68]);
}

uint64_t sub_1DA7DA5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_1DA7DA638(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = sub_1DA98A1C8();
  return sub_1DA7DA6A8;
}

void sub_1DA7DA6A8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_1DA7DA6F4(int a1)
{
  int v83 = a1;
  uint64_t v67 = sub_1DA98ABD8();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v65 = (char *)&v65 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633A8);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v68 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v69 = (uint64_t)&v65 - v5;
  uint64_t v6 = sub_1DA989178();
  uint64_t v74 = *(void *)(v6 - 8);
  uint64_t v75 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v72 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v73 = (char *)&v65 - v9;
  uint64_t v10 = sub_1DA98AF58();
  uint64_t v81 = *(void *)(v10 - 8);
  uint64_t v82 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v77 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v79 = (char *)&v65 - v13;
  uint64_t v80 = sub_1DA989638();
  uint64_t v78 = *(void *)(v80 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v80);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v76 = (char *)&v65 - v17;
  uint64_t v18 = sub_1DA98B238();
  uint64_t v70 = *(void *)(v18 - 8);
  uint64_t v71 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64F10);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1DA98ACF8();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1DA98AC58();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v65 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA98AC68();
  int v32 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v31, v28);
  if (v32 != *MEMORY[0x1E4F3DE18])
  {
    if (v32 != *MEMORY[0x1E4F3DE20])
    {
      if (v32 == *MEMORY[0x1E4F3DE08])
      {
        (*(void (**)(char *, uint64_t))(v29 + 96))(v31, v28);
        uint64_t v41 = &v31[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5B38) + 48)];
        uint64_t v42 = v78;
        uint64_t v43 = v76;
        uint64_t v44 = v80;
        (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v76, v31, v80);
        uint64_t v46 = v81;
        uint64_t v45 = v82;
        uint64_t v47 = v79;
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v79, v41, v82);
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v16, v43, v44);
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v77, v47, v45);
        uint64_t v37 = sub_1DA98AF78();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v45);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
        return v37;
      }
      if (v32 == *MEMORY[0x1E4F3DE10])
      {
        (*(void (**)(char *, uint64_t))(v29 + 96))(v31, v28);
        uint64_t v49 = v73;
        uint64_t v48 = v74;
        uint64_t v50 = v31;
        uint64_t v51 = v75;
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v73, v50, v75);
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v72, v49, v51);
        uint64_t v52 = sub_1DA98AFA8();
      }
      else
      {
        if (v32 == *MEMORY[0x1E4F3DE00])
        {
          (*(void (**)(char *, uint64_t))(v29 + 96))(v31, v28);
          char v56 = v31[16];
          uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE657B8);
          uint64_t v58 = v69;
          sub_1DA7BA440((uint64_t)&v31[*(int *)(v57 + 64)], v69, &qword_1EBE633A8);
          sub_1DA7A1F58(v58, v68, &qword_1EBE633A8);
          if (v56) {
            uint64_t v59 = sub_1DA98AF08();
          }
          else {
            uint64_t v59 = sub_1DA98AED8();
          }
          uint64_t v37 = v59;
          sub_1DA7A1AE0(v58, &qword_1EBE633A8);
          return v37;
        }
        if (v32 == *MEMORY[0x1E4F3DE30])
        {
          (*(void (**)(char *, uint64_t))(v29 + 96))(v31, v28);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5B30);
          uint64_t v61 = v73;
          uint64_t v60 = v74;
          uint64_t v62 = v31;
          uint64_t v63 = v75;
          (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v73, v62, v75);
          (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v72, v61, v63);
          uint64_t v37 = sub_1DA98AF48();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v63);
          return v37;
        }
        if (v32 != *MEMORY[0x1E4F3DE28])
        {
          sub_1DA98A918();
          uint64_t v37 = sub_1DA98AF98();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
          return v37;
        }
        (*(void (**)(char *, uint64_t))(v29 + 96))(v31, v28);
        uint64_t v48 = v66;
        uint64_t v49 = v65;
        uint64_t v64 = v31;
        uint64_t v51 = v67;
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v65, v64, v67);
        uint64_t v52 = sub_1DA98ABC8();
      }
      uint64_t v37 = v52;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v51);
      return v37;
    }
    (*(void (**)(char *, uint64_t))(v29 + 96))(v31, v28);
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v31, v24);
    uint64_t v38 = sub_1DA98A9E8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v23, 1, 1, v38);
    uint64_t v39 = sub_1DA98ACE8();
    sub_1DA7A1AE0((uint64_t)v23, &qword_1EBE64F10);
    if (v39)
    {
      if ((sub_1DA98ACD8() & 1) == 0)
      {
        uint64_t v54 = v70;
        uint64_t v53 = v71;
        (*(void (**)(char *, void, uint64_t))(v70 + 104))(v20, *MEMORY[0x1E4F3EBF8], v71);
        sub_1DA98B258();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v20, v53);
        uint64_t v37 = sub_1DA98AFC8();
        swift_release();
        goto LABEL_18;
      }
      uint64_t v40 = sub_1DA98AFC8();
    }
    else
    {
      sub_1DA98A918();
      uint64_t v40 = sub_1DA98AF98();
    }
    uint64_t v37 = v40;
LABEL_18:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    return v37;
  }
  (*(void (**)(char *, uint64_t))(v29 + 96))(v31, v28);
  uint64_t v34 = *(void *)v31;
  uint64_t v33 = *((void *)v31 + 1);
  if (v83)
  {
    uint64_t v84 = *(void *)v31;
    uint64_t v85 = v33;
    sub_1DA7DF7A0();
    uint64_t v34 = sub_1DA98C888();
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    uint64_t v33 = v36;
  }
  uint64_t v84 = v34;
  uint64_t v85 = v33;
  sub_1DA7DF7A0();
  return sub_1DA98AFB8();
}

uint64_t MetadataTextView.text.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7DB268(MEMORY[0x1E4F3DE38], a1);
}

uint64_t sub_1DA7DB268@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, v2, v4);
}

uint64_t MetadataTextView.text.setter(uint64_t a1)
{
  return sub_1DA7DB2F0(a1, MEMORY[0x1E4F3DE38]);
}

uint64_t sub_1DA7DB2F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = a2(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v2, a1, v4);
}

uint64_t (*MetadataTextView.text.modify())()
{
  return CGSizeMake;
}

void *MetadataTextView.parameters.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for MetadataTextView(0) + 20));
  id v2 = v1;
  return v1;
}

void MetadataTextView.parameters.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for MetadataTextView(0) + 20);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*MetadataTextView.parameters.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t MetadataTextView.allowsCustomColors.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MetadataTextView(0) + 24));
}

uint64_t MetadataTextView.allowsCustomColors.setter(char a1)
{
  uint64_t result = type metadata accessor for MetadataTextView(0);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*MetadataTextView.allowsCustomColors.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t MetadataTextView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1DA7DB508();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1DA7DB508()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE596A0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v94 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1DA98AF38();
  uint64_t v4 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  int v83 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MetadataTextView(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v109 = (uint64_t)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DA98ACA8();
  uint64_t v97 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v110 = (char *)&v80 - v12;
  sub_1DA98A918();
  uint64_t v13 = sub_1DA98AF98();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v96 = *(int *)(v6 + 20);
  uint64_t v18 = *(void **)(v0 + v96);
  int v108 = v19 & 1;
  if (v18) {
    unsigned int v95 = objc_msgSend(v18, sel_forceUppercase);
  }
  else {
    unsigned int v95 = 0;
  }
  uint64_t result = sub_1DA98ACB8();
  uint64_t v92 = *(void *)(result + 16);
  if (!v92)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    return v13;
  }
  unint64_t v21 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  uint64_t v86 = *(int *)(v6 + 24);
  unint64_t v91 = result + v21;
  uint64_t v90 = v97 + 16;
  uint64_t v22 = (void (**)(char *, uint64_t))(v97 + 8);
  uint64_t v84 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  uint64_t v81 = (void (**)(char *, uint64_t))(v4 + 8);
  unint64_t v23 = 0;
  uint64_t v107 = v0;
  uint64_t v85 = (void (**)(char *, uint64_t))(v97 + 8);
  uint64_t v89 = v8;
  uint64_t v88 = v11;
  uint64_t v87 = result;
  while (v23 < *(void *)(result + 16))
  {
    uint64_t v103 = v13;
    uint64_t v104 = v15;
    uint64_t v105 = v17;
    int v32 = *(void (**)(char *, unint64_t, uint64_t))(v97 + 16);
    uint64_t v33 = v110;
    v32(v110, v91 + *(void *)(v97 + 72) * v23, v8);
    sub_1DA7DFB94(v1, v109, type metadata accessor for MetadataTextView);
    v32(v11, (unint64_t)v33, v8);
    unint64_t v106 = v23;
    if (v95)
    {
      unint64_t v34 = sub_1DA98AC88();
      char v35 = sub_1DA7DBEFC(v34);
      swift_bridgeObjectRelease();
      char v36 = v35 ^ 1;
    }
    else
    {
      char v36 = 0;
    }
    char v102 = *v22;
    v102(v11, v8);
    sub_1DA7E210C(v109, type metadata accessor for MetadataTextView);
    uint64_t v37 = sub_1DA7DA6F4(v36 & 1);
    uint64_t v99 = v38;
    uint64_t v100 = v37;
    int v98 = v39;
    uint64_t v101 = v40;
    uint64_t v41 = *(void **)(v1 + v96);
    uint64_t v42 = sub_1DA98AC88();
    sub_1DA7DDCB8(v41);
    if (v41)
    {
      id v43 = v41;
      id v44 = objc_msgSend(v43, sel_fontSpecification);
      if (v44)
      {
        uint64_t v45 = v44;
        id v46 = objc_msgSend(v44, sel_weight);

        if (v46)
        {
          objc_msgSend(v46, sel_doubleValue);
          sub_1DA98AE38();

          goto LABEL_17;
        }
      }
    }
    sub_1DA98AE58();
LABEL_17:
    sub_1DA98AE98();
    swift_release();
    if (v41)
    {
      id v47 = v41;
      id v48 = objc_msgSend(v47, sel_fontSpecification);
      if (v48)
      {
        uint64_t v49 = v48;
        id v50 = objc_msgSend(v48, sel_fontFeatures);

        sub_1DA7A1A08(0, (unint64_t *)&unk_1EBE64008);
        unint64_t v51 = sub_1DA98C288();
      }
      else
      {
        unint64_t v51 = MEMORY[0x1E4FBC860];
      }
    }
    else
    {
      unint64_t v51 = MEMORY[0x1E4FBC860];
    }
    if (v51 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t result = sub_1DA98CBD8();
      uint64_t v52 = result;
      if (!result) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t result = swift_retain();
      if (!v52) {
        goto LABEL_32;
      }
    }
    if (v52 < 1) {
      goto LABEL_42;
    }
    uint64_t v53 = 0;
    do
    {
      if ((v51 & 0xC000000000000001) != 0) {
        id v54 = (id)MEMORY[0x1E0177C00](v53, v51);
      }
      else {
        id v54 = *(id *)(v51 + 8 * v53 + 32);
      }
      uint64_t v55 = v54;
      ++v53;
      objc_msgSend(v54, sel_type);
      objc_msgSend(v55, sel_selector);
      sub_1DA98AEA8();

      swift_release();
    }
    while (v52 != v53);
LABEL_32:
    swift_bridgeObjectRelease_n();
    swift_release();
    if (v42)
    {
      swift_retain();
      sub_1DA98AEC8();
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    uint64_t v56 = (uint64_t)v94;
    char v57 = v98 & 1;
    uint64_t v59 = v99;
    uint64_t v58 = v100;
    uint64_t v60 = sub_1DA98AF28();
    uint64_t v62 = v61;
    char v64 = v63;
    swift_release();
    sub_1DA7DF368(v58, v59, v57);
    swift_bridgeObjectRelease();
    uint64_t v65 = v60;
    uint64_t v66 = v60;
    char v67 = v64 & 1;
    sub_1DA7DF378(v66, v62, v64 & 1);
    swift_bridgeObjectRetain();
    sub_1DA98AC98();
    uint64_t v68 = v93;
    if ((*v84)(v56, 1, v93) == 1)
    {
      sub_1DA7DF368(v65, v62, v67);
      swift_bridgeObjectRelease();
      sub_1DA7A1AE0(v56, &qword_1EBE596A0);
    }
    else
    {
      uint64_t v69 = v83;
      (*v82)(v83, v56, v68);
      uint64_t v70 = sub_1DA98AF68();
      uint64_t v72 = v71;
      char v74 = v73 & 1;
      sub_1DA7DF368(v65, v62, v67);
      swift_bridgeObjectRelease();
      sub_1DA7DF368(v65, v62, v67);
      swift_bridgeObjectRelease();
      (*v81)(v69, v68);
      uint64_t v65 = v70;
      uint64_t v62 = v72;
      char v67 = v74;
    }
    if (*(unsigned char *)(v107 + v86) == 1)
    {
      if (sub_1DA98AC78())
      {
        uint64_t v75 = sub_1DA98AEE8();
        uint64_t v77 = v76;
        char v79 = v78 & 1;
        swift_release();
        sub_1DA7DF368(v65, v62, v67);
        swift_bridgeObjectRelease();
        uint64_t v65 = v75;
        uint64_t v62 = v77;
        char v67 = v79;
      }
    }
    unint64_t v23 = v106 + 1;
    char v24 = v108 & 1;
    uint64_t v26 = v103;
    uint64_t v25 = v104;
    uint64_t v27 = sub_1DA98AF18();
    unint64_t v106 = v28;
    uint64_t v17 = v29;
    int v108 = v30 & 1;
    uint64_t v31 = v25;
    uint64_t v13 = v27;
    sub_1DA7DF368(v26, v31, v24);
    swift_bridgeObjectRelease();
    uint64_t v15 = v106;
    sub_1DA7DF368(v65, v62, v67);
    swift_bridgeObjectRelease();
    uint64_t v8 = v89;
    uint64_t v22 = v85;
    v102(v110, v89);
    uint64_t v11 = v88;
    uint64_t result = v87;
    uint64_t v1 = v107;
    if (v23 == v92) {
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

unint64_t sub_1DA7DBEFC(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result >> 62) {
      goto LABEL_28;
    }
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v2; uint64_t v2 = sub_1DA98CBD8())
    {
      uint64_t v3 = (void *)*MEMORY[0x1E4F24558];
      uint64_t v13 = (void *)*MEMORY[0x1E4F24548];
      uint64_t v4 = 4;
      uint64_t v11 = (void *)*MEMORY[0x1E4F24558];
      uint64_t v12 = v2;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if ((v1 & 0xC000000000000001) == 0) {
          break;
        }
        id v6 = (id)MEMORY[0x1E0177C00](v4 - 4, v1);
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_27;
        }
LABEL_12:
        id v8 = v6;
        id v9 = v3;
        if (objc_msgSend(v8, sel___swift_objectForKeyedSubscript_, v9))
        {
          sub_1DA98C8C8();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v14 = 0u;
          long long v15 = 0u;
        }
        sub_1DA7BA440((uint64_t)&v14, (uint64_t)v16, &qword_1EBE66B48);
        if (v17)
        {
          if (swift_dynamicCast())
          {

            id v10 = v13;
            if (objc_msgSend(v8, (SEL)&selRef_preferredFontForTextStyle_ + 7, v10))
            {
              sub_1DA98C8C8();
              swift_unknownObjectRelease();
            }
            else
            {

              long long v14 = 0u;
              long long v15 = 0u;
            }
            sub_1DA7BA440((uint64_t)&v14, (uint64_t)v16, &qword_1EBE66B48);
            if (!v17)
            {

              sub_1DA7A1AE0((uint64_t)v16, &qword_1EBE66B48);
LABEL_26:
              uint64_t v3 = v11;
              uint64_t v2 = v12;
              goto LABEL_6;
            }
            if ((swift_dynamicCast() & 1) == 0)
            {

              goto LABEL_26;
            }

            uint64_t v3 = v11;
            uint64_t v2 = v12;
          }
          else
          {
          }
        }
        else
        {

          sub_1DA7A1AE0((uint64_t)v16, &qword_1EBE66B48);
        }
LABEL_6:
        ++v4;
        if (v7 == v2) {
          goto LABEL_29;
        }
      }
      id v6 = *(id *)(v1 + 8 * v4);
      uint64_t v7 = v4 - 3;
      if (!__OFADD__(v5, 1)) {
        goto LABEL_12;
      }
LABEL_27:
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
    }
LABEL_29:
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1DA7DC1D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1DA7DB508();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1DA7DC20C@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v78 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE636B0);
  uint64_t v79 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v77 = (char *)v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v64 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63568);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v74 = (char *)v64 - v13;
  uint64_t v14 = sub_1DA989638();
  MEMORY[0x1F4188790](v14);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63840);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v75 = (uint64_t)v64 - v19;
  id v20 = *a1;
  if (*a1 && objc_msgSend(*a1, sel_showsDateAlongsideText))
  {
    type metadata accessor for InlineDateModifier(0);
    uint64_t v72 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F8);
    sub_1DA98B278();
    sub_1DA7DC8A4();
    sub_1DA7E00DC(&qword_1EBE63398, MEMORY[0x1E4F27928]);
    uint64_t v21 = sub_1DA98AF88();
    uint64_t v23 = v22;
    char v25 = v24 & 1;
    sub_1DA7D6870(0, v20);
    uint64_t v71 = v12;
    uint64_t v26 = sub_1DA98AF28();
    uint64_t v69 = v27;
    uint64_t v70 = v26;
    char v29 = v28;
    uint64_t v73 = v30;
    swift_release();
    int v68 = v29 & 1;
    sub_1DA7DF368(v21, v23, v25);
    swift_bridgeObjectRelease();
    id v67 = v20;
    sub_1DA98A918();
    uint64_t v31 = sub_1DA98AF98();
    uint64_t v33 = v32;
    v64[1] = v34;
    LOBYTE(v23) = v35 & 1;
    sub_1DA7D6870(0, v20);
    uint64_t v36 = sub_1DA98AF28();
    uint64_t v66 = v4;
    uint64_t v37 = v36;
    id v38 = v20;
    id v65 = v20;
    uint64_t v40 = v39;
    char v42 = v41;
    uint64_t v44 = v43;
    swift_release();
    v42 &= 1u;
    sub_1DA7DF368(v31, v33, v23);
    swift_bridgeObjectRelease();
    uint64_t v80 = v37;
    uint64_t v81 = v40;
    char v82 = v42;
    uint64_t v83 = v44;
    id v84 = v38;
    char v85 = 0;
    id v45 = v67;
    id v67 = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE634F0);
    sub_1DA7E2070();
    uint64_t v46 = (uint64_t)v74;
    sub_1DA98B0D8();
    uint64_t v47 = v37;
    uint64_t v4 = v66;
    sub_1DA7DF368(v47, v40, v42);

    swift_bridgeObjectRelease();
    uint64_t v48 = (uint64_t)v71;
    sub_1DA7A1F58(v46, (uint64_t)v71, &qword_1EBE63568);
    uint64_t v50 = v69;
    uint64_t v49 = v70;
    *(void *)uint64_t v18 = v70;
    *((void *)v18 + 1) = v50;
    LOBYTE(v40) = v68;
    v18[16] = v68;
    id v51 = v65;
    *((void *)v18 + 3) = v73;
    *((void *)v18 + 4) = v51;
    v18[40] = 1;
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE634F8);
    sub_1DA7A1F58(v48, (uint64_t)&v18[*(int *)(v52 + 48)], &qword_1EBE63568);
    sub_1DA7DF378(v49, v50, v40);
    swift_bridgeObjectRetain();
    id v53 = v67;
    sub_1DA7A1AE0(v46, &qword_1EBE63568);
    id v8 = v72;
    sub_1DA7A1AE0(v48, &qword_1EBE63568);
    sub_1DA7DF368(v49, v50, v40);

    swift_bridgeObjectRelease();
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63838);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v18, 0, 1, v54);
    uint64_t v55 = v75;
    sub_1DA7BA440((uint64_t)v18, v75, &qword_1EBE63840);
  }
  else
  {
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63838);
    uint64_t v55 = v75;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v75, 1, 1, v56);
  }
  uint64_t v57 = v79;
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
  v58(v8, v76, v4);
  sub_1DA7A1F58(v55, (uint64_t)v18, &qword_1EBE63840);
  uint64_t v59 = v77;
  v58(v77, (uint64_t)v8, v4);
  uint64_t v60 = v78;
  sub_1DA7A1F58((uint64_t)v18, v78, &qword_1EBE63840);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63848);
  v58((char *)(v60 + *(int *)(v61 + 48)), (uint64_t)v59, v4);
  uint64_t v62 = *(void (**)(char *, uint64_t))(v57 + 8);
  v62(v8, v4);
  sub_1DA7A1AE0(v55, &qword_1EBE63840);
  v62(v59, v4);
  return sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE63840);
}

id sub_1DA7DC8A4()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1DA9896E8();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x1F4188790](v2);
  id v38 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633A0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v37 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DA989748();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1DA989708();
  uint64_t v9 = *(void *)(v34 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v34);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v33 - v13;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  type metadata accessor for InlineDateModifier(0);
  sub_1DA877580((uint64_t)v14);
  uint64_t v16 = (void *)sub_1DA9896C8();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v18 = v14;
  uint64_t v19 = v34;
  v17(v18, v34);
  objc_msgSend(v15, sel_setLocale_, v16);

  uint64_t v33 = v1;
  sub_1DA87754C((uint64_t)v8);
  id v20 = (void *)sub_1DA989718();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v36);
  objc_msgSend(v15, sel_setTimeZone_, v20);

  objc_msgSend(v15, sel_setFormattingContext_, 2);
  sub_1DA877580((uint64_t)v12);
  uint64_t v21 = v38;
  sub_1DA9896F8();
  v17(v12, v19);
  uint64_t v22 = (uint64_t)v37;
  sub_1DA9896D8();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v40);
  uint64_t v23 = sub_1DA9896B8();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
  {
    uint64_t v25 = sub_1DA9896A8();
    uint64_t v27 = v26;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    if (v25 == 28261 && v27 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v28 = sub_1DA98CE58();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0) {
        goto LABEL_8;
      }
    }
    char v29 = (void *)sub_1DA98C008();
    uint64_t v30 = &selRef_setDateFormat_;
    goto LABEL_12;
  }
  sub_1DA7A1AE0(v22, &qword_1EBE633A0);
LABEL_8:
  if (*v33)
  {
    id v31 = objc_msgSend(*v33, sel__effectiveDateFormat);
    sub_1DA98C038();
  }
  else
  {
    sub_1DA98C038();
  }
  char v29 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  uint64_t v30 = &selRef_setLocalizedDateFormatFromTemplate_;
LABEL_12:
  objc_msgSend(v15, *v30, v29);

  return v15;
}

uint64_t sub_1DA7DCD88()
{
  uint64_t v0 = sub_1DA98C5E8();
  uint64_t v16 = *(void *)(v0 - 8);
  uint64_t v17 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DA98C718();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633B8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(self, sel_defaultCenter);
  sub_1DA98C728();

  sub_1DA98C5C8();
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE65CB0);
  uint64_t v12 = (void *)sub_1DA98C608();
  uint64_t v18 = v12;
  sub_1DA7E00DC((unint64_t *)&qword_1EBE62B08, MEMORY[0x1E4F27FC8]);
  sub_1DA7E2008();
  sub_1DA98A178();

  (*(void (**)(char *, uint64_t))(v16 + 8))(v2, v17);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1DA7A0410(&qword_1EBE633B0, &qword_1EBE633B8);
  uint64_t v13 = sub_1DA98A0F8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

uint64_t sub_1DA7DD098(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1DA989638();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = sub_1DA989F38();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(int *)(type metadata accessor for InlineDateModifier(0) + 20);
  v21[1] = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2 + v14, v10);
  uint64_t v15 = sub_1DA989F18();
  os_log_type_t v16 = sub_1DA98C548();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    v21[0] = v3;
    uint64_t v18 = v17;
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_1DA795000, v15, v16, "Significant time changed - reloading inline date modifier", v17, 2u);
    uint64_t v19 = v18;
    uint64_t v3 = v21[0];
    MEMORY[0x1E0178DA0](v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1DA989628();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F8);
  sub_1DA98B288();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1DA7DD314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63818);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_1DA98A898();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63438);
  sub_1DA7DC20C(v3, a1, (uint64_t)&v10[*(int *)(v11 + 44)]);
  uint64_t v12 = sub_1DA7DCD88();
  sub_1DA7DFB94((uint64_t)v3, (uint64_t)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for InlineDateModifier);
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  sub_1DA7DFE70((uint64_t)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for InlineDateModifier);
  sub_1DA7A1F58((uint64_t)v10, a3, &qword_1EBE63818);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63598);
  *(void *)(a3 + *(int *)(v15 + 52)) = v12;
  os_log_type_t v16 = (uint64_t (**)(uint64_t))(a3 + *(int *)(v15 + 56));
  *os_log_type_t v16 = sub_1DA7E1F98;
  v16[1] = (uint64_t (*)(uint64_t))v14;
  return sub_1DA7A1AE0((uint64_t)v10, &qword_1EBE63818);
}

uint64_t sub_1DA7DD4EC@<X0>(void *a1@<X1>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63630);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63480);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_6;
  }
  id v15 = objc_msgSend(a1, sel_symbolScale);
  if (v15 == (id)3)
  {
    uint64_t v19 = (unsigned int *)MEMORY[0x1E4F3EC48];
LABEL_9:
    uint64_t v20 = *v19;
    uint64_t v21 = sub_1DA98B248();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v29 = a3;
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v8, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, v21);
    a3 = v29;
    goto LABEL_10;
  }
  if (v15 == (id)2)
  {
    uint64_t v19 = (unsigned int *)MEMORY[0x1E4F3EC70];
    goto LABEL_9;
  }
  if (v15 != (id)1)
  {
LABEL_6:
    uint64_t v18 = sub_1DA98B248();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
    goto LABEL_10;
  }
  LODWORD(v29) = *MEMORY[0x1E4F3EC60];
  uint64_t v16 = sub_1DA98B248();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v8, v29, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
LABEL_10:
  sub_1DA7DD85C((uint64_t)v8, (uint64_t)v11);
  sub_1DA7A1AE0((uint64_t)v8, &qword_1EBE637F0);
  uint64_t v24 = sub_1DA7D66A0(a1, a2 & 1);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1DA7A1F58((uint64_t)v11, (uint64_t)v14, &qword_1EBE63630);
  uint64_t v26 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  *uint64_t v26 = KeyPath;
  v26[1] = v24;
  sub_1DA7A1AE0((uint64_t)v11, &qword_1EBE63630);
  return sub_1DA7BA440((uint64_t)v14, a3, &qword_1EBE63480);
}

uint64_t sub_1DA7DD85C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE636D8);
  uint64_t v3 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE635B8);
  MEMORY[0x1F4188790](v24);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63490);
  MEMORY[0x1F4188790](v26);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DA98B248();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A1F58(a1, (uint64_t)v12, &qword_1EBE637F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v12, &qword_1EBE637F0);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v18 = v28;
    v17(v5, v25, v28);
    v17(v7, (uint64_t)v5, v18);
    swift_storeEnumTagMultiPayload();
    sub_1DA7DF170();
    sub_1DA7A0410(&qword_1EBE636D0, &qword_1EBE636D8);
    sub_1DA98AA68();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v21 = (uint64_t *)&v9[*(int *)(v26 + 36)];
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637A8);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))((char *)v21 + *(int *)(v22 + 28), v16, v13);
    *uint64_t v21 = KeyPath;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v25, v28);
    sub_1DA7A1F58((uint64_t)v9, (uint64_t)v7, &qword_1EBE63490);
    swift_storeEnumTagMultiPayload();
    sub_1DA7DF170();
    sub_1DA7A0410(&qword_1EBE636D0, &qword_1EBE636D8);
    sub_1DA98AA68();
    sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE63490);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_1DA7DDCAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7DD4EC(*(void **)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_1DA7DDCB8(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    id v3 = objc_msgSend(v2, sel_fontSpecification);
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = objc_msgSend(v3, sel_name);
      if (v5)
      {
        uint64_t v6 = v5;
        sub_1DA98C038();

        id v7 = objc_msgSend(v4, sel_size);
        if (v7)
        {
          uint64_t v8 = v7;
          objc_msgSend(v7, sel_doubleValue);
          uint64_t v9 = sub_1DA98AE68();

          swift_bridgeObjectRelease();
        }
        else
        {
          id v14 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
          objc_msgSend(v14, sel_pointSize);

          uint64_t v9 = sub_1DA98AE68();
          swift_bridgeObjectRelease();
        }
        return v9;
      }
      else
      {
        id v11 = objc_msgSend(v4, sel_size);
        if (v11)
        {
          uint64_t v12 = v11;
          objc_msgSend(v11, sel_doubleValue);
          objc_msgSend(v4, sel_design);
          uint64_t v13 = sub_1DA7DF388(a1);
        }
        else
        {
          id v15 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
          objc_msgSend(v15, sel_pointSize);

          objc_msgSend(v4, sel_design);
          uint64_t v13 = sub_1DA7DF388(a1);
        }
        return v13;
      }
    }
  }

  return sub_1DA98ADE8();
}

uint64_t sub_1DA7DDF08(unint64_t a1, uint64_t a2)
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v9 = a2;
LABEL_11:
    swift_bridgeObjectRelease();
    return v9;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = sub_1DA98CBD8();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1E0177C00](v6, a1);
      }
      else {
        id v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      ++v6;
      objc_msgSend(v7, sel_type);
      objc_msgSend(v8, sel_selector);
      uint64_t v9 = sub_1DA98AEA8();

      swift_release();
    }
    while (v4 != v6);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA7DE038@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA98A5F8();
  *a1 = result;
  return result;
}

uint64_t sub_1DA7DE064@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA98A5F8();
  *a1 = result;
  return result;
}

uint64_t sub_1DA7DE090()
{
  return sub_1DA98A608();
}

uint64_t sub_1DA7DE0BC()
{
  return sub_1DA98A608();
}

unint64_t sub_1DA7DE0E8()
{
  unint64_t result = qword_1EBE599A8;
  if (!qword_1EBE599A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE599B0);
    sub_1DA7E00DC(&qword_1EBE59BC0, MEMORY[0x1E4F46D88]);
    sub_1DA7A0410(&qword_1EBE63780, &qword_1EBE63788);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE599A8);
  }
  return result;
}

unint64_t sub_1DA7DE1B8()
{
  unint64_t result = qword_1EBE63CB0;
  if (!qword_1EBE63CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63CB0);
  }
  return result;
}

uint64_t sub_1DA7DE20C()
{
  return sub_1DA7DEE8C(&qword_1EBE59A68, &qword_1EBE59A70, (void (*)(void))sub_1DA7DE248);
}

unint64_t sub_1DA7DE248()
{
  unint64_t result = qword_1EBE63F20;
  if (!qword_1EBE63F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63F20);
  }
  return result;
}

uint64_t type metadata accessor for MetadataTextView(uint64_t a1)
{
  return sub_1DA7A88D4(a1, qword_1EBE63998);
}

uint64_t sub_1DA7DE2BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA7DE2D8()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for MetadataInlineGraphicView(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DA98ACF8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v9;
    id v10 = v9;
  }
  return a1;
}

void destroy for MetadataInlineGraphicView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA98ACF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t initializeWithCopy for MetadataInlineGraphicView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98ACF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for MetadataInlineGraphicView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98ACF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = *(void **)(a1 + v7);
  id v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  id v10 = v9;

  return a1;
}

uint64_t initializeWithTake for MetadataInlineGraphicView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98ACF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MetadataInlineGraphicView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98ACF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataInlineGraphicView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7DE680);
}

uint64_t sub_1DA7DE680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98ACF8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for MetadataInlineGraphicView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7DE760);
}

uint64_t sub_1DA7DE760(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DA98ACF8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

uint64_t sub_1DA7DE81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA7DED98(a1, a2, a3, MEMORY[0x1E4F3DE60]);
}

void *initializeBufferWithCopyOfBuffer for MetadataTextView(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DA98ACC8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v10;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    id v11 = v10;
  }
  return a1;
}

void destroy for MetadataTextView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA98ACC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t initializeWithCopy for MetadataTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98ACC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  id v10 = v9;
  return a1;
}

uint64_t assignWithCopy for MetadataTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98ACC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  id v10 = v9;

  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for MetadataTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98ACC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MetadataTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98ACC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7DEBD4);
}

uint64_t sub_1DA7DEBD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98ACC8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for MetadataTextView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7DECB4);
}

uint64_t sub_1DA7DECB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DA98ACC8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t sub_1DA7DED70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA7DED98(a1, a2, a3, MEMORY[0x1E4F3DE38]);
}

uint64_t sub_1DA7DED98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DA7DEE3C()
{
  return sub_1DA7DEE8C(&qword_1EBE59B38, &qword_1EBE59B40, (void (*)(void))sub_1DA7DE20C);
}

uint64_t sub_1DA7DEE8C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_1DA7E4A7C(&qword_1EBE59A38, &qword_1EBE59A40, (void (*)(void))sub_1DA7DE0E8, (void (*)(void))sub_1DA7DE1B8);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA7DEF40()
{
  return MEMORY[0x1E4F3E2E8];
}

ValueMetadata *type metadata accessor for MetadataInlineShrinkToFitModifier()
{
  return &type metadata for MetadataInlineShrinkToFitModifier;
}

uint64_t initializeBufferWithCopyOfBuffer for TextParametersModifier(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for TextParametersModifier(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  unint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for TextParametersModifier(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextParametersModifier(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 9)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TextParametersModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextParametersModifier()
{
  return &type metadata for TextParametersModifier;
}

uint64_t sub_1DA7DF0E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA7DF0FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA7DF118@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA98A4A8();
  *a1 = result;
  return result;
}

uint64_t sub_1DA7DF144()
{
  return sub_1DA98A4B8();
}

unint64_t sub_1DA7DF170()
{
  unint64_t result = qword_1EBE63488;
  if (!qword_1EBE63488)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63490);
    sub_1DA7A0410(&qword_1EBE636D0, &qword_1EBE636D8);
    sub_1DA7A0410(&qword_1EBE637A0, &qword_1EBE637A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63488);
  }
  return result;
}

uint64_t sub_1DA7DF234()
{
  return sub_1DA98A438();
}

uint64_t sub_1DA7DF258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1DA7DF328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA7DF258(a1, a2, a3, a4, MEMORY[0x1E4F3EC78], MEMORY[0x1E4F3CEE8]);
}

uint64_t sub_1DA7DF368(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DA7DF378(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1DA7DF388(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637D8);
  MEMORY[0x1F4188790](v2 - 8);
  int v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637D0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DA98ADD8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE637D0);
    goto LABEL_19;
  }
  id v12 = a1;
  id v13 = objc_msgSend(v12, sel_fontSpecification);
  if (!v13)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_12;
  }
  id v14 = v13;
  id v15 = objc_msgSend(v13, sel_design);
  if (v15 == (id)4)
  {
    sub_1DA98ADC8();
    goto LABEL_9;
  }
  if (v15 == (id)5)
  {
    sub_1DA98ADB8();
LABEL_9:

    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);

LABEL_11:
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_12:
    sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE637D0);
    id v16 = v12;
    id v17 = objc_msgSend(v16, sel_fontSpecification);
    if (v17)
    {
      uint64_t v18 = v17;
      id v19 = objc_msgSend(v17, sel_design);

      if (v19 == (id)1)
      {
        uint64_t v20 = (unsigned int *)MEMORY[0x1E4F3E070];
        goto LABEL_20;
      }
      if (v19 == (id)2)
      {
        uint64_t v20 = (unsigned int *)MEMORY[0x1E4F3E090];
        goto LABEL_20;
      }
      if (v19 == (id)3)
      {
        uint64_t v20 = (unsigned int *)MEMORY[0x1E4F3E078];
LABEL_20:
        uint64_t v22 = *v20;
        uint64_t v23 = sub_1DA98AE28();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v4, v22, v23);
        sub_1DA98AE28();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v4, 0, 1, v23);
        uint64_t v21 = sub_1DA98AE88();
        sub_1DA7A1AE0((uint64_t)v4, &qword_1EBE637D8);
        return v21;
      }
    }
    else
    {
    }
LABEL_19:
    uint64_t v20 = (unsigned int *)MEMORY[0x1E4F3E088];
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_1DA98AE58();
  uint64_t v21 = sub_1DA98AE78();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v21;
}

unint64_t sub_1DA7DF7A0()
{
  unint64_t result = qword_1EBE66AF8;
  if (!qword_1EBE66AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE66AF8);
  }
  return result;
}

uint64_t sub_1DA7DF80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_19Tm);
}

uint64_t sub_1DA7DF824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_20Tm);
}

uint64_t type metadata accessor for InlineTextView(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE63948);
}

uint64_t getEnumTagSinglePayload for _MetadataInlineShrinkToFitLayout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for _MetadataInlineShrinkToFitLayout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for _MetadataInlineShrinkToFitLayout()
{
  return &type metadata for _MetadataInlineShrinkToFitLayout;
}

unint64_t sub_1DA7DF8C0()
{
  unint64_t result = qword_1EBE63478;
  if (!qword_1EBE63478)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63480);
    sub_1DA7DF960();
    sub_1DA7A0410(&qword_1EBE63790, &qword_1EBE63798);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63478);
  }
  return result;
}

unint64_t sub_1DA7DF960()
{
  unint64_t result = qword_1EBE63628;
  if (!qword_1EBE63628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63630);
    sub_1DA7DF170();
    sub_1DA7A0410(&qword_1EBE636D0, &qword_1EBE636D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63628);
  }
  return result;
}

unint64_t sub_1DA7DFA04()
{
  unint64_t result = qword_1EA8E5B40;
  if (!qword_1EA8E5B40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E5B20);
    sub_1DA7A0410(&qword_1EA8E5B48, &qword_1EA8E5B50);
    sub_1DA7A0410(&qword_1EA8E5B58, &qword_1EA8E5B28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5B40);
  }
  return result;
}

unint64_t sub_1DA7DFACC()
{
  unint64_t result = qword_1EA8E5B60;
  if (!qword_1EA8E5B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5B60);
  }
  return result;
}

unint64_t sub_1DA7DFB24()
{
  unint64_t result = qword_1EA8E5B68;
  if (!qword_1EA8E5B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5B68);
  }
  return result;
}

uint64_t sub_1DA7DFB78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA7DFB94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA7DFBFC()
{
  return objectdestroyTm_0(type metadata accessor for InlineTextView);
}

uint64_t sub_1DA7DFC14(uint64_t a1)
{
  return sub_1DA7E2308(a1, type metadata accessor for InlineTextView, (uint64_t (*)(uint64_t, uint64_t))sub_1DA7D5040);
}

unint64_t sub_1DA7DFC40()
{
  unint64_t result = qword_1EBE634D8;
  if (!qword_1EBE634D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE634E0);
    sub_1DA7A0410(&qword_1EBE63450, &qword_1EBE63458);
    sub_1DA7A0410(&qword_1EBE63770, &qword_1EBE63778);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE634D8);
  }
  return result;
}

uint64_t sub_1DA7DFD04()
{
  return sub_1DA98A4C8();
}

uint64_t sub_1DA7DFD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA7DF258(a1, a2, a3, a4, MEMORY[0x1E4F3CBF0], MEMORY[0x1E4F3D010]);
}

uint64_t type metadata accessor for InlineDateModifier(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE63AD8);
}

uint64_t type metadata accessor for MetadataInlineView(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE63AF8);
}

uint64_t sub_1DA7DFDA8()
{
  return sub_1DA98A638();
}

uint64_t sub_1DA7DFDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA7DF258(a1, a2, a3, a4, MEMORY[0x1E4F27D68], MEMORY[0x1E4F3D2B0]);
}

uint64_t sub_1DA7DFE0C()
{
  return sub_1DA98A618();
}

uint64_t sub_1DA7DFE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA7DF258(a1, a2, a3, a4, MEMORY[0x1E4F27A78], MEMORY[0x1E4F3D220]);
}

uint64_t sub_1DA7DFE70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA7DFED8(uint64_t a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = sub_1DA98A2B8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DA98A2F8();
  sub_1DA7E00DC(&qword_1EA8E5B70, MEMORY[0x1E4F3C980]);
  sub_1DA98C448();
  sub_1DA98C478();
  uint64_t result = sub_1DA98C468();
  if (result == 1)
  {
    sub_1DA98A308();
    sub_1DA98B418();
    char v17 = 0;
    v16[0] = 0;
    sub_1DA7DA29C(*(uint64_t *)&a4, 0, *(uint64_t *)&a5, 0, a1, a7);
    char v17 = 0;
    v16[0] = 0;
    sub_1DA98A2A8();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

uint64_t sub_1DA7E00DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void **sub_1DA7E0124(void **a1, void **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  int v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DA989F38();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = a3[6];
    id v15 = (char *)v7 + v14;
    id v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1DA989638();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F8);
    *(void *)&v15[*(int *)(v18 + 28)] = *(void *)&v16[*(int *)(v18 + 28)];
    uint64_t v19 = a3[7];
    uint64_t v20 = (void **)((char *)v7 + v19);
    uint64_t v21 = (void **)((char *)a2 + v19);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_1DA989748();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[8];
    uint64_t v24 = (void **)((char *)v7 + v23);
    uint64_t v25 = (void **)((char *)a2 + v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_1DA989708();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

uint64_t sub_1DA7E03A0(id *a1, int *a2)
{
  int v4 = (char *)a1 + a2[5];
  uint64_t v5 = sub_1DA989F38();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + a2[6];
  uint64_t v7 = sub_1DA989638();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F8);
  swift_release();
  uint64_t v8 = (char *)a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1DA989748();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = (char *)a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1DA989708();
    uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
    return v12(v10, v11);
  }
  else
  {
    return swift_release();
  }
}

void **sub_1DA7E0568(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DA989F38();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  id v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F8);
  *(void *)&v14[*(int *)(v17 + 28)] = *(void *)&v15[*(int *)(v17 + 28)];
  uint64_t v18 = a3[7];
  uint64_t v19 = (void **)((char *)a1 + v18);
  uint64_t v20 = (void **)((char *)a2 + v18);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_1DA989748();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *uint64_t v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void **)((char *)a1 + v22);
  uint64_t v24 = (void **)((char *)a2 + v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_1DA989708();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *uint64_t v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_1DA7E0790(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  *a1 = *a2;
  id v8 = v7;

  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1DA989F38();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  id v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F8);
  *(void *)&v14[*(int *)(v17 + 28)] = *(void *)&v15[*(int *)(v17 + 28)];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v18 = a3[7];
    uint64_t v19 = (void **)((char *)a1 + v18);
    uint64_t v20 = (void **)((char *)a2 + v18);
    sub_1DA7A1AE0((uint64_t)a1 + v18, &qword_1EBE633F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1DA989748();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[8];
    uint64_t v23 = (void **)((char *)a1 + v22);
    uint64_t v24 = (void **)((char *)a2 + v22);
    sub_1DA7A1AE0((uint64_t)a1 + v22, &qword_1EBE633E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_1DA989708();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DA7E09E0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DA989F38();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F8);
  *(void *)&v11[*(int *)(v14 + 28)] = *(void *)&v12[*(int *)(v14 + 28)];
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_1DA989748();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_1DA989708();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  return a1;
}

void **sub_1DA7E0C0C(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a3[5];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DA989F38();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F8);
  *(void *)&v12[*(int *)(v15 + 28)] = *(void *)&v13[*(int *)(v15 + 28)];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DA7A1AE0((uint64_t)a1 + v16, &qword_1EBE633F8);
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_1DA989748();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    sub_1DA7A1AE0((uint64_t)a1 + v21, &qword_1EBE633E8);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_1DA989708();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DA7E0E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7E0E84);
}

uint64_t sub_1DA7E0E84(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  uint64_t v9 = sub_1DA989F38();
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84) == a2)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = a3[5];
LABEL_13:
    uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
    return v15(&a1[v12], a2, v10);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v10 = v13;
    uint64_t v11 = *(void *)(v13 - 8);
    uint64_t v12 = a3[6];
    goto LABEL_13;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63420);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v10 = v14;
    uint64_t v11 = *(void *)(v14 - 8);
    uint64_t v12 = a3[7];
    goto LABEL_13;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63418);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = &a1[a3[8]];

  return v17(v19, a2, v18);
}

uint64_t sub_1DA7E1060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7E1074);
}

char *sub_1DA7E1074(char *result, uint64_t a2, int a3, int *a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)uint64_t result = a2;
    return result;
  }
  uint64_t v8 = sub_1DA989F38();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v14(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F8);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63420);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_9;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63418);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = &v5[a4[8]];

  return (char *)v16(v18, a2, a2, v17);
}

void sub_1DA7E1244()
{
  sub_1DA989F38();
  if (v0 <= 0x3F)
  {
    sub_1DA7E3F28(319, &qword_1EBE63800, MEMORY[0x1E4F27928], MEMORY[0x1E4F3ECC8]);
    if (v1 <= 0x3F)
    {
      sub_1DA7E3F28(319, &qword_1EBE63400, MEMORY[0x1E4F27D68], MEMORY[0x1E4F3C648]);
      if (v2 <= 0x3F)
      {
        sub_1DA7E3F28(319, &qword_1EBE633F0, MEMORY[0x1E4F27A78], MEMORY[0x1E4F3C648]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *sub_1DA7E1420(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DA98AD28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    uint64_t v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    uint64_t v13 = sub_1DA989F38();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    id v15 = v10;
    v14(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_1DA7E1548(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA98AD28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_1DA989F38();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1DA7E15FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98AD28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  uint64_t v12 = sub_1DA989F38();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  id v14 = v9;
  v13(v10, v11, v12);
  return a1;
}

uint64_t sub_1DA7E16D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98AD28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  id v10 = v9;

  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1DA7E17A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98AD28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DA7E1864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98AD28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1DA7E1930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7E1944);
}

uint64_t __swift_get_extra_inhabitant_index_19Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98AD28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_1DA989F38();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_1DA7E1A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7E1A94);
}

uint64_t __swift_store_extra_inhabitant_index_20Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DA98AD28();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  else
  {
    uint64_t v11 = sub_1DA989F38();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1DA7E1BC4()
{
  uint64_t result = sub_1DA98AD28();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DA989F38();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1DA7E1C98()
{
  unint64_t result = qword_1EBE63668;
  if (!qword_1EBE63668)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63670);
    sub_1DA7DFC40();
    sub_1DA7A0410(&qword_1EBE63450, &qword_1EBE63458);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63668);
  }
  return result;
}

uint64_t sub_1DA7E1D38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA7E1D54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA7E1D70()
{
  unint64_t v1 = (int *)type metadata accessor for InlineDateModifier(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = v0 + v3 + v1[5];
  uint64_t v6 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + v3 + v1[6];
  uint64_t v8 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637F8);
  swift_release();
  uint64_t v9 = v0 + v3 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1DA989748();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v0 + v3 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1DA989708();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1DA7E1F98(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for InlineDateModifier(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1DA7DD098(a1, v4);
}

unint64_t sub_1DA7E2008()
{
  unint64_t result = qword_1EBE62A98;
  if (!qword_1EBE62A98)
  {
    sub_1DA7A1A08(255, (unint64_t *)&qword_1EBE65CB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE62A98);
  }
  return result;
}

unint64_t sub_1DA7E2070()
{
  unint64_t result = qword_1EBE634E8;
  if (!qword_1EBE634E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE634F0);
    sub_1DA7DE1B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE634E8);
  }
  return result;
}

uint64_t type metadata accessor for MetadataInlineTextGraphicView(uint64_t a1)
{
  return sub_1DA7A88D4(a1, qword_1EBE631B0);
}

uint64_t sub_1DA7E210C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for MetadataInlineView.IterableFallback(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE63AE8);
}

uint64_t sub_1DA7E218C()
{
  return objectdestroyTm_0(type metadata accessor for MetadataInlineView);
}

uint64_t objectdestroyTm_0(uint64_t (*a1)(void))
{
  uint64_t v2 = (int *)(a1(0) - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v1 + v4;
  uint64_t v8 = sub_1DA98AD28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  uint64_t v9 = v7 + v2[8];
  uint64_t v10 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return MEMORY[0x1F4186498](v1, v5, v6);
}

uint64_t sub_1DA7E22DC(uint64_t a1)
{
  return sub_1DA7E2308(a1, type metadata accessor for MetadataInlineView, (uint64_t (*)(uint64_t, uint64_t))sub_1DA7D7C6C);
}

uint64_t sub_1DA7E2308(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

unint64_t sub_1DA7E23A0()
{
  unint64_t result = qword_1EA8E5BB0;
  if (!qword_1EA8E5BB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E5BA0);
    sub_1DA7E00DC(&qword_1EBE63F00, (void (*)(uint64_t))type metadata accessor for MetadataInlineTextGraphicView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5BB0);
  }
  return result;
}

uint64_t *sub_1DA7E244C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DA98ACC8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63740);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1DA98ACF8();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63750);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    uint64_t v19 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)a1 + v17) = (uint64_t)v19;
    uint64_t v20 = (char *)a1 + v18;
    uint64_t v21 = (char *)a2 + v18;
    uint64_t v22 = sub_1DA989F38();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    id v24 = v19;
    v23(v20, v21, v22);
    uint64_t v25 = a3[8];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_1DA98AC28();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63730);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
  }
  return a1;
}

uint64_t sub_1DA7E27E4(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DA98ACC8();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_1DA98ACF8();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }

  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_1DA98AC28();
  uint64_t v15 = *(void *)(v12 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v11, 1, v12);
  if (!result)
  {
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
    return v14(v11, v12);
  }
  return result;
}

char *sub_1DA7E2A28(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DA98ACC8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63740);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1DA98ACF8();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63750);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = *(void **)&a2[v15];
  *(void *)&a1[v15] = v17;
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  uint64_t v20 = sub_1DA989F38();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
  id v22 = v17;
  v21(v18, v19, v20);
  uint64_t v23 = a3[8];
  id v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_1DA98AC28();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63730);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

char *sub_1DA7E2D70(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DA98ACC8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63740);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1DA98ACF8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63750);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  id v22 = *(void **)&a1[v21];
  uint64_t v23 = *(void **)&a2[v21];
  *(void *)&a1[v21] = v23;
  id v24 = v23;

  uint64_t v25 = a3[7];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = sub_1DA989F38();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  uint64_t v29 = a3[8];
  uint64_t v30 = &a1[v29];
  id v31 = &a2[v29];
  uint64_t v32 = sub_1DA98AC28();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  LODWORD(v27) = v34(v30, 1, v32);
  int v35 = v34(v31, 1, v32);
  if (!v27)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_18;
  }
  if (v35)
  {
LABEL_18:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63730);
    memcpy(v30, v31, *(void *)(*(void *)(v36 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

char *sub_1DA7E31D4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DA98ACC8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63740);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1DA98ACF8();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63750);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_1DA989F38();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_1DA98AC28();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63730);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

char *sub_1DA7E350C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DA98ACC8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63740);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1DA98ACF8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63750);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  uint64_t v22 = *(void **)&a1[v21];
  *(void *)&a1[v21] = *(void *)&a2[v21];

  uint64_t v23 = a3[7];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_1DA989F38();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[8];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = sub_1DA98AC28();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  LODWORD(v25) = v32(v28, 1, v30);
  int v33 = v32(v29, 1, v30);
  if (!v25)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_18;
  }
  if (v33)
  {
LABEL_18:
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63730);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  return a1;
}

uint64_t sub_1DA7E396C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7E3980);
}

uint64_t sub_1DA7E3980(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63740);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63750);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  if (a2 == 2147483646)
  {
    unint64_t v14 = *(void *)(a1 + a3[6]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    int v15 = v14 - 1;
    if (v15 < 0) {
      int v15 = -1;
    }
    return (v15 + 1);
  }
  else
  {
    uint64_t v17 = sub_1DA989F38();
    if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
    {
      uint64_t v8 = v17;
      uint64_t v12 = *(void *)(v17 - 8);
      uint64_t v13 = a3[7];
      goto LABEL_13;
    }
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63730);
    int v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
    uint64_t v20 = v18;
    uint64_t v21 = a1 + a3[8];
    return v19(v21, a2, v20);
  }
}

uint64_t sub_1DA7E3B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7E3B78);
}

uint64_t sub_1DA7E3B78(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63740);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63750);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[6]) = a2;
    return result;
  }
  uint64_t v16 = sub_1DA989F38();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63730);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[8];

  return v18(v20, a2, a2, v19);
}

void sub_1DA7E3D50()
{
  sub_1DA7E3F28(319, &qword_1EBE63748, MEMORY[0x1E4F3DE38], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F)
  {
    sub_1DA7E3F28(319, &qword_1EBE63758, MEMORY[0x1E4F3DE60], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F)
    {
      sub_1DA989F38();
      if (v2 <= 0x3F)
      {
        sub_1DA7E3F28(319, &qword_1EBE63738, MEMORY[0x1E4F3DDE8], MEMORY[0x1E4FBB718]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1DA7E3F28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t *sub_1DA7E3F8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DA98AD28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DA989698();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1DA7E4094(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA98AD28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DA989698();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1DA7E413C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98AD28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DA989698();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DA7E41F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98AD28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DA989698();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DA7E42AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98AD28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DA989698();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DA7E4364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98AD28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DA989698();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DA7E441C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7E4430);
}

uint64_t sub_1DA7E4430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98AD28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1DA989698();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DA7E4528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7E453C);
}

uint64_t sub_1DA7E453C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DA98AD28();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1DA989698();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1DA7E4640()
{
  uint64_t result = sub_1DA98AD28();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DA989698();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DA7E4708()
{
  return sub_1DA7A0410(&qword_1EBE63590, &qword_1EBE63598);
}

unint64_t sub_1DA7E4748()
{
  unint64_t result = qword_1EBE63680;
  if (!qword_1EBE63680)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63688);
    sub_1DA7A0410(&qword_1EBE63428, &qword_1EBE63430);
    sub_1DA7E00DC(&qword_1EBE63F00, (void (*)(uint64_t))type metadata accessor for MetadataInlineTextGraphicView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63680);
  }
  return result;
}

uint64_t sub_1DA7E4818()
{
  return sub_1DA7E00DC(&qword_1EA8E5958, MEMORY[0x1E4F27990]);
}

uint64_t sub_1DA7E4860()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1DA7E487C()
{
  unint64_t result = qword_1EBE63540;
  if (!qword_1EBE63540)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63548);
    sub_1DA7E491C();
    sub_1DA7A0410(&qword_1EBE637B0, &qword_1EBE637B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63540);
  }
  return result;
}

unint64_t sub_1DA7E491C()
{
  unint64_t result = qword_1EBE63460;
  if (!qword_1EBE63460)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63468);
    sub_1DA7E00DC(&qword_1EBE63990, (void (*)(uint64_t))type metadata accessor for MetadataTextView);
    sub_1DA7DE1B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63460);
  }
  return result;
}

uint64_t sub_1DA7E49C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1DA98A858();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1DA7E49FC()
{
  return sub_1DA98A868();
}

uint64_t sub_1DA7E4A2C()
{
  return sub_1DA7E4A7C(&qword_1EBE63580, &qword_1EBE63588, (void (*)(void))sub_1DA7E4B04, (void (*)(void))sub_1DA7E4CC4);
}

uint64_t sub_1DA7E4A7C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA7E4B04()
{
  return sub_1DA7E4A7C(&qword_1EBE63570, &qword_1EBE63578, (void (*)(void))sub_1DA7E4B40, (void (*)(void))sub_1DA7E4C70);
}

unint64_t sub_1DA7E4B40()
{
  unint64_t result = qword_1EBE63510;
  if (!qword_1EBE63510)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63518);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63828);
    sub_1DA7A0410(&qword_1EBE63820, &qword_1EBE63828);
    swift_getOpaqueTypeConformance2();
    sub_1DA7E4C1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63510);
  }
  return result;
}

unint64_t sub_1DA7E4C1C()
{
  unint64_t result = qword_1EBE63E28;
  if (!qword_1EBE63E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63E28);
  }
  return result;
}

unint64_t sub_1DA7E4C70()
{
  unint64_t result = qword_1EBE63E30;
  if (!qword_1EBE63E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63E30);
  }
  return result;
}

unint64_t sub_1DA7E4CC4()
{
  unint64_t result = qword_1EBE63F18;
  if (!qword_1EBE63F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63F18);
  }
  return result;
}

uint64_t static ReloadConfiguration.maximumRetryAttempts.getter()
{
  return 1;
}

uint64_t sub_1DA7E4D34()
{
  unint64_t v0 = (int *)type metadata accessor for ReloadConfiguration(0);
  MEMORY[0x1F4188790](v0);
  unint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer((uint64_t)v0, qword_1EA8E5BD0);
  uint64_t v6 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_1EA8E5BD0);
  uint64_t v7 = sub_1DA989638();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  sub_1DA7E5864((uint64_t)v5, (uint64_t)v2, type metadata accessor for ReloadConfiguration.ReloadType);
  v2[v0[5]] = 1;
  *(void *)&v2[v0[7]] = 1;
  *(void *)&v2[v0[6]] = 0xA000000000000030;
  v2[v0[8]] = 1;
  sub_1DA7E9C3C((uint64_t)v5, type metadata accessor for ReloadConfiguration.ReloadType);
  return sub_1DA7E80D4((uint64_t)v2, v6);
}

uint64_t ReloadConfiguration.init(type:cost:reason:retryAttempts:allowCostOverride:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v10 = *a2;
  uint64_t v11 = *a3;
  sub_1DA7E5864(a1, a6, type metadata accessor for ReloadConfiguration.ReloadType);
  uint64_t v12 = (int *)type metadata accessor for ReloadConfiguration(0);
  *(unsigned char *)(a6 + v12[5]) = v10;
  *(void *)(a6 + v12[7]) = a4;
  *(void *)(a6 + v12[6]) = v11;
  *(unsigned char *)(a6 + v12[8]) = a5;
  return sub_1DA7E9C3C(a1, type metadata accessor for ReloadConfiguration.ReloadType);
}

uint64_t type metadata accessor for ReloadConfiguration.ReloadType(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE58AC8);
}

uint64_t type metadata accessor for ReloadConfiguration(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE58AE8);
}

uint64_t static ReloadConfiguration.initial.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA8E5520 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ReloadConfiguration(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA8E5BD0);
  return sub_1DA7E5864(v3, a1, type metadata accessor for ReloadConfiguration);
}

uint64_t ReloadConfiguration.ReloadCost.description.getter()
{
  if (*v0) {
    return 1701147238;
  }
  else {
    return 0x6465746567647562;
  }
}

BOOL static ReloadConfiguration.ReloadCost.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ReloadConfiguration.ReloadCost.hash(into:)()
{
  return sub_1DA98CF28();
}

uint64_t ReloadConfiguration.ReloadCost.hashValue.getter()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA7E50E0()
{
  if (*v0) {
    return 1701147238;
  }
  else {
    return 0x6465746567647562;
  }
}

uint64_t ReloadConfiguration.ReloadType.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DA989638();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7E5864(v1, (uint64_t)v8, type metadata accessor for ReloadConfiguration.ReloadType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    return 0x74616964656D6D69;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  if (qword_1EBE63290 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBE63318;
  uint64_t v11 = (void *)sub_1DA989568();
  id v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

  uint64_t v9 = sub_1DA98C038();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

unint64_t ReloadConfiguration.ReloadReason.description.getter()
{
  uint64_t v1 = *v0;
  switch((unint64_t)*v0 >> 61)
  {
    case 1uLL:
      sub_1DA98CA18();
      swift_bridgeObjectRelease();
      strcpy((char *)v11, "systemRequest(");
      HIBYTE(v11[1]) = -18;
      sub_1DA98C148();
      sub_1DA98C148();
      return v11[0];
    case 2uLL:
      unint64_t v5 = *(void *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v11[0] = 0;
      v11[1] = 0xE000000000000000;
      sub_1DA7A19BC(v5);
      sub_1DA98CA18();
      unint64_t v6 = swift_bridgeObjectRelease();
      unint64_t v7 = 0x656C756465686373;
      unint64_t v8 = 0xEF28797274655264;
      goto LABEL_8;
    case 3uLL:
      unint64_t v5 = *(void *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      strcpy((char *)v11, "reloadLoop(");
      HIDWORD(v11[1]) = -352321536;
      unint64_t v6 = sub_1DA7A19BC(v5);
      goto LABEL_9;
    case 4uLL:
      unint64_t v5 = *(void *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v11[0] = 0;
      v11[1] = 0xE000000000000000;
      sub_1DA7A19BC(v5);
      sub_1DA98CA18();
      unint64_t v6 = swift_bridgeObjectRelease();
      unint64_t v7 = 0xD00000000000001ELL;
      unint64_t v8 = 0x80000001DA99DBB0;
LABEL_8:
      v11[0] = v7;
      v11[1] = v8;
LABEL_9:
      ReloadConfiguration.ReloadReason.description.getter(v6);
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA7E8048(v5);
      return v11[0];
    case 5uLL:
      *((void *)&v9 + 1) = *v0;
      *(void *)&long long v9 = v1 + 0x6000000000000000;
      unint64_t result = 0xD000000000000013;
      switch((unint64_t)(v9 >> 3))
      {
        case 1uLL:
          unint64_t result = 0xD000000000000012;
          break;
        case 2uLL:
          unint64_t result = 0x437363697274656DLL;
          break;
        case 3uLL:
          unint64_t result = 0xD000000000000010;
          break;
        case 4uLL:
          unint64_t result = 0x656C617473;
          break;
        case 5uLL:
          unint64_t result = 0xD000000000000011;
          break;
        case 6uLL:
          unint64_t result = 0x6C616974696E69;
          break;
        case 7uLL:
          unint64_t result = 0x6C656D6954646162;
          break;
        case 8uLL:
          unint64_t result = 0x4368747541707061;
          break;
        case 9uLL:
          unint64_t result = 0xD000000000000019;
          break;
        case 0xAuLL:
          unint64_t result = 0xD00000000000001ALL;
          break;
        case 0xBuLL:
          unint64_t result = 0xD00000000000001DLL;
          break;
        case 0xCuLL:
          unint64_t result = 0x7463617265746E69;
          break;
        case 0xDuLL:
          unint64_t result = 0x746163696C706572;
          break;
        case 0xEuLL:
          unint64_t result = 1752397168;
          break;
        case 0xFuLL:
          unint64_t result = 0xD000000000000023;
          break;
        case 0x10uLL:
          unint64_t result = 0x6465737561706E75;
          break;
        default:
          return result;
      }
      return result;
    default:
      uint64_t v2 = *(void **)(v1 + 16);
      id v3 = v2;
      sub_1DA98CA18();
      swift_bridgeObjectRelease();
      v11[0] = 0xD000000000000018;
      v11[1] = 0x80000001DA99DC30;
      if (v2)
      {
        id v4 = objc_msgSend(v3, sel_description);
        sub_1DA98C038();
      }
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA98C148();
      sub_1DA98C148();

      return v11[0];
  }
}

uint64_t ReloadConfiguration.ReloadReason.isMandatory.getter()
{
  uint64_t v1 = *v0 >> 61;
  if (v1 < 5) {
    return 0;
  }
  *((void *)&v4 + 1) = *v0;
  *(void *)&long long v4 = *v0 + 0x5FFFFFFFFFFFFFE0;
  unint64_t v3 = v4 >> 3;
  if (v1 != 5 || v3 >= 0xC) {
    return 1;
  }
  else {
    return (0x84u >> v3) & 1;
  }
}

uint64_t sub_1DA7E5864(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t ReloadConfiguration.ReloadReason.mayDeferOnSuggestedWidgetLocationReload.getter()
{
  LOBYTE(v1) = 0;
  switch(*v0 >> 61)
  {
    case 1:
      return v1 & 1;
    case 2:
    case 3:
    case 4:
      LOBYTE(v1) = ReloadConfiguration.ReloadReason.mayDeferOnSuggestedWidgetLocationReload.getter(0);
      break;
    case 5:
      unsigned int v1 = (0x230u >> (*v0 >> 3)) & 1;
      break;
    default:
      LOBYTE(v1) = 1;
      break;
  }
  return v1 & 1;
}

uint64_t ReloadConfiguration.ReloadReason.powerlogWakeReason.getter@<X0>(char *a1@<X8>)
{
  switch(*v1 >> 61)
  {
    case 1:
LABEL_5:
      char v2 = 7;
      goto LABEL_6;
    case 2:
LABEL_7:
      *a1 = 0;
      return result;
    case 3:
      return ReloadConfiguration.ReloadReason.powerlogWakeReason.getter();
    case 5:
      *((void *)&v4 + 1) = *v1;
      *(void *)&long long v4 = *v1 + 0x6000000000000000;
      switch((unint64_t)(v4 >> 3))
      {
        case 2uLL:
        case 3uLL:
        case 8uLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
          goto LABEL_5;
        case 4uLL:
        case 0xAuLL:
          char v2 = 1;
          goto LABEL_6;
        case 5uLL:
        case 6uLL:
        case 7uLL:
          goto LABEL_7;
        case 9uLL:
          char v2 = 5;
          goto LABEL_6;
        case 0xBuLL:
          char v2 = 10;
          goto LABEL_6;
        case 0xCuLL:
          char v2 = 11;
          goto LABEL_6;
        case 0x10uLL:
          char v2 = 12;
          goto LABEL_6;
        default:
          char v2 = 4;
          goto LABEL_6;
      }
    default:
      char v2 = 6;
LABEL_6:
      *a1 = v2;
      return result;
  }
}

void ReloadConfiguration.ReloadReason.defaultCost.getter(unsigned char *a1@<X8>)
{
  switch(*v1 >> 61)
  {
    case 1:
    case 2:
    case 3:
      *a1 = 1;
      break;
    case 5:
      *((void *)&v2 + 1) = *v1;
      *(void *)&long long v2 = *v1 + 0x6000000000000000;
      *a1 = byte_1DA990FBA[v2 >> 3];
      break;
    default:
      *a1 = 0;
      break;
  }
}

BOOL ReloadConfiguration.ReloadReason.isReloadLoop.getter()
{
  return *v0 >> 61 == 3;
}

uint64_t static ReloadConfiguration.ReloadReason.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(*a1 >> 61)
  {
    case 1uLL:
      if (v3 >> 61 != 1) {
        goto LABEL_58;
      }
      if (*(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10)
        && *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18))
      {
        char v13 = 1;
      }
      else
      {
        char v13 = sub_1DA98CE58();
      }
      sub_1DA7A19BC(v3);
      sub_1DA7A19BC(v2);
      goto LABEL_24;
    case 2uLL:
      if (v3 >> 61 != 2) {
        goto LABEL_58;
      }
      goto LABEL_18;
    case 3uLL:
      if (v3 >> 61 != 3) {
        goto LABEL_58;
      }
      goto LABEL_18;
    case 4uLL:
      if (v3 >> 61 != 4) {
        goto LABEL_58;
      }
LABEL_18:
      uint64_t v14 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v20 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = v14;
      sub_1DA7A19BC(v3);
      sub_1DA7A19BC(v2);
      char v13 = static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v21, &v20);
      goto LABEL_24;
    case 5uLL:
      *((void *)&v15 + 1) = *a1;
      *(void *)&long long v15 = v2 + 0x6000000000000000;
      switch((unint64_t)(v15 >> 3))
      {
        case 1uLL:
          if (v3 != 0xA000000000000008) {
            goto LABEL_58;
          }
          sub_1DA7E8048(*a1);
          unint64_t v16 = 0xA000000000000008;
          goto LABEL_57;
        case 2uLL:
          unint64_t v17 = 0xA000000000000010;
          break;
        case 3uLL:
          if (v3 != 0xA000000000000018) {
            goto LABEL_58;
          }
          sub_1DA7E8048(*a1);
          unint64_t v16 = 0xA000000000000018;
          goto LABEL_57;
        case 4uLL:
          unint64_t v17 = 0xA000000000000020;
          break;
        case 5uLL:
          if (v3 != 0xA000000000000028) {
            goto LABEL_58;
          }
          sub_1DA7E8048(*a1);
          unint64_t v16 = 0xA000000000000028;
          goto LABEL_57;
        case 6uLL:
          unint64_t v17 = 0xA000000000000030;
          break;
        case 7uLL:
          if (v3 != 0xA000000000000038) {
            goto LABEL_58;
          }
          sub_1DA7E8048(*a1);
          unint64_t v16 = 0xA000000000000038;
          goto LABEL_57;
        case 8uLL:
          unint64_t v17 = 0xA000000000000040;
          break;
        case 9uLL:
          if (v3 != 0xA000000000000048) {
            goto LABEL_58;
          }
          sub_1DA7E8048(*a1);
          unint64_t v16 = 0xA000000000000048;
          goto LABEL_57;
        case 0xAuLL:
          unint64_t v17 = 0xA000000000000050;
          break;
        case 0xBuLL:
          if (v3 != 0xA000000000000058) {
            goto LABEL_58;
          }
          sub_1DA7E8048(*a1);
          unint64_t v16 = 0xA000000000000058;
          goto LABEL_57;
        case 0xCuLL:
          unint64_t v17 = 0xA000000000000060;
          break;
        case 0xDuLL:
          if (v3 != 0xA000000000000068) {
            goto LABEL_58;
          }
          sub_1DA7E8048(*a1);
          unint64_t v16 = 0xA000000000000068;
          goto LABEL_57;
        case 0xEuLL:
          unint64_t v17 = 0xA000000000000070;
          break;
        case 0xFuLL:
          if (v3 != 0xA000000000000078) {
            goto LABEL_58;
          }
          sub_1DA7E8048(*a1);
          unint64_t v16 = 0xA000000000000078;
          goto LABEL_57;
        case 0x10uLL:
          unint64_t v17 = 0xA000000000000080;
          break;
        default:
          if (v3 != 0xA000000000000000) {
            goto LABEL_58;
          }
          sub_1DA7E8048(*a1);
          unint64_t v16 = 0xA000000000000000;
          goto LABEL_57;
      }
      if (v3 != v17) {
        goto LABEL_58;
      }
      sub_1DA7E8048(*a1);
      unint64_t v16 = v17;
      goto LABEL_57;
    default:
      if (v3 >> 61) {
        goto LABEL_58;
      }
      uint64_t v5 = *(void **)(v2 + 16);
      uint64_t v4 = *(void *)(v2 + 24);
      unint64_t v6 = *(void **)(v3 + 16);
      uint64_t v7 = *(void *)(v3 + 24);
      uint64_t v8 = *(void *)(v3 + 32);
      if (!v5)
      {
        if (!v6)
        {
          uint64_t v19 = *(void *)(v2 + 32);
          sub_1DA7A19BC(v3);
          sub_1DA7A19BC(v2);
          goto LABEL_27;
        }
LABEL_58:
        sub_1DA7A19BC(*a2);
        sub_1DA7A19BC(v2);
        goto LABEL_59;
      }
      if (!v6) {
        goto LABEL_58;
      }
      uint64_t v19 = *(void *)(v2 + 32);
      sub_1DA7E8094();
      id v9 = v6;
      sub_1DA7A19BC(v3);
      sub_1DA7A19BC(v2);
      id v10 = v5;
      char v11 = sub_1DA98C7A8();

      if ((v11 & 1) == 0)
      {

LABEL_59:
        sub_1DA7E8048(v2);
        sub_1DA7E8048(v3);
        char v13 = 0;
        return v13 & 1;
      }
LABEL_27:
      if (v4 == v7 && v19 == v8)
      {

        sub_1DA7E8048(v2);
        unint64_t v16 = v3;
LABEL_57:
        sub_1DA7E8048(v16);
        char v13 = 1;
      }
      else
      {
        char v13 = sub_1DA98CE58();

LABEL_24:
        sub_1DA7E8048(v2);
        sub_1DA7E8048(v3);
      }
      return v13 & 1;
  }
}

void ReloadConfiguration.ReloadReason.hash(into:)(uint64_t a1)
{
  switch(*(void *)v1 >> 61)
  {
    case 1:
      sub_1DA98CF28();
      sub_1DA98C108();
      break;
    case 2:
    case 3:
    case 4:
      sub_1DA98CF28();
      ReloadConfiguration.ReloadReason.hash(into:)(a1);
      break;
    case 5:
      sub_1DA98CF28();
      break;
    default:
      unint64_t v3 = *(void **)(*(void *)v1 + 16);
      sub_1DA98CF28();
      sub_1DA98CF38();
      if (v3)
      {
        id v4 = v3;
        sub_1DA98C7B8();
      }
      else
      {
        id v4 = 0;
      }
      sub_1DA98C108();

      break;
  }
}

uint64_t ReloadConfiguration.ReloadReason.hashValue.getter()
{
  v2[9] = *v0;
  sub_1DA98CF18();
  ReloadConfiguration.ReloadReason.hash(into:)((uint64_t)v2);
  return sub_1DA98CF68();
}

uint64_t sub_1DA7E62A4()
{
  v2[9] = *v0;
  sub_1DA98CF18();
  ReloadConfiguration.ReloadReason.hash(into:)((uint64_t)v2);
  return sub_1DA98CF68();
}

uint64_t sub_1DA7E62F4()
{
  v2[9] = *v0;
  sub_1DA98CF18();
  ReloadConfiguration.ReloadReason.hash(into:)((uint64_t)v2);
  return sub_1DA98CF68();
}

uint64_t ReloadConfiguration.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7E5864(v1, a1, type metadata accessor for ReloadConfiguration.ReloadType);
}

uint64_t ReloadConfiguration.cost.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ReloadConfiguration(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

unint64_t ReloadConfiguration.reason.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for ReloadConfiguration(0) + 24));
  *a1 = v3;

  return sub_1DA7A19BC(v3);
}

uint64_t ReloadConfiguration.retryAttempts.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ReloadConfiguration(0) + 28));
}

uint64_t ReloadConfiguration.allowCostOverride.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ReloadConfiguration(0) + 32));
}

uint64_t ReloadConfiguration.init(type:cost:reason:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ReloadConfiguration(0);
  id v9 = (int *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  uint64_t v15 = *a3;
  sub_1DA7E5864(a1, (uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1DA7E5864((uint64_t)v14, (uint64_t)v11, type metadata accessor for ReloadConfiguration.ReloadType);
  v11[v9[7]] = (char)a2;
  *(void *)&v11[v9[9]] = 1;
  *(void *)&v11[v9[8]] = v15;
  v11[v9[10]] = 1;
  sub_1DA7E9C3C((uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1DA7E80D4((uint64_t)v11, a4);
  return sub_1DA7E9C3C(a1, type metadata accessor for ReloadConfiguration.ReloadType);
}

unint64_t sub_1DA7E658C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v67 = sub_1DA989638();
  uint64_t v71 = *(void *)(v67 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v67);
  char v64 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v69 = (char *)&v59 - v6;
  uint64_t v7 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v62 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v65 = (uint64_t)&v59 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v59 - v13;
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)&v59 - v15;
  uint64_t v17 = (int *)type metadata accessor for ReloadConfiguration(0);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v59 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v59 - v25;
  uint64_t v27 = *(int *)(v24 + 24);
  unint64_t v28 = *(void *)(v2 + v27);
  uint64_t v63 = v27;
  unint64_t v72 = *(void *)(a1 + v27);
  unint64_t v73 = v28;
  sub_1DA7E6D28(&v73, &v72, &v74);
  unint64_t v68 = v74;
  int v29 = *(unsigned __int8 *)(v2 + v17[5]);
  sub_1DA7E5864(a1, (uint64_t)v26, type metadata accessor for ReloadConfiguration);
  if (v29 == 1)
  {
    sub_1DA7E9C3C((uint64_t)v26, type metadata accessor for ReloadConfiguration);
LABEL_4:
    int v66 = 1;
    uint64_t v31 = a1;
    goto LABEL_6;
  }
  char v30 = v26[v17[5]];
  sub_1DA7E9C3C((uint64_t)v26, type metadata accessor for ReloadConfiguration);
  if (v30) {
    goto LABEL_4;
  }
  uint64_t v31 = a1;
  int v66 = *(unsigned __int8 *)(a1 + v17[5]);
LABEL_6:
  char v32 = *(unsigned char *)(v2 + v17[8]);
  sub_1DA7E5864(v31, (uint64_t)v23, type metadata accessor for ReloadConfiguration);
  if (v32) {
    int v33 = 1;
  }
  else {
    int v33 = v23[v17[8]];
  }
  sub_1DA7E9C3C((uint64_t)v23, type metadata accessor for ReloadConfiguration);
  sub_1DA7E5864(v2, (uint64_t)v16, type metadata accessor for ReloadConfiguration.ReloadType);
  uint64_t v34 = v71;
  int v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
  uint64_t v36 = v67;
  if (v35((uint64_t)v16, 1, v67) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v14, 1, 1, v36);
    uint64_t v37 = *(void *)(v31 + v17[7]);
    sub_1DA7E5864((uint64_t)v14, (uint64_t)v20, type metadata accessor for ReloadConfiguration.ReloadType);
    v20[v17[5]] = v66;
    *(void *)&v20[v17[7]] = v37;
    unint64_t v38 = v68;
    *(void *)&v20[v17[6]] = v68;
    v20[v17[8]] = v33;
    sub_1DA7A19BC(v38);
    sub_1DA7E9C3C((uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
    sub_1DA7E80D4((uint64_t)v20, v70);
    return sub_1DA7E8048(v38);
  }
  else
  {
    int v61 = v33;
    uint64_t v60 = v14;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    v40(v69, v16, v36);
    uint64_t v41 = v65;
    sub_1DA7E5864(v31, v65, type metadata accessor for ReloadConfiguration.ReloadType);
    if (v35(v41, 1, v36) == 1)
    {
      uint64_t v42 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v60, 1, 1, v36);
      uint64_t v43 = *(void *)(v31 + v17[7]);
      sub_1DA7E5864(v42, (uint64_t)v20, type metadata accessor for ReloadConfiguration.ReloadType);
      v20[v17[5]] = v66;
      *(void *)&v20[v17[7]] = v43;
      unint64_t v44 = v68;
      *(void *)&v20[v17[6]] = v68;
      v20[v17[8]] = v61;
      sub_1DA7A19BC(v44);
      sub_1DA7E9C3C(v42, type metadata accessor for ReloadConfiguration.ReloadType);
      sub_1DA7E80D4((uint64_t)v20, v70);
      sub_1DA7E8048(v44);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v69, v36);
    }
    else
    {
      id v45 = v64;
      v40(v64, (char *)v41, v36);
      if (*(void *)(v31 + v63) >> 61 == 3)
      {
        uint64_t v46 = v71;
        uint64_t v47 = (uint64_t)v60;
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v60, v45, v36);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v36);
        uint64_t v48 = *(void *)(v31 + v17[7]);
        sub_1DA7E5864(v47, (uint64_t)v20, type metadata accessor for ReloadConfiguration.ReloadType);
        v20[v17[5]] = v66;
        *(void *)&v20[v17[7]] = v48;
        unint64_t v49 = v68;
        *(void *)&v20[v17[6]] = v68;
        v20[v17[8]] = v61;
        sub_1DA7A19BC(v49);
        sub_1DA7E9C3C(v47, type metadata accessor for ReloadConfiguration.ReloadType);
        sub_1DA7E80D4((uint64_t)v20, v70);
        sub_1DA7E8048(v49);
        uint64_t v50 = *(void (**)(char *, uint64_t))(v46 + 8);
        v50(v45, v36);
        return ((uint64_t (*)(char *, uint64_t))v50)(v69, v36);
      }
      else
      {
        sub_1DA7E9C9C();
        id v51 = v69;
        char v52 = sub_1DA98BFD8();
        uint64_t v53 = v71;
        if (v52) {
          uint64_t v54 = v45;
        }
        else {
          uint64_t v54 = v51;
        }
        uint64_t v55 = (uint64_t)v62;
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v62, v54, v36);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v55, 0, 1, v36);
        uint64_t v56 = *(void *)(v31 + v17[7]);
        sub_1DA7E5864(v55, (uint64_t)v20, type metadata accessor for ReloadConfiguration.ReloadType);
        v20[v17[5]] = v66;
        *(void *)&v20[v17[7]] = v56;
        unint64_t v57 = v68;
        *(void *)&v20[v17[6]] = v68;
        v20[v17[8]] = v61;
        sub_1DA7A19BC(v57);
        sub_1DA7E9C3C(v55, type metadata accessor for ReloadConfiguration.ReloadType);
        sub_1DA7E80D4((uint64_t)v20, v70);
        sub_1DA7E8048(v57);
        uint64_t v58 = *(void (**)(char *, uint64_t))(v53 + 8);
        v58(v45, v36);
        return ((uint64_t (*)(char *, uint64_t))v58)(v51, v36);
      }
    }
  }
}

unint64_t sub_1DA7E6D28@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  unint64_t v15 = 0xA000000000000030;
  unint64_t v16 = v5;
  unint64_t result = static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v16, &v15);
  if ((result & 1) != 0
    || (unint64_t v15 = 0xA000000000000030,
        unint64_t v16 = v4,
        unint64_t result = static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v16, &v15),
        (result & 1) != 0))
  {
    *a3 = 0xA000000000000030;
  }
  else
  {
    if ((v5 >> 61) >= 5)
    {
      *((void *)&v9 + 1) = v5;
      *(void *)&long long v9 = v5 + 0x5FFFFFFFFFFFFFE0;
      unint64_t v8 = v9 >> 3;
      BOOL v10 = v5 >> 61 != 5 || v8 > 0xB;
      uint64_t v11 = (1 << v8) & 0xF7B;
      if (v10 || v11 == 0) {
        goto LABEL_6;
      }
    }
    if ((v4 >> 61) < 5
      || v4 >> 61 == 5
      && (*((void *)&v14 + 1) = v4, *(void *)&long long v14 = v4 + 0x5FFFFFFFFFFFFFE0, v13 = v14 >> 3, v13 <= 0xB)
      && ((1 << v13) & 0xF7B) != 0)
    {
LABEL_6:
      *a3 = v5;
      unint64_t v7 = v5;
    }
    else
    {
      *a3 = v4;
      unint64_t v7 = v4;
    }
    return sub_1DA7A19BC(v7);
  }
  return result;
}

uint64_t sub_1DA7E6E44(uint64_t a1)
{
  uint64_t v3 = sub_1DA989638();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v118 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v117 = (char *)&v106 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v115 = (char *)&v106 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v116 = (char *)&v106 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v113 = (char *)&v106 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v114 = (char *)&v106 - v15;
  uint64_t v16 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v119 = (uint64_t)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v120 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58AE0);
  MEMORY[0x1F4188790](v120);
  uint64_t v19 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (int *)type metadata accessor for ReloadConfiguration(0);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v111 = (uint64_t)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v112 = (uint64_t)&v106 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v121 = (uint64_t)&v106 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  int v29 = (char *)&v106 - v28;
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  char v32 = (char *)&v106 - v31;
  uint64_t v33 = MEMORY[0x1F4188790](v30);
  int v35 = (char *)&v106 - v34;
  MEMORY[0x1F4188790](v33);
  uint64_t v37 = (char *)&v106 - v36;
  if (_s9ChronoKit19ReloadConfigurationV2eeoiySbAC_ACtFZ_0(v1, a1)) {
    goto LABEL_2;
  }
  uint64_t v106 = v3;
  uint64_t v107 = v4;
  int v108 = v19;
  uint64_t v109 = v1;
  uint64_t v39 = v20[6];
  unint64_t v40 = *(void *)(v1 + v39);
  unint64_t v122 = 0xA000000000000080;
  unint64_t v123 = v40;
  char v41 = static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v123, &v122);
  uint64_t v110 = a1;
  sub_1DA7E5864(a1, (uint64_t)v37, type metadata accessor for ReloadConfiguration);
  if (v41)
  {
    unint64_t v42 = *(void *)&v37[v20[6]];
    unint64_t v122 = 0xA000000000000080;
    unint64_t v123 = v42;
    char v43 = static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v123, &v122);
    sub_1DA7E9C3C((uint64_t)v37, type metadata accessor for ReloadConfiguration);
    if ((v43 & 1) == 0) {
      goto LABEL_19;
    }
  }
  else
  {
    sub_1DA7E9C3C((uint64_t)v37, type metadata accessor for ReloadConfiguration);
  }
  uint64_t v44 = v109;
  unint64_t v45 = *(void *)(v109 + v39);
  unint64_t v122 = 0xA000000000000060;
  unint64_t v123 = v45;
  char v46 = static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v123, &v122);
  uint64_t v47 = v110;
  sub_1DA7E5864(v110, (uint64_t)v35, type metadata accessor for ReloadConfiguration);
  if (v46)
  {
    unint64_t v48 = *(void *)&v35[v20[6]];
    unint64_t v122 = 0xA000000000000060;
    unint64_t v123 = v48;
    char v49 = static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v123, &v122);
    sub_1DA7E9C3C((uint64_t)v35, type metadata accessor for ReloadConfiguration);
    if ((v49 & 1) == 0) {
      goto LABEL_19;
    }
  }
  else
  {
    sub_1DA7E9C3C((uint64_t)v35, type metadata accessor for ReloadConfiguration);
  }
  unint64_t v50 = *(void *)(v44 + v39);
  unint64_t v122 = 0xA000000000000030;
  unint64_t v123 = v50;
  char v51 = static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v123, &v122);
  sub_1DA7E5864(v47, (uint64_t)v32, type metadata accessor for ReloadConfiguration);
  if (v51)
  {
    unint64_t v52 = *(void *)&v32[v20[6]];
    unint64_t v122 = 0xA000000000000030;
    unint64_t v123 = v52;
    char v53 = static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v123, &v122);
    sub_1DA7E9C3C((uint64_t)v32, type metadata accessor for ReloadConfiguration);
    if (v53) {
      goto LABEL_15;
    }
LABEL_19:
    char v38 = 1;
    return v38 & 1;
  }
  sub_1DA7E9C3C((uint64_t)v32, type metadata accessor for ReloadConfiguration);
LABEL_15:
  unint64_t v54 = *(void *)(v44 + v39);
  if ((v54 >> 61) < 5
    || v54 >> 61 == 5
    && (*((void *)&v73 + 1) = *(void *)(v44 + v39),
        *(void *)&long long v73 = v54 + 0x5FFFFFFFFFFFFFE0,
        unint64_t v72 = v73 >> 3,
        v72 <= 0xB)
    && ((1 << v72) & 0xF7B) != 0)
  {
    sub_1DA7E5864(v47, (uint64_t)v29, type metadata accessor for ReloadConfiguration);
    sub_1DA7E9C3C((uint64_t)v29, type metadata accessor for ReloadConfiguration);
  }
  else
  {
    sub_1DA7E5864(v47, (uint64_t)v29, type metadata accessor for ReloadConfiguration);
    unint64_t v74 = *(void *)&v29[v20[6]];
    sub_1DA7A19BC(v74);
    sub_1DA7E9C3C((uint64_t)v29, type metadata accessor for ReloadConfiguration);
    if ((v74 >> 61) < 5
      || v74 >> 61 == 5
      && (*((void *)&v91 + 1) = v74, *(void *)&v91 = v74 + 0x5FFFFFFFFFFFFFE0, unint64_t v90 = v91 >> 3, v90 <= 0xB)
      && ((1 << v90) & 0xF7B) != 0)
    {
      sub_1DA7E8048(v74);
      char v38 = 1;
      return v38 & 1;
    }
    sub_1DA7E8048(v74);
  }
  unint64_t v55 = *(void *)(v44 + v39);
  uint64_t v56 = v121;
  sub_1DA7E5864(v47, v121, type metadata accessor for ReloadConfiguration);
  if (v55 >> 61 == 3)
  {
    unint64_t v57 = *(void *)(v56 + v20[6]);
    sub_1DA7E9C3C(v56, type metadata accessor for ReloadConfiguration);
    if (v57 >> 61 != 3) {
      goto LABEL_19;
    }
  }
  else
  {
    sub_1DA7E9C3C(v56, type metadata accessor for ReloadConfiguration);
  }
  uint64_t v59 = v20;
  uint64_t v60 = v20[5];
  int v61 = *(unsigned __int8 *)(v44 + v60);
  int v62 = *(unsigned __int8 *)(v47 + v60);
  uint64_t v63 = (uint64_t)v108;
  uint64_t v64 = (uint64_t)&v108[v120[12]];
  uint64_t v65 = v120[16];
  uint64_t v66 = v44;
  uint64_t v67 = v47;
  uint64_t v68 = v120[20];
  sub_1DA7E5864(v66, (uint64_t)v108, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1DA7E5864(v67, v64, type metadata accessor for ReloadConfiguration.ReloadType);
  *(unsigned char *)(v63 + v65) = v61;
  *(unsigned char *)(v63 + v68) = v62;
  uint64_t v69 = v106;
  uint64_t v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
  if (v70(v63, 1, v106) != 1)
  {
    uint64_t v71 = v119;
    sub_1DA7E5864(v63, v119, type metadata accessor for ReloadConfiguration.ReloadType);
    if (v70(v64, 1, v69) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v71, v69);
      sub_1DA7A1AE0(v63, &qword_1EBE58AE0);
LABEL_2:
      char v38 = 0;
      return v38 & 1;
    }
    if (v61)
    {
      if ((v62 & 1) == 0)
      {
        uint64_t v76 = v107;
        uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 32);
        uint64_t v78 = v114;
        uint64_t v79 = v71;
        uint64_t v80 = v106;
        v77(v114, v79, v106);
        uint64_t v81 = v113;
        v77(v113, v64, v80);
        if (sub_1DA9895E8())
        {
          char v82 = *(void (**)(char *, uint64_t))(v76 + 8);
          v82(v81, v80);
          v82(v78, v80);
          uint64_t v75 = (uint64_t)v108;
          goto LABEL_34;
        }
        char v38 = sub_1DA989588();
        uint64_t v103 = *(void (**)(char *, uint64_t))(v76 + 8);
        v103(v81, v80);
        v103(v78, v80);
LABEL_43:
        sub_1DA7E9C3C((uint64_t)v108, type metadata accessor for ReloadConfiguration.ReloadType);
        return v38 & 1;
      }
    }
    else if ((v62 & 1) == 0)
    {
      uint64_t v94 = v106;
      uint64_t v95 = v107;
      uint64_t v96 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 32);
      uint64_t v97 = v116;
      v96(v116, v71, v106);
      int v98 = v115;
      v96(v115, v64, v94);
      if (sub_1DA9895E8())
      {
        uint64_t v99 = *(void (**)(char *, uint64_t))(v95 + 8);
        v99(v98, v94);
        v99(v97, v94);
        int v100 = *(unsigned __int8 *)(v109 + v59[8]);
        uint64_t v101 = v111;
        sub_1DA7E5864(v110, v111, type metadata accessor for ReloadConfiguration);
        uint64_t v102 = (uint64_t)v108;
        if (v100 == 1) {
          char v38 = *(unsigned char *)(v101 + v59[8]) ^ 1;
        }
        else {
          char v38 = 0;
        }
        sub_1DA7E9C3C(v101, type metadata accessor for ReloadConfiguration);
        sub_1DA7E9C3C(v102, type metadata accessor for ReloadConfiguration.ReloadType);
        return v38 & 1;
      }
      char v38 = sub_1DA989588();
      uint64_t v105 = *(void (**)(char *, uint64_t))(v95 + 8);
      v105(v98, v94);
      v105(v97, v94);
      goto LABEL_43;
    }
    uint64_t v83 = v107;
    id v84 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 32);
    char v85 = v117;
    uint64_t v86 = v71;
    uint64_t v87 = v106;
    v84(v117, v86, v106);
    uint64_t v88 = v118;
    v84(v118, v64, v87);
    char v38 = sub_1DA989588();
    uint64_t v89 = *(void (**)(char *, uint64_t))(v83 + 8);
    v89(v88, v87);
    v89(v85, v87);
    goto LABEL_43;
  }
  if (v70(v64, 1, v69) != 1)
  {
    sub_1DA7E9C3C(v64, type metadata accessor for ReloadConfiguration.ReloadType);
    uint64_t v75 = (uint64_t)v108;
LABEL_34:
    sub_1DA7E9C3C(v75, type metadata accessor for ReloadConfiguration.ReloadType);
    char v38 = 1;
    return v38 & 1;
  }
  if (v61)
  {
    sub_1DA7E9C3C((uint64_t)v108, type metadata accessor for ReloadConfiguration.ReloadType);
    char v38 = v62 ^ 1;
    return v38 & 1;
  }
  if (v62)
  {
    sub_1DA7E9C3C((uint64_t)v108, type metadata accessor for ReloadConfiguration.ReloadType);
    goto LABEL_2;
  }
  int v92 = *(unsigned __int8 *)(v109 + v20[8]);
  uint64_t v93 = v112;
  sub_1DA7E5864(v110, v112, type metadata accessor for ReloadConfiguration);
  if (v92 == 1) {
    char v38 = *(unsigned char *)(v93 + v20[8]) ^ 1;
  }
  else {
    char v38 = 0;
  }
  uint64_t v104 = (uint64_t)v108;
  sub_1DA7E9C3C(v93, type metadata accessor for ReloadConfiguration);
  sub_1DA7E9C3C(v104, type metadata accessor for ReloadConfiguration.ReloadType);
  return v38 & 1;
}

uint64_t ReloadConfiguration.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DA989638();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = 91;
  unint64_t v18 = 0xE100000000000000;
  uint64_t v9 = type metadata accessor for ReloadConfiguration(0);
  unint64_t v10 = *(void *)(v0 + *(int *)(v9 + 24));
  unint64_t v16 = v10;
  sub_1DA7A19BC(v10);
  ReloadConfiguration.ReloadReason.description.getter();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA7E8048(v10);
  sub_1DA98C148();
  sub_1DA7E5864(v0, (uint64_t)v8, type metadata accessor for ReloadConfiguration.ReloadType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    if (qword_1EBE63290 != -1) {
      swift_once();
    }
    id v11 = (id)qword_1EBE63318;
    uint64_t v12 = (void *)sub_1DA989568();
    id v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

    sub_1DA98C038();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v16 = *(void *)(v1 + *(int *)(v9 + 28));
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return v17;
}

uint64_t _s9ChronoKit19ReloadConfigurationV0C4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58AD8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1DA7E5864(a1, (uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1DA7E5864(a2, v15, type metadata accessor for ReloadConfiguration.ReloadType);
  unint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_1DA7E5864((uint64_t)v14, (uint64_t)v10, type metadata accessor for ReloadConfiguration.ReloadType);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v17 = sub_1DA9895E8();
      unint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_1DA7E9C3C((uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE58AD8);
    char v17 = 0;
    return v17 & 1;
  }
  sub_1DA7E9C3C((uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
  char v17 = 1;
  return v17 & 1;
}

unint64_t sub_1DA7E8048(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DA7E8094()
{
  unint64_t result = qword_1EBE5A698;
  if (!qword_1EBE5A698)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE5A698);
  }
  return result;
}

uint64_t sub_1DA7E80D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReloadConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s9ChronoKit19ReloadConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58AD8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1DA7E5864(a1, (uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1DA7E5864(a2, v15, type metadata accessor for ReloadConfiguration.ReloadType);
  unint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1) {
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1DA7E5864((uint64_t)v14, (uint64_t)v10, type metadata accessor for ReloadConfiguration.ReloadType);
  if (v16(v15, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_6:
    sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE58AD8);
LABEL_13:
    char v23 = 0;
    return v23 & 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
  char v17 = sub_1DA9895E8();
  unint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  v18(v10, v4);
  if ((v17 & 1) == 0)
  {
    sub_1DA7E9C3C((uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
    goto LABEL_13;
  }
LABEL_8:
  sub_1DA7E9C3C((uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
  uint64_t v19 = type metadata accessor for ReloadConfiguration(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v19 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v19 + 20))) {
    goto LABEL_13;
  }
  uint64_t v20 = v19;
  uint64_t v21 = *(int *)(v19 + 24);
  unint64_t v22 = *(void *)(a1 + v21);
  unint64_t v25 = *(void *)(a2 + v21);
  unint64_t v26 = v22;
  if ((static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v26, &v25) & 1) == 0
    || *(void *)(a1 + *(int *)(v20 + 28)) != *(void *)(a2 + *(int *)(v20 + 28)))
  {
    goto LABEL_13;
  }
  char v23 = *(unsigned char *)(a1 + *(int *)(v20 + 32)) ^ *(unsigned char *)(a2 + *(int *)(v20 + 32)) ^ 1;
  return v23 & 1;
}

unint64_t sub_1DA7E8494()
{
  unint64_t result = qword_1EA8E5BE8;
  if (!qword_1EA8E5BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5BE8);
  }
  return result;
}

unint64_t sub_1DA7E84EC()
{
  unint64_t result = qword_1EBE59340;
  if (!qword_1EBE59340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59340);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ReloadConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DA989638();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = type metadata accessor for ReloadConfiguration.ReloadType(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    unint64_t v12 = *(uint64_t *)((char *)a2 + v11);
    sub_1DA7A19BC(v12);
    *(uint64_t *)((char *)a1 + v11) = v12;
    uint64_t v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  }
  return a1;
}

unint64_t destroy for ReloadConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  unint64_t v6 = *(void *)(a1 + *(int *)(a2 + 24));

  return sub_1DA7E8048(v6);
}

char *initializeWithCopy for ReloadConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DA989638();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = type metadata accessor for ReloadConfiguration.ReloadType(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  unint64_t v10 = *(void *)&a2[v9];
  sub_1DA7A19BC(v10);
  *(void *)&a1[v9] = v10;
  uint64_t v11 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[v11] = a2[v11];
  return a1;
}

char *assignWithCopy for ReloadConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DA989638();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = type metadata accessor for ReloadConfiguration.ReloadType(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  uint64_t v12 = a3[6];
  unint64_t v13 = *(void *)&a2[v12];
  sub_1DA7A19BC(v13);
  unint64_t v14 = *(void *)&a1[v12];
  *(void *)&a1[v12] = v13;
  sub_1DA7E8048(v14);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *initializeWithTake for ReloadConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DA989638();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = type metadata accessor for ReloadConfiguration.ReloadType(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[v10] = a2[v10];
  return a1;
}

char *assignWithTake for ReloadConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DA989638();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = type metadata accessor for ReloadConfiguration.ReloadType(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  unint64_t v13 = *(void *)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  sub_1DA7E8048(v13);
  uint64_t v14 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[v14] = a2[v14];
  return a1;
}

uint64_t getEnumTagSinglePayload for ReloadConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7E8DA8);
}

uint64_t sub_1DA7E8DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for ReloadConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7E8E78);
}

uint64_t sub_1DA7E8E78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ReloadConfiguration.ReloadType(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1DA7E8F34()
{
  uint64_t result = type metadata accessor for ReloadConfiguration.ReloadType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReloadConfiguration.ReloadCost(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA7E90B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReloadConfiguration.ReloadCost()
{
  return &type metadata for ReloadConfiguration.ReloadCost;
}

uint64_t *initializeBufferWithCopyOfBuffer for ReloadConfiguration.ReloadType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1DA989638();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ReloadConfiguration.ReloadType(uint64_t a1)
{
  uint64_t v2 = sub_1DA989638();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for ReloadConfiguration.ReloadType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989638();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for ReloadConfiguration.ReloadType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989638();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for ReloadConfiguration.ReloadType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989638();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for ReloadConfiguration.ReloadType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989638();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReloadConfiguration.ReloadType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7E9820);
}

uint64_t sub_1DA7E9820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989638();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ReloadConfiguration.ReloadType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7E98A0);
}

uint64_t sub_1DA7E98A0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1DA989638();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1DA7E9920(uint64_t a1)
{
  uint64_t v2 = sub_1DA989638();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1DA7E9988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t sub_1DA7E99F8()
{
  uint64_t result = sub_1DA989638();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for ReloadConfiguration.ReloadReason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1DA7A19BC(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for ReloadConfiguration.ReloadReason(unint64_t *a1)
{
  return sub_1DA7E8048(*a1);
}

unint64_t *assignWithCopy for ReloadConfiguration.ReloadReason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1DA7A19BC(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1DA7E8048(v4);
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for ReloadConfiguration.ReloadReason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1DA7E8048(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReloadConfiguration.ReloadReason(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7B && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 123);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ReloadConfiguration.ReloadReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(void *)uint64_t result = a2 - 123;
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1DA7E9BD4(void *a1)
{
  uint64_t v1 = *a1 >> 61;
  if (v1 <= 4) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 5;
  }
}

void *sub_1DA7E9BF0(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1DA7E9C00(unint64_t *result, uint64_t a2)
{
  if (a2 < 5)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 61;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 5);
    unint64_t v3 = 0xA000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for ReloadConfiguration.ReloadReason()
{
  return &type metadata for ReloadConfiguration.ReloadReason;
}

uint64_t sub_1DA7E9C3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DA7E9C9C()
{
  unint64_t result = qword_1EBE61CA8;
  if (!qword_1EBE61CA8)
  {
    sub_1DA989638();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE61CA8);
  }
  return result;
}

uint64_t DefaultStatefulStoreFailurePolicy.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DefaultStatefulStoreFailurePolicy.init()()
{
  return v0;
}

uint64_t sub_1DA7E9D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if (*a5 != 2) {
    return 0;
  }
  uint64_t v6 = type metadata accessor for ReloadConfiguration(0);
  unint64_t v7 = *(void *)(a3 + *(int *)(v6 + 24));
  BOOL v8 = v7 >> 61 == 5;
  if ((v7 >> 61) < 5) {
    return 0;
  }
  *((void *)&v11 + 1) = *(void *)(a3 + *(int *)(v6 + 24));
  *(void *)&long long v11 = v7 + 0x5FFFFFFFFFFFFFE0;
  unint64_t v10 = v11 >> 3;
  if (!v8 || v10 >= 0xC) {
    return 1;
  }
  else {
    return (0x84u >> v10) & 1;
  }
}

uint64_t DefaultStatefulStoreFailurePolicy.deinit()
{
  return v0;
}

uint64_t DefaultStatefulStoreFailurePolicy.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DA7E9DA4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 136);
}

uint64_t sub_1DA7E9DAC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 104);
}

uint64_t sub_1DA7E9DB4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 112);
}

uint64_t sub_1DA7E9DBC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 120);
}

uint64_t sub_1DA7E9DC4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 128);
}

uint64_t sub_1DA7E9DCC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DefaultStatefulStoreFailurePolicy()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for DefaultStatefulStoreFailurePolicy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultStatefulStoreFailurePolicy);
}

uint64_t dispatch thunk of DefaultStatefulStoreFailurePolicy.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DefaultStatefulStoreFailurePolicy.reloadFailed(for:entries:originalConfiguration:nextConfiguration:nextState:error:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t static Priority.< infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  if (*a1)
  {
    if (*a1 == 1)
    {
      if (!*a2) {
        return 1;
      }
    }
    else if (*a2 < 2u)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t Priority.description.getter()
{
  uint64_t v1 = 0x6E7574726F70706FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E696B61576E6F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C616D726F6ELL;
  }
}

ChronoKit::Priority_optional __swiftcall Priority.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (ChronoKit::Priority_optional)rawValue;
}

uint64_t Priority.rawValue.getter()
{
  return *v0;
}

ChronoKit::Priority_optional sub_1DA7E9F28(Swift::Int *a1)
{
  return Priority.init(rawValue:)(*a1);
}

void sub_1DA7E9F30(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1DA7E9F3C()
{
  uint64_t v1 = 0x6E7574726F70706FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E696B61576E6F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C616D726F6ELL;
  }
}

uint64_t sub_1DA7E9FA4(unsigned char *a1, unsigned char *a2)
{
  if (!*a1) {
    return 0;
  }
  if (*a1 == 1)
  {
    if (*a2) {
      return 0;
    }
  }
  else if (*a2 > 1u)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_1DA7E9FD4(unsigned char *a1, unsigned char *a2)
{
  if (!*a2) {
    return 1;
  }
  if (*a2 == 1)
  {
    if (*a1) {
      return 1;
    }
  }
  else if (*a1 > 1u)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1DA7EA004(unsigned char *a1, unsigned char *a2)
{
  if (!*a1) {
    return 1;
  }
  if (*a1 == 1)
  {
    if (*a2) {
      return 1;
    }
  }
  else if (*a2 > 1u)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1DA7EA034(unsigned char *a1, unsigned char *a2)
{
  if (!*a2) {
    return 0;
  }
  if (*a2 == 1)
  {
    if (*a1) {
      return 0;
    }
  }
  else if (*a1 > 1u)
  {
    return 0;
  }
  return 1;
}

uint64_t PushSubscription.SubscriptionType.Control.PushType.description.getter()
{
  return 0x203A6E656B6F74;
}

uint64_t static PushSubscription.SubscriptionType.Control.PushType.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1DA98CE58();
  }
}

uint64_t PushSubscription.SubscriptionType.Control.PushType.hash(into:)()
{
  sub_1DA98CF28();

  return sub_1DA98C108();
}

uint64_t PushSubscription.SubscriptionType.Control.PushType.hashValue.getter()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA7EA194(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1DA98CE58();
  }
}

uint64_t sub_1DA7EA1C4()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA7EA224()
{
  sub_1DA98CF28();

  return sub_1DA98C108();
}

uint64_t sub_1DA7EA278()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA7EA2D4()
{
  return 0x203A6E656B6F74;
}

uint64_t PushSubscription.SubscriptionType.Control.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id PushSubscription.SubscriptionType.Control.controlIdentity.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t PushSubscription.SubscriptionType.Control.pushType.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *a1 = *(void *)(v1 + 24);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PushSubscription.SubscriptionType.Control.init(controlIdentity:pushType:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  id v7 = objc_msgSend(a1, sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v8 = sub_1DA9899C8();
  uint64_t v10 = v9;
  swift_endAccess();

  uint64_t v13 = v8;
  sub_1DA98C148();
  id v11 = objc_msgSend(a1, sel_kind);
  sub_1DA98C038();

  sub_1DA98C148();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v13;
  a3[1] = v10;
  a3[2] = (uint64_t)a1;
  a3[3] = v5;
  a3[4] = v6;
  return result;
}

unint64_t PushSubscription.SubscriptionType.Control.description.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  id v2 = v1;
  id v3 = objc_msgSend(v2, sel_description);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return 0xD000000000000011;
}

uint64_t PushSubscription.SubscriptionType.Control.hash(into:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  id v2 = v1;
  sub_1DA98C7B8();

  sub_1DA98CF28();
  swift_bridgeObjectRetain();
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t PushSubscription.SubscriptionType.Control.hashValue.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1DA98CF18();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  id v2 = v1;
  sub_1DA98C7B8();

  sub_1DA98CF28();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  return sub_1DA98CF68();
}

uint64_t sub_1DA7EA72C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  id v2 = v1;
  sub_1DA98C7B8();

  sub_1DA98CF28();
  swift_bridgeObjectRetain();
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA7EA7DC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1DA98CF18();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  id v2 = v1;
  sub_1DA98C7B8();

  sub_1DA98CF28();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  return sub_1DA98CF68();
}

uint64_t PushSubscription.SubscriptionType.description.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  PushSubscription.SubscriptionType.Control.description.getter();
  sub_1DA98C148();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x3A6C6F72746E6F63;
}

uint64_t PushSubscription.SubscriptionType.hash(into:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1DA98CF28();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  id v2 = v1;
  sub_1DA98C7B8();

  sub_1DA98CF28();
  swift_bridgeObjectRetain();
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t PushSubscription.SubscriptionType.hashValue.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1DA98CF18();
  sub_1DA98CF28();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  id v2 = v1;
  sub_1DA98C7B8();

  sub_1DA98CF28();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  return sub_1DA98CF68();
}

uint64_t sub_1DA7EAACC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1DA98CF28();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  id v2 = v1;
  sub_1DA98C7B8();

  sub_1DA98CF28();
  swift_bridgeObjectRetain();
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA7EAB88()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1DA98CF18();
  sub_1DA98CF28();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  id v2 = v1;
  sub_1DA98C7B8();

  sub_1DA98CF28();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  return sub_1DA98CF68();
}

uint64_t sub_1DA7EAC44()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  PushSubscription.SubscriptionType.Control.description.getter();
  sub_1DA98C148();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x3A6C6F72746E6F63;
}

uint64_t PushSubscription.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushSubscription.topic.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PushSubscription.topic.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*PushSubscription.topic.modify())()
{
  return CGSizeMake;
}

uint64_t PushSubscription.subscriptionType.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  unint64_t v4 = (void *)v1[4];
  uint64_t v3 = v1[5];
  uint64_t v5 = v1[6];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  id v6 = v4;

  return swift_bridgeObjectRetain();
}

__n128 PushSubscription.subscriptionType.setter(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  id v6 = *(void **)(v1 + 32);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v3;
  __n128 result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v1 + 24) = result;
  *(void *)(v1 + 40) = v4;
  *(void *)(v1 + 48) = v5;
  return result;
}

uint64_t (*PushSubscription.subscriptionType.modify())()
{
  return CGSizeMake;
}

uint64_t PushSubscription.budget.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PushSubscription() + 24);

  return sub_1DA7EB970(v3, a1);
}

uint64_t PushSubscription.budget.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PushSubscription() + 24);

  return sub_1DA7EB9D4(a1, v3);
}

uint64_t (*PushSubscription.budget.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t PushSubscription.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Budget();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  uint64_t v23 = 0x203A6369706F74;
  unint64_t v24 = 0xE700000000000000;
  unint64_t v5 = v0[1];
  uint64_t v16 = *v0;
  unint64_t v17 = v5;
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v6 = v0[2];
  unint64_t v7 = v0[3];
  uint64_t v9 = (void *)v0[4];
  uint64_t v8 = v1[5];
  uint64_t v10 = v1[6];
  uint64_t v21 = 0x3A6C6F72746E6F63;
  unint64_t v22 = 0xE900000000000020;
  uint64_t v16 = v6;
  unint64_t v17 = v7;
  unint64_t v18 = v9;
  uint64_t v19 = v8;
  uint64_t v20 = v10;
  swift_bridgeObjectRetain_n();
  id v11 = v9;
  swift_bridgeObjectRetain_n();
  id v12 = v11;
  PushSubscription.SubscriptionType.Control.description.getter();
  sub_1DA98C148();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v13 = type metadata accessor for PushSubscription();
  sub_1DA7EB970((uint64_t)v1 + *(int *)(v13 + 24), (uint64_t)v4);
  sub_1DA98C0A8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return v23;
}

uint64_t PushSubscription.init(control:environment:budget:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  unint64_t v7 = a1;
  id v8 = objc_msgSend(v7, sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v9 = sub_1DA9899C8();
  uint64_t v11 = v10;
  swift_endAccess();

  uint64_t v26 = v9;
  sub_1DA98C148();
  id v12 = objc_msgSend(v7, sel_kind);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t v13 = v11;
  uint64_t v14 = (char *)objc_msgSend(v7, sel_extensionIdentity);
  uint64_t v15 = &v14[*MEMORY[0x1E4F58B78]];
  swift_beginAccess();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16))
  {
    swift_endAccess();

    id v17 = objc_msgSend(v7, sel_extensionIdentity);
    swift_beginAccess();
    uint64_t v18 = sub_1DA9899C8();
    uint64_t v20 = v19;
    swift_endAccess();
    uint64_t v14 = v7;
  }
  else
  {
    uint64_t v18 = sub_1DA9899C8();
    uint64_t v20 = v21;
    swift_endAccess();
    id v17 = v7;
  }

  *a5 = v18;
  a5[1] = v20;
  a5[2] = v26;
  a5[3] = v13;
  a5[4] = (uint64_t)v7;
  a5[5] = a2;
  a5[6] = a3;
  uint64_t v22 = type metadata accessor for PushSubscription();
  return sub_1DA7EBA38(a4, (uint64_t)a5 + *(int *)(v22 + 24));
}

void Topic.init(_:)(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (char *)objc_msgSend(a1, sel_extensionIdentity);
  unint64_t v5 = &v4[*MEMORY[0x1E4F58B78]];
  swift_beginAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_endAccess();

    id v7 = objc_msgSend(a1, sel_extensionIdentity);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    uint64_t v8 = sub_1DA9899C8();
    uint64_t v10 = v9;
    swift_endAccess();
    uint64_t v4 = a1;
  }
  else
  {
    uint64_t v8 = sub_1DA9899C8();
    uint64_t v10 = v11;
    swift_endAccess();
    id v7 = a1;
  }

  *a2 = v8;
  a2[1] = v10;
}

uint64_t PushSubscription.init(control:pushEnvironment:topic:budget:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v11 = *a4;
  uint64_t v12 = a4[1];
  id v13 = objc_msgSend(a1, sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v14 = sub_1DA9899C8();
  uint64_t v16 = v15;
  swift_endAccess();

  uint64_t v20 = v14;
  sub_1DA98C148();
  id v17 = objc_msgSend(a1, sel_kind);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  a6[2] = v20;
  a6[3] = v16;
  a6[4] = a1;
  a6[5] = a2;
  a6[6] = a3;
  *a6 = v11;
  a6[1] = v12;
  uint64_t v18 = type metadata accessor for PushSubscription();
  return sub_1DA7EBA38(a5, (uint64_t)a6 + *(int *)(v18 + 24));
}

uint64_t sub_1DA7EB660@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PushSubscription.environment.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void *PushSubscription.control.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t _s9ChronoKit16PushSubscriptionV0D4TypeO7ControlV2eeoiySbAG_AGtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1DA98CE58(), uint64_t result = 0, (v7 & 1) != 0))
  {
    sub_1DA7ECAA0();
    if (sub_1DA98C7A8())
    {
      if (v2 == v4 && v3 == v5)
      {
        return 1;
      }
      else
      {
        return sub_1DA98CE58();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

BOOL _s9ChronoKit16PushSubscriptionV0D4TypeO2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = (void *)a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_1DA98CE58() & 1) == 0) {
    return 0;
  }
  sub_1DA7ECAA0();
  swift_bridgeObjectRetain();
  id v9 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v5;
  swift_bridgeObjectRetain();
  if ((sub_1DA98C7A8() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return 0;
  }
  if (v4 == v6 && v3 == v7)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    return 1;
  }
  char v12 = sub_1DA98CE58();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return (v12 & 1) != 0;
}

uint64_t type metadata accessor for PushSubscription()
{
  uint64_t result = qword_1EBE59ED8;
  if (!qword_1EBE59ED8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DA7EB970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Budget();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA7EB9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Budget();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA7EBA38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Budget();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL _s9ChronoKit16PushSubscriptionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1DA98CE58() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = (void *)a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  id v9 = (void *)a2[4];
  uint64_t v8 = a2[5];
  uint64_t v10 = a2[6];
  if ((a1[2] != a2[2] || a1[3] != a2[3]) && (sub_1DA98CE58() & 1) == 0) {
    return 0;
  }
  sub_1DA7ECAA0();
  swift_bridgeObjectRetain();
  id v11 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v9;
  swift_bridgeObjectRetain();
  if ((sub_1DA98C7A8() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return 0;
  }
  if (v6 != v8 || v7 != v10)
  {
    char v13 = sub_1DA98CE58();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_15;
    }
    return 0;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t v14 = *(int *)(type metadata accessor for PushSubscription() + 24);

  return _s9ChronoKit6BudgetV2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v14, (uint64_t)a2 + v14);
}

unint64_t sub_1DA7EBC90()
{
  unint64_t result = qword_1EA8E5BF0;
  if (!qword_1EA8E5BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5BF0);
  }
  return result;
}

unint64_t sub_1DA7EBCE8()
{
  unint64_t result = qword_1EA8E5BF8;
  if (!qword_1EA8E5BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5BF8);
  }
  return result;
}

unint64_t sub_1DA7EBD40()
{
  unint64_t result = qword_1EA8E5C00;
  if (!qword_1EA8E5C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5C00);
  }
  return result;
}

unint64_t sub_1DA7EBD98()
{
  unint64_t result = qword_1EA8E5C08;
  if (!qword_1EA8E5C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5C08);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Priority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA7EBEB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Priority()
{
  return &type metadata for Priority;
}

uint64_t *initializeBufferWithCopyOfBuffer for PushSubscription(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v8 = (void *)a2[4];
    uint64_t v7 = a2[5];
    a1[4] = (uint64_t)v8;
    a1[5] = v7;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    id v11 = (char *)a2 + v9;
    a1[6] = a2[6];
    uint64_t v12 = sub_1DA989638();
    char v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v8;
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v15 = (int *)type metadata accessor for Budget();
    *(void *)&v10[v15[5]] = *(void *)&v11[v15[5]];
    v10[v15[6]] = v11[v15[6]];
    *(void *)&v10[v15[7]] = *(void *)&v11[v15[7]];
    *(void *)&v10[v15[8]] = *(void *)&v11[v15[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t destroy for PushSubscription(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for Budget();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PushSubscription(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v7 = (void *)a2[4];
  uint64_t v6 = a2[5];
  a1[4] = v7;
  a1[5] = v6;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  a1[6] = a2[6];
  uint64_t v11 = sub_1DA989638();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v7;
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  id v14 = (int *)type metadata accessor for Budget();
  *(void *)&v9[v14[5]] = *(void *)&v10[v14[5]];
  v9[v14[6]] = v10[v14[6]];
  *(void *)&v9[v14[7]] = *(void *)&v10[v14[7]];
  *(void *)&v9[v14[8]] = *(void *)&v10[v14[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PushSubscription(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[4];
  uint64_t v7 = (void *)a1[4];
  a1[4] = v6;
  id v8 = v6;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  id v13 = (int *)type metadata accessor for Budget();
  *(void *)&v10[v13[5]] = *(void *)&v11[v13[5]];
  v10[v13[6]] = v11[v13[6]];
  *(void *)&v10[v13[7]] = *(void *)&v11[v13[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v10[v13[8]] = *(void *)&v11[v13[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PushSubscription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for Budget();
  *(void *)(v6 + v9[5]) = *(void *)(v7 + v9[5]);
  *(unsigned char *)(v6 + v9[6]) = *(unsigned char *)(v7 + v9[6]);
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  return a1;
}

void *assignWithTake for PushSubscription(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)a1[4];
  a1[4] = a2[4];

  uint64_t v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  id v14 = (int *)type metadata accessor for Budget();
  *(void *)&v11[v14[5]] = *(void *)&v12[v14[5]];
  v11[v14[6]] = v12[v14[6]];
  *(void *)&v11[v14[7]] = *(void *)&v12[v14[7]];
  swift_bridgeObjectRelease();
  *(void *)&v11[v14[8]] = *(void *)&v12[v14[8]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushSubscription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA7EC550);
}

uint64_t sub_1DA7EC550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Budget();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PushSubscription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA7EC614);
}

uint64_t sub_1DA7EC614(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Budget();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DA7EC6BC()
{
  uint64_t result = type metadata accessor for Budget();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PushSubscription.SubscriptionType()
{
  return &type metadata for PushSubscription.SubscriptionType;
}

uint64_t initializeBufferWithCopyOfBuffer for PushSubscription.SubscriptionType.Control(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for DuetWidgetViewIdentity(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DuetWidgetViewIdentity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  id v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DuetWidgetViewIdentity(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DuetWidgetViewIdentity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DuetWidgetViewIdentity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DuetWidgetViewIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushSubscription.SubscriptionType.Control()
{
  return &type metadata for PushSubscription.SubscriptionType.Control;
}

void *initializeBufferWithCopyOfBuffer for Topic(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for Topic()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for Topic(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for Topic(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PushSubscription.SubscriptionType.Control.PushType()
{
  return &type metadata for PushSubscription.SubscriptionType.Control.PushType;
}

unint64_t sub_1DA7ECAA0()
{
  unint64_t result = qword_1EBE66B30;
  if (!qword_1EBE66B30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE66B30);
  }
  return result;
}

uint64_t dispatch thunk of RemoteWidgetDescriptorServicing.remoteWidgetExtensionsDidUpdateDescriptors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RemoteWidgetDescriptorServicing.loadRemoteWidgetDescriptors(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

BOOL static PowerlogOwner.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PowerlogOwner.hash(into:)()
{
  return sub_1DA98CF28();
}

uint64_t PowerlogOwner.hashValue.getter()
{
  return sub_1DA98CF68();
}

unint64_t sub_1DA7ECBA0()
{
  unint64_t result = qword_1EA8E5C10;
  if (!qword_1EA8E5C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5C10);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PowerlogOwner(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA7ECCC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogOwner()
{
  return &type metadata for PowerlogOwner;
}

uint64_t CHSWidgetRenderingMode.widgetRenderingMode.getter(uint64_t a1)
{
  if (!a1) {
    return sub_1DA98B738();
  }
  if (a1 != 1)
  {
    if (a1 == 2) {
      return MEMORY[0x1F4104298]();
    }
    return sub_1DA98B738();
  }
  return MEMORY[0x1F4104280]();
}

uint64_t sub_1DA7ECD28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + qword_1EBE6F350;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B848();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1DA7ECDB0(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1DA98B848();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2 + qword_1EBE6F350;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1DA7ECECC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EBE6F350;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B848();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DA7ECF50(uint64_t a1)
{
  uint64_t v3 = v1 + qword_1EBE6F350;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1DA7ECFDC())()
{
  return j__swift_endAccess;
}

uint64_t WidgetCacheManager.__allocating_init(subdirectory:fileExtension:descriptorProvider:protectionLevelProvider:fileManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_bridgeObjectRelease();
  sub_1DA7A1A44(a5, (uint64_t)v15);
  sub_1DA7A1A44(a6, (uint64_t)v14);
  uint64_t v12 = _s9ChronoKit18WidgetCacheManagerC12subdirectory16cacheKeyProvider015protectionLevelI004fileE010forReadingACSS_AA0dH9Providing_pAA0cdH0V0dH0AaIPRts_AA0c5EntryH0V0pH0AMRtsXPAA014DataProtectionkO0_pSo06NSFileE0CSbtcfC_0(a1, a2, (uint64_t)v15, (uint64_t)v14, a7, 0);
  __swift_destroy_boxed_opaque_existential_1(a6);
  __swift_destroy_boxed_opaque_existential_1(a5);
  return v12;
}

uint64_t sub_1DA7ED0D8(id *a1)
{
  return sub_1DA83698C(a1, v1) & 1;
}

uint64_t sub_1DA7ED11C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5C68);
  uint64_t v20 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DA989638();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v18 - v13;
  sub_1DA7A0410(&qword_1EA8E5C70, &qword_1EA8E5C68);
  sub_1DA989318();
  if (v1)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_4:
    sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE61CC0);
LABEL_5:
    type metadata accessor for WidgetCacheManager.CacheManagementError(0);
    sub_1DA7F19B8(&qword_1EA8E5C18, (void (*)(uint64_t))type metadata accessor for WidgetCacheManager.CacheManagementError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  sub_1DA989918();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  sub_1DA989628();
  char v16 = sub_1DA989588();
  id v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v17)(v14, v8);
  if ((v16 & 1) == 0) {
    goto LABEL_5;
  }
  *uint64_t v19 = 1;
  return result;
}

uint64_t sub_1DA7ED4C8@<X0>(NSObject *a1@<X0>, uint64_t a2@<X8>)
{
  v3[3] = a1;
  return sub_1DA7EF988(a1, (void (*)(char *, char *))sub_1DA7F197C, (uint64_t)v3, a2);
}

uint64_t sub_1DA7ED504@<X0>(NSObject *a1@<X0>, uint64_t a2@<X8>)
{
  v3[3] = a1;
  return sub_1DA7EF988(a1, (void (*)(char *, char *))sub_1DA7F2C40, (uint64_t)v3, a2);
}

uint64_t sub_1DA7ED540@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, id *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v68 = a5;
  os_log_t v63 = a2;
  uint64_t v72 = a1;
  uint64_t v7 = sub_1DA989178();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v62 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v60 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DA989478();
  uint64_t v66 = *(void *)(v9 - 8);
  uint64_t v67 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v65 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WidgetEntryKey();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v64 = (uint64_t)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DA98B9E8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DA98B848();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a3 + qword_1EBE6F350;
  swift_beginAccess();
  uint64_t v70 = v18;
  uint64_t v71 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v21, v17);
  uint64_t v22 = (char *)objc_msgSend(*a4, sel_extensionIdentity);
  uint64_t v23 = &v22[*MEMORY[0x1E4F58B70]];
  swift_beginAccess();
  uint64_t v24 = *((void *)v23 + 1);
  swift_bridgeObjectRetain();

  if (v24)
  {
    swift_bridgeObjectRelease();
    sub_1DA98B828();
  }
  sub_1DA98B878();
  uint64_t v25 = v69;
  uint64_t v26 = sub_1DA98B858();
  if (!v25)
  {
    uint64_t v27 = v26;
    (*(void (**)(char *, os_log_t, uint64_t))(v14 + 16))(v16, v63, v13);
    sub_1DA98BDF8();
    sub_1DA7EDD60(a4);
    sub_1DA98BDE8();
    if (qword_1EBE62CA0 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1DA989F38();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EBE6F318);
    uint64_t v29 = v64;
    sub_1DA7F27C0((uint64_t)a4, v64, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
    uint64_t v30 = v65;
    uint64_t v31 = v66;
    uint64_t v32 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v72, v67);
    swift_retain_n();
    uint64_t v33 = sub_1DA989F18();
    os_log_type_t v34 = sub_1DA98C548();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v72 = 0;
      uint64_t v37 = v36;
      uint64_t v69 = swift_slowAlloc();
      uint64_t v75 = v69;
      *(_DWORD *)uint64_t v37 = 136447234;
      os_log_t v63 = v33;
      int v59 = v35;
      uint64_t v38 = WidgetEntryKey.description.getter();
      uint64_t v73 = sub_1DA8C5E00(v38, v39, &v75);
      v58[1] = &v74;
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      sub_1DA7F2318(v29, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
      *(_WORD *)(v37 + 12) = 2082;
      sub_1DA7F19B8(qword_1EBE62D08, MEMORY[0x1E4F276F0]);
      uint64_t v40 = sub_1DA98CDD8();
      uint64_t v73 = sub_1DA8C5E00(v40, v41, &v75);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
      *(_WORD *)(v37 + 22) = 2048;
      uint64_t v42 = *(void *)(sub_1DA98BE08() + 16);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v73 = v42;
      sub_1DA98C858();
      swift_release();
      *(_WORD *)(v37 + 32) = 2082;
      char v43 = sub_1DA98BDD8();
      BOOL v44 = (v43 & 1) == 0;
      if (v43) {
        uint64_t v45 = 1702195828;
      }
      else {
        uint64_t v45 = 0x65736C6166;
      }
      if (v44) {
        unint64_t v46 = 0xE500000000000000;
      }
      else {
        unint64_t v46 = 0xE400000000000000;
      }
      uint64_t v73 = sub_1DA8C5E00(v45, v46, &v75);
      sub_1DA98C858();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 42) = 2080;
      uint64_t v47 = v60;
      sub_1DA98BE28();
      sub_1DA7F19B8(&qword_1EBE61C90, MEMORY[0x1E4F26E60]);
      uint64_t v48 = v62;
      uint64_t v49 = sub_1DA98CDD8();
      unint64_t v51 = v50;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v48);
      uint64_t v73 = sub_1DA8C5E00(v49, v51, &v75);
      sub_1DA98C858();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v52 = v63;
        (uint8_t *)v37,
        0x34u);
      uint64_t v53 = v69;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v53, -1, -1);
      MEMORY[0x1E0178DA0](v37, -1, -1);
    }
    else
    {
      swift_release();
      sub_1DA7F2318(v29, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);

      swift_release_n();
    }
    uint64_t v54 = sub_1DA98BE38();
    uint64_t v55 = MEMORY[0x1E4F46EE0];
    uint64_t v56 = v68;
    v68[3] = v54;
    v56[4] = v55;
    *uint64_t v56 = v27;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v20, v71);
}

uint64_t sub_1DA7EDD54()
{
  return 0;
}

uint64_t sub_1DA7EDD60(id *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE64EF0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v27 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DA989478();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1DA7EE228((uint64_t)a1, (void (*)(uint64_t))sub_1DA7EF438))
  {
    char v15 = 1;
    return v15 & 1;
  }
  sub_1DA7EF438(a1, (uint64_t)v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v10, (uint64_t *)&unk_1EBE66AB0);
LABEL_5:
    char v15 = 0;
    return v15 & 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F6C8]), sel_init);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_5;
  }
  uint64_t v18 = v17;
  id v19 = objc_msgSend(v17, sel_stringRepresentation);

  v27[0] = sub_1DA98C038();
  uint64_t v21 = v20;

  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64EE8);
  sub_1DA7A0410(&qword_1EBE64EE0, &qword_1EBE64EE8);
  sub_1DA989318();
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v7, 0, 1, v22);
  sub_1DA7A1F58((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_1EBE64EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v5, 1, v22) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v5, (uint64_t *)&unk_1EBE64EF0);
    swift_bridgeObjectRetain();
    char v24 = 0;
  }
  else
  {
    sub_1DA989918();
    uint64_t v26 = v27[1];
    uint64_t v25 = v27[2];
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    if (v27[0] == v26 && v21 == v25) {
      char v24 = 1;
    }
    else {
      char v24 = sub_1DA98CE58();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  sub_1DA7A1AE0((uint64_t)v7, (uint64_t *)&unk_1EBE64EF0);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_bridgeObjectRelease_n();
  char v15 = v24 ^ 1;
  return v15 & 1;
}

BOOL sub_1DA7EE210(uint64_t a1)
{
  return sub_1DA7EE228(a1, (void (*)(uint64_t))sub_1DA7EF6E0);
}

BOOL sub_1DA7EE228(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67048);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v23[-v8];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1DA989478();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2(a1);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    id v17 = (uint64_t *)&unk_1EBE66AB0;
    uint64_t v18 = (uint64_t)v12;
LABEL_3:
    sub_1DA7A1AE0(v18, v17);
    return 0;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(v16, v12, v13);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67040);
  sub_1DA7A0410((unint64_t *)&qword_1EBE67038, &qword_1EBE67040);
  sub_1DA989318();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v9, 0, 1, v20);
  sub_1DA7A1F58((uint64_t)v9, (uint64_t)v7, &qword_1EBE67048);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v7, 1, v20) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE67048);
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v18 = (uint64_t)v7;
    id v17 = &qword_1EBE67048;
    goto LABEL_3;
  }
  sub_1DA989918();
  sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE67048);
  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
  char v22 = v23[7];
  (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v7, v20);
  return (v22 & 1) != 0;
}

void *sub_1DA7EE614(id *a1)
{
  uint64_t v3 = v1;
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DA98B9E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DA989478();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  id v19 = (char *)&v44 - v18;
  if (*(unsigned char *)(v3 + 160) != 1)
  {
    uint64_t v23 = (void *)type metadata accessor for WidgetCacheManager.CacheManagementError(0);
    sub_1DA7F19B8(&qword_1EA8E5C18, (void (*)(uint64_t))type metadata accessor for WidgetCacheManager.CacheManagementError);
    swift_allocError();
LABEL_7:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v23;
  }
  uint64_t v48 = v9;
  uint64_t v49 = v8;
  unint64_t v51 = v17;
  uint64_t v52 = v16;
  unint64_t v50 = v7;
  sub_1DA7A1A44(v3 + 40, (uint64_t)&v53);
  unint64_t v20 = v54;
  uint64_t v21 = v55;
  __swift_project_boxed_opaque_existential_0(&v53, v54);
  char v22 = ((uint64_t (*)(id *, unint64_t, _UNKNOWN **))v21[5])(a1, v20, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  if ((v22 & 1) == 0)
  {
    uint64_t v23 = (void *)type metadata accessor for WidgetCacheManager.CacheManagementError(0);
    sub_1DA7F19B8(&qword_1EA8E5C18, (void (*)(uint64_t))type metadata accessor for WidgetCacheManager.CacheManagementError);
    swift_allocError();
    sub_1DA7F27C0((uint64_t)a1, v27, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
    goto LABEL_7;
  }
  uint64_t v23 = (void *)v3;
  sub_1DA7EF438(a1, (uint64_t)v19);
  if (!v2)
  {
    swift_beginAccess();
    sub_1DA7A1A44(v3 + 120, (uint64_t)&v53);
    char v24 = v55;
    __swift_project_boxed_opaque_existential_0(&v53, v54);
    id v25 = objc_msgSend(*a1, sel_extensionIdentity);
    uint64_t v26 = (void (*)(void))v24[2];
    id v47 = v25;
    v26();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    id v29 = *(id *)(v3 + 16);
    sub_1DA989418();
    uint64_t v30 = (void *)sub_1DA9893A8();
    unint64_t v46 = (void (*)(char *, uint64_t))v51[1];
    id v47 = v51 + 1;
    v46(v15, v52);
    *(void *)&long long v53 = 0;
    unsigned __int8 v31 = objc_msgSend(v29, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v30, 1, 0, &v53);

    uint64_t v32 = (id)v53;
    if (v31)
    {
      *(void *)&long long v53 = WidgetEntryKey.description.getter();
      *((void *)&v53 + 1) = v33;
      sub_1DA98C148();
      sub_1DA7F19B8(qword_1EBE62D08, MEMORY[0x1E4F276F0]);
      uint64_t v34 = v52;
      sub_1DA98CDD8();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      uint64_t v44 = *((void *)&v53 + 1);
      uint64_t v45 = v53;
      ((void (**)(char *, char *, uint64_t))v51)[2](v15, v19, v34);
      uint64_t v35 = v48;
      uint64_t v36 = v49;
      uint64_t v37 = (uint64_t)v50;
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v50, v11, v49);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v36);
      uint64_t v38 = *(void (**)(char *, uint64_t))(v35 + 8);
      id v39 = *(id *)(v3 + 16);
      v38(v11, v36);
      uint64_t v40 = v52;
      v46(v19, v52);
      unint64_t v54 = sub_1DA7F1A00();
      uint64_t v55 = &off_1F34D9A48;
      *(void *)&long long v53 = v39;
      type metadata accessor for WidgetArchiveFilePromise(0);
      uint64_t v23 = (void *)swift_allocObject();
      unint64_t v41 = (char *)v23 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
      uint64_t v42 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
      uint64_t v43 = v44;
      _OWORD v23[2] = v45;
      v23[3] = v43;
      ((void (**)(char *, char *, uint64_t))v51)[4]((char *)v23 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination, v15, v40);
      sub_1DA7A19A4(&v53, (uint64_t)(v23 + 4));
      sub_1DA7F1A40((uint64_t)v50, (uint64_t)v23 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel);
    }
    else
    {
      uint64_t v23 = v32;
      sub_1DA9892D8();

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v49);
      v46(v19, v52);
    }
  }
  return v23;
}

uint64_t sub_1DA7EECF8(void *a1)
{
  uint64_t v31 = type metadata accessor for WidgetCacheKey();
  MEMORY[0x1F4188790](v31);
  uint64_t v32 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA989478();
  uint64_t v36 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v29 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v1;
  sub_1DA7A1A44(v1 + 40, (uint64_t)v33);
  uint64_t v9 = v34;
  uint64_t v10 = v35;
  __swift_project_boxed_opaque_existential_0(v33, v34);
  uint64_t v12 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v13 = __swift_project_boxed_opaque_existential_0(a1, v12);
  uint64_t v15 = v11 + 40;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 40);
  v26[1] = v13;
  uint64_t v27 = v14;
  uint64_t v28 = v11;
  uint64_t v16 = (void *)v14(v12, v11);
  uint64_t v17 = v7;
  uint64_t v18 = v36;
  (*(void (**)(void *, uint64_t, uint64_t))(v10 + 48))(v16, v9, v10);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v6, 1, v17) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v6, (uint64_t *)&unk_1EBE66AB0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    type metadata accessor for WidgetCacheManager.CacheManagementError(0);
    sub_1DA7F19B8(&qword_1EA8E5C18, (void (*)(uint64_t))type metadata accessor for WidgetCacheManager.CacheManagementError);
    swift_allocError();
    *id v19 = v27(v12, v28);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    unint64_t v20 = v29;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v29, v6, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    sub_1DA7A1A44(v30 + 80, (uint64_t)v33);
    uint64_t v21 = v34;
    uint64_t v22 = v35;
    __swift_project_boxed_opaque_existential_0(v33, v34);
    uint64_t v23 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v32, v20, v17);
    uint64_t v24 = *(int *)(v31 + 24);
    *(void *)(v23 + *(int *)(v31 + 20)) = 0;
    *(void *)(v23 + v24) = 0;
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v23, v21, v22);
    sub_1DA7F2318(v23, (uint64_t (*)(void))type metadata accessor for WidgetCacheKey);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  return v15;
}

uint64_t WidgetCacheManager.__allocating_init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5, uint64_t a6, char a7)
{
  uint64_t v15 = *(void *)(a4 + 24);
  uint64_t v14 = *(void *)(a4 + 32);
  uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1(a4, v15);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v18);
  uint64_t v20 = sub_1DA7F1390(a1, a2, a3, (uint64_t)v18, a5, a6, a7, v22[1], v15, v14);
  __swift_destroy_boxed_opaque_existential_1(a4);
  return v20;
}

uint64_t WidgetCacheManager.init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, long long *a3, long long *a4, long long *a5, uint64_t a6, char a7)
{
  sub_1DA98B838();
  *(unsigned char *)(v7 + 160) = a7 ^ 1;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = a2;
  sub_1DA7A19A4(a3, v7 + 40);
  sub_1DA7A19A4(a4, v7 + 80);
  sub_1DA7A19A4(a5, v7 + 120);
  *(void *)(v7 + 16) = a6;
  return v7;
}

uint64_t sub_1DA7EF278()
{
  uint64_t v1 = v0 + qword_1EBE6F350;
  uint64_t v2 = sub_1DA98B848();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t WidgetCacheManager.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  uint64_t v1 = v0 + qword_1EBE6F350;
  uint64_t v2 = sub_1DA98B848();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t WidgetCacheManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  uint64_t v1 = v0 + qword_1EBE6F350;
  uint64_t v2 = sub_1DA98B848();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA7EF438@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61FE0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WidgetCacheKey();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A1A44(v2 + 40, (uint64_t)v19);
  uint64_t v12 = v20;
  uint64_t v11 = v21;
  __swift_project_boxed_opaque_existential_0(v19, v20);
  (*(void (**)(id *, uint64_t, uint64_t))(v11 + 56))(a1, v12, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v6, &qword_1EBE61FE0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    id v13 = objc_msgSend(*a1, sel_extensionIdentity);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5C58);
    sub_1DA7A0410(&qword_1EA8E5C60, &qword_1EA8E5C58);
    swift_allocError();
    *uint64_t v14 = v13;
    return swift_willThrow();
  }
  else
  {
    sub_1DA7F2BD8((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WidgetCacheKey);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    sub_1DA7A1A44(v2 + 80, (uint64_t)v19);
    uint64_t v16 = v20;
    uint64_t v17 = v21;
    __swift_project_boxed_opaque_existential_0(v19, v20);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 24))(v10, v16, v17);
    sub_1DA7F2318((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WidgetCacheKey);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
}

uint64_t sub_1DA7EF6E0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66920);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ControlCacheKey();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A1A44(v2 + 40, (uint64_t)v19);
  uint64_t v12 = v20;
  uint64_t v11 = v21;
  __swift_project_boxed_opaque_existential_0(v19, v20);
  (*(void (**)(id *, uint64_t, uint64_t))(v11 + 56))(a1, v12, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v6, &qword_1EBE66920);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    id v13 = objc_msgSend(*a1, sel_extensionIdentity);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5C30);
    sub_1DA7A0410(&qword_1EA8E5C38, &qword_1EA8E5C30);
    swift_allocError();
    *uint64_t v14 = v13;
    return swift_willThrow();
  }
  else
  {
    sub_1DA7F2BD8((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ControlCacheKey);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    sub_1DA7A1A44(v2 + 80, (uint64_t)v19);
    uint64_t v16 = v20;
    uint64_t v17 = v21;
    __swift_project_boxed_opaque_existential_0(v19, v20);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 24))(v10, v16, v17);
    sub_1DA7F2318((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ControlCacheKey);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
}

uint64_t sub_1DA7EF988@<X0>(NSObject *a1@<X0>, void (*a2)(char *, char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v102 = a3;
  uint64_t v103 = a2;
  uint64_t v101 = a4;
  v115[5] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = type metadata accessor for WidgetEntryKey();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v96 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v97 = (uint64_t)&v93 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v98 = (uint64_t)&v93 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AA8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DA989098();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v107 = v15;
  uint64_t v108 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v112 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1DA98B9E8();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v105 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DA989478();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v110 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v93 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  uint64_t v104 = (uint64_t)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  id v29 = (char *)&v93 - v28;
  uint64_t v113 = v20;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v30((char *)&v93 - v28, 1, 1, v19);
  p_isa = (id *)&a1->isa;
  uint64_t v32 = v111;
  sub_1DA7EF438((id *)&a1->isa, (uint64_t)v24);
  os_log_t v109 = a1;
  uint64_t v106 = v19;
  if (v32)
  {
    uint64_t v33 = v4;
    uint64_t v34 = (uint64_t)v29;
    os_log_t v40 = v109;
    id v39 = v110;
    unint64_t v41 = v112;
    if (*(unsigned char *)(v33 + 160) == 1)
    {
      uint64_t v111 = v29;
      v115[0] = v32;
      uint64_t v42 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
      uint64_t v43 = v107;
      int v44 = swift_dynamicCast();
      uint64_t v45 = v108;
      unint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v108 + 56);
      if (v44)
      {
        v46(v14, 0, 1, v43);
        (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v41, v14, v43);
        BOOL v47 = sub_1DA8382E0();
        uint64_t v48 = v113;
        if (v47)
        {
          if (qword_1EA8E5578 != -1) {
            swift_once();
          }
          uint64_t v49 = sub_1DA989F38();
          __swift_project_value_buffer(v49, (uint64_t)qword_1EA8ED820);
          uint64_t v50 = v98;
          sub_1DA7F27C0((uint64_t)v40, v98, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
          unint64_t v51 = sub_1DA989F18();
          os_log_type_t v52 = sub_1DA98C548();
          BOOL v53 = os_log_type_enabled(v51, v52);
          uint64_t v34 = (uint64_t)v111;
          if (v53)
          {
            unint64_t v54 = (uint8_t *)swift_slowAlloc();
            uint64_t v113 = swift_slowAlloc();
            v115[0] = (id)v113;
            uint64_t v105 = v32;
            *(_DWORD *)unint64_t v54 = 136446210;
            uint64_t v110 = (char *)(v54 + 4);
            uint64_t v55 = v97;
            sub_1DA7F27C0(v50, v97, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
            sub_1DA7F2318(v50, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
            uint64_t v56 = WidgetEntryKey.description.getter();
            unint64_t v58 = v57;
            sub_1DA7F2318(v55, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
            uint64_t v114 = sub_1DA8C5E00(v56, v58, (uint64_t *)v115);
            sub_1DA98C858();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1DA795000, v51, v52, "Not removing item for key %{public}s because of keybag", v54, 0xCu);
            uint64_t v59 = v113;
            swift_arrayDestroy();
            MEMORY[0x1E0178DA0](v59, -1, -1);
            uint64_t v60 = v54;
            uint64_t v34 = (uint64_t)v111;
            MEMORY[0x1E0178DA0](v60, -1, -1);
          }
          else
          {
            sub_1DA7F2318(v50, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
          }

          (*(void (**)(char *, uint64_t))(v108 + 8))(v112, v43);
          goto LABEL_26;
        }
        (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v43);
      }
      else
      {
        v46(v14, 1, 1, v43);
        sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE66AA8);
        uint64_t v48 = v113;
      }
      uint64_t v34 = (uint64_t)v111;
      uint64_t v61 = v104;
      sub_1DA7A1F58((uint64_t)v111, v104, (uint64_t *)&unk_1EBE66AB0);
      uint64_t v62 = v106;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v61, 1, v106) == 1)
      {
        sub_1DA7A1AE0(v61, (uint64_t *)&unk_1EBE66AB0);
      }
      else
      {
        os_log_t v63 = v39;
        uint64_t v105 = v32;
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v39, v61, v62);
        uint64_t v64 = v48;
        id v65 = *(id *)(v33 + 16);
        uint64_t v66 = v62;
        uint64_t v67 = (void *)sub_1DA9893A8();
        v115[0] = 0;
        unsigned __int8 v68 = objc_msgSend(v65, sel_removeItemAtURL_error_, v67, v115);

        if (v68)
        {
          uint64_t v69 = qword_1EBE62CA0;
          id v70 = v115[0];
          if (v69 != -1) {
            swift_once();
          }
          uint64_t v71 = sub_1DA989F38();
          __swift_project_value_buffer(v71, (uint64_t)qword_1EBE6F318);
          uint64_t v72 = v96;
          sub_1DA7F27C0((uint64_t)v40, v96, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
          id v73 = v105;
          char v74 = v105;
          id v75 = v73;
          uint64_t v76 = sub_1DA989F18();
          os_log_type_t v77 = sub_1DA98C548();
          if (os_log_type_enabled(v76, v77))
          {
            uint64_t v78 = swift_slowAlloc();
            uint64_t v79 = (void *)swift_slowAlloc();
            uint64_t v112 = (char *)swift_slowAlloc();
            v115[0] = v112;
            *(_DWORD *)uint64_t v78 = 136446466;
            os_log_t v109 = v76;
            uint64_t v80 = v97;
            sub_1DA7F27C0(v72, v97, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
            sub_1DA7F2318(v72, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
            uint64_t v81 = WidgetEntryKey.description.getter();
            uint64_t v82 = v113;
            unint64_t v84 = v83;
            sub_1DA7F2318(v80, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
            uint64_t v114 = sub_1DA8C5E00(v81, v84, (uint64_t *)v115);
            sub_1DA98C858();
            swift_bridgeObjectRelease();
            *(_WORD *)(v78 + 12) = 2112;
            char v85 = v105;
            uint64_t v86 = _swift_stdlib_bridgeErrorToNSError();
            uint64_t v114 = v86;
            id v87 = v105;
            sub_1DA98C858();
            void *v79 = v86;
            uint64_t v34 = (uint64_t)v111;

            os_log_t v88 = v109;
            _os_log_impl(&dword_1DA795000, v109, v77, "Removing item for key %{public}s because  %@", (uint8_t *)v78, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
            swift_arrayDestroy();
            MEMORY[0x1E0178DA0](v79, -1, -1);
            uint64_t v89 = v112;
            swift_arrayDestroy();
            MEMORY[0x1E0178DA0](v89, -1, -1);
            MEMORY[0x1E0178DA0](v78, -1, -1);

            (*(void (**)(char *, uint64_t))(v82 + 8))(v110, v106);
          }
          else
          {
            sub_1DA7F2318(v72, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);

            (*(void (**)(char *, uint64_t))(v113 + 8))(v63, v106);
            uint64_t v34 = (uint64_t)v111;
          }
        }
        else
        {
          id v90 = v115[0];
          long long v91 = (void *)sub_1DA9892D8();

          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v66);
        }
      }
    }
LABEL_26:
    swift_willThrow();
    return sub_1DA7A1AE0(v34, (uint64_t *)&unk_1EBE66AB0);
  }
  uint64_t v95 = v14;
  sub_1DA7A1AE0((uint64_t)v29, (uint64_t *)&unk_1EBE66AB0);
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v29, v24, v19);
  uint64_t v111 = v29;
  v30(v29, 0, 1, v19);
  swift_beginAccess();
  sub_1DA7A1A44(v4 + 120, (uint64_t)v115);
  uint64_t v35 = (void (**)(void))v115[4];
  __swift_project_boxed_opaque_existential_0(v115, (uint64_t)v115[3]);
  uint64_t v94 = v4;
  id v36 = objc_msgSend(*p_isa, sel_extensionIdentity);
  uint64_t v37 = v105;
  v35[2]();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v115);
  if (*(unsigned char *)(v94 + 160))
  {
    id v38 = *(id *)(v94 + 16);
    sub_1DA7F1488((uint64_t)v24, v38);
  }
  v103(v24, v37);
  uint64_t v34 = (uint64_t)v111;
  (*(void (**)(char *, uint64_t))(v99 + 8))(v37, v100);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v24, v19);
  return sub_1DA7A1AE0(v34, (uint64_t *)&unk_1EBE66AB0);
}

uint64_t sub_1DA7F0690(id *a1, void (*a2)(uint64_t *__return_ptr, uint64_t, char *), uint64_t a3)
{
  void (*v95)(uint64_t *__return_ptr, uint64_t, char *);
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  id *v100;
  char *v101;
  void *v102;
  void *v103;
  char *v104;
  void (**v105)(void, uint64_t, void);
  char *v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  id v110[7];

  uint64_t v94 = a3;
  uint64_t v95 = a2;
  v110[5] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = type metadata accessor for ControlEntryKey();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v90 = (uint64_t)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v91 = (uint64_t)&v90 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v92 = (uint64_t)&v90 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AA8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v99 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = (void *)sub_1DA989098();
  uint64_t v98 = *(v103 - 1);
  MEMORY[0x1F4188790](v103);
  uint64_t v104 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DA98B9E8();
  uint64_t v93 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v97 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DA989478();
  uint64_t v17 = *(void **)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v101 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v90 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v96 = (uint64_t)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v90 - v26;
  uint64_t v105 = (void (**)(void, uint64_t, void))v17;
  uint64_t v28 = (void (*)(char *, uint64_t, uint64_t, uint64_t, double))v17[7];
  v28((char *)&v90 - v26, 1, 1, v16, v25);
  id v29 = a1;
  uint64_t v30 = v102;
  sub_1DA7EF6E0(a1, (uint64_t)v21);
  uint64_t v106 = v27;
  uint64_t v107 = v3;
  uint64_t v100 = a1;
  if (v30)
  {
    uint64_t v31 = v16;
    uint64_t v32 = v105;
    uint64_t v33 = v103;
    uint64_t v42 = (uint64_t)v100;
    uint64_t v43 = v101;
    int v44 = v104;
    uint64_t v45 = (uint64_t)v99;
    if (v107[160] == 1)
    {
      v110[0] = v30;
      id v46 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
      int v47 = swift_dynamicCast();
      uint64_t v48 = v98;
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(v98 + 56);
      if (v47)
      {
        v49(v45, 0, 1, v33);
        (*(void (**)(char *, uint64_t, void *))(v48 + 32))(v44, v45, v33);
        if (sub_1DA8382E0())
        {
          if (qword_1EA8E5578 != -1) {
            swift_once();
          }
          uint64_t v50 = sub_1DA989F38();
          __swift_project_value_buffer(v50, (uint64_t)qword_1EA8ED820);
          uint64_t v51 = v92;
          sub_1DA7F27C0(v42, v92, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
          os_log_type_t v52 = sub_1DA989F18();
          os_log_type_t v53 = sub_1DA98C548();
          if (os_log_type_enabled(v52, v53))
          {
            unint64_t v54 = (uint8_t *)swift_slowAlloc();
            uint64_t v55 = (void *)swift_slowAlloc();
            v110[0] = v55;
            uint64_t v105 = (void (**)(void, uint64_t, void))v30;
            *(_DWORD *)unint64_t v54 = 136446210;
            uint64_t v107 = v54 + 4;
            uint64_t v56 = v91;
            sub_1DA7F27C0(v51, v91, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
            sub_1DA7F2318(v51, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
            uint64_t v57 = ControlEntryKey.description.getter();
            unint64_t v59 = v58;
            sub_1DA7F2318(v56, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
            uint64_t v108 = sub_1DA8C5E00(v57, v59, (uint64_t *)v110);
            sub_1DA98C858();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1DA795000, v52, v53, "Not removing item for key %{public}s because of keybag", v54, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1E0178DA0](v55, -1, -1);
            MEMORY[0x1E0178DA0](v54, -1, -1);

            (*(void (**)(char *, void *))(v98 + 8))(v104, v103);
          }
          else
          {
            sub_1DA7F2318(v51, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);

            (*(void (**)(char *, void *))(v98 + 8))(v104, v33);
          }
          goto LABEL_25;
        }
        (*(void (**)(char *, void *))(v48 + 8))(v44, v33);
      }
      else
      {
        v49(v45, 1, 1, v33);
        sub_1DA7A1AE0(v45, &qword_1EBE66AA8);
      }
      uint64_t v60 = v96;
      sub_1DA7A1F58((uint64_t)v106, v96, (uint64_t *)&unk_1EBE66AB0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32[6])(v60, 1, v31) == 1)
      {
        sub_1DA7A1AE0(v60, (uint64_t *)&unk_1EBE66AB0);
      }
      else
      {
        uint64_t v61 = v43;
        uint64_t v62 = v42;
        uint64_t v105 = (void (**)(void, uint64_t, void))v30;
        ((void (**)(char *, uint64_t, uint64_t))v32)[4](v43, v60, v31);
        id v63 = *((id *)v107 + 2);
        uint64_t v64 = (void *)sub_1DA9893A8();
        v110[0] = 0;
        unsigned __int8 v65 = objc_msgSend(v63, sel_removeItemAtURL_error_, v64, v110);

        if (v65)
        {
          uint64_t v66 = qword_1EBE62CA0;
          id v67 = v110[0];
          if (v66 != -1) {
            swift_once();
          }
          uint64_t v68 = sub_1DA989F38();
          __swift_project_value_buffer(v68, (uint64_t)qword_1EBE6F318);
          uint64_t v69 = v90;
          sub_1DA7F27C0(v62, v90, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
          id v70 = v105;
          uint64_t v71 = v105;
          id v72 = v70;
          id v73 = sub_1DA989F18();
          os_log_type_t v74 = sub_1DA98C548();
          if (os_log_type_enabled(v73, v74))
          {
            uint64_t v75 = swift_slowAlloc();
            uint64_t v107 = (uint8_t *)v31;
            uint64_t v76 = v75;
            uint64_t v103 = (void *)swift_slowAlloc();
            uint64_t v104 = (char *)swift_slowAlloc();
            v110[0] = v104;
            *(_DWORD *)uint64_t v76 = 136446466;
            uint64_t v77 = v91;
            sub_1DA7F27C0(v69, v91, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
            sub_1DA7F2318(v69, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
            uint64_t v78 = ControlEntryKey.description.getter();
            uint64_t v79 = v32;
            unint64_t v81 = v80;
            sub_1DA7F2318(v77, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
            uint64_t v108 = sub_1DA8C5E00(v78, v81, (uint64_t *)v110);
            sub_1DA98C858();
            swift_bridgeObjectRelease();
            *(_WORD *)(v76 + 12) = 2112;
            uint64_t v82 = v105;
            uint64_t v83 = _swift_stdlib_bridgeErrorToNSError();
            uint64_t v108 = v83;
            id v84 = v105;
            sub_1DA98C858();
            char v85 = v103;
            *uint64_t v103 = v83;

            _os_log_impl(&dword_1DA795000, v73, v74, "Removing item for key %{public}s because  %@", (uint8_t *)v76, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
            swift_arrayDestroy();
            MEMORY[0x1E0178DA0](v85, -1, -1);
            uint64_t v86 = v104;
            swift_arrayDestroy();
            MEMORY[0x1E0178DA0](v86, -1, -1);
            MEMORY[0x1E0178DA0](v76, -1, -1);

            ((void (*)(char *, uint8_t *))v79[1])(v101, v107);
          }
          else
          {
            sub_1DA7F2318(v69, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);

            ((void (*)(char *, uint64_t))v32[1])(v61, v31);
          }
        }
        else
        {
          id v87 = v110[0];
          os_log_t v88 = (void *)sub_1DA9892D8();

          swift_willThrow();
          ((void (*)(char *, uint64_t))v32[1])(v43, v31);
        }
      }
    }
LABEL_25:
    swift_willThrow();
    return sub_1DA7A1AE0((uint64_t)v106, (uint64_t *)&unk_1EBE66AB0);
  }
  uint64_t v102 = (void *)v14;
  sub_1DA7A1AE0((uint64_t)v27, (uint64_t *)&unk_1EBE66AB0);
  ((void (**)(char *, uint64_t, uint64_t))v105)[2](v27, (uint64_t)v21, v16);
  ((void (*)(char *, void, uint64_t, uint64_t))v28)(v27, 0, 1, v16);
  uint64_t v34 = (uint64_t)(v107 + 120);
  swift_beginAccess();
  sub_1DA7A1A44(v34, (uint64_t)v110);
  uint64_t v35 = (void (**)(void))v110[4];
  __swift_project_boxed_opaque_existential_0(v110, (uint64_t)v110[3]);
  id v36 = objc_msgSend(*v29, sel_extensionIdentity);
  uint64_t v37 = v97;
  v35[2]();
  uint64_t v38 = (uint64_t)v21;
  id v39 = (void (**)(uint64_t, uint64_t))v105;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
  if (v107[160])
  {
    id v40 = *((id *)v107 + 2);
    sub_1DA7F1488(v38, v40);
  }
  v95(&v109, v38, v37);
  uint64_t v41 = (uint64_t)v106;
  (*(void (**)(char *, void *))(v93 + 8))(v37, v102);
  v39[1](v38, v16);
  sub_1DA7A1AE0(v41, (uint64_t *)&unk_1EBE66AB0);
  return v109;
}

uint64_t sub_1DA7F1390(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v21 = a9;
  uint64_t v22 = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(boxed_opaque_existential_1, a4, a9);
  type metadata accessor for WidgetCacheManager(0);
  uint64_t v18 = swift_allocObject();
  sub_1DA98B838();
  *(unsigned char *)(v18 + 160) = a7 ^ 1;
  *(void *)(v18 + 24) = a1;
  *(void *)(v18 + 32) = a2;
  sub_1DA7A19A4(a3, v18 + 40);
  sub_1DA7A19A4(&v20, v18 + 80);
  sub_1DA7A19A4(a5, v18 + 120);
  *(void *)(v18 + 16) = a6;
  return v18;
}

void sub_1DA7F1488(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A8A8);
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v24 = sub_1DA98B9E8();
  uint64_t v13 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A0410(&qword_1EBE5ABA8, &qword_1EBE5A8A8);
  id v25 = a2;
  sub_1DA989318();
  unint64_t v21 = (unint64_t)"se Closed <becauseError>=%@";
  uint64_t v22 = v10;
  sub_1DA989918();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  uint64_t v16 = v24;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v24) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v12, &qword_1EBE66AF0);
    uint64_t v17 = v25;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, v16);
    uint64_t v18 = (void *)sub_1DA98B9B8();
    uint64_t v19 = a1;
    uint64_t v17 = v25;
    sub_1DA951630(v18);

    uint64_t v20 = (uint64_t)v22;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v22, 1, 1, v16);
    sub_1DA7F2828(v19, 0xD00000000000002DLL, v21 | 0x8000000000000000, v20);
    sub_1DA7A1AE0(v20, &qword_1EBE66AF0);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v16);
  }
}

uint64_t _s9ChronoKit18WidgetCacheManagerC12subdirectory16cacheKeyProvider015protectionLevelI004fileE010forReadingACSS_AA0dH9Providing_pAA0cdH0V0dH0AaIPRts_AA0c5EntryH0V0pH0AMRtsXPAA014DataProtectionkO0_pSo06NSFileE0CSbtcfC_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12 = type metadata accessor for WidgetCacheURLProvider();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[3] = 0;
  void v13[2] = 0;
  swift_beginAccess();
  void v13[2] = a1;
  void v13[3] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13[4] = 0x742D6F6E6F726863;
  v13[5] = 0xEF656E696C656D69;
  sub_1DA7A1A44(a3, (uint64_t)v20);
  sub_1DA7A1A44(a4, (uint64_t)v19);
  uint64_t v17 = v12;
  uint64_t v18 = &protocol witness table for WidgetCacheURLProvider;
  *(void *)&long long v16 = v13;
  type metadata accessor for WidgetCacheManager(0);
  uint64_t v14 = swift_allocObject();
  sub_1DA98B838();
  *(unsigned char *)(v14 + 160) = a6 ^ 1;
  *(void *)(v14 + 24) = a1;
  *(void *)(v14 + 32) = a2;
  sub_1DA7A19A4(v20, v14 + 40);
  sub_1DA7A19A4(&v16, v14 + 80);
  sub_1DA7A19A4(v19, v14 + 120);
  *(void *)(v14 + 16) = a5;
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v14;
}

uint64_t sub_1DA7F197C@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DA7ED540(a1, a2, *(void *)(v3 + 16), *(id **)(v3 + 24), a3);
}

uint64_t type metadata accessor for WidgetCacheManager.CacheManagementError(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EA8E5C20);
}

uint64_t sub_1DA7F19B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DA7F1A00()
{
  unint64_t result = qword_1EBE58EE0;
  if (!qword_1EBE58EE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE58EE0);
  }
  return result;
}

uint64_t sub_1DA7F1A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t type metadata accessor for WidgetCacheManager(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE62050);
}

uint64_t sub_1DA7F1B20()
{
  uint64_t result = sub_1DA98B848();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for WidgetCacheManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetCacheManager);
}

uint64_t dispatch thunk of WidgetCacheManager.archiveValidationOptions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of WidgetCacheManager.archiveValidationOptions.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of WidgetCacheManager.archiveValidationOptions.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of WidgetCacheManager.timelineData(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of WidgetCacheManager.urls(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

char *sub_1DA7F1CCC(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = *a2;
      uint64_t v12 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v12;
      uint64_t v13 = *(int *)(type metadata accessor for WidgetEntryKey() + 24);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = (char *)a2 + v13;
      long long v16 = v11;
      uint64_t v17 = v12;
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
        memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v14, v15, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
      }
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = *a2;
      *(void *)a1 = *a2;
      uint64_t v9 = v8;
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

void sub_1DA7F1EA8(id *a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {

    uint64_t v4 = (char *)a1 + *(int *)(type metadata accessor for WidgetEntryKey() + 24);
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
    uint64_t v7 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5))
    {
      uint64_t v6 = *(void (**)(char *, uint64_t))(v7 + 8);
      v6(v4, v5);
    }
  }
  else if (!EnumCaseMultiPayload)
  {
    id v3 = *a1;
  }
}

void **sub_1DA7F1FBC(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = *a2;
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = *(int *)(type metadata accessor for WidgetEntryKey() + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    id v14 = v9;
    id v15 = v10;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
      memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v13, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    id v8 = v7;
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void **sub_1DA7F2154(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DA7F2318((uint64_t)a1, type metadata accessor for WidgetCacheManager.CacheManagementError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = *a2;
      *a1 = *a2;
      uint64_t v10 = a2[1];
      a1[1] = v10;
      uint64_t v11 = *(int *)(type metadata accessor for WidgetEntryKey() + 24);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      id v14 = v9;
      id v15 = v10;
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
        memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v13, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = *a2;
      *a1 = *a2;
      id v8 = v7;
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1DA7F2318(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_1DA7F2378(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for WidgetEntryKey() + 24);
    uint64_t v7 = (char *)a1 + v6;
    id v8 = (char *)a2 + v6;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1DA7F24E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DA7F2318((uint64_t)a1, type metadata accessor for WidgetCacheManager.CacheManagementError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(type metadata accessor for WidgetEntryKey() + 24);
      uint64_t v7 = (char *)a1 + v6;
      id v8 = (char *)a2 + v6;
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DefaultWidgetLiveViewEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for DefaultWidgetLiveViewEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1DA7F26D0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DA7F26E0()
{
  uint64_t result = type metadata accessor for WidgetEntryKey();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DA7F2778()
{
  return sub_1DA7F19B8(&qword_1EA8E5C18, (void (*)(uint64_t))type metadata accessor for WidgetCacheManager.CacheManagementError);
}

uint64_t sub_1DA7F27C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA7F2828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v20[1] = a2;
  long long v20[2] = a3;
  v20[3] = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5C40);
  v20[0] = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DA98B9E8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v20 - v16;
  sub_1DA7A1F58(a4, (uint64_t)v10, &qword_1EBE66AF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v10, &qword_1EBE66AF0);
    return sub_1DA989348();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    uint64_t v19 = (void (*)(uint64_t))MEMORY[0x1E4F46D40];
    sub_1DA7F19B8(&qword_1EA8E5C48, MEMORY[0x1E4F46D40]);
    sub_1DA7F19B8(&qword_1EBE5A640, v19);
    sub_1DA989908();
    sub_1DA7A0410(&qword_1EA8E5C50, &qword_1EA8E5C40);
    sub_1DA989328();
    (*(void (**)(char *, uint64_t))(v20[0] + 8))(v7, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1DA7F2BD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA7F2C40@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DA7F197C(a1, a2, a3);
}

void sub_1DA7F2C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, __int16 a8, char a9)
{
  uint64_t v10 = v9;
  *(void *)(v9 + 72) = 0;
  uint64_t v15 = v9 + 72;
  *(_WORD *)(v9 + 80) = 256;
  *(void *)(v9 + 24) = 0;
  *(void *)(v9 + 32) = 0;
  *(void *)(v9 + 104) = 0;
  type metadata accessor for UnfairLock();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = (_DWORD *)swift_slowAlloc();
  *uint64_t v17 = 0;
  *(void *)(v16 + 16) = v17;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = 0;
  *(_WORD *)(v15 + 56) = 256;
  if (!a2) {
    goto LABEL_11;
  }
  id v18 = objc_msgSend(self, sel_mainBundle);
  id v19 = objc_msgSend(v18, sel_bundleIdentifier);

  if (!v19) {
    goto LABEL_8;
  }
  uint64_t v20 = sub_1DA98C038();
  uint64_t v22 = v21;

  if (v20 == a1 && v22 == a2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  char v24 = sub_1DA98CE58();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
  {
LABEL_8:
    id v25 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
    swift_bridgeObjectRetain();
    uint64_t v26 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    id v27 = objc_msgSend(v25, sel_initWithSuiteName_, v26);

    if (v27) {
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  id v27 = objc_msgSend(self, sel_standardUserDefaults);
LABEL_12:
  *(void *)(v10 + 16) = v27;
  *(void *)(v10 + 24) = a1;
  *(void *)(v10 + 32) = a2;
  swift_bridgeObjectRelease();
  *(void *)(v10 + 56) = a5;
  *(void *)(v10 + 40) = a3;
  *(void *)(v10 + 48) = a4;
  *(unsigned char *)(v10 + 64) = (a6 & 1) != 0;
  *(unsigned char *)(v10 + 82) = a9 & 1;
  if ((a8 & 0x100) == 0)
  {
    swift_beginAccess();
    if (a9)
    {
      *(void *)(v10 + 56) = a7;
      *(unsigned char *)(v10 + 64) = a8 & 1;
    }
    else
    {
      *(void *)(v10 + 72) = a5;
      *(unsigned char *)(v10 + 80) = a6 & 1;
      *(unsigned char *)(v10 + 81) = 0;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE65F28);
  swift_allocObject();
  uint64_t v28 = sub_1DA98A008();
  *(void *)(v10 + 88) = v28;
  uint64_t v44 = v28;
  sub_1DA7A0410(&qword_1EBE65F20, &qword_1EBE65F28);
  uint64_t v29 = sub_1DA98A0F8();
  uint64_t v30 = *(void **)(v10 + 104);
  *(void *)(v10 + 96) = v29;
  *(void *)(v10 + 104) = 0;

  uint64_t v31 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE660C0);
  id v32 = objc_allocWithZone(v31);
  swift_weakInit();
  swift_weakAssign();
  v43.receiver = v32;
  v43.super_class = v31;
  id v33 = objc_msgSendSuper2(&v43, sel_init);
  uint64_t v34 = *(void **)(v10 + 104);
  *(void *)(v10 + 104) = v33;

  uint64_t v35 = *(void **)(v10 + 104);
  if (v35)
  {
    id v36 = *(id *)(v10 + 16);
    id v37 = v35;
    swift_bridgeObjectRetain();
    uint64_t v38 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_addObserver_forKeyPath_options_context_, v37, v38, 0, 0);
  }
  else
  {
    __break(1u);
  }
}

void sub_1DA7F2FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  *(void *)(v8 + 64) = 0;
  uint64_t v16 = v8 + 64;
  *(void *)(v8 + 24) = 0;
  *(void *)(v8 + 32) = 0;
  *(unsigned char *)(v8 + 72) = 1;
  *(void *)(v8 + 96) = 0;
  type metadata accessor for UnfairLock();
  uint64_t v17 = swift_allocObject();
  id v18 = (_DWORD *)swift_slowAlloc();
  *id v18 = 0;
  *(void *)(v17 + 16) = v18;
  *(void *)(v16 + 40) = v17;
  *(void *)(v16 + 48) = 0;
  *(unsigned char *)(v16 + 56) = 1;
  if (!a2) {
    goto LABEL_11;
  }
  id v19 = objc_msgSend(self, sel_mainBundle);
  id v20 = objc_msgSend(v19, sel_bundleIdentifier);

  if (!v20) {
    goto LABEL_8;
  }
  unsigned int v40 = a8;
  a8 = a5;
  a5 = a7;
  a7 = a6;
  uint64_t v21 = sub_1DA98C038();
  uint64_t v23 = v22;

  if (v21 == a1 && v23 == a2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    a6 = a7;
    LOBYTE(a7) = a5;
    a5 = a8;
    LOBYTE(a8) = v40;
    goto LABEL_11;
  }
  char v25 = sub_1DA98CE58();
  swift_bridgeObjectRelease();
  a6 = a7;
  a7 = a5;
  a5 = a8;
  a8 = v40;
  if ((v25 & 1) == 0)
  {
LABEL_8:
    id v26 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
    swift_bridgeObjectRetain();
    id v27 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(v26, sel_initWithSuiteName_, v27);

    if (v28) {
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  id v28 = objc_msgSend(self, sel_standardUserDefaults);
LABEL_12:
  *(void *)(v9 + 16) = v28;
  *(void *)(v9 + 24) = a1;
  *(void *)(v9 + 32) = a2;
  swift_bridgeObjectRelease();
  *(void *)(v9 + 56) = a5;
  *(void *)(v9 + 40) = a3;
  *(void *)(v9 + 48) = a4;
  *(unsigned char *)(v9 + 73) = a8 & 1;
  if ((a7 & 1) == 0)
  {
    swift_beginAccess();
    if (a8)
    {
      *(void *)(v9 + 56) = a6;
    }
    else
    {
      *(void *)(v9 + 64) = a5;
      *(unsigned char *)(v9 + 72) = 0;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBE65F38);
  swift_allocObject();
  uint64_t v29 = sub_1DA98A008();
  *(void *)(v9 + 80) = v29;
  uint64_t v44 = v29;
  sub_1DA7A0410(&qword_1EBE65F30, qword_1EBE65F38);
  uint64_t v30 = sub_1DA98A0F8();
  uint64_t v31 = *(void **)(v9 + 96);
  *(void *)(v9 + 88) = v30;
  *(void *)(v9 + 96) = 0;

  id v32 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(qword_1EBE660C8);
  id v33 = objc_allocWithZone(v32);
  swift_weakInit();
  swift_weakAssign();
  v43.receiver = v33;
  v43.super_class = v32;
  id v34 = objc_msgSendSuper2(&v43, sel_init);
  uint64_t v35 = *(void **)(v9 + 96);
  *(void *)(v9 + 96) = v34;

  id v36 = *(void **)(v9 + 96);
  if (v36)
  {
    id v37 = *(id *)(v9 + 16);
    id v38 = v36;
    swift_bridgeObjectRetain();
    id v39 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_addObserver_forKeyPath_options_context_, v38, v39, 0, 0);
  }
  else
  {
    __break(1u);
  }
}

void sub_1DA7F3378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v8 = v7;
  LOBYTE(v10) = a6;
  *(unsigned char *)(v7 + 57) = 2;
  uint64_t v15 = v7 + 57;
  *(void *)(v15 - 25) = 0;
  *(void *)(v15 - 33) = 0;
  *(void *)(v15 + 23) = 0;
  type metadata accessor for UnfairLock();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = (_DWORD *)swift_slowAlloc();
  *uint64_t v17 = 0;
  *(void *)(v16 + 16) = v17;
  *(void *)(v15 + 31) = v16;
  *(unsigned char *)(v15 + 39) = 2;
  if (!a2) {
    goto LABEL_11;
  }
  id v18 = objc_msgSend(self, sel_mainBundle);
  id v19 = objc_msgSend(v18, sel_bundleIdentifier);

  if (!v19) {
    goto LABEL_8;
  }
  char v39 = a7;
  a7 = v10;
  uint64_t v10 = a5;
  a5 = a4;
  uint64_t v20 = sub_1DA98C038();
  uint64_t v22 = v21;

  if (v20 == a1 && v22 == a2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    a4 = a5;
    LOBYTE(a5) = v10;
    LOBYTE(v10) = a7;
    a7 = v39;
    goto LABEL_11;
  }
  char v24 = sub_1DA98CE58();
  swift_bridgeObjectRelease();
  a4 = a5;
  a5 = v10;
  LOBYTE(v10) = a7;
  a7 = v39;
  if ((v24 & 1) == 0)
  {
LABEL_8:
    id v25 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
    swift_bridgeObjectRetain();
    id v26 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    id v27 = objc_msgSend(v25, sel_initWithSuiteName_, v26);

    if (v27) {
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  id v27 = objc_msgSend(self, sel_standardUserDefaults);
LABEL_12:
  *(void *)(v8 + 16) = v27;
  *(void *)(v8 + 24) = a1;
  *(void *)(v8 + 32) = a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 56) = a5 & 1;
  *(void *)(v8 + 40) = a3;
  *(void *)(v8 + 48) = a4;
  *(unsigned char *)(v8 + 58) = a7 & 1;
  if (v10 != 2)
  {
    swift_beginAccess();
    if (a7) {
      *(unsigned char *)(v8 + 56) = v10 & 1;
    }
    else {
      *(unsigned char *)uint64_t v15 = a5 & 1;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBE65CF8);
  swift_allocObject();
  uint64_t v28 = sub_1DA98A008();
  *(void *)(v8 + 64) = v28;
  uint64_t v42 = v28;
  sub_1DA7A0410(&qword_1EBE65CF0, qword_1EBE65CF8);
  uint64_t v29 = sub_1DA98A0F8();
  uint64_t v30 = *(void **)(v8 + 80);
  *(void *)(v8 + 72) = v29;
  *(void *)(v8 + 80) = 0;

  uint64_t v31 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE660B8);
  id v32 = objc_allocWithZone(v31);
  swift_weakInit();
  swift_weakAssign();
  v41.receiver = v32;
  v41.super_class = v31;
  id v33 = objc_msgSendSuper2(&v41, sel_init);
  id v34 = *(void **)(v8 + 80);
  *(void *)(v8 + 80) = v33;

  uint64_t v35 = *(void **)(v8 + 80);
  if (v35)
  {
    id v36 = *(id *)(v8 + 16);
    id v37 = v35;
    swift_bridgeObjectRetain();
    id v38 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_addObserver_forKeyPath_options_context_, v37, v38, 0, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t (*sub_1DA7F3718(uint64_t a1))(unsigned __int8 *a1)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  char v5 = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  *(unsigned char *)(a1 + 8) = v5 & 1;
  return sub_1DA7F3798;
}

uint64_t sub_1DA7F3798(unsigned __int8 *a1)
{
  int v1 = a1[8];
  uint64_t v2 = *(void *)(*(void *)a1 + 88);
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1DA7F3928(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));

  return swift_release();
}

uint64_t (*sub_1DA7F3800(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  uint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  uint64_t v5 = sub_1DA7AEB3C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  *a1 = v5;
  return sub_1DA7F387C;
}

uint64_t sub_1DA7F387C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(a1[1] + 104);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock(v4);
    sub_1DA7F3DE8(v2);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(v4);
    sub_1DA7F3DE8(v2);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

void sub_1DA7F3928(int a1)
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v1 + 88) + 16));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 57) == 2 && ((sub_1DA7AE76C() ^ a1) & 1) != 0)
  {
    char v11 = a1 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B48);
    swift_dynamicCast();
    if (v10)
    {
      sub_1DA7A1930(&v9, &v12);
      uint64_t v3 = *(void **)(v1 + 16);
      __swift_project_boxed_opaque_existential_0(&v12, v13);
      id v4 = v3;
      uint64_t v5 = sub_1DA98CE38();
      swift_bridgeObjectRetain();
      uint64_t v6 = (void *)sub_1DA98C008();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    }
    else
    {
      sub_1DA7A6D20((uint64_t)&v9);
      id v7 = *(id *)(v1 + 16);
      swift_bridgeObjectRetain();
      uint64_t v8 = (void *)sub_1DA98C008();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_removeObjectForKey_, v8);
    }
  }
}

void sub_1DA7F3AB0(uint64_t a1)
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v1 + 104) + 16));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 72) == 1 && sub_1DA7AE8A4() != a1)
  {
    uint64_t v11 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B48);
    swift_dynamicCast();
    if (v10)
    {
      sub_1DA7A1930(&v9, &v12);
      uint64_t v3 = *(void **)(v1 + 16);
      __swift_project_boxed_opaque_existential_0(&v12, v13);
      id v4 = v3;
      uint64_t v5 = sub_1DA98CE38();
      swift_bridgeObjectRetain();
      uint64_t v6 = (void *)sub_1DA98C008();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    }
    else
    {
      sub_1DA7A6D20((uint64_t)&v9);
      id v7 = *(id *)(v1 + 16);
      swift_bridgeObjectRetain();
      uint64_t v8 = (void *)sub_1DA98C008();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_removeObjectForKey_, v8);
    }
  }
}

void sub_1DA7F3C34(uint64_t a1, char a2)
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v2 + 112) + 16));
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 81) == 1)
  {
    double v5 = COERCE_DOUBLE(sub_1DA7AE9E0());
    if (a2)
    {
      if (v6) {
        return;
      }
      goto LABEL_7;
    }
    if ((v6 & 1) != 0 || *(double *)&a1 != v5)
    {
LABEL_7:
      uint64_t v15 = a1;
      char v16 = a2 & 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5AB70);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B48);
      swift_dynamicCast();
      if (v14)
      {
        sub_1DA7A1930(&v13, &v17);
        id v7 = *(void **)(v2 + 16);
        __swift_project_boxed_opaque_existential_0(&v17, v18);
        id v8 = v7;
        uint64_t v9 = sub_1DA98CE38();
        swift_bridgeObjectRetain();
        uint64_t v10 = (void *)sub_1DA98C008();
        swift_bridgeObjectRelease();
        objc_msgSend(v8, sel_setObject_forKey_, v9, v10);

        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
      }
      else
      {
        sub_1DA7A6D20((uint64_t)&v13);
        id v11 = *(id *)(v2 + 16);
        swift_bridgeObjectRetain();
        long long v12 = (void *)sub_1DA98C008();
        swift_bridgeObjectRelease();
        objc_msgSend(v11, sel_removeObjectForKey_, v12);
      }
    }
  }
}

void sub_1DA7F3DE8(uint64_t a1)
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v1 + 104) + 16));
  swift_beginAccess();
  if (!*(void *)(v1 + 64))
  {
    uint64_t v3 = sub_1DA7AEB3C();
    char v4 = sub_1DA7F7844(a1, v3);
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
      uint64_t v13 = a1;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E58F8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B48);
      swift_dynamicCast();
      if (v12)
      {
        sub_1DA7A1930(&v11, &v14);
        double v5 = *(void **)(v1 + 16);
        __swift_project_boxed_opaque_existential_0(&v14, v15);
        id v6 = v5;
        uint64_t v7 = sub_1DA98CE38();
        swift_bridgeObjectRetain();
        id v8 = (void *)sub_1DA98C008();
        swift_bridgeObjectRelease();
        objc_msgSend(v6, sel_setObject_forKey_, v7, v8);

        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
      }
      else
      {
        sub_1DA7A6D20((uint64_t)&v11);
        id v9 = *(id *)(v1 + 16);
        swift_bridgeObjectRetain();
        uint64_t v10 = (void *)sub_1DA98C008();
        swift_bridgeObjectRelease();
        objc_msgSend(v9, sel_removeObjectForKey_, v10);
      }
    }
  }
}

void *sub_1DA7F3F94()
{
  type metadata accessor for Preferences();
  swift_allocObject();
  uint64_t result = sub_1DA7F633C();
  off_1EBE66018 = result;
  return result;
}

uint64_t static Preferences.shared.getter()
{
  if (qword_1EBE66028 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1DA7F402C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4098(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F4110()
{
  return swift_retain();
}

uint64_t sub_1DA7F411C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4188(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 24) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F4200()
{
  return swift_retain();
}

uint64_t sub_1DA7F420C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4278(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 32) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F42F0()
{
  return swift_retain();
}

uint64_t sub_1DA7F42FC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4368(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 40) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t (*sub_1DA7F43E0(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void v3[4] = *(void *)(v1 + 40);
  swift_retain();
  v3[5] = sub_1DA7F3718((uint64_t)v3);
  return sub_1DA7F444C;
}

uint64_t sub_1DA7F4450()
{
  return swift_retain();
}

uint64_t sub_1DA7F445C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F44C8(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 48) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t (*sub_1DA7F4540(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void v3[4] = *(void *)(v1 + 48);
  swift_retain();
  v3[5] = sub_1DA7F3718((uint64_t)v3);
  return sub_1DA7F444C;
}

uint64_t sub_1DA7F45AC()
{
  return swift_retain();
}

uint64_t sub_1DA7F45B8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4624(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 56) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t (*sub_1DA7F469C(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void v3[4] = *(void *)(v1 + 56);
  swift_retain();
  v3[5] = sub_1DA7F3718((uint64_t)v3);
  return sub_1DA7F444C;
}

uint64_t sub_1DA7F4708()
{
  return swift_retain();
}

uint64_t sub_1DA7F4714()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 104);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = sub_1DA7AE8A4();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1DA7F4780(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 64) + 104);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3AB0(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F47F8()
{
  return swift_retain();
}

uint64_t sub_1DA7F4804()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 104);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = sub_1DA7AE8A4();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1DA7F4870(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 72) + 104);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3AB0(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F48E8()
{
  return swift_retain();
}

uint64_t sub_1DA7F48F4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 80) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4960(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 80) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F49D8()
{
  return swift_retain();
}

uint64_t sub_1DA7F49E4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4A50(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 88) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F4AC8()
{
  return swift_retain();
}

uint64_t sub_1DA7F4AD4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 96) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4B40(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 96) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F4BB8()
{
  return swift_retain();
}

uint64_t sub_1DA7F4BC4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 104) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4C30(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 104) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F4CA8()
{
  return swift_retain();
}

uint64_t sub_1DA7F4CB4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 112) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4D20(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 112) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F4D98()
{
  return swift_retain();
}

uint64_t sub_1DA7F4DA4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 120) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4E10(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 120) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F4E88()
{
  return swift_retain();
}

uint64_t sub_1DA7F4E94()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 128) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4F00(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 128) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F4F78()
{
  return swift_retain();
}

uint64_t sub_1DA7F4F84()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 136) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F4FF0(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 136) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5068()
{
  return swift_retain();
}

uint64_t sub_1DA7F5074()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 144) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F50E0(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 144) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5158()
{
  return swift_retain();
}

uint64_t sub_1DA7F5164()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 152) + 112);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = sub_1DA7AE9E0();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1DA7F51D8(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(*(void *)(v2 + 152) + 112);
  id v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1DA7F3C34(a1, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5260()
{
  return swift_retain();
}

uint64_t sub_1DA7F526C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 160) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F52D8(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 160) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5350()
{
  return swift_retain();
}

uint64_t sub_1DA7F535C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 168) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F53C8(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 168) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5440()
{
  return swift_retain();
}

uint64_t sub_1DA7F544C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 176) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F54B8(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 176) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5530()
{
  return swift_retain();
}

uint64_t sub_1DA7F553C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 184) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F55A8(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 184) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5620()
{
  return swift_retain();
}

uint64_t sub_1DA7F562C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 192) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F5698(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 192) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5710()
{
  return swift_retain();
}

uint64_t sub_1DA7F571C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 200) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F5788(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 200) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5800()
{
  return swift_retain();
}

uint64_t sub_1DA7F580C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 208) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F5878(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 208) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F58F0()
{
  return swift_retain();
}

uint64_t sub_1DA7F58FC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 216) + 112);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = sub_1DA7AE9E0();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1DA7F5970(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(*(void *)(v2 + 216) + 112);
  id v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1DA7F3C34(a1, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F59F8()
{
  return swift_retain();
}

uint64_t sub_1DA7F5A04()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 224) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F5A70(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 224) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5AE8()
{
  return swift_retain();
}

uint64_t sub_1DA7F5AF4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 232) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F5B60(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 232) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5BD8()
{
  return swift_retain();
}

uint64_t sub_1DA7F5BE4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 240) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F5C50(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 240) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5CC8()
{
  return swift_retain();
}

uint64_t sub_1DA7F5CD4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 248) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F5D40(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 248) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5DB8()
{
  return swift_retain();
}

uint64_t sub_1DA7F5DC4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 256) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F5E30(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 256) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5EA8()
{
  return swift_retain();
}

uint64_t sub_1DA7F5EB4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 264) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F5F20(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 264) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F5F98()
{
  return swift_retain();
}

uint64_t sub_1DA7F5FA4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 272) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F6010(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 272) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F6088()
{
  return swift_retain();
}

uint64_t sub_1DA7F6094()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 280) + 88);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1DA7AE76C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DA7F6100(int a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 280) + 88);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3928(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_1DA7F6178()
{
  return swift_retain();
}

uint64_t sub_1DA7F6184()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 288) + 104);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = sub_1DA7AEB3C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1DA7F61F0(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 288) + 104);
  char v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7F3DE8(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t (*sub_1DA7F6270(uint64_t **a1))()
{
  uint64_t v3 = (uint64_t *)malloc(0x30uLL);
  *a1 = v3;
  void v3[4] = *(void *)(v1 + 288);
  swift_retain();
  v3[5] = (uint64_t)sub_1DA7F3800(v3);
  return sub_1DA7F444C;
}

void sub_1DA7F62DC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_release();

  free(v1);
}

uint64_t sub_1DA7F6330()
{
  return swift_retain();
}

void *sub_1DA7F633C()
{
  uint64_t v1 = v0;
  char has_internal_ui = os_variant_has_internal_ui();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66158);
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000026, 0x80000001DA99E270, 1, 2, has_internal_ui);
  v1[2] = v3;
  char v4 = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000024, 0x80000001DA99E2A0, 1, 2, v4);
  v1[3] = v5;
  char v6 = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000015, 0x80000001DA99E2D0, 0xD00000000000001DLL, 0x80000001DA99E2F0, 0, 2, v6);
  v1[4] = v7;
  char v8 = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000014, 0x80000001DA99E310, 1, 2, v8);
  v1[5] = v9;
  char v10 = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000024, 0x80000001DA99E330, 0, 2, v10);
  v1[6] = v11;
  char v12 = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD00000000000001DLL, 0x80000001DA99E360, 1, 2, v12);
  v1[7] = v13;
  uint64_t v14 = os_variant_has_internal_ui();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBE66168);
  swift_allocObject();
  sub_1DA7F2FE0(0xD000000000000011, 0x80000001DA99E250, 0xD00000000000001DLL, 0x80000001DA99E380, 5, 0, 1, v14);
  v1[8] = v15;
  uint64_t v16 = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F2FE0(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000023, 0x80000001DA99E3A0, 120, 0, 1, v16);
  v1[9] = v17;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000016, 0x80000001DA99E3D0, 0, 2, v16);
  v1[10] = v18;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000015, 0x80000001DA99E3F0, 0, 2, v16);
  v1[11] = v19;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000015, 0x80000001DA99E410, 0, 2, v16);
  v1[12] = v20;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000014, 0x80000001DA99E430, 0, 2, v16);
  v1[13] = v21;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000011, 0x80000001DA99E450, 0, 2, v16);
  v1[14] = v22;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000018, 0x80000001DA99E470, 0, 2, v16);
  v1[15] = v23;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000011, 0x80000001DA99E490, 0, 2, v16);
  v1[16] = v24;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000015, 0x80000001DA99E4B0, 0, 2, v16);
  v1[17] = v25;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000010, 0x80000001DA99E4D0, 0, 2, v16);
  v1[18] = v26;
  LOBYTE(v16) = os_variant_has_internal_ui();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66160);
  swift_allocObject();
  sub_1DA7F2C58(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000012, 0x80000001DA99E4F0, 0, 1, 0, 256, v16);
  v1[19] = v27;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000013, 0x80000001DA99E510, 0, 2, v16);
  v1[20] = v28;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000010, 0x80000001DA99E530, 0, 2, v16);
  v1[21] = v29;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000014, 0x80000001DA99E550, 0, 2, v16);
  v1[22] = v30;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000019, 0x80000001DA99E570, 0, 2, v16);
  v1[23] = v31;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0x61745379616C6544, 0xEC00000070757472, 0, 2, v16);
  v1[24] = v32;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000014, 0x80000001DA99E590, 0, 2, v16);
  v1[25] = v33;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD00000000000001BLL, 0x80000001DA99E5B0, 0, 2, v16);
  v1[26] = v34;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F2C58(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000012, 0x80000001DA99E5D0, 0, 1, 0, 256, v16);
  v1[27] = v35;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000013, 0x80000001DA99E5F0, 0, 2, v16);
  v1[28] = v36;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000011, 0x80000001DA99E610, 0, 2, v16);
  v1[29] = v37;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0x72614D6775626544, 0xEC000000736E6967, 0, 2, v16);
  v1[30] = v38;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0x6563536775626544, 0xEE006B73614D656ELL, 0, 2, v16);
  v1[31] = v39;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD00000000000001ALL, 0x80000001DA99E630, 0, 2, v16);
  v1[32] = v40;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000028, 0x80000001DA99E650, 0, 1, v16);
  v1[33] = v41;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000020, 0x80000001DA99E680, 0, 1, v16);
  v1[34] = v42;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1DA7F3378(0xD000000000000011, 0x80000001DA99E250, 0xD000000000000022, 0x80000001DA99E6B0, 0, 0, v16);
  v1[35] = v43;
  uint64_t v44 = MEMORY[0x1E4FBC860];
  unint64_t v45 = sub_1DA79C48C(MEMORY[0x1E4FBC860]);
  unint64_t v46 = sub_1DA79C48C(v44);
  swift_bridgeObjectRetain();
  uint64_t v47 = os_variant_has_internal_ui();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66150);
  swift_allocObject();
  sub_1DA7FA500(0xD000000000000011, 0x80000001DA99E250, 0xD00000000000001CLL, 0x80000001DA99E6E0, v45, v46, v47);
  uint64_t v49 = v48;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v1[36] = v49;
  return v1;
}

unint64_t sub_1DA7F70A4()
{
  uint64_t v1 = sub_1DA98CFA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  char v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Preferences();
  unint64_t v19 = v0;
  swift_retain();
  sub_1DA98CF88();
  sub_1DA98CF98();
  uint64_t v5 = sub_1DA98CB48();
  swift_release();
  unint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  unint64_t v19 = 0xD000000000000010;
  unint64_t v20 = 0x80000001DA99DD90;
  int64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v16 = v2;
    uint64_t v17 = v1;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1DA7F7A64(0, v6, 0);
    uint64_t v7 = v18;
    char v8 = (uint64_t *)(v5 + 40);
    do
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      uint64_t v18 = v7;
      unint64_t v12 = *(void *)(v7 + 16);
      unint64_t v11 = *(void *)(v7 + 24);
      swift_bridgeObjectRetain();
      if (v12 >= v11 >> 1)
      {
        sub_1DA7F7A64(v11 > 1, v12 + 1, 1);
        uint64_t v7 = v18;
      }
      v8 += 2;
      *(void *)(v7 + 16) = v12 + 1;
      uint64_t v13 = v7 + 16 * v12;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v2 = v16;
    uint64_t v1 = v17;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
  sub_1DA7A0410((unint64_t *)&qword_1EBE62A48, &qword_1EBE62A40);
  sub_1DA98BFC8();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v14 = v19;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v14;
}

uint64_t type metadata accessor for Preferences()
{
  return self;
}

uint64_t Preferences.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Preferences.__deallocating_deinit()
{
  Preferences.deinit();

  return swift_deallocClassInstance();
}

unint64_t sub_1DA7F7520()
{
  return sub_1DA7F70A4();
}

unint64_t sub_1DA7F7544(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  unint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  unint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    double v15 = *(double *)(*(void *)(v3 + 56) + 8 * v11);
    uint64_t result = sub_1DA7FDEE4(*(unsigned char *)(*(void *)(v3 + 48) + v11));
    if ((v16 & 1) == 0 || *(double *)(*(void *)(a2 + 56) + 8 * result) != v15) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_1DA7F76C4(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  unint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  unint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    uint64_t v15 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    uint64_t result = sub_1DA7FDEE4(*(unsigned char *)(*(void *)(v3 + 48) + v11));
    if ((v16 & 1) == 0 || *(void *)(*(void *)(a2 + 56) + 8 * result) != v15) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1DA7F7844(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v27) {
            return 1;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
    uint64_t v14 = 16 * v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1DA7FDF54(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_1DA98CE58();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1DA7F7A64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F7CEC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1DA7F7A84(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F7E58(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1DA7F7AA4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F86A0(a1, a2, a3, (void *)*v3, &qword_1EA8E5C90, type metadata accessor for MetadataInlineView.IterableFallback);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1DA7F7AE0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F82DC(a1, a2, a3, (void *)*v3, &qword_1EBE5A780, &qword_1EBE5A0E8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1DA7F7B10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F86A0(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1EBE58F80, MEMORY[0x1E4F276F0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1DA7F7B4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F7FF0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1DA7F7B6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F8140(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1DA7F7B8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F82DC(a1, a2, a3, (void *)*v3, &qword_1EBE5A790, &qword_1EBE5A190);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1DA7F7BBC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F851C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1DA7F7BDC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F86A0(a1, a2, a3, (void *)*v3, &qword_1EBE58F90, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1DA7F7C18(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F86A0(a1, a2, a3, (void *)*v3, &qword_1EA8E5C88, MEMORY[0x1E4F96138]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1DA7F7C54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F86A0(a1, a2, a3, (void *)*v3, &qword_1EA8E5C80, MEMORY[0x1E4F96108]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1DA7F7C90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F86A0(a1, a2, a3, (void *)*v3, &qword_1EA8E5C78, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1DA7F7CCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DA7F88E8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1DA7F7CEC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BA0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7F7E58(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58FA8);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 4;
  int64_t v13 = a4 + 4;
  size_t v14 = 5 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E90);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7F7FF0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE65CB8);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  int64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7F8140(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A7A0);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 4;
  int64_t v13 = a4 + 4;
  size_t v14 = 6 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A368);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7F82DC(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  _OWORD v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  char v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7F851C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A7A8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7F86A0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  _OWORD v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  char v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7F88E8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58F98);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E48);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DA98CC18();
  __break(1u);
  return result;
}

uint64_t sub_1DA7F8A8C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1DA98CB58();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1DA7F8AF4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F402C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8B24(unsigned __int8 *a1)
{
  return sub_1DA7F4098(*a1);
}

uint64_t sub_1DA7F8B4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F411C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8B7C(unsigned __int8 *a1)
{
  return sub_1DA7F4188(*a1);
}

uint64_t sub_1DA7F8BA4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F420C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8BD4(unsigned __int8 *a1)
{
  return sub_1DA7F4278(*a1);
}

uint64_t sub_1DA7F8BFC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F42FC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8C2C(unsigned __int8 *a1)
{
  return sub_1DA7F4368(*a1);
}

uint64_t sub_1DA7F8C54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F445C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8C84(unsigned __int8 *a1)
{
  return sub_1DA7F44C8(*a1);
}

uint64_t sub_1DA7F8CAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F45B8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8CDC(unsigned __int8 *a1)
{
  return sub_1DA7F4624(*a1);
}

uint64_t sub_1DA7F8D04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA7F4714();
  *a1 = result;
  return result;
}

uint64_t sub_1DA7F8D30(uint64_t *a1)
{
  return sub_1DA7F4780(*a1);
}

uint64_t sub_1DA7F8D58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA7F4804();
  *a1 = result;
  return result;
}

uint64_t sub_1DA7F8D84(uint64_t *a1)
{
  return sub_1DA7F4870(*a1);
}

uint64_t sub_1DA7F8DAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F48F4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8DDC(unsigned __int8 *a1)
{
  return sub_1DA7F4960(*a1);
}

uint64_t sub_1DA7F8E04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F49E4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8E34(unsigned __int8 *a1)
{
  return sub_1DA7F4A50(*a1);
}

uint64_t sub_1DA7F8E5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F4AD4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8E8C(unsigned __int8 *a1)
{
  return sub_1DA7F4B40(*a1);
}

uint64_t sub_1DA7F8EB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F4BC4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8EE4(unsigned __int8 *a1)
{
  return sub_1DA7F4C30(*a1);
}

uint64_t sub_1DA7F8F0C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F4CB4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8F3C(unsigned __int8 *a1)
{
  return sub_1DA7F4D20(*a1);
}

uint64_t sub_1DA7F8F64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F4DA4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8F94(unsigned __int8 *a1)
{
  return sub_1DA7F4E10(*a1);
}

uint64_t sub_1DA7F8FBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F4E94();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F8FEC(unsigned __int8 *a1)
{
  return sub_1DA7F4F00(*a1);
}

uint64_t sub_1DA7F9014@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F4F84();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F9044(unsigned __int8 *a1)
{
  return sub_1DA7F4FF0(*a1);
}

uint64_t sub_1DA7F906C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F5074();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F909C(unsigned __int8 *a1)
{
  return sub_1DA7F50E0(*a1);
}

uint64_t sub_1DA7F90C4@<X0>(uint64_t a1@<X8>)
{
  return keypath_get_35Tm(sub_1DA7F5164, a1);
}

uint64_t sub_1DA7F90DC(uint64_t a1)
{
  return sub_1DA7F51D8(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1DA7F9110@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F526C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F9140(unsigned __int8 *a1)
{
  return sub_1DA7F52D8(*a1);
}

uint64_t sub_1DA7F9168@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F535C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F9198(unsigned __int8 *a1)
{
  return sub_1DA7F53C8(*a1);
}

uint64_t sub_1DA7F91C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F544C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F91F0(unsigned __int8 *a1)
{
  return sub_1DA7F54B8(*a1);
}

uint64_t sub_1DA7F9218@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F553C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F9248(unsigned __int8 *a1)
{
  return sub_1DA7F55A8(*a1);
}

uint64_t sub_1DA7F9270@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F562C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F92A0(unsigned __int8 *a1)
{
  return sub_1DA7F5698(*a1);
}

uint64_t sub_1DA7F92C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F571C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F92F8(unsigned __int8 *a1)
{
  return sub_1DA7F5788(*a1);
}

uint64_t sub_1DA7F9320@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F580C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F9350(unsigned __int8 *a1)
{
  return sub_1DA7F5878(*a1);
}

uint64_t sub_1DA7F9378@<X0>(uint64_t a1@<X8>)
{
  return keypath_get_35Tm(sub_1DA7F58FC, a1);
}

uint64_t keypath_get_35Tm@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = a1();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1DA7F93C8(uint64_t a1)
{
  return sub_1DA7F5970(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1DA7F93FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F5A04();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F942C(unsigned __int8 *a1)
{
  return sub_1DA7F5A70(*a1);
}

uint64_t sub_1DA7F9454@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F5AF4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F9484(unsigned __int8 *a1)
{
  return sub_1DA7F5B60(*a1);
}

uint64_t sub_1DA7F94AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F5BE4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F94DC(unsigned __int8 *a1)
{
  return sub_1DA7F5C50(*a1);
}

uint64_t sub_1DA7F9504@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F5CD4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F9534(unsigned __int8 *a1)
{
  return sub_1DA7F5D40(*a1);
}

uint64_t sub_1DA7F955C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F5DC4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F958C(unsigned __int8 *a1)
{
  return sub_1DA7F5E30(*a1);
}

uint64_t sub_1DA7F95B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F5EB4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F95E4(unsigned __int8 *a1)
{
  return sub_1DA7F5F20(*a1);
}

uint64_t sub_1DA7F960C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F5FA4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F963C(unsigned __int8 *a1)
{
  return sub_1DA7F6010(*a1);
}

uint64_t sub_1DA7F9664@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA7F6094();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA7F9694(unsigned __int8 *a1)
{
  return sub_1DA7F6100(*a1);
}

uint64_t sub_1DA7F96BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA7F6184();
  *a1 = result;
  return result;
}

uint64_t sub_1DA7F96E8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1DA7F61F0(v0);
}

uint64_t method lookup function for Preferences(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Preferences);
}

uint64_t dispatch thunk of Preferences.userWantsWidgetDataWhenPasscodeLocked.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of Preferences.$userWantsWidgetDataWhenPasscodeLocked.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of Preferences.userWantsLiveActivityDataWhenPasscodeLocked.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of Preferences.$userWantsLiveActivityDataWhenPasscodeLocked.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of Preferences.widgetKitDeveloperModeEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of Preferences.$widgetKitDeveloperModeEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of Preferences.remoteWidgetsEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of Preferences.remoteWidgetsEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of Preferences.remoteWidgetsEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of Preferences.$remoteWidgetsEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of Preferences.hasMigratedRemoteWidgetsEnabledState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of Preferences.hasMigratedRemoteWidgetsEnabledState.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of Preferences.hasMigratedRemoteWidgetsEnabledState.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of Preferences.$hasMigratedRemoteWidgetsEnabledState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of Preferences.effectiveRemoteWidgetsEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of Preferences.effectiveRemoteWidgetsEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of Preferences.effectiveRemoteWidgetsEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of Preferences.$effectiveRemoteWidgetsEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of Preferences.taskServiceMaximumPoolSize.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of Preferences.$taskServiceMaximumPoolSize.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of Preferences.taskServiceWatchdogSecondsTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of Preferences.$taskServiceWatchdogSecondsTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of Preferences.debugIsSnapshotting.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of Preferences.$debugIsSnapshotting.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

uint64_t dispatch thunk of Preferences.debugAnimationsPaused.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 648))();
}

uint64_t dispatch thunk of Preferences.$debugAnimationsPaused.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of Preferences.debugPlaceholderViews.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of Preferences.$debugPlaceholderViews.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of Preferences.debugAlwaysOnDisplay.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of Preferences.$debugAlwaysOnDisplay.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t dispatch thunk of Preferences.debugLabels.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 744))();
}

uint64_t dispatch thunk of Preferences.$debugLabels.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of Preferences.debugLabelsVerbose.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t dispatch thunk of Preferences.$debugLabelsVerbose.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 800))();
}

uint64_t dispatch thunk of Preferences.disableAnimations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 808))();
}

uint64_t dispatch thunk of Preferences.$disableAnimations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 832))();
}

uint64_t dispatch thunk of Preferences.disableLiveActivities.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 840))();
}

uint64_t dispatch thunk of Preferences.$disableLiveActivities.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 864))();
}

uint64_t dispatch thunk of Preferences.disableSnapshots.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 872))();
}

uint64_t dispatch thunk of Preferences.$disableSnapshots.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 896))();
}

uint64_t dispatch thunk of Preferences.snapshotExpirationOverride.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 904))();
}

uint64_t dispatch thunk of Preferences.$snapshotExpirationOverride.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 928))();
}

uint64_t dispatch thunk of Preferences.disablePlaceholders.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 936))();
}

uint64_t dispatch thunk of Preferences.$disablePlaceholders.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 960))();
}

uint64_t dispatch thunk of Preferences.disableTimelines.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 968))();
}

uint64_t dispatch thunk of Preferences.$disableTimelines.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 992))();
}

uint64_t dispatch thunk of Preferences.disableArchiveReaper.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1000))();
}

uint64_t dispatch thunk of Preferences.$disableArchiveReaper.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1024))();
}

uint64_t dispatch thunk of Preferences.enableCAMLLayerSnapshots.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1032))();
}

uint64_t dispatch thunk of Preferences.$enableCAMLLayerSnapshots.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1056))();
}

uint64_t dispatch thunk of Preferences.delayStartup.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1064))();
}

uint64_t dispatch thunk of Preferences.$delayStartup.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1088))();
}

uint64_t dispatch thunk of Preferences.rendererDelayStartup.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1096))();
}

uint64_t dispatch thunk of Preferences.$rendererDelayStartup.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1120))();
}

uint64_t dispatch thunk of Preferences.simulateSystemDataMigration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1128))();
}

uint64_t dispatch thunk of Preferences.$simulateSystemDataMigration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1152))();
}

uint64_t dispatch thunk of Preferences.overrideDate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1160))();
}

uint64_t dispatch thunk of Preferences.$overrideDate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1184))();
}

uint64_t dispatch thunk of Preferences.showInternalWidgets.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1192))();
}

uint64_t dispatch thunk of Preferences.$showInternalWidgets.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1216))();
}

uint64_t dispatch thunk of Preferences.debugViewIdentity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1224))();
}

uint64_t dispatch thunk of Preferences.$debugViewIdentity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1248))();
}

uint64_t dispatch thunk of Preferences.debugMargins.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1256))();
}

uint64_t dispatch thunk of Preferences.$debugMargins.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1280))();
}

uint64_t dispatch thunk of Preferences.debugSceneMask.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1288))();
}

uint64_t dispatch thunk of Preferences.$debugSceneMask.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1312))();
}

uint64_t dispatch thunk of Preferences.debugConfiguredDescriptors.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1320))();
}

uint64_t dispatch thunk of Preferences.$debugConfiguredDescriptors.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1344))();
}

uint64_t dispatch thunk of Preferences.widgetDiagnosticTriggersLogCoreAnalytics.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1352))();
}

uint64_t dispatch thunk of Preferences.$widgetDiagnosticTriggersLogCoreAnalytics.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1376))();
}

uint64_t dispatch thunk of Preferences.widgetDiagnosticTriggersLogFault.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1384))();
}

uint64_t dispatch thunk of Preferences.$widgetDiagnosticTriggersLogFault.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1408))();
}

uint64_t dispatch thunk of Preferences.widgetDiagnosticTriggersTapToRadar.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1416))();
}

uint64_t dispatch thunk of Preferences.$widgetDiagnosticTriggersTapToRadar.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1440))();
}

uint64_t dispatch thunk of Preferences.widgetDiagnosticsBootSession.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1448))();
}

uint64_t dispatch thunk of Preferences.widgetDiagnosticsBootSession.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1456))();
}

uint64_t dispatch thunk of Preferences.widgetDiagnosticsBootSession.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1464))();
}

uint64_t dispatch thunk of Preferences.$widgetDiagnosticsBootSession.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1472))();
}

uint64_t dispatch thunk of Preferences.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1488))();
}

void sub_1DA7FA500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  *(void *)(v8 + 64) = 0;
  *(void *)(v8 + 96) = 0;
  type metadata accessor for UnfairLock();
  *(void *)(v8 + 24) = 0;
  *(void *)(v8 + 32) = 0;
  uint64_t v16 = swift_allocObject();
  size_t v17 = (_DWORD *)swift_slowAlloc();
  *size_t v17 = 0;
  *(void *)(v16 + 16) = v17;
  *(void *)(v8 + 104) = v16;
  *(void *)(v8 + 112) = 0;
  if (!a2) {
    goto LABEL_11;
  }
  uint64_t v40 = a3;
  id v18 = objc_msgSend(self, sel_mainBundle);
  id v19 = objc_msgSend(v18, sel_bundleIdentifier);

  if (!v19) {
    goto LABEL_8;
  }
  unsigned int v39 = a7;
  a7 = a6;
  a6 = a4;
  uint64_t v20 = sub_1DA98C038();
  uint64_t v22 = v21;

  if (v20 == a1 && v22 == a2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    a4 = a6;
    a6 = a7;
    LOBYTE(a7) = v39;
    a3 = v40;
    goto LABEL_11;
  }
  char v24 = sub_1DA98CE58();
  swift_bridgeObjectRelease();
  a4 = a6;
  a6 = a7;
  a7 = v39;
  a3 = v40;
  if ((v24 & 1) == 0)
  {
LABEL_8:
    id v25 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
    swift_bridgeObjectRetain();
    char v26 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    id v27 = objc_msgSend(v25, sel_initWithSuiteName_, v26);

    a3 = v40;
    if (v27) {
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  id v27 = objc_msgSend(self, sel_standardUserDefaults);
LABEL_12:
  *(void *)(v8 + 16) = v27;
  *(void *)(v8 + 24) = a1;
  *(void *)(v8 + 32) = a2;
  swift_bridgeObjectRelease();
  *(void *)(v8 + 56) = a5;
  *(void *)(v8 + 40) = a3;
  *(void *)(v8 + 48) = a4;
  *(unsigned char *)(v8 + 72) = a7 & 1;
  if (a6)
  {
    if (a7)
    {
      swift_beginAccess();
      *(void *)(v8 + 56) = a6;
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_beginAccess();
      *(void *)(v8 + 64) = a5;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE65F18);
  swift_allocObject();
  uint64_t v28 = sub_1DA98A008();
  *(void *)(v8 + 80) = v28;
  uint64_t v42 = v28;
  sub_1DA7A0410(&qword_1EBE65F10, &qword_1EBE65F18);
  uint64_t v29 = sub_1DA98A0F8();
  uint64_t v30 = *(void **)(v8 + 96);
  *(void *)(v8 + 88) = v29;
  *(void *)(v8 + 96) = 0;

  uint64_t v31 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE660B0);
  id v32 = objc_allocWithZone(v31);
  swift_weakInit();
  swift_weakAssign();
  v41.receiver = v32;
  v41.super_class = v31;
  id v33 = objc_msgSendSuper2(&v41, sel_init);
  uint64_t v34 = *(void **)(v8 + 96);
  *(void *)(v8 + 96) = v33;

  uint64_t v35 = *(void **)(v8 + 96);
  if (v35)
  {
    id v36 = *(id *)(v8 + 16);
    id v37 = v35;
    swift_bridgeObjectRetain();
    uint64_t v38 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_addObserver_forKeyPath_options_context_, v37, v38, 0, 0);
  }
  else
  {
    __break(1u);
  }
}

void CHSConfiguredWidgetDescriptor.powerlogViewIdentity.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_container);
  if (v4)
  {
    uint64_t v5 = v4;
    if (objc_msgSend(v1, sel_isSuggestion))
    {
      id v6 = objc_msgSend(v5, sel_uniqueIdentifier);
      uint64_t v7 = sub_1DA98C038();
      uint64_t v9 = v8;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v9 = 0;
    }
    id v16 = objc_msgSend(v2, sel_widget);
    id v17 = objc_msgSend(v2, sel_uniqueIdentifier);
    uint64_t v18 = sub_1DA98C038();
    uint64_t v20 = v19;

    unsigned int v21 = objc_msgSend(v5, sel_isStack);
    id v22 = objc_msgSend(v2, sel_container);
    if (v22)
    {
      uint64_t v23 = v22;
      if (objc_msgSend(v22, sel_location) == (id)1)
      {
        uint64_t v24 = (uint64_t)objc_msgSend(v23, sel_page);

        char v15 = 0;
      }
      else
      {
        objc_msgSend(v23, sel_location);

        uint64_t v24 = 0;
        char v15 = 0;
        switch(v21)
        {
          case 0u:
            goto LABEL_11;
          case 1u:
            break;
          case 2u:
            uint64_t v24 = 1;
            goto LABEL_12;
          case 3u:
            char v15 = 1;
            uint64_t v24 = 2;
            break;
          case 4u:
            char v15 = 1;
            uint64_t v24 = 3;
            break;
          case 5u:
            char v15 = 1;
            uint64_t v24 = 4;
            break;
          case 6u:
            char v15 = 1;
            uint64_t v24 = 5;
            break;
          case 7u:
            char v15 = 1;
            uint64_t v24 = 6;
            break;
          case 8u:
            char v15 = 1;
            uint64_t v24 = 7;
            break;
          default:
            uint64_t v24 = 0;
            char v15 = 1;
            break;
        }
      }
    }
    else
    {

LABEL_11:
      uint64_t v24 = 0;
LABEL_12:
      char v15 = 1;
    }
    *(void *)a1 = v16;
    *(void *)(a1 + 8) = v18;
    *(void *)(a1 + 16) = v20;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v9;
    *(unsigned char *)(a1 + 40) = v21;
    *(void *)(a1 + 48) = v24;
  }
  else
  {
    id v10 = objc_msgSend(v1, sel_widget);
    id v11 = objc_msgSend(v2, sel_uniqueIdentifier);
    uint64_t v12 = sub_1DA98C038();
    uint64_t v14 = v13;

    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 16) = v14;
    *(unsigned char *)(a1 + 40) = 0;
    char v15 = 1;
  }
  *(unsigned char *)(a1 + 56) = v15;
}

void CHSConfiguredWidgetDescriptor.powerlogUpdateIdentity.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_container);
  if (v4)
  {
    uint64_t v5 = v4;
    if (objc_msgSend(v1, sel_isSuggestion))
    {
      id v6 = objc_msgSend(v5, sel_uniqueIdentifier);
      uint64_t v7 = sub_1DA98C038();
      uint64_t v9 = v8;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v9 = 0;
    }
    id v16 = objc_msgSend(v2, sel_widget);
    id v17 = objc_msgSend(v2, sel_uniqueIdentifier);
    uint64_t v18 = sub_1DA98C038();
    uint64_t v20 = v19;

    id v21 = objc_msgSend(v2, sel_container);
    if (v21)
    {
      id v22 = v21;
      if (objc_msgSend(v21, sel_location) == (id)1)
      {
        uint64_t v23 = (uint64_t)objc_msgSend(v22, sel_page);

        char v15 = 0;
      }
      else
      {
        id v24 = objc_msgSend(v22, sel_location);

        uint64_t v23 = 0;
        char v15 = 0;
        switch((unint64_t)v24)
        {
          case 1uLL:
            break;
          case 2uLL:
            uint64_t v23 = 1;
            goto LABEL_11;
          case 3uLL:
            char v15 = 1;
            uint64_t v23 = 2;
            break;
          case 4uLL:
            char v15 = 1;
            uint64_t v23 = 3;
            break;
          case 5uLL:
            char v15 = 1;
            uint64_t v23 = 4;
            break;
          case 6uLL:
            char v15 = 1;
            uint64_t v23 = 5;
            break;
          case 7uLL:
            char v15 = 1;
            uint64_t v23 = 6;
            break;
          case 8uLL:
            char v15 = 1;
            uint64_t v23 = 7;
            break;
          default:
            goto LABEL_10;
        }
      }
    }
    else
    {

LABEL_10:
      uint64_t v23 = 0;
LABEL_11:
      char v15 = 1;
    }
    *(void *)a1 = v16;
    *(void *)(a1 + 8) = v18;
    *(void *)(a1 + 16) = v20;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v23;
  }
  else
  {
    id v10 = objc_msgSend(v1, sel_widget);
    id v11 = objc_msgSend(v2, sel_uniqueIdentifier);
    uint64_t v12 = sub_1DA98C038();
    uint64_t v14 = v13;

    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = v14;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    char v15 = 1;
  }
  *(unsigned char *)(a1 + 48) = v15;
}

uint64_t CHSConfiguredWidgetDescriptor.duetWidgetViewIdentity.getter@<X0>(uint64_t *a1@<X8>)
{
  id v3 = v1;
  uint64_t v4 = sub_1DA800D64(v3);
  uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  id v7 = objc_msgSend(v3, sel_uniqueIdentifier);
  sub_1DA98C038();

  sub_1DA7DF7A0();
  uint64_t v10 = sub_1DA98C8A8();
  uint64_t v11 = v8;
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  sub_1DA98C148();

  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  *a1 = v4;
  a1[1] = v6;
  a1[2] = (uint64_t)v3;
  a1[3] = v10;
  a1[4] = v11;
  return result;
}

void CHSControlConfigurationItem.powerlogViewIdentity(isStateBased:)(char a1@<W0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  uint64_t v6 = 0;
  char v7 = 0;
  switch((unint64_t)objc_msgSend(v3, sel_location))
  {
    case 1uLL:
      break;
    case 2uLL:
      uint64_t v6 = 1;
      goto LABEL_4;
    case 3uLL:
      char v7 = 1;
      uint64_t v6 = 2;
      break;
    case 4uLL:
      char v7 = 1;
      uint64_t v6 = 3;
      break;
    case 5uLL:
      char v7 = 1;
      uint64_t v6 = 4;
      break;
    case 6uLL:
      char v7 = 1;
      uint64_t v6 = 5;
      break;
    case 7uLL:
      char v7 = 1;
      uint64_t v6 = 6;
      break;
    case 8uLL:
      char v7 = 1;
      uint64_t v6 = 7;
      break;
    default:
      uint64_t v6 = 0;
LABEL_4:
      char v7 = 1;
      break;
  }
  id v8 = objc_msgSend(v3, sel_controlIdentity);
  id v9 = objc_msgSend(v3, sel_uniqueIdentifier);
  uint64_t v10 = sub_1DA98C038();
  uint64_t v12 = v11;

  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v6;
  *(unsigned char *)(a2 + 32) = v7;
  *(unsigned char *)(a2 + 33) = a1 & 1;
}

void CHSControlConfigurationItem.powerlogUpdateIdentity.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = 0;
  char v4 = 0;
  switch((unint64_t)objc_msgSend(v1, sel_location))
  {
    case 1uLL:
      break;
    case 2uLL:
      uint64_t v3 = 1;
      goto LABEL_4;
    case 3uLL:
      char v4 = 1;
      uint64_t v3 = 2;
      break;
    case 4uLL:
      char v4 = 1;
      uint64_t v3 = 3;
      break;
    case 5uLL:
      char v4 = 1;
      uint64_t v3 = 4;
      break;
    case 6uLL:
      char v4 = 1;
      uint64_t v3 = 5;
      break;
    case 7uLL:
      char v4 = 1;
      uint64_t v3 = 6;
      break;
    case 8uLL:
      char v4 = 1;
      uint64_t v3 = 7;
      break;
    default:
      uint64_t v3 = 0;
LABEL_4:
      char v4 = 1;
      break;
  }
  id v5 = objc_msgSend(v1, sel_controlIdentity);
  id v6 = objc_msgSend(v1, sel_uniqueIdentifier);
  uint64_t v7 = sub_1DA98C038();
  uint64_t v9 = v8;

  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
}

uint64_t RemoteActivityCacheURLProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t RemoteActivityCacheURLProvider.init()()
{
  return v0;
}

uint64_t sub_1DA7FB208(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE58F80);
  uint64_t v2 = *(void *)(sub_1DA989478() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DA990050;
  sub_1DA7FB2C4(a1, v4 + v3);
  return v4;
}

uint64_t sub_1DA7FB2C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59F60);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ActivityVariantKey(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  v25[0] = (uint64_t)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBE59E40);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ActivityKey(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = a2;
  sub_1DA9893F8();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EC8);
  sub_1DA7A1F58(a1 + *(int *)(v17 + 68), (uint64_t)v12, qword_1EBE59E40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_1DA7A1AE0((uint64_t)v12, qword_1EBE59E40);
  }
  sub_1DA7FB6EC((uint64_t)v12, (uint64_t)v16, type metadata accessor for ActivityKey);
  sub_1DA7A1F58(a1 + *(int *)(v17 + 72), (uint64_t)v6, &qword_1EBE59F60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1DA7FBADC((uint64_t)v16, type metadata accessor for ActivityKey);
    return sub_1DA7A1AE0((uint64_t)v6, &qword_1EBE59F60);
  }
  else
  {
    uint64_t v19 = v25[0];
    sub_1DA7FB6EC((uint64_t)v6, v25[0], type metadata accessor for ActivityVariantKey);
    uint64_t v20 = &v16[*(int *)(v13 + 24)];
    uint64_t v21 = *((void *)v20 + 1);
    uint64_t v28 = *(void *)v20;
    uint64_t v29 = v21;
    swift_bridgeObjectRetain();
    sub_1DA98C148();
    uint64_t v26 = sub_1DA98BC38();
    uint64_t v27 = v22;
    swift_bridgeObjectRetain();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    uint64_t v23 = v26;
    uint64_t v24 = v27;
    sub_1DA98B918();
    uint64_t v26 = v23;
    uint64_t v27 = v24;
    swift_bridgeObjectRetain();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA9893B8();
    swift_bridgeObjectRelease();
    sub_1DA9893D8();
    sub_1DA7FBADC(v19, type metadata accessor for ActivityVariantKey);
    return sub_1DA7FBADC((uint64_t)v16, type metadata accessor for ActivityKey);
  }
}

uint64_t sub_1DA7FB6EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t RemoteActivityCacheURLProvider.deinit()
{
  return v0;
}

uint64_t RemoteActivityCacheURLProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DA7FB770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA7FB2C4(a1, a2);
}

uint64_t sub_1DA7FB788(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = type metadata accessor for WidgetCacheKey();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = self;
    uint64_t v10 = *(void *)(v3 + 72);
    v19[1] = a1;
    swift_bridgeObjectRetain();
    do
    {
      sub_1DA7FBA78(v8, (uint64_t)v5);
      id v14 = objc_msgSend(v9, sel_defaultManager);
      uint64_t v15 = (void *)sub_1DA9893A8();
      id v20 = 0;
      id v16 = objc_msgSend(v14, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v15, 0, 0, &v20);

      id v17 = v20;
      if (v16)
      {
        sub_1DA989478();
        uint64_t v13 = sub_1DA98C288();
        id v18 = v17;
      }
      else
      {
        id v11 = v20;
        uint64_t v12 = (void *)sub_1DA9892D8();

        swift_willThrow();
        uint64_t v13 = MEMORY[0x1E4FBC860];
      }
      sub_1DA7FBADC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WidgetCacheKey);
      sub_1DA8843E8(v13);
      v8 += v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v21;
  }
  return result;
}

uint64_t type metadata accessor for RemoteActivityCacheURLProvider()
{
  return self;
}

uint64_t method lookup function for RemoteActivityCacheURLProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteActivityCacheURLProvider);
}

uint64_t dispatch thunk of RemoteActivityCacheURLProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of RemoteActivityCacheURLProvider.urls(matching:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of RemoteActivityCacheURLProvider.url(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of RemoteActivityCacheURLProvider.candidateURLs(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t sub_1DA7FBA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetCacheKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA7FBADC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_1DA7FBB3C()
{
  return 0.0;
}

uint64_t sub_1DA7FBB44()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1DA7FBB8C(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1DA7FBBD8())()
{
  return j__swift_endAccess;
}

void *sub_1DA7FBC80()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_inlineTextParameters);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1DA7FBD30(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_inlineTextParameters);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_1DA7FBD84())()
{
  return j_j__swift_endAccess;
}

void sub_1DA7FBDE0(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void **)(*a2 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = v2;
  id v5 = v2;

  sub_1DA7FBE54();
}

void sub_1DA7FBE54()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController__vibrancyView);
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (v3)
  {
    id v4 = objc_allocWithZone(MEMORY[0x1E4F4F8E8]);
    id v5 = v1;
    id v6 = objc_msgSend(v4, sel_initWithEffectType_backgroundType_color_, 1, 0, v3);
  }
  else
  {
    id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
    id v8 = v1;
    id v9 = objc_msgSend(v7, sel_initWithWhite_alpha_, 1.0, 0.5);
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F8E8]), sel_initWithEffectType_backgroundType_color_, 0, 0, v9);
  }
  objc_msgSend(v1, sel_setConfiguration_, v6);
}

void *sub_1DA7FBF68()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1DA7FBFB8(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  sub_1DA7FBE54();
}

void (*sub_1DA7FC024(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DA7FC084;
}

void sub_1DA7FC084(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1DA7FBE54();
  }
}

char *sub_1DA7FC0B8(uint64_t a1, char a2, char a3, char a4)
{
  v4[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_inlineTextParameters] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor] = 0;
  char v8 = a2 & 1;
  v4[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize] = 1;
  sub_1DA98B668();
  sub_1DA7FCE38(&qword_1EA8E5CC0, MEMORY[0x1E4F46AB8]);
  id v9 = v4;
  sub_1DA98AB98();
  sub_1DA98BC18();
  sub_1DA7FCE38(&qword_1EA8E5CC8, MEMORY[0x1E4F46E30]);
  sub_1DA98AB98();
  sub_1DA98BCA8();
  sub_1DA7FCE38(&qword_1EA8E5CD0, MEMORY[0x1E4F46EB0]);
  sub_1DA98AB98();
  sub_1DA98B548();
  sub_1DA7FCE38(&qword_1EA8E5CD8, MEMORY[0x1E4F46A30]);
  sub_1DA98A398();
  sub_1DA98B818();
  sub_1DA7FCE38(&qword_1EA8E5CE0, MEMORY[0x1E4F46B30]);
  sub_1DA98AB98();
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F8F0]), sel_init);
  *(void *)&v9[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController__vibrancyView] = v10;

  return sub_1DA8140A8(a1, v8, a3, a4);
}

id PreviewHostingViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PreviewHostingViewController.init(coder:)()
{
  v0[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_inlineTextParameters] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor] = 0;
  v0[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize] = 1;

  sub_1DA98CBB8();
  __break(1u);
}

uint64_t sub_1DA7FC4BC()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize);
  swift_beginAccess();
  return *v1;
}

void sub_1DA7FC56C(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize);
  swift_beginAccess();
  *id v3 = a1;
  sub_1DA7FC658();
}

void (*sub_1DA7FC5C4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DA7FC624;
}

void sub_1DA7FC624(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1DA7FC658();
  }
}

void sub_1DA7FC658()
{
  uint64_t v1 = (unsigned __int8 *)v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize;
  uint64_t v2 = swift_beginAccess();
  double v3 = 0.0;
  if (*v1 == 1) {
    double v3 = (*(double (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))(v2);
  }
  id v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v5 = v4;
  id v6 = objc_msgSend(v4, sel_layer);

  objc_msgSend(v6, sel_setMasksToBounds_, *v1);
  id v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  char v8 = v7;
  objc_msgSend(v7, sel__setContinuousCornerRadius_, v3);

  id v9 = objc_msgSend(v0, sel_view);
  if (v9)
  {
    id v10 = v9;
    objc_msgSend(v9, sel_setNeedsLayout);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1DA7FC7C0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor);
}

id PreviewHostingViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PreviewHostingViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PreviewHostingViewController()
{
  return self;
}

uint64_t sub_1DA7FC868@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming, a2);
}

uint64_t sub_1DA7FC874(char *a1, void *a2)
{
  char v2 = *a1;
  double v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming);
  uint64_t result = swift_beginAccess();
  *double v3 = v2;
  return result;
}

uint64_t sub_1DA7FC8C4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x188))();
  *a2 = result;
  return result;
}

uint64_t sub_1DA7FC928(id *a1, void **a2)
{
  id v2 = *a1;
  double v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x190);
  id v4 = *a1;
  return v3(v2);
}

id sub_1DA7FC998@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  double v3 = (void **)(*a1 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor);
  swift_beginAccess();
  id v4 = *v3;
  *a2 = *v3;

  return v4;
}

uint64_t sub_1DA7FCA00@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize, a2);
}

uint64_t keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, unsigned char *a3@<X8>)
{
  id v4 = (unsigned char *)(*a1 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

void sub_1DA7FCA5C(char *a1, void *a2)
{
  char v2 = *a1;
  double v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize);
  swift_beginAccess();
  *double v3 = v2;
  sub_1DA7FC658();
}

uint64_t method lookup function for PreviewHostingViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PreviewHostingViewController);
}

uint64_t dispatch thunk of PreviewHostingViewController.cornerRadius.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of PreviewHostingViewController.requiresStrictViewFraming.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of PreviewHostingViewController.requiresStrictViewFraming.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of PreviewHostingViewController.requiresStrictViewFraming.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of PreviewHostingViewController.inlineTextParameters.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of PreviewHostingViewController.inlineTextParameters.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of PreviewHostingViewController.inlineTextParameters.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of PreviewHostingViewController.vibrancyColor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of PreviewHostingViewController.vibrancyColor.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of PreviewHostingViewController.vibrancyColor.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of PreviewHostingViewController.metricsDefineSize.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of PreviewHostingViewController.metricsDefineSize.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of PreviewHostingViewController.metricsDefineSize.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E8))();
}

uint64_t sub_1DA7FCE38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double WidgetContentRenderStatistics.totalRenderTime.getter()
{
  return *(double *)v0;
}

double WidgetContentRenderStatistics.totalSubmitTime.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t WidgetContentRenderStatistics.totalFramesRendered.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t WidgetContentRenderStatistics.totalFramesSubmitted.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t _UIHostingViewable.rbLayer.getter()
{
  uint64_t result = sub_1DA98A948();
  if (result)
  {
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (!result)
    {
      swift_unknownObjectRelease();
      return 0;
    }
  }
  return result;
}

Swift::Void __swiftcall _UIHostingViewable.setNeedsSynchronousUpdate()()
{
  uint64_t v0 = (void *)_UIHostingViewable.rbLayer.getter();
  if (v0)
  {
    id v1 = v0;
    objc_msgSend(v0, sel_setNeedsSynchronousUpdate_, 1);
  }
}

Swift::Void __swiftcall _UIHostingViewable.setForegroundUpdateInterval()()
{
}

uint64_t sub_1DA7FCF50()
{
  uint64_t v0 = sub_1DA98AB88();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  id v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v8 - v5;
  sub_1DA98A968();
  sub_1DA98AAF8();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  sub_1DA98A978();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
}

Swift::Void __swiftcall _UIHostingViewable.setBackgroundUpdateInterval()()
{
}

Swift::Void __swiftcall _UIHostingViewable.configureRenderBox(async:isOpaque:minAnimationInterval:)(Swift::Bool async, Swift::Bool isOpaque, Swift::Double minAnimationInterval)
{
  uint64_t v5 = v3;
  BOOL v59 = async;
  LODWORD(v60) = isOpaque;
  uint64_t v6 = sub_1DA98AAD8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DA98AB88();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v55 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v53 - v14;
  uint64_t v16 = sub_1DA98AB68();
  uint64_t v57 = *(void *)(v16 - 8);
  uint64_t v58 = v16;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v56 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  id v20 = (char *)v53 - v19;
  id v54 = self;
  if (objc_msgSend(v54, sel_isSupported))
  {
    v53[0] = v4;
    v53[1] = v5;
    sub_1DA98A968();
    sub_1DA98AB78();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x1E4F3DA98])
    {
      (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
      uint64_t v21 = swift_projectBox();
      uint64_t v23 = v57;
      uint64_t v22 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v20, v21, v58);
      swift_release();
      int v24 = sub_1DA98AB18();
      int v25 = sub_1DA98AB38();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
      BOOL v26 = v59;
      char v27 = (char)v60;
      if ((v24 ^ v59) & 1) != 0 || ((v25 ^ v60)) {
        goto LABEL_12;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      BOOL v26 = v59;
      char v27 = (char)v60;
      if (v59 || (v60 & 1) != 0)
      {
LABEL_12:
        uint64_t v31 = v56;
        sub_1DA98AB58();
        sub_1DA98AB28();
        sub_1DA98AB48();
        if (qword_1EBE62C50 != -1) {
          swift_once();
        }
        uint64_t v32 = sub_1DA989F38();
        __swift_project_value_buffer(v32, (uint64_t)qword_1EBE6F300);
        id v33 = sub_1DA989F18();
        os_log_type_t v34 = sub_1DA98C518();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = swift_slowAlloc();
          *(_DWORD *)uint64_t v35 = 67109376;
          LODWORD(aBlock[0]) = v26;
          sub_1DA98C858();
          *(_WORD *)(v35 + 8) = 1024;
          LODWORD(aBlock[0]) = v27 & 1;
          sub_1DA98C858();
          _os_log_impl(&dword_1DA795000, v33, v34, "RenderBox hosting configured - async? %{BOOL}d, opaque: %{BOOL}d", (uint8_t *)v35, 0xEu);
          MEMORY[0x1E0178DA0](v35, -1, -1);
        }

        objc_msgSend(v54, sel_setAllowsRenderingInBackground_, 1);
        id v63 = &type metadata for FeatureFlags.SpringBoard;
        uint64_t v64 = (uint64_t (*)(void, void, void, void))sub_1DA8001A4();
        LOBYTE(aBlock[0]) = 0;
        char v36 = sub_1DA989888();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        id v37 = objc_msgSend(self, sel_standardUserDefaults);
        uint64_t v38 = (void *)sub_1DA98C008();
        id v39 = objc_msgSend(v37, sel_objectForKey_, v38);

        if (v39)
        {
          sub_1DA98C8C8();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v66, 0, 32);
        }
        sub_1DA7C6354((uint64_t)v66, (uint64_t)aBlock);
        if (v63)
        {
          sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE62B28);
          if (swift_dynamicCast())
          {
            id v41 = v61;
            objc_msgSend(v61, sel_intValue);

LABEL_27:
            LOBYTE(aBlock[0]) = 0;
            sub_1DA98AB08();
LABEL_28:
            sub_1DA98AAE8();
            sub_1DA98A978();
            uint64_t v42 = (void (*)(void *, void))sub_1DA98A958();
            sub_1DA98AAF8();
            v42(aBlock, 0);
            if (sub_1DA98A948())
            {
              self;
              uint64_t v43 = (void *)swift_dynamicCastObjCClass();
              if (v43)
              {
                uint64_t v44 = v43;
                objc_msgSend(v43, sel_setNeedsSynchronousUpdate_, 1);
                objc_msgSend(v44, sel_setNeedsDisplay);
                id v45 = objc_msgSend(v44, sel_statisticsHandler);
                if (v45)
                {
                  _Block_release(v45);
                  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v58);
                  swift_unknownObjectRelease();
                  return;
                }
                uint64_t v49 = sub_1DA989F18();
                os_log_type_t v50 = sub_1DA98C518();
                if (os_log_type_enabled(v49, v50))
                {
                  uint64_t v51 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v51 = 0;
                  _os_log_impl(&dword_1DA795000, v49, v50, "Attaching layer statistics handler", v51, 2u);
                  MEMORY[0x1E0178DA0](v51, -1, -1);
                }

                objc_msgSend(v44, sel_resetStatistics_alpha_, 11, 0.0);
                uint64_t v64 = CGSizeMake;
                uint64_t v65 = 0;
                aBlock[0] = MEMORY[0x1E4F143A8];
                aBlock[1] = 1107296256;
                aBlock[2] = sub_1DA7FDA68;
                id v63 = (ValueMetadata *)&block_descriptor_3;
                os_log_type_t v52 = _Block_copy(aBlock);
                objc_msgSend(v44, sel_setStatisticsHandler_, v52);
                _Block_release(v52);
                swift_unknownObjectRelease();
                goto LABEL_36;
              }
              swift_unknownObjectRelease();
            }
            unint64_t v46 = sub_1DA989F18();
            os_log_type_t v47 = sub_1DA98C548();
            if (os_log_type_enabled(v46, v47))
            {
              uint64_t v48 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v48 = 0;
              _os_log_impl(&dword_1DA795000, v46, v47, "RenderBox unable to attach layer statistics", v48, 2u);
              MEMORY[0x1E0178DA0](v48, -1, -1);
            }

LABEL_36:
            (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v58);
            return;
          }
        }
        else
        {
          sub_1DA7A1AE0((uint64_t)aBlock, &qword_1EBE66B48);
        }
        if ((v36 & 1) == 0) {
          goto LABEL_28;
        }
        goto LABEL_27;
      }
    }
  }
  else
  {
    if (qword_1EBE62C50 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1DA989F38();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EBE6F300);
    uint64_t v60 = sub_1DA989F18();
    os_log_type_t v29 = sub_1DA98C548();
    if (os_log_type_enabled(v60, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 67240192;
      LODWORD(aBlock[0]) = 0;
      sub_1DA98C858();
      _os_log_impl(&dword_1DA795000, v60, v29, "RenderBox hosting disabled (isSupported=%{BOOL,public}d)", v30, 8u);
      MEMORY[0x1E0178DA0](v30, -1, -1);
    }
    else
    {
      uint64_t v40 = v60;
    }
  }
}

uint64_t sub_1DA7FDA68(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

void __swiftcall _UIHostingViewable.consumeRenderStatistics()(ChronoKit::WidgetContentRenderStatistics_optional *__return_ptr retstr)
{
  if (!sub_1DA98A948()) {
    goto LABEL_37;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2) {
    goto LABEL_36;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_statistics);
  type metadata accessor for RBDrawableStatisticsKey(0);
  sub_1DA8004C0(&qword_1EBE62B10, type metadata accessor for RBDrawableStatisticsKey);
  uint64_t v5 = sub_1DA98BE88();

  if (!*(void *)(v5 + 16))
  {
    long long v25 = 0u;
    long long v26 = 0u;
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  id v6 = (id)*MEMORY[0x1E4F96038];
  unint64_t v7 = sub_1DA7FE330((uint64_t)v6);
  if ((v8 & 1) == 0)
  {
    long long v25 = 0u;
    long long v26 = 0u;

    goto LABEL_12;
  }
  sub_1DA800210(*(void *)(v5 + 56) + 32 * v7, (uint64_t)&v25);

  swift_bridgeObjectRelease();
  if (*((void *)&v26 + 1))
  {
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_36;
    }
    id v9 = objc_msgSend(v3, sel_statistics);
    uint64_t v10 = sub_1DA98BE88();

    if (*(void *)(v10 + 16))
    {
      id v11 = (id)*MEMORY[0x1E4F96040];
      unint64_t v12 = sub_1DA7FE330((uint64_t)v11);
      if (v13)
      {
        sub_1DA800210(*(void *)(v10 + 56) + 32 * v12, (uint64_t)&v25);
      }
      else
      {
        long long v25 = 0u;
        long long v26 = 0u;
      }
    }
    else
    {
      long long v25 = 0u;
      long long v26 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v26 + 1)) {
      goto LABEL_13;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_36;
    }
    id v14 = objc_msgSend(v3, sel_statistics);
    uint64_t v15 = sub_1DA98BE88();

    if (*(void *)(v15 + 16))
    {
      id v16 = (id)*MEMORY[0x1E4F96030];
      unint64_t v17 = sub_1DA7FE330((uint64_t)v16);
      if (v18)
      {
        sub_1DA800210(*(void *)(v15 + 56) + 32 * v17, (uint64_t)&v25);
      }
      else
      {
        long long v25 = 0u;
        long long v26 = 0u;
      }
    }
    else
    {
      long long v25 = 0u;
      long long v26 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v26 + 1)) {
      goto LABEL_13;
    }
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_36:
      swift_unknownObjectRelease();
      goto LABEL_37;
    }
    id v19 = objc_msgSend(v3, sel_statistics);
    uint64_t v20 = sub_1DA98BE88();

    if (*(void *)(v20 + 16))
    {
      id v21 = (id)*MEMORY[0x1E4F96028];
      unint64_t v22 = sub_1DA7FE330((uint64_t)v21);
      if (v23)
      {
        sub_1DA800210(*(void *)(v20 + 56) + 32 * v22, (uint64_t)&v25);
      }
      else
      {
        long long v25 = 0u;
        long long v26 = 0u;
      }
    }
    else
    {
      long long v25 = 0u;
      long long v26 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v26 + 1))
    {
      if (swift_dynamicCast())
      {
        objc_msgSend(v3, sel_resetStatistics_alpha_, 11, 0.0);
        swift_unknownObjectRelease();
        retstr->value.totalRenderTime = v24;
        retstr->value.totalSubmitTime = v24;
        *(Swift::Double *)&retstr->value.totalFramesRendered = v24;
        *(Swift::Double *)&retstr->value.totalFramesSubmitted = v24;
        retstr->is_nil = 0;
        return;
      }
      goto LABEL_36;
    }
  }
LABEL_13:
  swift_unknownObjectRelease();
  sub_1DA7A1AE0((uint64_t)&v25, &qword_1EBE66B48);
LABEL_37:
  *(_OWORD *)&retstr->value.totalRenderTime = 0u;
  *(_OWORD *)&retstr->value.totalFramesRendered = 0u;
  retstr->is_nil = 1;
}

unint64_t sub_1DA7FDEE4(char a1)
{
  char v1 = a1 & 1;
  sub_1DA98CF18();
  sub_1DA98CF28();
  uint64_t v2 = sub_1DA98CF68();

  return sub_1DA7FEBFC(v1, v2);
}

unint64_t sub_1DA7FDF54(uint64_t a1, uint64_t a2)
{
  sub_1DA98CF18();
  sub_1DA98C108();
  uint64_t v4 = sub_1DA98CF68();

  return sub_1DA7FECB8(a1, a2, v4);
}

unint64_t sub_1DA7FDFCC(uint64_t a1)
{
  sub_1DA98CF18();
  type metadata accessor for CFString(0);
  sub_1DA8004C0(&qword_1EBE62A70, type metadata accessor for CFString);
  sub_1DA989BA8();
  uint64_t v2 = sub_1DA98CF68();

  return sub_1DA7FED9C(a1, v2);
}

unint64_t sub_1DA7FE084(uint64_t a1)
{
  sub_1DA98C038();
  sub_1DA98CF18();
  sub_1DA98C108();
  uint64_t v2 = sub_1DA98CF68();
  swift_bridgeObjectRelease();

  return sub_1DA7FEEF8(a1, v2);
}

unint64_t sub_1DA7FE118(void *a1)
{
  sub_1DA98CF18();
  type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  sub_1DA989638();
  sub_1DA8004C0(&qword_1EBE63390, MEMORY[0x1E4F27928]);
  sub_1DA98BFB8();
  sub_1DA98B648();
  sub_1DA8004C0(&qword_1EBE63FC0, MEMORY[0x1E4F46A80]);
  sub_1DA98BFB8();
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 16))(&v6, v2, v3);
  sub_1DA98CF28();
  uint64_t v4 = sub_1DA98CF68();

  return sub_1DA7FF070(a1, v4);
}

unint64_t sub_1DA7FE27C(unint64_t a1)
{
  v4[9] = a1;
  sub_1DA98CF18();
  ReloadConfiguration.ReloadReason.hash(into:)((uint64_t)v4);
  uint64_t v2 = sub_1DA98CF68();

  return sub_1DA7FF390(a1, v2);
}

unint64_t sub_1DA7FE2EC(uint64_t a1)
{
  uint64_t v2 = sub_1DA98C9A8();

  return sub_1DA7FF434(a1, v2);
}

unint64_t sub_1DA7FE330(uint64_t a1)
{
  sub_1DA98C038();
  sub_1DA98CF18();
  sub_1DA98C108();
  uint64_t v2 = sub_1DA98CF68();
  swift_bridgeObjectRelease();
  return sub_1DA7FEEF8(a1, v2);
}

unint64_t sub_1DA7FE3C0(uint64_t a1)
{
  sub_1DA98CF18();
  PowerlogWidgetViewIdentity.hash(into:)();
  uint64_t v2 = sub_1DA98CF68();

  return sub_1DA7FF4FC(a1, v2);
}

unint64_t sub_1DA7FE444(uint64_t a1)
{
  sub_1DA98CF18();
  char v2 = *(unsigned char *)(a1 + 32);
  id v3 = *(id *)a1;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0) {
    sub_1DA98CF28();
  }
  sub_1DA98CF28();
  sub_1DA98CF38();
  uint64_t v4 = sub_1DA98CF68();

  return sub_1DA7FF7AC(a1, v4);
}

unint64_t sub_1DA7FE530(id *a1)
{
  sub_1DA98CF18();
  id v2 = *a1;
  sub_1DA98C7B8();

  type metadata accessor for ActivityKey(0);
  sub_1DA9897A8();
  sub_1DA8004C0(&qword_1EBE59DC8, MEMORY[0x1E4F17CC8]);
  sub_1DA98BFB8();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  sub_1DA98BC48();
  sub_1DA8004C0(&qword_1EBE5A000, MEMORY[0x1E4F46E38]);
  sub_1DA98BFB8();
  type metadata accessor for ActivityVariantKey(0);
  sub_1DA98B928();
  sub_1DA8004C0(&qword_1EBE59760, MEMORY[0x1E4F46C88]);
  sub_1DA98BFB8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  sub_1DA7A0410(&qword_1EBE5A138, &qword_1EBE66B90);
  sub_1DA98BFB8();
  uint64_t v3 = sub_1DA98CF68();

  return sub_1DA7FF9F0((uint64_t)a1, v3);
}

unint64_t sub_1DA7FE75C(uint64_t a1)
{
  return sub_1DA7FE868(a1, &qword_1EBE5A0E8, (unint64_t *)&unk_1EBE5A0D0, (unint64_t *)&qword_1EBE5A0E0);
}

unint64_t sub_1DA7FE778(uint64_t a1)
{
  return sub_1DA7FE794(a1, &qword_1EBE5A190, (unint64_t *)&unk_1EBE5A160, &qword_1EBE5A170);
}

unint64_t sub_1DA7FE794(uint64_t a1, uint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1DA7A0410(a3, a2);
  uint64_t v8 = sub_1DA98BFA8();
  return sub_1DA7FFD58(a1, v8, a2, a4, MEMORY[0x1E4F58A88]);
}

unint64_t sub_1DA7FE84C(uint64_t a1)
{
  return sub_1DA7FE868(a1, &qword_1EBE66CF0, &qword_1EBE5A108, &qword_1EBE5A110);
}

unint64_t sub_1DA7FE868(uint64_t a1, uint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1DA7A0410(a3, a2);
  uint64_t v8 = sub_1DA98BFA8();
  return sub_1DA7FFD58(a1, v8, a2, a4, MEMORY[0x1E4F589E8]);
}

unint64_t sub_1DA7FE920(uint64_t a1)
{
  uint64_t v2 = sub_1DA98C798();

  return sub_1DA7FFEF8(a1, v2);
}

unint64_t sub_1DA7FE964(uint64_t a1)
{
  return sub_1DA7FE794(a1, &qword_1EBE66B90, &qword_1EBE5A138, &qword_1EBE5A140);
}

unint64_t sub_1DA7FE980(uint64_t a1)
{
  sub_1DA989698();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1DA8004C0(&qword_1EA8E5958, MEMORY[0x1E4F27990]);
  uint64_t v3 = sub_1DA98BFA8();
  return sub_1DA800004(a1, v3, MEMORY[0x1E4F27990], &qword_1EA8E5CF8, v2, MEMORY[0x1E4F279B0]);
}

unint64_t sub_1DA7FEA54(uint64_t a1)
{
  sub_1DA989CD8();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F960D8];
  sub_1DA8004C0(&qword_1EA8E5CE8, MEMORY[0x1E4F960D8]);
  uint64_t v3 = sub_1DA98BFA8();
  return sub_1DA800004(a1, v3, MEMORY[0x1E4F960D8], &qword_1EA8E5CF0, v2, MEMORY[0x1E4F960E8]);
}

unint64_t sub_1DA7FEB28(uint64_t a1)
{
  sub_1DA98AAB8();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F3D960];
  sub_1DA8004C0(&qword_1EA8E5D00, MEMORY[0x1E4F3D960]);
  uint64_t v3 = sub_1DA98BFA8();
  return sub_1DA800004(a1, v3, MEMORY[0x1E4F3D960], &qword_1EA8E5D08, v2, MEMORY[0x1E4F3D970]);
}

unint64_t sub_1DA7FEBFC(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1DA7FECB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1DA98CE58() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        char v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1DA98CE58() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1DA7FED9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    unint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_1DA8004C0(&qword_1EBE62A70, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_1DA989B98();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_1DA989B98();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1DA7FEEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1DA98C038();
    uint64_t v8 = v7;
    if (v6 == sub_1DA98C038() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1DA98CE58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1DA98C038();
          uint64_t v15 = v14;
          if (v13 == sub_1DA98C038() && v15 == v16) {
            break;
          }
          char v18 = sub_1DA98CE58();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1DA7FF070(void *a1, uint64_t a2)
{
  uint64_t v32 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  MEMORY[0x1F4188790](v32);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v31 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v36 = (uint64_t)&v31 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v31 - v13;
  MEMORY[0x1F4188790](v15);
  char v18 = (uint64_t *)((char *)&v31 - v17);
  uint64_t v37 = v2;
  uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v20 = a2 & ~v19;
  uint64_t v35 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
  {
    uint64_t v21 = *(void *)(v16 + 72);
    uint64_t v33 = ~v19;
    uint64_t v34 = v21;
    while (1)
    {
      sub_1DA8002E8(*(void *)(v37 + 48) + v34 * v20, (uint64_t)v18);
      uint64_t v23 = v18[3];
      uint64_t v22 = v18[4];
      __swift_project_boxed_opaque_existential_0(v18, v23);
      (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v22 + 16))((char *)&v38 + 1, v23, v22);
      int v24 = BYTE1(v38);
      uint64_t v25 = a1[3];
      uint64_t v26 = a1[4];
      __swift_project_boxed_opaque_existential_0(a1, v25);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v26 + 16))(&v38, v25, v26);
      LODWORD(v25) = v38;
      sub_1DA8002E8((uint64_t)v18, (uint64_t)v14);
      uint64_t v27 = v36;
      sub_1DA8002E8((uint64_t)a1, v36);
      if (v24 != v25) {
        break;
      }
      char v28 = sub_1DA98B608();
      sub_1DA80034C(v27);
      sub_1DA80034C((uint64_t)v14);
      sub_1DA8002E8((uint64_t)v18, (uint64_t)v9);
      sub_1DA8002E8((uint64_t)a1, (uint64_t)v6);
      if ((v28 & 1) == 0) {
        goto LABEL_4;
      }
      char v29 = sub_1DA9895E8();
      sub_1DA80034C((uint64_t)v6);
      sub_1DA80034C((uint64_t)v9);
      sub_1DA80034C((uint64_t)v18);
      if (v29) {
        return v20;
      }
LABEL_5:
      unint64_t v20 = (v20 + 1) & v33;
      if (((*(void *)(v35 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        return v20;
      }
    }
    sub_1DA80034C(v27);
    sub_1DA80034C((uint64_t)v14);
    sub_1DA8002E8((uint64_t)v18, (uint64_t)v9);
    sub_1DA8002E8((uint64_t)a1, (uint64_t)v6);
LABEL_4:
    sub_1DA80034C((uint64_t)v6);
    sub_1DA80034C((uint64_t)v9);
    sub_1DA80034C((uint64_t)v18);
    goto LABEL_5;
  }
  return v20;
}

unint64_t sub_1DA7FF390(unint64_t a1, uint64_t a2)
{
  unint64_t v8 = a1;
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      unint64_t v7 = *(void *)(*(void *)(v2 + 48) + 8 * v4);
      if (static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v7, &v8)) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1DA7FF434(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1DA8003A8(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1E0177B60](v9, a1);
      sub_1DA800404((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1DA7FF4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v27 = ~v3;
    uint64_t v25 = *(void *)(a1 + 16);
    uint64_t v26 = *(void *)(a1 + 8);
    uint64_t v23 = *(void *)(a1 + 24);
    uint64_t v24 = *(void *)(a1 + 32);
    uint64_t v20 = *(void *)(a1 + 48);
    int v21 = *(unsigned __int8 *)(a1 + 56);
    int v22 = *(unsigned __int8 *)(a1 + 40);
    sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
    do
    {
      unint64_t v5 = *(void *)(v29 + 48) + (v4 << 6);
      char v7 = *(void **)v5;
      uint64_t v6 = *(void *)(v5 + 8);
      uint64_t v9 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      uint64_t v10 = *(void *)(v5 + 32);
      int v11 = *(unsigned __int8 *)(v5 + 40);
      uint64_t v12 = *(void *)(v5 + 48);
      char v13 = *(unsigned char *)(v5 + 56);
      swift_bridgeObjectRetain();
      id v14 = v7;
      swift_bridgeObjectRetain();
      if ((sub_1DA98C7A8() & 1) == 0 || (v6 == v26 ? (BOOL v15 = v9 == v25) : (BOOL v15 = 0), !v15 && (sub_1DA98CE58() & 1) == 0))
      {
LABEL_19:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_20;
      }
      if (v10)
      {
        if (!v24) {
          goto LABEL_19;
        }
        BOOL v16 = v8 == v23 && v10 == v24;
        if (!v16 && (sub_1DA98CE58() & 1) == 0) {
          goto LABEL_19;
        }
      }
      else if (v24)
      {
        goto LABEL_19;
      }
      if ((v22 ^ v11)) {
        goto LABEL_19;
      }
      if (v13)
      {
        uint64_t v17 = qword_1DA991880[v12];
        if (!v21)
        {
          uint64_t v18 = 3;
          goto LABEL_35;
        }
      }
      else
      {
        if ((v21 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v12 == v20) {
            return v4;
          }
          goto LABEL_20;
        }
        uint64_t v17 = 3;
      }
      uint64_t v18 = v20;
      switch(v20)
      {
        case 3:
          uint64_t v18 = 4;
          break;
        case 4:
          uint64_t v18 = 5;
          break;
        case 5:
          uint64_t v18 = 6;
          break;
        case 6:
          uint64_t v18 = 7;
          break;
        case 7:
          uint64_t v18 = 8;
          break;
        default:
          break;
      }
LABEL_35:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v17 == v18) {
        return v4;
      }
LABEL_20:
      unint64_t v4 = (v4 + 1) & v27;
    }
    while (((*(void *)(v28 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1DA7FF7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v21 = ~v3;
    uint64_t v19 = *(void *)(a1 + 16);
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v17 = *(void *)(a1 + 24);
    int v18 = *(unsigned __int8 *)(a1 + 32);
    int v16 = *(unsigned __int8 *)(a1 + 33);
    sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
    while (1)
    {
      uint64_t v5 = *(void *)(v2 + 48) + 40 * v4;
      uint64_t v6 = *(void *)(v5 + 8);
      uint64_t v8 = *(void *)(v5 + 16);
      uint64_t v7 = *(void *)(v5 + 24);
      char v9 = *(unsigned char *)(v5 + 32);
      int v10 = *(unsigned __int8 *)(v5 + 33);
      id v11 = *(id *)v5;
      swift_bridgeObjectRetain();
      if ((sub_1DA98C7A8() & 1) == 0 || (v6 == v20 ? (BOOL v12 = v8 == v19) : (BOOL v12 = 0), !v12 && (sub_1DA98CE58() & 1) == 0))
      {
        swift_bridgeObjectRelease();

        goto LABEL_4;
      }
      if (v9) {
        break;
      }
      if (v18)
      {
        uint64_t v13 = 3;
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();

      if (v7 != v17) {
        goto LABEL_4;
      }
LABEL_25:
      if (((v16 ^ v10) & 1) == 0) {
        return v4;
      }
LABEL_4:
      unint64_t v4 = (v4 + 1) & v21;
      if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        return v4;
      }
    }
    uint64_t v13 = qword_1DA991880[v7];
    if (v18)
    {
LABEL_16:
      uint64_t v14 = v17;
      switch(v17)
      {
        case 3:
          uint64_t v14 = 4;
          break;
        case 4:
          uint64_t v14 = 5;
          break;
        case 5:
          uint64_t v14 = 6;
          break;
        case 6:
          uint64_t v14 = 7;
          break;
        case 7:
          uint64_t v14 = 8;
          break;
        default:
          break;
      }
    }
    else
    {
      uint64_t v14 = 3;
    }
    swift_bridgeObjectRelease();

    if (v13 != v14) {
      goto LABEL_4;
    }
    goto LABEL_25;
  }
  return v4;
}

unint64_t sub_1DA7FF9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v12 = a2 & ~v11;
  if (((*(void *)(v3 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    return v12;
  }
  uint64_t v13 = ~v11;
  uint64_t v14 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
  uint64_t v29 = *(void *)(v7 + 72);
  uint64_t v30 = v14;
  uint64_t v25 = v3 + 64;
  uint64_t v27 = v13;
  while (1)
  {
    sub_1DA800458(*(void *)(v3 + 48) + v29 * v12, (uint64_t)v9);
    if ((sub_1DA98C7A8() & 1) == 0) {
      goto LABEL_4;
    }
    uint64_t v16 = type metadata accessor for ActivityKey(0);
    if ((sub_1DA989798() & 1) == 0) {
      goto LABEL_4;
    }
    uint64_t v17 = *(int *)(v16 + 24);
    uint64_t v18 = *(void *)&v9[v17];
    uint64_t v19 = *(void *)&v9[v17 + 8];
    uint64_t v20 = (void *)(a1 + v17);
    BOOL v21 = v18 == *v20 && v19 == v20[1];
    if (!v21 && (sub_1DA98CE58() & 1) == 0) {
      goto LABEL_4;
    }
    uint64_t v22 = *(int *)(v6 + 68);
    uint64_t v23 = a1 + v22;
    if ((MEMORY[0x1E0176DD0](&v9[v22], a1 + v22) & 1) == 0) {
      goto LABEL_4;
    }
    uint64_t v26 = type metadata accessor for ActivityVariantKey(0);
    uint64_t v28 = v23 + *(int *)(v26 + 20);
    sub_1DA98B928();
    sub_1DA8004C0(&qword_1EBE59FF8, MEMORY[0x1E4F46C88]);
    sub_1DA98C248();
    uint64_t v13 = v27;
    uint64_t v10 = v25;
    sub_1DA98C248();
    if (v33 != v31) {
      goto LABEL_4;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
    sub_1DA7A0410((unint64_t *)&unk_1EBE59DE0, &qword_1EBE66B90);
    sub_1DA98C248();
    sub_1DA98C248();
    if (v33 == v31 && v34 == v32) {
      break;
    }
    char v15 = sub_1DA98CE58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v27;
    if (v15) {
      goto LABEL_17;
    }
LABEL_4:
    sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE59EF8);
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      return v12;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_17:
  sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE59EF8);
  return v12;
}

unint64_t sub_1DA7FFD58(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  v21[1] = a1;
  uint64_t v23 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v8 = *(void *)(v7 - 8);
  v9.n128_f64[0] = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v5;
  uint64_t v12 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v5 + 64;
  if ((*(void *)(v5 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16);
    uint64_t v16 = v8 + 16;
    char v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v7, v9);
      sub_1DA7A0410(v24, v23);
      char v19 = sub_1DA98BFF8();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v7);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1DA7FFEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1DA98C708();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1DA98C7A8();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1DA98C7A8();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1DA800004(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v24 = a4;
  v22[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  v10.n128_f64[0] = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v22 - v11;
  uint64_t v23 = v6;
  uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v14 = a2 & ~v13;
  v22[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v15 = ~v13;
    uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    uint64_t v17 = v9 + 16;
    uint64_t v16 = v18;
    uint64_t v19 = *(void *)(v17 + 56);
    do
    {
      v16(v12, *(void *)(v23 + 48) + v19 * v14, v8, v10);
      sub_1DA8004C0(v24, v25);
      char v20 = sub_1DA98BFF8();
      (*(void (**)(char *, uint64_t))(v17 - 8))(v12, v8);
      if (v20) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v15;
    }
    while (((*(void *)(v22[0] + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_1DA8001A4()
{
  unint64_t result = qword_1EBE63938;
  if (!qword_1EBE63938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63938);
  }
  return result;
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1DA800210(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetContentRenderStatistics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WidgetContentRenderStatistics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WidgetContentRenderStatistics()
{
  return &type metadata for WidgetContentRenderStatistics;
}

uint64_t dispatch thunk of RenderStatisticsProvider.consumeRenderStatistics()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1DA8002E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA80034C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA8003A8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DA800404(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DA800458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA8004C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t DuetWidgetBudgetIdentity.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DuetWidgetBudgetIdentity.init(for:kind:intentHash:)@<X0>(uint64_t a1@<X0>, char a2@<W4>, uint64_t *a3@<X8>)
{
  if ((a2 & 1) == 0)
  {
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
  }
  sub_1DA7DF7A0();
  sub_1DA98C8A8();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v8 = sub_1DA9899C8();
  uint64_t v9 = v6;
  sub_1DA98C148();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  *a3 = v8;
  a3[1] = v9;
  return result;
}

ChronoKit::DuetWidgetBudgetIdentity __swiftcall DuetWidgetBudgetIdentity.init(forStackSuggestionIdentifier:)(Swift::String forStackSuggestionIdentifier)
{
  uint64_t v2 = v1;
  sub_1DA7DF7A0();
  sub_1DA98C8A8();
  strcpy((char *)v7, "suggestion::");
  BYTE5(v7[1]) = 0;
  HIWORD(v7[1]) = -5120;
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t v3 = swift_bridgeObjectRelease();
  uint64_t v5 = v7[1];
  *uint64_t v2 = v7[0];
  v2[1] = v5;
  result.identifier._object = v4;
  result.identifier._countAndFlagsBits = v3;
  return result;
}

void DuetWidgetBudgetIdentity.init(for:)(char **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)a1[1];
  unint64_t v8 = (unint64_t)a1[2];
  uint64_t v9 = a1[3];
  uint64_t v10 = *MEMORY[0x1E4F58B80];
  uint64_t v18 = *a1;
  uint64_t v11 = &v18[v10];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v11, v3);
  if (v9)
  {
    id v12 = objc_msgSend(v9, sel_stableHash);
    uint64_t v24 = 14906;
    unint64_t v25 = 0xE200000000000000;
    uint64_t v22 = (uint64_t)v12;
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = v7;
  unint64_t v25 = v8;
  uint64_t v22 = 14906;
  unint64_t v23 = 0xE200000000000000;
  uint64_t v20 = 0x413325413325;
  unint64_t v21 = 0xE600000000000000;
  sub_1DA7DF7A0();
  sub_1DA98C8A8();
  uint64_t v24 = sub_1DA9899C8();
  unint64_t v25 = v13;
  sub_1DA98C148();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t v14 = v24;
  unint64_t v15 = v25;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

  swift_bridgeObjectRelease();
  uint64_t v16 = v19;
  *uint64_t v19 = v14;
  v16[1] = v15;
}

void DuetWidgetBudgetIdentity.init(forViewConfiguration:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1DA800D64(a1);
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

ChronoKit::DuetWidgetBudgetIdentity __swiftcall DuetWidgetBudgetIdentity.init(forUpdateConfigurations:)(Swift::OpaquePointer forUpdateConfigurations)
{
  uint64_t v4 = v1;
  if (!((unint64_t)forUpdateConfigurations._rawValue >> 62))
  {
    uint64_t v5 = *(void *)(((unint64_t)forUpdateConfigurations._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v6 = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DA98CBD8();
  uint64_t v5 = v6;
  if (!v6) {
    goto LABEL_13;
  }
LABEL_3:
  unint64_t v2 = (unint64_t)forUpdateConfigurations._rawValue & 0xC000000000000001;
  if (((unint64_t)forUpdateConfigurations._rawValue & 0xC000000000000001) != 0)
  {
LABEL_14:
    id v8 = (id)MEMORY[0x1E0177C00](0, forUpdateConfigurations._rawValue);
    goto LABEL_6;
  }
  if (!*(void *)(((unint64_t)forUpdateConfigurations._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_16;
  }
  id v8 = *((id *)forUpdateConfigurations._rawValue + 4);
LABEL_6:
  uint64_t v9 = v8;
  uint64_t v6 = swift_bridgeObjectRelease();
  if (v5 < 1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v5; ++i)
  {
    if (v2)
    {
      MEMORY[0x1E0177C00](i, forUpdateConfigurations._rawValue);
      swift_unknownObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1DA80114C((unint64_t)forUpdateConfigurations._rawValue);
  uint64_t v13 = v12;

  uint64_t v6 = swift_bridgeObjectRelease();
  *uint64_t v4 = v11;
  v4[1] = v13;
LABEL_17:
  result.identifier._object = v7;
  result.identifier._countAndFlagsBits = v6;
  return result;
}

uint64_t DuetWidgetBudgetIdentity.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t static DuetWidgetBudgetIdentity.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1DA98CE58();
  }
}

uint64_t DuetWidgetBudgetIdentity.hashValue.getter()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA800C58()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA800CB4()
{
  swift_bridgeObjectRetain();
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA800D0C()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA800D64(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isSuggestion))
  {
    id v6 = objc_msgSend(a1, sel_container);
    if (v6)
    {
      uint64_t v7 = v6;
      if (objc_msgSend(v6, sel_isStack))
      {
        id v8 = objc_msgSend(v7, sel_uniqueIdentifier);
        uint64_t v9 = sub_1DA98C038();
        uint64_t v11 = v10;

        v30[0] = v9;
        v30[1] = v11;
        uint64_t v28 = 14906;
        unint64_t v29 = 0xE200000000000000;
        uint64_t v26 = 0x413325413325;
        unint64_t v27 = 0xE600000000000000;
        sub_1DA7DF7A0();
        sub_1DA98C8A8();
        strcpy((char *)v30, "suggestion::");
        BYTE5(v30[1]) = 0;
        HIWORD(v30[1]) = -5120;
        sub_1DA98C148();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v30[0];
      }
    }
  }
  id v13 = objc_msgSend(a1, sel_widget);
  uint64_t v14 = (char *)objc_msgSend(v13, sel_extensionIdentity);
  id v15 = objc_msgSend(v13, sel_kind);
  uint64_t v16 = sub_1DA98C038();
  unint64_t v18 = v17;

  id v19 = objc_msgSend(v13, sel_intentReference);
  uint64_t v20 = *MEMORY[0x1E4F58B80];
  v25[0] = v14;
  unint64_t v21 = &v14[v20];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v21, v2);
  if (v19)
  {
    id v22 = objc_msgSend(v19, sel_stableHash);
    uint64_t v28 = 14906;
    unint64_t v29 = 0xE200000000000000;
    uint64_t v26 = (uint64_t)v22;
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = v16;
  unint64_t v29 = v18;
  uint64_t v26 = 14906;
  unint64_t v27 = 0xE200000000000000;
  v25[1] = (id)0x413325413325;
  uint64_t v25[2] = (id)0xE600000000000000;
  sub_1DA7DF7A0();
  sub_1DA98C8A8();
  uint64_t v28 = sub_1DA9899C8();
  unint64_t v29 = v23;
  sub_1DA98C148();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t v12 = v28;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1DA80114C(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    id v9 = (id)MEMORY[0x1E0177C00](0, a1);
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v10 = sub_1DA800D64(v9);
LABEL_15:

    return v10;
  }
LABEL_17:
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1DA98CBD8();
  if (!v2) {
    goto LABEL_18;
  }
LABEL_3:
  unint64_t v3 = a1 & 0xC000000000000001;
  uint64_t v4 = 4;
  do
  {
    if (v3) {
      id v5 = (id)MEMORY[0x1E0177C00](v4 - 4, a1);
    }
    else {
      id v5 = *(id *)(a1 + 8 * v4);
    }
    id v6 = v5;
    uint64_t v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    if (objc_msgSend(v5, sel_isSuggestion))
    {
      swift_bridgeObjectRelease();
      id v9 = v6;
      uint64_t v10 = sub_1DA800D64(v9);

      goto LABEL_15;
    }

    ++v4;
  }
  while (v7 != v2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3) {
    goto LABEL_19;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v9 = *(id *)(a1 + 32);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

unint64_t sub_1DA8012BC()
{
  unint64_t result = qword_1EA8E5D10;
  if (!qword_1EA8E5D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5D10);
  }
  return result;
}

ValueMetadata *type metadata accessor for DuetWidgetBudgetIdentity()
{
  return &type metadata for DuetWidgetBudgetIdentity;
}

uint64_t sub_1DA801320()
{
  *(void *)(v0 + 16) = sub_1DA801374();
  return v0;
}

uint64_t sub_1DA801374()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DA989478();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA801914((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1DA802060((uint64_t)v2);
    if (qword_1EBE58FE8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1DA989F38();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBE6F090);
    id v8 = sub_1DA989F18();
    os_log_type_t v9 = sub_1DA98C528();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1DA795000, v8, v9, "Couldn't find nominated container data", v10, 2u);
      MEMORY[0x1E0178DA0](v10, -1, -1);
    }

    return MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v11 = objc_msgSend(self, sel_defaultManager);
  sub_1DA989458();
  uint64_t v12 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_contentsAtPath_, v12);

  if (!v13)
  {
    if (qword_1EBE58FE8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1DA989F38();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EBE6F090);
    unint64_t v18 = sub_1DA989F18();
    os_log_type_t v19 = sub_1DA98C528();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1DA795000, v18, v19, "Couldn't load nominated container data", v20, 2u);
      MEMORY[0x1E0178DA0](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = sub_1DA9894E8();
  unint64_t v16 = v15;

  sub_1DA989288();
  swift_allocObject();
  sub_1DA989278();
  type metadata accessor for NominatedContainerPermissions();
  sub_1DA8020C0();
  sub_1DA989268();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  sub_1DA79DA70(v14, v16);
  uint64_t v21 = *(void *)(v23[3] + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v21;
}

uint64_t sub_1DA801914@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_1DA98C008();
  uint64_t v5 = (void *)sub_1DA98C008();
  id v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_1DA989438();

    uint64_t v7 = sub_1DA989478();
    id v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
    uint64_t v11 = 0;
  }
  else
  {

    uint64_t v12 = sub_1DA989478();
    id v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t sub_1DA801A78()
{
  return 1;
}

uint64_t sub_1DA801A80()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA801AC4()
{
  return sub_1DA98CF28();
}

uint64_t sub_1DA801AEC()
{
  return sub_1DA98CF68();
}

unint64_t sub_1DA801B2C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1DA801B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DA8023A8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DA801B74(uint64_t a1)
{
  unint64_t v2 = sub_1DA80200C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DA801BB0(uint64_t a1)
{
  unint64_t v2 = sub_1DA80200C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DA801BEC()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NominatedContainerPermissions()
{
  return self;
}

uint64_t sub_1DA801C48(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5D18);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1DA80200C();
  sub_1DA98CFC8();
  v9[1] = *(void *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
  sub_1DA802114(&qword_1EBE5A660);
  sub_1DA98CDB8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DA801DC0(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE595C8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1DA80200C();
  sub_1DA98CFB8();
  if (v2)
  {
    type metadata accessor for NominatedContainerPermissions();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
    sub_1DA802114((unint64_t *)&unk_1EBE595B0);
    sub_1DA98CCF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(v1 + 16) = v9[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1DA801F90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for NominatedContainerPermissions();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_1DA801DC0(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1DA801FE8(void *a1)
{
  return sub_1DA801C48(a1);
}

unint64_t sub_1DA80200C()
{
  unint64_t result = qword_1EBE59490;
  if (!qword_1EBE59490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59490);
  }
  return result;
}

uint64_t sub_1DA802060(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DA8020C0()
{
  unint64_t result = qword_1EBE594A8[0];
  if (!qword_1EBE594A8[0])
  {
    type metadata accessor for NominatedContainerPermissions();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBE594A8);
  }
  return result;
}

uint64_t sub_1DA802114(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE62A40);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NominatedContainerPermissions.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for NominatedContainerPermissions.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DA802268);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NominatedContainerPermissions.CodingKeys()
{
  return &type metadata for NominatedContainerPermissions.CodingKeys;
}

unint64_t sub_1DA8022A4()
{
  unint64_t result = qword_1EA8E5D20[0];
  if (!qword_1EA8E5D20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA8E5D20);
  }
  return result;
}

unint64_t sub_1DA8022FC()
{
  unint64_t result = qword_1EBE594A0;
  if (!qword_1EBE594A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE594A0);
  }
  return result;
}

unint64_t sub_1DA802354()
{
  unint64_t result = qword_1EBE59498;
  if (!qword_1EBE59498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59498);
  }
  return result;
}

uint64_t sub_1DA8023A8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DA99E950)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DA98CE58();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DA802430(uint64_t a1)
{
  uint64_t v2 = sub_1DA989478();
  MEMORY[0x1F4188790](v2);
  unsigned int v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return sub_1DA802580((uint64_t)v4);
}

uint64_t sub_1DA8024FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EA8ED780;
  swift_beginAccess();
  uint64_t v4 = sub_1DA989478();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DA802580(uint64_t a1)
{
  uint64_t v3 = v1 + qword_1EA8ED780;
  swift_beginAccess();
  uint64_t v4 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1DA80260C())()
{
  return j__swift_endAccess;
}

uint64_t BaseDirectoryCacheKeyProvider.__allocating_init(subsystem:in:fileManager:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  BaseDirectoryCacheKeyProvider.init(subsystem:in:fileManager:)(a1, a2, a3, a4);
  return v8;
}

void *BaseDirectoryCacheKeyProvider.init(subsystem:in:fileManager:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v29[1] = a1;
  uint64_t v5 = v4;
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = *v4;
  uint64_t v9 = sub_1DA989478();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  id v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)v29 - v14;
  *(void *)&v32[0] = 0;
  id v30 = a4;
  id v16 = objc_msgSend(a4, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, a3, 1, 0, 1, v32);
  uint64_t v17 = *(void **)&v32[0];
  if (v16)
  {
    unint64_t v18 = v16;
    sub_1DA989438();
    id v19 = v17;

    sub_1DA9893F8();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v13, v9);
    uint64_t v21 = (char *)v5 + qword_1EA8ED780;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))((uint64_t)v5 + qword_1EA8ED780, v15, v9);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v21, v9);
    id v22 = (void *)sub_1DA9893A8();
    v20(v13, v9);
    id v31 = 0;
    id v23 = v30;
    LOBYTE(v18) = objc_msgSend(v30, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v22, 1, 0, &v31);

    id v24 = v31;
    if ((v18 & 1) == 0)
    {
      unint64_t v27 = v24;
      swift_release();
      sub_1DA9892D8();

      swift_willThrow();
    }
  }
  else
  {
    id v25 = *(id *)&v32[0];
    swift_bridgeObjectRelease();
    sub_1DA9892D8();

    swift_willThrow();
    long long v26 = *(_OWORD *)(v8 + 96);
    v32[0] = *(_OWORD *)(v8 + 80);
    v32[1] = v26;
    type metadata accessor for BaseDirectoryCacheKeyProvider();
    swift_deallocPartialClassInstance();
  }
  return v5;
}

uint64_t type metadata accessor for BaseDirectoryCacheKeyProvider()
{
  return swift_getGenericMetadata();
}

uint64_t BaseDirectoryCacheKeyProvider.__allocating_init(cacheURL:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + qword_1EA8ED780;
  uint64_t v4 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t BaseDirectoryCacheKeyProvider.init(cacheURL:)(uint64_t a1)
{
  uint64_t v3 = v1 + qword_1EA8ED780;
  uint64_t v4 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_1DA802B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *MEMORY[0x1E4F58B70];
  swift_beginAccess();
  if (*(void *)(v3 + 8))
  {
    swift_bridgeObjectRetain();
    sub_1DA98C148();
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    sub_1DA9899C8();
    swift_endAccess();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    sub_1DA9899C8();
    swift_endAccess();
  }
  sub_1DA803010();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1DA989478();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 0, 1, v4);
}

uint64_t sub_1DA802CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v27 = v4;
  uint64_t v28 = a2;
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DA989478();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v25 - v16;
  unint64_t v18 = *(uint64_t (**)(uint64_t))(*(void *)(v4 + 96) + 16);
  uint64_t v26 = a1;
  id v19 = (void *)v18(v5);
  sub_1DA802B28((uint64_t)v19, (uint64_t)v10);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DA802060((uint64_t)v10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v27 + 88) - 8) + 56))(v28, 1, 1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    uint64_t v21 = v27;
    uint64_t v22 = *(void *)(v27 + 88);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v7, v26, v5);
    id v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 + 104) + 16);
    uint64_t v24 = v28;
    v23(v15, v7, v22);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 56))(v24, 0, 1);
  }
}

uint64_t sub_1DA803010()
{
  uint64_t v0 = sub_1DA989478();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA8024FC((uint64_t)v3);
  sub_1DA9893F8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t BaseDirectoryCacheKeyProvider.deinit()
{
  uint64_t v1 = v0 + qword_1EA8ED780;
  uint64_t v2 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t BaseDirectoryCacheKeyProvider.__deallocating_deinit()
{
  uint64_t v1 = v0 + qword_1EA8ED780;
  uint64_t v2 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA803208(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_1DA803210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA802B28(a1, a2);
}

uint64_t sub_1DA803234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA802CB4(a1, a2);
}

uint64_t sub_1DA803258@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA8024FC(a1);
}

uint64_t sub_1DA803280()
{
  return 32;
}

__n128 sub_1DA80328C(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1DA803298()
{
  uint64_t result = sub_1DA989478();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BaseDirectoryCacheKeyProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BaseDirectoryCacheKeyProvider);
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.cacheURL.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.cacheURL.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.cacheURL.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.__allocating_init(subsystem:in:fileManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.__allocating_init(cacheURL:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.isSupported(key:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.baseURL(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.cacheKey(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t RelevanceCacheManager.__allocating_init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  RelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(a1, a2, a3);
  return v6;
}

uint64_t RelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v34[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DA989478();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  *(void *)(v4 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache) = 0;
  uint64_t v33 = a1;
  sub_1DA7A1A44(a1, v4 + 112);
  sub_1DA7A1A44(a2, v4 + 152);
  sub_1DA7C788C(a3, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    id v15 = (id)CHSWidgetRelevanceServiceCacheDirectory();
    sub_1DA989438();

    sub_1DA802060((uint64_t)v10);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v4 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCacheURL, v14, v11);
  }
  else
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v16(v14, v10, v11);
    v16((char *)(v4 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCacheURL), v14, v11);
  }
  id v17 = objc_msgSend(self, sel_defaultManager);
  unint64_t v18 = (void *)sub_1DA9893A8();
  v34[0] = 0;
  unsigned int v19 = objc_msgSend(v17, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v18, 1, 0, v34);

  if (v19)
  {
    uint64_t v20 = qword_1EBE5A8E0;
    id v21 = v34[0];
    if (v20 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1DA989F38();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EBE6F288);
    id v23 = sub_1DA989F18();
    os_log_type_t v24 = sub_1DA98C548();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_1DA795000, v23, v24, "Loading RelevanceCache", v25, 2u);
      MEMORY[0x1E0178DA0](v25, -1, -1);
    }

    uint64_t v26 = swift_retain();
    uint64_t v27 = v32;
    uint64_t v28 = sub_1DA8045C4(v26, v4);
    if (!v27)
    {
      uint64_t v31 = v28;
      sub_1DA802060(a3);
      __swift_destroy_boxed_opaque_existential_1(a2);
      __swift_destroy_boxed_opaque_existential_1(v33);
      *(void *)(v4 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache) = v31;
      swift_release();
      return v4;
    }
    swift_release();
  }
  else
  {
    id v29 = v34[0];
    swift_release();
    sub_1DA9892D8();

    swift_willThrow();
  }
  sub_1DA802060(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(v33);
  return v4;
}

uint64_t sub_1DA80389C(void *a1)
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DA989478();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  id v41 = (char *)&v37 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v37 - v12;
  id v14 = objc_msgSend(a1, sel_kind);
  uint64_t v15 = sub_1DA98C038();
  uint64_t v17 = v16;

  uint64_t v18 = v42;
  sub_1DA803CFC(a1, (uint64_t)v13);
  if (v18)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v42 = v17;
    uint64_t v38 = v9;
    id v39 = v5;
    sub_1DA989418();
    unsigned int v19 = self;
    id v20 = objc_msgSend(v19, sel_defaultManager);
    id v21 = (void *)sub_1DA9893A8();
    *(void *)&long long v43 = 0;
    unsigned __int8 v22 = objc_msgSend(v20, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v21, 1, 0, &v43);

    id v23 = (void *)v43;
    if (v22)
    {
      uint64_t v24 = v40;
      uint64_t v25 = v19;
      uint64_t v26 = v38;
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v38, v13, v6);
      uint64_t v27 = sub_1DA98B9E8();
      uint64_t v28 = (uint64_t)v39;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v39, 1, 1, v27);
      id v29 = v23;
      id v30 = objc_msgSend(v25, sel_defaultManager);
      uint64_t v44 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58EE0);
      id v45 = &off_1F34D9A48;
      *(void *)&long long v43 = v30;
      uint64_t v31 = *(void (**)(char *, uint64_t))(v24 + 8);
      v31(v41, v6);
      v31(v13, v6);
      type metadata accessor for DataProtectedArchiveFilePromise(0);
      uint64_t v1 = swift_allocObject();
      uint64_t v32 = v1 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
      uint64_t v33 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
      uint64_t v34 = v42;
      *(void *)(v1 + 16) = v15;
      *(void *)(v1 + 24) = v34;
      (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v1 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination, v26, v6);
      sub_1DA7A19A4(&v43, v1 + 32);
      sub_1DA7F1A40(v28, v1 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel);
    }
    else
    {
      id v35 = (id)v43;
      swift_bridgeObjectRelease();
      sub_1DA9892D8();

      swift_willThrow();
      uint64_t v1 = *(void *)(v40 + 8);
      ((void (*)(char *, uint64_t))v1)(v41, v6);
      ((void (*)(char *, uint64_t))v1)(v13, v6);
    }
  }
  return v1;
}

uint64_t sub_1DA803CFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v4 = sub_1DA989E08();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x1F4188790](v4);
  id v45 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DA989478();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v46 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1DA989148();
  uint64_t v8 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  id v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v17 = v2[18];
  __swift_project_boxed_opaque_existential_0(v2 + 14, v2[17]);
  id v18 = objc_msgSend(a1, sel_extensionIdentity);
  unsigned int v19 = *(void (**)(void))(v17 + 48);
  uint64_t v55 = v16;
  v19();

  id v20 = objc_msgSend(a1, sel_kind);
  uint64_t v21 = sub_1DA98C038();
  unint64_t v23 = v22;

  swift_bridgeObjectRetain();
  unint64_t v24 = sub_1DA8E76E4(0x32uLL, v21, v23);
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = MEMORY[0x1E0177290](v24, v26, v28, v30);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v53 = v31;
  uint64_t v54 = v33;
  sub_1DA989138();
  sub_1DA7DF7A0();
  sub_1DA98C8B8();
  uint64_t v35 = v34;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v52);
  swift_bridgeObjectRelease();
  if (v35)
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = (uint64_t)v55;
    sub_1DA7C788C((uint64_t)v55, (uint64_t)v14);
    uint64_t v38 = v50;
    uint64_t v37 = v51;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v14, 1, v51) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1DA802060((uint64_t)v14);
      sub_1DA809348();
      swift_allocError();
      void *v39 = 1;
      swift_willThrow();
    }
    else
    {
      uint64_t v42 = v46;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v46, v14, v37);
      (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v49, v42, v37);
      long long v43 = v45;
      sub_1DA989DF8();
      sub_1DA9893E8();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v48);
      sub_1DA9893C8();
      swift_bridgeObjectRelease();
      sub_1DA9893D8();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v37);
    }
    return sub_1DA802060(v36);
  }
  else
  {
    sub_1DA809348();
    swift_allocError();
    *id v41 = 2;
    swift_willThrow();
    sub_1DA802060((uint64_t)v55);
    return swift_bridgeObjectRelease();
  }
}

void sub_1DA8041FC(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  void v2[4] = a2;
  sub_1DA8051A8((void (*)(void *__return_ptr))sub_1DA807578, (uint64_t)v2);
}

void sub_1DA80423C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1DA989498();
  if (v2)
  {
    sub_1DA809348();
    swift_allocError();
    *uint64_t v11 = v2;
LABEL_4:
    swift_willThrow();
    return;
  }
  uint64_t v7 = v5;
  unint64_t v8 = v6;
  sub_1DA7A1A08(0, &qword_1EBE58EF0);
  sub_1DA98B7B8();
  uint64_t v9 = (void *)sub_1DA98C578();
  uint64_t v10 = sub_1DA79DA70(v7, v8);
  if (!v9)
  {
    sub_1DA809348();
    swift_allocError();
    void *v13 = 0;
    goto LABEL_4;
  }
  if (*(void *)(a1 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache))
  {
    MEMORY[0x1F4188790](v10);
    id v12 = v9;
    swift_retain();
    sub_1DA989938();
    swift_release();
    unint64_t v14 = sub_1DA98B798();
    if (v14 >> 62) {
      uint64_t v15 = sub_1DA98CBD8();
    }
    else {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();

    *a2 = v15;
  }
  else
  {
    __break(1u);
  }
}

void sub_1DA804424(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1DA989638();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = a2;
  char v8 = sub_1DA98B7A8();
  sub_1DA989628();
  sub_1DA9895D8();
  double v10 = v9;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1DA98B798();
  id v11 = objc_allocWithZone(MEMORY[0x1E4F58EC0]);
  sub_1DA7A1A08(0, &qword_1EBE5AB80);
  id v12 = (void *)sub_1DA98C268();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initWithWidgetRelevanceKey_supportsBackgroundRefresh_lastRelevanceUpdate_relevances_, v7, (v8 & 1) == 0, v12, v10);

  sub_1DA989B48();
}

uint64_t sub_1DA8045C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v74 = a1;
  uint64_t v81 = sub_1DA989078();
  uint64_t v5 = *(void *)(v81 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v81);
  unint64_t v80 = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v79 = (char *)v70 - v8;
  uint64_t v9 = sub_1DA989098();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v70[0] = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v78 = (char *)v70 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v96 = (char *)v70 - v16;
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)v70 - v17;
  uint64_t v93 = sub_1DA989A68();
  uint64_t v19 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v92 = (char *)v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1DA989958();
  v70[1] = a2;
  uint64_t v94 = a2 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCacheURL;
  uint64_t v21 = 0;
  uint64_t v86 = (uint64_t (**)(char *, uint64_t))(v19 + 88);
  int v85 = *MEMORY[0x1E4F58A60];
  id v73 = (void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v77 = (void (**)(void))(v10 + 32);
  uint64_t v76 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v83 = (void (**)(char *, char *, uint64_t))(v10 + 16);
  *(void *)&long long v22 = 138412290;
  long long v71 = v22;
  *(void *)&long long v22 = 138412546;
  long long v72 = v22;
  uint64_t v84 = v9;
  id v87 = v18;
  uint64_t v82 = (void (**)(char *, uint64_t))(v10 + 8);
  while (1)
  {
    sub_1DA989448();
    unint64_t v23 = v3;
    uint64_t v24 = sub_1DA989968();
    if (!v3) {
      break;
    }
    uint64_t v97 = v21;
    uint64_t v3 = 0;
    id v100 = v23;
    id v25 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
    uint64_t v27 = v92;
    uint64_t v26 = v93;
    if (swift_dynamicCast())
    {
      int v28 = (*v86)(v27, v26);
      if (v28 == v85)
      {

        if (qword_1EBE5A8E0 != -1) {
          swift_once();
        }
        uint64_t v29 = sub_1DA989F38();
        __swift_project_value_buffer(v29, (uint64_t)qword_1EBE6F288);
        uint64_t v30 = sub_1DA989F18();
        os_log_type_t v31 = sub_1DA98C528();
        BOOL v32 = os_log_type_enabled(v30, v31);
        uint64_t v33 = v97;
        if (v32)
        {
          uint64_t v34 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v34 = 0;
          _os_log_impl(&dword_1DA795000, v30, v31, "RelevanceCache corruption detected, rebuilding cache", v34, 2u);
          MEMORY[0x1E0178DA0](v34, -1, -1);
        }

        sub_1DA805D5C();
        uint64_t v3 = 0;

        uint64_t v9 = v84;
        goto LABEL_3;
      }
      (*v73)(v27, v26);
    }

    id v100 = v23;
    id v35 = v23;
    if (swift_dynamicCast())
    {
      os_log_t v88 = 0;
      uint64_t v90 = v24;

      (*v77)();
      uint64_t v36 = sub_1DA80939C(&qword_1EBE61C88, MEMORY[0x1E4F26C20]);
      uint64_t v37 = v79;
      uint64_t v89 = v36;
      sub_1DA989298();
      uint64_t v38 = v80;
      sub_1DA989008();
      sub_1DA80939C(&qword_1EBE61C80, MEMORY[0x1E4F26C08]);
      uint64_t v39 = v81;
      sub_1DA98C248();
      sub_1DA98C248();
      uint64_t v40 = v98;
      uint64_t v91 = v99;
      id v41 = *v76;
      (*v76)(v38, v39);
      v41(v37, v39);
      uint64_t v42 = v78;
      uint64_t v75 = *v83;
      v75(v78, v96, v9);
      if (v91 == v40)
      {
        id v45 = *v82;
        (*v82)(v42, v9);
LABEL_23:
        uint64_t v58 = (char *)v70[0];
        uint64_t v24 = v90;
        if (qword_1EBE5A8E0 != -1) {
          swift_once();
        }
        uint64_t v59 = sub_1DA989F38();
        __swift_project_value_buffer(v59, (uint64_t)qword_1EBE6F288);
        v75(v58, v96, v9);
        uint64_t v60 = sub_1DA989F18();
        os_log_type_t v61 = sub_1DA98C528();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = (uint8_t *)swift_slowAlloc();
          uint64_t v63 = swift_slowAlloc();
          uint64_t v97 = v60;
          uint64_t v64 = (void *)v63;
          *(_DWORD *)uint64_t v62 = v71;
          uint64_t v95 = (uint64_t)(v62 + 4);
          sub_1DA988FE8();
          uint64_t v65 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v99 = v65;
          sub_1DA98C858();
          *uint64_t v64 = v65;
          uint64_t v66 = v64;
          uint64_t v60 = v97;
          v45(v58, v84);
          _os_log_impl(&dword_1DA795000, v60, v61, "RelevanceCache failed due to access permission %@, rethrowing now", v62, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v66, -1, -1);
          id v67 = v62;
          uint64_t v9 = v84;
          MEMORY[0x1E0178DA0](v67, -1, -1);
        }
        else
        {
          v45(v58, v9);
        }

        uint64_t v68 = v96;
        sub_1DA988FE8();
        swift_willThrow();
        v45(v68, v9);

        break;
      }
      sub_1DA989298();
      sub_1DA989018();
      sub_1DA98C248();
      sub_1DA98C248();
      uint64_t v44 = v98;
      uint64_t v43 = v99;
      v41(v38, v39);
      v41(v37, v39);
      id v45 = *v82;
      (*v82)(v42, v9);
      if (v43 == v44) {
        goto LABEL_23;
      }
      v45(v96, v9);

      uint64_t v24 = v90;
      uint64_t v3 = v88;
      uint64_t v33 = v97;
    }
    else
    {

      if (qword_1EBE5A8E0 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_1DA989F38();
      __swift_project_value_buffer(v46, (uint64_t)qword_1EBE6F288);
      id v47 = v23;
      id v48 = v23;
      uint64_t v49 = sub_1DA989F18();
      os_log_type_t v50 = sub_1DA98C528();
      BOOL v51 = os_log_type_enabled(v49, v50);
      uint64_t v33 = v97;
      if (v51)
      {
        uint64_t v52 = swift_slowAlloc();
        uint64_t v53 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v52 = v72;
        id v54 = v23;
        uint64_t v55 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v52 + 4) = v55;
        *uint64_t v53 = v55;

        *(_WORD *)(v52 + 12) = 2048;
        *(void *)(v52 + 14) = v33;
        _os_log_impl(&dword_1DA795000, v49, v50, "RelevanceCache failed to load with error %@, retry %ld", (uint8_t *)v52, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v53, -1, -1);
        uint64_t v56 = v52;
        uint64_t v9 = v84;
        MEMORY[0x1E0178DA0](v56, -1, -1);
      }
      else
      {
      }
    }
LABEL_3:
    uint64_t v21 = ((char *)&v33->isa + 1);
    if (v21 == 3)
    {
      sub_1DA809348();
      swift_allocError();
      *uint64_t v57 = 3;
      swift_willThrow();
      break;
    }
  }
  swift_release();
  return v24;
}

void sub_1DA8051A8(void (*a1)(void *__return_ptr), uint64_t a2)
{
  void (*v70)(void *__return_ptr);
  void (**v71)(char *, uint64_t);
  void (**v72)(void);
  char *v73;
  char *v74;
  void (**v75)(char *, uint64_t);
  void (**v76)(char *, char *, uint64_t);
  int v77;
  uint64_t (**v78)(char *, uint64_t);
  uint64_t v79;
  void *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;

  uint64_t v3 = v2;
  uint64_t v86 = a2;
  uint64_t v5 = sub_1DA989078();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v74 = (char *)&v64 - v10;
  uint64_t v89 = sub_1DA989098();
  uint64_t v11 = *(void *)(v89 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v89);
  uint64_t v65 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  id v73 = (char *)&v64 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  id v87 = (char *)&v64 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v82 = (char *)&v64 - v18;
  uint64_t v19 = sub_1DA989A68();
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  int v85 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v22 = 0;
  uint64_t v78 = (uint64_t (**)(char *, uint64_t))(v23 + 88);
  uint64_t v68 = (void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v77 = *MEMORY[0x1E4F58A60];
  long long v72 = (void (**)(void))(v11 + 32);
  long long v71 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v76 = (void (**)(char *, char *, uint64_t))(v11 + 16);
  *(void *)&long long v24 = 138412290;
  long long v66 = v24;
  *(void *)&long long v24 = 138412546;
  long long v67 = v24;
  uint64_t v79 = v5;
  uint64_t v83 = v20;
  uint64_t v84 = v9;
  id v70 = a1;
  uint64_t v75 = (void (**)(char *, uint64_t))(v11 + 8);
  while (1)
  {
    id v25 = v3;
    a1(&v93);
    if (!v3) {
      break;
    }
    os_log_t v88 = v22;
    uint64_t v92 = v3;
    id v26 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
    uint64_t v27 = v85;
    if (swift_dynamicCast())
    {
      int v28 = (*v78)(v27, v19);
      if (v28 == v77)
      {

        if (qword_1EBE5A8E0 != -1) {
          swift_once();
        }
        uint64_t v29 = sub_1DA989F38();
        __swift_project_value_buffer(v29, (uint64_t)qword_1EBE6F288);
        uint64_t v30 = sub_1DA989F18();
        os_log_type_t v31 = sub_1DA98C528();
        BOOL v32 = os_log_type_enabled(v30, v31);
        uint64_t v33 = v88;
        if (v32)
        {
          uint64_t v34 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v34 = 0;
          _os_log_impl(&dword_1DA795000, v30, v31, "RelevanceCache corruption detected, rebuilding cache", v34, 2u);
          uint64_t v9 = v84;
          MEMORY[0x1E0178DA0](v34, -1, -1);
        }

        sub_1DA805D5C();
        uint64_t v3 = 0;

        uint64_t v19 = v83;
        goto LABEL_4;
      }
      (*v68)(v27, v19);
    }

    uint64_t v92 = v3;
    id v35 = v3;
    if (swift_dynamicCast())
    {
      unint64_t v80 = 0;

      (*v72)();
      sub_1DA80939C(&qword_1EBE61C88, MEMORY[0x1E4F26C20]);
      uint64_t v36 = v74;
      sub_1DA989298();
      sub_1DA989008();
      sub_1DA80939C(&qword_1EBE61C80, MEMORY[0x1E4F26C08]);
      sub_1DA98C248();
      sub_1DA98C248();
      uint64_t v37 = v90;
      uint64_t v81 = v91;
      uint64_t v38 = *v71;
      (*v71)(v9, v5);
      v38(v36, v5);
      uint64_t v39 = v73;
      uint64_t v69 = *v76;
      v69(v73, v87, v89);
      if (v81 == v37)
      {
        uint64_t v42 = *v75;
        (*v75)(v39, v89);
LABEL_25:
        uint64_t v56 = v65;
        if (qword_1EBE5A8E0 != -1) {
          swift_once();
        }
        uint64_t v57 = sub_1DA989F38();
        __swift_project_value_buffer(v57, (uint64_t)qword_1EBE6F288);
        v69(v56, v87, v89);
        uint64_t v58 = sub_1DA989F18();
        os_log_type_t v59 = sub_1DA98C528();
        if (os_log_type_enabled(v58, v59))
        {
          uint64_t v60 = (uint8_t *)swift_slowAlloc();
          os_log_type_t v61 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v60 = v66;
          os_log_t v88 = v60 + 4;
          sub_1DA988FE8();
          uint64_t v62 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v91 = v62;
          sub_1DA98C858();
          *os_log_type_t v61 = v62;
          v42(v56, v89);
          _os_log_impl(&dword_1DA795000, v58, v59, "RelevanceCache failed due to access permission %@, rethrowing now", v60, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v61, -1, -1);
          MEMORY[0x1E0178DA0](v60, -1, -1);
        }
        else
        {
          v42(v56, v89);
        }

        uint64_t v63 = v87;
        sub_1DA988FE8();
        swift_willThrow();
        v42(v63, v89);

        return;
      }
      sub_1DA989298();
      sub_1DA989018();
      sub_1DA98C248();
      sub_1DA98C248();
      uint64_t v41 = v90;
      uint64_t v40 = v91;
      v38(v9, v5);
      v38(v36, v5);
      uint64_t v42 = *v75;
      (*v75)(v39, v89);
      a1 = v70;
      if (v40 == v41) {
        goto LABEL_25;
      }
      v42(v87, v89);

      uint64_t v5 = v79;
      uint64_t v3 = v80;
      uint64_t v19 = v83;
      uint64_t v9 = v84;
      uint64_t v33 = v88;
    }
    else
    {

      if (qword_1EBE5A8E0 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1DA989F38();
      __swift_project_value_buffer(v43, (uint64_t)qword_1EBE6F288);
      id v44 = v3;
      id v45 = v3;
      uint64_t v46 = sub_1DA989F18();
      os_log_type_t v47 = sub_1DA98C528();
      BOOL v48 = os_log_type_enabled(v46, v47);
      uint64_t v33 = v88;
      if (v48)
      {
        uint64_t v49 = swift_slowAlloc();
        os_log_type_t v50 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = v67;
        id v51 = v25;
        uint64_t v52 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v49 + 4) = v52;
        void *v50 = v52;

        *(_WORD *)(v49 + 12) = 2048;
        *(void *)(v49 + 14) = v33;
        _os_log_impl(&dword_1DA795000, v46, v47, "RelevanceCache failed to load with error %@, retry %ld", (uint8_t *)v49, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
        swift_arrayDestroy();
        uint64_t v53 = v50;
        uint64_t v5 = v79;
        MEMORY[0x1E0178DA0](v53, -1, -1);
        uint64_t v54 = v49;
        uint64_t v19 = v83;
        MEMORY[0x1E0178DA0](v54, -1, -1);
      }
      else
      {
      }
      uint64_t v3 = 0;
      uint64_t v9 = v84;
    }
LABEL_4:
    long long v22 = v33 + 1;
    if (v22 == (uint8_t *)3)
    {
      sub_1DA809348();
      swift_allocError();
      *uint64_t v55 = 3;
      swift_willThrow();
      return;
    }
  }
}

uint64_t sub_1DA805D5C()
{
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  __swift_project_boxed_opaque_existential_0(v0 + 19, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  unint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    goto LABEL_13;
  }
  MEMORY[0x1F4188790](v4);
  sub_1DA7A1A08(0, &qword_1EBE64D48);
  swift_getKeyPath();
  swift_retain();
  uint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = sub_1DA807F30(v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DA98CBD8();
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1DA806010(v5);
    return swift_bridgeObjectRelease();
  }
LABEL_4:
  unint64_t v18 = v5;
  uint64_t result = sub_1DA98CAE8();
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v1;
    uint64_t v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x1E0177C00](v10, v7);
      }
      else {
        id v11 = *(id *)(v7 + 8 * v10 + 32);
      }
      uint64_t v12 = v11;
      ++v10;
      id v13 = objc_msgSend(v11, sel_extensionIdentity, v17);
      id v14 = objc_msgSend(v12, sel_kind);
      sub_1DA98C038();

      id v15 = objc_allocWithZone(MEMORY[0x1E4F58EB8]);
      uint64_t v16 = (void *)sub_1DA98C008();
      swift_bridgeObjectRelease();
      objc_msgSend(v15, sel_initWithExtensionIdentity_kind_, v13, v16);

      sub_1DA98CAB8();
      sub_1DA98CAF8();
      sub_1DA98CB08();
      sub_1DA98CAC8();
    }
    while (v8 != v10);
    unint64_t v5 = v18;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_1DA806010(unint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  v27[1] = *(id *)MEMORY[0x1E4F143B8];
  if (qword_1EBE5A8E0 != -1) {
    goto LABEL_19;
  }
  while (1)
  {
    uint64_t v6 = sub_1DA989F38();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBE6F288);
    unint64_t v7 = sub_1DA989F18();
    os_log_type_t v8 = sub_1DA98C528();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1DA795000, v7, v8, "RelevanceCache rebuilding...", v9, 2u);
      MEMORY[0x1E0178DA0](v9, -1, -1);
    }

    uint64_t v10 = self;
    id v11 = objc_msgSend(v10, sel_defaultManager);
    uint64_t v12 = (void *)sub_1DA9893A8();
    v27[0] = 0;
    unsigned int v13 = objc_msgSend(v11, sel_removeItemAtURL_error_, v12, v27);

    id v14 = v27[0];
    if (!v13) {
      break;
    }
    id v15 = v27[0];
    id v16 = objc_msgSend(v10, sel_defaultManager);
    uint64_t v17 = (void *)sub_1DA9893A8();
    v27[0] = 0;
    unsigned int v18 = objc_msgSend(v16, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v17, 1, 0, v27);

    id v14 = v27[0];
    if (!v18) {
      break;
    }
    sub_1DA989958();
    id v19 = v14;
    sub_1DA989448();
    uint64_t v20 = sub_1DA989968();
    if (v3) {
      return;
    }
    *(void *)(v4 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache) = v20;
    swift_release();
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1DA98CBD8();
      if (!v3)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v3) {
        goto LABEL_15;
      }
    }
    uint64_t v21 = 4;
    while (1)
    {
      id v22 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E0177C00](v21 - 4, a1) : *(id *)(a1 + 8 * v21);
      uint64_t v23 = v22;
      uint64_t v24 = v21 - 3;
      if (__OFADD__(v21 - 4, 1)) {
        break;
      }
      id v25 = (void *)MEMORY[0x1E0178400]();
      sub_1DA80633C(v4, v23);

      ++v21;
      if (v24 == v3) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_19:
    swift_once();
  }
  id v26 = v14;
  sub_1DA9892D8();

  swift_willThrow();
}

uint64_t sub_1DA80633C(uint64_t a1, void *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DA989478();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v46 - v13;
  sub_1DA803CFC(a2, (uint64_t)v7);
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return sub_1DA802060((uint64_t)v7);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1DA802060((uint64_t)v7);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  if (qword_1EBE5A8E0 != -1) {
    swift_once();
  }
  id v51 = v12;
  uint64_t v16 = sub_1DA989F38();
  uint64_t v17 = (void *)__swift_project_value_buffer(v16, (uint64_t)qword_1EBE6F288);
  unsigned int v18 = a2;
  id v19 = sub_1DA989F18();
  os_log_type_t v20 = sub_1DA98C528();
  int v21 = v20;
  BOOL v22 = os_log_type_enabled(v19, v20);
  uint64_t v52 = v14;
  id v50 = v17;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    LODWORD(v49) = v21;
    uint64_t v24 = (uint8_t *)v23;
    os_log_type_t v47 = (void *)swift_slowAlloc();
    BOOL v48 = v24;
    *(_DWORD *)uint64_t v24 = 138412290;
    uint64_t v46 = v24 + 4;
    uint64_t v54 = v18;
    id v25 = v18;
    sub_1DA98C858();
    id v26 = v47;
    *os_log_type_t v47 = v18;

    id v14 = v52;
    uint64_t v27 = v48;
    _os_log_impl(&dword_1DA795000, v19, (os_log_type_t)v49, "RelevanceCache rebuild insert %@", v48, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v26, -1, -1);
    MEMORY[0x1E0178DA0](v27, -1, -1);
  }
  else
  {

    id v19 = v18;
  }

  uint64_t v28 = sub_1DA989498();
  unint64_t v30 = v29;
  sub_1DA7A1A08(0, &qword_1EBE58EF0);
  sub_1DA98B7B8();
  os_log_type_t v31 = (uint8_t *)sub_1DA98C578();
  uint64_t result = sub_1DA79DA70(v28, v30);
  if (v31)
  {
    if (*(void *)(a1 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache))
    {
      MEMORY[0x1F4188790](result);
      *(&v46 - 2) = v42;
      *(&v46 - 1) = v31;
      uint64_t v43 = v31;
      swift_retain();
      sub_1DA989938();
      swift_release();
      if ((unint64_t)sub_1DA98B798() >> 62) {
        sub_1DA98CBD8();
      }
      swift_bridgeObjectRelease();

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1DA809348();
    id v44 = (void *)swift_allocError();
    *id v45 = 0;
    swift_willThrow();
    BOOL v32 = v51;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v51, v14, v8);
    uint64_t v33 = sub_1DA989F18();
    os_log_type_t v34 = sub_1DA98C528();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      id v50 = v44;
      uint64_t v36 = (uint8_t *)v35;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v54 = v49;
      *(_DWORD *)uint64_t v36 = 136315138;
      BOOL v48 = v36 + 4;
      sub_1DA80939C(qword_1EBE62D08, MEMORY[0x1E4F276F0]);
      uint64_t v37 = sub_1DA98CDD8();
      uint64_t v53 = sub_1DA8C5E00(v37, v38, (uint64_t *)&v54);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void (**)(char *, uint64_t))(v9 + 8);
      v39(v32, v8);
      _os_log_impl(&dword_1DA795000, v33, v34, "Failed to append %s when rebuilding cache", v36, 0xCu);
      uint64_t v40 = v49;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v40, -1, -1);
      MEMORY[0x1E0178DA0](v36, -1, -1);

      uint64_t v41 = v52;
    }
    else
    {

      uint64_t v39 = *(void (**)(char *, uint64_t))(v9 + 8);
      v39(v32, v8);
      uint64_t v41 = v14;
    }
    return ((uint64_t (*)(char *, uint64_t))v39)(v41, v8);
  }
  return result;
}

void sub_1DA806A44(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache;
  if (*(void *)(v1 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache))
  {
    swift_retain();
    uint64_t v5 = sub_1DA989948();
    swift_release();
    id v6 = a1;
    sub_1DA8084A0(v5, v6);

    if (*(void *)(v2 + v3))
    {
      MEMORY[0x1F4188790](v7);
      swift_retain();
      sub_1DA989938();
      swift_release();
      swift_release();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1DA806B40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1DA98C948();
    sub_1DA7A1A08(0, &qword_1EBE5AB88);
    sub_1DA8092E0();
    sub_1DA98C418();
    uint64_t v2 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v17 = a2 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_27;
    }
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v9) {
      goto LABEL_30;
    }
    unint64_t v15 = *(void *)(v17 + 8 * v14);
    uint64_t v12 = v4 + 1;
    if (!v15)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        goto LABEL_30;
      }
      unint64_t v15 = *(void *)(v17 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          goto LABEL_30;
        }
        unint64_t v15 = *(void *)(v17 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            goto LABEL_30;
          }
          unint64_t v15 = *(void *)(v17 + 8 * v12);
          if (!v15)
          {
            uint64_t v16 = v4 + 5;
            while (v9 != v16)
            {
              unint64_t v15 = *(void *)(v17 + 8 * v16++);
              if (v15)
              {
                uint64_t v12 = v16 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1DA8092D8();
            return;
          }
        }
      }
    }
LABEL_26:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_27:
    id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_30;
    }
    while (1)
    {
      sub_1DA989B58();

      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1DA98C988())
      {
        sub_1DA7A1A08(0, &qword_1EBE5AB88);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v23;
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
}

uint64_t sub_1DA806DE4(uint64_t result)
{
  uint64_t v3 = OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache;
  if (!*(void *)(v1 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache))
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v4 = result;
  swift_retain();
  uint64_t v5 = sub_1DA989948();
  swift_release();
  swift_bridgeObjectRetain();
  sub_1DA808C80(v5, v4);
  uint64_t v7 = v6;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v1 + v3);
  if (!v8)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  MEMORY[0x1F4188790](result);
  swift_retain();
  sub_1DA989938();
  swift_release();
  if (!v2) {
    uint64_t v8 = sub_1DA807B1C(v7, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1DA8EB8CC);
  }
  swift_release();
  return v8;
}

void sub_1DA806F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1DA98C948();
    sub_1DA7A1A08(0, &qword_1EBE5AB88);
    sub_1DA8092E0();
    sub_1DA98C418();
    uint64_t v2 = v32;
    uint64_t v29 = v33;
    uint64_t v5 = v34;
    uint64_t v4 = v35;
    unint64_t v6 = v36;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v29 = a2 + 56;
    uint64_t v5 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v28 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v10 = &unk_1EBE5A000;
  while (v2 < 0)
  {
    if (!sub_1DA98C988()) {
      goto LABEL_35;
    }
    sub_1DA7A1A08(0, &qword_1EBE5AB88);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v37;
    swift_unknownObjectRelease();
    uint64_t v13 = v4;
    uint64_t v31 = v6;
    if (!v37) {
      goto LABEL_35;
    }
LABEL_31:
    uint64_t v30 = v13;
    if (v10[284] != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1DA989F38();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EBE6F288);
    uint64_t v19 = v14;
    unint64_t v11 = sub_1DA989F18();
    os_log_type_t v20 = sub_1DA98C528();
    if (os_log_type_enabled(v11, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = v5;
      uint64_t v23 = v2;
      uint64_t v24 = a1;
      id v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      *(void *)(v21 + 4) = v19;
      *id v25 = v14;
      _os_log_impl(&dword_1DA795000, v11, v20, "RelevanceCacheManager removing abandoned key %@", (uint8_t *)v21, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
      swift_arrayDestroy();
      id v26 = v25;
      a1 = v24;
      uint64_t v2 = v23;
      uint64_t v5 = v22;
      MEMORY[0x1E0178DA0](v26, -1, -1);
      uint64_t v27 = v21;
      uint64_t v10 = (void *)&unk_1EBE5A000;
      MEMORY[0x1E0178DA0](v27, -1, -1);
    }
    else
    {

      unint64_t v11 = v19;
    }

    sub_1DA989B58();
    uint64_t v4 = v30;
    unint64_t v6 = v31;
  }
  if (v6)
  {
    uint64_t v31 = (v6 - 1) & v6;
    unint64_t v12 = __clz(__rbit64(v6)) | (v4 << 6);
    uint64_t v13 = v4;
LABEL_30:
    id v14 = *(id *)(*(void *)(v2 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_35;
    }
    goto LABEL_31;
  }
  int64_t v15 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v15 >= v28) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v15);
    uint64_t v13 = v4 + 1;
    if (!v16)
    {
      uint64_t v13 = v4 + 2;
      if (v4 + 2 >= v28) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v29 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v4 + 3;
        if (v4 + 3 >= v28) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v29 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v4 + 4;
          if (v4 + 4 >= v28) {
            goto LABEL_35;
          }
          unint64_t v16 = *(void *)(v29 + 8 * v13);
          if (!v16)
          {
            uint64_t v17 = v4 + 5;
            while (v28 != v17)
            {
              unint64_t v16 = *(void *)(v29 + 8 * v17++);
              if (v16)
              {
                uint64_t v13 = v17 - 1;
                goto LABEL_29;
              }
            }
LABEL_35:
            sub_1DA8092D8();
            return;
          }
        }
      }
    }
LABEL_29:
    uint64_t v31 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t RelevanceCacheManager.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCacheURL;
  uint64_t v2 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t RelevanceCacheManager.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCacheURL;
  uint64_t v2 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t RelevanceCacheManager.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1DA80745C()
{
  return v0;
}

uint64_t sub_1DA807468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for RelevanceCacheManager();
  uint64_t v6 = swift_allocObject();
  RelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(a1, a2, a3);
  return v6;
}

uint64_t sub_1DA8074D8(void *a1)
{
  return sub_1DA80389C(a1);
}

void sub_1DA8074F0(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  void v2[4] = a2;
  sub_1DA8051A8((void (*)(void *__return_ptr))sub_1DA80969C, (uint64_t)v2);
}

uint64_t sub_1DA807530()
{
  return sub_1DA805D5C();
}

void sub_1DA807548(void *a1)
{
}

uint64_t sub_1DA807560(uint64_t a1)
{
  return sub_1DA806DE4(a1);
}

void sub_1DA807578(uint64_t *a1@<X8>)
{
  sub_1DA80423C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DA807598(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5DB8);
  uint64_t result = sub_1DA98CA08();
  uint64_t v9 = result;
  int64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1DA98C798();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

void *sub_1DA8077F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5DA8);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DA8EB7CC(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRelease();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1DA8078C0(uint64_t a1)
{
  return sub_1DA807B1C(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1DA8EB8CC);
}

void *sub_1DA8078D8(unint64_t a1)
{
  return sub_1DA807908(a1, (void (*)(void *, uint64_t, unint64_t))sub_1DA884BDC);
}

void *sub_1DA8078F0(unint64_t a1)
{
  return sub_1DA807908(a1, (void (*)(void *, uint64_t, unint64_t))sub_1DA884DFC);
}

void *sub_1DA807908(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64040);
      uint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      long long v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1DA98CBD8();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v5;
}

void *sub_1DA807A10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58F98);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_1DA8EB8E8((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1DA8092D8();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1DA807B04(uint64_t a1)
{
  return sub_1DA807B1C(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1DA8EBAF8);
}

uint64_t sub_1DA807B1C(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_1DA98C958();
    if (v4) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_3:
  if (v4 <= 0)
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64040);
    uint64_t v5 = (void *)swift_allocObject();
    int64_t v6 = _swift_stdlib_malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 25;
    }
    long long v5[2] = v4;
    v5[3] = (2 * (v7 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = a2(&v10, v5 + 4, v4, a1);
  uint64_t result = sub_1DA8092D8();
  if (v8 == v4) {
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

void *sub_1DA807C28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64040);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  int64_t v6 = sub_1DA8EBE10(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1DA8092D8();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t (*sub_1DA807D14(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  int64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1DA807E30(v6, a2, a3);
  return sub_1DA807D7C;
}

uint64_t (*sub_1DA807D80(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  int64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1DA807EB0(v6, a2, a3);
  return sub_1DA807D7C;
}

void sub_1DA807DE8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1DA807E30(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1E0177C00](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s9ChronoKit16LayerSnapshotterC14SupportedLayerOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1DA807EB0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1E0177C00](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for LayerSnapshotter.SupportedLayer;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA807F30(uint64_t a1)
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v6) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v8);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    id v11 = *(id *)(*(void *)(a1 + 48) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();

    uint64_t result = sub_1DA884648(v15);
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  unint64_t v13 = *(void *)(v2 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1DA8080E8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a2;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v22 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v22) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    ++v4;
    if (!v16)
    {
      int64_t v4 = v15 + 1;
      if (v15 + 1 >= v22) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v4);
      if (!v16)
      {
        int64_t v4 = v15 + 2;
        if (v15 + 2 >= v22) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v4);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v10 = __clz(__rbit64(v16)) + (v4 << 6);
LABEL_5:
    id v11 = *(void **)(*(void *)(a3 + 48) + 8 * v10);
    sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
    id v12 = v11;
    id v13 = objc_msgSend(v12, sel_extensionIdentity, v19);
    char v14 = sub_1DA98C7A8();

    if (v14)
    {
      *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1DA807598(a1, v19, v21, a3);
        return;
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v22) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v5 + 8 * v17);
  if (v16)
  {
    int64_t v4 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v4 >= v22) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v4);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1DA8082EC(uint64_t a1, void *a2)
{
  v17[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  unint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    unint64_t v9 = (char *)v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    sub_1DA8080E8((unint64_t *)v9, v6, a1);
    uint64_t v12 = v11;
    swift_release();

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    id v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    id v14 = v8;
    sub_1DA8080E8((unint64_t *)v13, v6, a1);
    uint64_t v12 = v15;
    swift_release();

    MEMORY[0x1E0178DA0](v13, -1, -1);
  }
  return v12;
}

uint64_t sub_1DA8084A0(uint64_t a1, void *a2)
{
  if ((a1 & 0xC000000000000001) == 0) {
    return sub_1DA8082EC(a1, a2);
  }
  uint64_t v2 = MEMORY[0x1E4FBC870];
  uint64_t v19 = MEMORY[0x1E4FBC870];
  id v3 = a2;
  sub_1DA98C948();
  if (sub_1DA98C988())
  {
    sub_1DA7A1A08(0, &qword_1EBE5AB88);
    do
    {
      swift_dynamicCast();
      sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
      id v4 = objc_msgSend(v18, sel_extensionIdentity);
      char v5 = sub_1DA98C7A8();

      if (v5)
      {
        uint64_t v6 = v19;
        unint64_t v7 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v7)
        {
          sub_1DA87E588(v7 + 1);
          uint64_t v6 = v19;
        }
        uint64_t result = sub_1DA98C798();
        uint64_t v9 = v6 + 56;
        uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v11 = result & ~v10;
        unint64_t v12 = v11 >> 6;
        if (((-1 << v11) & ~*(void *)(v6 + 56 + 8 * (v11 >> 6))) != 0)
        {
          unint64_t v13 = __clz(__rbit64((-1 << v11) & ~*(void *)(v6 + 56 + 8 * (v11 >> 6)))) | v11 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v10) >> 6;
          do
          {
            if (++v12 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v12 == v15;
            if (v12 == v15) {
              unint64_t v12 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v9 + 8 * v12);
          }
          while (v17 == -1);
          unint64_t v13 = __clz(__rbit64(~v17)) + (v12 << 6);
        }
        *(void *)(v9 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        *(void *)(*(void *)(v6 + 48) + 8 * v13) = v18;
        ++*(void *)(v6 + 16);
      }
      else
      {
      }
    }
    while (sub_1DA98C988());
    uint64_t v2 = v19;
  }

  swift_release();
  return v2;
}

void sub_1DA808704(uint64_t a1)
{
  sub_1DA806B40(a1, *(void *)(v1 + 16));
}

void sub_1DA808720(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = a3;
  int64_t v6 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v35 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v36 = a4 & 0xFFFFFFFFFFFFFF8;
  unint64_t v38 = a4 & 0xC000000000000001;
  while (1)
  {
LABEL_5:
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_21;
    }
    int64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_50;
    }
    if (v12 >= v35)
    {
LABEL_47:
      swift_retain();
      sub_1DA807598(a1, a2, v33, v5);
      return;
    }
    unint64_t v13 = *(void *)(v34 + 8 * v12);
    ++v6;
    if (!v13)
    {
      int64_t v6 = v12 + 1;
      if (v12 + 1 >= v35) {
        goto LABEL_47;
      }
      unint64_t v13 = *(void *)(v34 + 8 * v6);
      if (!v13)
      {
        int64_t v6 = v12 + 2;
        if (v12 + 2 >= v35) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v34 + 8 * v6);
        if (!v13) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_21:
    unint64_t v15 = *(void **)(*(void *)(v5 + 48) + 8 * v11);
    if (a4 >> 62)
    {
      id v29 = v15;
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1DA98CBD8();
      if (!v16)
      {
LABEL_45:

        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v36 + 16);
      id v17 = v15;
      swift_bridgeObjectRetain();
      if (!v16) {
        goto LABEL_45;
      }
    }
    unint64_t v37 = v11;
    if (v38) {
      id v18 = (id)MEMORY[0x1E0177C00](0, a4);
    }
    else {
      id v18 = *(id *)(a4 + 32);
    }
    uint64_t v19 = v18;
    sub_1DA7A1A08(0, &qword_1EBE5AB88);
    char v20 = sub_1DA98C7A8();

    if (v20)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      if (v16 != 1)
      {
        if (v38)
        {
          uint64_t v21 = 1;
          while (1)
          {
            MEMORY[0x1E0177C00](v21, a4);
            uint64_t v22 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              break;
            }
            char v23 = sub_1DA98C7A8();
            swift_unknownObjectRelease();
            if (v23) {
              goto LABEL_42;
            }
            ++v21;
            if (v22 == v16) {
              goto LABEL_37;
            }
          }
          __break(1u);
        }
        else
        {
          uint64_t v24 = 5;
          while (1)
          {
            uint64_t v25 = v24 - 3;
            if (__OFADD__(v24 - 4, 1)) {
              break;
            }
            id v26 = *(id *)(a4 + 8 * v24);
            char v27 = sub_1DA98C7A8();

            if (v27)
            {
LABEL_42:

              swift_bridgeObjectRelease();
              uint64_t v5 = a3;
              goto LABEL_5;
            }
            ++v24;
            if (v25 == v16)
            {
LABEL_37:

              swift_bridgeObjectRelease();
              uint64_t v5 = a3;
              goto LABEL_38;
            }
          }
        }
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }

      swift_bridgeObjectRelease();
LABEL_38:
      unint64_t v11 = v37;
LABEL_39:
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v33++, 1)) {
        goto LABEL_51;
      }
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v35) {
    goto LABEL_47;
  }
  unint64_t v13 = *(void *)(v34 + 8 * v14);
  if (v13)
  {
    int64_t v6 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v6 >= v35) {
      goto LABEL_47;
    }
    unint64_t v13 = *(void *)(v34 + 8 * v6);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_52:
  __break(1u);
}

uint64_t sub_1DA808AB4(uint64_t a1, unint64_t a2)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_1DA808720((void *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    uint64_t v11 = v10;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    int64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    sub_1DA808720((unint64_t *)v12, v7, a1, a2);
    uint64_t v11 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1E0178DA0](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

void sub_1DA808C80(uint64_t a1, unint64_t a2)
{
  if ((a1 & 0xC000000000000001) == 0)
  {
    sub_1DA808AB4(a1, a2);
    return;
  }
  uint64_t v28 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain();
  sub_1DA98C948();
  if (!sub_1DA98C988())
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  sub_1DA7A1A08(0, &qword_1EBE5AB88);
  unint64_t v26 = a2 & 0xC000000000000001;
  while (1)
  {
    swift_dynamicCast();
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1DA98CBD8();
      if (!v9) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_14;
      }
    }
    id v10 = v26 ? (id)MEMORY[0x1E0177C00](0, a2) : *(id *)(a2 + 32);
    uint64_t v11 = v10;
    char v12 = sub_1DA98C7A8();

    if ((v12 & 1) == 0) {
      break;
    }
LABEL_35:
    swift_bridgeObjectRelease();

LABEL_7:
    if (!sub_1DA98C988()) {
      goto LABEL_40;
    }
  }
  if (v9 == 1)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v13 = v28;
    unint64_t v14 = *(void *)(v28 + 16);
    if (*(void *)(v28 + 24) <= v14)
    {
      sub_1DA87E588(v14 + 1);
      uint64_t v13 = v28;
    }
    uint64_t v3 = sub_1DA98C798();
    uint64_t v4 = v13 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v6 = v3 & ~v5;
    unint64_t v7 = v6 >> 6;
    if (((-1 << v6) & ~*(void *)(v13 + 56 + 8 * (v6 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v13 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v15 = 0;
      unint64_t v16 = (unint64_t)(63 - v5) >> 6;
      do
      {
        if (++v7 == v16 && (v15 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v17 = v7 == v16;
        if (v7 == v16) {
          unint64_t v7 = 0;
        }
        v15 |= v17;
        uint64_t v18 = *(void *)(v4 + 8 * v7);
      }
      while (v18 == -1);
      unint64_t v8 = __clz(__rbit64(~v18)) + (v7 << 6);
    }
    *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v13 + 48) + 8 * v8) = v27;
    ++*(void *)(v13 + 16);
    goto LABEL_7;
  }
  if (v26)
  {
    uint64_t v19 = 1;
    while (1)
    {
      MEMORY[0x1E0177C00](v19, a2);
      uint64_t v20 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        break;
      }
      char v21 = sub_1DA98C7A8();
      swift_unknownObjectRelease();
      if (v21) {
        goto LABEL_35;
      }
      ++v19;
      if (v20 == v9) {
        goto LABEL_14;
      }
    }
LABEL_41:
    __break(1u);
  }
  else
  {
    uint64_t v22 = 5;
    while (1)
    {
      uint64_t v23 = v22 - 3;
      if (__OFADD__(v22 - 4, 1)) {
        break;
      }
      id v24 = *(id *)(a2 + 8 * v22);
      char v25 = sub_1DA98C7A8();

      if (v25) {
        goto LABEL_35;
      }
      ++v22;
      if (v23 == v9) {
        goto LABEL_14;
      }
    }
  }
  __break(1u);
}

void sub_1DA809008(uint64_t a1)
{
  sub_1DA806F2C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1DA809024(uint64_t a1)
{
  uint64_t result = sub_1DA80939C(&qword_1EBE5A9D0, (void (*)(uint64_t))type metadata accessor for RelevanceCacheManager);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for RelevanceCacheManager()
{
  uint64_t result = qword_1EBE5A9E0;
  if (!qword_1EBE5A9E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DA8090C8()
{
  return type metadata accessor for RelevanceCacheManager();
}

uint64_t sub_1DA8090D0()
{
  uint64_t result = sub_1DA989478();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for RelevanceCacheManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RelevanceCacheManager);
}

uint64_t dispatch thunk of RelevanceCacheManager.__allocating_init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of RelevanceCacheManager.archiveFilePromise(relevanceKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of RelevanceCacheManager.ingestFetchResult(for:at:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of RelevanceCacheManager.rebuildCache()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of RelevanceCacheManager.remove(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of RelevanceCacheManager.removeAll(keeping:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t sub_1DA8092D8()
{
  return swift_release();
}

unint64_t sub_1DA8092E0()
{
  unint64_t result = qword_1EA8E5DB0;
  if (!qword_1EA8E5DB0)
  {
    sub_1DA7A1A08(255, &qword_1EBE5AB88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5DB0);
  }
  return result;
}

unint64_t sub_1DA809348()
{
  unint64_t result = qword_1EA8E5DC0;
  if (!qword_1EA8E5DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5DC0);
  }
  return result;
}

uint64_t sub_1DA80939C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DA8093E4(uint64_t a1)
{
  sub_1DA804424(a1, *(void **)(v1 + 16));
}

void destroy for RelevanceCacheManagerErrorCode(void **a1)
{
  uint64_t v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if (v2 - 1 < 0) {
}
  }

void *_s9ChronoKit30RelevanceCacheManagerErrorCodeOwCP_0(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((int)v4 - 1 < 0) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void **assignWithCopy for RelevanceCacheManagerErrorCode(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  else {
    id v5 = *a1;
  }
  int v6 = v5 - 1;
  unint64_t v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  int v8 = v4 - 1;
  if (v6 < 0)
  {
    if (v8 < 0)
    {
      id v11 = v7;
      *a1 = v7;
    }
    else
    {

      *a1 = *a2;
    }
  }
  else
  {
    if (v8 < 0) {
      id v9 = v7;
    }
    *a1 = v7;
  }
  return a1;
}

void **assignWithTake for RelevanceCacheManagerErrorCode(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  int v4 = -1;
  if ((unint64_t)v3 < 0xFFFFFFFF) {
    int v4 = (int)v3;
  }
  unint64_t v5 = *a2;
  if (v4 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (v5 < 0xFFFFFFFF) {
      unint64_t v6 = *a2;
    }
    if ((int)v6 - 1 < 0)
    {
      *a1 = (void *)v5;

      return a1;
    }
  }
  *a1 = (void *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for RelevanceCacheManagerErrorCode(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 2;
  if (v5 >= 4) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RelevanceCacheManagerErrorCode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_1DA809628(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_1DA80964C(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    a2 -= 0x7FFFFFFF;
    goto LABEL_5;
  }
  if (a2) {
LABEL_5:
  }
    *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for RelevanceCacheManagerErrorCode()
{
  return &type metadata for RelevanceCacheManagerErrorCode;
}

void sub_1DA809684(uint64_t a1)
{
}

void sub_1DA80969C(uint64_t *a1@<X8>)
{
}

uint64_t sub_1DA8096B8()
{
  return sub_1DA809A6C(&qword_1EA8E5DC8, &qword_1EA8E5DD0);
}

uint64_t sub_1DA8096E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA809D14(&OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel, a1);
}

uint64_t sub_1DA8096EC(uint64_t a1)
{
  return sub_1DA809DB4(a1, &OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel, MEMORY[0x1E4F1AB78]);
}

void (*sub_1DA80970C(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1DA98B9E8();
  void v3[4] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[5] = v5;
  unsigned int v6 = malloc(*(void *)(v5 + 64));
  uint64_t v7 = OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel;
  void v3[6] = v6;
  v3[7] = v7;
  swift_beginAccess();
  return sub_1DA8097D8;
}

void sub_1DA8097D8(void **a1, char a2)
{
}

uint64_t sub_1DA8097F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FixedDataProtectionMonitor.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel;
  uint64_t v2 = sub_1DA98B9E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t FixedDataProtectionMonitor.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel;
  uint64_t v2 = sub_1DA98B9E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA809988(uint64_t a1, uint64_t a2)
{
  return sub_1DA80B100(a1, a2, &qword_1EA8E5DC8, &qword_1EA8E5DD0);
}

uint64_t sub_1DA8099B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA80B184(&OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel, a1);
}

uint64_t sub_1DA8099BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DA809A44()
{
  return sub_1DA809A6C(&qword_1EBE66B68, &qword_1EBE66B60);
}

uint64_t sub_1DA809A6C(uint64_t *a1, unint64_t *a2)
{
  return sub_1DA98A0F8();
}

uint64_t sub_1DA809ADC@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  swift_beginAccess();
  uint64_t v5 = sub_1DA98B9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a3, v4, v5);
}

uint64_t sub_1DA809B60(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(char *))
{
  uint64_t v10 = sub_1DA98B9E8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)&v21 - v15;
  BOOL v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v17((char *)&v21 - v15, a1, v10);
  uint64_t v18 = *a2 + *a5;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 24))(v18, v16, v10);
  swift_endAccess();
  v17(v14, v18, v10);
  a6(v14);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

uint64_t sub_1DA809D08@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA809D14(&OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel, a1);
}

uint64_t sub_1DA809D14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  uint64_t v5 = sub_1DA98B9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1DA809D94(uint64_t a1)
{
  return sub_1DA809DB4(a1, &OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel, MEMORY[0x1E4F1ABA8]);
}

uint64_t sub_1DA809DB4(uint64_t a1, void *a2, void (*a3)(char *))
{
  uint64_t v7 = sub_1DA98B9E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v3 + *a2;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, a1, v7);
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  a3(v10);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  v12(v10, v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v12)(a1, v7);
}

void (*sub_1DA809F14(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1DA98B9E8();
  void v3[4] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[5] = v5;
  unsigned int v6 = malloc(*(void *)(v5 + 64));
  uint64_t v7 = OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel;
  void v3[6] = v6;
  v3[7] = v7;
  swift_beginAccess();
  return sub_1DA809FE0;
}

void sub_1DA809FE0(void **a1, char a2)
{
}

void sub_1DA809FF8(void **a1, char a2, void (*a3)(void *))
{
  uint64_t v5 = *a1;
  swift_endAccess();
  unsigned int v6 = (void *)v5[6];
  if ((a2 & 1) == 0)
  {
    uint64_t v7 = v5[4];
    uint64_t v8 = v5[5];
    (*(void (**)(void, void, uint64_t))(v8 + 16))(v5[6], v5[3] + v5[7], v7);
    a3(v6);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  free(v6);

  free(v5);
}

uint64_t DataProtectionMonitor.keybagStateProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7A1A44(v1 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider, a1);
}

uint64_t DataProtectionMonitor.__allocating_init(keybagStateProvider:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DataProtectionMonitor.init(keybagStateProvider:)(a1);
  return v2;
}

uint64_t *DataProtectionMonitor.init(keybagStateProvider:)(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1DA98B9E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = *MEMORY[0x1E4F46D38];
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v8((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B68);
  swift_allocObject();
  v1[2] = sub_1DA98A038();
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_token) = 0;
  sub_1DA7A1A44((uint64_t)a1, (uint64_t)v1 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider);
  v8((char *)v1 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel, v7, v4);
  sub_1DA80A298((uint64_t)v1, a1, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1DA80A298(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v53 = a1;
  uint64_t v54 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67060);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  uint64_t v48 = v5;
  MEMORY[0x1F4188790](v4);
  id v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67080);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  uint64_t v50 = v8;
  MEMORY[0x1F4188790](v7);
  id v45 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67070);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v51 = v10;
  uint64_t v52 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v46 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1DA989978();
  uint64_t v13 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1DA989998();
  uint64_t v40 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  BOOL v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1DA98B9E8();
  uint64_t v18 = *(void *)(v42 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v42);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v40 - v22;
  __swift_project_boxed_opaque_existential_0(a2, a2[3]);
  sub_1DA989A28();
  __swift_project_boxed_opaque_existential_0(a2, a2[3]);
  char v24 = sub_1DA989A48();
  uint64_t v25 = v41;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4F58968], v41);
  sub_1DA80AD34((uint64_t)v17, v24 & 1, (uint64_t)v15, (uint64_t)v23);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v25);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v43);
  uint64_t v26 = v53 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel;
  swift_beginAccess();
  uint64_t v27 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 24))(v26, v23, v42);
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v26, v27);
  sub_1DA98A028();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v18 + 8);
  v28(v21, v27);
  v28(v23, v27);
  __swift_project_boxed_opaque_existential_0(a2, a2[3]);
  uint64_t v56 = sub_1DA989A38();
  __swift_project_boxed_opaque_existential_0(a2, a2[3]);
  uint64_t v55 = sub_1DA989A58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67090);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B58);
  sub_1DA7A0410(&qword_1EBE67088, &qword_1EBE67090);
  sub_1DA7A0410(&qword_1EBE66B50, &qword_1EBE66B58);
  id v29 = v44;
  sub_1DA98A118();
  swift_release();
  swift_release();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v54;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_1DA80BA68;
  *(void *)(v31 + 24) = v30;
  sub_1DA7A0410(&qword_1EBE67058, &qword_1EBE67060);
  uint64_t v32 = v45;
  uint64_t v33 = v47;
  sub_1DA98A128();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v33);
  sub_1DA7A0410(&qword_1EBE67078, &qword_1EBE67080);
  sub_1DA80BAFC();
  uint64_t v34 = v46;
  uint64_t v35 = v49;
  sub_1DA98A198();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v35);
  swift_allocObject();
  uint64_t v36 = v53;
  swift_weakInit();
  sub_1DA7A0410(&qword_1EBE67068, &qword_1EBE67070);
  uint64_t v37 = v51;
  uint64_t v38 = sub_1DA98A1A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v37);
  *(void *)(v36 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_token) = v38;
  return swift_release();
}

uint64_t DataProtectionMonitor.deinit()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_token))
  {
    swift_retain();
    sub_1DA989FA8();
    swift_release();
  }
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel;
  uint64_t v3 = sub_1DA98B9E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1(v1 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider);
  swift_release();
  return v1;
}

uint64_t DataProtectionMonitor.__deallocating_deinit()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_token))
  {
    swift_retain();
    sub_1DA989FA8();
    swift_release();
  }
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel;
  uint64_t v3 = sub_1DA98B9E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1(v1 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA80ABCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1DA989998();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)(v2 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider);
  __swift_project_boxed_opaque_existential_0((void *)(v2 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider), *(void *)(v2 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider + 24));
  sub_1DA989A28();
  __swift_project_boxed_opaque_existential_0(v9, v9[3]);
  char v10 = sub_1DA989A48();
  sub_1DA80AD34((uint64_t)v8, v10 & 1, a1, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DA80AD34@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67050);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = &v11[*(int *)(v9 + 48)];
  uint64_t v13 = sub_1DA989998();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, a1, v13);
  uint64_t v15 = sub_1DA989978();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v12, a3, v15);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v11, v13);
  if (v17 == *MEMORY[0x1E4F589B0])
  {
    uint64_t v18 = *MEMORY[0x1E4F46D38];
    uint64_t v19 = sub_1DA98B9E8();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);
    uint64_t v21 = a4;
    uint64_t v22 = v18;
LABEL_3:
    v20(v21, v22, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v12, v15);
  }
  if (v17 == *MEMORY[0x1E4F589C0]) {
    goto LABEL_5;
  }
  if (v17 == *MEMORY[0x1E4F589A0])
  {
    uint64_t v19 = sub_1DA98B9E8();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);
    uint64_t v27 = (unsigned int *)MEMORY[0x1E4F46D30];
    if ((a2 & 1) == 0) {
      uint64_t v27 = (unsigned int *)MEMORY[0x1E4F46D38];
    }
    uint64_t v22 = *v27;
    uint64_t v21 = a4;
    goto LABEL_3;
  }
  if (v17 == *MEMORY[0x1E4F589A8])
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v15);
LABEL_15:
    char v24 = (unsigned int *)MEMORY[0x1E4F46D28];
    goto LABEL_7;
  }
  if (v17 != *MEMORY[0x1E4F589B8] && v17 != *MEMORY[0x1E4F58998] && v17 != *MEMORY[0x1E4F58990])
  {
    if (v17 == *MEMORY[0x1E4F58988])
    {
      int v30 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v12, v15);
      if (v30 == *MEMORY[0x1E4F58960]) {
        goto LABEL_15;
      }
      if (v30 == *MEMORY[0x1E4F58968]) {
        goto LABEL_6;
      }
LABEL_28:
      uint64_t result = sub_1DA98CE48();
      __break(1u);
      return result;
    }
    if (v17 != *MEMORY[0x1E4F58980]) {
      goto LABEL_28;
    }
  }
LABEL_5:
  (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v15);
LABEL_6:
  char v24 = (unsigned int *)MEMORY[0x1E4F46D20];
LABEL_7:
  uint64_t v25 = *v24;
  uint64_t v26 = sub_1DA98B9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(a4, v25, v26);
}

uint64_t sub_1DA80B0D8(uint64_t a1, uint64_t a2)
{
  return sub_1DA80B100(a1, a2, &qword_1EBE66B68, &qword_1EBE66B60);
}

uint64_t sub_1DA80B100(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  return sub_1DA98A0F8();
}

uint64_t sub_1DA80B178@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA80B184(&OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel, a1);
}

uint64_t sub_1DA80B184@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2 + *a1;
  swift_beginAccess();
  uint64_t v5 = sub_1DA98B9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1DA80B208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA80ABCC(a1, a2);
}

uint64_t sub_1DA80B22C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA809ADC(a1, &OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel, a2);
}

uint64_t sub_1DA80B24C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA809B60(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel, MEMORY[0x1E4F1AB78]);
}

uint64_t sub_1DA80B280@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA809ADC(a1, &OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel, a2);
}

uint64_t sub_1DA80B2A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA809B60(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel, MEMORY[0x1E4F1ABA8]);
}

uint64_t sub_1DA80B2D4()
{
  return type metadata accessor for FixedDataProtectionMonitor(0);
}

uint64_t type metadata accessor for FixedDataProtectionMonitor(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EA8E5DD8);
}

uint64_t sub_1DA80B2FC()
{
  uint64_t result = sub_1DA98B9E8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FixedDataProtectionMonitor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FixedDataProtectionMonitor);
}

uint64_t dispatch thunk of FixedDataProtectionMonitor.maxUnlockedProtectionLevelPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of FixedDataProtectionMonitor.maxUnlockedProtectionLevel.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of FixedDataProtectionMonitor.maxUnlockedProtectionLevel.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of FixedDataProtectionMonitor.maxUnlockedProtectionLevel.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of FixedDataProtectionMonitor.unlockedProtectionLevel(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_1DA80B468()
{
  return type metadata accessor for DataProtectionMonitor(0);
}

uint64_t type metadata accessor for DataProtectionMonitor(uint64_t a1)
{
  return sub_1DA7A88D4(a1, qword_1EBE66B78);
}

uint64_t sub_1DA80B490()
{
  uint64_t result = sub_1DA98B9E8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DataProtectionMonitor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DataProtectionMonitor);
}

uint64_t dispatch thunk of DataProtectionMonitor.maxUnlockedProtectionLevelPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DataProtectionMonitor.maxUnlockedProtectionLevel.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DataProtectionMonitor.maxUnlockedProtectionLevel.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DataProtectionMonitor.maxUnlockedProtectionLevel.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DataProtectionMonitor.__allocating_init(keybagStateProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DataProtectionMonitor.unlockedProtectionLevel(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_1DA80B624@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v31 = a2;
  uint64_t v32 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67050);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1DA989978();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v11 = *MEMORY[0x1E4F58968];
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F58968], v7);
  uint64_t v12 = &v6[*(int *)(v4 + 48)];
  uint64_t v13 = sub_1DA989998();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v6, a1, v13);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v12, v10, v7);
  int v15 = (*(uint64_t (**)(unsigned char *, uint64_t))(v14 + 88))(v6, v13);
  if (v15 == *MEMORY[0x1E4F589B0])
  {
    uint64_t v16 = *MEMORY[0x1E4F46D38];
    uint64_t v17 = sub_1DA98B9E8();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);
    uint64_t v19 = v32;
    uint64_t v20 = v16;
LABEL_3:
    v18(v19, v20, v17);
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v12, v7);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v21 = v32;
  if (v15 == *MEMORY[0x1E4F589C0]) {
    goto LABEL_5;
  }
  if (v15 == *MEMORY[0x1E4F589A0])
  {
    uint64_t v17 = sub_1DA98B9E8();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);
    uint64_t v26 = (unsigned int *)MEMORY[0x1E4F46D30];
    if ((v31 & 1) == 0) {
      uint64_t v26 = (unsigned int *)MEMORY[0x1E4F46D38];
    }
    uint64_t v20 = *v26;
    uint64_t v19 = v21;
    goto LABEL_3;
  }
  if (v15 == *MEMORY[0x1E4F589A8])
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v12, v7);
LABEL_15:
    uint64_t v22 = (unsigned int *)MEMORY[0x1E4F46D28];
    goto LABEL_7;
  }
  if (v15 == *MEMORY[0x1E4F589B8] || v15 == *MEMORY[0x1E4F58998] || v15 == *MEMORY[0x1E4F58990]) {
    goto LABEL_5;
  }
  if (v15 != *MEMORY[0x1E4F58988])
  {
    if (v15 != *MEMORY[0x1E4F58980]) {
      goto LABEL_28;
    }
LABEL_5:
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v12, v7);
LABEL_6:
    uint64_t v22 = (unsigned int *)MEMORY[0x1E4F46D20];
LABEL_7:
    uint64_t v23 = *v22;
    uint64_t v24 = sub_1DA98B9E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v21, v23, v24);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
  int v29 = (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 88))(v12, v7);
  if (v29 == *MEMORY[0x1E4F58960]) {
    goto LABEL_15;
  }
  if (v29 == v11) {
    goto LABEL_6;
  }
LABEL_28:
  uint64_t result = sub_1DA98CE48();
  __break(1u);
  return result;
}

uint64_t sub_1DA80BA58()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA80BA68@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  return sub_1DA80B624(a1, a2, a3);
}

uint64_t sub_1DA80BA70()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DA80BAA8(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void))(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5DE8);
  return v3(a1, *(unsigned __int8 *)(a1 + *(int *)(v4 + 48)));
}

unint64_t sub_1DA80BAFC()
{
  unint64_t result = qword_1EBE66AE8;
  if (!qword_1EBE66AE8)
  {
    sub_1DA98B9E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE66AE8);
  }
  return result;
}

uint64_t sub_1DA80BB54()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA80BB8C(uint64_t a1)
{
  uint64_t v2 = sub_1DA98B9E8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v14[-v7];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    int v11 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16);
    v11(v8, a1, v2);
    uint64_t v12 = v10 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel;
    swift_beginAccess();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v3 + 24))(v12, v8, v2);
    swift_endAccess();
    v11(v6, v12, v2);
    sub_1DA98A028();
    uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
    v13(v6, v2);
    v13(v8, v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA80BD58(uint64_t a1)
{
  return sub_1DA80BB8C(a1);
}

uint64_t Topic.suffixed.getter()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  return v2;
}

uint64_t static Topic.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1DA98CE58();
  }
}

ChronoKit::Topic __swiftcall Topic.init(_:)(ChronoKit::Topic result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t Topic.unsuffixed.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ChronoKit::Topic __swiftcall Topic.init(suffixed:)(Swift::String suffixed)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1DA98C178();
  if (v3)
  {
    uint64_t v5 = sub_1DA98C118();
    uint64_t v6 = sub_1DA80BF94(v5);
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E0177290](v6, v8, v10, v12);
    uint64_t v15 = v14;
    uint64_t v3 = swift_bridgeObjectRelease();
    *uint64_t v2 = v13;
    v2[1] = v15;
  }
  else
  {
    __break(1u);
  }
  result.unsuffixed._object = v4;
  result.unsuffixed._countAndFlagsBits = v3;
  return result;
}

uint64_t Topic.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t Topic.hashValue.getter()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA80BF94(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1DA98C138();
    return sub_1DA98C198();
  }
  return result;
}

unint64_t sub_1DA80C034()
{
  unint64_t result = qword_1EBE5A7D8;
  if (!qword_1EBE5A7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE5A7D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Topic()
{
  return &type metadata for Topic;
}

uint64_t sub_1DA80C098(uint64_t a1)
{
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E80);
  uint64_t v3 = MEMORY[0x1F4188790](v58);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v52 = (uint64_t *)((char *)&v45 - v7);
  MEMORY[0x1F4188790](v6);
  uint64_t v51 = (char *)&v45 - v8;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (!v9) {
    return v10;
  }
  uint64_t v45 = v1;
  uint64_t v61 = MEMORY[0x1E4FBC860];
  sub_1DA7F7A64(0, v9, 0);
  uint64_t result = sub_1DA80F8C8(a1);
  unint64_t v13 = result;
  uint64_t v14 = 0;
  uint64_t v15 = a1 + 64;
  char v16 = *(unsigned char *)(a1 + 32);
  uint64_t v53 = a1 + 80;
  uint64_t v49 = (uint64_t *)v5;
  uint64_t v50 = a1;
  int64_t v46 = v9;
  uint64_t v47 = v12;
  uint64_t v48 = a1 + 64;
  uint64_t v17 = v51;
  while ((v13 & 0x8000000000000000) == 0 && (uint64_t)v13 < 1 << v16)
  {
    if ((*(void *)(v15 + 8 * (v13 >> 6)) & (1 << v13)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(a1 + 36) != v12) {
      goto LABEL_28;
    }
    uint64_t v55 = 1 << v13;
    unint64_t v56 = v13 >> 6;
    uint64_t v54 = v14;
    uint64_t v19 = (char *)v17 + *(int *)(v58 + 48);
    uint64_t v20 = *(void *)(a1 + 56);
    uint64_t v21 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v13);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    uint64_t v24 = sub_1DA989638();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
    uint64_t v27 = *(void *)(v25 + 72);
    uint64_t v57 = v13;
    v26(v19, v20 + v27 * v13, v24);
    *uint64_t v17 = v23;
    v17[1] = v22;
    uint64_t v28 = (uint64_t)v52;
    void *v52 = v23;
    *(void *)(v28 + 8) = v22;
    v26((char *)(v28 + *(int *)(v58 + 48)), (unint64_t)v19, v24);
    int v29 = v49;
    sub_1DA7BA440(v28, (uint64_t)v49, &qword_1EBE58E80);
    swift_bridgeObjectRetain_n();
    sub_1DA7A1AE0((uint64_t)v17, &qword_1EBE58E80);
    uint64_t v30 = v29[1];
    uint64_t v59 = *v29;
    uint64_t v60 = v30;
    swift_bridgeObjectRetain();
    sub_1DA98C148();
    if (qword_1EBE63290 != -1) {
      swift_once();
    }
    id v31 = (id)qword_1EBE63318;
    uint64_t v32 = (void *)sub_1DA989568();
    id v33 = objc_msgSend(v31, sel_stringFromDate_, v32);

    sub_1DA98C038();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    uint64_t v34 = v59;
    uint64_t v35 = v60;
    sub_1DA7A1AE0((uint64_t)v29, &qword_1EBE58E80);
    uint64_t v10 = v61;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1DA7F7A64(0, *(void *)(v10 + 16) + 1, 1);
      uint64_t v10 = v61;
    }
    a1 = v50;
    unint64_t v37 = *(void *)(v10 + 16);
    unint64_t v36 = *(void *)(v10 + 24);
    if (v37 >= v36 >> 1)
    {
      uint64_t result = sub_1DA7F7A64(v36 > 1, v37 + 1, 1);
      uint64_t v10 = v61;
    }
    *(void *)(v10 + 16) = v37 + 1;
    uint64_t v38 = v10 + 16 * v37;
    *(void *)(v38 + 32) = v34;
    *(void *)(v38 + 40) = v35;
    char v16 = *(unsigned char *)(a1 + 32);
    unint64_t v13 = 1 << v16;
    if (v57 >= 1 << v16) {
      goto LABEL_29;
    }
    uint64_t v15 = v48;
    unint64_t v39 = v56;
    uint64_t v40 = *(void *)(v48 + 8 * v56);
    if ((v40 & v55) == 0) {
      goto LABEL_30;
    }
    LODWORD(v12) = v47;
    if (*(_DWORD *)(a1 + 36) != v47) {
      goto LABEL_31;
    }
    unint64_t v41 = v40 & (-2 << (v57 & 0x3F));
    if (v41)
    {
      unint64_t v13 = __clz(__rbit64(v41)) | v57 & 0xFFFFFFFFFFFFFFC0;
      int64_t v18 = v46;
    }
    else
    {
      unint64_t v42 = v56 + 1;
      unint64_t v43 = (v13 + 63) >> 6;
      int64_t v18 = v46;
      if (v56 + 1 < v43)
      {
        unint64_t v44 = *(void *)(v48 + 8 * v42);
        if (v44)
        {
LABEL_24:
          unint64_t v13 = __clz(__rbit64(v44)) + (v42 << 6);
        }
        else
        {
          while (v43 - 2 != v39)
          {
            unint64_t v44 = *(void *)(v53 + 8 * v39++);
            if (v44)
            {
              unint64_t v42 = v39 + 1;
              goto LABEL_24;
            }
          }
        }
      }
    }
    uint64_t v14 = v54 + 1;
    if (v54 + 1 == v18) {
      return v10;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t ConfiguredWidgetMetadataCache.__allocating_init(backingStore:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ConfiguredWidgetMetadataCache.init(backingStore:)(a1);
  return v2;
}

void *ConfiguredWidgetMetadataCache.init(backingStore:)(uint64_t a1)
{
  type metadata accessor for UnfairLock();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = (_DWORD *)swift_slowAlloc();
  *uint64_t v4 = 0;
  *(void *)(v3 + 16) = v4;
  v1[2] = v3;
  unint64_t v5 = sub_1DA79CA74(MEMORY[0x1E4FBC860]);
  v1[3] = a1;
  v1[4] = v5;
  uint64_t v6 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1DA80C5F4(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  swift_release();
  return v1;
}

void sub_1DA80C5F4(void *a1)
{
  if (a1[3])
  {
    swift_retain();
    unint64_t v3 = sub_1DA90163C();
    if (v1)
    {
      swift_release();
      if (qword_1EBE59148 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_1DA989F38();
      __swift_project_value_buffer(v4, (uint64_t)qword_1EBE6F0A8);
      id v5 = v1;
      uint64_t v6 = sub_1DA989F18();
      os_log_type_t v7 = sub_1DA98C528();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        int64_t v9 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 138543362;
        uint64_t v28 = sub_1DA9892C8();
        sub_1DA98C858();
        void *v9 = v28;

        _os_log_impl(&dword_1DA795000, v6, v7, "Failed to load cached widget metadata: %{public}@", v8, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v9, -1, -1);
        MEMORY[0x1E0178DA0](v8, -1, -1);
      }
      else
      {
      }
      a1[4] = sub_1DA79CA74(MEMORY[0x1E4FBC860]);
      swift_bridgeObjectRelease();
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(a1[2] + 16));

      return;
    }
    unint64_t v10 = v3;
    swift_release();
  }
  else
  {
    unint64_t v10 = sub_1DA79CA74(MEMORY[0x1E4FBC860]);
  }
  a1[4] = v10;
  swift_bridgeObjectRelease();
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(a1[2] + 16));
  if (qword_1EBE59148 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1DA989F38();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EBE6F0A8);
  swift_retain_n();
  uint64_t v12 = sub_1DA989F18();
  os_log_type_t v13 = sub_1DA98C548();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = v27;
    *(_DWORD *)uint64_t v14 = 136446210;
    sub_1DA989638();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1DA98BE98();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_1DA8C5E00(v15, v17, &v28);
    sub_1DA98C858();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v12, v13, "Start dates for widget ids: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v27, -1, -1);
    MEMORY[0x1E0178DA0](v14, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_1DA80C098(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1DA989F18();
  os_log_type_t v20 = sub_1DA98C548();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v28 = v22;
    *(_DWORD *)uint64_t v21 = 136446210;
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = MEMORY[0x1E0177440](v23, MEMORY[0x1E4FBB1A0]);
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    sub_1DA8C5E00(v24, v26, &v28);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v19, v20, "Loaded cached widget metadata: %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v22, -1, -1);
    MEMORY[0x1E0178DA0](v21, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1DA80CB50(unint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA80CBC4(v1, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));

  return swift_release();
}

uint64_t sub_1DA80CBC4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_1DA989638();
  uint64_t v107 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v103 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v98 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t)&v95 - v11;
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (unint64_t)&v95 - v13;
  uint64_t v106 = a1;
  uint64_t v15 = swift_bridgeObjectRetain();
  unint64_t v16 = (void *)sub_1DA87A6CC(v15);
  uint64_t v114 = v16;
  unint64_t v113 = MEMORY[0x1E4FBC860];
  if (a2 >> 62) {
    goto LABEL_83;
  }
  uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  uint64_t v109 = v5;
  uint64_t v104 = v12;
  if (v17)
  {
    if (v17 < 1)
    {
      __break(1u);
LABEL_88:
      swift_once();
      goto LABEL_24;
    }
    uint64_t v18 = 0;
    uint64_t v108 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 & 0xC000000000000001);
    uint64_t v19 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56);
    uint64_t v102 = (uint8_t *)(v107 + 16);
    os_log_type_t v20 = (uint64_t (**)(unint64_t, uint64_t, uint64_t))(v107 + 48);
    uint64_t v110 = (void *)a2;
    unint64_t v105 = v17;
    do
    {
      if (v108) {
        id v21 = (id)MEMORY[0x1E0177C00](v18, a2);
      }
      else {
        id v21 = *(id *)(a2 + 8 * v18 + 32);
      }
      uint64_t v22 = v21;
      id v23 = objc_msgSend(v21, sel_uniqueIdentifier);
      uint64_t v24 = sub_1DA98C038();
      uint64_t v26 = v25;

      sub_1DA8670AC(v24, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v27 = objc_msgSend(v22, sel_uniqueIdentifier);
      uint64_t v28 = sub_1DA98C038();
      uint64_t v30 = v29;

      uint64_t v31 = *(void *)(v106 + 32);
      if (*(void *)(v31 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v32 = sub_1DA7FDF54(v28, v30);
        if (v33)
        {
          uint64_t v34 = v107;
          uint64_t v35 = v109;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v107 + 16))(v14, *(void *)(v31 + 56) + *(void *)(v107 + 72) * v32, v109);
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v34 + 56))(v14, 0, 1, v35);
        }
        else
        {
          uint64_t v35 = v109;
          (*v19)(v14, 1, 1, v109);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v35 = v109;
        (*v19)(v14, 1, 1, v109);
      }
      swift_bridgeObjectRelease();
      unint64_t v36 = v105;
      int v37 = (*v20)(v14, 1, v35);
      sub_1DA7A1AE0(v14, &qword_1EBE61CC0);
      if (v37 == 1)
      {
        id v38 = v22;
        MEMORY[0x1E0177400]();
        if (*(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DA98C2D8();
        }
        sub_1DA98C308();
        sub_1DA98C2A8();
      }

      ++v18;
      a2 = (unint64_t)v110;
    }
    while (v36 != v18);
    swift_bridgeObjectRelease();
    unint64_t v16 = v114;
    uint64_t v5 = v109;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = (uint64_t)&unk_1EBE59000;
  if (!v16[2]) {
    goto LABEL_27;
  }
  if (qword_1EBE59148 != -1) {
    goto LABEL_88;
  }
LABEL_24:
  uint64_t v39 = sub_1DA989F38();
  __swift_project_value_buffer(v39, (uint64_t)qword_1EBE6F0A8);
  uint64_t v40 = sub_1DA989F18();
  os_log_type_t v41 = sub_1DA98C548();
  if (os_log_type_enabled(v40, v41))
  {
    unint64_t v42 = (uint8_t *)swift_slowAlloc();
    unint64_t v43 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v42 = 138543362;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1DA98C3D8();
    swift_bridgeObjectRelease();
    uint64_t v112 = v44;
    sub_1DA98C858();
    *unint64_t v43 = v44;
    uint64_t v5 = v109;
    _os_log_impl(&dword_1DA795000, v40, v41, "Removing widget metadata entries: %{public}@", v42, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v43, -1, -1);
    MEMORY[0x1E0178DA0](v42, -1, -1);
  }

LABEL_27:
  if (v113 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1DA98CBD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v45 = *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v46 = (uint64_t)v98;
  if (v45)
  {
    if (*(void *)(v2 + 328) != -1) {
      swift_once();
    }
    uint64_t v47 = sub_1DA989F38();
    __swift_project_value_buffer(v47, (uint64_t)qword_1EBE6F0A8);
    uint64_t v48 = sub_1DA989F18();
    int v49 = sub_1DA98C548();
    if (os_log_type_enabled(v48, (os_log_type_t)v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 138543362;
      swift_beginAccess();
      unint64_t v52 = v113;
      if (v113 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v53 = sub_1DA98CBD8();
      }
      else
      {
        uint64_t v53 = *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      LODWORD(v108) = v49;
      uint64_t v110 = v51;
      if (v53)
      {
        uint64_t v102 = v50;
        unint64_t v105 = (unint64_t)v48;
        uint64_t v112 = MEMORY[0x1E4FBC860];
        sub_1DA7F7A64(0, v53 & ~(v53 >> 63), 0);
        if (v53 < 0)
        {
          __break(1u);
LABEL_91:
          uint64_t result = sub_1DA98CEC8();
          __break(1u);
          return result;
        }
        uint64_t v54 = 0;
        uint64_t v55 = v112;
        do
        {
          if ((v52 & 0xC000000000000001) != 0) {
            id v56 = (id)MEMORY[0x1E0177C00](v54, v52);
          }
          else {
            id v56 = *(id *)(v52 + 8 * v54 + 32);
          }
          uint64_t v57 = v56;
          id v58 = objc_msgSend(v56, sel_uniqueIdentifier);
          uint64_t v59 = sub_1DA98C038();
          uint64_t v61 = v60;

          uint64_t v112 = v55;
          unint64_t v63 = *(void *)(v55 + 16);
          unint64_t v62 = *(void *)(v55 + 24);
          if (v63 >= v62 >> 1)
          {
            sub_1DA7F7A64(v62 > 1, v63 + 1, 1);
            uint64_t v55 = v112;
          }
          ++v54;
          *(void *)(v55 + 16) = v63 + 1;
          unint64_t v64 = v55 + 16 * v63;
          *(void *)(v64 + 32) = v59;
          *(void *)(v64 + 40) = v61;
        }
        while (v53 != v54);
        swift_bridgeObjectRelease();
        uint64_t v48 = v105;
        uint64_t v50 = v102;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v65 = sub_1DA98C268();
      swift_bridgeObjectRelease();
      uint64_t v112 = v65;
      sub_1DA98C858();
      long long v66 = v110;
      *uint64_t v110 = v65;
      _os_log_impl(&dword_1DA795000, v48, (os_log_type_t)v108, "Added widget metadata entries: %{public}@", v50, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v66, -1, -1);
      MEMORY[0x1E0178DA0](v50, -1, -1);
      uint64_t v5 = v109;
      uint64_t v46 = (uint64_t)v98;
    }
  }
  uint64_t v67 = *(void *)(v106 + 24);
  if (v67)
  {
    uint64_t v68 = v96;
    sub_1DA8F5E04(0x6957657461647075, 0xEF74655374656764, v67, (uint64_t *)&v114, (uint64_t *)&v113);
    if (v68) {

    }
    uint64_t v96 = 0;
  }
  swift_beginAccess();
  a2 = v113;
  swift_bridgeObjectRetain();
  unint64_t v16 = (void *)sub_1DA79CA74(MEMORY[0x1E4FBC860]);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v46 = (uint64_t)v98;
    unint64_t v14 = sub_1DA98CBD8();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_55;
    }
  }
  else
  {
    unint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
    {
LABEL_55:
      unint64_t v105 = a2 & 0xC000000000000001;
      uint64_t v108 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56);
      uint64_t v101 = (void (**)(char *, uint64_t, uint64_t))(v107 + 32);
      uint64_t v102 = (uint8_t *)(v107 + 48);
      uint64_t v97 = v107 + 40;
      uint64_t v2 = 4;
      unint64_t v100 = a2;
      unint64_t v99 = v14;
      do
      {
        uint64_t v12 = v2 - 4;
        if (v105)
        {
          id v70 = (void *)MEMORY[0x1E0177C00](v2 - 4, a2);
          uint64_t v71 = v2 - 3;
          if (__OFADD__(v12, 1)) {
            goto LABEL_80;
          }
        }
        else
        {
          id v70 = *(id *)(a2 + 8 * v2);
          uint64_t v71 = v2 - 3;
          if (__OFADD__(v12, 1))
          {
LABEL_80:
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            swift_bridgeObjectRetain();
            uint64_t v17 = sub_1DA98CBD8();
            goto LABEL_3;
          }
        }
        uint64_t v110 = v70;
        id v72 = objc_msgSend(v70, sel_uniqueIdentifier);
        a2 = sub_1DA98C038();
        uint64_t v74 = v73;

        uint64_t v12 = v104;
        sub_1DA989628();
        uint64_t v75 = *v108;
        (*v108)(v12, 0, 1, v5);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v102)(v12, 1, v5) == 1)
        {
          sub_1DA7A1AE0(v12, &qword_1EBE61CC0);
          swift_bridgeObjectRetain();
          unint64_t v76 = sub_1DA7FDF54(a2, v74);
          char v78 = v77;
          swift_bridgeObjectRelease();
          if (v78)
          {
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v111 = v16;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1DA919244();
              unint64_t v16 = v111;
            }
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v107 + 32))(v46, v16[7] + *(void *)(v107 + 72) * v76, v5);
            sub_1DA914780(v76, (uint64_t)v16);
            swift_bridgeObjectRelease();
            uint64_t v69 = 0;
          }
          else
          {
            uint64_t v69 = 1;
          }
          a2 = v100;
          v75(v46, v69, 1, v5);
          swift_bridgeObjectRelease();
          sub_1DA7A1AE0(v46, &qword_1EBE61CC0);
        }
        else
        {
          unint64_t v80 = *v101;
          (*v101)(v103, v12, v5);
          uint64_t v5 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v111 = v16;
          unint64_t v14 = sub_1DA7FDF54(a2, v74);
          uint64_t v82 = v16[2];
          BOOL v83 = (v81 & 1) == 0;
          uint64_t v84 = v82 + v83;
          if (__OFADD__(v82, v83)) {
            goto LABEL_81;
          }
          uint64_t v12 = v81;
          if (v16[3] >= v84)
          {
            if ((v5 & 1) == 0) {
              sub_1DA919244();
            }
          }
          else
          {
            sub_1DA90EAEC(v84, v5);
            unint64_t v85 = sub_1DA7FDF54(a2, v74);
            if ((v12 & 1) != (v86 & 1)) {
              goto LABEL_91;
            }
            unint64_t v14 = v85;
          }
          uint64_t v5 = v109;
          unint64_t v16 = v111;
          if (v12)
          {
            (*(void (**)(unint64_t, char *, uint64_t))(v107 + 40))(v111[7] + *(void *)(v107 + 72) * v14, v103, v109);
          }
          else
          {
            v111[(v14 >> 6) + 8] |= 1 << v14;
            id v87 = (unint64_t *)(v16[6] + 16 * v14);
            *id v87 = a2;
            v87[1] = v74;
            v80((char *)(v16[7] + *(void *)(v107 + 72) * v14), (uint64_t)v103, v5);
            uint64_t v88 = v16[2];
            BOOL v89 = __OFADD__(v88, 1);
            uint64_t v90 = v88 + 1;
            if (v89) {
              goto LABEL_82;
            }
            v16[2] = v90;
            swift_bridgeObjectRetain();
          }
          unint64_t v16 = v111;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v46 = (uint64_t)v98;
          a2 = v100;
        }
        unint64_t v14 = v99;
        ++v2;
      }
      while (v71 != v99);
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v91 = v106;
  uint64_t v92 = swift_bridgeObjectRetain();
  uint64_t v93 = sub_1DA80E6C0(v92, (uint64_t *)&v114);
  swift_bridgeObjectRelease();
  *(void *)(v91 + 32) = sub_1DA80DDD0((uint64_t)v16, (uint64_t)v93);
  swift_bridgeObjectRelease();
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v91 + 16) + 16));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA80D954(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v45 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v46 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v40 = *(void (***)(uint64_t, uint64_t))(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v39 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = *a2;
  uint64_t v12 = *a2 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(*a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(*a2 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  while (v15)
  {
    unint64_t v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v19 = v18 | (v17 << 6);
LABEL_5:
    os_log_type_t v20 = (uint64_t *)(*(void *)(v11 + 48) + 16 * v19);
    uint64_t v21 = *v20;
    uint64_t v4 = v20[1];
    swift_bridgeObjectRetain();
    sub_1DA902404(v21, v4);
    swift_bridgeObjectRelease();
    if (v5) {
      return swift_release();
    }
  }
  if (__OFADD__(v17++, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v17 >= v16) {
    goto LABEL_23;
  }
  unint64_t v23 = *(void *)(v12 + 8 * v17);
  if (v23)
  {
LABEL_17:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v17 << 6);
    goto LABEL_5;
  }
  int64_t v24 = v17 + 1;
  if (v17 + 1 >= v16) {
    goto LABEL_23;
  }
  unint64_t v23 = *(void *)(v12 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v17 + 2;
  if (v17 + 2 >= v16) {
    goto LABEL_23;
  }
  unint64_t v23 = *(void *)(v12 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v17 + 3;
  if (v17 + 3 >= v16) {
    goto LABEL_23;
  }
  unint64_t v23 = *(void *)(v12 + 8 * v24);
  if (v23)
  {
LABEL_16:
    int64_t v17 = v24;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v17 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      goto LABEL_37;
    }
    if (v17 >= v16) {
      break;
    }
    unint64_t v23 = *(void *)(v12 + 8 * v17);
    ++v24;
    if (v23) {
      goto LABEL_17;
    }
  }
LABEL_23:
  uint64_t v26 = v45;
  swift_release();
  swift_beginAccess();
  uint64_t v4 = *v26;
  if ((unint64_t)*v26 >> 62) {
    goto LABEL_38;
  }
  uint64_t v27 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v27; uint64_t v27 = sub_1DA98CBD8())
  {
    uint64_t v42 = *(void *)(a1 + 32);
    unint64_t v43 = v4 & 0xC000000000000001;
    uint64_t v28 = (uint64_t)v39;
    ++v40;
    uint64_t v41 = v4;
    uint64_t v29 = 4;
    uint64_t v30 = (uint64_t)v46;
    while (1)
    {
      id v31 = v43 ? (id)MEMORY[0x1E0177C00](v29 - 4, v4) : *(id *)(v4 + 8 * v29);
      unint64_t v32 = v31;
      if (__OFADD__(v29 - 4, 1)) {
        break;
      }
      uint64_t v45 = (uint64_t *)(v29 - 3);
      id v33 = objc_msgSend(v31, sel_extensionIdentity);
      sub_1DA98C6F8();

      id v34 = objc_msgSend(v32, sel_uniqueIdentifier);
      a1 = sub_1DA98C038();
      uint64_t v36 = v35;

      uint64_t v37 = sub_1DA989638();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v46, 1, 1, v37);
      sub_1DA901DA4(v28, a1, v36, v30);
      if (v5)
      {

        swift_bridgeObjectRelease();
        sub_1DA7A1AE0(v30, &qword_1EBE61CC0);
        (*v40)(v28, v44);
        return swift_bridgeObjectRelease();
      }

      swift_bridgeObjectRelease();
      sub_1DA7A1AE0(v30, &qword_1EBE61CC0);
      (*v40)(v28, v44);
      ++v29;
      uint64_t v4 = v41;
      if (v45 == (uint64_t *)v27) {
        return swift_bridgeObjectRelease();
      }
    }
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA80DDD0(uint64_t a1, uint64_t a2)
{
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1DA80EA58(a1, (uint64_t)sub_1DA80E9A4, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1DA80DE5C()
{
  uint64_t v0 = sub_1DA989638();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA9895A8();
  uint64_t v4 = sub_1DA80DF3C((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1DA80DF3C(uint64_t a1)
{
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E80);
  uint64_t v3 = MEMORY[0x1F4188790](v64);
  uint64_t v59 = (uint64_t *)((char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  id v58 = (uint64_t *)((char *)&v51 - v6);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v57 = (uint64_t *)((char *)&v51 - v8);
  MEMORY[0x1F4188790](v7);
  id v56 = (char *)&v51 - v9;
  uint64_t v10 = *(os_unfair_lock_s **)(*(void *)(v1 + 16) + 16);
  uint64_t v51 = *(void *)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  uint64_t v11 = *(void *)(v1 + 32);
  uint64_t v66 = a1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1DA80E82C((uint64_t)sub_1DA80E4FC, (uint64_t)v65, v11);
  swift_bridgeObjectRelease();
  int64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v67 = MEMORY[0x1E4FBC860];
    sub_1DA7F7A64(0, v13, 0);
    uint64_t result = sub_1DA80F8C8(v12);
    unint64_t v16 = result;
    uint64_t v17 = 0;
    uint64_t v18 = v12 + 64;
    char v19 = *(unsigned char *)(v12 + 32);
    uint64_t v60 = v12 + 80;
    uint64_t v54 = v12 + 64;
    uint64_t v55 = v12;
    int64_t v52 = v13;
    uint64_t v53 = v15;
    while ((v16 & 0x8000000000000000) == 0 && (uint64_t)v16 < 1 << v19)
    {
      unint64_t v21 = v16 >> 6;
      if ((*(void *)(v18 + 8 * (v16 >> 6)) & (1 << v16)) == 0) {
        goto LABEL_27;
      }
      if (*(_DWORD *)(v12 + 36) != v15) {
        goto LABEL_28;
      }
      uint64_t v61 = v17;
      uint64_t v62 = 1 << v16;
      uint64_t v22 = v56;
      unint64_t v23 = &v56[*(int *)(v64 + 48)];
      uint64_t v24 = *(void *)(v12 + 56);
      uint64_t v25 = (uint64_t *)(*(void *)(v12 + 48) + 16 * v16);
      uint64_t v26 = *v25;
      uint64_t v27 = v25[1];
      uint64_t v28 = sub_1DA989638();
      uint64_t v29 = *(void **)(v28 - 8);
      uint64_t v30 = v29[9];
      uint64_t v63 = v16;
      id v31 = (void (*)(char *, unint64_t, uint64_t))v29[2];
      v31(v23, v24 + v30 * v16, v28);
      *uint64_t v22 = v26;
      v22[1] = v27;
      unint64_t v32 = (char *)v57;
      *uint64_t v57 = v26;
      *((void *)v32 + 1) = v27;
      uint64_t v33 = v64;
      v31(&v32[*(int *)(v64 + 48)], (unint64_t)v23, v28);
      uint64_t v34 = (uint64_t)v32;
      uint64_t v35 = v58;
      sub_1DA7BA440(v34, (uint64_t)v58, &qword_1EBE58E80);
      swift_bridgeObjectRetain_n();
      sub_1DA7A1AE0((uint64_t)v22, &qword_1EBE58E80);
      uint64_t v36 = *(int *)(v33 + 48);
      uint64_t v37 = v59;
      uint64_t v38 = (char *)v59 + v36;
      uint64_t v39 = *v35;
      uint64_t v40 = v35[1];
      *uint64_t v59 = *v35;
      v37[1] = v40;
      v31((char *)v37 + v36, (unint64_t)v35 + v36, v28);
      uint64_t v41 = (void (*)(char *, uint64_t))v29[1];
      swift_bridgeObjectRetain();
      v41(v38, v28);
      sub_1DA7A1AE0((uint64_t)v35, &qword_1EBE58E80);
      uint64_t v42 = v67;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1DA7F7A64(0, *(void *)(v42 + 16) + 1, 1);
        uint64_t v42 = v67;
      }
      unint64_t v44 = *(void *)(v42 + 16);
      unint64_t v43 = *(void *)(v42 + 24);
      uint64_t v12 = v55;
      if (v44 >= v43 >> 1)
      {
        uint64_t result = sub_1DA7F7A64(v43 > 1, v44 + 1, 1);
        uint64_t v42 = v67;
      }
      *(void *)(v42 + 16) = v44 + 1;
      uint64_t v45 = v42 + 16 * v44;
      *(void *)(v45 + 32) = v39;
      *(void *)(v45 + 40) = v40;
      char v19 = *(unsigned char *)(v12 + 32);
      unint64_t v16 = 1 << v19;
      if (v63 >= 1 << v19) {
        goto LABEL_29;
      }
      uint64_t v18 = v54;
      uint64_t v46 = *(void *)(v54 + 8 * v21);
      if ((v46 & v62) == 0) {
        goto LABEL_30;
      }
      LODWORD(v15) = v53;
      if (*(_DWORD *)(v12 + 36) != v53) {
        goto LABEL_31;
      }
      unint64_t v47 = v46 & (-2 << (v63 & 0x3F));
      if (v47)
      {
        unint64_t v16 = __clz(__rbit64(v47)) | v63 & 0xFFFFFFFFFFFFFFC0;
        int64_t v20 = v52;
      }
      else
      {
        unint64_t v48 = v21 + 1;
        unint64_t v49 = (v16 + 63) >> 6;
        int64_t v20 = v52;
        if (v21 + 1 < v49)
        {
          unint64_t v50 = *(void *)(v54 + 8 * v48);
          if (v50)
          {
LABEL_22:
            unint64_t v16 = __clz(__rbit64(v50)) + (v48 << 6);
          }
          else
          {
            while (v49 - 2 != v21)
            {
              unint64_t v50 = *(void *)(v60 + 8 * v21++);
              if (v50)
              {
                unint64_t v48 = v21 + 1;
                goto LABEL_22;
              }
            }
          }
        }
      }
      uint64_t v17 = v61 + 1;
      if (v61 + 1 == v20)
      {
        swift_release();
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  else
  {
    swift_release();
    uint64_t v42 = MEMORY[0x1E4FBC860];
LABEL_25:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v51 + 16));
    swift_release();
    return v42;
  }
  return result;
}

uint64_t sub_1DA80E3F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E80);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  *uint64_t v7 = v8;
  v7[1] = v9;
  uint64_t v10 = (char *)v7 + *(int *)(v5 + 56);
  uint64_t v11 = sub_1DA989638();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, a2, v11);
  swift_bridgeObjectRetain();
  char v12 = sub_1DA989578();
  sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE58E80);
  return v12 & 1;
}

uint64_t sub_1DA80E4FC(uint64_t *a1, uint64_t a2)
{
  return sub_1DA80E3F0(a1, a2) & 1;
}

uint64_t ConfiguredWidgetMetadataCache.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ConfiguredWidgetMetadataCache.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA80E594(unint64_t a1)
{
  return sub_1DA80CB50(a1);
}

uint64_t sub_1DA80E5B8()
{
  uint64_t v0 = sub_1DA989638();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA9895A8();
  uint64_t v4 = sub_1DA80DF3C((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1DA80E69C(uint64_t a1)
{
  return sub_1DA80DF3C(a1);
}

uint64_t *sub_1DA80E6C0(uint64_t isStackAllocationSafe, uint64_t *a2)
{
  uint64_t v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = sub_1DA80EF6C((void *)((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    if (v2) {
      swift_willThrow();
    }
    else {
      return (uint64_t *)v8;
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    a2 = (uint64_t *)sub_1DA80EF6C((unint64_t *)v9, v6, v4, a2);
    MEMORY[0x1E0178DA0](v9, -1, -1);
  }
  return a2;
}

uint64_t sub_1DA80E82C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (uint64_t (*)(void *, char *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_1DA80F4D8((void *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_1DA80F4D8((unint64_t *)v11, v8, a3, v6);
    MEMORY[0x1E0178DA0](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_1DA80E9A4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E80) + 48);
  char v5 = (char *)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58EA8) + 48);
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v5, v4, v8);
  *a2 = v7;
  a2[1] = v6;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA80EA58(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t *a5)
{
  uint64_t v10 = sub_1DA989638();
  uint64_t v57 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v65 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE58EB0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (uint64_t *)&v52[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = ~v15;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = -v15;
  uint64_t v58 = a1;
  uint64_t v59 = a1 + 64;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  else {
    uint64_t v19 = -1;
  }
  uint64_t v60 = v16;
  uint64_t v61 = 0;
  uint64_t v62 = v19 & v17;
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v54 = a1;
  swift_bridgeObjectRetain();
  uint64_t v55 = a3;
  swift_retain();
  sub_1DA80F950((uint64_t)v14);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58EA8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v14, 1, v20) == 1)
  {
LABEL_21:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1DA8092D8();
    return swift_release();
  }
  int v53 = a4;
  unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
  uint64_t v22 = (char *)v14 + *(int *)(v20 + 48);
  uint64_t v23 = *v14;
  uint64_t v24 = v14[1];
  uint64_t v56 = v10;
  v21(v65, v22, v10);
  uint64_t v25 = *a5;
  uint64_t v26 = v23;
  unint64_t v28 = sub_1DA7FDF54(v23, v24);
  uint64_t v29 = *(void *)(v25 + 16);
  BOOL v30 = (v27 & 1) == 0;
  uint64_t v31 = v29 + v30;
  if (__OFADD__(v29, v30)) {
    goto LABEL_22;
  }
  LOBYTE(v23) = v27;
  if (*(void *)(v25 + 24) >= v31)
  {
    if ((v53 & 1) == 0) {
      goto LABEL_24;
    }
    if ((v27 & 1) == 0)
    {
      do
      {
LABEL_12:
        uint64_t v23 = *a5;
        *(void *)(*a5 + 8 * (v28 >> 6) + 64) |= 1 << v28;
        uint64_t v34 = (uint64_t *)(*(void *)(v23 + 48) + 16 * v28);
        *uint64_t v34 = v26;
        v34[1] = v24;
        uint64_t v26 = v56;
        v21((char *)(*(void *)(v23 + 56) + *(void *)(v57 + 72) * v28), v65, v56);
        uint64_t v35 = *(void *)(v23 + 16);
        BOOL v36 = __OFADD__(v35, 1);
        uint64_t v37 = v35 + 1;
        if (!v36)
        {
          *(void *)(v23 + 16) = v37;
          sub_1DA80F950((uint64_t)v14);
          uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58EA8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v14, 1, v38) == 1)goto LABEL_21; {
          uint64_t v23 = (uint64_t)&qword_1EBE58EA8;
          }
          while (1)
          {
            uint64_t v24 = *v14;
            unint64_t v28 = v14[1];
            v21(v65, (char *)v14 + *(int *)(v38 + 48), v26);
            uint64_t v39 = *a5;
            unint64_t v40 = sub_1DA7FDF54(v24, v28);
            uint64_t v42 = *(void *)(v39 + 16);
            BOOL v43 = (v41 & 1) == 0;
            BOOL v36 = __OFADD__(v42, v43);
            uint64_t v44 = v42 + v43;
            if (v36) {
              break;
            }
            char v45 = v41;
            if (*(void *)(v39 + 24) < v44)
            {
              sub_1DA90EAEC(v44, 1);
              unint64_t v40 = sub_1DA7FDF54(v24, v28);
              if ((v45 & 1) != (v46 & 1)) {
                goto LABEL_26;
              }
            }
            if (v45) {
              goto LABEL_25;
            }
            unint64_t v47 = (void *)*a5;
            *(void *)(*a5 + 8 * (v40 >> 6) + 64) |= 1 << v40;
            unint64_t v48 = (uint64_t *)(v47[6] + 16 * v40);
            *unint64_t v48 = v24;
            v48[1] = v28;
            uint64_t v26 = v56;
            v21((char *)(v47[7] + *(void *)(v57 + 72) * v40), v65, v56);
            uint64_t v49 = v47[2];
            BOOL v36 = __OFADD__(v49, 1);
            uint64_t v50 = v49 + 1;
            if (v36) {
              goto LABEL_23;
            }
            v47[2] = v50;
            sub_1DA80F950((uint64_t)v14);
            uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58EA8);
            if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v14, 1, v38) == 1)goto LABEL_21; {
          }
            }
LABEL_22:
          __break(1u);
        }
LABEL_23:
        __break(1u);
LABEL_24:
        sub_1DA919244();
      }
      while ((v23 & 1) == 0);
    }
    goto LABEL_25;
  }
  sub_1DA90EAEC(v31, v53 & 1);
  unint64_t v32 = sub_1DA7FDF54(v26, v24);
  if ((v23 & 1) == (v33 & 1))
  {
    unint64_t v28 = v32;
    if ((v23 & 1) == 0) {
      goto LABEL_12;
    }
LABEL_25:
    sub_1DA98CBB8();
    __break(1u);
  }
LABEL_26:
  uint64_t result = sub_1DA98CEC8();
  __break(1u);
  return result;
}

uint64_t sub_1DA80EF6C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v50 = a2;
  uint64_t v51 = a1;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E80);
  MEMORY[0x1F4188790](v59);
  uint64_t v7 = (uint64_t *)((char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1DA989638();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = (void *)a3;
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v53 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v12;
  uint64_t v60 = a4;
  uint64_t result = swift_beginAccess();
  uint64_t v52 = 0;
  uint64_t v17 = 0;
  unint64_t v18 = v13 + 63;
  uint64_t v19 = v11;
  int64_t v54 = v18 >> 6;
  uint64_t v57 = v9 + 16;
  uint64_t v58 = v9;
  uint64_t v61 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v56 = v11;
  uint64_t v55 = v8;
  while (v15)
  {
    unint64_t v20 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    uint64_t v65 = v17;
    unint64_t v21 = v20 | (v17 << 6);
LABEL_22:
    uint64_t v26 = v62[7];
    char v27 = (uint64_t *)(v62[6] + 16 * v21);
    uint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    uint64_t v30 = *(void *)(v58 + 72);
    unint64_t v63 = v21;
    uint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v58 + 16);
    v31(v19, v26 + v30 * v21, v8);
    *uint64_t v7 = v29;
    v7[1] = v28;
    uint64_t v32 = (uint64_t)v7;
    char v33 = (char *)v7 + *(int *)(v59 + 48);
    uint64_t v34 = v19;
    uint64_t v35 = v19;
    uint64_t v36 = v8;
    v31(v33, (unint64_t)v35, v8);
    uint64_t v37 = *v60;
    if (*(void *)(*v60 + 16))
    {
      unint64_t v64 = v15;
      sub_1DA98CF18();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1DA98C108();
      uint64_t v38 = sub_1DA98CF68();
      uint64_t v39 = -1 << *(unsigned char *)(v37 + 32);
      unint64_t v40 = v38 & ~v39;
      if (((*(void *)(v37 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = v65;
        uint64_t v8 = v36;
        unint64_t v15 = v64;
        uint64_t v19 = v34;
        uint64_t v7 = (void *)v32;
LABEL_40:
        unint64_t v47 = v63;
        goto LABEL_41;
      }
      uint64_t v41 = *(void *)(v37 + 48);
      uint64_t v42 = (void *)(v41 + 16 * v40);
      BOOL v43 = *v42 == v29 && v42[1] == v28;
      if (!v43 && (sub_1DA98CE58() & 1) == 0)
      {
        uint64_t v44 = ~v39;
        while (1)
        {
          unint64_t v40 = (v40 + 1) & v44;
          if (((*(void *)(v37 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0) {
            break;
          }
          char v45 = (void *)(v41 + 16 * v40);
          BOOL v46 = *v45 == v29 && v45[1] == v28;
          if (v46 || (sub_1DA98CE58() & 1) != 0) {
            goto LABEL_5;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v7 = (void *)v32;
        uint64_t v8 = v55;
        uint64_t v19 = v56;
        uint64_t v17 = v65;
        unint64_t v15 = v64;
        goto LABEL_40;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      uint64_t v7 = (void *)v32;
      uint64_t v8 = v55;
      uint64_t v19 = v56;
      uint64_t v17 = v65;
      unint64_t v15 = v64;
      sub_1DA7A1AE0(v32, &qword_1EBE58E80);
      (*v61)(v19, v8);
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      uint64_t v8 = v36;
      uint64_t v19 = v34;
      uint64_t v7 = (void *)v32;
      unint64_t v47 = v63;
      uint64_t v17 = v65;
LABEL_41:
      sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE58E80);
      (*v61)(v19, v8);
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v51 + ((v47 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v47;
      if (__OFADD__(v52++, 1))
      {
        __break(1u);
        return sub_1DA9706D8(v51, v50, v52, v62);
      }
    }
  }
  int64_t v22 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v22 >= v54) {
    return sub_1DA9706D8(v51, v50, v52, v62);
  }
  unint64_t v23 = *(void *)(v53 + 8 * v22);
  int64_t v24 = v17 + 1;
  if (v23) {
    goto LABEL_21;
  }
  int64_t v24 = v17 + 2;
  if (v17 + 2 >= v54) {
    return sub_1DA9706D8(v51, v50, v52, v62);
  }
  unint64_t v23 = *(void *)(v53 + 8 * v24);
  if (v23) {
    goto LABEL_21;
  }
  int64_t v24 = v17 + 3;
  if (v17 + 3 >= v54) {
    return sub_1DA9706D8(v51, v50, v52, v62);
  }
  unint64_t v23 = *(void *)(v53 + 8 * v24);
  if (v23)
  {
LABEL_21:
    unint64_t v15 = (v23 - 1) & v23;
    uint64_t v65 = v24;
    unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    goto LABEL_22;
  }
  uint64_t v25 = v17 + 4;
  if (v17 + 4 >= v54) {
    return sub_1DA9706D8(v51, v50, v52, v62);
  }
  unint64_t v23 = *(void *)(v53 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v17 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v54) {
      return sub_1DA9706D8(v51, v50, v52, v62);
    }
    unint64_t v23 = *(void *)(v53 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_21;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1DA80F4D8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, char *))
{
  uint64_t v37 = a4;
  uint64_t v30 = a2;
  uint64_t v31 = a1;
  uint64_t v40 = sub_1DA989638();
  uint64_t result = MEMORY[0x1F4188790](v40);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = 0;
  int64_t v11 = 0;
  uint64_t v38 = (void *)a3;
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v33 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v34 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v35 = v7 + 16;
  uint64_t v36 = v7;
  uint64_t v16 = (void (**)(char *, uint64_t))(v7 + 8);
LABEL_4:
  uint64_t v32 = v10;
  while (v15)
  {
    unint64_t v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v18 = v17 | (v11 << 6);
    uint64_t v19 = v40;
LABEL_18:
    uint64_t v23 = v38[7];
    int64_t v24 = (void *)(v38[6] + 16 * v18);
    uint64_t v25 = v24[1];
    v39[0] = *v24;
    v39[1] = v25;
    (*(void (**)(char *, unint64_t, uint64_t))(v36 + 16))(v9, v23 + *(void *)(v36 + 72) * v18, v19);
    swift_bridgeObjectRetain();
    char v26 = v37(v39, v9);
    if (v4) {
      goto LABEL_28;
    }
    char v27 = v26;
    (*v16)(v9, v19);
    uint64_t result = swift_bridgeObjectRelease();
    if (v27)
    {
      uint64_t v28 = v32;
      *(unint64_t *)((char *)v31 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      BOOL v20 = __OFADD__(v28, 1);
      uint64_t v10 = v28 + 1;
      if (!v20) {
        goto LABEL_4;
      }
      __break(1u);
LABEL_28:
      (*v16)(v9, v19);
      return swift_bridgeObjectRelease();
    }
  }
  BOOL v20 = __OFADD__(v11++, 1);
  uint64_t v19 = v40;
  if (v20)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 >= v34) {
    return sub_1DA9706D8(v31, v30, v32, v38);
  }
  unint64_t v21 = *(void *)(v33 + 8 * v11);
  if (v21)
  {
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v11 << 6);
    goto LABEL_18;
  }
  int64_t v22 = v11 + 1;
  if (v11 + 1 >= v34) {
    return sub_1DA9706D8(v31, v30, v32, v38);
  }
  unint64_t v21 = *(void *)(v33 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v11 + 2;
  if (v11 + 2 >= v34) {
    return sub_1DA9706D8(v31, v30, v32, v38);
  }
  unint64_t v21 = *(void *)(v33 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v11 + 3;
  if (v11 + 3 >= v34) {
    return sub_1DA9706D8(v31, v30, v32, v38);
  }
  unint64_t v21 = *(void *)(v33 + 8 * v22);
  if (v21)
  {
LABEL_16:
    int64_t v11 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v34) {
      return sub_1DA9706D8(v31, v30, v32, v38);
    }
    unint64_t v21 = *(void *)(v33 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_17;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCaching.updateWidgetSet(updatedSet:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCaching.widgetIdentifiers(addedInLast:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCaching.widgetIdentifiers(addedAfter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for ConfiguredWidgetMetadataCache()
{
  return self;
}

uint64_t method lookup function for ConfiguredWidgetMetadataCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConfiguredWidgetMetadataCache);
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCache.__allocating_init(backingStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCache.updateWidgetSet(updatedSet:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCache.widgetIdentifiers(addedInLast:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCache.widgetIdentifiers(addedAfter:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1DA80F8C8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1DA80F950@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E88);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  int64_t v11 = (char *)&v42 - v10;
  uint64_t v13 = *v1;
  uint64_t v12 = v1[1];
  uint64_t v15 = v1[2];
  int64_t v14 = v1[3];
  int64_t v16 = v14;
  unint64_t v17 = v1[4];
  uint64_t v42 = v5;
  if (v17)
  {
    char v45 = v9;
    int64_t v46 = v14;
    uint64_t v43 = v15;
    uint64_t v44 = v12;
    uint64_t v18 = v2;
    uint64_t v19 = (v17 - 1) & v17;
    unint64_t v20 = __clz(__rbit64(v17)) | (v14 << 6);
LABEL_3:
    uint64_t v21 = *(void *)(v13 + 56);
    int64_t v22 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v20);
    uint64_t v23 = v13;
    uint64_t v25 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v26 = sub_1DA989638();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = v21 + *(void *)(v27 + 72) * v20;
    uint64_t v2 = v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(&v11[*(int *)(v18 + 48)], v28, v26);
    *(void *)int64_t v11 = v25;
    *((void *)v11 + 1) = v24;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v18);
    uint64_t v13 = v23;
    swift_bridgeObjectRetain();
    uint64_t v12 = v44;
    uint64_t v9 = v45;
    uint64_t v15 = v43;
    goto LABEL_25;
  }
  int64_t v29 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
LABEL_23:
    int64_t v16 = v10;
    goto LABEL_24;
  }
  int64_t v30 = (unint64_t)(v15 + 64) >> 6;
  if (v29 < v30)
  {
    unint64_t v31 = *(void *)(v12 + 8 * v29);
    if (v31)
    {
LABEL_7:
      uint64_t v43 = v15;
      uint64_t v44 = v12;
      char v45 = v9;
      int64_t v46 = v29;
      uint64_t v18 = v2;
      uint64_t v19 = (v31 - 1) & v31;
      unint64_t v20 = __clz(__rbit64(v31)) + (v29 << 6);
      goto LABEL_3;
    }
    int64_t v32 = v14 + 2;
    int64_t v16 = v14 + 1;
    if (v14 + 2 < v30)
    {
      unint64_t v31 = *(void *)(v12 + 8 * v32);
      if (v31)
      {
LABEL_10:
        int64_t v29 = v32;
        goto LABEL_7;
      }
      int64_t v16 = v14 + 2;
      if (v14 + 3 < v30)
      {
        unint64_t v31 = *(void *)(v12 + 8 * (v14 + 3));
        if (v31)
        {
          int64_t v29 = v14 + 3;
          goto LABEL_7;
        }
        int64_t v32 = v14 + 4;
        int64_t v16 = v14 + 3;
        if (v14 + 4 < v30)
        {
          unint64_t v31 = *(void *)(v12 + 8 * v32);
          if (v31) {
            goto LABEL_10;
          }
          int64_t v29 = v14 + 5;
          int64_t v16 = v14 + 4;
          if (v14 + 5 < v30)
          {
            unint64_t v31 = *(void *)(v12 + 8 * v29);
            if (v31) {
              goto LABEL_7;
            }
            int64_t v10 = v30 - 1;
            uint64_t v33 = v14 + 6;
            while (v30 != v33)
            {
              unint64_t v31 = *(void *)(v12 + 8 * v33++);
              if (v31)
              {
                int64_t v29 = v33 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  int64_t v46 = v16;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
  uint64_t v19 = 0;
LABEL_25:
  *unint64_t v1 = v13;
  v1[1] = v12;
  int64_t v34 = v46;
  v1[2] = v15;
  v1[3] = v34;
  v1[4] = v19;
  uint64_t v35 = (void (*)(uint64_t))v1[5];
  sub_1DA7BA440((uint64_t)v11, (uint64_t)v9, &qword_1EBE58E88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58EA8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v47, 1, 1, v36);
  }
  else
  {
    uint64_t v38 = (uint64_t)v9;
    uint64_t v39 = (uint64_t)v42;
    sub_1DA7BA440(v38, (uint64_t)v42, &qword_1EBE58E80);
    uint64_t v40 = v47;
    v35(v39);
    sub_1DA7A1AE0(v39, &qword_1EBE58E80);
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58EA8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
}

uint64_t PowerlogWidgetViewIdentity.init(widget:identifier:inStack:location:suggestionIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8 = *a5;
  char v9 = *((unsigned char *)a5 + 8);
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a6;
  *(void *)(a8 + 32) = a7;
  *(unsigned char *)(a8 + 40) = a4;
  *(void *)(a8 + 48) = v8;
  *(unsigned char *)(a8 + 56) = v9;
  return result;
}

uint64_t PowerlogWidgetLocation.logValue.getter()
{
  if (*(unsigned char *)(v0 + 8) == 1) {
    return qword_1DA992298[*(void *)v0];
  }
  else {
    return 3;
  }
}

unint64_t PowerlogWidgetLocation.description.getter()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    unint64_t result = 0x6E776F6E6B6E75;
    switch(*(void *)v0)
    {
      case 1:
        unint64_t result = 0x6569567961646F74;
        break;
      case 2:
        unint64_t result = 0xD000000000000012;
        break;
      case 3:
        unint64_t result = 0x657263536B636F6CLL;
        break;
      case 4:
        unint64_t result = 0x746E6569626D61;
        break;
      case 5:
        unint64_t result = 0x75426E6F69746361;
        break;
      case 6:
        unint64_t result = 1769105779;
        break;
      case 7:
        unint64_t result = 0x436C6F72746E6F63;
        break;
      default:
        return result;
    }
  }
  else
  {
    sub_1DA98CA18();
    swift_bridgeObjectRelease();
    strcpy((char *)v2, "homescreenPage");
    HIBYTE(v2[1]) = -18;
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    return v2[0];
  }
  return result;
}

uint64_t PowerlogWidgetLocation.hash(into:)()
{
  if ((*(unsigned char *)(v0 + 8) & 1) == 0) {
    sub_1DA98CF28();
  }
  return sub_1DA98CF28();
}

BOOL static PowerlogWidgetLocation.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)a2;
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v2 = qword_1DA992298[v2];
    if (!*(unsigned char *)(a2 + 8))
    {
      uint64_t v3 = 3;
      return v2 == v3;
    }
  }
  else
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return v2 == v3;
    }
    uint64_t v2 = 3;
  }
  switch(v3)
  {
    case 3:
      uint64_t v3 = 4;
      break;
    case 4:
      uint64_t v3 = 5;
      break;
    case 5:
      uint64_t v3 = 6;
      break;
    case 6:
      uint64_t v3 = 7;
      break;
    case 7:
      uint64_t v3 = 8;
      break;
    default:
      return v2 == v3;
  }
  return v2 == v3;
}

uint64_t PowerlogWidgetLocation.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_1DA98CF18();
  if ((v1 & 1) == 0) {
    sub_1DA98CF28();
  }
  sub_1DA98CF28();
  return sub_1DA98CF68();
}

uint64_t sub_1DA8100C8()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_1DA98CF18();
  if ((v1 & 1) == 0) {
    sub_1DA98CF28();
  }
  sub_1DA98CF28();
  return sub_1DA98CF68();
}

uint64_t sub_1DA810134()
{
  if ((*(unsigned char *)(v0 + 8) & 1) == 0) {
    sub_1DA98CF28();
  }
  return sub_1DA98CF28();
}

uint64_t sub_1DA810184()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_1DA98CF18();
  if ((v1 & 1) == 0) {
    sub_1DA98CF28();
  }
  sub_1DA98CF28();
  return sub_1DA98CF68();
}

BOOL sub_1DA8101EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)a2;
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v2 = qword_1DA992298[v2];
    if (!*(unsigned char *)(a2 + 8))
    {
      uint64_t v3 = 3;
      return v2 == v3;
    }
  }
  else
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return v2 == v3;
    }
    uint64_t v2 = 3;
  }
  switch(v3)
  {
    case 3:
      uint64_t v3 = 4;
      break;
    case 4:
      uint64_t v3 = 5;
      break;
    case 5:
      uint64_t v3 = 6;
      break;
    case 6:
      uint64_t v3 = 7;
      break;
    case 7:
      uint64_t v3 = 8;
      break;
    default:
      return v2 == v3;
  }
  return v2 == v3;
}

id PowerlogControlViewIdentity.control.getter()
{
  return *v0;
}

uint64_t PowerlogControlViewIdentity.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void PowerlogControlViewIdentity.location.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PowerlogControlViewIdentity.isStateBased.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t PowerlogControlViewIdentity.description.getter()
{
  uint64_t v1 = *v0;
  sub_1DA98CA18();
  sub_1DA98C148();
  id v2 = objc_msgSend(v1, sel_description);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  PowerlogWidgetLocation.description.getter();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return 0;
}

uint64_t PowerlogControlViewIdentity.hash(into:)()
{
  char v1 = *(unsigned char *)(v0 + 32);
  id v2 = *(id *)v0;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0) {
    sub_1DA98CF28();
  }
  sub_1DA98CF28();
  return sub_1DA98CF38();
}

uint64_t PowerlogControlViewIdentity.hashValue.getter()
{
  char v1 = *(void **)v0;
  char v2 = *(unsigned char *)(v0 + 32);
  sub_1DA98CF18();
  id v3 = v1;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0) {
    sub_1DA98CF28();
  }
  sub_1DA98CF28();
  sub_1DA98CF38();
  return sub_1DA98CF68();
}

uint64_t sub_1DA8105D0()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1DA810600(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1DA810620()
{
  uint64_t v1 = *(void **)v0;
  char v2 = *(unsigned char *)(v0 + 32);
  sub_1DA98CF18();
  id v3 = v1;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0) {
    sub_1DA98CF28();
  }
  sub_1DA98CF28();
  sub_1DA98CF38();
  return sub_1DA98CF68();
}

id PowerlogWidgetViewIdentity.widget.getter()
{
  return *v0;
}

uint64_t PowerlogWidgetViewIdentity.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PowerlogWidgetViewIdentity.suggestionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PowerlogWidgetViewIdentity.inStack.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

void PowerlogWidgetViewIdentity.location.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 48);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PowerlogWidgetViewIdentity.init(widget:identifier:inStack:location:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *a5;
  char v7 = *((unsigned char *)a5 + 8);
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 24) = 0;
  *(void *)(a6 + 32) = 0;
  *(void *)(a6 + 16) = a3;
  *(unsigned char *)(a6 + 40) = a4;
  *(void *)(a6 + 48) = v6;
  *(unsigned char *)(a6 + 56) = v7;
  return result;
}

uint64_t PowerlogWidgetViewIdentity.description.getter()
{
  uint64_t v1 = *v0;
  sub_1DA98CA18();
  sub_1DA98C148();
  id v2 = objc_msgSend(v1, sel_description);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  PowerlogWidgetLocation.description.getter();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return 0;
}

uint64_t PowerlogWidgetViewIdentity.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 32);
  char v2 = *(unsigned char *)(v0 + 56);
  id v3 = *(id *)v0;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  sub_1DA98CF38();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1DA98C108();
    swift_bridgeObjectRelease();
  }
  sub_1DA98CF38();
  if ((v2 & 1) == 0) {
    sub_1DA98CF28();
  }
  return sub_1DA98CF28();
}

uint64_t PowerlogWidgetViewIdentity.hashValue.getter()
{
  return sub_1DA98CF68();
}

void sub_1DA810B40(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 48);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1DA810B58()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA810BD0()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA810C44(char a1)
{
  sub_1DA81150C();
  sub_1DA817684(a1);

  return swift_release();
}

uint64_t sub_1DA810C8C(uint64_t a1, double a2)
{
  return sub_1DA810CBC(a2, a1, (void (*)(double))sub_1DA817934);
}

uint64_t sub_1DA810CA4(uint64_t a1, double a2)
{
  return sub_1DA810CBC(a2, a1, (void (*)(double))sub_1DA817970);
}

uint64_t sub_1DA810CBC(double a1, uint64_t a2, void (*a3)(double))
{
  sub_1DA81150C();
  a3(a1);

  return swift_release();
}

uint64_t sub_1DA810D10(uint64_t a1, uint64_t a2)
{
  return sub_1DA810D40(a1, a2, (void (*)(uint64_t))sub_1DA8179AC);
}

uint64_t sub_1DA810D28(uint64_t a1, uint64_t a2)
{
  return sub_1DA810D40(a1, a2, (void (*)(uint64_t))sub_1DA8179E8);
}

uint64_t sub_1DA810D40(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_1DA81150C();
  a3(a1);

  return swift_release();
}

uint64_t sub_1DA810D98()
{
  return sub_1DA810DA0(0);
}

uint64_t sub_1DA810DA0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(NSObject **)(v2 + 72);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(unsigned char *)(v5 + 24) = a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1DA814028;
  *(void *)(v6 + 24) = v5;
  v9[4] = sub_1DA814080;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  void v9[2] = sub_1DA810EFC;
  v9[3] = &block_descriptor_63;
  char v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA810EFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1DA810F24(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1DA98B528();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x1F4188790](v5);
  char v9 = (void *)((char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v10 = (void *)v2[9];
  void *v9 = v10;
  (*(void (**)(void *, void, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x1E4FBCBF0], v5, v7);
  id v11 = v10;
  LOBYTE(v10) = sub_1DA98B538();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v9, v5);
  if (v10)
  {
    uint64_t v13 = swift_beginAccess();
    uint64_t v25[2] = v2[7];
    MEMORY[0x1F4188790](v13);
    v25[-2] = v2;
    LOBYTE(v25[-1]) = a1 & 1;
    MEMORY[0x1F4188790](v14);
    long long v15 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)&v25[-6] = *(_OWORD *)(v4 + 80);
    *(_OWORD *)&v25[-4] = v15;
    v25[-2] = sub_1DA813CF4;
    v25[-1] = v16;
    uint64_t v17 = type metadata accessor for PowerlogViewEntry();
    uint64_t v18 = sub_1DA98BF68();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v21 = sub_1DA8334D4((void (*)(char *, char *))sub_1DA813D00, (uint64_t)&v25[-8], v18, v17, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v20);
    swift_bridgeObjectRelease();
    int64_t v22 = v2 + 2;
    uint64_t v24 = v2[5];
    uint64_t v23 = v2[6];
    __swift_project_boxed_opaque_existential_0(v22, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, v24, v23);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA8111D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1DA8122E0();
  sub_1DA81211C(v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A850);
  swift_dynamicCast();
  *(void *)(a2 + 112) = 0;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  if ((*(unsigned char *)(a2 + 129) & 1) == 0)
  {
    swift_beginAccess();
    sub_1DA913104(a1);
    swift_endAccess();
    swift_release();
  }
  if (a4)
  {
    int v7 = *(unsigned __int8 *)(v9 + 129);
    *(unsigned char *)(v9 + 129) = 0;
    if (v7 == 1)
    {
      sub_1DA8122E0();
      *(void *)(v9 + 120) = 0;
      *(unsigned char *)(v9 + 128) = 1;
    }
  }
  return v9;
}

uint64_t sub_1DA8112CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1DA81232C();
  sub_1DA812210(v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A7D0);
  swift_dynamicCast();
  *(void *)(a2 + 88) = 0;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  if ((*(unsigned char *)(a2 + 105) & 1) == 0)
  {
    swift_beginAccess();
    sub_1DA9131E8(a1);
    swift_endAccess();
    swift_release();
  }
  if (a4)
  {
    int v7 = *(unsigned __int8 *)(v9 + 105);
    *(unsigned char *)(v9 + 105) = 0;
    if (v7 == 1)
    {
      sub_1DA81232C();
      *(void *)(v9 + 96) = 0;
      *(unsigned char *)(v9 + 104) = 1;
    }
  }
  return v9;
}

uint64_t sub_1DA8113C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1DA817A24();
  sub_1DA817A50(0, v8);
  type metadata accessor for PowerlogViewEntry();
  swift_dynamicCast();
  sub_1DA817A28();
  if ((*(unsigned char *)(a2 + *(void *)(*(void *)a2 + 120)) & 1) == 0)
  {
    swift_beginAccess();
    sub_1DA98BF68();
    sub_1DA98BEA8();
    swift_endAccess();
    swift_release();
  }
  if (a4) {
    sub_1DA817684(0);
  }
  return v7;
}

uint64_t sub_1DA81150C()
{
  type metadata accessor for PowerlogViewEntry();
  sub_1DA98C618();
  return v1;
}

uint64_t sub_1DA8115A4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v19 = a3;
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 80);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  int64_t v10 = (char *)v18 - v9;
  swift_beginAccess();
  uint64_t v11 = a1[7];
  uint64_t v12 = *(void *)(v6 + 96);
  uint64_t v13 = type metadata accessor for PowerlogViewEntry();
  uint64_t v14 = *(void *)(v12 + 8);
  swift_bridgeObjectRetain();
  MEMORY[0x1E0177130](&v21, a2, v11, v7, v13, v14);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v16 = v21;
  if (!v21)
  {
    v18[1] = v3;
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v17(v10, a2, v7);
    uint64_t v16 = sub_1DA817298((uint64_t)v10);
    v17(v10, a2, v7);
    uint64_t v20 = v16;
    swift_beginAccess();
    sub_1DA98BF68();
    swift_retain();
    sub_1DA98BF98();
    uint64_t result = swift_endAccess();
  }
  *uint64_t v19 = v16;
  return result;
}

void sub_1DA81179C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend(*(id *)(a1 + 64), sel_invalidate);
  id v7 = objc_allocWithZone(MEMORY[0x1E4F4F6F0]);
  uint64_t v8 = (void *)sub_1DA98C008();
  id v9 = objc_msgSend(v7, sel_initWithIdentifier_, v8);

  int64_t v10 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v9;

  uint64_t v11 = *(void **)(a1 + 64);
  if (v11)
  {
    uint64_t v12 = *(void *)(a1 + 72);
    uint64_t v13 = swift_allocObject();
    swift_weakInit();
    v16[4] = a3;
    v16[5] = v13;
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 1107296256;
    v16[2] = sub_1DA7C2930;
    _OWORD v16[3] = a4;
    uint64_t v14 = _Block_copy(v16);
    id v15 = v11;
    swift_release();
    objc_msgSend(v15, sel_scheduleRepeatingWithFireInterval_repeatInterval_leewayInterval_queue_handler_, v12, v14, 900.0, 900.0, 300.0);
    _Block_release(v14);
  }
}

uint64_t sub_1DA811914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, unsigned char *, unsigned char *))
{
  uint64_t v6 = sub_1DA98B528();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EBE64E58 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1DA989F38();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBE6F478);
  uint64_t v11 = sub_1DA989F18();
  os_log_type_t v12 = sub_1DA98C548();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1DA795000, v11, v12, "Performing scheduled flush of powerlog view entries", v13, 2u);
    MEMORY[0x1E0178DA0](v13, -1, -1);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v15 = (void *)result;
    uint64_t v16 = *(void **)(result + 72);
    void *v9 = v16;
    (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
    id v17 = v16;
    LOBYTE(v16) = sub_1DA98B538();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
    if (v16)
    {
      uint64_t v18 = swift_beginAccess();
      MEMORY[0x1F4188790](v18);
      *(void *)&v23[-16] = v15;
      v23[-8] = 1;
      uint64_t v19 = swift_bridgeObjectRetain();
      uint64_t v20 = a4(v19, a3, &v23[-32], v23);
      swift_bridgeObjectRelease();
      uint64_t v21 = v15[5];
      uint64_t v22 = v15[6];
      __swift_project_boxed_opaque_existential_0(v15 + 2, v21);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, v21, v22);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t BasePowerlogViewService.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t BasePowerlogViewService.__deallocating_deinit()
{
  BasePowerlogViewService.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA811C40(char a1)
{
  return sub_1DA810C44(a1);
}

uint64_t sub_1DA811C64(uint64_t a1, double a2)
{
  return sub_1DA810C8C(a1, a2);
}

uint64_t sub_1DA811C88(uint64_t a1, double a2)
{
  return sub_1DA810CA4(a1, a2);
}

uint64_t sub_1DA811CAC(uint64_t a1, uint64_t a2)
{
  return sub_1DA810D10(a1, a2);
}

uint64_t sub_1DA811CD0(uint64_t a1, uint64_t a2)
{
  return sub_1DA810D28(a1, a2);
}

uint64_t sub_1DA811CF4()
{
  return sub_1DA810D98();
}

uint64_t PowerlogWidgetViewService.__allocating_init(owner:)(unsigned char *a1)
{
  return PowerlogWidgetViewService.init(owner:)(a1);
}

uint64_t PowerlogWidgetViewService.init(owner:)(unsigned char *a1)
{
  return sub_1DA811E20(a1, (void (*)(void, double))type metadata accessor for WidgetPowerlogProvider, 0xD00000000000001FLL, 0x80000001DA99D030, (uint64_t (*)(uint64_t, void))sub_1DA812378);
}

uint64_t PowerlogControlsViewService.__allocating_init(owner:)(unsigned char *a1)
{
  return PowerlogControlsViewService.init(owner:)(a1);
}

uint64_t PowerlogControlsViewService.init(owner:)(unsigned char *a1)
{
  return sub_1DA811E20(a1, (void (*)(void, double))type metadata accessor for ControlsPowerlogProvider, 0xD000000000000027, 0x80000001DA99EC40, (uint64_t (*)(uint64_t, void))sub_1DA812728);
}

uint64_t sub_1DA811E20(unsigned char *a1, void (*a2)(void, double), uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void))
{
  id v17 = a5;
  v16[1] = a3;
  v16[2] = a4;
  uint64_t v7 = sub_1DA98C5F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DA98C598();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = sub_1DA98B4A8();
  double v13 = MEMORY[0x1F4188790](v12 - 8);
  LOBYTE(a1) = *a1;
  a2(0, v13);
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = (_BYTE)a1;
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE65CB0);
  sub_1DA98B488();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1DA813ED0((unint64_t *)&qword_1EBE65CA0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE65C80);
  sub_1DA7BB96C();
  sub_1DA98C918();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCC68], v7);
  *(void *)(v14 + 24) = sub_1DA98C638();
  return v17(v14, v16[3]);
}

uint64_t _s9ChronoKit25PowerlogWidgetViewServiceCfd_0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t _s9ChronoKit25PowerlogWidgetViewServiceCfD_0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA81211C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  char v7 = *(unsigned char *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  char v16 = *(unsigned char *)(v1 + 72);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A850);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 120) = 0;
  *(unsigned char *)(v10 + 128) = 1;
  *(void *)(v10 + 16) = v2;
  *(void *)(v10 + 24) = v3;
  *(void *)(v10 + 32) = v4;
  *(void *)(v10 + 40) = v5;
  *(void *)(v10 + 48) = v6;
  *(unsigned char *)(v10 + 56) = v7;
  *(void *)(v10 + 64) = v8;
  *(unsigned char *)(v10 + 72) = v16;
  uint64_t v11 = *(void *)(v1 + 112);
  long long v12 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v10 + 80) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v10 + 96) = v12;
  *(void *)(v10 + 112) = v11;
  LOBYTE(v8) = *(unsigned char *)(v1 + 129);
  *(unsigned char *)(v10 + 129) = v8;
  swift_bridgeObjectRetain();
  id v13 = v2;
  uint64_t result = swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t result = BSContinuousMachTimeNow();
    *(void *)(v10 + 120) = v15;
    *(unsigned char *)(v10 + 128) = 0;
  }
  a1[3] = v9;
  *a1 = v10;
  return result;
}

uint64_t sub_1DA812210@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  char v7 = *(unsigned char *)(v1 + 48);
  char v8 = *(unsigned char *)(v1 + 49);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A7D0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 96) = 0;
  *(unsigned char *)(v10 + 104) = 1;
  *(void *)(v10 + 16) = v3;
  *(void *)(v10 + 24) = v4;
  *(void *)(v10 + 32) = v5;
  *(void *)(v10 + 40) = v6;
  *(unsigned char *)(v10 + 48) = v7;
  *(unsigned char *)(v10 + 49) = v8;
  uint64_t v11 = *(void *)(v1 + 88);
  *(_OWORD *)(v10 + 56) = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(v10 + 72) = *(_OWORD *)(v1 + 72);
  *(void *)(v10 + 88) = v11;
  char v12 = *(unsigned char *)(v1 + 105);
  *(unsigned char *)(v10 + 105) = v12;
  id v13 = v3;
  uint64_t result = swift_bridgeObjectRetain();
  if (v12)
  {
    uint64_t result = BSContinuousMachTimeNow();
    *(void *)(v10 + 96) = v15;
    *(unsigned char *)(v10 + 104) = 0;
  }
  a1[3] = v9;
  *a1 = v10;
  return result;
}

uint64_t sub_1DA8122E0()
{
  uint64_t result = BSContinuousMachTimeNow();
  if ((*(unsigned char *)(v0 + 128) & 1) == 0) {
    *(double *)(v0 + 112) = *(double *)(v0 + 112) + v2 - *(double *)(v0 + 120);
  }
  char v3 = *(unsigned char *)(v0 + 129);
  double v4 = v2;
  if (!v3) {
    double v4 = 0.0;
  }
  *(double *)(v0 + 120) = v4;
  *(unsigned char *)(v0 + 128) = v3 ^ 1;
  return result;
}

uint64_t sub_1DA81232C()
{
  uint64_t result = BSContinuousMachTimeNow();
  if ((*(unsigned char *)(v0 + 104) & 1) == 0) {
    *(double *)(v0 + 88) = *(double *)(v0 + 88) + v2 - *(double *)(v0 + 96);
  }
  char v3 = *(unsigned char *)(v0 + 105);
  double v4 = v2;
  if (!v3) {
    double v4 = 0.0;
  }
  *(double *)(v0 + 96) = v4;
  *(unsigned char *)(v0 + 104) = v3 ^ 1;
  return result;
}

uint64_t sub_1DA812378(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1DA98C5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DA98C598();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1DA98B4A8();
  MEMORY[0x1F4188790](v9 - 8);
  _OWORD v16[3] = type metadata accessor for WidgetPowerlogProvider();
  void v16[4] = sub_1DA813ED0(qword_1EBE64F70, (void (*)(uint64_t))type metadata accessor for WidgetPowerlogProvider);
  v16[0] = a1;
  a2[7] = MEMORY[0x1E4FBC868];
  a2[8] = 0;
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE65CB0);
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1DA813ED0((unint64_t *)&qword_1EBE65CA0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE65C80);
  sub_1DA7BB96C();
  sub_1DA98C918();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCC58], v4);
  a2[9] = sub_1DA98C638();
  sub_1DA7A1A44((uint64_t)v16, (uint64_t)(a2 + 2));
  uint64_t v10 = a2[9];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1DA813F18;
  *(void *)(v11 + 24) = a2;
  aBlock[4] = sub_1DA814080;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA810EFC;
  void aBlock[3] = &block_descriptor_47;
  char v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v12);
  _Block_release(v12);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return (uint64_t)a2;
  }
  return result;
}

uint64_t sub_1DA812728(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1DA98C5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DA98C598();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1DA98B4A8();
  MEMORY[0x1F4188790](v9 - 8);
  _OWORD v16[3] = type metadata accessor for ControlsPowerlogProvider();
  void v16[4] = sub_1DA813ED0(qword_1EBE5A9F0, (void (*)(uint64_t))type metadata accessor for ControlsPowerlogProvider);
  v16[0] = a1;
  a2[7] = MEMORY[0x1E4FBC868];
  a2[8] = 0;
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE65CB0);
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1DA813ED0((unint64_t *)&qword_1EBE65CA0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE65C80);
  sub_1DA7BB96C();
  sub_1DA98C918();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCC58], v4);
  a2[9] = sub_1DA98C638();
  sub_1DA7A1A44((uint64_t)v16, (uint64_t)(a2 + 2));
  uint64_t v10 = a2[9];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1DA813D88;
  *(void *)(v11 + 24) = a2;
  aBlock[4] = sub_1DA813DD8;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA810EFC;
  void aBlock[3] = &block_descriptor_4;
  char v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v12);
  _Block_release(v12);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return (uint64_t)a2;
  }
  return result;
}

BOOL _s9ChronoKit26PowerlogWidgetViewIdentityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(a1 + 24);
  int v18 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  char v20 = *(unsigned char *)(a1 + 56);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 16);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 32);
  int v7 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  int v9 = *(unsigned __int8 *)(a2 + 56);
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
  if ((sub_1DA98C7A8() & 1) == 0) {
    return 0;
  }
  if (v2 == v4 && v21 == v16 || (v10 = sub_1DA98CE58(), BOOL result = 0, (v10 & 1) != 0))
  {
    if (v17)
    {
      if (!v6) {
        return 0;
      }
      if (v19 == v5 && v17 == v6)
      {
        if (v18 != v7) {
          return 0;
        }
        goto LABEL_16;
      }
      char v12 = sub_1DA98CE58();
      BOOL result = 0;
      if ((v12 & 1) == 0) {
        return result;
      }
    }
    else
    {
      BOOL result = 0;
      if (v6) {
        return result;
      }
    }
    if ((v18 ^ v7)) {
      return result;
    }
LABEL_16:
    if (v20)
    {
      uint64_t v13 = qword_1DA992298[v3];
      uint64_t v14 = v8;
      if (!v9)
      {
        uint64_t v14 = 3;
        return v13 == v14;
      }
    }
    else
    {
      uint64_t v14 = v8;
      if ((v9 & 1) == 0) {
        return v3 == v8;
      }
      uint64_t v13 = 3;
    }
    switch(v14)
    {
      case 3:
        uint64_t v14 = 4;
        break;
      case 4:
        uint64_t v14 = 5;
        break;
      case 5:
        uint64_t v14 = 6;
        break;
      case 6:
        uint64_t v14 = 7;
        break;
      case 7:
        uint64_t v14 = 8;
        break;
      default:
        return v13 == v14;
    }
    return v13 == v14;
  }
  return result;
}

uint64_t _s9ChronoKit27PowerlogControlViewIdentityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 32);
  int v4 = *(unsigned __int8 *)(a1 + 33);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  int v8 = *(unsigned __int8 *)(a2 + 32);
  int v9 = *(unsigned __int8 *)(a2 + 33);
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
  if ((sub_1DA98C7A8() & 1) == 0) {
    return 0;
  }
  if (v2 == v5 && v17 == v6 || (v10 = sub_1DA98CE58(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (v3)
    {
      uint64_t v12 = qword_1DA992298[v16];
      if (!v8)
      {
        uint64_t v13 = 3;
LABEL_18:
        BOOL v14 = v12 == v13;
        goto LABEL_19;
      }
    }
    else
    {
      if ((v8 & 1) == 0)
      {
        BOOL v14 = v16 == v7;
LABEL_19:
        int v15 = v14;
        return v15 & (v4 ^ v9 ^ 1u);
      }
      uint64_t v12 = 3;
    }
    uint64_t v13 = v7;
    switch(v7)
    {
      case 3:
        uint64_t v13 = 4;
        break;
      case 4:
        uint64_t v13 = 5;
        break;
      case 5:
        uint64_t v13 = 6;
        break;
      case 6:
        uint64_t v13 = 7;
        break;
      case 7:
        uint64_t v13 = 8;
        break;
      default:
        goto LABEL_18;
    }
    goto LABEL_18;
  }
  return result;
}

unint64_t sub_1DA812E80()
{
  unint64_t result = qword_1EA8E5DF0;
  if (!qword_1EA8E5DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5DF0);
  }
  return result;
}

unint64_t sub_1DA812ED4(uint64_t a1)
{
  unint64_t result = sub_1DA812EFC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DA812EFC()
{
  unint64_t result = qword_1EBE5AA78;
  if (!qword_1EBE5AA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE5AA78);
  }
  return result;
}

unint64_t sub_1DA812F54()
{
  unint64_t result = qword_1EBE5AA80;
  if (!qword_1EBE5AA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE5AA80);
  }
  return result;
}

unint64_t sub_1DA812FA8(uint64_t a1)
{
  unint64_t result = sub_1DA812FD0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DA812FD0()
{
  unint64_t result = qword_1EBE65160;
  if (!qword_1EBE65160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE65160);
  }
  return result;
}

unint64_t sub_1DA813028()
{
  unint64_t result = qword_1EBE62988;
  if (!qword_1EBE62988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE62988);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PowerlogWidgetLocation(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PowerlogWidgetLocation(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1DA8130CC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DA8130E8(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogWidgetLocation()
{
  return &type metadata for PowerlogWidgetLocation;
}

uint64_t dispatch thunk of PowerlogIdentity.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PowerlogIdentity.location.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t destroy for PowerlogControlViewIdentity(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PowerlogControlViewIdentity(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  id v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PowerlogControlViewIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PowerlogControlViewIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for PowerlogControlViewIdentity(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PowerlogControlViewIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogControlViewIdentity()
{
  return &type metadata for PowerlogControlViewIdentity;
}

uint64_t destroy for PowerlogWidgetViewIdentity(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PowerlogWidgetViewIdentity(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PowerlogWidgetViewIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v7;
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PowerlogWidgetViewIdentity(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for PowerlogWidgetViewIdentity(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PowerlogWidgetViewIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogWidgetViewIdentity()
{
  return &type metadata for PowerlogWidgetViewIdentity;
}

uint64_t sub_1DA8135D4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BasePowerlogViewService()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for BasePowerlogViewService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BasePowerlogViewService);
}

uint64_t dispatch thunk of BasePowerlogViewService.userIsViewing(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of BasePowerlogViewService.incrementTotalFrameRenderTime(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of BasePowerlogViewService.incrementTotalFrameSubmitTime(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of BasePowerlogViewService.incrementTotalFramesSubmitted(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of BasePowerlogViewService.incrementTotalFramesRendered(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of BasePowerlogViewService.flush()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t type metadata accessor for PowerlogWidgetViewService(uint64_t a1)
{
  return sub_1DA7A88D4(a1, qword_1EBE5A870);
}

uint64_t method lookup function for PowerlogWidgetViewService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PowerlogWidgetViewService);
}

uint64_t dispatch thunk of PowerlogWidgetViewService.__allocating_init(owner:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t type metadata accessor for PowerlogControlsViewService(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE5AA88);
}

uint64_t sub_1DA8137B4()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PowerlogControlsViewService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PowerlogControlsViewService);
}

uint64_t dispatch thunk of PowerlogControlsViewService.__allocating_init(owner:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t sub_1DA813818(uint64_t a1, void (*a2)(void *, uint64_t))
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
    sub_1DA98CAE8();
    uint64_t result = sub_1DA80F7CC(v2);
    uint64_t v6 = result;
    uint64_t v7 = 0;
    uint64_t v8 = v2 + 64;
    uint64_t v25 = v2 + 80;
    uint64_t v26 = v3;
    uint64_t v28 = v2 + 64;
    uint64_t v29 = v2;
    int v27 = v5;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v2 + 32))
    {
      unint64_t v10 = (unint64_t)v6 >> 6;
      if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(v2 + 36) != v5) {
        goto LABEL_23;
      }
      uint64_t v31 = v7;
      uint64_t v11 = *(void *)(v2 + 56);
      uint64_t v12 = *(void *)(v2 + 48) + (v6 << 6);
      uint64_t v13 = *(void *)(v12 + 8);
      uint64_t v15 = *(void *)(v12 + 16);
      uint64_t v14 = *(void *)(v12 + 24);
      uint64_t v16 = *(void *)(v12 + 32);
      char v17 = *(unsigned char *)(v12 + 40);
      uint64_t v32 = *(void *)(v12 + 48);
      char v33 = *(unsigned char *)(v12 + 56);
      uint64_t v18 = *(void *)(v11 + 8 * v6);
      id v19 = *(id *)v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v34[0] = v19;
      v34[1] = v13;
      id v34[2] = v15;
      v34[3] = v14;
      v34[4] = v16;
      char v35 = v17;
      uint64_t v36 = v32;
      char v37 = v33;
      uint64_t v38 = v18;
      a2(v34, v18);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1DA98CAB8();
      sub_1DA98CAF8();
      uint64_t v2 = v29;
      sub_1DA98CB08();
      uint64_t result = sub_1DA98CAC8();
      int64_t v9 = 1 << *(unsigned char *)(v29 + 32);
      if (v6 >= v9) {
        goto LABEL_24;
      }
      uint64_t v8 = v28;
      uint64_t v20 = *(void *)(v28 + 8 * v10);
      if ((v20 & (1 << v6)) == 0) {
        goto LABEL_25;
      }
      int v5 = v27;
      if (*(_DWORD *)(v29 + 36) != v27) {
        goto LABEL_26;
      }
      unint64_t v21 = v20 & (-2 << (v6 & 0x3F));
      if (v21)
      {
        int64_t v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v22 = v10 + 1;
        unint64_t v23 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v23)
        {
          unint64_t v24 = *(void *)(v28 + 8 * v22);
          if (v24)
          {
LABEL_18:
            int64_t v9 = __clz(__rbit64(v24)) + (v22 << 6);
          }
          else
          {
            while (v23 - 2 != v10)
            {
              unint64_t v24 = *(void *)(v25 + 8 * v10++);
              if (v24)
              {
                unint64_t v22 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v7 = v31 + 1;
      uint64_t v6 = v9;
      if (v31 + 1 == v26) {
        return v39;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA813A9C(uint64_t a1, void (*a2)(void *, uint64_t))
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1DA98CAE8();
    uint64_t result = sub_1DA80F7CC(v2);
    uint64_t v6 = result;
    uint64_t v7 = 0;
    uint64_t v8 = v2 + 64;
    uint64_t v24 = v2 + 80;
    uint64_t v25 = v3;
    uint64_t v27 = v2 + 64;
    uint64_t v28 = v2;
    int v26 = v5;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v2 + 32))
    {
      unint64_t v10 = (unint64_t)v6 >> 6;
      if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(v2 + 36) != v5) {
        goto LABEL_23;
      }
      uint64_t v30 = v7;
      uint64_t v11 = *(void *)(v2 + 48) + 40 * v6;
      uint64_t v12 = *(void *)(v11 + 8);
      uint64_t v14 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v11 + 24);
      char v15 = *(unsigned char *)(v11 + 32);
      char v16 = *(unsigned char *)(v11 + 33);
      uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v6);
      id v18 = *(id *)v11;
      swift_bridgeObjectRetain();
      swift_retain();
      v31[0] = v18;
      v31[1] = v12;
      v31[2] = v14;
      v31[3] = v13;
      char v32 = v15;
      char v33 = v16;
      uint64_t v34 = v17;
      a2(v31, v17);
      swift_release();
      swift_bridgeObjectRelease();

      sub_1DA98CAB8();
      sub_1DA98CAF8();
      uint64_t v2 = v28;
      sub_1DA98CB08();
      uint64_t result = sub_1DA98CAC8();
      int64_t v9 = 1 << *(unsigned char *)(v28 + 32);
      if (v6 >= v9) {
        goto LABEL_24;
      }
      uint64_t v8 = v27;
      uint64_t v19 = *(void *)(v27 + 8 * v10);
      if ((v19 & (1 << v6)) == 0) {
        goto LABEL_25;
      }
      int v5 = v26;
      if (*(_DWORD *)(v28 + 36) != v26) {
        goto LABEL_26;
      }
      unint64_t v20 = v19 & (-2 << (v6 & 0x3F));
      if (v20)
      {
        int64_t v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v21 = v10 + 1;
        unint64_t v22 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v22)
        {
          unint64_t v23 = *(void *)(v27 + 8 * v21);
          if (v23)
          {
LABEL_18:
            int64_t v9 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v10)
            {
              unint64_t v23 = *(void *)(v24 + 8 * v10++);
              if (v23)
              {
                unint64_t v21 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v7 = v30 + 1;
      uint64_t v6 = v9;
      if (v30 + 1 == v25) {
        return v35;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA813CF4(uint64_t a1, uint64_t a2)
{
  return sub_1DA8113C8(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1DA813D00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v5 = *(uint64_t (**)(uint64_t, void))(v2 + 48);
  type metadata accessor for PowerlogViewEntry();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = v5(a1, *(void *)(a1 + *(int *)(TupleTypeMetadata2 + 48)));
  *a2 = result;
  return result;
}

void sub_1DA813D88()
{
  sub_1DA81179C(v0, (uint64_t)&unk_1F34DBE50, (uint64_t)sub_1DA813E50, (uint64_t)&block_descriptor_40);
}

uint64_t sub_1DA813DC8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DA813DD8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1DA813E18()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA813E50(uint64_t a1)
{
  return sub_1DA811914(a1, v1, (uint64_t)sub_1DA813E94, (uint64_t (*)(uint64_t, uint64_t, unsigned char *, unsigned char *))sub_1DA813A9C);
}

uint64_t sub_1DA813E94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  char v4 = *(unsigned char *)(v2 + 24);
  long long v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  __int16 v8 = *(_WORD *)(a1 + 32);
  return sub_1DA8112CC((uint64_t)v7, a2, v3, v4);
}

uint64_t sub_1DA813ED0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DA813F18()
{
  sub_1DA81179C(v0, (uint64_t)&unk_1F34DBEA0, (uint64_t)sub_1DA813F68, (uint64_t)&block_descriptor_53);
}

uint64_t sub_1DA813F58()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DA813F68(uint64_t a1)
{
  return sub_1DA811914(a1, v1, (uint64_t)sub_1DA813FAC, (uint64_t (*)(uint64_t, uint64_t, unsigned char *, unsigned char *))sub_1DA813818);
}

uint64_t sub_1DA813FAC(_OWORD *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  char v4 = *(unsigned char *)(v2 + 24);
  long long v5 = a1[1];
  v7[0] = *a1;
  v7[1] = v5;
  v8[0] = a1[2];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 41);
  return sub_1DA8111D4((uint64_t)v7, a2, v3, v4);
}

uint64_t sub_1DA813FF0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1DA814028()
{
  return sub_1DA810F24(*(unsigned char *)(v0 + 24));
}

uint64_t sub_1DA814054()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DA814064@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA8115A4(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

char *sub_1DA8140A8(uint64_t a1, char a2, char a3, char a4)
{
  int v7 = a2 & 1;
  *(void *)&v4[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape] = 0;
  __int16 v8 = &v4[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent];
  v4[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay] = 0;
  v4[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController__renderEngine] = a2 & 1;
  objc_allocWithZone((Class)type metadata accessor for SecureHostingController());
  uint64_t v32 = a1;
  int64_t v9 = v4;
  swift_retain();
  *(void *)&v9[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController] = sub_1DA98AA28();
  swift_beginAccess();
  *__int16 v8 = a3;

  v31.receiver = v9;
  v31.super_class = (Class)type metadata accessor for BaseWidgetContentViewController();
  unint64_t v10 = (char *)objc_msgSendSuper2(&v31, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v11 = OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController;
  uint64_t v12 = *(void **)&v10[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController];
  uint64_t v13 = v10;
  uint64_t result = (char *)objc_msgSend(v12, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  char v15 = result;
  char v16 = self;
  id v17 = objc_msgSend(v16, sel_clearColor);
  objc_msgSend(v15, sel_setBackgroundColor_, v17);

  uint64_t result = (char *)objc_msgSend(v13, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v18 = result;
  id v19 = objc_msgSend(v16, sel_clearColor);
  objc_msgSend(v18, sel_setBackgroundColor_, v19);

  if (!v7)
  {
    unint64_t v20 = *(void **)&v10[v11];
    unint64_t v21 = &v13[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent];
    swift_beginAccess();
    char v22 = *v21;
    id v23 = v20;
    sub_1DA98238C(a4 & 1, (v22 & 1) == 0);
    goto LABEL_7;
  }
  uint64_t result = (char *)objc_msgSend(v13, sel_view);
  if (result)
  {
    uint64_t v24 = result;
    id v23 = objc_msgSend(result, sel_layer);

    objc_msgSend(v23, sel_setHitTestsAsOpaque_, 1);
LABEL_7:

    objc_msgSend(v13, sel_addChildViewController_, *(void *)&v10[v11]);
    uint64_t result = (char *)objc_msgSend(v13, sel_view);
    if (result)
    {
      uint64_t v25 = result;
      uint64_t result = (char *)objc_msgSend(*(id *)&v10[v11], sel_view);
      if (result)
      {
        int v26 = result;
        objc_msgSend(v25, sel_addSubview_, result);

        uint64_t v27 = *(void **)&v10[v11];
        uint64_t v28 = v13;
        id v29 = v27;
        objc_msgSend(v29, sel_didMoveToParentViewController_, v28);

        swift_release();
        return v28;
      }
      goto LABEL_13;
    }
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA8143D4()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  sub_1DA98AA38();

  return v3;
}

uint64_t sub_1DA81441C()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  swift_retain();
  sub_1DA98AA48();

  return swift_release();
}

void (*sub_1DA814478(void *a1))(void *a1, char a2)
{
  uint64_t v3 = OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController;
  a1[2] = v1;
  a1[3] = v3;
  id v4 = *(id *)(v1 + v3);
  sub_1DA98AA38();

  *a1 = a1[1];
  return sub_1DA8144EC;
}

void sub_1DA8144EC(void *a1, char a2)
{
  uint64_t v2 = *(void **)(a1[2] + a1[3]);
  a1[1] = *a1;
  if (a2)
  {
    swift_retain_n();
    id v3 = v2;
    sub_1DA98AA48();
    swift_release();

    swift_release();
  }
  else
  {
    id v4 = v2;
    swift_retain();
    sub_1DA98AA48();
    swift_release();
  }
}

uint64_t sub_1DA8145C0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  type metadata accessor for SecureHostingController();
  sub_1DA816524(&qword_1EBE63CB8, (void (*)(uint64_t))type metadata accessor for SecureHostingController);
  id v2 = v1;
  if (sub_1DA98A948())
  {
    self;
    uint64_t v3 = swift_dynamicCastObjCClass();

    if (!v3) {
      swift_unknownObjectRelease();
    }
  }
  else
  {

    return 0;
  }
  return v3;
}

uint64_t type metadata accessor for SecureHostingController()
{
  uint64_t result = qword_1EBE63CC0;
  if (!qword_1EBE63CC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DA8146D8()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController__renderEngine);
}

void *sub_1DA8146E8()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1DA814738(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
  id v5 = a1;
  sub_1DA8153B4(v4);
}

void (*sub_1DA8147A8(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape;
  void v3[4] = v1;
  v3[5] = v4;
  id v5 = (void **)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *v5;
  v3[3] = *v5;
  id v7 = v6;
  return sub_1DA814830;
}

void sub_1DA814830(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v4 = (void **)(*(void *)a1 + 24);
  id v3 = *v4;
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  id v7 = *(void **)(v6 + v5);
  *(void *)(v6 + v5) = *v4;
  if (a2)
  {
    id v8 = v3;
    sub_1DA8153B4(v7);

    id v7 = *v4;
  }
  else
  {
    id v9 = v3;
    sub_1DA8153B4(v7);
  }

  free(v2);
}

uint64_t sub_1DA8148CC()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1DA814914(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_1DA814960())()
{
  return j__swift_endAccess;
}

void sub_1DA8149BC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  type metadata accessor for SecureHostingController();
  sub_1DA816524(&qword_1EBE63CB8, (void (*)(uint64_t))type metadata accessor for SecureHostingController);
  id v3 = v1;
  if (sub_1DA98A948())
  {
    self;
    id v2 = (void *)swift_dynamicCastObjCClass();
    if (v2) {
      objc_msgSend(v2, sel_setNeedsSynchronousUpdate_, 1);
    }

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

void sub_1DA814AC8(uint64_t a1@<X8>)
{
  id v3 = *(id *)(v1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  sub_1DA814BB8(a1);
}

uint64_t sub_1DA814B24()
{
  BSDispatchQueueAssertMain();
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  id v2 = (void *)sub_1DA989158();
  id v3 = objc_msgSend(v1, sel__timelinesForDateInterval_, v2);

  sub_1DA8159A4();
  uint64_t v4 = sub_1DA98C288();

  return v4;
}

double sub_1DA814BB8@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for SecureHostingController();
  sub_1DA816524(&qword_1EBE63CB8, (void (*)(uint64_t))type metadata accessor for SecureHostingController);
  if (!sub_1DA98A948()) {
    goto LABEL_37;
  }
  self;
  id v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2) {
    goto LABEL_36;
  }
  id v3 = v2;
  id v4 = objc_msgSend(v2, sel_statistics);
  type metadata accessor for RBDrawableStatisticsKey(0);
  sub_1DA816524(&qword_1EBE62B10, type metadata accessor for RBDrawableStatisticsKey);
  uint64_t v5 = sub_1DA98BE88();

  if (!*(void *)(v5 + 16))
  {
    long long v26 = 0u;
    long long v27 = 0u;
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  id v6 = (id)*MEMORY[0x1E4F96038];
  unint64_t v7 = sub_1DA7FE080((uint64_t)v6);
  if ((v8 & 1) == 0)
  {
    long long v26 = 0u;
    long long v27 = 0u;

    goto LABEL_12;
  }
  sub_1DA800210(*(void *)(v5 + 56) + 32 * v7, (uint64_t)&v26);

  swift_bridgeObjectRelease();
  if (*((void *)&v27 + 1))
  {
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_36;
    }
    id v9 = objc_msgSend(v3, sel_statistics);
    uint64_t v10 = sub_1DA98BE88();

    if (*(void *)(v10 + 16))
    {
      id v11 = (id)*MEMORY[0x1E4F96040];
      unint64_t v12 = sub_1DA7FE080((uint64_t)v11);
      if (v13)
      {
        sub_1DA800210(*(void *)(v10 + 56) + 32 * v12, (uint64_t)&v26);
      }
      else
      {
        long long v26 = 0u;
        long long v27 = 0u;
      }
    }
    else
    {
      long long v26 = 0u;
      long long v27 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v27 + 1)) {
      goto LABEL_13;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_36;
    }
    id v14 = objc_msgSend(v3, sel_statistics);
    uint64_t v15 = sub_1DA98BE88();

    if (*(void *)(v15 + 16))
    {
      id v16 = (id)*MEMORY[0x1E4F96030];
      unint64_t v17 = sub_1DA7FE080((uint64_t)v16);
      if (v18)
      {
        sub_1DA800210(*(void *)(v15 + 56) + 32 * v17, (uint64_t)&v26);
      }
      else
      {
        long long v26 = 0u;
        long long v27 = 0u;
      }
    }
    else
    {
      long long v26 = 0u;
      long long v27 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v27 + 1)) {
      goto LABEL_13;
    }
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_36:
      swift_unknownObjectRelease();
      goto LABEL_37;
    }
    id v19 = objc_msgSend(v3, sel_statistics);
    uint64_t v20 = sub_1DA98BE88();

    if (*(void *)(v20 + 16))
    {
      id v21 = (id)*MEMORY[0x1E4F96028];
      unint64_t v22 = sub_1DA7FE080((uint64_t)v21);
      if (v23)
      {
        sub_1DA800210(*(void *)(v20 + 56) + 32 * v22, (uint64_t)&v26);
      }
      else
      {
        long long v26 = 0u;
        long long v27 = 0u;
      }
    }
    else
    {
      long long v26 = 0u;
      long long v27 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v27 + 1))
    {
      if (swift_dynamicCast())
      {
        objc_msgSend(v3, sel_resetStatistics_alpha_, 11, 0.0);
        swift_unknownObjectRelease();
        *(void *)a1 = v25;
        *(void *)(a1 + 8) = v25;
        *(void *)(a1 + 16) = v25;
        *(void *)(a1 + 24) = v25;
        *(unsigned char *)(a1 + 32) = 0;
        return result;
      }
      goto LABEL_36;
    }
  }
LABEL_13:
  swift_unknownObjectRelease();
  sub_1DA7A6D20((uint64_t)&v26);
LABEL_37:
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

uint64_t sub_1DA815014()
{
  return 1;
}

uint64_t SecureHostingController.__allocating_init(rootView:)()
{
  id v1 = objc_allocWithZone(v0);
  return sub_1DA98AA28();
}

uint64_t SecureHostingController.init(rootView:)()
{
  return sub_1DA98AA28();
}

uint64_t SecureHostingController.__allocating_init(coder:rootView:)()
{
  id v1 = objc_allocWithZone(v0);
  return sub_1DA98AA18();
}

uint64_t SecureHostingController.init(coder:rootView:)()
{
  return sub_1DA98AA18();
}

id SecureHostingController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id SecureHostingController.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecureHostingController();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id sub_1DA815194(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for SecureHostingController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id SecureHostingController.__deallocating_deinit()
{
  return sub_1DA815E4C(0, type metadata accessor for SecureHostingController);
}

uint64_t sub_1DA8151FC()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for SecureHostingController());
  return sub_1DA98AA28();
}

uint64_t sub_1DA815240()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for SecureHostingController());
  return sub_1DA98AA18();
}

void sub_1DA815294(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = *(id *)(*a1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  sub_1DA98AA38();

  *a2 = v4;
}

void sub_1DA8152E8(uint64_t a1, void *a2)
{
  id v2 = *(void **)(*a2 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  swift_retain();
  id v3 = v2;
  sub_1DA98AA48();
}

void sub_1DA81533C(void **a1, void *a2)
{
  id v2 = *a1;
  id v3 = (void **)(*a2 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = v2;
  id v5 = v2;
  sub_1DA8153B4(v4);
}

void sub_1DA8153B4(void *a1)
{
  id v2 = v1;
  uint64_t v4 = (void **)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape];
  swift_beginAccess();
  id v5 = *v4;
  if (!*v4)
  {
    if (!a1) {
      return;
    }
LABEL_6:
    if (v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController__renderEngine] != 1) {
      return;
    }
    id v9 = *v4;
    if (v9)
    {
      uint64_t v10 = OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer;
      if (*(void *)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer])
      {
        id v11 = v9;
        goto LABEL_15;
      }
      id v16 = objc_allocWithZone(MEMORY[0x1E4F39C88]);
      id v17 = v9;
      id v18 = objc_msgSend(v16, sel_init);
      id v19 = objc_msgSend(v2, sel_view);
      if (v19)
      {
        uint64_t v20 = v19;
        id v21 = objc_msgSend(v19, sel_layer);

        objc_msgSend(v21, sel_bounds);
        double v23 = v22;
        double v25 = v24;
        double v27 = v26;
        double v29 = v28;

        objc_msgSend(v18, sel_setFrame_, v23, v25, v27, v29);
        id v30 = objc_msgSend(self, sel_whiteColor);
        id v31 = objc_msgSend(v30, sel_CGColor);

        objc_msgSend(v18, sel_setFillColor_, v31);
        uint64_t v32 = *(void **)&v2[v10];
        *(void *)&v2[v10] = v18;
        id v33 = v18;

        id v34 = objc_msgSend(v2, sel_view);
        if (v34)
        {
          uint64_t v35 = v34;
          id v36 = objc_msgSend(v34, sel_layer);

          objc_msgSend(v36, sel_setMask_, v33);
LABEL_15:
          if (qword_1EBE66028 != -1) {
            swift_once();
          }
          uint64_t v37 = *(void *)(*((void *)off_1EBE66018 + 31) + 88);
          uint64_t v38 = *(os_unfair_lock_s **)(v37 + 16);
          swift_retain();
          swift_retain();
          os_unfair_lock_lock(v38);
          LOBYTE(v38) = sub_1DA7AE76C();
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 16));
          swift_release();
          swift_release();
          if ((v38 & 1) == 0) {
            goto LABEL_22;
          }
          uint64_t v39 = OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay;
          if (*(void *)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay]) {
            goto LABEL_22;
          }
          id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
          id v41 = objc_msgSend(v2, sel_view);
          if (v41)
          {
            uint64_t v42 = v41;
            id v43 = objc_msgSend(v41, sel_layer);

            objc_msgSend(v43, sel_bounds);
            double v45 = v44;
            double v47 = v46;
            double v49 = v48;
            double v51 = v50;

            objc_msgSend(v40, sel_setFrame_, v45, v47, v49, v51);
            uint64_t v52 = self;
            id v53 = objc_msgSend(v52, sel_redColor);
            id v54 = objc_msgSend(v53, sel_CGColor);

            objc_msgSend(v40, sel_setStrokeColor_, v54);
            objc_msgSend(v40, sel_setLineWidth_, 3.0);
            id v55 = objc_msgSend(v52, sel_magentaColor);
            id v56 = objc_msgSend(v55, sel_colorWithAlphaComponent_, 0.2);

            id v57 = objc_msgSend(v56, sel_CGColor);
            objc_msgSend(v40, sel_setFillColor_, v57);

            id v58 = objc_msgSend(v2, sel_view);
            if (v58)
            {
              uint64_t v59 = v58;
              id v60 = objc_msgSend(v58, sel_layer);

              objc_msgSend(v60, sel_addSublayer_, v40);
              uint64_t v61 = *(void **)&v2[v39];
              *(void *)&v2[v39] = v40;

LABEL_22:
              uint64_t v62 = *(void **)&v2[v10];
              if (v62) {
                objc_msgSend(v62, sel_setPath_, v9);
              }
              unint64_t v63 = *(void **)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay];
              if (v63)
              {
                id v64 = v63;
                objc_msgSend(v64, sel_setPath_, v9);
              }
              goto LABEL_26;
            }
LABEL_32:
            __break(1u);
            return;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
    }
    else
    {
      id v12 = objc_msgSend(v2, sel_view);
      if (v12)
      {
        char v13 = v12;
        id v14 = objc_msgSend(v12, sel_layer);

        objc_msgSend(v14, sel_setMask_, 0);
        uint64_t v15 = *(void **)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer];
        *(void *)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer] = 0;

        id v9 = *(void **)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay];
        *(void *)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay] = 0;
LABEL_26:

        return;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_30;
  }
  if (!a1) {
    goto LABEL_6;
  }
  type metadata accessor for CGPath(0);
  sub_1DA816524(&qword_1EA8E5E38, type metadata accessor for CGPath);
  id v6 = a1;
  id v7 = v5;
  char v8 = sub_1DA989B98();

  if ((v8 & 1) == 0) {
    goto LABEL_6;
  }
}

unint64_t sub_1DA8159A4()
{
  unint64_t result = qword_1EA8E5E18;
  if (!qword_1EA8E5E18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA8E5E18);
  }
  return result;
}

void BaseWidgetContentViewController.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape] = 0;
  v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay] = 0;

  sub_1DA98CBB8();
  __break(1u);
}

void sub_1DA815B10()
{
  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for BaseWidgetContentViewController();
  objc_msgSendSuper2(&v37, sel_viewWillLayoutSubviews);
  id v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController], sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = v3;
  objc_msgSend(v3, sel_bounds);
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;

  objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
  char v13 = *(void **)&v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer];
  if (!v13) {
    goto LABEL_6;
  }
  id v14 = v13;
  id v15 = objc_msgSend(v0, sel_view);
  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v16 = v15;
  objc_msgSend(v15, sel_bounds);
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;

  objc_msgSend(v14, sel_setFrame_, v18, v20, v22, v24);
LABEL_6:
  double v25 = *(void **)&v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay];
  if (!v25) {
    return;
  }
  id v26 = v25;
  id v27 = objc_msgSend(v0, sel_view);
  if (!v27)
  {
LABEL_13:
    __break(1u);
    return;
  }
  double v28 = v27;
  objc_msgSend(v27, sel_bounds);
  double v30 = v29;
  double v32 = v31;
  double v34 = v33;
  double v36 = v35;

  objc_msgSend(v26, sel_setFrame_, v30, v32, v34, v36);
}

uint64_t type metadata accessor for BaseWidgetContentViewController()
{
  return self;
}

id BaseWidgetContentViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    double v6 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
  }
  else
  {
    double v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void BaseWidgetContentViewController.init(nibName:bundle:)()
{
}

id BaseWidgetContentViewController.__deallocating_deinit(uint64_t a1)
{
  return sub_1DA815E4C(a1, type metadata accessor for BaseWidgetContentViewController);
}

id sub_1DA815E4C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1DA815EF0(uint64_t a1@<X8>)
{
  id v3 = *(id *)(*v1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  sub_1DA814BB8(a1);
}

id sub_1DA815F58@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  id v3 = (void **)(*a1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape);
  swift_beginAccess();
  objc_super v4 = *v3;
  *a2 = *v3;

  return v4;
}

uint64_t sub_1DA815FC0@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xC0))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1DA816020(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xC8))(*a1);
}

uint64_t sub_1DA816078()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DA8160B8()
{
  return type metadata accessor for SecureHostingController();
}

uint64_t method lookup function for BaseWidgetContentViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BaseWidgetContentViewController);
}

uint64_t dispatch thunk of BaseWidgetContentViewController.content.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.content.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.content.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.rbLayer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.isUsingCoreAnimation.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.contentShape.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.contentShape.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.contentShape.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.isContentTransparent.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.isContentTransparent.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.isContentTransparent.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.setNeedsSynchronousUpdate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.consumeRenderStatistics()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.alwaysOnTimelines(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

unsigned char *storeEnumTagSinglePayload for WidgetRenderEngine(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA816494);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRenderEngine()
{
  return &type metadata for WidgetRenderEngine;
}

unint64_t sub_1DA8164D0()
{
  unint64_t result = qword_1EA8E5E30;
  if (!qword_1EA8E5E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5E30);
  }
  return result;
}

uint64_t sub_1DA816524(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA816570(uint64_t a1, unint64_t a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      uint64_t v29 = MEMORY[0x1E4FBC860];
      int64_t v7 = v4 & ~(v4 >> 63);
      sub_1DA7F7A64(0, v7, 0);
      uint64_t v3 = v29;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v8 = (int)a1;
        }
        else {
          uint64_t v8 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_45;
        }
        uint64_t v8 = 0;
      }
      int v25 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v8 < (int)a1 || v8 >= a1 >> 32) {
              goto LABEL_36;
            }
            uint64_t v9 = sub_1DA9891A8();
            if (!v9) {
              goto LABEL_46;
            }
            uint64_t v10 = v9;
            uint64_t v11 = sub_1DA9891D8();
            uint64_t v12 = v8 - v11;
            if (__OFSUB__(v8, v11)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v8 < *(void *)(a1 + 16)) {
              goto LABEL_38;
            }
            if (v8 >= *(void *)(a1 + 24)) {
              goto LABEL_40;
            }
            uint64_t v14 = sub_1DA9891A8();
            if (!v14) {
              goto LABEL_47;
            }
            uint64_t v10 = v14;
            uint64_t v15 = sub_1DA9891D8();
            uint64_t v12 = v8 - v15;
            if (__OFSUB__(v8, v15)) {
              goto LABEL_41;
            }
          }
          char v13 = *(unsigned char *)(v10 + v12);
        }
        else
        {
          if (v8 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          uint64_t v26 = a1;
          int v27 = a2;
          __int16 v28 = WORD2(a2);
          char v13 = *((unsigned char *)&v26 + v8);
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58FD8);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1DA990050;
        *(void *)(v16 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v16 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v16 + 32) = v13;
        unint64_t v2 = sub_1DA98C068();
        uint64_t v18 = v17;
        uint64_t v29 = v3;
        unint64_t v20 = *(void *)(v3 + 16);
        unint64_t v19 = *(void *)(v3 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1DA7F7A64(v19 > 1, v20 + 1, 1);
          uint64_t v3 = v29;
        }
        *(void *)(v3 + 16) = v20 + 1;
        uint64_t v21 = v3 + 16 * v20;
        *(void *)(v21 + 32) = v2;
        *(void *)(v21 + 40) = v18;
        ++v8;
        --v7;
        --v4;
        LODWORD(v2) = v25;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t PublicToken.environmentName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PublicToken.token.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1DA79ED98(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t PublicToken.init(environmentName:token:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

unint64_t PublicToken.description.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  sub_1DA79ED98(v2, v1);
  sub_1DA816570(v2, v1);
  sub_1DA79DA70(v2, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
  sub_1DA7BE9FC();
  sub_1DA98BFC8();
  swift_bridgeObjectRelease();
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

uint64_t static PublicToken.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_1DA98CE58() & 1) == 0) {
    return 0;
  }

  return sub_1DA816D7C(v2, v3, v4, v5);
}

uint64_t sub_1DA816B60(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_1DA98CE58() & 1) == 0) {
    return 0;
  }

  return sub_1DA816D7C(v2, v3, v4, v5);
}

uint64_t sub_1DA816BEC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1DA96ECF0((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1DA816CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1DA9891A8();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1DA9891D8();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1DA9891C8();
  sub_1DA96ECF0(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1DA816D7C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1DA816FE4);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1DA79ED98(a3, a4);
                  sub_1DA79ED98(a1, a2);
                  char v17 = sub_1DA816CC4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1DA79DA70(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1DA79ED98(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1DA816CC4(v21, v22, v20, a3, a4);
                  sub_1DA79DA70(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1DA79ED98(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1DA79ED98(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1DA816BEC(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1DA79DA70(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t destroy for PublicToken(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);

  return sub_1DA79DA70(v2, v3);
}

void *initializeWithCopy for PublicToken(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_1DA79ED98(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

void *assignWithCopy for PublicToken(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  sub_1DA79ED98(v5, v4);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_1DA79DA70(v6, v7);
  return a1;
}

void *assignWithTake for PublicToken(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1DA79DA70(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PublicToken(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PublicToken(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PublicToken()
{
  return &type metadata for PublicToken;
}

uint64_t sub_1DA8171E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DA817298(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1DA8176A8(a1);
  return v2;
}

uint64_t sub_1DA8172D8()
{
  return 0;
}

uint64_t sub_1DA8174A4()
{
  return sub_1DA98CF48();
}

uint64_t sub_1DA817508()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA81754C()
{
  return sub_1DA98CF68();
}

BOOL sub_1DA817588(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      && *(double *)(a1 + 32) == *(double *)(a2 + 32);
}

double sub_1DA8175CC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + *(void *)(*(void *)v1 + 104);
  double result = *(double *)(v2 + 32);
  long long v4 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v4;
  *(double *)(a1 + 32) = result;
  return result;
}

void sub_1DA8175F8(char a1)
{
  int v2 = *(unsigned __int8 *)(v1 + *(void *)(*(void *)v1 + 120));
  if (v2 != (a1 & 1))
  {
    if (*(unsigned char *)(v1 + *(void *)(*(void *)v1 + 120)))
    {
      BSContinuousMachTimeNow();
      uint64_t v3 = *(void *)(*(void *)v1 + 112);
      *(void *)(v1 + v3) = v4;
    }
    else
    {
      sub_1DA8180CC();
      uint64_t v3 = *(void *)(*(void *)v1 + 112);
      *(void *)(v1 + v3) = 0;
    }
    *(unsigned char *)(v1 + v3 + 8) = v2 ^ 1;
  }
}

void sub_1DA817684(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  char v3 = *(unsigned char *)(v1 + v2);
  *(unsigned char *)(v1 + v2) = a1;
  sub_1DA8175F8(v3);
}

uint64_t *sub_1DA8176A8(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = (uint64_t)v1 + *(void *)(*v1 + 104);
  *(_OWORD *)uint64_t v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(void *)(v3 + 32) = 0;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 112);
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  *((unsigned char *)v1 + *(void *)(*v1 + 120)) = 0;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 32))((uint64_t)v1 + *(void *)(*v1 + 96), a1);
  return v1;
}

uint64_t sub_1DA81777C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v6 = (char *)&v11 - v5;
  *(void *)&long long v12 = 0;
  *((void *)&v12 + 1) = 0xE000000000000000;
  sub_1DA98CA18();
  long long v11 = v12;
  sub_1DA98C148();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2 + *(void *)(*(void *)v2 + 96), v3);
  sub_1DA98CE08();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1DA98C148();
  unint64_t v7 = (long long *)(v2 + *(void *)(*(void *)v2 + 104));
  uint64_t v8 = *((void *)v7 + 4);
  long long v9 = v7[1];
  long long v12 = *v7;
  long long v13 = v9;
  uint64_t v14 = v8;
  sub_1DA8172D8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return v11;
}

double sub_1DA817934()
{
  return sub_1DA81805C((void (*)(long long *))sub_1DA818520);
}

double sub_1DA817970()
{
  return sub_1DA81805C((void (*)(long long *))sub_1DA81850C);
}

double sub_1DA8179AC()
{
  return sub_1DA81805C((void (*)(long long *))sub_1DA8184F0);
}

double sub_1DA8179E8()
{
  return sub_1DA81805C((void (*)(long long *))sub_1DA8184D4);
}

double sub_1DA817A28()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  double result = 0.0;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(void *)(v1 + 32) = 0;
  return result;
}

void sub_1DA817A50(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(v5 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  long long v9 = (char *)&v19 - v8;
  uint64_t v10 = type metadata accessor for PowerlogViewEntry();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v3[*(void *)(v5 + 96)], v6);
  uint64_t v11 = swift_allocObject();
  sub_1DA8176A8((uint64_t)v9);
  uint64_t v12 = *(void *)v3;
  long long v13 = &v3[*(void *)(*(void *)v3 + 104)];
  uint64_t v14 = *((void *)v13 + 4);
  uint64_t v15 = v11 + *(void *)(*(void *)v11 + 104);
  long long v16 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v13;
  *(_OWORD *)(v15 + 16) = v16;
  *(void *)(v15 + 32) = v14;
  uint64_t v17 = *(void *)(*(void *)v11 + 120);
  char v18 = *(unsigned char *)(v11 + v17);
  *(unsigned char *)(v11 + v17) = v3[*(void *)(v12 + 120)];
  sub_1DA8175F8(v18);
  a2[3] = v10;
  *a2 = v11;
}

uint64_t sub_1DA817C04()
{
  uint64_t v0 = swift_retain();
  sub_1DA817A50(v0, v3);
  swift_release();
  __swift_project_boxed_opaque_existential_0(v3, v3[3]);
  uint64_t v1 = sub_1DA98CE38();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v1;
}

uint64_t sub_1DA817C68(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)v13 - v7;
  (*(void (**)(char *, char *, uint64_t, double))(v5 + 16))((char *)v13 - v7, &v2[*(void *)(v3 + 96)], v4, v6);
  sub_1DA98BFB8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  long long v9 = &v2[*(void *)(*(void *)v2 + 104)];
  uint64_t v10 = *((void *)v9 + 4);
  long long v11 = *((_OWORD *)v9 + 1);
  v13[0] = *(_OWORD *)v9;
  v13[1] = v11;
  uint64_t v14 = v10;
  sub_1DA8174A4();
  return sub_1DA98CF38();
}

uint64_t sub_1DA817DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  v14((char *)&v25 - v11, v13 + *(void *)(*(void *)v13 + 96), v5, v10);
  ((void (*)(char *, uint64_t, uint64_t))v14)(v8, a2 + *(void *)(*(void *)a2 + 96), v5);
  char v15 = sub_1DA98BFF8();
  long long v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v8, v5);
  v16(v12, v5);
  if ((v15 & 1) != 0
    && ((uint64_t v17 = a1 + *(void *)(*(void *)a1 + 104),
         uint64_t v18 = a2 + *(void *)(*(void *)a2 + 104),
         *(double *)v17 == *(double *)v18)
      ? (BOOL v19 = *(double *)(v17 + 8) == *(double *)(v18 + 8))
      : (BOOL v19 = 0),
        v19 ? (BOOL v20 = *(void *)(v17 + 16) == *(void *)(v18 + 16)) : (BOOL v20 = 0),
        v20 ? (BOOL v21 = *(void *)(v17 + 24) == *(void *)(v18 + 24)) : (BOOL v21 = 0),
        v21 ? (BOOL v22 = *(double *)(v17 + 32) == *(double *)(v18 + 32)) : (BOOL v22 = 0),
        v22))
  {
    char v23 = *(unsigned char *)(a1 + *(void *)(*(void *)a1 + 120)) ^ *(unsigned char *)(a2 + *(void *)(*(void *)a2 + 120)) ^ 1;
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

double sub_1DA81805C(void (*a1)(long long *))
{
  uint64_t v2 = (double *)(v1 + *(void *)(*(void *)v1 + 104));
  double v3 = v2[4];
  long long v4 = *((_OWORD *)v2 + 1);
  long long v7 = *(_OWORD *)v2;
  long long v8 = v4;
  double v9 = v3;
  a1(&v7);
  double result = v9;
  long long v6 = v8;
  *(_OWORD *)uint64_t v2 = v7;
  *((_OWORD *)v2 + 1) = v6;
  void v2[4] = result;
  return result;
}

void sub_1DA8180CC()
{
  uint64_t v1 = BSContinuousMachTimeNow();
  uint64_t v3 = v2;
  uint64_t v4 = *v0;
  uint64_t v5 = (uint64_t)v0 + *(void *)(*v0 + 112);
  if ((*(unsigned char *)(v5 + 8) & 1) == 0)
  {
    MEMORY[0x1F4188790](v1);
    sub_1DA81805C((void (*)(long long *))sub_1DA8184BC);
    uint64_t v4 = *v0;
  }
  int v6 = *((unsigned __int8 *)v0 + *(void *)(v4 + 120));
  uint64_t v7 = v3;
  if (!v6) {
    uint64_t v7 = 0;
  }
  *(void *)uint64_t v5 = v7;
  *(unsigned char *)(v5 + 8) = v6 ^ 1;
}

double sub_1DA8181A4(uint64_t a1, double a2, double a3)
{
  double result = a2 - a3 + *(double *)(a1 + 32);
  *(double *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1DA8181B8()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return v0;
}

uint64_t sub_1DA818228()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PowerlogViewEntry()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DA8182EC()
{
  sub_1DA98CF18();
  sub_1DA817C68((uint64_t)v1);
  return sub_1DA98CF68();
}

uint64_t getEnumTagSinglePayload for PowerlogViewMetrics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PowerlogViewMetrics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)double result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PowerlogViewMetrics()
{
  return &type metadata for PowerlogViewMetrics;
}

unint64_t sub_1DA818394()
{
  unint64_t result = qword_1EA8E5EA0;
  if (!qword_1EA8E5EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5EA0);
  }
  return result;
}

uint64_t sub_1DA8183E8()
{
  return sub_1DA8182EC();
}

uint64_t sub_1DA81840C(uint64_t a1)
{
  return sub_1DA817C68(a1);
}

uint64_t sub_1DA818430()
{
  sub_1DA98CF18();
  sub_1DA817C68((uint64_t)v1);
  return sub_1DA98CF68();
}

uint64_t sub_1DA818470(uint64_t *a1, uint64_t *a2)
{
  return sub_1DA817DEC(*a1, *a2);
}

uint64_t sub_1DA81847C(uint64_t a1)
{
  return sub_1DA81777C(a1);
}

uint64_t sub_1DA8184A0()
{
  return swift_getWitnessTable();
}

double sub_1DA8184BC(uint64_t a1)
{
  double result = *(double *)(v1 + 16) - *(double *)(v1 + 24) + *(double *)(a1 + 32);
  *(double *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1DA8184D4(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(result + 16);
  BOOL v4 = __OFADD__(v3, v2);
  uint64_t v5 = v3 + v2;
  if (v4) {
    __break(1u);
  }
  else {
    *(void *)(result + 16) = v5;
  }
  return result;
}

uint64_t sub_1DA8184F0(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(result + 24);
  BOOL v4 = __OFADD__(v3, v2);
  uint64_t v5 = v3 + v2;
  if (v4) {
    __break(1u);
  }
  else {
    *(void *)(result + 24) = v5;
  }
  return result;
}

double sub_1DA81850C(uint64_t a1)
{
  double result = *(double *)(v1 + 16) + *(double *)(a1 + 8);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_1DA818520(double *a1)
{
  double result = *(double *)(v1 + 16) + *a1;
  *a1 = result;
  return result;
}

uint64_t sub_1DA818534(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + 24);
  if (v2 && (v3 = *(void *)(v1 + 16), uint64_t v4 = a1(), v5))
  {
    if (v4 == v3 && v5 == v2)
    {
      swift_bridgeObjectRelease();
      char v8 = 0;
    }
    else
    {
      char v7 = sub_1DA98CE58();
      swift_bridgeObjectRelease();
      char v8 = v7 ^ 1;
    }
  }
  else
  {
    char v8 = 1;
  }
  return v8 & 1;
}

id SnapshotRequest.key.getter()
{
  return *v0;
}

void SnapshotRequest.key.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*SnapshotRequest.key.modify())()
{
  return CGSizeMake;
}

id SnapshotRequest.attributes.getter()
{
  return *(id *)(v0 + 8);
}

void SnapshotRequest.attributes.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*SnapshotRequest.attributes.modify())()
{
  return CGSizeMake;
}

uint64_t SnapshotRequest.contentIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SnapshotRequest.contentIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SnapshotRequest.contentIdentifier.modify())()
{
  return CGSizeMake;
}

uint64_t SnapshotRequest.protectionLevel.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_1DA98B9E8();
  int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t SnapshotRequest.protectionLevel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1DA98B9E8();
  int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*SnapshotRequest.protectionLevel.modify())()
{
  return CGSizeMake;
}

uint64_t SnapshotRequest.signpostID.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_1DA989E78();
  int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t SnapshotRequest.signpostID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1DA989E78();
  int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*SnapshotRequest.signpostID.modify())()
{
  return CGSizeMake;
}

uint64_t SnapshotRequest.layer.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t SnapshotRequest.layer.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*SnapshotRequest.layer.modify())()
{
  return CGSizeMake;
}

id SnapshotRequest.id.getter@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t SnapshotRequest.init(key:attributes:contentIdentifier:protectionLevel:signpostID:layer:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v40 = a7;
  uint64_t v42 = a6;
  uint64_t v43 = a5;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62DC8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DA989E78();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  BOOL v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v38 = a1;
  *(void *)a9 = a1;
  *((void *)a9 + 1) = a2;
  id v39 = a2;
  *((void *)a9 + 2) = a3;
  *((void *)a9 + 3) = a4;
  uint64_t v41 = a8;
  BOOL v22 = (int *)type metadata accessor for SnapshotRequest();
  char v23 = &a9[v22[9]];
  uint64_t v24 = sub_1DA98B9E8();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v23;
  uint64_t v27 = v42;
  uint64_t v28 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v26, v43, v24);
  sub_1DA818D54(v27, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
  {
    sub_1DA818DBC(v27);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v28, v24);
    double v35 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v35(v21, v17, v18);
    v35(&a9[v22[10]], v21, v18);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v41 - 8) + 32))(&a9[v22[11]], v40);
  }
  objc_super v37 = v21;
  sub_1DA98CF78();
  id v29 = v38;
  id v30 = v39;
  sub_1DA98C7B8();
  long long v51 = v46;
  long long v52 = v47;
  uint64_t v53 = v48;
  long long v49 = v44;
  long long v50 = v45;
  uint64_t v31 = sub_1DA98CF58();
  if ((v31 & 0x8000000000000000) == 0)
  {
LABEL_5:
    double v34 = v37;
    sub_1DA989E88();

    sub_1DA818DBC(v42);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v43, v24);
    sub_1DA818DBC((uint64_t)v17);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&a9[v22[10]], v34, v18);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v41 - 8) + 32))(&a9[v22[11]], v40);
  }
  BOOL v32 = __OFSUB__(0, v31);
  uint64_t v33 = -v31;
  if (v32)
  {
    __break(1u);
  }
  else if ((v33 & 0x8000000000000000) == 0)
  {
    goto LABEL_5;
  }
  uint64_t result = sub_1DA98CBA8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SnapshotRequest()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DA818D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62DC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA818DBC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62DC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA818E1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA818E64()
{
  uint64_t result = sub_1DA98B9E8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DA989E78();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void **sub_1DA818F88(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98B9E8();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = sub_1DA989E78();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v9 + v12;
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v15 = *(void *)(a3 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80);
  uint64_t v18 = v14 + v17;
  unint64_t v19 = ((v14 + v17 + ((v13 + ((v8 + 32) & ~(unint64_t)v8)) & ~v12)) & ~v17)
      + *(void *)(v16 + 64);
  unint64_t v20 = v12 | v8 | v17;
  int v21 = (*(_DWORD *)(v11 + 80) | v8 | *(_DWORD *)(v16 + 80)) & 0x100000;
  BOOL v22 = (char *)*a2;
  *a1 = *a2;
  if (v20 > 7 || v21 != 0 || v19 > 0x18)
  {
    a1 = (void **)&v22[(v20 & 0xF8 ^ 0x1F8) & (v20 + 16)];
    swift_retain();
  }
  else
  {
    uint64_t v39 = ~v12;
    uint64_t v40 = ~v17;
    uint64_t v25 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = (void **)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v36 = v10;
    uint64_t v37 = v6;
    uint64_t v27 = *v26;
    *uint64_t v25 = *v26;
    uint64_t v28 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
    id v29 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v28 = *v29;
    v28[1] = v29[1];
    unint64_t v30 = ((unint64_t)v28 + v8 + 16) & ~(unint64_t)v8;
    unint64_t v31 = ((unint64_t)v29 + v8 + 16) & ~(unint64_t)v8;
    BOOL v32 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
    uint64_t v38 = v15;
    uint64_t v33 = v22;
    id v34 = v27;
    swift_bridgeObjectRetain();
    v32(v30, v31, v37);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((v30 + v13) & v39, (v31 + v13) & v39, v36);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 16))((((v30 + v13) & v39) + v18) & v40, (((v31 + v13) & v39) + v18) & v40, v38);
  }
  return a1;
}

uint64_t sub_1DA819234(id *a1, uint64_t a2)
{
  unint64_t v3 = (unint64_t)a1 + 15;

  v3 &= 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1DA98B9E8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5 + 8;
  unint64_t v7 = (((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v8 = *(void *)(v6 + 56);
  uint64_t v9 = sub_1DA989E78();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v7 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v13 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v14 = *(uint64_t (**)(unint64_t))(v13 + 8);
  unint64_t v15 = (v12 + *(void *)(v11 + 56) + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);

  return v14(v15);
}

void *sub_1DA819360(void *a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = v6;
  unint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void **)(v5 & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((v5 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  v9[1] = v10[1];
  uint64_t v11 = sub_1DA98B9E8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  uint64_t v14 = v12 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = ((unint64_t)v9 + v15 + 16) & ~v15;
  uint64_t v17 = ((unint64_t)v10 + v15 + 16) & ~v15;
  id v18 = v6;
  id v19 = v8;
  swift_bridgeObjectRetain();
  v13(v16, v17, v11);
  uint64_t v20 = *(void *)(v14 + 48);
  uint64_t v21 = sub_1DA989E78();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = v22 + 16;
  uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = v20 + v24;
  uint64_t v26 = (v20 + v24 + v16) & ~v24;
  uint64_t v27 = (v25 + v17) & ~v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v27, v21);
  uint64_t v28 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v28 + 16))((*(void *)(v23 + 48) + *(unsigned __int8 *)(v28 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80), (*(void *)(v23 + 48) + *(unsigned __int8 *)(v28 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  return a1;
}

void **sub_1DA8194E4(void **a1, void **a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  unint64_t v5 = *a2;
  unint64_t v7 = *a1;
  *a1 = *a2;
  unint64_t v8 = (unint64_t)a1 + 15;
  id v9 = v5;

  uint64_t v10 = (void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void **)v6;
  uint64_t v12 = *(void **)(v8 & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *(void *)v6;
  id v13 = v11;

  uint64_t v14 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1DA98B9E8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = v17 + 24;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = ((unint64_t)v14 + v19 + 16) & ~v19;
  uint64_t v21 = ((unint64_t)v15 + v19 + 16) & ~v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 24))(v20, v21, v16);
  uint64_t v22 = *(void *)(v18 + 40);
  uint64_t v23 = sub_1DA989E78();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = v24 + 24;
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = (v22 + v26 + v20) & ~v26;
  uint64_t v28 = (v22 + v26 + v21) & ~v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 24))(v27, v28, v23);
  uint64_t v29 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v29 + 24))((*(void *)(v25 + 40) + *(unsigned __int8 *)(v29 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80), (*(void *)(v25 + 40) + *(unsigned __int8 *)(v29 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  return a1;
}

void *sub_1DA819670(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = v6;
  unint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *(void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v9 = (_OWORD *)(((v5 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v8 = *v9;
  uint64_t v10 = sub_1DA98B9E8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11 + 32;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = ((unint64_t)v8 + v13 + 16) & ~v13;
  uint64_t v15 = ((unint64_t)v9 + v13 + 16) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v14, v15, v10);
  uint64_t v16 = *(void *)(v12 + 32);
  uint64_t v17 = sub_1DA989E78();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v18 + 32;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = (v16 + v20 + v14) & ~v20;
  uint64_t v22 = (v16 + v20 + v15) & ~v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21, v22, v17);
  uint64_t v23 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v23 + 32))((*(void *)(v19 + 32) + *(unsigned __int8 *)(v23 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), (*(void *)(v19 + 32) + *(unsigned __int8 *)(v23 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  return a1;
}

void **sub_1DA8197C8(void **a1, void **a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  uint64_t v6 = *a1;
  *a1 = *a2;
  unint64_t v7 = (unint64_t)a1 + 15;

  v7 &= 0xFFFFFFFFFFFFFFF8;
  v5 &= 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void **)v7;
  *(void *)unint64_t v7 = *(void *)v5;

  id v9 = (void *)((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1DA98B9E8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v12 + 40;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = ((unint64_t)v9 + v14 + 16) & ~v14;
  uint64_t v16 = ((unint64_t)v10 + v14 + 16) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v15, v16, v11);
  uint64_t v17 = *(void *)(v13 + 24);
  uint64_t v18 = sub_1DA989E78();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v19 + 40;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = (v17 + v21 + v15) & ~v21;
  uint64_t v23 = (v17 + v21 + v16) & ~v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40))(v22, v23, v18);
  uint64_t v24 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 40))((*(void *)(v20 + 24) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(void *)(v20 + 24) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1DA819944(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98B9E8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(sub_1DA989E78() - 8);
  uint64_t v10 = v9;
  unsigned int v11 = *(_DWORD *)(v9 + 84);
  if (v8 <= v11) {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v12 = v8;
  }
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  uint64_t v15 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = *(void *)(v7 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = *(void *)(v9 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v13 + 80);
  if (v12 <= v14) {
    unsigned int v20 = *(_DWORD *)(v13 + 84);
  }
  else {
    unsigned int v20 = v12;
  }
  if (v20 <= 0x7FFFFFFF) {
    unsigned int v21 = 0x7FFFFFFF;
  }
  else {
    unsigned int v21 = v20;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v22 = v18 + v19;
  if (a2 <= v21) {
    goto LABEL_31;
  }
  uint64_t v23 = ((v22 + ((v16 + v17 + ((v15 + 32) & ~v15)) & ~v17)) & ~v19) + *(void *)(v13 + 64);
  char v24 = 8 * v23;
  if (v23 <= 3)
  {
    unsigned int v27 = ((a2 - v21 + ~(-1 << v24)) >> v24) + 1;
    if (HIWORD(v27))
    {
      int v25 = *(_DWORD *)((char *)a1 + v23);
      if (!v25) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v27 > 0xFF)
    {
      int v25 = *(unsigned __int16 *)((char *)a1 + v23);
      if (!*(unsigned __int16 *)((char *)a1 + v23)) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v27 < 2)
    {
LABEL_31:
      if ((v20 & 0x80000000) != 0)
      {
        unint64_t v32 = ((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v15 + 16) & ~v15;
        if (v8 == v21)
        {
          uint64_t v33 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);
          return v33(v32, v8, v6);
        }
        else
        {
          unint64_t v34 = (v32 + v16 + v17) & ~v17;
          if (v11 == v21)
          {
            double v35 = *(uint64_t (**)(unint64_t))(v10 + 48);
            return v35(v34);
          }
          else
          {
            unint64_t v36 = (v22 + v34) & ~v19;
            uint64_t v37 = *(uint64_t (**)(unint64_t, uint64_t))(v13 + 48);
            return v37(v36, v14);
          }
        }
      }
      else
      {
        uint64_t v31 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v31) = -1;
        }
        return (v31 + 1);
      }
    }
  }
  int v25 = *((unsigned __int8 *)a1 + v23);
  if (!*((unsigned char *)a1 + v23)) {
    goto LABEL_31;
  }
LABEL_21:
  int v28 = (v25 - 1) << v24;
  if (v23 > 3) {
    int v28 = 0;
  }
  if (v23)
  {
    if (v23 <= 3) {
      int v29 = ((v22 + ((v16 + v17 + ((v15 + 32) & ~v15)) & ~v17)) & ~v19) + *(_DWORD *)(v13 + 64);
    }
    else {
      int v29 = 4;
    }
    switch(v29)
    {
      case 2:
        int v30 = *a1;
        break;
      case 3:
        int v30 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v30 = *(_DWORD *)a1;
        break;
      default:
        int v30 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v30 = 0;
  }
  return v21 + (v30 | v28) + 1;
}

void sub_1DA819CEC(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DA98B9E8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = sub_1DA989E78();
  uint64_t v12 = *(void *)(v11 - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  if (v10 <= v13) {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v14 = v10;
  }
  uint64_t v15 = *(void *)(a4 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int *)(v16 + 84);
  uint64_t v18 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = *(void *)(v9 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = *(void *)(*(void *)(v11 - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v16 + 80);
  if (v14 <= v17) {
    unsigned int v23 = *(_DWORD *)(v16 + 84);
  }
  else {
    unsigned int v23 = v14;
  }
  if (v23 <= 0x7FFFFFFF) {
    unsigned int v24 = 0x7FFFFFFF;
  }
  else {
    unsigned int v24 = v23;
  }
  uint64_t v25 = v21 + v22;
  size_t v26 = ((v21 + v22 + ((v19 + v20 + ((v18 + 32) & ~v18)) & ~v20)) & ~v22) + *(void *)(v16 + 64);
  if (a3 <= v24)
  {
    int v27 = 0;
  }
  else if (v26 <= 3)
  {
    unsigned int v31 = ((a3 - v24 + ~(-1 << (8 * v26))) >> (8 * v26)) + 1;
    if (HIWORD(v31))
    {
      int v27 = 4;
    }
    else if (v31 >= 0x100)
    {
      int v27 = 2;
    }
    else
    {
      int v27 = v31 > 1;
    }
  }
  else
  {
    int v27 = 1;
  }
  if (v24 < a2)
  {
    unsigned int v28 = ~v24 + a2;
    if (v26 < 4)
    {
      int v29 = (v28 >> (8 * v26)) + 1;
      if (v26)
      {
        int v32 = v28 & ~(-1 << (8 * v26));
        bzero(a1, v26);
        if (v26 == 3)
        {
          *(_WORD *)a1 = v32;
          a1[2] = BYTE2(v32);
        }
        else if (v26 == 2)
        {
          *(_WORD *)a1 = v32;
        }
        else
        {
          *a1 = v32;
        }
      }
    }
    else
    {
      bzero(a1, v26);
      *(_DWORD *)a1 = v28;
      int v29 = 1;
    }
    switch(v27)
    {
      case 1:
        a1[v26] = v29;
        return;
      case 2:
        *(_WORD *)&a1[v26] = v29;
        return;
      case 3:
        goto LABEL_55;
      case 4:
        *(_DWORD *)&a1[v26] = v29;
        return;
      default:
        return;
    }
  }
  uint64_t v30 = ~v22;
  switch(v27)
  {
    case 1:
      a1[v26] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v26] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_55:
      __break(1u);
      JUMPOUT(0x1DA81A0E0);
    case 4:
      *(_DWORD *)&a1[v26] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (!a2) {
        return;
      }
LABEL_30:
      if ((v23 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) != 0) {
          uint64_t v33 = a2 ^ 0x80000000;
        }
        else {
          uint64_t v33 = (a2 - 1);
        }
        *(void *)a1 = v33;
        return;
      }
      unint64_t v34 = (((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v18 + 16) & ~v18;
      if (v10 == v24)
      {
        double v35 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v36 = a2;
        uint64_t v37 = v10;
        uint64_t v15 = v8;
LABEL_52:
        v35(v34, v36, v37, v15);
        return;
      }
      unint64_t v38 = (v34 + v19 + v20) & ~v20;
      if (v13 != v24)
      {
        unint64_t v34 = (v25 + v38) & v30;
        double v35 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
        uint64_t v36 = a2;
        uint64_t v37 = v17;
        goto LABEL_52;
      }
      uint64_t v39 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
      v39(v38, a2);
      return;
  }
}

unint64_t sub_1DA81A10C()
{
  unint64_t result = qword_1EA8E5EA8;
  if (!qword_1EA8E5EA8)
  {
    sub_1DA81A164();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5EA8);
  }
  return result;
}

unint64_t sub_1DA81A164()
{
  unint64_t result = qword_1EBE62A80;
  if (!qword_1EBE62A80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE62A80);
  }
  return result;
}

id WidgetEntryKey.extensionIdentity.getter()
{
  id v1 = objc_msgSend(*v0, sel_extensionIdentity);

  return v1;
}

uint64_t WidgetEntryKey.description.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(*(id *)v0, sel__loggingIdentifierWithMetrics_, *(void *)(v0 + 8));
  uint64_t v5 = sub_1DA98C038();
  unint64_t v7 = v6;

  uint64_t v12 = 544108320;
  unint64_t v13 = 0xE400000000000000;
  uint64_t v8 = type metadata accessor for WidgetEntryKey();
  sub_1DA81A400(v0 + *(int *)(v8 + 24), (uint64_t)v3);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v3, 1, v9) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v3, &qword_1EBE66BC0);
  }
  else
  {
    sub_1DA989A78();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v3, v9);
  }
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  uint64_t v12 = v5;
  unint64_t v13 = v7;
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t type metadata accessor for WidgetEntryKey()
{
  uint64_t result = qword_1EBE63958;
  if (!qword_1EBE63958) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DA81A400(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id WidgetEntryKey.widget.getter()
{
  return *v0;
}

id WidgetEntryKey.metrics.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t WidgetEntryKey.host.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetEntryKey() + 24);

  return sub_1DA81A400(v3, a1);
}

uint64_t WidgetEntryKey.init(widget:metrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  uint64_t v3 = (char *)a3 + *(int *)(type metadata accessor for WidgetEntryKey() + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(v3, 1, 1, v4);
}

uint64_t WidgetEntryKey.init(widget:metrics:host:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (uint64_t)a4 + *(int *)(type metadata accessor for WidgetEntryKey() + 24);

  return sub_1DA81A58C(a3, v5);
}

uint64_t sub_1DA81A58C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t WidgetEntryKey.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *v0;
  sub_1DA98C7B8();

  id v10 = v1[1];
  sub_1DA98C7B8();

  uint64_t v11 = type metadata accessor for WidgetEntryKey();
  sub_1DA81A400((uint64_t)v1 + *(int *)(v11 + 24), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    return sub_1DA98CF38();
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  sub_1DA98CF38();
  sub_1DA81C87C(&qword_1EBE5A138);
  sub_1DA98BFB8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t WidgetEntryKey.hashValue.getter()
{
  return sub_1DA98CF68();
}

id sub_1DA81A834()
{
  id v1 = objc_msgSend(*v0, sel_extensionIdentity);

  return v1;
}

uint64_t sub_1DA81A870()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA81A8B4()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA81A8F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DA87290C(*a1, *a2);
}

uint64_t sub_1DA81A900()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA81A998()
{
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA81AA1C()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA81AAB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA81C830();
  *a1 = result;
  return result;
}

void sub_1DA81AAE0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x7363697274656DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 1953722216;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x746567646977;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DA81AB34()
{
  uint64_t v1 = 0x7363697274656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 1953722216;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746567646977;
  }
}

uint64_t sub_1DA81AB84@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA81C830();
  *a1 = result;
  return result;
}

void sub_1DA81ABAC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DA81ABB8(uint64_t a1)
{
  unint64_t v2 = sub_1DA81B9FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DA81ABF4(uint64_t a1)
{
  unint64_t v2 = sub_1DA81B9FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void WidgetEntryKey.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
  MEMORY[0x1F4188790](v4 - 8);
  BOOL v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5EB0);
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WidgetEntryKey();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  double v35 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v13);
  sub_1DA81B9FC();
  sub_1DA98CFB8();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return;
  }
  uint64_t v14 = v34;
  int v32 = v6;
  uint64_t v15 = v12;
  char v38 = 0;
  sub_1DA7AD82C();
  sub_1DA98CCF8();
  uint64_t v30 = v9;
  uint64_t v31 = v7;
  uint64_t v16 = v36;
  unint64_t v17 = v37;
  sub_1DA7A1A08(0, &qword_1EBE58EF0);
  sub_1DA7A1A08(0, &qword_1EBE657B0);
  uint64_t v18 = sub_1DA98C578();
  uint64_t v19 = v14;
  uint64_t v29 = v16;
  if (v18)
  {
    *uint64_t v15 = v18;
    char v38 = 1;
    sub_1DA98CCF8();
    uint64_t v21 = v36;
    unint64_t v20 = v37;
    sub_1DA7A1A08(0, &qword_1EBE5AB78);
    uint64_t v22 = sub_1DA98C578();
    unint64_t v28 = v20;
    if (v22)
    {
      uint64_t v23 = v21;
      v15[1] = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
      LOBYTE(v36) = 2;
      sub_1DA81C87C(&qword_1EA8E5EC0);
      uint64_t v24 = v31;
      uint64_t v25 = (uint64_t)v32;
      size_t v26 = v30;
      sub_1DA98CC98();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v24);
      sub_1DA79DA70(v23, v28);
      sub_1DA79DA70(v29, v17);
      uint64_t v27 = v33;
      sub_1DA81A58C(v25, (uint64_t)v15 + *(int *)(v10 + 24));
      sub_1DA81BA50((uint64_t)v15, v27);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      sub_1DA81BAB4((uint64_t)v15);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t WidgetEntryKey.encode(to:)(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v42 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5EC8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1DA81B9FC();
  sub_1DA98CFC8();
  uint64_t v13 = self;
  long long v46 = v3;
  uint64_t v14 = *v3;
  id v48 = 0;
  id v15 = objc_msgSend(v13, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v14, 1, &v48);
  id v16 = v48;
  if (!v15)
  {
    uint64_t v21 = v16;
    sub_1DA9892D8();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v45 = v10;
  unint64_t v17 = (void *)sub_1DA9894E8();
  unint64_t v19 = v18;

  id v48 = v17;
  unint64_t v49 = v19;
  char v47 = 0;
  sub_1DA7AE308();
  sub_1DA98CDB8();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v9);
    return sub_1DA79DA70((uint64_t)v17, v19);
  }
  uint64_t v38 = v9;
  uint64_t v39 = (uint64_t)v17;
  unint64_t v40 = v19;
  uint64_t v22 = v46[1];
  id v48 = 0;
  id v23 = objc_msgSend(v13, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v22, 1, &v48);
  id v24 = v48;
  if (!v23)
  {
    uint64_t v29 = v24;
    sub_1DA9892D8();

    swift_willThrow();
    sub_1DA79DA70(v39, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v12, v38);
  }
  uint64_t v25 = (void *)sub_1DA9894E8();
  unint64_t v27 = v26;

  id v48 = v25;
  unint64_t v49 = v27;
  char v47 = 1;
  uint64_t v9 = v38;
  sub_1DA98CDB8();
  uint64_t v28 = v39;
  uint64_t v10 = v45;
  uint64_t v36 = (uint64_t)v25;
  unint64_t v37 = v27;
  uint64_t v30 = type metadata accessor for WidgetEntryKey();
  uint64_t v31 = v42;
  sub_1DA81A400((uint64_t)v46 + *(int *)(v30 + 24), v42);
  uint64_t v33 = v43;
  uint64_t v32 = v44;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v31, 1, v44) != 1)
  {
    uint64_t v34 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v41, v31, v32);
    LOBYTE(v48) = 2;
    sub_1DA81C87C(&qword_1EA8E5ED0);
    sub_1DA98CDB8();
    sub_1DA79DA70(v36, v37);
    sub_1DA79DA70(v28, v40);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1DA79DA70(v36, v37);
  sub_1DA79DA70(v28, v40);
  return sub_1DA7A1AE0(v31, &qword_1EBE66BC0);
}

void sub_1DA81B5D0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1DA81B5E8(void *a1)
{
  return WidgetEntryKey.encode(to:)(a1);
}

BOOL _s9ChronoKit14WidgetEntryKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v34 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66D00);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v31 - v14;
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v31 - v17;
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
  if ((sub_1DA98C7A8() & 1) == 0) {
    return 0;
  }
  uint64_t v32 = v6;
  uint64_t v33 = v12;
  uint64_t v19 = v34;
  if ((sub_1DA98C7A8() & 1) == 0) {
    return 0;
  }
  uint64_t v20 = type metadata accessor for WidgetEntryKey();
  sub_1DA81A400(a1 + *(int *)(v20 + 24), (uint64_t)v18);
  sub_1DA81A400(a2 + *(int *)(v20 + 24), (uint64_t)v15);
  uint64_t v21 = (uint64_t)v9;
  uint64_t v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1DA81A400((uint64_t)v18, (uint64_t)v9);
  sub_1DA81A400((uint64_t)v15, v22);
  uint64_t v23 = v19;
  id v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  uint64_t v25 = v4;
  if (v24((uint64_t)v9, 1, v4) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v15, &qword_1EBE66BC0);
    sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE66BC0);
    if (v24(v22, 1, v4) == 1)
    {
      sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE66BC0);
      return 1;
    }
    goto LABEL_8;
  }
  uint64_t v26 = (uint64_t)v33;
  sub_1DA81A400((uint64_t)v9, (uint64_t)v33);
  if (v24(v22, 1, v25) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v15, &qword_1EBE66BC0);
    sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE66BC0);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v26, v25);
LABEL_8:
    sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE66D00);
    return 0;
  }
  unint64_t v27 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v32, v22, v25);
  sub_1DA81C87C(&qword_1EBE5A140);
  char v28 = sub_1DA98BFF8();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v23 + 8);
  v29(v27, v25);
  sub_1DA7A1AE0((uint64_t)v15, &qword_1EBE66BC0);
  sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE66BC0);
  v29((char *)v26, v25);
  sub_1DA7A1AE0(v21, &qword_1EBE66BC0);
  return (v28 & 1) != 0;
}

unint64_t sub_1DA81B9FC()
{
  unint64_t result = qword_1EA8E5EB8;
  if (!qword_1EA8E5EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5EB8);
  }
  return result;
}

uint64_t sub_1DA81BA50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetEntryKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA81BAB4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetEntryKey();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA81BB10(uint64_t a1)
{
  uint64_t result = sub_1DA81BB88(&qword_1EBE63360);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DA81BB54()
{
  return sub_1DA81BB88(&qword_1EBE61FE8);
}

uint64_t sub_1DA81BB88(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WidgetEntryKey();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of CacheManagerEntryKey.extensionIdentity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

char *initializeBufferWithCopyOfBuffer for WidgetEntryKey(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *((void *)a1 + 1) = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = v5;
    uint64_t v11 = v6;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v9, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t destroy for WidgetEntryKey(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for WidgetEntryKey(void *a1, uint64_t a2, uint64_t a3)
{
  int v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (const void *)(a2 + v6);
  id v9 = v4;
  id v10 = v5;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v7, v8, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for WidgetEntryKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  id v9 = *(void **)(a2 + 8);
  id v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_OWORD *initializeWithTake for WidgetEntryKey(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for WidgetEntryKey(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  id v10 = (char *)a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetEntryKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA81C3B8);
}

uint64_t sub_1DA81C3B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetEntryKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA81C480);
}

void *sub_1DA81C480(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66BC0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1DA81C52C()
{
  sub_1DA81C5C8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1DA81C5C8()
{
  if (!qword_1EBE66CF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE66B90);
    unint64_t v0 = sub_1DA98C838();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBE66CF8);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for WidgetEntryKey.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA81C6F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetEntryKey.CodingKeys()
{
  return &type metadata for WidgetEntryKey.CodingKeys;
}

unint64_t sub_1DA81C72C()
{
  unint64_t result = qword_1EA8E5ED8;
  if (!qword_1EA8E5ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5ED8);
  }
  return result;
}

unint64_t sub_1DA81C784()
{
  unint64_t result = qword_1EA8E5EE0;
  if (!qword_1EA8E5EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5EE0);
  }
  return result;
}

unint64_t sub_1DA81C7DC()
{
  unint64_t result = qword_1EA8E5EE8;
  if (!qword_1EA8E5EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5EE8);
  }
  return result;
}

uint64_t sub_1DA81C830()
{
  unint64_t v0 = sub_1DA98CC58();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DA81C87C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE66B90);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA81C8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v80 = a5;
  uint64_t v73 = a4;
  uint64_t v82 = a1;
  uint64_t v9 = sub_1DA989868();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v76 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DA989788();
  uint64_t v79 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  char v78 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59E08);
  uint64_t v74 = *(void *)(v13 - 8);
  uint64_t v75 = v13;
  MEMORY[0x1F4188790](v13);
  id v72 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59DB8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v6
      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payload;
  uint64_t v19 = sub_1DA989758();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  uint64_t v21 = OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription__payloadPublisher;
  uint64_t v71 = v19;
  v20((uint64_t)v17, 1, 1, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59E38);
  swift_allocObject();
  *(void *)(v6 + v21) = sub_1DA98A038();
  *(void *)(v6
            + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadSubscription) = 0;
  *(void *)(v6
            + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_descriptorSubscription) = 0;
  uint64_t v22 = OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock;
  type metadata accessor for UnfairLock();
  uint64_t v23 = swift_allocObject();
  id v24 = (_DWORD *)swift_slowAlloc();
  *id v24 = 0;
  *(void *)(v23 + 16) = v24;
  *(void *)(v6 + v22) = v23;
  *(void *)(v6
            + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription__lock_contentAssertions) = MEMORY[0x1E4FBC868];
  uint64_t v25 = v6
      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_state;
  uint64_t v26 = *MEMORY[0x1E4F17EF8];
  uint64_t v27 = sub_1DA9897F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
  uint64_t v84 = *(void *)(v6 + v21);
  sub_1DA7A0410(&qword_1EBE59E30, &qword_1EBE59E38);
  *(void *)(v6
            + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadPublisher) = sub_1DA98A0F8();
  char v28 = (void *)(v6
                 + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier);
  *char v28 = v82;
  v28[1] = a2;
  uint64_t v29 = &unk_1EBE59000;
  uint64_t v77 = a3;
  sub_1DA7A1A44(a3, v6+ OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityCenter);
  uint64_t v30 = qword_1EBE5A1D8;
  uint64_t v81 = a2;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1DA989F38();
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EBE6F168);
  swift_retain();
  uint64_t v33 = sub_1DA989F18();
  os_log_type_t v34 = sub_1DA98C548();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136315138;
    uint64_t v84 = v36;
    uint64_t v37 = v32;
    uint64_t v68 = v11;
    uint64_t v38 = *(void *)(v6
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier);
    unint64_t v39 = *(void *)(v6
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                    + 8);
    swift_bridgeObjectRetain();
    uint64_t v40 = v38;
    uint64_t v32 = v37;
    uint64_t v83 = sub_1DA8C5E00(v40, v39, &v84);
    uint64_t v29 = (void *)&unk_1EBE59000;
    sub_1DA98C858();
    swift_release();
    uint64_t v11 = v68;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v33, v34, "Registering for payload...: %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v36, -1, -1);
    MEMORY[0x1E0178DA0](v35, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v41 = v78;
  uint64_t v42 = v79;
  uint64_t v43 = (void *)(v6 + v29[482]);
  uint64_t v44 = v43[3];
  uint64_t v45 = v43[4];
  __swift_project_boxed_opaque_existential_0(v43, v44);
  (*(void (**)(char *, void, uint64_t))(v42 + 104))(v41, *MEMORY[0x1E4F17C18], v11);
  uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v45 + 40))(v82, v81, v41, v44, v45);
  uint64_t v79 = v32;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v11);
  uint64_t v84 = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59E18);
  sub_1DA7A0410(&qword_1EBE59E10, &qword_1EBE59E18);
  char v47 = v72;
  sub_1DA98A108();
  swift_release();
  uint64_t v48 = swift_allocObject();
  swift_weakInit();
  unint64_t v49 = (void *)swift_allocObject();
  uint64_t v50 = v73;
  v49[2] = v48;
  v49[3] = v50;
  v49[4] = v80;
  swift_allocObject();
  swift_weakInit();
  sub_1DA7A0410(&qword_1EBE59E00, &qword_1EBE59E08);
  swift_retain();
  uint64_t v51 = v75;
  uint64_t v52 = sub_1DA98A138();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v47, v51);
  *(void *)(v6
            + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadSubscription) = v52;
  swift_release();
  uint64_t v53 = v43[3];
  uint64_t v54 = v43[4];
  __swift_project_boxed_opaque_existential_0(v43, v53);
  id v55 = v76;
  sub_1DA989858();
  uint64_t v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 32))(v55, v53, v54);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v55, v70);
  uint64_t v84 = v57;
  uint64_t v58 = swift_allocObject();
  swift_weakInit();
  uint64_t v59 = (void *)swift_allocObject();
  uint64_t v60 = v82;
  uint64_t v59[2] = v58;
  v59[3] = v60;
  v59[4] = v81;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE5A218);
  sub_1DA7A0410(&qword_1EBE5A210, (uint64_t *)&unk_1EBE5A218);
  uint64_t v61 = sub_1DA98A138();
  swift_release();
  swift_release();
  *(void *)(v6
            + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_descriptorSubscription) = v61;
  swift_release();
  swift_retain_n();
  uint64_t v62 = sub_1DA989F18();
  os_log_type_t v63 = sub_1DA98C548();
  if (os_log_type_enabled(v62, v63))
  {
    id v64 = (uint8_t *)swift_slowAlloc();
    uint64_t v65 = swift_slowAlloc();
    *(_DWORD *)id v64 = 136446210;
    uint64_t v84 = v65;
    uint64_t v66 = *(void *)(v6
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier);
    unint64_t v67 = *(void *)(v6
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                    + 8);
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_1DA8C5E00(v66, v67, &v84);
    sub_1DA98C858();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v62, v63, "Subscribed to activity payloads for: %{public}s", v64, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v65, -1, -1);
    MEMORY[0x1E0178DA0](v64, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v77);
  return v6;
}

uint64_t sub_1DA81D4A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1EBE5A1D8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1DA989F38();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBE6F168);
  sub_1DA7A1A44(a1, (uint64_t)v16);
  uint64_t v5 = sub_1DA989F18();
  os_log_type_t v6 = sub_1DA98C548();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_1DA7A1A44((uint64_t)v16, (uint64_t)v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59DB0);
    uint64_t v9 = sub_1DA98C0A8();
    v14[0] = sub_1DA8C5E00(v9, v10, &v15);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    _os_log_impl(&dword_1DA795000, v5, v6, "Received payload: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v8, -1, -1);
    MEMORY[0x1E0178DA0](v7, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }

  sub_1DA7A1A44(a1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59DB0);
  uint64_t v11 = sub_1DA989758();
  int v12 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, v12 ^ 1u, 1, v11);
}

uint64_t sub_1DA81D6DC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    if (qword_1EBE5A1D8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1DA989F38();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBE6F168);
    swift_retain();
    uint64_t v7 = sub_1DA989F18();
    os_log_type_t v8 = sub_1DA98C548();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = a3;
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v15 = v11;
      *(_DWORD *)unint64_t v10 = 136315138;
      uint64_t v13 = *(void *)(v5
                      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier);
      unint64_t v12 = *(void *)(v5
                      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                      + 8);
      swift_bridgeObjectRetain();
      sub_1DA8C5E00(v13, v12, &v15);
      sub_1DA98C858();
      swift_release();
      a3 = v9;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA795000, v7, v8, "Activity ended: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v11, -1, -1);
      MEMORY[0x1E0178DA0](v10, -1, -1);
    }
    else
    {

      swift_release();
    }
    uint64_t v14 = sub_1DA81EE1C();
    a3(v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA81D8EC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59DB8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v27 - v6;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    if (qword_1EBE5A1D8 != -1) {
      swift_once();
    }
    char v28 = v4;
    uint64_t v10 = sub_1DA989F38();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EBE6F168);
    swift_retain();
    uint64_t v11 = sub_1DA989F18();
    os_log_type_t v12 = sub_1DA98C548();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v29 = a1;
    if (v13)
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v31[0] = v15;
      *(_DWORD *)uint64_t v14 = 136446210;
      uint64_t v16 = *(void *)(v9
                      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier);
      unint64_t v17 = *(void *)(v9
                      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                      + 8);
      swift_bridgeObjectRetain();
      uint64_t v18 = v16;
      a1 = v29;
      uint64_t v30 = sub_1DA8C5E00(v18, v17, v31);
      sub_1DA98C858();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA795000, v11, v12, "Activity payload updated: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v15, -1, -1);
      MEMORY[0x1E0178DA0](v14, -1, -1);
    }
    else
    {

      swift_release();
    }
    uint64_t v19 = *(void *)(v9
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock);
    uint64_t v20 = *(os_unfair_lock_s **)(v19 + 16);
    swift_retain();
    os_unfair_lock_lock(v20);
    uint64_t v21 = sub_1DA989758();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    v23(v7, a1, v21);
    id v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56);
    v24(v7, 0, 1, v21);
    uint64_t v25 = (uint64_t)v28;
    sub_1DA7BA440((uint64_t)v7, (uint64_t)v28, &qword_1EBE59DB8);
    uint64_t v26 = v9
        + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payload;
    swift_beginAccess();
    sub_1DA8229E0(v25, v26);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 16));
    swift_release();
    v23(v7, v29, v21);
    v24(v7, 0, 1, v21);
    swift_retain();
    sub_1DA98A028();
    swift_release();
    swift_release();
    return sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE59DB8);
  }
  return result;
}

uint64_t sub_1DA81DCB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v71 = a4;
  uint64_t v72 = a3;
  uint64_t v5 = sub_1DA989758();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v62 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59DB8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v61 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v64 = (uint64_t)v56 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v56 - v13;
  uint64_t v70 = sub_1DA989778();
  uint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v16 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DA9897D8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v56 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59DD8);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v66 = (char *)v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v67 = (uint64_t)v56 - v27;
  uint64_t v28 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v30 = v28;
    uint64_t v31 = *(void *)(v28 + 16);
    uint64_t v63 = v6;
    uint64_t v65 = result;
    if (v31)
    {
      uint64_t v59 = v14;
      uint64_t v60 = v23;
      uint64_t v57 = v18;
      uint64_t v58 = v5;
      uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
      uint64_t v33 = v30 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
      os_log_type_t v34 = (void (**)(char *, uint64_t))(v68 + 8);
      uint64_t v35 = (void (**)(char *, uint64_t))(v18 + 8);
      uint64_t v68 = *(void *)(v18 + 72);
      uint64_t v69 = v32;
      v56[1] = v30;
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v36 = v17;
        v69(v20, v33, v17);
        sub_1DA9897B8();
        uint64_t v37 = sub_1DA989768();
        uint64_t v39 = v38;
        (*v34)(v16, v70);
        if (v37 == v72 && v39 == v71) {
          break;
        }
        char v40 = sub_1DA98CE58();
        swift_bridgeObjectRelease();
        if (v40) {
          goto LABEL_12;
        }
        uint64_t v17 = v36;
        (*v35)(v20, v36);
        v33 += v68;
        if (!--v31)
        {
          swift_bridgeObjectRelease();
          uint64_t v41 = 1;
          uint64_t v5 = v58;
          uint64_t v14 = v59;
          uint64_t v42 = v63;
          uint64_t v18 = v57;
          uint64_t v23 = v60;
          uint64_t v43 = v67;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
LABEL_12:
      uint64_t v5 = v58;
      uint64_t v14 = v59;
      uint64_t v42 = v63;
      uint64_t v17 = v36;
      uint64_t v18 = v57;
      uint64_t v23 = v60;
      uint64_t v44 = (uint64_t)v66;
      uint64_t v43 = v67;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v43, v20, v17);
      uint64_t v41 = 0;
    }
    else
    {
      uint64_t v41 = 1;
      uint64_t v43 = v67;
      uint64_t v42 = v6;
LABEL_10:
      uint64_t v44 = (uint64_t)v66;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v43, v41, 1, v17);
    sub_1DA7A1F58(v43, v44, &qword_1EBE59DD8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v44, 1, v17) == 1)
    {
      sub_1DA7A1AE0(v43, &qword_1EBE59DD8);
      swift_release();
      uint64_t v45 = v44;
      uint64_t v46 = &qword_1EBE59DD8;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v23, v44, v17);
      char v73 = 0;
      char v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
      v47(v14, 1, 1, v5);
      uint64_t v48 = v65;
      uint64_t v49 = *(void *)(v65
                      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock);
      uint64_t v50 = *(os_unfair_lock_s **)(v49 + 16);
      swift_retain();
      os_unfair_lock_lock(v50);
      sub_1DA81E434(v48, (uint64_t)v23, (uint64_t)v14, &v73);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 16));
      swift_release();
      if (v73 == 1)
      {
        uint64_t v51 = v47;
        uint64_t v60 = v23;
        uint64_t v72 = v17;
        uint64_t v52 = v64;
        sub_1DA7A1F58((uint64_t)v14, v64, &qword_1EBE59DB8);
        uint64_t v53 = v63;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v52, 1, v5) == 1)
        {
          sub_1DA7A1AE0(v67, &qword_1EBE59DD8);
          swift_release();
          (*(void (**)(char *, uint64_t))(v18 + 8))(v60, v72);
          sub_1DA7A1AE0(v52, &qword_1EBE59DB8);
        }
        else
        {
          uint64_t v54 = v62;
          (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v62, v52, v5);
          uint64_t v55 = (uint64_t)v61;
          (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v61, v54, v5);
          v51((char *)v55, 0, 1, v5);
          swift_retain();
          sub_1DA98A028();
          swift_release();
          swift_release();
          sub_1DA7A1AE0(v55, &qword_1EBE59DB8);
          (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v5);
          sub_1DA7A1AE0(v67, &qword_1EBE59DD8);
          (*(void (**)(char *, uint64_t))(v18 + 8))(v60, v72);
        }
      }
      else
      {
        sub_1DA7A1AE0(v67, &qword_1EBE59DD8);
        swift_release();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
      }
      uint64_t v46 = &qword_1EBE59DB8;
      uint64_t v45 = (uint64_t)v14;
    }
    return sub_1DA7A1AE0(v45, v46);
  }
  return result;
}

uint64_t sub_1DA81E434(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v49 = a4;
  uint64_t v48 = a3;
  uint64_t v53 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59DB8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v43 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1DA9897D8();
  uint64_t v7 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DA9897F8();
  uint64_t v11 = *(void **)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v42 = a1;
  uint64_t v17 = a1
      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_state;
  swift_beginAccess();
  uint64_t v18 = (void (*)(char *, uint64_t, uint64_t))v11[2];
  uint64_t v46 = v17;
  v18(v16, v17, v10);
  uint64_t v19 = *MEMORY[0x1E4F17EF8];
  uint64_t v44 = (void (*)(char *, uint64_t, uint64_t))v11[13];
  v44(v13, v19, v10);
  char v20 = sub_1DA9897E8();
  char v47 = v11;
  uint64_t v21 = (void (*)(char *, uint64_t))v11[1];
  v21(v13, v10);
  v21(v16, v10);
  uint64_t v45 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v53, v50);
  if ((v20 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v50);
    uint64_t v23 = v10;
    uint64_t v24 = v16;
    goto LABEL_8;
  }
  sub_1DA9897C8();
  v44(v13, *MEMORY[0x1E4F17EF0], v10);
  char v22 = sub_1DA9897E8();
  v21(v13, v10);
  v21(v16, v10);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v50);
  uint64_t v23 = v10;
  uint64_t v24 = v16;
  if ((v22 & 1) == 0)
  {
LABEL_8:
    uint64_t v33 = v48;
    sub_1DA7A1AE0(v48, &qword_1EBE59DB8);
    uint64_t v34 = sub_1DA989758();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
    char v35 = 0;
    goto LABEL_11;
  }
  if (qword_1EBE5A1D8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1DA989F38();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EBE6F168);
  uint64_t v26 = v42;
  swift_retain();
  uint64_t v27 = sub_1DA989F18();
  os_log_type_t v28 = sub_1DA98C548();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v52[0] = v30;
    *(_DWORD *)uint64_t v29 = 136446210;
    uint64_t v50 = (uint64_t)(v29 + 4);
    uint64_t v31 = *(void *)(v26
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier);
    unint64_t v32 = *(void *)(v26
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                    + 8);
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1DA8C5E00(v31, v32, v52);
    sub_1DA98C858();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v27, v28, "Activity became stale changed: %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v30, -1, -1);
    MEMORY[0x1E0178DA0](v29, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v36 = v26
      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payload;
  swift_beginAccess();
  uint64_t v37 = v36;
  uint64_t v38 = v43;
  sub_1DA7A1F58(v37, v43, &qword_1EBE59DB8);
  sub_1DA8229E0(v38, v48);
  char v35 = 1;
LABEL_11:
  char *v49 = v35;
  sub_1DA9897C8();
  uint64_t v39 = v46;
  swift_beginAccess();
  ((void (*)(uint64_t, char *, uint64_t))v47[5])(v39, v24, v23);
  return swift_endAccess();
}

uint64_t sub_1DA81E9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  MEMORY[0x1F4188790](v34);
  uint64_t v8 = (id *)((char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v25 - v10;
  if (qword_1EBE5A1D8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1DA989F38();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBE6F168);
  sub_1DA7A1F58(a1, (uint64_t)v11, &qword_1EBE59EF8);
  uint64_t v13 = sub_1DA989F18();
  os_log_type_t v14 = sub_1DA98C548();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v30 = v3;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v27 = swift_slowAlloc();
    v31[0] = v27;
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v25[2] = v16 + 12;
    uint64_t v26 = v16;
    v25[1] = v16 + 4;
    sub_1DA7A1F58((uint64_t)v11, (uint64_t)v8, &qword_1EBE59EF8);
    uint64_t v32 = 91;
    unint64_t v33 = 0xE100000000000000;
    id v17 = *v8;
    uint64_t v29 = a2;
    id v18 = v17;
    id v19 = objc_msgSend(v17, sel_description);
    sub_1DA98C038();
    uint64_t v28 = a3;

    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    type metadata accessor for ActivityKey(0);
    sub_1DA9897A8();
    sub_1DA8228F8(&qword_1EBE59DD0, MEMORY[0x1E4F17CC8]);
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    swift_bridgeObjectRetain();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA98C148();
    ActivityVariantKey.description.getter();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    uint64_t v20 = v32;
    unint64_t v21 = v33;
    sub_1DA7A1AE0((uint64_t)v8, &qword_1EBE59EF8);
    uint64_t v32 = sub_1DA8C5E00(v20, v21, v31);
    a3 = v28;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA7A1AE0((uint64_t)v11, &qword_1EBE59EF8);
    char v22 = v26;
    _os_log_impl(&dword_1DA795000, v13, v14, "Adding assertion for variant: %s", v26, 0xCu);
    uint64_t v23 = v27;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v23, -1, -1);
    MEMORY[0x1E0178DA0](v22, -1, -1);
  }
  else
  {
    sub_1DA7A1AE0((uint64_t)v11, &qword_1EBE59EF8);
  }

  sub_1DA7A1F58(a1, (uint64_t)v8, &qword_1EBE59EF8);
  sub_1DA7A1A44(a3, (uint64_t)&v32);
  swift_beginAccess();
  sub_1DA86F9A0((uint64_t)&v32, v8);
  return swift_endAccess();
}

uint64_t sub_1DA81EE1C()
{
  uint64_t v1 = v0;
  if (*(void *)&v0[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadSubscription])
  {
    swift_retain();
    sub_1DA989FA8();
    swift_release();
  }
  if (*(void *)&v0[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_descriptorSubscription])
  {
    swift_retain();
    sub_1DA989FA8();
    swift_release();
  }
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock];
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1DA81EEDC(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));

  return swift_release();
}

uint64_t sub_1DA81EEDC(char *a1)
{
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF0);
  MEMORY[0x1F4188790](v37);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v34 - v5;
  if (qword_1EBE5A1D8 != -1) {
LABEL_31:
  }
    swift_once();
  uint64_t v7 = sub_1DA989F38();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBE6F168);
  swift_retain();
  uint64_t v8 = sub_1DA989F18();
  os_log_type_t v9 = sub_1DA98C548();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v38[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    int64_t v36 = (int64_t)(v10 + 4);
    uint64_t v12 = *(void *)&a1[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier];
    unint64_t v13 = *(void *)&a1[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                       + 8];
    swift_bridgeObjectRetain();
    v38[4] = sub_1DA8C5E00(v12, v13, v38);
    sub_1DA98C858();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v8, v9, "Invalidating activity subscription: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v11, -1, -1);
    MEMORY[0x1E0178DA0](v10, -1, -1);
  }
  else
  {

    swift_release();
  }
  os_log_type_t v14 = &a1[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription__lock_contentAssertions];
  swift_beginAccess();
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *(void *)(*(void *)v14 + 64);
  uint64_t v35 = *(void *)v14 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v36 = (unint64_t)(v17 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v21 = 0;
  a1 = (char *)&qword_1EBE59EF0;
  while (1)
  {
    if (v19)
    {
      unint64_t v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v23 = v22 | (v21 << 6);
      goto LABEL_9;
    }
    int64_t v31 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v31 >= v36) {
      goto LABEL_29;
    }
    unint64_t v32 = *(void *)(v35 + 8 * v31);
    ++v21;
    if (!v32)
    {
      int64_t v21 = v31 + 1;
      if (v31 + 1 >= v36) {
        goto LABEL_29;
      }
      unint64_t v32 = *(void *)(v35 + 8 * v21);
      if (!v32)
      {
        int64_t v21 = v31 + 2;
        if (v31 + 2 >= v36) {
          goto LABEL_29;
        }
        unint64_t v32 = *(void *)(v35 + 8 * v21);
        if (!v32)
        {
          int64_t v21 = v31 + 3;
          if (v31 + 3 >= v36) {
            goto LABEL_29;
          }
          unint64_t v32 = *(void *)(v35 + 8 * v21);
          if (!v32)
          {
            int64_t v21 = v31 + 4;
            if (v31 + 4 >= v36) {
              goto LABEL_29;
            }
            unint64_t v32 = *(void *)(v35 + 8 * v21);
            if (!v32) {
              break;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v19 = (v32 - 1) & v32;
    unint64_t v23 = __clz(__rbit64(v32)) + (v21 << 6);
LABEL_9:
    uint64_t v24 = *(void *)(v15 + 48);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
    sub_1DA7A1F58(v24 + *(void *)(*(void *)(v25 - 8) + 72) * v23, (uint64_t)v6, &qword_1EBE59EF8);
    uint64_t v26 = *(void *)(v15 + 56) + 40 * v23;
    uint64_t v27 = v37;
    sub_1DA7A1A44(v26, (uint64_t)&v6[*(int *)(v37 + 48)]);
    sub_1DA7BA440((uint64_t)v6, (uint64_t)v3, &qword_1EBE59EF0);
    uint64_t v28 = &v3[*(int *)(v27 + 48)];
    uint64_t v29 = *((void *)v28 + 3);
    uint64_t v30 = *((void *)v28 + 4);
    __swift_project_boxed_opaque_existential_0(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
    uint64_t result = sub_1DA7A1AE0((uint64_t)v3, &qword_1EBE59EF0);
  }
  int64_t v33 = v31 + 5;
  if (v33 >= v36)
  {
LABEL_29:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  unint64_t v32 = *(void *)(v35 + 8 * v33);
  if (v32)
  {
    int64_t v21 = v33;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v21 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v21 >= v36) {
      goto LABEL_29;
    }
    unint64_t v32 = *(void *)(v35 + 8 * v21);
    ++v33;
    if (v32) {
      goto LABEL_28;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA81F350()
{
  sub_1DA81EE1C();
  sub_1DA7A1AE0(v0+ OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payload, &qword_1EBE59DB8);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0+ OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityCenter);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_state;
  uint64_t v2 = sub_1DA9897F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1DA81F454()
{
  sub_1DA81F350();

  return swift_deallocClassInstance();
}

uint64_t ActivitySubscriber.__allocating_init(logger:activityCenter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  ActivitySubscriber.init(logger:activityCenter:)(a1, a2);
  return v4;
}

uint64_t ActivitySubscriber.init(logger:activityCenter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v28 = a1;
  uint64_t v5 = sub_1DA98B438();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  MEMORY[0x1F4188790](v5);
  unint64_t v32 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1DA98C5F8();
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v25 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DA98C598();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_1DA98B4A8();
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1E4FBC868];
  *(void *)(v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_subscriptions) = MEMORY[0x1E4FBC868];
  *(void *)(v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_descriptors) = v13;
  uint64_t v14 = OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock;
  type metadata accessor for UnfairLock();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = (_DWORD *)swift_slowAlloc();
  *uint64_t v16 = 0;
  *(void *)(v15 + 16) = v16;
  *(void *)(v2 + v14) = v15;
  *(void *)(v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_announcementSubscription) = 0;
  uint64_t v17 = v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_logger;
  uint64_t v27 = sub_1DA989F38();
  uint64_t v18 = *(void *)(v27 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, a1, v27);
  sub_1DA7A1A44(a2, v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter);
  sub_1DA7A6D9C();
  sub_1DA98B468();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1DA8228F8((unint64_t *)&qword_1EBE65CA0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE65C80);
  sub_1DA7A0410((unint64_t *)&qword_1EBE65C88, &qword_1EBE65C80);
  sub_1DA98C918();
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v25, *MEMORY[0x1E4FBCC68], v29);
  unint64_t v19 = (void *)sub_1DA98C638();
  aBlock[4] = sub_1DA81FECC;
  uint64_t v37 = v2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA7A6EE0;
  void aBlock[3] = &block_descriptor_5;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_1DA8228F8((unint64_t *)&qword_1EBE658C0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE65C60);
  sub_1DA7A0410((unint64_t *)&qword_1EBE65C70, (uint64_t *)&unk_1EBE65C60);
  int64_t v21 = v32;
  uint64_t v22 = v33;
  sub_1DA98C918();
  MEMORY[0x1E01777D0](0, v12, v21, v20);
  _Block_release(v20);

  __swift_destroy_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v28, v27);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v22);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  swift_release();
  return v2;
}

void sub_1DA81FA74(uint64_t a1)
{
  uint64_t v2 = sub_1DA989868();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter + 24);
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter + 32);
  __swift_project_boxed_opaque_existential_0((void *)(a1 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter), v6);
  sub_1DA989858();
  uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 32))(v5, v6, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14[2] = v8;
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE5A218);
  sub_1DA7A0410(&qword_1EBE5A210, (uint64_t *)&unk_1EBE5A218);
  uint64_t v9 = sub_1DA98A138();
  swift_release();
  swift_release();
  *(void *)(a1 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_announcementSubscription) = v9;
  swift_release();
  if (qword_1EBE5A1D8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1DA989F38();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBE6F168);
  uint64_t v11 = sub_1DA989F18();
  os_log_type_t v12 = sub_1DA98C548();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1DA795000, v11, v12, "Subscribed to announcement feed", v13, 2u);
    MEMORY[0x1E0178DA0](v13, -1, -1);
  }
}

void sub_1DA81FECC()
{
  sub_1DA81FA74(v0);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_1DA81FEEC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(void *)(result + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
    uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    sub_1DA81FF8C(v1, v3);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1DA81FF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v189 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A070);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v180 = (char *)v141 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DA989778();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  os_log_type_t v150 = (char *)v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v168 = (char *)v141 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v167 = (char *)v141 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v187 = (char *)v141 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v166 = (char *)v141 - v15;
  uint64_t v16 = sub_1DA9897F8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v156 = (char *)v141 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v169 = (char *)v141 - v20;
  uint64_t v21 = sub_1DA9897D8();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v146 = (char *)v141 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  MEMORY[0x1F4188790](v25);
  MEMORY[0x1F4188790](v26);
  MEMORY[0x1F4188790](v27);
  unint64_t v32 = (char *)v141 - v31;
  uint64_t v33 = *(uint8_t **)(a1 + 16);
  if (v33)
  {
    uint64_t v164 = v30;
    uint64_t v165 = v29;
    v145 = v28;
    uint64_t v181 = v16;
    uint64_t v34 = v5;
    uint64_t v35 = (uint64_t *)(v189 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_subscriptions);
    int64_t v36 = (uint64_t *)(v189 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_descriptors);
    uint64_t v189 = a1 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v141[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v179 = v36;
    swift_beginAccess();
    uint64_t v153 = v35;
    swift_beginAccess();
    uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    uint64_t v37 = v22 + 16;
    uint64_t v188 = v38;
    uint64_t v39 = v17;
    uint64_t v174 = (uint64_t (**)(char *, uint64_t))(v17 + 88);
    uint64_t v185 = (void (**)(char *, uint64_t))(v37 - 8);
    char v40 = (void (**)(char *, uint64_t))(v6 + 8);
    unint64_t v144 = (void (**)(char *, uint64_t))(v39 + 8);
    uint64_t v154 = &v192;
    uint64_t v163 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    int v173 = *MEMORY[0x1E4F17EF8];
    uint64_t v147 = v6 + 16;
    uint64_t v162 = (uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
    int v172 = *MEMORY[0x1E4F17EE8];
    int v157 = *MEMORY[0x1E4F17F00];
    uint64_t v155 = v6;
    uint64_t v161 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    int v149 = *MEMORY[0x1E4F17EF0];
    uint64_t v171 = *(void *)(v37 + 56);
    *(void *)&long long v41 = 136446722;
    long long v152 = v41;
    uint64_t v151 = MEMORY[0x1E4FBC840] + 8;
    *(void *)&long long v41 = 136446210;
    long long v142 = v41;
    *(void *)&long long v41 = 136446466;
    long long v143 = v41;
    uint64_t v184 = v34;
    uint64_t v42 = v169;
    uint64_t v186 = v21;
    uint64_t v43 = v189;
    uint64_t v182 = v37;
    unint64_t v170 = v32;
    unint64_t v175 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v44 = v181;
    v38(v32, v189, v21);
    while (1)
    {
      sub_1DA9897C8();
      int v59 = (*v174)(v42, v44);
      BOOL v60 = v59 == v173 || v59 == v172;
      uint64_t v189 = v43;
      if (v60) {
        goto LABEL_12;
      }
      if (v59 != v157) {
        break;
      }
      uint64_t v74 = v150;
      sub_1DA9897B8();
      uint64_t v75 = sub_1DA989768();
      uint64_t v77 = v76;
      (*v40)(v74, v184);
      uint64_t v78 = *v153;
      if (!*(void *)(*v153 + 16)) {
        goto LABEL_42;
      }
      swift_bridgeObjectRetain();
      unint64_t v79 = sub_1DA7FDF54(v75, v77);
      if ((v80 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_42:
        swift_bridgeObjectRelease();
        uint64_t v58 = v189;
        uint64_t v44 = v181;
        uint64_t v21 = v186;
        (*v185)(v32, v186);
        goto LABEL_5;
      }
      uint64_t v81 = *(char **)(*(void *)(v78 + 56) + 8 * v79);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1EBE5A1D8 != -1) {
        swift_once();
      }
      uint64_t v82 = sub_1DA989F38();
      __swift_project_value_buffer(v82, (uint64_t)qword_1EBE6F168);
      swift_retain();
      uint64_t v83 = sub_1DA989F18();
      os_log_type_t v84 = sub_1DA98C548();
      if (os_log_type_enabled(v83, v84))
      {
        unint64_t v85 = (uint8_t *)swift_slowAlloc();
        uint64_t v86 = swift_slowAlloc();
        *(_DWORD *)unint64_t v85 = v142;
        unint64_t v190 = (void (*)(void, void))v86;
        v183 = v85 + 4;
        uint64_t v87 = *(void *)&v81[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier];
        unint64_t v88 = *(void *)&v81[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                            + 8];
        swift_bridgeObjectRetain();
        uint64_t v191 = sub_1DA8C5E00(v87, v88, (uint64_t *)&v190);
        sub_1DA98C858();
        swift_release();
        char v40 = v175;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DA795000, v83, v84, "Dropping subscription for dismissed activity: %{public}s", v85, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v86, -1, -1);
        MEMORY[0x1E0178DA0](v85, -1, -1);
      }
      else
      {

        swift_release();
      }
      uint64_t v42 = v169;
      if (*(void *)&v81[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadSubscription])
      {
        swift_retain();
        sub_1DA989FA8();
        swift_release();
      }
      if (*(void *)&v81[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_descriptorSubscription])
      {
        swift_retain();
        sub_1DA989FA8();
        swift_release();
      }
      uint64_t v136 = *(void *)&v81[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock];
      uint64_t v137 = *(os_unfair_lock_s **)(v136 + 16);
      swift_retain();
      os_unfair_lock_lock(v137);
      uint64_t v138 = v148;
      sub_1DA81EEDC(v81);
      uint64_t v148 = v138;
      if (v138)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v136 + 16));
        __break(1u);
        return;
      }
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v136 + 16));
      swift_release();
      uint64_t v139 = *(void *)&v81[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier];
      uint64_t v140 = *(void *)&v81[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                           + 8];
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1DA9133E4(v139, v140);
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v21 = v186;
      (*v185)(v32, v186);
      uint64_t v58 = v189;
      uint64_t v44 = v181;
LABEL_5:
      uint64_t v43 = v58 + v171;
      if (!--v33)
      {
        swift_bridgeObjectRelease();
        return;
      }
      v188(v32, v43, v21);
    }
    if (v59 != v149)
    {
      v183 = v33;
      if (qword_1EBE5A1D8 != -1) {
        swift_once();
      }
      uint64_t v89 = sub_1DA989F38();
      __swift_project_value_buffer(v89, (uint64_t)qword_1EBE6F168);
      uint64_t v90 = v145;
      uint64_t v91 = v170;
      uint64_t v92 = (void (*)(char *, char *, uint64_t))v188;
      v188(v145, (uint64_t)v170, v21);
      uint64_t v93 = v146;
      v92(v146, v91, v21);
      uint64_t v94 = sub_1DA989F18();
      os_log_type_t v95 = sub_1DA98C538();
      int v96 = v95;
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v97 = swift_slowAlloc();
        uint64_t v178 = (void (*)(void, void))swift_slowAlloc();
        unint64_t v190 = v178;
        *(_DWORD *)uint64_t v97 = v143;
        sub_1DA9897B8();
        uint64_t v98 = sub_1DA989768();
        unint64_t v100 = v99;
        (*v40)(v187, v184);
        *(void *)(v97 + 4) = sub_1DA8C5E00(v98, v100, (uint64_t *)&v190);
        swift_bridgeObjectRelease();
        uint64_t v101 = *v185;
        (*v185)(v90, v186);
        *(_WORD *)(v97 + 12) = 2082;
        uint64_t v102 = v93;
        LODWORD(v177) = v96;
        sub_1DA9897C8();
        uint64_t v42 = v169;
        uint64_t v44 = v181;
        uint64_t v103 = sub_1DA98C0A8();
        *(void *)(v97 + 14) = sub_1DA8C5E00(v103, v104, (uint64_t *)&v190);
        swift_bridgeObjectRelease();
        v101(v102, v186);
        _os_log_impl(&dword_1DA795000, v94, (os_log_type_t)v177, "Ignoring activity descriptor change: %{public}s; unknown state: %{public}s",
          (uint8_t *)v97,
          0x16u);
        unint64_t v105 = v178;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v105, -1, -1);
        uint64_t v106 = v97;
        uint64_t v21 = v186;
        MEMORY[0x1E0178DA0](v106, -1, -1);

        unint64_t v32 = v170;
        v101(v170, v21);
        char v40 = v175;
      }
      else
      {

        uint64_t v135 = *v185;
        (*v185)(v93, v21);
        v135(v90, v21);
        unint64_t v32 = v170;
        v135(v170, v21);
        uint64_t v44 = v181;
      }
      (*v144)(v42, v44);
      uint64_t v33 = v183;
      uint64_t v58 = v189;
      goto LABEL_5;
    }
LABEL_12:
    uint64_t v61 = v166;
    sub_1DA9897B8();
    uint64_t v62 = sub_1DA989768();
    uint64_t v64 = v63;
    uint64_t v65 = *v40;
    uint64_t v66 = v184;
    (*v40)(v61, v184);
    uint64_t v67 = v65;
    uint64_t v68 = *v179;
    uint64_t v69 = *(void *)(*v179 + 16);
    uint64_t v178 = (void (*)(void, void))v67;
    if (v69)
    {
      swift_bridgeObjectRetain();
      unint64_t v70 = sub_1DA7FDF54(v62, v64);
      uint64_t v71 = v155;
      if (v72)
      {
        char v73 = v180;
        (*(void (**)(char *, unint64_t, uint64_t))(v155 + 16))(v180, *(void *)(v68 + 56) + *(void *)(v155 + 72) * v70, v66);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v73, 0, 1, v66);
      }
      else
      {
        (*v163)(v180, 1, 1, v66);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      (*v163)(v180, 1, 1, v66);
    }
    swift_bridgeObjectRelease();
    uint64_t v107 = v186;
    v183 = v33;
    uint64_t v108 = (uint64_t)v180;
    int v109 = (*v162)(v180, 1, v66);
    sub_1DA7A1AE0(v108, &qword_1EBE5A070);
    if (v109 == 1) {
      uint64_t v110 = 0x676E69646441;
    }
    else {
      uint64_t v110 = 0x676E697461647055;
    }
    if (v109 == 1) {
      unint64_t v111 = 0xE600000000000000;
    }
    else {
      unint64_t v111 = 0xE800000000000000;
    }
    if (qword_1EBE5A1D8 != -1) {
      swift_once();
    }
    uint64_t v112 = sub_1DA989F38();
    __swift_project_value_buffer(v112, (uint64_t)qword_1EBE6F168);
    unint64_t v113 = v164;
    uint64_t v114 = (void (*)(char *, char *, uint64_t))v188;
    v188(v164, (uint64_t)v32, v107);
    uint64_t v115 = v32;
    uint64_t v116 = v165;
    v114(v165, v115, v107);
    swift_bridgeObjectRetain();
    uint64_t v117 = sub_1DA989F18();
    os_log_type_t v118 = sub_1DA98C548();
    int v119 = v118;
    BOOL v120 = os_log_type_enabled(v117, v118);
    uint64_t v121 = v185;
    uint64_t v177 = (unint64_t)v185 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    if (v120)
    {
      uint64_t v122 = swift_slowAlloc();
      uint64_t v160 = swift_slowAlloc();
      unint64_t v190 = (void (*)(void, void))v160;
      *(_DWORD *)uint64_t v122 = v152;
      swift_bridgeObjectRetain();
      uint64_t v191 = sub_1DA8C5E00(v110, v111, (uint64_t *)&v190);
      int v159 = v119;
      sub_1DA98C858();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v122 + 12) = 2082;
      sub_1DA9897B8();
      uint64_t v123 = sub_1DA989768();
      unint64_t v125 = v124;
      os_log_t v158 = v117;
      uint64_t v126 = (void (*)(char *, uint64_t))v178;
      v178(v187, v184);
      uint64_t v191 = sub_1DA8C5E00(v123, v125, (uint64_t *)&v190);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      uint64_t v127 = *v185;
      (*v185)(v113, v107);
      *(_WORD *)(v122 + 22) = 2082;
      sub_1DA9897C8();
      uint64_t v128 = sub_1DA98C0A8();
      uint64_t v191 = sub_1DA8C5E00(v128, v129, (uint64_t *)&v190);
      uint64_t v46 = v126;
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      unint64_t v176 = v127;
      v127(v116, v107);
      os_log_t v130 = v158;
      _os_log_impl(&dword_1DA795000, v158, (os_log_type_t)v159, "%{public}s descriptor for changed activity: %{public}s; state: %{public}s",
        (uint8_t *)v122,
        0x20u);
      uint64_t v131 = v160;
      swift_arrayDestroy();
      uint64_t v132 = v131;
      uint64_t v133 = v184;
      MEMORY[0x1E0178DA0](v132, -1, -1);
      uint64_t v134 = v122;
      uint64_t v66 = v133;
      MEMORY[0x1E0178DA0](v134, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v45 = *v121;
      (*v121)(v113, v107);
      unint64_t v176 = v45;
      v45(v116, v107);

      uint64_t v46 = (void (*)(char *, uint64_t))v178;
    }
    char v47 = v187;
    uint64_t v48 = v170;
    sub_1DA9897B8();
    uint64_t v49 = sub_1DA989768();
    uint64_t v51 = v50;
    char v40 = v175;
    v46(v47, v66);
    uint64_t v52 = v66;
    uint64_t v53 = v167;
    sub_1DA9897B8();
    uint64_t v54 = v179;
    swift_beginAccess();
    uint64_t v55 = (uint64_t)v168;
    uint64_t v56 = v52;
    unint64_t v32 = v48;
    (*v161)(v168, v53, v56);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v191 = *v54;
    *uint64_t v54 = 0x8000000000000000;
    sub_1DA9171CC(v55, v49, v51, isUniquelyReferenced_nonNull_native);
    *uint64_t v54 = v191;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v21 = v186;
    v176(v48, v186);
    uint64_t v44 = v181;
    uint64_t v33 = v183;
    uint64_t v58 = v189;
    uint64_t v42 = v169;
    goto LABEL_5;
  }
}

uint64_t ActivitySubscriber.deinit()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_announcementSubscription))
  {
    swift_retain();
    sub_1DA989FA8();
    swift_release();
  }
  uint64_t v20 = v0;
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_subscriptions);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = *v1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(*v1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v9 >= v7) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v9);
    if (!v15) {
      break;
    }
LABEL_19:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_20:
    uint64_t v17 = *(char **)(*(void *)(v2 + 56) + 8 * v13);
    if (*(void *)&v17[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadSubscription])
    {
      swift_retain();
      swift_retain();
      sub_1DA989FA8();
      swift_release();
    }
    else
    {
      swift_retain();
    }
    if (*(void *)&v17[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_descriptorSubscription])
    {
      swift_retain();
      sub_1DA989FA8();
      swift_release();
    }
    uint64_t v10 = *(void *)&v17[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock];
    uint64_t v11 = *(os_unfair_lock_s **)(v10 + 16);
    swift_retain();
    os_unfair_lock_lock(v11);
    sub_1DA81EEDC(v17);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
    swift_release();
    uint64_t result = swift_release();
  }
  int64_t v16 = v9 + 1;
  if (v9 + 1 >= v7) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  int64_t v16 = v9 + 2;
  if (v9 + 2 >= v7) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  int64_t v16 = v9 + 3;
  if (v9 + 3 >= v7)
  {
LABEL_29:
    swift_release();
    uint64_t v18 = v20 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_logger;
    uint64_t v19 = sub_1DA989F38();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    __swift_destroy_boxed_opaque_existential_1(v20 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return v20;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v16);
  if (v15)
  {
LABEL_18:
    int64_t v9 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v9 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v9);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t ActivitySubscriber.__deallocating_deinit()
{
  ActivitySubscriber.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA821504(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
  unint64_t v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1DA821590(a1, v2, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));

  return swift_release();
}

void sub_1DA821590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v45 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  MEMORY[0x1F4188790](v7);
  int64_t v9 = (id *)((char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)v40 - v11;
  if (qword_1EBE5A1D8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1DA989F38();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EBE6F168);
  uint64_t v44 = a1;
  sub_1DA7A1F58(a1, (uint64_t)v12, &qword_1EBE59EF8);
  uint64_t v14 = sub_1DA989F18();
  os_log_type_t v15 = sub_1DA98C548();
  if (os_log_type_enabled(v14, v15))
  {
    int64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    v48[0] = v42;
    *(_DWORD *)int64_t v16 = 136315138;
    v40[2] = v16 + 12;
    long long v41 = v16;
    v40[1] = v16 + 4;
    sub_1DA7A1F58((uint64_t)v12, (uint64_t)v9, &qword_1EBE59EF8);
    uint64_t v46 = 91;
    unint64_t v47 = 0xE100000000000000;
    id v17 = *v9;
    v40[0] = v7;
    id v18 = v17;
    id v19 = objc_msgSend(v17, sel_description, v40[0]);
    sub_1DA98C038();
    uint64_t v43 = a2;

    uint64_t v4 = v3;
    sub_1DA98C148();

    swift_bridgeObjectRelease();
    sub_1DA98C148();
    type metadata accessor for ActivityKey(0);
    sub_1DA9897A8();
    sub_1DA8228F8(&qword_1EBE59DD0, MEMORY[0x1E4F17CC8]);
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    swift_bridgeObjectRetain();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA98C148();
    ActivityVariantKey.description.getter();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    uint64_t v20 = v46;
    unint64_t v21 = v47;
    sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE59EF8);
    uint64_t v46 = sub_1DA8C5E00(v20, v21, v48);
    a2 = v43;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA7A1AE0((uint64_t)v12, &qword_1EBE59EF8);
    uint64_t v22 = v41;
    _os_log_impl(&dword_1DA795000, v14, v15, "Subscribing to activity: %s", v41, 0xCu);
    uint64_t v23 = v42;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v23, -1, -1);
    MEMORY[0x1E0178DA0](v22, -1, -1);
  }
  else
  {
    sub_1DA7A1AE0((uint64_t)v12, &qword_1EBE59EF8);
  }

  uint64_t v24 = type metadata accessor for ActivityKey(0);
  uint64_t v25 = v44;
  uint64_t v26 = (uint64_t *)(v44 + *(int *)(v24 + 24));
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  uint64_t v29 = (uint64_t *)(a2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_subscriptions);
  swift_beginAccess();
  uint64_t v30 = *v29;
  uint64_t v31 = *(void *)(*v29 + 16);
  swift_bridgeObjectRetain();
  if (v31)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v32 = sub_1DA7FDF54(v28, v27);
    if (v33)
    {
      uint64_t v34 = *(void *)(*(void *)(v30 + 56) + 8 * v32);
      swift_retain();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DA7A1A44(a2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter, (uint64_t)&v46);
  uint64_t v35 = swift_allocObject();
  swift_weakInit();
  int64_t v36 = (void *)swift_allocObject();
  v36[2] = v35;
  v36[3] = v28;
  v36[4] = v27;
  type metadata accessor for ActivitySubscriber.ActivitySubscription(0);
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  uint64_t v34 = sub_1DA81C8C4(v28, v27, (uint64_t)&v46, (uint64_t)sub_1DA8228EC, (uint64_t)v36);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v49 = *v29;
  *uint64_t v29 = 0x8000000000000000;
  sub_1DA91708C(v34, v28, v27, isUniquelyReferenced_nonNull_native);
  *uint64_t v29 = v49;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_11:
  uint64_t v38 = *(void *)(v34
                  + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock);
  uint64_t v39 = *(os_unfair_lock_s **)(v38 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v39);
  sub_1DA81E9E8(v25, v34, v45);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v38 + 16));
  if (v4)
  {
    __break(1u);
  }
  else
  {
    swift_release_n();
    swift_release();
  }
}

uint64_t sub_1DA821B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(result + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
    uint64_t v7 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v7);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1DA9133E4(a2, a3);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA821C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v51 = a3;
  uint64_t v7 = sub_1DA989868();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = (void (*)(char *, unint64_t, uint64_t))v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v48 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DA989778();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v46 = (char *)&v45 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A070);
  MEMORY[0x1F4188790](v15 - 8);
  id v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v45 - v19;
  uint64_t v21 = *(void *)&v3[OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock];
  uint64_t v22 = *(os_unfair_lock_s **)(v21 + 16);
  swift_retain();
  os_unfair_lock_lock(v22);
  unint64_t v47 = v4;
  uint64_t v23 = &v4[OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_descriptors];
  swift_beginAccess();
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v52 = a1;
  uint64_t v45 = a2;
  if (v25)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_1DA7FDF54(a1, a2);
    if (v27)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v20, *(void *)(v24 + 56) + *(void *)(v10 + 72) * v26, v9);
      uint64_t v28 = *(char **)(v10 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v28)(v20, 0, 1, v9);
    }
    else
    {
      uint64_t v28 = *(char **)(v10 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v28)(v20, 1, 1, v9);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(char **)(v10 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v28)(v20, 1, 1, v9);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 16));
  swift_release();
  sub_1DA7A1F58((uint64_t)v20, (uint64_t)v17, &qword_1EBE5A070);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v17, 1, v9) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v17, &qword_1EBE5A070);
    uint64_t v29 = *(void *)&v47[OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter + 24];
    uint64_t v30 = *(void *)&v47[OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter + 32];
    __swift_project_boxed_opaque_existential_0(&v47[OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter], v29);
    uint64_t v31 = v48;
    sub_1DA989858();
    uint64_t v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 16))(v31, v29, v30);
    (*(void (**)(char *, void (*)(char *, unint64_t, uint64_t)))(v49 + 8))(v31, v50);
    uint64_t v37 = *(void *)(v36 + 16);
    if (v37)
    {
      unint64_t v47 = v28;
      uint64_t v48 = v20;
      uint64_t v38 = v45;
      uint64_t v39 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      unint64_t v40 = v36 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      uint64_t v49 = *(void *)(v10 + 72);
      uint64_t v50 = v39;
      uint64_t v46 = (char *)v36;
      swift_bridgeObjectRetain();
      while (1)
      {
        v50(v12, v40, v9);
        if (sub_1DA989768() == v52 && v41 == v38) {
          break;
        }
        char v42 = sub_1DA98CE58();
        swift_bridgeObjectRelease();
        if (v42) {
          goto LABEL_20;
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        v40 += v49;
        if (!--v37)
        {
          swift_bridgeObjectRelease();
          uint64_t v20 = v48;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v47)(v51, 1, 1, v9);
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease();
LABEL_20:
      uint64_t v28 = v47;
      uint64_t v20 = v48;
      swift_bridgeObjectRelease();
      uint64_t v44 = v51;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v12, v9);
      uint64_t v43 = 0;
    }
    else
    {
      uint64_t v43 = 1;
      uint64_t v44 = v51;
    }
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v28)(v44, v43, 1, v9);
LABEL_22:
    swift_bridgeObjectRelease();
    return sub_1DA7A1AE0((uint64_t)v20, &qword_1EBE5A070);
  }
  else
  {
    sub_1DA7A1AE0((uint64_t)v20, &qword_1EBE5A070);
    unint64_t v32 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    char v33 = v46;
    v32(v46, v17, v9);
    uint64_t v34 = v51;
    v32(v51, v33, v9);
    return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v28)(v34, 0, 1, v9);
  }
}

uint64_t sub_1DA822240()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_descriptors);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v5);
  swift_release();
  return v4;
}

uint64_t sub_1DA8222D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
  uint64_t v8 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  uint64_t v9 = (uint64_t *)(v3 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_subscriptions);
  swift_beginAccess();
  uint64_t v10 = *v9;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1DA7FDF54(a1, a2);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v15 = sub_1DA989758();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v13
      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payload;
  swift_beginAccess();
  sub_1DA7A1F58(v14, a3, &qword_1EBE59DB8);
  swift_release();
LABEL_6:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  return swift_release();
}

uint64_t sub_1DA82243C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
  uint64_t v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_subscriptions);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1DA7FDF54(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v12 = 0;
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v11
                  + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadPublisher);
  swift_retain();
  swift_release();
LABEL_6:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_release();
  return v12;
}

uint64_t sub_1DA82254C()
{
  return type metadata accessor for ActivitySubscriber(0);
}

uint64_t type metadata accessor for ActivitySubscriber(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE5A3D0);
}

uint64_t sub_1DA822574()
{
  uint64_t result = sub_1DA989F38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ActivitySubscriber(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ActivitySubscriber);
}

uint64_t dispatch thunk of ActivitySubscriber.__allocating_init(logger:activityCenter:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of ActivitySubscriber.subscribe(to:contentAssertion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of ActivitySubscriber.descriptor(id:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ActivitySubscriber.descriptors.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ActivitySubscriber.payload(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of ActivitySubscriber.subscribeToPayloads(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t sub_1DA822714()
{
  return type metadata accessor for ActivitySubscriber.ActivitySubscription(0);
}

uint64_t type metadata accessor for ActivitySubscriber.ActivitySubscription(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE59F50);
}

void sub_1DA82273C()
{
  sub_1DA822844();
  if (v0 <= 0x3F)
  {
    sub_1DA9897F8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1DA822844()
{
  if (!qword_1EBE59DC0)
  {
    sub_1DA989758();
    unint64_t v0 = sub_1DA98C838();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBE59DC0);
    }
  }
}

uint64_t sub_1DA82289C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA8228D4()
{
  return objectdestroy_40Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1DA8228EC()
{
  return sub_1DA821B90(v0[2], v0[3], v0[4]);
}

uint64_t sub_1DA8228F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA822940()
{
  return objectdestroy_40Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1DA822958(uint64_t a1)
{
  return sub_1DA81D6DC(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1DA822964(uint64_t a1)
{
  return sub_1DA81D8EC(a1);
}

uint64_t sub_1DA82296C()
{
  return objectdestroy_40Tm(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_40Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return MEMORY[0x1F4186498](v1, 40, 7);
}

uint64_t sub_1DA8229D4(uint64_t *a1)
{
  return sub_1DA81DCB0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1DA8229E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA822A48(uint64_t *a1)
{
  return sub_1DA81FEEC(a1);
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStoring.retrieveAllBudgets()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStoring.retrieveBudget(budgetID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStoring.update(budget:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStoring.remove(budget:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStoring.remove(budgetID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_1DA822AB8()
{
  return sub_1DA989808();
}

uint64_t sub_1DA822ADC()
{
  return sub_1DA989818();
}

uint64_t sub_1DA822B00()
{
  return sub_1DA989838();
}

uint64_t sub_1DA822B24()
{
  return sub_1DA989848();
}

uint64_t sub_1DA822B48()
{
  return sub_1DA989828();
}

uint64_t dispatch thunk of ActivityCenterInterface.descriptor(id:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ActivityCenterInterface.descriptors(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ActivityCenterInterface.observeDescriptors(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ActivityCenterInterface.observeDescriptorStates(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ActivityCenterInterface.observePayloads(id:feed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t ActivityVariantKey.filePathComponent.getter()
{
  uint64_t v1 = sub_1DA98BC38();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  type metadata accessor for ActivityVariantKey(0);
  sub_1DA98B918();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for ActivityVariantKey(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE5A3F8);
}

id ActivityKey.extensionIdentity.getter()
{
  return *v0;
}

void ActivityKey.extensionIdentity.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*ActivityKey.extensionIdentity.modify())()
{
  return CGSizeMake;
}

uint64_t ActivityKey.activityAttributesType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA8236D8(type metadata accessor for ActivityKey, MEMORY[0x1E4F17CC8], a1);
}

uint64_t type metadata accessor for ActivityKey(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE5A290);
}

uint64_t ActivityKey.activityAttributesType.setter(uint64_t a1)
{
  return sub_1DA823794(a1, type metadata accessor for ActivityKey, MEMORY[0x1E4F17CC8]);
}

uint64_t (*ActivityKey.activityAttributesType.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t ActivityKey.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActivityKey(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityKey.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ActivityKey(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ActivityKey.identifier.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t ActivityKey.init(extensionIdentity:activityAttributesType:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  uint64_t v9 = type metadata accessor for ActivityKey(0);
  char v10 = (char *)a5 + *(int *)(v9 + 20);
  uint64_t v11 = sub_1DA9897A8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  uint64_t v13 = (void *)((char *)a5 + *(int *)(v9 + 24));
  void *v13 = a3;
  v13[1] = a4;
  return result;
}

uint64_t ActivityKey.description.getter()
{
  id v1 = *v0;
  id v2 = objc_msgSend(v1, sel_description);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  type metadata accessor for ActivityKey(0);
  sub_1DA9897A8();
  sub_1DA8231D8(&qword_1EBE59DD0, MEMORY[0x1E4F17CC8]);
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return 91;
}

uint64_t ActivityKey.hash(into:)()
{
  id v1 = *v0;
  sub_1DA98C7B8();

  type metadata accessor for ActivityKey(0);
  sub_1DA9897A8();
  sub_1DA8231D8(&qword_1EBE59DC8, MEMORY[0x1E4F17CC8]);
  sub_1DA98BFB8();
  swift_bridgeObjectRetain();
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA8231D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ActivityKey.hashValue.getter()
{
  sub_1DA98CF18();
  id v1 = *v0;
  sub_1DA98C7B8();

  type metadata accessor for ActivityKey(0);
  sub_1DA9897A8();
  sub_1DA8231D8(&qword_1EBE59DC8, MEMORY[0x1E4F17CC8]);
  sub_1DA98BFB8();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  return sub_1DA98CF68();
}

uint64_t sub_1DA823310()
{
  sub_1DA98CF18();
  id v1 = *v0;
  sub_1DA98C7B8();

  sub_1DA9897A8();
  sub_1DA8231D8(&qword_1EBE59DC8, MEMORY[0x1E4F17CC8]);
  sub_1DA98BFB8();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  return sub_1DA98CF68();
}

uint64_t sub_1DA8233F4()
{
  id v1 = *v0;
  sub_1DA98C7B8();

  sub_1DA9897A8();
  sub_1DA8231D8(&qword_1EBE59DC8, MEMORY[0x1E4F17CC8]);
  sub_1DA98BFB8();
  swift_bridgeObjectRetain();
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA8234D4()
{
  sub_1DA98CF18();
  id v1 = *v0;
  sub_1DA98C7B8();

  sub_1DA9897A8();
  sub_1DA8231D8(&qword_1EBE59DC8, MEMORY[0x1E4F17CC8]);
  sub_1DA98BFB8();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  return sub_1DA98CF68();
}

uint64_t ActivityVariantKey.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DA98BC48();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ActivityVariantKey.metrics.setter(uint64_t a1)
{
  uint64_t v3 = sub_1DA98BC48();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ActivityVariantKey.metrics.modify())()
{
  return CGSizeMake;
}

uint64_t ActivityVariantKey.family.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA8236D8(type metadata accessor for ActivityVariantKey, MEMORY[0x1E4F46C88], a1);
}

uint64_t sub_1DA8236D8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t ActivityVariantKey.family.setter(uint64_t a1)
{
  return sub_1DA823794(a1, type metadata accessor for ActivityVariantKey, MEMORY[0x1E4F46C88]);
}

uint64_t sub_1DA823794(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a2(0) + 20);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40);

  return v8(v6, a1, v7);
}

uint64_t (*ActivityVariantKey.family.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t ActivityVariantKey.hostIdentity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivityVariantKey(0) + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ActivityVariantKey.hostIdentity.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivityVariantKey(0) + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ActivityVariantKey.hostIdentity.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t ActivityVariantKey.init(metrics:family:hostIdentity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1DA98BC48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for ActivityVariantKey(0);
  uint64_t v10 = a4 + *(int *)(v9 + 20);
  uint64_t v11 = sub_1DA98B928();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  uint64_t v12 = a4 + *(int *)(v9 + 24);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);

  return v14(v12, a3, v13);
}

uint64_t ActivityVariantKey.description.getter()
{
  return 91;
}

uint64_t ActivityVariantKey.hash(into:)()
{
  return sub_1DA98BFB8();
}

uint64_t ActivityVariantKey.hashValue.getter()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA823E30()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA823F70()
{
  return sub_1DA98BFB8();
}

uint64_t sub_1DA8240A0()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA8241E4()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE5A8F0);
    sub_1DA7A0410(&qword_1EBE5A8E8, (uint64_t *)&unk_1EBE5A8F0);
    uint64_t v1 = sub_1DA98A0F8();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1DA824298(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*sub_1DA8242A8(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = sub_1DA8241E4();
  return sub_1DA8242F0;
}

uint64_t sub_1DA8242F0(void *a1)
{
  *(void *)(a1[1] + 16) = *a1;
  return swift_release();
}

uint64_t sub_1DA824300(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59988);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1DA7A1F58(a1, (uint64_t)&v12 - v8, &qword_1EBE59988);
  uint64_t v10 = *a2 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  swift_beginAccess();
  sub_1DA8262A8((uint64_t)v9, v10);
  swift_endAccess();
  sub_1DA7A1F58(v10, (uint64_t)v6, &qword_1EBE59988);
  sub_1DA989FE8();
  sub_1DA7A1AE0((uint64_t)v6, &qword_1EBE59988);
  return sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE59988);
}

uint64_t sub_1DA824424@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA82466C(&OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content, &qword_1EBE59988, a1);
}

uint64_t sub_1DA824438(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59988);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  swift_beginAccess();
  sub_1DA8262A8(a1, v6);
  swift_endAccess();
  sub_1DA7A1F58(v6, (uint64_t)v5, &qword_1EBE59988);
  sub_1DA989FE8();
  sub_1DA7A1AE0((uint64_t)v5, &qword_1EBE59988);
  return sub_1DA7A1AE0(a1, &qword_1EBE59988);
}

void (*sub_1DA824524(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59988);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v6 = OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  uint64_t v3[4] = v5;
  v3[5] = v6;
  swift_beginAccess();
  return sub_1DA8245C4;
}

void sub_1DA8245C4(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  uint64_t v4 = (void *)v3[4];
  if ((a2 & 1) == 0)
  {
    sub_1DA7A1F58(v3[3] + v3[5], v3[4], &qword_1EBE59988);
    sub_1DA989FE8();
    sub_1DA7A1AE0((uint64_t)v4, &qword_1EBE59988);
  }
  free(v4);

  free(v3);
}

uint64_t sub_1DA824658@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA82466C(&OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id, &qword_1EBE59EF8, a1);
}

uint64_t sub_1DA82466C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *a1;
  swift_beginAccess();
  return sub_1DA7A1F58(v6, a3, a2);
}

uint64_t sub_1DA8246CC(uint64_t a1)
{
  return sub_1DA8249B4(a1, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id, &qword_1EBE59EF8);
}

uint64_t (*sub_1DA8246E0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DA82473C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA8247A8()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DA824800(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1DA824860())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DA8248BC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A1F58(a1, (uint64_t)v12, a5);
  uint64_t v13 = *a2 + *a6;
  swift_beginAccess();
  sub_1DA82636C((uint64_t)v12, v13, a5);
  return swift_endAccess();
}

uint64_t sub_1DA82498C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA82466C(&OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate, &qword_1EBE61CC0, a1);
}

uint64_t sub_1DA8249A0(uint64_t a1)
{
  return sub_1DA8249B4(a1, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate, &qword_1EBE61CC0);
}

uint64_t sub_1DA8249B4(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = v3 + *a2;
  swift_beginAccess();
  sub_1DA82636C(a1, v6, a3);
  return swift_endAccess();
}

uint64_t (*sub_1DA824A1C())()
{
  return j_j__swift_endAccess;
}

uint64_t ActivityEntry.targetEnvironmentProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7A1A44(v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_targetEnvironmentProvider, a1);
}

uint64_t sub_1DA824A8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1DA824B14(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1DA98B9E8();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = *a2 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v8, v4);
  return swift_endAccess();
}

uint64_t sub_1DA824C30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DA824CB4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1DA824D40())()
{
  return j__swift_endAccess;
}

uint64_t sub_1DA824D9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59ED0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EC8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = (void *)(v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_cacheManager);
  uint64_t v14 = v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id;
  swift_beginAccess();
  sub_1DA7A1F58(v14, (uint64_t)v12, &qword_1EBE59EF8);
  uint64_t v15 = v13[4];
  uint64_t v16 = v13[5];
  __swift_project_boxed_opaque_existential_0(v13 + 1, v15);
  (*(void (**)(void *, uint64_t, uint64_t))(v16 + 24))(v12, v15, v16);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v5, &qword_1EBE59ED0);
    type metadata accessor for ActivityCacheManager.CacheManagementError();
    sub_1DA8231D8(&qword_1EA8E5EF0, (void (*)(uint64_t))type metadata accessor for ActivityCacheManager.CacheManagementError);
    id v17 = (void *)swift_allocError();
    uint64_t v19 = v18;
    uint64_t v20 = *v12 + *MEMORY[0x1E4F58B80];
    swift_beginAccess();
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5EF8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v19, 0, 1, v22);
    swift_willThrow();

    sub_1DA7A1AE0((uint64_t)v12, &qword_1EBE59EF8);
    uint64_t v23 = sub_1DA989478();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a1, 1, 1, v23);
  }
  else
  {
    sub_1DA7BA440((uint64_t)v5, (uint64_t)v9, &qword_1EBE59EC8);
    uint64_t v25 = v13[9];
    uint64_t v26 = v13[10];
    __swift_project_boxed_opaque_existential_0(v13 + 6, v25);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v26 + 24))(v9, v25, v26);
    sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE59EC8);
    sub_1DA7A1AE0((uint64_t)v12, &qword_1EBE59EF8);
    uint64_t v27 = sub_1DA989478();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a1, 0, 1, v27);
  }
}

uint64_t ActivityEntry.cacheManager.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA826310(v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_cacheManager, a1);
}

uint64_t ActivityEntry.__allocating_init(id:content:protectionType:targetEnvironmentProvider:cacheManager:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, _OWORD *a5)
{
  uint64_t v10 = swift_allocObject();
  ActivityEntry.init(id:content:protectionType:targetEnvironmentProvider:cacheManager:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t ActivityEntry.init(id:content:protectionType:targetEnvironmentProvider:cacheManager:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, _OWORD *a5)
{
  uint64_t v6 = v5;
  *(void *)(v5 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE5A8F0);
  swift_allocObject();
  *(void *)(v5 + 24) = sub_1DA98A008();
  uint64_t v12 = v5 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  uint64_t v13 = sub_1DA98BD88();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = (void *)(v6 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  *uint64_t v14 = 0;
  v14[1] = 0;
  uint64_t v15 = v6 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate;
  uint64_t v16 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_1DA7BA440(a1, v6 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id, &qword_1EBE59EF8);
  swift_beginAccess();
  sub_1DA82636C(a2, v12, &qword_1EBE59988);
  swift_endAccess();
  uint64_t v17 = v6 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  uint64_t v18 = sub_1DA98B9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a3, v18);
  sub_1DA7A19A4(a4, v6 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_targetEnvironmentProvider);
  uint64_t v19 = (_OWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_cacheManager);
  long long v20 = a5[5];
  void v19[4] = a5[4];
  v19[5] = v20;
  long long v21 = a5[7];
  v19[6] = a5[6];
  v19[7] = v21;
  long long v22 = a5[1];
  *uint64_t v19 = *a5;
  v19[1] = v22;
  long long v23 = a5[3];
  long long v19[2] = a5[2];
  void v19[3] = v23;
  return v6;
}

uint64_t sub_1DA825424()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DA98B648();
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DA98A888();
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59988);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DA98BD88();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  swift_beginAccess();
  sub_1DA7A1F58(v15, (uint64_t)v10, &qword_1EBE59988);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v10, &qword_1EBE59988);
    char v16 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    unint64_t v25 = MEMORY[0x1E4FBC860];
    swift_getKeyPath();
    MEMORY[0x1E0177400]();
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1DA98C2D8();
    }
    sub_1DA98C308();
    sub_1DA98C2A8();
    swift_getKeyPath();
    MEMORY[0x1E0177400]();
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1DA98C2D8();
    }
    sub_1DA98C308();
    sub_1DA98C2A8();
    swift_getKeyPath();
    MEMORY[0x1E0177400]();
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1DA98C2D8();
    }
    sub_1DA98C308();
    sub_1DA98C2A8();
    uint64_t v17 = (void *)(v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_targetEnvironmentProvider);
    uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_targetEnvironmentProvider + 24);
    uint64_t v19 = v17[4];
    __swift_project_boxed_opaque_existential_0(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
    sub_1DA98BD28();
    if (v25 >> 62)
    {
      sub_1DA98C8D8();
      swift_bridgeObjectRetain();
      sub_1DA98CBC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DA98CE78();
      sub_1DA98C8D8();
    }
    swift_bridgeObjectRelease();
    char v16 = sub_1DA98B638();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v16 & 1;
}

uint64_t sub_1DA8258CC(uint64_t a1)
{
  uint64_t v2 = sub_1DA98B928();
  double v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1DA98A6E8();
}

uint64_t ActivityEntry.deinit()
{
  swift_release();
  swift_release();
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content, &qword_1EBE59988);
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id, &qword_1EBE59EF8);
  swift_bridgeObjectRelease();
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate, &qword_1EBE61CC0);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_targetEnvironmentProvider);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  uint64_t v2 = sub_1DA98B9E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1DA826474(v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_cacheManager);
  return v0;
}

uint64_t ActivityEntry.__deallocating_deinit()
{
  ActivityEntry.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA825ADC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA825D2C(&OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content, &qword_1EBE59988, a1);
}

uint64_t sub_1DA825AF0(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59988);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  swift_beginAccess();
  sub_1DA8262A8(a1, v6);
  swift_endAccess();
  sub_1DA7A1F58(v6, (uint64_t)v5, &qword_1EBE59988);
  sub_1DA989FE8();
  sub_1DA7A1AE0((uint64_t)v5, &qword_1EBE59988);
  return sub_1DA7A1AE0(a1, &qword_1EBE59988);
}

void (*sub_1DA825BE0(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59988);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v6 = *v1;
  v3[3] = v5;
  uint64_t v3[4] = v6;
  v3[5] = OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  swift_beginAccess();
  return sub_1DA825C84;
}

void sub_1DA825C84(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  uint64_t v4 = (void *)v3[3];
  if ((a2 & 1) == 0)
  {
    sub_1DA7A1F58(v3[4] + v3[5], v3[3], &qword_1EBE59988);
    sub_1DA989FE8();
    sub_1DA7A1AE0((uint64_t)v4, &qword_1EBE59988);
  }
  free(v4);

  free(v3);
}

uint64_t sub_1DA825D18@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA825D2C(&OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate, &qword_1EBE61CC0, a1);
}

uint64_t sub_1DA825D2C@<X0>(void *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = *v3 + *a1;
  swift_beginAccess();
  return sub_1DA7A1F58(v6, a3, a2);
}

uint64_t sub_1DA825D90(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate;
  swift_beginAccess();
  sub_1DA82636C(a1, v3, &qword_1EBE61CC0);
  return swift_endAccess();
}

uint64_t (*sub_1DA825DF8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DA825E58()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DA825EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1DA825F18())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DA825F78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DA826000@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA825D2C(&OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id, &qword_1EBE59EF8, a1);
}

uint64_t sub_1DA826014@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ActivityEntry(0);
  uint64_t result = sub_1DA989FD8();
  *a1 = result;
  return result;
}

uint64_t _s9ChronoKit11ActivityKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1DA7ECAA0();
  if ((sub_1DA98C7A8() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for ActivityKey(0);
  if ((sub_1DA989798() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  if (v6 == *v8 && v7 == v8[1]) {
    return 1;
  }

  return sub_1DA98CE58();
}

uint64_t _s9ChronoKit18ActivityVariantKeyV2eeoiySbAC_ACtFZ_0()
{
  if ((MEMORY[0x1E0176DD0]() & 1) != 0
    && (type metadata accessor for ActivityVariantKey(0),
        sub_1DA98B928(),
        sub_1DA8231D8(&qword_1EBE59FF8, MEMORY[0x1E4F46C88]),
        sub_1DA98C248(),
        sub_1DA98C248(),
        v4 == v2))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
    sub_1DA7A0410((unint64_t *)&unk_1EBE59DE0, &qword_1EBE66B90);
    sub_1DA98C248();
    sub_1DA98C248();
    if (v5 == v3) {
      char v0 = 1;
    }
    else {
      char v0 = sub_1DA98CE58();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_1DA8262A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA826310(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DA82636C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA8263D0()
{
  return sub_1DA98A688();
}

uint64_t sub_1DA8263F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA98A6B8();
  *a1 = result;
  return result;
}

uint64_t sub_1DA826420(id *a1)
{
  id v1 = *a1;
  return sub_1DA98A6C8();
}

uint64_t sub_1DA82644C()
{
  return sub_1DA98A6D8();
}

uint64_t sub_1DA826474(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DA8264C8()
{
  return sub_1DA8231D8(&qword_1EBE5A280, (void (*)(uint64_t))type metadata accessor for ActivityKey);
}

uint64_t sub_1DA826510()
{
  return sub_1DA8231D8(&qword_1EBE5A3E8, (void (*)(uint64_t))type metadata accessor for ActivityVariantKey);
}

uint64_t sub_1DA826558()
{
  return sub_1DA7A0410(&qword_1EA8E5F00, &qword_1EBE59EF8);
}

uint64_t sub_1DA826594()
{
  return MEMORY[0x1E4F1ABE8];
}

uint64_t sub_1DA8265A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA8241E4();
  *a1 = result;
  return result;
}

uint64_t sub_1DA8265CC(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 16) = *a1;
  swift_retain();

  return swift_release();
}

uint64_t sub_1DA826610@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content, &qword_1EBE59988, a2);
}

uint64_t sub_1DA826628@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id, &qword_1EBE59EF8, a2);
}

uint64_t keypath_get_10Tm@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a1 + *a2;
  swift_beginAccess();
  return sub_1DA7A1F58(v6, a4, a3);
}

uint64_t sub_1DA8266A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA8248BC(a1, a2, a3, a4, &qword_1EBE59EF8, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id);
}

uint64_t sub_1DA8266C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA826724@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate, &qword_1EBE61CC0, a2);
}

uint64_t sub_1DA826738(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA8248BC(a1, a2, a3, a4, &qword_1EBE61CC0, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate);
}

void **initializeBufferWithCopyOfBuffer for ActivityKey(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DA9897A8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (void **)((char *)v7 + v14);
    char v16 = (void **)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ActivityKey(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1DA9897A8();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void **initializeWithCopy for ActivityKey(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DA9897A8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void **)((char *)a1 + v13);
  uint64_t v15 = (void **)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

void **assignWithCopy for ActivityKey(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1DA9897A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void **)((char *)a1 + v13);
  uint64_t v15 = (void **)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ActivityKey(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DA9897A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void **assignWithTake for ActivityKey(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DA9897A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void **)((char *)a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA826BDC);
}

uint64_t sub_1DA826BDC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DA9897A8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ActivityKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA826CA0);
}

void *sub_1DA826CA0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DA9897A8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DA826D48()
{
  uint64_t result = sub_1DA9897A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActivityVariantKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DA98BC48();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DA98B928();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ActivityVariantKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA98BC48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DA98B928();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ActivityVariantKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98BC48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DA98B928();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ActivityVariantKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98BC48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DA98B928();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ActivityVariantKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98BC48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DA98B928();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ActivityVariantKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98BC48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DA98B928();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityVariantKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA827480);
}

uint64_t sub_1DA827480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98BC48();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DA98B928();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ActivityVariantKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA8275E4);
}

uint64_t sub_1DA8275E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DA98BC48();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_1DA98B928();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_1DA827740()
{
  sub_1DA98BC48();
  if (v0 <= 0x3F)
  {
    sub_1DA98B928();
    if (v1 <= 0x3F)
    {
      sub_1DA7A02EC();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1DA827844()
{
  return type metadata accessor for ActivityEntry(0);
}

uint64_t type metadata accessor for ActivityEntry(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE5A2A0);
}

void sub_1DA82786C()
{
  sub_1DA827EA0(319, &qword_1EBE5AB50, MEMORY[0x1E4F46EC0]);
  if (v0 <= 0x3F)
  {
    sub_1DA827D48();
    if (v1 <= 0x3F)
    {
      sub_1DA827EA0(319, (unint64_t *)&qword_1EBE66CE0, MEMORY[0x1E4F27928]);
      if (v2 <= 0x3F)
      {
        sub_1DA98B9E8();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for ActivityEntry(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ActivityEntry);
}

uint64_t dispatch thunk of ActivityEntry.contentDidChangePublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ActivityEntry.contentDidChangePublisher.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ActivityEntry.contentDidChangePublisher.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ActivityEntry.content.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of ActivityEntry.content.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of ActivityEntry.content.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of ActivityEntry.id.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of ActivityEntry.id.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of ActivityEntry.id.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ActivityEntry.contentLoadError.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ActivityEntry.contentLoadError.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of ActivityEntry.contentLoadError.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of ActivityEntry.contentLoadErrorDate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of ActivityEntry.contentLoadErrorDate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of ActivityEntry.contentLoadErrorDate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of ActivityEntry.protectionType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of ActivityEntry.protectionType.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of ActivityEntry.protectionType.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of ActivityEntry.contentURL.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of ActivityEntry.__allocating_init(id:content:protectionType:targetEnvironmentProvider:cacheManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of ActivityEntry.doesTargetEnvironmentMatchContent()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

void sub_1DA827D48()
{
  if (!qword_1EBE5A398)
  {
    type metadata accessor for ActivityKey(255);
    type metadata accessor for ActivityVariantKey(255);
    sub_1DA8231D8(&qword_1EBE5A288, (void (*)(uint64_t))type metadata accessor for ActivityKey);
    sub_1DA8231D8(&qword_1EBE5A278, (void (*)(uint64_t))type metadata accessor for ActivityKey);
    sub_1DA8231D8(&qword_1EBE5A3F0, (void (*)(uint64_t))type metadata accessor for ActivityVariantKey);
    sub_1DA8231D8(&qword_1EBE5A3E0, (void (*)(uint64_t))type metadata accessor for ActivityVariantKey);
    unint64_t v0 = type metadata accessor for VariantIdentifier();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBE5A398);
    }
  }
}

void sub_1DA827EA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DA98C838();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t static ControlCacheKey.allControls(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  uint64_t result = type metadata accessor for ControlCacheKey();
  *(void *)(a2 + *(int *)(result + 20)) = 0;
  return result;
}

uint64_t ControlCacheKey.init(baseURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(int *)(type metadata accessor for ControlCacheKey() + 20);
  uint64_t v5 = sub_1DA989478();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  *(void *)(a2 + v4) = 0;
  return result;
}

uint64_t type metadata accessor for ControlCacheKey()
{
  uint64_t result = qword_1EBE668B0;
  if (!qword_1EBE668B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *ControlCacheKey.control.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ControlCacheKey() + 20));
  id v2 = v1;
  return v1;
}

void ControlCacheKey.init(baseURL:entryKey:)(uint64_t a1@<X0>, id *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(int *)(type metadata accessor for ControlCacheKey() + 20);
  *(void *)(a3 + v6) = 0;
  uint64_t v7 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a3, a1, v7);
  id v8 = *a2;
  sub_1DA8280F8((uint64_t)a2);

  *(void *)(a3 + v6) = v8;
}

uint64_t sub_1DA8280F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ControlEntryKey();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ControlCacheKey.init(baseURL:control:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(int *)(type metadata accessor for ControlCacheKey() + 20);
  uint64_t v7 = sub_1DA989478();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a3, a1, v7);
  *(void *)(a3 + v6) = a2;
  return result;
}

uint64_t ControlCacheKey.description.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ControlCacheKey() + 20));
  if (!v1) {
    return sub_1DA989368();
  }
  id v2 = v1;
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  sub_1DA989478();
  sub_1DA8288E8(qword_1EBE62D08, MEMORY[0x1E4F276F0]);
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  id v3 = objc_msgSend(v2, sel_description);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  return 0x3A4C525565736162;
}

void ControlCacheKey.hash(into:)()
{
  sub_1DA989478();
  sub_1DA8288E8(&qword_1EBE58900, MEMORY[0x1E4F276F0]);
  sub_1DA98BFB8();
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ControlCacheKey() + 20));
  if (v1)
  {
    sub_1DA98CF38();
    id v2 = v1;
    sub_1DA98C7B8();
  }
  else
  {
    sub_1DA98CF38();
  }
}

uint64_t ControlCacheKey.hashValue.getter()
{
  sub_1DA98CF18();
  sub_1DA989478();
  sub_1DA8288E8(&qword_1EBE58900, MEMORY[0x1E4F276F0]);
  sub_1DA98BFB8();
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ControlCacheKey() + 20));
  sub_1DA98CF38();
  if (v1)
  {
    id v2 = v1;
    sub_1DA98C7B8();
  }
  return sub_1DA98CF68();
}

uint64_t sub_1DA8284EC(uint64_t a1)
{
  sub_1DA98CF18();
  sub_1DA989478();
  sub_1DA8288E8(&qword_1EBE58900, MEMORY[0x1E4F276F0]);
  sub_1DA98BFB8();
  id v3 = *(void **)(v1 + *(int *)(a1 + 20));
  sub_1DA98CF38();
  if (v3)
  {
    id v4 = v3;
    sub_1DA98C7B8();
  }
  return sub_1DA98CF68();
}

void sub_1DA8285BC(uint64_t a1, uint64_t a2)
{
  sub_1DA989478();
  sub_1DA8288E8(&qword_1EBE58900, MEMORY[0x1E4F276F0]);
  sub_1DA98BFB8();
  id v4 = *(void **)(v2 + *(int *)(a2 + 20));
  if (v4)
  {
    sub_1DA98CF38();
    id v5 = v4;
    sub_1DA98C7B8();
  }
  else
  {
    sub_1DA98CF38();
  }
}

uint64_t sub_1DA8286A4(uint64_t a1, uint64_t a2)
{
  sub_1DA98CF18();
  sub_1DA989478();
  sub_1DA8288E8(&qword_1EBE58900, MEMORY[0x1E4F276F0]);
  sub_1DA98BFB8();
  id v4 = *(void **)(v2 + *(int *)(a2 + 20));
  sub_1DA98CF38();
  if (v4)
  {
    id v5 = v4;
    sub_1DA98C7B8();
  }
  return sub_1DA98CF68();
}

void sub_1DA828774(uint64_t a1@<X0>, id *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(int *)(a3 + 20);
  *(void *)(a4 + v7) = 0;
  uint64_t v8 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  id v9 = *a2;
  sub_1DA8280F8((uint64_t)a2);

  *(void *)(a4 + v7) = v9;
}

uint64_t _s9ChronoKit15ControlCacheKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (MEMORY[0x1E01745D0]())
  {
    uint64_t v4 = *(int *)(type metadata accessor for ControlCacheKey() + 20);
    id v5 = *(void **)(a1 + v4);
    uint64_t v6 = *(void **)(a2 + v4);
    if (v5)
    {
      if (v6)
      {
        sub_1DA828EC0();
        id v7 = v6;
        id v8 = v5;
        char v9 = sub_1DA98C7A8();

        if (v9) {
          return 1;
        }
      }
    }
    else if (!v6)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1DA8288A0()
{
  return sub_1DA8288E8((unint64_t *)&unk_1EBE5A928, (void (*)(uint64_t))type metadata accessor for ControlCacheKey);
}

uint64_t sub_1DA8288E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlCacheKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DA989478();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    char v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    id v10 = v9;
  }
  return a1;
}

void destroy for ControlCacheKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t initializeWithCopy for ControlCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for ControlCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  id v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  id v10 = v9;

  return a1;
}

uint64_t initializeWithTake for ControlCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ControlCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for ControlCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA828C90);
}

uint64_t sub_1DA828C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989478();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ControlCacheKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA828D70);
}

uint64_t sub_1DA828D70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DA989478();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t sub_1DA828E2C()
{
  uint64_t result = sub_1DA989478();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1DA828EC0()
{
  unint64_t result = qword_1EBE5A890;
  if (!qword_1EBE5A890)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE5A890);
  }
  return result;
}

BOOL static ExpiringStatefulStore.ExpiringAssertionAcquisitionPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ExpiringStatefulStore.ExpiringAssertionAcquisitionPolicy.hash(into:)()
{
  return sub_1DA98CF28();
}

uint64_t ExpiringStatefulStore.ExpiringAssertionAcquisitionPolicy.hashValue.getter()
{
  return sub_1DA98CF68();
}

BOOL sub_1DA828F8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ExpiringStatefulStore.ExpiringAssertionAcquisitionPolicy.== infix(_:_:)(a1, a2);
}

uint64_t sub_1DA828FB8()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA828FF4()
{
  uint64_t v0 = sub_1DA82D674();
  sub_1DA7AE2F8(v0);
  return v0;
}

uint64_t sub_1DA829028(uint64_t a1, uint64_t a2)
{
  int v5 = (uint64_t *)(v2 + qword_1EBE6F230);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *int v5 = a1;
  v5[1] = a2;
  return sub_1DA7AD81C(v6);
}

uint64_t (*sub_1DA829088())()
{
  return j__swift_endAccess;
}

double ExpiringStatefulStore.expirationDuration.getter()
{
  return *(double *)(v0 + qword_1EBE6F0D0);
}

uint64_t sub_1DA8290F4(uint64_t a1)
{
  *(void *)(v1 + qword_1EBE59358) = a1;
  return swift_release();
}

uint64_t ExpiringStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:expirationDuration:)(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, double a9, long long a10, uint64_t a11)
{
  swift_allocObject();
  uint64_t v18 = sub_1DA82D304(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  (*(void (**)(void, void))(*(void *)(a10 - 8) + 8))(a2, a10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a8 - 8) + 8))(a1, a8);
  return v18;
}

uint64_t ExpiringStatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:expirationDuration:)(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, double a9, long long a10, uint64_t a11)
{
  uint64_t v14 = sub_1DA82D304(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  (*(void (**)(void, void))(*(void *)(a10 - 8) + 8))(a2, a10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a8 - 8) + 8))(a1, a8);
  return v14;
}

uint64_t ExpiringStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, long long a9, uint64_t a10)
{
  swift_allocObject();
  uint64_t v16 = sub_1DA82CFFC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  (*(void (**)(void, void))(*(void *)(a9 - 8) + 8))(a2, a9);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a8 - 8) + 8))(a1, a8);
  return v16;
}

uint64_t ExpiringStatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, long long a9, uint64_t a10)
{
  uint64_t v13 = sub_1DA82CFFC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  (*(void (**)(void, void))(*(void *)(a9 - 8) + 8))(a2, a9);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a8 - 8) + 8))(a1, a8);
  return v13;
}

uint64_t sub_1DA8294AC()
{
  sub_1DA7AD81C(*(void *)(v0 + qword_1EBE6F230));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_1EBE58C98;
  uint64_t v2 = sub_1DA989F38();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t ExpiringStatefulStore.deinit()
{
  uint64_t v1 = qword_1EBE59358;
  uint64_t v2 = *(void *)(v0 + qword_1EBE59358);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 24);
    uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v4);
    if ((*(unsigned char *)(v2 + 32) & 1) == 0)
    {
      *(unsigned char *)(v2 + 32) = 1;
      objc_msgSend(*(id *)(v2 + 16), sel_invalidate);
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
    swift_release();
  }
  *(void *)(v0 + v1) = 0;
  swift_release();
  uint64_t v5 = AssertedStatefulStore.deinit();
  sub_1DA7AD81C(*(void *)(v5 + qword_1EBE6F230));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v6 = v5 + qword_1EBE58C98;
  uint64_t v7 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return v5;
}

uint64_t ExpiringStatefulStore.__deallocating_deinit()
{
  ExpiringStatefulStore.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA8296E8(uint64_t a1)
{
  uint64_t v51 = a1;
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 1672);
  uint64_t v43 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)v37 - v4;
  uint64_t v6 = v2[210];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v50 = sub_1DA98C838();
  uint64_t v48 = *(void (***)(char *, char *, uint64_t))(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v37 - v11;
  uint64_t v13 = sub_1DA8C72B8();
  uint64_t v14 = v2[208];
  uint64_t v53 = v3;
  uint64_t v15 = sub_1DA98BF68();
  uint64_t v46 = v1;
  uint64_t v16 = v2[212];
  swift_bridgeObjectRetain();
  MEMORY[0x1E0177130](&v54, v51, v13, v14, v15, v16);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v18 = v54;
  if (v54)
  {
    if ((v54 & 0xC000000000000001) != 0)
    {
      uint64_t result = sub_1DA98CB78();
      unint64_t v38 = 0;
      uint64_t v19 = 0;
      unint64_t v20 = 0;
      unint64_t v18 = result | 0x8000000000000000;
    }
    else
    {
      uint64_t v21 = -1 << *(unsigned char *)(v54 + 32);
      uint64_t v22 = *(void *)(v54 + 64);
      unint64_t v38 = v54 + 64;
      uint64_t v23 = ~v21;
      uint64_t v24 = -v21;
      if (v24 < 64) {
        uint64_t v25 = ~(-1 << v24);
      }
      else {
        uint64_t v25 = -1;
      }
      unint64_t v20 = v25 & v22;
      uint64_t v19 = v23;
    }
    int64_t v26 = 0;
    uint64_t v49 = TupleTypeMetadata2 - 8;
    v37[1] = v19;
    uint64_t v40 = v18 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v41 = v43 + 16;
    uint64_t v52 = v6 - 8;
    unint64_t v47 = v18;
    v48 += 4;
    uint64_t v44 = (void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v45 = (void (**)(char *, char *, uint64_t))(v43 + 32);
    int64_t v39 = (unint64_t)(v19 + 64) >> 6;
    v37[0] = v39 - 1;
    char v42 = v5;
    if ((v18 & 0x8000000000000000) != 0) {
      goto LABEL_12;
    }
LABEL_9:
    if (v20)
    {
      uint64_t v27 = (v20 - 1) & v20;
      unint64_t v28 = __clz(__rbit64(v20)) | (v26 << 6);
      int64_t v29 = v26;
LABEL_11:
      unint64_t v30 = v18;
      (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v9, *(void *)(v18 + 48) + *(void *)(v43 + 72) * v28, v53);
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(&v9[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v30 + 56) + *(void *)(*(void *)(v6 - 8) + 72) * v28, v6);
      uint64_t v31 = 0;
      uint64_t v5 = v42;
      goto LABEL_21;
    }
    int64_t v29 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
    }
    else
    {
      if (v29 >= v39)
      {
        uint64_t v27 = 0;
        uint64_t v31 = 1;
        int64_t v29 = v26;
        goto LABEL_21;
      }
      unint64_t v32 = *(void *)(v38 + 8 * v29);
      if (v32) {
        goto LABEL_17;
      }
      if (v26 + 2 >= v39)
      {
        uint64_t v27 = 0;
        uint64_t v31 = 1;
        goto LABEL_21;
      }
      unint64_t v32 = *(void *)(v38 + 8 * (v26 + 2));
      if (v32)
      {
        int64_t v29 = v26 + 2;
LABEL_17:
        uint64_t v27 = (v32 - 1) & v32;
        unint64_t v28 = __clz(__rbit64(v32)) + (v29 << 6);
        goto LABEL_11;
      }
      int64_t v36 = v26 + 3;
      if (v26 + 3 >= v39)
      {
        uint64_t v27 = 0;
        uint64_t v31 = 1;
        int64_t v29 = v26 + 2;
        goto LABEL_21;
      }
      unint64_t v32 = *(void *)(v38 + 8 * v36);
      if (v32)
      {
        int64_t v29 = v26 + 3;
        goto LABEL_17;
      }
      while (1)
      {
        int64_t v29 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          break;
        }
        if (v29 >= v39)
        {
          uint64_t v27 = 0;
          uint64_t v31 = 1;
          int64_t v29 = v37[0];
LABEL_21:
          while (1)
          {
            uint64_t v33 = *(void *)(TupleTypeMetadata2 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v9, v31, 1, TupleTypeMetadata2);
            (*v48)(v12, v9, v50);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v12, 1, TupleTypeMetadata2) == 1) {
              return sub_1DA8092D8();
            }
            uint64_t v34 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
            uint64_t v35 = v53;
            (*v45)(v5, v12, v53);
            sub_1DA829D08(v51, (uint64_t)v5);
            (*v44)(v5, v35);
            uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v34, v6);
            int64_t v26 = v29;
            unint64_t v20 = v27;
            unint64_t v18 = v47;
            if ((v47 & 0x8000000000000000) == 0) {
              goto LABEL_9;
            }
LABEL_12:
            if (sub_1DA98CB88())
            {
              sub_1DA98CE28();
              swift_unknownObjectRelease();
              sub_1DA98CE28();
              swift_unknownObjectRelease();
              uint64_t v31 = 0;
            }
            else
            {
              uint64_t v31 = 1;
            }
            int64_t v29 = v26;
            uint64_t v27 = v20;
          }
        }
        unint64_t v32 = *(void *)(v38 + 8 * v29);
        ++v36;
        if (v32) {
          goto LABEL_17;
        }
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA829D08(uint64_t a1, uint64_t a2)
{
  void (**v21)(void *__return_ptr, uint64_t, uint64_t);
  void (*v22)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  void (*v44)(uint64_t *, void);
  void (*v45)(char *, uint64_t);
  uint64_t TupleTypeMetadata2;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  long long v57;
  uint64_t v58;
  char *v59;
  long long v60;
  uint64_t v61;
  uint64_t v62[4];
  long long v63[3];
  void v64[2];
  long long v65;
  long long v66;
  long long v67;

  uint64_t v3 = v2;
  uint64_t v6 = *(_OWORD **)v2;
  uint64_t v7 = *(void *)(*(void *)v2 + 1672);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v56 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v14 = *(void *)(v13 + 1664);
  uint64_t v58 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v55 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  unint64_t v54 = (char *)&v51 - v18;
  MEMORY[0x1F4188790](v19);
  int v59 = (char *)&v51 - v20;
  uint64_t v21 = (void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + qword_1EBE6F230);
  swift_beginAccess();
  uint64_t v22 = *v21;
  if (!*v21 || (sub_1DA7AE2F8((uint64_t)v22), v22(v64, a1, a2), uint64_t result = sub_1DA7AD81C((uint64_t)v22), (v64[0] & 1) == 0))
  {
    uint64_t v61 = a2;
    uint64_t v24 = (uint64_t *)(v3 + qword_1EBE59350);
    swift_beginAccess();
    uint64_t v25 = *v24;
    swift_bridgeObjectRetain();
    v64[0] = v14;
    v64[1] = v7;
    uint64_t v65 = v6[105];
    BOOL v60 = v6[106];
    uint64_t v57 = v6[107];
    uint64_t v66 = v60;
    uint64_t v67 = v57;
    int64_t v26 = type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
    uint64_t v27 = (char *)v57;
    unint64_t v28 = sub_1DA98BF68();
    int64_t v29 = v60;
    *(void *)&BOOL v60 = v28;
    MEMORY[0x1E0177130](v64, a1, v25, v14);
    swift_bridgeObjectRelease();
    unint64_t v30 = v64[0];
    swift_bridgeObjectRelease();
    if (!v30)
    {
      sub_1DA7BCF44(a1, v61, v63);
      sub_1DA7A19A4(v63, (uint64_t)v64);
      *((void *)&v66 + 1) = CHDMonotonicTimeFromNow(0);
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v59, a1, v14);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      sub_1DA98CDE8();
      swift_allocObject();
      unint64_t v47 = sub_1DA98C2B8();
      uint64_t v49 = v48 + *(int *)(TupleTypeMetadata2 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v48, v61, v7);
      uint64_t v50 = *(void *)(v26 - 8);
      (*(void (**)(uint64_t, void *, uint64_t))(v50 + 16))(v49, v64, v26);
      sub_1DA9546FC(v47);
      v62[0] = sub_1DA98BEC8();
      swift_beginAccess();
      sub_1DA98BF68();
      sub_1DA98BF98();
      swift_endAccess();
      (*(void (**)(void *, uint64_t))(v50 + 8))(v64, v26);
      return sub_1DA82CCC4();
    }
    int v59 = v27;
    uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v51(v12, v61, v7);
    uint64_t v31 = (uint64_t *)(v3 + qword_1EBE59350);
    swift_beginAccess();
    unint64_t v32 = *v31;
    swift_bridgeObjectRetain();
    uint64_t v52 = a1;
    uint64_t v53 = v14;
    *(void *)&uint64_t v57 = v29;
    MEMORY[0x1E0177130](v63, a1, v32, v14, v60, v29);
    uint64_t result = swift_bridgeObjectRelease();
    if (*(void *)&v63[0])
    {
      MEMORY[0x1E0177130](v64, v12, *(void *)&v63[0], v7, v26, v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      uint64_t v33 = *((void *)&v65 + 1);
      uint64_t v34 = sub_1DA98C838();
      (*(void (**)(void *, uint64_t))(*(void *)(v34 - 8) + 8))(v64, v34);
      if (v33) {
        return sub_1DA82CCC4();
      }
      uint64_t v35 = v52;
      int64_t v36 = v61;
      sub_1DA7BCF44(v52, v61, v63);
      sub_1DA7A19A4(v63, (uint64_t)v64);
      *((void *)&v66 + 1) = CHDMonotonicTimeFromNow(0);
      uint64_t v37 = v58;
      int v59 = *(char **)(v58 + 16);
      unint64_t v38 = v54;
      int64_t v39 = v35;
      uint64_t v40 = v53;
      ((void (*)(char *, uint64_t, uint64_t))v59)(v54, v39, v53);
      v51(v56, v36, v7);
      uint64_t v41 = *(void *)(v26 - 8);
      (*(void (**)(long long *, void *, uint64_t))(v41 + 16))(v63, v64, v26);
      swift_beginAccess();
      char v42 = v55;
      ((void (*)(char *, char *, uint64_t))v59)(v55, v38, v40);
      sub_1DA98BF28();
      uint64_t result = sub_1DA98BF38();
      if (*v43)
      {
        uint64_t v44 = (void (*)(uint64_t *, void))result;
        sub_1DA98BF98();
        v44(v62, 0);
        uint64_t v45 = *(void (**)(char *, uint64_t))(v37 + 8);
        v45(v42, v40);
        v45(v38, v40);
        swift_endAccess();
        (*(void (**)(void *, uint64_t))(v41 + 8))(v64, v26);
        return sub_1DA82CCC4();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA82A558()
{
  uint64_t v1 = *v0;
  long long v2 = *(_OWORD *)(*v0 + 1680);
  v8[0] = *(_OWORD *)(*v0 + 1664);
  v8[1] = v2;
  long long v3 = *(_OWORD *)(v1 + 1712);
  _OWORD v8[2] = *(_OWORD *)(v1 + 1696);
  v8[3] = v3;
  type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
  *(void *)&v8[0] = sub_1DA98C2E8();
  uint64_t v6 = v0;
  uint64_t v7 = v8;
  sub_1DA8ABB5C((uint64_t)sub_1DA82DEB4, (uint64_t)&v5, MEMORY[0x1E4FBC848] + 8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA82A618(uint64_t a1, uint64_t a2)
{
  uint64_t v195 = a2;
  uint64_t v3 = *(void *)(*(void *)a1 + 1672);
  uint64_t v228 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  v210 = (char *)&v168 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v224 = (char *)&v168 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v208 = (char *)&v168 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v168 - v10;
  uint64_t v171 = v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v225 = (char *)&v168 - v14;
  uint64_t v16 = v15[208];
  uint64_t v17 = v15[210];
  uint64_t v18 = v15[211];
  uint64_t v19 = v15[212];
  uint64_t v20 = v15[213];
  *(void *)&long long v237 = v16;
  *((void *)&v237 + 1) = v3;
  *(void *)&long long v238 = v17;
  *((void *)&v238 + 1) = v18;
  uint64_t v193 = v18;
  uint64_t v206 = v19;
  *(void *)&long long v239 = v19;
  *((void *)&v239 + 1) = v20;
  uint64_t v192 = v20;
  long long v234 = *(_OWORD *)(v21 + 1712);
  long long v240 = v234;
  uint64_t v22 = type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v216 = sub_1DA98C838();
  uint64_t v23 = *(void *)(v216 - 8);
  MEMORY[0x1F4188790](v216);
  os_log_type_t v217 = (char *)&v168 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  v215 = (char *)&v168 - v26;
  uint64_t v187 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v27);
  unint64_t v175 = (char *)&v168 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v185 = (char *)&v168 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v200 = (char *)&v168 - v32;
  MEMORY[0x1F4188790](v33);
  os_log_type_t v199 = (char *)&v168 - v34;
  MEMORY[0x1F4188790](v35);
  unint64_t v194 = (char *)&v168 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v201 = (char *)&v168 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v168 - v40;
  uint64_t v169 = v42;
  MEMORY[0x1F4188790](v43);
  uint64_t v186 = (char *)&v168 - v44;
  uint64_t v231 = v22;
  uint64_t v174 = v234;
  uint64_t v45 = sub_1DA98BF68();
  uint64_t v207 = v16;
  uint64_t v183 = swift_getTupleTypeMetadata2();
  uint64_t v178 = sub_1DA98C838();
  uint64_t v46 = *(void *)(v178 - 8);
  MEMORY[0x1F4188790](v178);
  uint64_t v181 = (char *)&v168 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v48);
  uint64_t v180 = (char *)&v168 - v49;
  uint64_t v182 = a1;
  uint64_t v204 = a1 + qword_1EBE58C98;
  uint64_t v50 = sub_1DA989F18();
  os_log_type_t v51 = sub_1DA98C548();
  BOOL v52 = os_log_type_enabled(v50, v51);
  uint64_t v218 = v11;
  if (v52)
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v53 = 0;
    _os_log_impl(&dword_1DA795000, v50, v51, "ExpiringStatefulStore expiration timer fired", v53, 2u);
    MEMORY[0x1E0178DA0](v53, -1, -1);
  }

  dispatch_time_t v54 = CHDMonotonicTimeFromNow(0);
  dispatch_time_t v212 = CHDMonotonicTimePlusInterval(v54, 2000000000);
  uint64_t v241 = sub_1DA98C2E8();
  uint64_t v55 = v182;
  uint64_t v56 = (uint64_t *)(v182 + qword_1EBE59350);
  swift_beginAccess();
  uint64_t v57 = *v56;
  uint64_t v58 = *(void *)(*v56 + 64);
  uint64_t v172 = *v56 + 64;
  uint64_t v59 = 1 << *(unsigned char *)(v57 + 32);
  if (v59 < 64) {
    uint64_t v60 = ~(-1 << v59);
  }
  else {
    uint64_t v60 = -1;
  }
  unint64_t v61 = v60 & v58;
  uint64_t v203 = v55 + qword_1EBE59350;
  uint64_t v179 = v183 - 8;
  uint64_t v62 = (void *)(v187 + 16);
  uint64_t v177 = (void (**)(char *, char *, uint64_t))(v46 + 32);
  uint64_t v188 = (void (**)(char *, char *, uint64_t))(v187 + 32);
  uint64_t v214 = TupleTypeMetadata2 - 8;
  *(void *)&long long v234 = v228 + 16;
  uint64_t v196 = (uint64_t *)(v231 - 8);
  uint64_t v213 = (void (**)(void))(v23 + 32);
  os_log_t v230 = (os_log_t)(v228 + 32);
  uint64_t v232 = (uint64_t (**)(char *, uint64_t))(v228 + 8);
  unint64_t v226 = v187 + 8;
  int64_t v173 = (unint64_t)(v59 + 63) >> 6;
  int64_t v170 = v173 - 1;
  uint64_t v176 = v57;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v184 = 0;
  *(void *)&long long v64 = 136446466;
  long long v191 = v64;
  uint64_t v190 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v205 = v45;
  uint64_t v233 = v3;
  v227 = v62;
  uint64_t v65 = v181;
  uint64_t v66 = v180;
  unint64_t v211 = v41;
  while (1)
  {
    if (v61)
    {
      uint64_t v189 = (v61 - 1) & v61;
      unint64_t v67 = __clz(__rbit64(v61)) | (v184 << 6);
      uint64_t v68 = v183;
LABEL_10:
      uint64_t v69 = v176;
      (*(void (**)(char *, unint64_t, uint64_t))(v187 + 16))(v65, *(void *)(v176 + 48) + *(void *)(v187 + 72) * v67, v207);
      *(void *)&v65[*(int *)(v68 + 48)] = *(void *)(*(void *)(v69 + 56) + 8 * v67);
      uint64_t v70 = *(void *)(v68 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v65, 0, 1, v68);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    int64_t v71 = v184 + 1;
    uint64_t v68 = v183;
    if (__OFADD__(v184, 1)) {
      goto LABEL_92;
    }
    if (v71 < v173)
    {
      unint64_t v72 = *(void *)(v172 + 8 * v71);
      if (v72) {
        goto LABEL_14;
      }
      int64_t v73 = v184 + 2;
      ++v184;
      if (v71 + 1 < v173)
      {
        unint64_t v72 = *(void *)(v172 + 8 * v73);
        if (v72)
        {
          ++v71;
LABEL_14:
          uint64_t v189 = (v72 - 1) & v72;
          unint64_t v67 = __clz(__rbit64(v72)) + (v71 << 6);
          int64_t v184 = v71;
          goto LABEL_10;
        }
        int64_t v74 = v71 + 2;
        int64_t v184 = v71 + 1;
        if (v71 + 2 < v173)
        {
          unint64_t v72 = *(void *)(v172 + 8 * v74);
          if (v72)
          {
            v71 += 2;
            goto LABEL_14;
          }
          while (1)
          {
            int64_t v71 = v74 + 1;
            if (__OFADD__(v74, 1)) {
              goto LABEL_93;
            }
            if (v71 >= v173) {
              break;
            }
            unint64_t v72 = *(void *)(v172 + 8 * v71);
            ++v74;
            if (v72) {
              goto LABEL_14;
            }
          }
          int64_t v184 = v170;
        }
      }
    }
    uint64_t v70 = *(void *)(v183 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v65, 1, 1, v183);
    uint64_t v189 = 0;
LABEL_27:
    (*v177)(v66, v65, v178);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v66, 1, v68) == 1) {
      break;
    }
    uint64_t v75 = *(void *)&v66[*(int *)(v68 + 48)];
    (*v188)(v41, v66, v207);
    uint64_t result = sub_1DA98C2E8();
    int64_t v76 = 0;
    uint64_t v236 = result;
    uint64_t v77 = *(void *)(v75 + 64);
    int64_t v222 = v75 + 64;
    *(void *)&long long v229 = v75;
    uint64_t v78 = 1 << *(unsigned char *)(v75 + 32);
    if (v78 < 64) {
      uint64_t v79 = ~(-1 << v78);
    }
    else {
      uint64_t v79 = -1;
    }
    unint64_t v80 = v79 & v77;
    int64_t v223 = (unint64_t)(v78 + 63) >> 6;
    uint64_t v221 = (uint64_t (*)(char *, uint64_t))(v223 - 1);
    uint64_t v81 = v196;
    for (i = v218; ; uint64_t result = (*v232)(i, v96))
    {
      uint64_t v84 = TupleTypeMetadata2;
      unint64_t v85 = v217;
      if (v80)
      {
        unint64_t v86 = __clz(__rbit64(v80));
        v80 &= v80 - 1;
        int64_t v87 = v76;
        unint64_t v88 = v86 | (v76 << 6);
        uint64_t v89 = v231;
        goto LABEL_36;
      }
      int64_t v87 = v76 + 1;
      uint64_t v89 = v231;
      if (__OFADD__(v76, 1)) {
        goto LABEL_89;
      }
      if (v87 >= v223) {
        goto LABEL_52;
      }
      unint64_t v99 = *(void *)(v222 + 8 * v87);
      if (v99) {
        goto LABEL_44;
      }
      v76 += 2;
      if (v87 + 1 >= v223)
      {
        unint64_t v80 = 0;
        uint64_t v91 = 1;
        goto LABEL_37;
      }
      unint64_t v99 = *(void *)(v222 + 8 * v76);
      if (v99)
      {
        ++v87;
        goto LABEL_44;
      }
      int64_t v100 = v87 + 2;
      if (v87 + 2 >= v223)
      {
LABEL_52:
        unint64_t v80 = 0;
        uint64_t v91 = 1;
      }
      else
      {
        unint64_t v99 = *(void *)(v222 + 8 * v100);
        if (v99)
        {
          v87 += 2;
LABEL_44:
          unint64_t v80 = (v99 - 1) & v99;
          unint64_t v88 = __clz(__rbit64(v99)) + (v87 << 6);
LABEL_36:
          uint64_t v90 = v229;
          (*(void (**)(char *, unint64_t, uint64_t))(v228 + 16))(v217, *(void *)(v229 + 48) + *(void *)(v228 + 72) * v88, v233);
          (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v89 - 8) + 16))(&v85[*(int *)(v84 + 48)], *(void *)(v90 + 56) + 48 * v88, v89);
          uint64_t v91 = 0;
LABEL_37:
          int64_t v76 = v87;
          goto LABEL_38;
        }
        while (1)
        {
          int64_t v87 = v100 + 1;
          if (__OFADD__(v100, 1)) {
            goto LABEL_90;
          }
          if (v87 >= v223) {
            break;
          }
          unint64_t v99 = *(void *)(v222 + 8 * v87);
          ++v100;
          if (v99) {
            goto LABEL_44;
          }
        }
        unint64_t v80 = 0;
        uint64_t v91 = 1;
        int64_t v76 = (int64_t)v221;
      }
LABEL_38:
      uint64_t v92 = *(void *)(v84 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v85, v91, 1, v84);
      uint64_t v93 = v215;
      (*v213)();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v93, 1, v84) == 1) {
        break;
      }
      uint64_t v94 = &v93[*(int *)(v84 + 48)];
      os_log_type_t v95 = v93;
      uint64_t v96 = v233;
      ((void (*)(char *, char *, uint64_t))v230->isa)(i, v95, v233);
      long long v97 = *((_OWORD *)v94 + 2);
      long long v238 = *((_OWORD *)v94 + 1);
      long long v239 = v97;
      long long v237 = *(_OWORD *)v94;
      uint64_t v98 = v89;
      if (CHDMonotonicTimeLessThan(v212, *((uint64_t *)&v97 + 1)))
      {
        uint64_t v83 = *v81;
      }
      else
      {
        uint64_t v83 = *(void *)(v89 - 8);
        (*(void (**)(char *, long long *, uint64_t))(v83 + 16))(v235, &v237, v98);
        sub_1DA98C378();
        sub_1DA98C328();
        (*(void (**)(char *, char *, uint64_t))v234)(v208, v218, v96);
        sub_1DA98C378();
        uint64_t v81 = v196;
        uint64_t i = v218;
        sub_1DA98C328();
      }
      (*(void (**)(long long *, uint64_t))(v83 + 8))(&v237, v98);
    }
    swift_release();
    uint64_t v101 = v236;
    uint64_t v102 = swift_bridgeObjectRetain();
    uint64_t v103 = v233;
    if (MEMORY[0x1E0177500](v102, v233))
    {
      int64_t v104 = 0;
      uint64_t v105 = v207;
      uint64_t v106 = v210;
      uint64_t v62 = v227;
      uint64_t v202 = v101;
      while (1)
      {
        char v107 = sub_1DA98C2F8();
        sub_1DA98C2C8();
        if (v107)
        {
          uint64_t v108 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v228 + 16);
          uint64_t result = v108(v225, v101+ ((*(unsigned __int8 *)(v228 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v228 + 80))+ *(void *)(v228 + 72) * v104, v103);
          int v109 = v201;
          uint64_t v110 = v211;
          int64_t v111 = v104 + 1;
          if (__OFADD__(v104, 1)) {
            goto LABEL_88;
          }
        }
        else
        {
          uint64_t result = sub_1DA98CA48();
          int v109 = v201;
          uint64_t v110 = v211;
          if (v171 != 8) {
            goto LABEL_95;
          }
          *(void *)&long long v237 = result;
          uint64_t v220 = *(uint64_t (**)(char *, uint64_t))v234;
          ((void (*)(char *, long long *, uint64_t))v220)(v225, &v237, v103);
          uint64_t v108 = (uint64_t (*)(char *, unint64_t, uint64_t))v220;
          uint64_t result = swift_unknownObjectRelease();
          int64_t v111 = v104 + 1;
          if (__OFADD__(v104, 1))
          {
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
            return result;
          }
        }
        int64_t v223 = v104;
        int64_t v222 = v111;
        uint64_t v112 = v105;
        unint64_t v113 = v62;
        uint64_t v114 = (uint64_t (*)(char *, uint64_t))v108;
        uint64_t v115 = v224;
        ((void (*)(char *, char *, uint64_t))v230->isa)(v224, v225, v103);
        *(void *)&long long v229 = *v113;
        ((void (*)(char *, char *, uint64_t))v229)(v109, v110, v112);
        uint64_t v220 = v114;
        ((void (*)(char *, char *, uint64_t))v114)(v106, v115, v103);
        uint64_t v116 = sub_1DA989F18();
        os_log_type_t v117 = sub_1DA98C548();
        int v209 = v117;
        if (os_log_type_enabled(v116, v117))
        {
          uint64_t v118 = swift_slowAlloc();
          uint64_t v198 = swift_slowAlloc();
          *(void *)&long long v237 = v198;
          *(_DWORD *)uint64_t v118 = v191;
          os_log_t v197 = v116;
          int v119 = v194;
          ((void (*)(char *, char *, uint64_t))v229)(v194, v109, v112);
          BOOL v120 = *(uint64_t (**)(char *, uint64_t))v226;
          (*(void (**)(char *, uint64_t))v226)(v109, v112);
          uint64_t v121 = sub_1DA98CDD8();
          unint64_t v123 = v122;
          uint64_t v221 = v120;
          v120(v119, v207);
          *(void *)(v118 + 4) = sub_1DA8C5E00(v121, v123, (uint64_t *)&v237);
          swift_bridgeObjectRelease();
          *(_WORD *)(v118 + 12) = 2082;
          unint64_t v124 = v208;
          ((void (*)(char *, char *, uint64_t))v220)(v208, v210, v103);
          unint64_t v125 = *v232;
          (*v232)(v210, v103);
          uint64_t v126 = sub_1DA98CDD8();
          unint64_t v128 = v127;
          uint64_t v220 = v125;
          v125(v124, v103);
          uint64_t v129 = v126;
          uint64_t v105 = v207;
          *(void *)(v118 + 14) = sub_1DA8C5E00(v129, v128, (uint64_t *)&v237);
          swift_bridgeObjectRelease();
          os_log_t v130 = v197;
          _os_log_impl(&dword_1DA795000, v197, (os_log_type_t)v209, "%{public}s:%{public}s Expiring assertion", (uint8_t *)v118, 0x16u);
          uint64_t v131 = v198;
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v131, -1, -1);
          uint64_t v132 = v118;
          uint64_t v110 = v211;
          uint64_t v106 = v210;
          MEMORY[0x1E0178DA0](v132, -1, -1);

          uint64_t v133 = v199;
        }
        else
        {
          uint64_t v220 = *v232;
          v220(v106, v103);
          uint64_t v221 = *(uint64_t (**)(char *, uint64_t))v226;
          v221(v109, v112);

          uint64_t v133 = v199;
          uint64_t v105 = v112;
        }
        uint64_t v134 = (void (*)(char *, char *, uint64_t))v229;
        ((void (*)(char *, char *, uint64_t))v229)(v133, v110, v105);
        swift_beginAccess();
        uint64_t v135 = v200;
        v134(v200, v133, v105);
        sub_1DA98BF28();
        uint64_t result = sub_1DA98BF38();
        int64_t v137 = v223;
        if (!*v136) {
          goto LABEL_94;
        }
        uint64_t v138 = (void (*)(char *, void))result;
        uint64_t v139 = v133;
        uint64_t v140 = v224;
        sub_1DA98BEA8();
        uint64_t v141 = sub_1DA98C838();
        (*(void (**)(long long *, uint64_t))(*(void *)(v141 - 8) + 8))(&v237, v141);
        v138(v235, 0);
        long long v142 = (void (*)(char *, uint64_t))v221;
        v221(v135, v105);
        v142(v139, v105);
        swift_endAccess();
        uint64_t v103 = v233;
        v220(v140, v233);
        uint64_t v101 = v202;
        uint64_t v143 = MEMORY[0x1E0177500](v202, v103);
        int64_t v104 = v137 + 1;
        uint64_t v62 = v227;
        if (v222 == v143)
        {
          swift_bridgeObjectRelease();
          uint64_t v89 = v231;
          uint64_t v144 = v205;
          goto LABEL_73;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v105 = v207;
    uint64_t v144 = v205;
    uint64_t v62 = v227;
LABEL_73:
    swift_bridgeObjectRelease();
    v145 = (uint64_t *)(v182 + qword_1EBE59350);
    swift_beginAccess();
    uint64_t v146 = *v145;
    swift_bridgeObjectRetain();
    uint64_t v41 = v211;
    MEMORY[0x1E0177130](&v237, v211, v146, v105, v144, v206);
    swift_bridgeObjectRelease();
    if ((void)v237)
    {
      char v147 = MEMORY[0x1E01770C0](v237, v103, v89, v174);
      swift_bridgeObjectRelease();
      if (v147)
      {
        ((void (*)(char *, char *, uint64_t))*v62)(v194, v41, v105);
        sub_1DA98C378();
        sub_1DA98C328();
      }
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))v226)(v41, v105);
    uint64_t v65 = v181;
    uint64_t v66 = v180;
    unint64_t v61 = v189;
  }
  swift_release();
  uint64_t v148 = v241;
  uint64_t v149 = v207;
  if (MEMORY[0x1E0177500](v241, v207))
  {
    uint64_t v151 = 0;
    *(void *)&long long v150 = 136446210;
    long long v229 = v150;
    uint64_t v232 = (uint64_t (**)(char *, uint64_t))(v226 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
    uint64_t v228 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v233 = v148;
    do
    {
      char v155 = sub_1DA98C2F8();
      sub_1DA98C2C8();
      if (v155)
      {
        unint64_t v156 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v187 + 16);
        uint64_t result = v156(v186, v148+ ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80))+ *(void *)(v187 + 72) * v151, v149);
      }
      else
      {
        uint64_t result = sub_1DA98CA48();
        if (v169 != 8) {
          goto LABEL_96;
        }
        *(void *)&long long v237 = result;
        unint64_t v156 = (uint64_t (*)(char *, unint64_t, uint64_t))*v62;
        ((void (*)(char *, long long *, uint64_t))*v62)(v186, &v237, v149);
        uint64_t result = swift_unknownObjectRelease();
      }
      int v157 = v175;
      if (__OFADD__(v151, 1)) {
        goto LABEL_91;
      }
      *(void *)&long long v234 = v151 + 1;
      os_log_t v158 = v185;
      uint64_t v149 = v207;
      (*v188)(v185, v186, v207);
      v156(v157, (unint64_t)v158, v149);
      int v159 = sub_1DA989F18();
      os_log_type_t v160 = sub_1DA98C548();
      if (os_log_type_enabled(v159, v160))
      {
        uint64_t v161 = swift_slowAlloc();
        uint64_t v231 = swift_slowAlloc();
        *(void *)&long long v237 = v231;
        *(_DWORD *)uint64_t v161 = v229;
        os_log_t v230 = v159;
        uint64_t v162 = v194;
        v156(v194, (unint64_t)v157, v149);
        long long v152 = *(uint64_t (**)(char *, uint64_t))v226;
        (*(void (**)(char *, uint64_t))v226)(v157, v149);
        uint64_t v163 = sub_1DA98CDD8();
        unint64_t v165 = v164;
        v152(v162, v149);
        *(void *)(v161 + 4) = sub_1DA8C5E00(v163, v165, (uint64_t *)&v237);
        swift_bridgeObjectRelease();
        int v159 = v230;
        _os_log_impl(&dword_1DA795000, v230, v160, "%{public}s Purging empty assertion container", (uint8_t *)v161, 0xCu);
        uint64_t v166 = v231;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v166, -1, -1);
        MEMORY[0x1E0178DA0](v161, -1, -1);
      }
      else
      {
        long long v152 = *(uint64_t (**)(char *, uint64_t))v226;
        (*(void (**)(char *, uint64_t))v226)(v157, v149);
      }

      swift_beginAccess();
      sub_1DA98BF68();
      uint64_t v153 = v185;
      sub_1DA98BEA8();
      swift_endAccess();
      swift_bridgeObjectRelease();
      v152(v153, v149);
      uint64_t v148 = v233;
      uint64_t v154 = MEMORY[0x1E0177500](v233, v149);
      ++v151;
      uint64_t v62 = v227;
    }
    while ((void)v234 != v154);
  }
  uint64_t v167 = swift_bridgeObjectRelease();
  return sub_1DA82CCC4(v167);
}

void sub_1DA82C144(dispatch_time_t *a1@<X8>)
{
  uint64_t v60 = a1;
  long long v2 = *(_OWORD **)v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 1704);
  *(void *)uint64_t v83 = *(void *)(*(void *)v1 + 1664);
  uint64_t v3 = *(void *)v83;
  long long v80 = *(_OWORD *)((char *)v2 + 1672);
  *(_OWORD *)&v83[8] = v80;
  *(_OWORD *)&v83[24] = *(_OWORD *)((char *)v2 + 1688);
  *(void *)&v83[40] = v4;
  long long v81 = v2[107];
  long long v84 = v81;
  uint64_t v5 = type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
  uint64_t v6 = v80;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v79 = sub_1DA98C838();
  uint64_t v77 = *(void (***)(char *, char *, uint64_t))(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v58 - v11;
  sub_1DA98BF68();
  uint64_t v69 = v3;
  uint64_t v13 = swift_getTupleTypeMetadata2();
  uint64_t v68 = sub_1DA98C838();
  *(void *)&long long v81 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v70 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (unint64_t)&v58 - v16;
  if (qword_1EBE59070 == -1) {
    goto LABEL_2;
  }
  while (1)
  {
    swift_once();
LABEL_2:
    uint64_t v18 = qword_1EBE592B0;
    uint64_t v59 = v1;
    uint64_t v19 = v1 + qword_1EBE59350;
    swift_beginAccess();
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(*(void *)v19 + 64);
    uint64_t v61 = *(void *)v19 + 64;
    uint64_t v22 = 1 << *(unsigned char *)(v20 + 32);
    uint64_t v23 = v22 < 64 ? ~(-1 << v22) : -1;
    unint64_t v24 = v23 & v21;
    uint64_t v67 = v13 - 8;
    uint64_t v1 = v69;
    uint64_t v72 = v69 - 8;
    uint64_t v66 = (void (**)(unint64_t, char *, uint64_t))(v81 + 32);
    *(void *)&long long v81 = v6 - 8;
    *(void *)&long long v80 = v5 - 8;
    v77 += 4;
    uint64_t v78 = TupleTypeMetadata2 - 8;
    int64_t v62 = (unint64_t)(v22 + 63) >> 6;
    int64_t v58 = v62 - 1;
    uint64_t v63 = v20;
    swift_bridgeObjectRetain();
    int64_t v71 = 0;
    unint64_t v73 = v17;
    uint64_t v64 = v13;
LABEL_7:
    if (!v24) {
      break;
    }
    uint64_t v25 = v1;
    uint64_t v74 = (v24 - 1) & v24;
    unint64_t v26 = __clz(__rbit64(v24)) | (v71 << 6);
LABEL_9:
    uint64_t v27 = v63;
    uint64_t v28 = v70;
    (*(void (**)(char *, unint64_t))(*(void *)(v25 - 8) + 16))(v70, *(void *)(v63 + 48) + *(void *)(*(void *)(v25 - 8) + 72) * v26);
    *(void *)&v28[*(int *)(v13 + 48)] = *(void *)(*(void *)(v27 + 56) + 8 * v26);
    uint64_t v29 = *(void *)(v13 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v28, 0, 1, v13);
    swift_bridgeObjectRetain();
    unint64_t v17 = v73;
LABEL_26:
    (*v66)(v17, v28, v68);
    uint64_t v34 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v29 + 48);
    uint64_t v1 = v29 + 48;
    if (v34(v17, 1, v13) == 1)
    {
      swift_release();
      int64_t v49 = *(void *)(v59 + qword_1EBE59368);
      if (v49 < 0) {
        dispatch_time_t v50 = qword_1EBE592B0;
      }
      else {
        dispatch_time_t v50 = CHDMonotonicTimePlusInterval(v18, v49);
      }
      os_log_type_t v51 = sub_1DA989F18();
      os_log_type_t v52 = sub_1DA98C548();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        *(void *)uint64_t v83 = v54;
        *(_DWORD *)uint64_t v53 = 136315138;
        if (CHDMonotonicTimeEqual(v50, qword_1EBE592B0))
        {
          unint64_t v55 = 0xED00006572757475;
          uint64_t v56 = 0x46746E6174736964;
        }
        else
        {
          uint64_t v82 = v50;
          uint64_t v56 = sub_1DA98CDD8();
          unint64_t v55 = v57;
        }
        uint64_t v82 = sub_1DA8C5E00(v56, v55, (uint64_t *)v83);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DA795000, v51, v52, "Earliest assertion expiration date is %s", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v54, -1, -1);
        MEMORY[0x1E0178DA0](v53, -1, -1);
      }

      dispatch_time_t *v60 = v50;
      return;
    }
    uint64_t v35 = v13;
    uint64_t v13 = 0;
    uint64_t v36 = *(void *)(v17 + *(int *)(v35 + 48));
    uint64_t v37 = *(void *)(v36 + 64);
    uint64_t v75 = v36 + 64;
    uint64_t v38 = 1 << *(unsigned char *)(v36 + 32);
    if (v38 < 64) {
      uint64_t v39 = ~(-1 << v38);
    }
    else {
      uint64_t v39 = -1;
    }
    unint64_t v17 = v39 & v37;
    int64_t v76 = (unint64_t)(v38 + 63) >> 6;
    uint64_t v65 = v76 - 1;
    if ((v39 & v37) != 0)
    {
LABEL_31:
      unint64_t v40 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v41 = v40 | (v13 << 6);
      goto LABEL_32;
    }
    while (1)
    {
      int64_t v43 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        goto LABEL_65;
      }
      if (v43 < v76)
      {
        unint64_t v44 = *(void *)(v75 + 8 * v43);
        if (v44) {
          goto LABEL_36;
        }
        v13 += 2;
        if (v43 + 1 >= v76)
        {
          unint64_t v17 = 0;
          uint64_t v42 = 1;
          uint64_t v13 = v43;
          goto LABEL_45;
        }
        unint64_t v44 = *(void *)(v75 + 8 * v13);
        if (v44)
        {
          ++v43;
          goto LABEL_36;
        }
        int64_t v45 = v43 + 2;
        if (v43 + 2 < v76) {
          break;
        }
      }
      unint64_t v17 = 0;
      uint64_t v42 = 1;
LABEL_45:
      uint64_t v46 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v9, v42, 1, TupleTypeMetadata2);
      (*v77)(v12, v9, v79);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v12, 1, TupleTypeMetadata2) == 1)
      {
        swift_release();
        uint64_t v1 = v69;
        unint64_t v17 = v73;
        (*(void (**)(unint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v73, v69);
        uint64_t v13 = v64;
        unint64_t v24 = v74;
        goto LABEL_7;
      }
      uint64_t v47 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
      long long v48 = *((_OWORD *)v47 + 2);
      *(_OWORD *)&v83[16] = *((_OWORD *)v47 + 1);
      *(_OWORD *)&v83[32] = v48;
      *(_OWORD *)uint64_t v83 = *(_OWORD *)v47;
      uint64_t v1 = *((void *)&v48 + 1);
      if (CHDMonotonicTimeLessThan(*((uint64_t *)&v48 + 1), v18)) {
        uint64_t v18 = v1;
      }
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v5 - 8) + 8))(v83, v5);
      (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v12, v6);
      if (v17) {
        goto LABEL_31;
      }
    }
    unint64_t v44 = *(void *)(v75 + 8 * v45);
    if (v44)
    {
      v43 += 2;
LABEL_36:
      unint64_t v17 = (v44 - 1) & v44;
      unint64_t v41 = __clz(__rbit64(v44)) + (v43 << 6);
      uint64_t v13 = v43;
LABEL_32:
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v9, *(void *)(v36 + 48) + *(void *)(*(void *)(v6 - 8) + 72) * v41, v6);
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(&v9[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v36 + 56) + 48 * v41, v5);
      uint64_t v42 = 0;
      goto LABEL_45;
    }
    while (1)
    {
      int64_t v43 = v45 + 1;
      if (__OFADD__(v45, 1)) {
        break;
      }
      if (v43 >= v76)
      {
        unint64_t v17 = 0;
        uint64_t v42 = 1;
        uint64_t v13 = v65;
        goto LABEL_45;
      }
      unint64_t v44 = *(void *)(v75 + 8 * v43);
      ++v45;
      if (v44) {
        goto LABEL_36;
      }
    }
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
  }
  int64_t v30 = v71 + 1;
  if (__OFADD__(v71, 1)) {
    goto LABEL_66;
  }
  uint64_t v28 = v70;
  if (v30 >= v62)
  {
LABEL_25:
    uint64_t v29 = *(void *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v70, 1, 1, v13);
    uint64_t v74 = 0;
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v61 + 8 * v30);
  if (v31)
  {
LABEL_13:
    uint64_t v25 = v1;
    uint64_t v74 = (v31 - 1) & v31;
    unint64_t v26 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v71 = v30;
    goto LABEL_9;
  }
  int64_t v32 = v71 + 2;
  ++v71;
  if (v30 + 1 >= v62) {
    goto LABEL_25;
  }
  unint64_t v31 = *(void *)(v61 + 8 * v32);
  if (v31)
  {
    ++v30;
    goto LABEL_13;
  }
  int64_t v33 = v30 + 2;
  int64_t v71 = v30 + 1;
  if (v30 + 2 >= v62) {
    goto LABEL_25;
  }
  unint64_t v31 = *(void *)(v61 + 8 * v33);
  if (v31)
  {
    v30 += 2;
    goto LABEL_13;
  }
  while (1)
  {
    int64_t v30 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v30 >= v62)
    {
      int64_t v71 = v58;
      goto LABEL_25;
    }
    unint64_t v31 = *(void *)(v61 + 8 * v30);
    ++v33;
    if (v31) {
      goto LABEL_13;
    }
  }
  __break(1u);
}

uint64_t sub_1DA82CCC4()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = qword_1EBE59358;
  uint64_t v3 = *(void *)((char *)v0 + qword_1EBE59358);
  if (v3)
  {
    uint64_t v4 = *(void *)(v3 + 24);
    uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v5);
    if ((*(unsigned char *)(v3 + 32) & 1) == 0)
    {
      *(unsigned char *)(v3 + 32) = 1;
      objc_msgSend(*(id *)(v3 + 16), sel_invalidate);
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    swift_release();
    swift_release();
    uint64_t v2 = qword_1EBE59358;
  }
  *(void *)((char *)v0 + v2) = 0;
  swift_release();
  uint64_t v6 = (void *)((char *)v0 + qword_1EBE59350);
  swift_beginAccess();
  uint64_t v7 = *v6;
  dispatch_time_t v8 = v1[208];
  dispatch_time_t v9 = v1[209];
  dispatch_time_t v10 = v1[210];
  dispatch_time_t v11 = v1[211];
  dispatch_time_t v12 = v1[212];
  dispatch_time_t v13 = v1[213];
  dispatch_time_t v14 = v1[214];
  dispatch_time_t v15 = v1[215];
  swift_bridgeObjectRetain();
  v29[0] = v8;
  v29[1] = v9;
  void v29[2] = v10;
  v29[3] = v11;
  v29[4] = v12;
  v29[5] = v13;
  dispatch_time_t v27 = v15;
  dispatch_time_t v28 = v13;
  v29[6] = v14;
  v29[7] = v15;
  type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
  uint64_t v16 = sub_1DA98BF68();
  LOBYTE(v15) = MEMORY[0x1E01770C0](v7, v8, v16, v12);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    sub_1DA82C144(v29);
    dispatch_time_t v18 = v29[0];
    type metadata accessor for CHDMonotonicTimer();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = 0;
    type metadata accessor for UnfairLock();
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = (_DWORD *)swift_slowAlloc();
    *uint64_t v21 = 0;
    *(void *)(v20 + 16) = v21;
    *(void *)(v19 + 24) = v20;
    *(unsigned char *)(v19 + 32) = 0;
    *(void *)(v19 + 40) = v18;
    *(void *)(v19 + 48) = 0;
    *(void *)((char *)v0 + qword_1EBE59358) = v19;
    uint64_t result = swift_release();
    uint64_t v22 = *(void *)((char *)v0 + qword_1EBE59358);
    if (v22)
    {
      uint64_t v23 = swift_allocObject();
      swift_weakInit();
      unint64_t v24 = (void *)swift_allocObject();
      void v24[2] = v8;
      v24[3] = v9;
      v24[4] = v10;
      v24[5] = v11;
      v24[6] = v12;
      v24[7] = v28;
      v24[8] = v14;
      v24[9] = v27;
      v24[10] = v23;
      uint64_t v25 = *(void *)(v22 + 24);
      unint64_t v26 = *(os_unfair_lock_s **)(v25 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v26);
      sub_1DA8ED158(v22, (uint64_t)sub_1DA82DE7C, (uint64_t)v24);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v25 + 16));
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DA82CFA4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DA82A558();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA82CFFC(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, long long a9, uint64_t a10)
{
  uint64_t v38 = a8;
  int v36 = a6;
  int v37 = a7;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v33 = a1;
  long long v32 = a9;
  uint64_t v30 = a10;
  uint64_t v31 = a5;
  dispatch_time_t v12 = *(_OWORD **)v10;
  dispatch_time_t v13 = *(_OWORD **)v10;
  uint64_t v14 = sub_1DA989F38();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_time_t v18 = &v10[qword_1EBE6F230];
  *(void *)dispatch_time_t v18 = 0;
  *((void *)v18 + 1) = 0;
  *(void *)&v10[qword_1EBE59360] = 2000000000;
  uint64_t v19 = qword_1EBE59350;
  uint64_t v20 = *((void *)v12 + 208);
  uint64_t v21 = *((void *)v12 + 211);
  swift_retain();
  uint64_t v39 = v20;
  long long v28 = *(_OWORD *)((char *)v13 + 1672);
  long long v40 = v28;
  uint64_t v41 = v21;
  long long v29 = v13[106];
  long long v27 = v13[107];
  long long v42 = v29;
  long long v43 = v27;
  type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
  sub_1DA98BF68();
  swift_getTupleTypeMetadata2();
  sub_1DA98C2E8();
  *(void *)&v10[v19] = sub_1DA98BEC8();
  uint64_t v22 = qword_1EBE59358;
  *(void *)&v10[qword_1EBE59358] = 0;
  *(void *)&v10[qword_1EBE58C90] = 0;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v23(&v10[qword_1EBE58C98], a4, v14);
  *(void *)&v10[v22] = 0;
  swift_release();
  *(void *)&v10[qword_1EBE6F0D0] = 0x405E000000000000;
  *(void *)&v10[qword_1EBE59368] = 120000000000;
  swift_release();
  v23(v17, a4, v14);
  uint64_t v24 = v31;
  sub_1DA7A1A44(v31, (uint64_t)&v39);
  uint64_t v25 = sub_1DA7BE790(v33, v34, v35, (uint64_t)v17, (uint64_t)&v39, v36, v37, v38, v32, v30);
  __swift_destroy_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a4, v14);
  return v25;
}

uint64_t sub_1DA82D304(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, double a9, long long a10, uint64_t a11)
{
  uint64_t v34 = a8;
  int v30 = a7;
  int v29 = a6;
  uint64_t v35 = a5;
  long long v32 = a2;
  uint64_t v33 = a3;
  uint64_t v31 = a1;
  uint64_t v14 = *(_OWORD **)v11;
  uint64_t v15 = *(_OWORD **)v11;
  uint64_t v16 = sub_1DA989F38();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = &v11[qword_1EBE6F230];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  *(void *)&v11[qword_1EBE59360] = 2000000000;
  uint64_t v21 = qword_1EBE59350;
  uint64_t v22 = *((void *)v14 + 208);
  uint64_t v23 = *((void *)v14 + 211);
  swift_retain();
  uint64_t v39 = v22;
  long long v37 = *(_OWORD *)((char *)v15 + 1672);
  long long v40 = v37;
  uint64_t v41 = v23;
  long long v38 = v15[106];
  long long v36 = v15[107];
  long long v42 = v38;
  long long v43 = v36;
  type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
  sub_1DA98BF68();
  swift_getTupleTypeMetadata2();
  sub_1DA98C2E8();
  *(void *)&v11[v21] = sub_1DA98BEC8();
  uint64_t v24 = qword_1EBE59358;
  *(void *)&v11[qword_1EBE59358] = 0;
  *(void *)&v11[qword_1EBE58C90] = 0;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v25(&v11[qword_1EBE58C98], a4, v16);
  *(void *)&v11[v24] = 0;
  uint64_t result = swift_release();
  *(double *)&v11[qword_1EBE6F0D0] = a9;
  if ((~*(void *)&a9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a9 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (a9 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (is_mul_ok((unint64_t)a9, 0x3B9ACA00uLL))
  {
    *(void *)&v11[qword_1EBE59368] = 1000000000 * (unint64_t)a9;
    swift_release();
    v25(v19, a4, v16);
    uint64_t v27 = v35;
    sub_1DA7A1A44(v35, (uint64_t)&v39);
    uint64_t v28 = sub_1DA7BE790(v31, v32, v33, (uint64_t)v19, (uint64_t)&v39, v29 & 1, v30 & 1, v34, a10, a11);
    __swift_destroy_boxed_opaque_existential_1(v27);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a4, v16);
    return v28;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DA82D674()
{
  uint64_t v1 = v0 + qword_1EBE6F230;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1DA82D6BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DA82D6D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DA82D674();
  if (v2) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  *a1 = v2;
  a1[1] = v4;

  return sub_1DA7AE2F8(v2);
}

uint64_t sub_1DA82D71C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (*a1) {
    uint64_t v2 = a1[1];
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1DA7AE2F8(*a1);
  return sub_1DA829028(v1, v2);
}

uint64_t sub_1DA82D768()
{
  return 64;
}

__n128 sub_1DA82D774(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DA82D788()
{
  uint64_t result = sub_1DA989F38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ExpiringStatefulStore()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for ExpiringStatefulStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ExpiringStatefulStore);
}

uint64_t dispatch thunk of ExpiringStatefulStore.expiringAssertionAcquisitionPolicy.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1792))();
}

uint64_t dispatch thunk of ExpiringStatefulStore.expiringAssertionAcquisitionPolicy.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1800))();
}

uint64_t dispatch thunk of ExpiringStatefulStore.expiringAssertionAcquisitionPolicy.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1808))();
}

uint64_t dispatch thunk of ExpiringStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:expirationDuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 1888))();
}

uint64_t sub_1DA82D928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 64);
}

unsigned char *sub_1DA82D930(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA82D9FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for ExpiringStatefulStore.ExpiringAssertionAcquisitionPolicy()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DA82DA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 72);
}

uint64_t sub_1DA82DA48(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t *sub_1DA82DAAC(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *int v3 = v12;
      }
      else
      {
        dispatch_time_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1DA82DD24(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  return a1;
}

uint64_t sub_1DA82DD60(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DA82DDA8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ExpiringStatefulStore.TimestampedAssertion()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DA82DE0C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA82DE44()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1DA82DE7C()
{
  return sub_1DA82CFA4();
}

uint64_t sub_1DA82DEB4()
{
  return sub_1DA82A618(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

ValueMetadata *type metadata accessor for AccessibilityOptionalIdentifier()
{
  return &type metadata for AccessibilityOptionalIdentifier;
}

ValueMetadata *type metadata accessor for AccessibilityOptionalValue()
{
  return &type metadata for AccessibilityOptionalValue;
}

uint64_t getEnumTagSinglePayload for DescriptorCollectionFilter(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DescriptorCollectionFilter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityOptionalLabel()
{
  return &type metadata for AccessibilityOptionalLabel;
}

uint64_t sub_1DA82DFB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA82DFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v20[1] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63708);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE635C0);
  MEMORY[0x1F4188790](v11);
  dispatch_time_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE634B0);
  double v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    long long v20[2] = a2;
    v20[3] = a3;
    sub_1DA82E99C(&qword_1EBE63700, &qword_1EBE63708);
    sub_1DA7DF7A0();
    sub_1DA98B0B8();
    sub_1DA7A1F58((uint64_t)v17, (uint64_t)v13, &qword_1EBE634B0);
    swift_storeEnumTagMultiPayload();
    sub_1DA82E914(&qword_1EBE634A8, &qword_1EBE634B0, &qword_1EBE63700, &qword_1EBE63708);
    sub_1DA98AA68();
    return sub_1DA7A1AE0((uint64_t)v17, &qword_1EBE634B0);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16);
    v19(v10, a1, v7, v15);
    ((void (*)(char *, char *, uint64_t))v19)(v13, v10, v7);
    swift_storeEnumTagMultiPayload();
    sub_1DA82E914(&qword_1EBE634A8, &qword_1EBE634B0, &qword_1EBE63700, &qword_1EBE63708);
    sub_1DA82E99C(&qword_1EBE63700, &qword_1EBE63708);
    sub_1DA98AA68();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1DA82E2B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA82DFD4(a1, *v2, v2[1], a2);
}

uint64_t sub_1DA82E2BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA82E2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v20[1] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63718);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE635C8);
  MEMORY[0x1F4188790](v11);
  dispatch_time_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE634C0);
  double v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    long long v20[2] = a2;
    v20[3] = a3;
    sub_1DA82E99C(&qword_1EBE63710, &qword_1EBE63718);
    sub_1DA7DF7A0();
    sub_1DA98B0C8();
    sub_1DA7A1F58((uint64_t)v17, (uint64_t)v13, &qword_1EBE634C0);
    swift_storeEnumTagMultiPayload();
    sub_1DA82E914(&qword_1EBE634B8, &qword_1EBE634C0, &qword_1EBE63710, &qword_1EBE63718);
    sub_1DA98AA68();
    return sub_1DA7A1AE0((uint64_t)v17, &qword_1EBE634C0);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16);
    v19(v10, a1, v7, v15);
    ((void (*)(char *, char *, uint64_t))v19)(v13, v10, v7);
    swift_storeEnumTagMultiPayload();
    sub_1DA82E914(&qword_1EBE634B8, &qword_1EBE634C0, &qword_1EBE63710, &qword_1EBE63718);
    sub_1DA82E99C(&qword_1EBE63710, &qword_1EBE63718);
    sub_1DA98AA68();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1DA82E5B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA82E2D8(a1, *v2, v2[1], a2);
}

uint64_t sub_1DA82E5C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA82E5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v18[1] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63728);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE635D0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE634D0);
  double v13 = MEMORY[0x1F4188790](v12);
  double v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_1DA82E99C(&qword_1EBE63720, &qword_1EBE63728);
    sub_1DA98B108();
    sub_1DA7A1F58((uint64_t)v15, (uint64_t)v11, &qword_1EBE634D0);
    swift_storeEnumTagMultiPayload();
    sub_1DA82E914(&qword_1EBE634C8, &qword_1EBE634D0, &qword_1EBE63720, &qword_1EBE63728);
    sub_1DA98AA68();
    return sub_1DA7A1AE0((uint64_t)v15, &qword_1EBE634D0);
  }
  else
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
    v17(v8, a1, v5, v13);
    ((void (*)(char *, char *, uint64_t))v17)(v11, v8, v5);
    swift_storeEnumTagMultiPayload();
    sub_1DA82E914(&qword_1EBE634C8, &qword_1EBE634D0, &qword_1EBE63720, &qword_1EBE63728);
    sub_1DA82E99C(&qword_1EBE63720, &qword_1EBE63728);
    sub_1DA98AA68();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1DA82E8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA82E5DC(a1, *(void *)(v2 + 8), a2);
}

unint64_t sub_1DA82E8BC()
{
  unint64_t result = qword_1EBE59B90;
  if (!qword_1EBE59B90)
  {
    sub_1DA98AD38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59B90);
  }
  return result;
}

uint64_t sub_1DA82E914(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_1DA82E99C(a3, a4);
    sub_1DA82E8BC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA82E99C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DA82E9F0()
{
  unint64_t result = qword_1EBE63658;
  if (!qword_1EBE63658)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63660);
    sub_1DA82E914(&qword_1EBE634C8, &qword_1EBE634D0, &qword_1EBE63720, &qword_1EBE63728);
    sub_1DA82E99C(&qword_1EBE63720, &qword_1EBE63728);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63658);
  }
  return result;
}

unint64_t sub_1DA82EAA8()
{
  unint64_t result = qword_1EBE63648;
  if (!qword_1EBE63648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63650);
    sub_1DA82E914(&qword_1EBE634B8, &qword_1EBE634C0, &qword_1EBE63710, &qword_1EBE63718);
    sub_1DA82E99C(&qword_1EBE63710, &qword_1EBE63718);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63648);
  }
  return result;
}

unint64_t sub_1DA82EB60()
{
  unint64_t result = qword_1EBE63638;
  if (!qword_1EBE63638)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63640);
    sub_1DA82E914(&qword_1EBE634A8, &qword_1EBE634B0, &qword_1EBE63700, &qword_1EBE63708);
    sub_1DA82E99C(&qword_1EBE63700, &qword_1EBE63708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63638);
  }
  return result;
}

uint64_t sub_1DA82EC1C()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](28);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (swift_weakLoadStrong())
  {
    uint64_t v2 = sub_1DA7BEF9C(v1);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      uint64_t v4 = v2;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = sub_1DA82F5EC(v4);
      swift_bridgeObjectRelease();
      return (uint64_t)v5;
    }
  }
  else
  {
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

uint64_t ChronoMetadataStore.PublicTokenStore.deinit()
{
  swift_weakDestroy();
  return v0;
}

uint64_t sub_1DA82EE60(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v8 = Strong;
  uint64_t v9 = *(void *)(Strong + 24);
  uint64_t v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  uint64_t v11 = *(void *)(v8 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  swift_release();
  if (!v11)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v12 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](51);
  uint64_t v23 = v12;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1DA79EBAC(v4, v3);
  unint64_t v15 = v14;
  char v17 = v16;
  sub_1DA8E40CC(v13, v14, v16);
  sub_1DA79EB2C(v13, v15, v17);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA79ED98(v5, v6);
  sub_1DA79ED98(v5, v6);
  uint64_t v18 = sub_1DA79EB98(v5, v6);
  unint64_t v20 = v19;
  LOBYTE(v15) = v21;
  sub_1DA8E40CC(v18, v19, v21);
  sub_1DA79EB2C(v18, v20, v15);
  sub_1DA79DA70(v5, v6);
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA82F194(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v7 = Strong;
  uint64_t v8 = *(void *)(Strong + 24);
  uint64_t v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  uint64_t v10 = *(void *)(v7 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  swift_release();
  swift_release();
  if (!v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v11 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](24);
  uint64_t v18 = v11;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1DA79EBAC(a1, a2);
  unint64_t v14 = v13;
  char v16 = v15;
  sub_1DA8E40CC(v12, v13, v15);
  sub_1DA79EB2C(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA82F400()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](77);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1DA82F5EC(uint64_t a1)
{
  uint64_t v35 = *(void *)(a1 + 16);
  if (v35)
  {
    uint64_t v34 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v1 = 0;
    uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v2 = *(void *)(v34 + 8 * v1);
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1DA98CA38();
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)(v2 + 16);
      if (v6)
      {
        uint64_t v7 = v3;
        uint64_t v36 = v1;
        uint64_t v8 = (unsigned __int8 *)(v2 + 64);
        uint64_t v9 = (unsigned __int8 *)(v2 + 64);
        uint64_t v10 = *(void *)(v2 + 16);
        while (1)
        {
          uint64_t v11 = *((void *)v9 - 2);
          unint64_t v12 = *((void *)v9 - 1);
          uint64_t v13 = *v9;
          BOOL v14 = *((void *)v9 - 4) == v7 && *((void *)v9 - 3) == v5;
          if (v14 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v9 += 40;
          if (!--v10)
          {
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v11, v12, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        switch(v13)
        {
          case 1:
            uint64_t v41 = &off_1F34D99D0;
            unint64_t v15 = MEMORY[0x1E4FBB3D0];
            goto LABEL_20;
          case 2:
            unint64_t v40 = MEMORY[0x1E4FBB1A0];
            uint64_t v41 = &off_1F34D99C8;
            *(void *)&long long v39 = v11;
            *((void *)&v39 + 1) = v12;
            swift_bridgeObjectRetain();
            break;
          case 3:
            unint64_t v40 = MEMORY[0x1E4F277C0];
            uint64_t v41 = &off_1F34D5038;
            *(void *)&long long v39 = v11;
            *((void *)&v39 + 1) = v12;
            sub_1DA79ED98(v11, v12);
            break;
          case 4:
            id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
            unint64_t v40 = sub_1DA82FC9C();
            uint64_t v41 = &off_1F34D9D00;
            *(void *)&long long v39 = v16;
            break;
          default:
            uint64_t v41 = &off_1F34D9D78;
            unint64_t v15 = MEMORY[0x1E4FBC1C8];
LABEL_20:
            unint64_t v40 = v15;
            *(void *)&long long v39 = v11;
            break;
        }
        sub_1DA7A19A4(&v39, (uint64_t)v38);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
        if ((swift_dynamicCast() & 1) == 0)
        {
          long long v37 = 0uLL;
          sub_1DA79EB2C(v11, v12, v13);
LABEL_4:
          swift_bridgeObjectRelease();
          uint64_t v1 = v36;
          goto LABEL_5;
        }
        sub_1DA79EB2C(v11, v12, v13);
        if (!*((void *)&v37 + 1)) {
          goto LABEL_4;
        }
        uint64_t v17 = sub_1DA98CA38();
        uint64_t v19 = v18;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = v20 + 1;
          if (__OFADD__(v20, 1))
          {
            __break(1u);
            JUMPOUT(0x1DA82FB54);
          }
          uint64_t v23 = *((void *)v8 - 2);
          unint64_t v22 = *((void *)v8 - 1);
          uint64_t v24 = *v8;
          BOOL v25 = *((void *)v8 - 4) == v17 && *((void *)v8 - 3) == v19;
          if (v25 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v8 += 40;
          ++v20;
          if (v21 == v6)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v23, v22, v24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v1 = v36;
        switch(v24)
        {
          case 1:
            uint64_t v41 = &off_1F34D99D0;
            unint64_t v26 = MEMORY[0x1E4FBB3D0];
            goto LABEL_38;
          case 2:
            unint64_t v40 = MEMORY[0x1E4FBB1A0];
            uint64_t v41 = &off_1F34D99C8;
            *(void *)&long long v39 = v23;
            *((void *)&v39 + 1) = v22;
            swift_bridgeObjectRetain();
            break;
          case 3:
            unint64_t v40 = MEMORY[0x1E4F277C0];
            uint64_t v41 = &off_1F34D5038;
            *(void *)&long long v39 = v23;
            *((void *)&v39 + 1) = v22;
            sub_1DA79ED98(v23, v22);
            break;
          case 4:
            id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
            unint64_t v40 = sub_1DA82FC9C();
            uint64_t v41 = &off_1F34D9D00;
            *(void *)&long long v39 = v27;
            break;
          default:
            uint64_t v41 = &off_1F34D9D78;
            unint64_t v26 = MEMORY[0x1E4FBC1C8];
LABEL_38:
            unint64_t v40 = v26;
            *(void *)&long long v39 = v23;
            break;
        }
        sub_1DA7A19A4(&v39, (uint64_t)v38);
        if (swift_dynamicCast())
        {
          sub_1DA79EB2C(v23, v22, v24);
          swift_bridgeObjectRelease();
          if (*((void *)&v37 + 1) >> 60 != 15)
          {
            if (swift_isUniquelyReferenced_nonNull_native()) {
              uint64_t v28 = v33;
            }
            else {
              uint64_t v28 = sub_1DA7CA774(0, v33[2] + 1, 1, v33);
            }
            unint64_t v30 = v28[2];
            unint64_t v29 = v28[3];
            if (v30 >= v29 >> 1) {
              uint64_t v28 = sub_1DA7CA774((void *)(v29 > 1), v30 + 1, 1, v28);
            }
            v28[2] = v30 + 1;
            uint64_t v33 = v28;
            uint64_t v31 = &v28[4 * v30];
            *((_OWORD *)v31 + 2) = v37;
            *((_OWORD *)v31 + 3) = v37;
            goto LABEL_5;
          }
        }
        else
        {
          long long v37 = xmmword_1DA993170;
          sub_1DA79EB2C(v23, v22, v24);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
LABEL_5:
      if (++v1 == v35)
      {
        swift_bridgeObjectRelease();
        return v33;
      }
    }
  }
  return (void *)MEMORY[0x1E4FBC860];
}

uint64_t type metadata accessor for ChronoMetadataStore.PublicTokenStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.PublicTokenStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.PublicTokenStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.PublicTokenStore.publicTokens()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutablePublicTokenStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.MutablePublicTokenStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutablePublicTokenStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePublicTokenStore.update(token:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePublicTokenStore.remove(environmentName:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

unint64_t sub_1DA82FC9C()
{
  unint64_t result = qword_1EBE58F20;
  if (!qword_1EBE58F20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE58F20);
  }
  return result;
}

uint64_t ColorScheme.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 == 2) {
    uint64_t v3 = (unsigned int *)MEMORY[0x1E4F3C5B8];
  }
  else {
    uint64_t v3 = (unsigned int *)MEMORY[0x1E4F3C5C0];
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_1DA98A1F8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a2, v4, v5);
}

id RemoteWidgetExtensionSession.extensionIdentity.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t RemoteWidgetExtensionSession.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_identifier;
  uint64_t v4 = sub_1DA989698();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RemoteWidgetExtensionSession.dataProtectionLevel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA82FE00(v1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_dataProtectionLevel, a1);
}

uint64_t sub_1DA82FE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA82FE68()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DA989698();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession____lazy_storage___loggingIdentifier);
  if (*(void *)(v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession____lazy_storage___loggingIdentifier + 8))
  {
    uint64_t v11 = *v10;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_identifier, v5, v7);
    uint64_t v12 = *(void *)(v0 + 16) + *MEMORY[0x1E4F58B80];
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v12, v1);
    swift_beginAccess();
    uint64_t v17 = v1;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DA98B778();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *uint64_t v10 = v11;
    v10[1] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v11;
}

uint64_t RemoteWidgetExtensionSession.__allocating_init(identifier:extensionIdentity:dataProtectionLevel:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  RemoteWidgetExtensionSession.init(identifier:extensionIdentity:dataProtectionLevel:)(a1, a2, a3);
  return v6;
}

uint64_t RemoteWidgetExtensionSession.init(identifier:extensionIdentity:dataProtectionLevel:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = v3;
  uint64_t v11 = OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_protectedDescriptors;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5F10);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 24) = 0;
  *(void *)(v12 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v7 + v11) = v12;
  uint64_t v13 = (void *)(v7 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession____lazy_storage___loggingIdentifier);
  void *v13 = 0;
  v13[1] = 0;
  if (objc_msgSend(a2, sel_isRemote))
  {
    uint64_t v14 = v7 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_identifier;
    uint64_t v5 = sub_1DA989698();
    uint64_t v4 = *(void *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v14, a1, v5);
    *(void *)(v7 + 16) = a2;
    sub_1DA82FE00(a3, v7 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_dataProtectionLevel);
    uint64_t v15 = qword_1EA8E5550;
    id v6 = a2;
    if (v15 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v16 = sub_1DA989F38();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EA8ED7D8);
  swift_retain_n();
  uint64_t v17 = sub_1DA989F18();
  os_log_type_t v18 = sub_1DA98C548();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = a3;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v25 = v20;
    *(_DWORD *)uint64_t v19 = 136446210;
    uint64_t v21 = sub_1DA82FE68();
    sub_1DA8C5E00(v21, v22, &v25);
    sub_1DA98C858();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v17, v18, "%{public}s Session initialized", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v20, -1, -1);
    MEMORY[0x1E0178DA0](v19, -1, -1);

    sub_1DA7A1AE0(v24, &qword_1EBE66AF0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v5);
  }
  else
  {
    swift_release_n();

    sub_1DA7A1AE0(a3, &qword_1EBE66AF0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v5);
  }
  return v7;
}

Swift::Void __swiftcall RemoteWidgetExtensionSession.setDescriptors(_:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_protectedDescriptors);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1DA830504((unint64_t *)(v3 + 16), v1, (unint64_t)a1._rawValue);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));

  swift_release();
}

uint64_t sub_1DA830504(unint64_t *a1, uint64_t a2, unint64_t a3)
{
  swift_bridgeObjectRelease();
  if (qword_1EA8E5550 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1DA989F38();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EA8ED7D8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v6 = sub_1DA989F18();
  os_log_type_t v7 = sub_1DA98C548();
  if (!os_log_type_enabled(v6, v7))
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
LABEL_18:
    *a1 = a3;
    return swift_bridgeObjectRetain();
  }
  os_log_type_t v32 = v7;
  uint64_t v8 = swift_slowAlloc();
  uint64_t v31 = swift_slowAlloc();
  uint64_t v35 = v31;
  *(_DWORD *)uint64_t v8 = 136446722;
  uint64_t v9 = sub_1DA82FE68();
  sub_1DA8C5E00(v9, v10, &v35);
  sub_1DA98C858();
  swift_release_n();
  swift_bridgeObjectRelease();
  uint64_t v33 = (uint8_t *)v8;
  *(_WORD *)(v8 + 12) = 2050;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DA98CBD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_1DA98C858();
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 22) = 2082;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (!v11)
  {
LABEL_17:
    uint64_t v26 = MEMORY[0x1E0177440](v12, MEMORY[0x1E4FBB1A0]);
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    sub_1DA8C5E00(v26, v28, &v35);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v6, v32, "%{public}s Updating descriptors: %{public}ld - %{public}s", v33, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v31, -1, -1);
    MEMORY[0x1E0178DA0](v33, -1, -1);

    goto LABEL_18;
  }
  uint64_t v34 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DA7F7A64(0, v11 & ~(v11 >> 63), 0);
  if ((v11 & 0x8000000000000000) == 0)
  {
    unint64_t v29 = v6;
    unint64_t v30 = a1;
    uint64_t v14 = 0;
    uint64_t v12 = v34;
    unint64_t v15 = a3 & 0xC000000000000001;
    unint64_t v16 = a3;
    do
    {
      if (v15) {
        id v17 = (id)MEMORY[0x1E0177C00](v14, a3);
      }
      else {
        id v17 = *(id *)(a3 + 8 * v14 + 32);
      }
      id v18 = v17;
      id v19 = objc_msgSend(v18, sel_kind);
      uint64_t v20 = sub_1DA98C038();
      uint64_t v22 = v21;

      unint64_t v24 = *(void *)(v34 + 16);
      unint64_t v23 = *(void *)(v34 + 24);
      if (v24 >= v23 >> 1) {
        sub_1DA7F7A64(v23 > 1, v24 + 1, 1);
      }
      ++v14;
      *(void *)(v34 + 16) = v24 + 1;
      uint64_t v25 = v34 + 16 * v24;
      *(void *)(v25 + 32) = v20;
      *(void *)(v25 + 40) = v22;
      a3 = v16;
    }
    while (v11 != v14);
    a1 = v30;
    id v6 = v29;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t RemoteWidgetExtensionSession.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_identifier;
  uint64_t v2 = sub_1DA989698();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_dataProtectionLevel, &qword_1EBE66AF0);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RemoteWidgetExtensionSession.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_identifier;
  uint64_t v2 = sub_1DA989698();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_dataProtectionLevel, &qword_1EBE66AF0);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t RemoteWidgetExtensionSession.getAppIntentsXPCListenerEndpoint(completion:)(uint64_t (*a1)(void, void, unint64_t, void))
{
  return a1(0, 0, 0xF000000000000000, 0);
}

uint64_t RemoteWidgetExtensionSession.getCurrentDescriptors(completion:)(void (*a1)(uint64_t, void))
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_protectedDescriptors);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1DA8314CC((uint64_t *)(v3 + 16), v1, &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  uint64_t v4 = v6;
  swift_release();
  a1(v4, 0);

  return swift_bridgeObjectRelease();
}

void RemoteWidgetExtensionSession.getAllCurrentDescriptors(completion:)(void (*a1)(id, void))
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_protectedDescriptors);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  sub_1DA8314CC((uint64_t *)(v4 + 16), v2, &v6);
  sub_1DA98BAB8();
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
  swift_release();
  id v5 = (id)sub_1DA98BA78();
  a1(v5, 0);
}

uint64_t sub_1DA830CD8(int a1, int a2, void *aBlock, void (*a4)(uint64_t, void *))
{
  id v5 = _Block_copy(aBlock);
  _Block_copy(v5);
  uint64_t v6 = swift_retain();
  a4(v6, v5);
  _Block_release(v5);
  _Block_release(v5);

  return swift_release();
}

uint64_t RemoteWidgetExtensionSession.handleURLSessionEvents(for:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3(0);
}

uint64_t RemoteWidgetExtensionSession.attachPreviewAgent(frameworkPath:endpoint:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void))
{
  return a4(0, 0);
}

uint64_t RemoteWidgetExtensionSession.getTimelines(requests:isPreview:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3(0);
}

Swift::Void __swiftcall RemoteWidgetExtensionSession.invalidate()()
{
  if (qword_1EA8E5550 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DA989F38();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA8ED7D8);
  swift_retain_n();
  uint64_t v1 = sub_1DA989F18();
  os_log_type_t v2 = sub_1DA98C548();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v7 = v4;
    *(_DWORD *)uint64_t v3 = 136446210;
    uint64_t v5 = sub_1DA82FE68();
    sub_1DA8C5E00(v5, v6, &v7);
    sub_1DA98C858();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v1, v2, "%{public}s Session invalidated", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v4, -1, -1);
    MEMORY[0x1E0178DA0](v3, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t RemoteWidgetExtensionSession.getDescriptors(completion:)(uint64_t (*a1)(void, void))
{
  return a1(MEMORY[0x1E4FBC860], 0);
}

uint64_t RemoteWidgetExtensionSession.getPlaceholders(environment:for:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3(0);
}

uint64_t RemoteWidgetExtensionSession.getTimeline(for:into:environment:isPreview:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(0);
}

uint64_t RemoteWidgetExtensionSession.getWidgetRelevances(request:completion:)(uint64_t a1, uint64_t (*a2)(void))
{
  return a2(0);
}

void sub_1DA8314CC(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a3;
  os_log_type_t v52 = a1;
  uint64_t v4 = sub_1DA98B9E8();
  uint64_t v5 = *(void **)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v53 = &v48[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E70);
  MEMORY[0x1F4188790](v7);
  uint64_t v60 = &v48[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v48[-v10];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v48[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v59 = &v48[-v16];
  MEMORY[0x1F4188790](v17);
  uint64_t v63 = &v48[-v18];
  double v20 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = &v48[-v21];
  uint64_t v54 = a2;
  uint64_t v23 = a2 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_dataProtectionLevel;
  uint64_t v24 = *MEMORY[0x1E4F46D20];
  unint64_t v55 = (void (*)(unsigned char *, uint64_t, uint64_t, double))v5[13];
  v55(&v48[-v21], v24, v4, v20);
  uint64_t v56 = (void (*)(unsigned char *, void, uint64_t, uint64_t))v5[7];
  v56(v22, 0, 1, v4);
  uint64_t v57 = v23;
  uint64_t v58 = v7;
  uint64_t v25 = (uint64_t)&v11[*(int *)(v7 + 48)];
  sub_1DA82FE00(v23, (uint64_t)v11);
  sub_1DA82FE00((uint64_t)v22, v25);
  int64_t v62 = v5;
  uint64_t v26 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v5[6];
  if (v26((uint64_t)v11, 1, v4) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v22, &qword_1EBE66AF0);
    if (v26(v25, 1, v4) == 1) {
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_1DA82FE00((uint64_t)v11, (uint64_t)v63);
  os_log_type_t v51 = v26;
  if (v26(v25, 1, v4) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v22, &qword_1EBE66AF0);
    ((void (*)(unsigned char *, uint64_t))v62[1])(v63, v4);
    uint64_t v26 = v51;
LABEL_6:
    sub_1DA7A1AE0((uint64_t)v11, &qword_1EBE58E70);
    goto LABEL_7;
  }
  uint64_t v31 = (void (*)(unsigned char *, uint64_t, uint64_t))v62[4];
  dispatch_time_t v50 = v14;
  os_log_type_t v32 = v53;
  v31(v53, v25, v4);
  sub_1DA80BAFC();
  int v49 = sub_1DA98BFF8();
  uint64_t v33 = (void (*)(unsigned char *, uint64_t))v62[1];
  uint64_t v34 = v32;
  uint64_t v14 = v50;
  v33(v34, v4);
  sub_1DA7A1AE0((uint64_t)v22, &qword_1EBE66AF0);
  v33(v63, v4);
  sub_1DA7A1AE0((uint64_t)v11, &qword_1EBE66AF0);
  uint64_t v26 = v51;
  if (v49) {
    goto LABEL_19;
  }
LABEL_7:
  uint64_t v27 = (uint64_t)v59;
  ((void (*)(unsigned char *, void, uint64_t))v55)(v59, *MEMORY[0x1E4F46D28], v4);
  v56((unsigned char *)v27, 0, 1, v4);
  uint64_t v11 = v60;
  uint64_t v28 = (uint64_t)&v60[*(int *)(v58 + 48)];
  sub_1DA82FE00(v57, (uint64_t)v60);
  sub_1DA82FE00(v27, v28);
  if (v26((uint64_t)v11, 1, v4) != 1)
  {
    sub_1DA82FE00((uint64_t)v11, (uint64_t)v14);
    if (v26(v28, 1, v4) != 1)
    {
      uint64_t v35 = v62;
      uint64_t v36 = v53;
      ((void (*)(unsigned char *, uint64_t, uint64_t))v62[4])(v53, v28, v4);
      sub_1DA80BAFC();
      char v37 = sub_1DA98BFF8();
      long long v38 = (void (*)(unsigned char *, uint64_t))v35[1];
      v38(v36, v4);
      sub_1DA7A1AE0(v27, &qword_1EBE66AF0);
      v38(v14, v4);
      sub_1DA7A1AE0((uint64_t)v11, &qword_1EBE66AF0);
      if (v37) {
        goto LABEL_19;
      }
LABEL_13:
      uint64_t v29 = *v52;
      if (*v52 < 0 || (v29 & 0x4000000000000000) != 0)
      {
        unint64_t v47 = swift_bridgeObjectRetain();
        uint64_t v30 = (uint64_t)sub_1DA8078D8(v47);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = v29 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
      }
      goto LABEL_25;
    }
    sub_1DA7A1AE0(v27, &qword_1EBE66AF0);
    ((void (*)(unsigned char *, uint64_t))v62[1])(v14, v4);
LABEL_12:
    sub_1DA7A1AE0((uint64_t)v11, &qword_1EBE58E70);
    goto LABEL_13;
  }
  sub_1DA7A1AE0(v27, &qword_1EBE66AF0);
  if (v26(v28, 1, v4) != 1) {
    goto LABEL_12;
  }
LABEL_9:
  sub_1DA7A1AE0((uint64_t)v11, &qword_1EBE66AF0);
LABEL_19:
  if (qword_1EA8E5550 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_1DA989F38();
  __swift_project_value_buffer(v39, (uint64_t)qword_1EA8ED7D8);
  uint64_t v40 = v54;
  swift_retain_n();
  uint64_t v41 = sub_1DA989F18();
  os_log_type_t v42 = sub_1DA98C518();
  if (os_log_type_enabled(v41, v42))
  {
    long long v43 = (uint8_t *)swift_slowAlloc();
    unint64_t v44 = (void *)swift_slowAlloc();
    *(_DWORD *)long long v43 = 138412290;
    int64_t v45 = *(void **)(v40 + 16);
    uint64_t v64 = v45;
    id v46 = v45;
    sub_1DA98C858();
    *unint64_t v44 = v45;
    swift_release_n();
    _os_log_impl(&dword_1DA795000, v41, v42, "Filtering %@: classA/B Widgets not supported", v43, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v44, -1, -1);
    MEMORY[0x1E0178DA0](v43, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v30 = MEMORY[0x1E4FBC860];
LABEL_25:
  *uint64_t v61 = v30;
}

uint64_t sub_1DA831C2C()
{
  return type metadata accessor for RemoteWidgetExtensionSession();
}

uint64_t type metadata accessor for RemoteWidgetExtensionSession()
{
  uint64_t result = qword_1EA8E5F20;
  if (!qword_1EA8E5F20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DA831C80()
{
  sub_1DA989698();
  if (v0 <= 0x3F)
  {
    sub_1DA831DA0();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for RemoteWidgetExtensionSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteWidgetExtensionSession);
}

uint64_t dispatch thunk of RemoteWidgetExtensionSession.__allocating_init(identifier:extensionIdentity:dataProtectionLevel:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_1DA831DA0()
{
  if (!qword_1EBE58E68)
  {
    sub_1DA98B9E8();
    unint64_t v0 = sub_1DA98C838();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBE58E68);
    }
  }
}

void sub_1DA831DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_protectedDescriptors);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  sub_1DA8314CC((uint64_t *)(v4 + 16), a1, &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
  swift_release();
  sub_1DA7A1A08(0, &qword_1EBE64D48);
  id v5 = (id)sub_1DA98C268();
  (*(void (**)(uint64_t, id, void))(a2 + 16))(a2, v5, 0);
  swift_bridgeObjectRelease();
}

void sub_1DA831EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_protectedDescriptors);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  sub_1DA8314CC((uint64_t *)(v4 + 16), a1, &v6);
  sub_1DA98BAB8();
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
  swift_release();
  id v5 = (id)sub_1DA98BA78();
  (*(void (**)(uint64_t, id, void))(a2 + 16))(a2, v5, 0);
}

BOOL static ReloadState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ReloadState.description.getter()
{
  uint64_t result = 0x64616F6C6572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E61656C63;
      break;
    case 2:
      uint64_t result = 0x64656C696166;
      break;
    case 3:
      uint64_t result = 0x64656B636F6C62;
      break;
    case 4:
      uint64_t result = 0x646573756170;
      break;
    default:
      return result;
  }
  return result;
}

BOOL ReloadState.isBlocked.getter()
{
  return *v0 == 3;
}

uint64_t ReloadState.hash(into:)()
{
  return sub_1DA98CF28();
}

uint64_t ReloadState.hashValue.getter()
{
  return sub_1DA98CF68();
}

unint64_t sub_1DA83212C()
{
  unint64_t result = qword_1EA8E5F30;
  if (!qword_1EA8E5F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E5F30);
  }
  return result;
}

uint64_t sub_1DA832180()
{
  uint64_t result = 0x64616F6C6572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E61656C63;
      break;
    case 2:
      uint64_t result = 0x64656C696166;
      break;
    case 3:
      uint64_t result = 0x64656B636F6C62;
      break;
    case 4:
      uint64_t result = 0x646573756170;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReloadState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA8322E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReloadState()
{
  return &type metadata for ReloadState;
}

uint64_t ExtensionManaging.extension(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA989AD8();
  uint64_t v9 = sub_1DA9899C8();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 40))(v9, v11, a2, a3);
  return swift_bridgeObjectRelease();
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA98C6F8();
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 24))(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ExtensionManaging.extensions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v4 = sub_1DA9899C8();
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(a3 + 48))(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t dispatch thunk of ExtensionManaging.extensionsPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ExtensionManaging.extensions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ExtensionManaging.extension(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ExtensionManaging.extensions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ExtensionManaging.extension(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ExtensionManaging.extensions(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of ExtensionManaging.addedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ExtensionManaging.updatedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ExtensionManaging.removedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_1DA83269C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = v3 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  swift_beginAccess();
  uint64_t v7 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v6, v7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_1DA832754()
{
  return sub_1DA98A0F8();
}

uint64_t PlaceholderEnvironmentProviderAdapter.__allocating_init(sourceEnvironmentProvider:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1DA7A1A44(a1, (uint64_t)v5);
  type metadata accessor for _PlaceholderEnvironmentProviderAdapter();
  uint64_t v3 = swift_allocObject();
  sub_1DA832A0C((uint64_t)v5);
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(void *)(v2 + 16) = v3;
  return v2;
}

uint64_t PlaceholderEnvironmentProviderAdapter.init(sourceEnvironmentProvider:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1DA7A1A44(a1, (uint64_t)v6);
  type metadata accessor for _PlaceholderEnvironmentProviderAdapter();
  uint64_t v4 = swift_allocObject();
  sub_1DA832A0C((uint64_t)v6);
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(void *)(v2 + 16) = v4;
  return v2;
}

uint64_t type metadata accessor for _PlaceholderEnvironmentProviderAdapter()
{
  uint64_t result = qword_1EBE59668;
  if (!qword_1EBE59668) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PlaceholderEnvironmentProviderAdapter.deinit()
{
  swift_release();
  return v0;
}

uint64_t PlaceholderEnvironmentProviderAdapter.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA832964@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA83269C(a1);
}

uint64_t sub_1DA832988()
{
  return sub_1DA98A0F8();
}

uint64_t sub_1DA832A0C(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__cancellable) = 0;
  sub_1DA7A1A44(a1, v1 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1DA98A008();
  type metadata accessor for UnfairLock();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (_DWORD *)swift_slowAlloc();
  *uint64_t v5 = 0;
  *(void *)(v4 + 16) = v5;
  *(void *)(v2 + 24) = v4;
  sub_1DA98A878();
  uint64_t v6 = swift_retain();
  sub_1DA95D4AC(v6, v2);
  uint64_t v7 = *(void *)(v2
                 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider
                 + 24);
  uint64_t v8 = *(void *)(v2
                 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider
                 + 32);
  __swift_project_boxed_opaque_existential_0((void *)(v2 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider), v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1DA833444;
  *(void *)(v10 + 24) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61D00);
  sub_1DA7A0410((unint64_t *)&qword_1EBE61CF8, &qword_1EBE61D00);
  uint64_t v11 = sub_1DA98A1A8();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  *(void *)(v2 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__cancellable) = v11;
  swift_release();
  return v2;
}

uint64_t type metadata accessor for PlaceholderEnvironmentProviderAdapter()
{
  return self;
}

uint64_t method lookup function for PlaceholderEnvironmentProviderAdapter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlaceholderEnvironmentProviderAdapter);
}

uint64_t dispatch thunk of PlaceholderEnvironmentProviderAdapter.environmentValues.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of PlaceholderEnvironmentProviderAdapter.environmentDidChange.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of PlaceholderEnvironmentProviderAdapter.__allocating_init(sourceEnvironmentProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1DA832C90()
{
  uint64_t v0 = sub_1DA98B648();
  uint64_t v44 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  long long v43 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  os_log_type_t v42 = (char *)&v41 - v3;
  uint64_t v4 = sub_1DA98A3F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = sub_1DA98A888();
  uint64_t v45 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v41 - v15;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    uint64_t v41 = v0;
    uint64_t v46 = v11;
    uint64_t v19 = (void *)(result
                   + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider);
    uint64_t v20 = v19[3];
    uint64_t v21 = v19[4];
    __swift_project_boxed_opaque_existential_0(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
    sub_1DA98A4F8();
    uint64_t v22 = (void (*)(uint64_t))MEMORY[0x1E4F3CD58];
    sub_1DA83348C((unint64_t *)&qword_1EBE62DE8, MEMORY[0x1E4F3CD58]);
    sub_1DA98C908();
    sub_1DA83348C(&qword_1EBE59620, v22);
    char v23 = sub_1DA98BFF8();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v7, v4);
    v24(v10, v4);
    if ((v23 & 1) == 0)
    {
      uint64_t v47 = MEMORY[0x1E4FBC860];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE630C8);
      sub_1DA7A0410(&qword_1EBE630D0, &qword_1EBE630C8);
      sub_1DA98C918();
      sub_1DA98A508();
    }
    uint64_t v25 = v45;
    uint64_t v26 = v46;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    v27(v13, v16, v46);
    uint64_t v28 = v42;
    sub_1DA98B618();
    uint64_t v29 = *(void *)(v18 + 24);
    uint64_t v30 = *(os_unfair_lock_s **)(v29 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v30);
    uint64_t v31 = v18 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
    swift_beginAccess();
    v27(v13, (char *)v31, v26);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));
    swift_release();
    swift_release();
    os_log_type_t v32 = v43;
    sub_1DA98B618();
    sub_1DA83348C(&qword_1EBE5A628, MEMORY[0x1E4F46A80]);
    uint64_t v33 = v41;
    LOBYTE(v29) = sub_1DA98BFF8();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v44 + 8);
    v34(v32, v33);
    v34(v28, v33);
    uint64_t v35 = v16;
    if (v29)
    {
      if (qword_1EBE5A1B8 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1DA989F38();
      __swift_project_value_buffer(v36, (uint64_t)qword_1EBE6F1E0);
      char v37 = sub_1DA989F18();
      os_log_type_t v38 = sub_1DA98C548();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl(&dword_1DA795000, v37, v38, "Placeholder environment ignoring redaction reason change.", v39, 2u);
        MEMORY[0x1E0178DA0](v39, -1, -1);
      }
      swift_release();
    }
    else
    {
      uint64_t v40 = swift_retain();
      sub_1DA95D4AC(v40, v18);
      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v35, v46);
  }
  return result;
}

uint64_t sub_1DA833280()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider;

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t sub_1DA8332C0()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__cancellable))
  {
    swift_retain();
    sub_1DA989FA8();
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  uint64_t v3 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v1 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA8333B8()
{
  return type metadata accessor for _PlaceholderEnvironmentProviderAdapter();
}

uint64_t sub_1DA8333C0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1DA83340C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA833444()
{
  return sub_1DA832C90();
}

uint64_t sub_1DA83344C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DA833484(uint64_t a1)
{
  return sub_1DA888C40(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1DA83348C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA8334D4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  os_log_type_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_1DA98C458();
  if (!v20) {
    return sub_1DA98C2E8();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_1DA98BE58();
  uint64_t v35 = sub_1DA98CB38();
  sub_1DA98CAD8();
  uint64_t v41 = v19;
  uint64_t result = sub_1DA98C448();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    char v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    char v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_1DA98C4B8();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_1DA98CB18();
      sub_1DA98C488();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

BOOL sub_1DA8338D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67048);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v21[-v6];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1DA989478();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DA836244(a1, (uint64_t)v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    uint64_t v15 = (uint64_t *)&unk_1EBE66AB0;
    uint64_t v16 = (uint64_t)v10;
LABEL_3:
    sub_1DA7A1AE0(v16, v15);
    return 0;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v14, v10, v11);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67040);
  sub_1DA7A0410((unint64_t *)&qword_1EBE67038, &qword_1EBE67040);
  sub_1DA989318();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
  sub_1DA7A1F58((uint64_t)v7, (uint64_t)v4, &qword_1EBE67048);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE67048);
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v16 = (uint64_t)v4;
    uint64_t v15 = &qword_1EBE67048;
    goto LABEL_3;
  }
  sub_1DA989918();
  sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE67048);
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  char v20 = v21[7];
  (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v4, v18);
  return (v20 & 1) != 0;
}

uint64_t BaseCacheManager.init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, long long *a3, long long *a4, long long *a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 160) = a7 ^ 1;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = a2;
  sub_1DA7A19A4(a3, v7 + 40);
  sub_1DA7A19A4(a4, v7 + 80);
  sub_1DA7A19A4(a5, v7 + 120);
  *(void *)(v7 + 16) = a6;
  return v7;
}

uint64_t BaseCacheManager.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  return v0;
}

uint64_t sub_1DA833D54@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7A1A44(v1 + 40, a1);
}

uint64_t sub_1DA833D74@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7A1A44(v1 + 80, a1);
}

uint64_t sub_1DA833D94@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1DA7A1A44(v1 + 120, a1);
}

uint64_t sub_1DA833DE0(long long *a1)
{
  uint64_t v3 = v1 + 120;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1DA7A19A4(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1DA833E3C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1DA833E90()
{
  return *(unsigned __int8 *)(v0 + 160);
}

id sub_1DA833E98()
{
  sub_1DA98C378();
  swift_getWitnessTable();
  sub_1DA98C1C8();
  sub_1DA98C2E8();
  id v0 = sub_1DA833F8C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

id sub_1DA833F8C()
{
  uint64_t v1 = sub_1DA98C378();
  uint64_t v2 = sub_1DA989478();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v4 = MEMORY[0x1E4FBC248];
  uint64_t v5 = MEMORY[0x1E4FBC278];
  uint64_t v7 = sub_1DA8334D4((void (*)(char *, char *))sub_1DA838AF8, v0, v1, v2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v6);
  uint64_t v9 = sub_1DA8334D4((void (*)(char *, char *))sub_1DA838AF8, v0, v1, v2, v4, WitnessTable, v5, v8);
  uint64_t v10 = *(void **)(v0 + 16);
  id v11 = objc_allocWithZone((Class)type metadata accessor for WidgetReaper());
  id v12 = v10;
  id v13 = sub_1DA83923C(v7, v9, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v13;
}

uint64_t sub_1DA8340F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1DA989478();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v35 - v12;
  if (*((unsigned char *)v4 + 160) == 1)
  {
    uint64_t result = sub_1DA836244(a2, (uint64_t)&v35 - v12);
    if (!v3)
    {
      uint64_t v36 = v8;
      sub_1DA989418();
      id v15 = (id)v4[2];
      uint64_t v16 = (void *)sub_1DA9893A8();
      *(void *)&v37[0] = 0;
      unsigned int v17 = objc_msgSend(v15, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v16, 1, 0, v37);

      uint64_t v18 = *(void **)&v37[0];
      if (v17)
      {
        id v19 = (id)v4[2];
        id v20 = v18;
        sub_1DA9517E0((uint64_t)v13);

        id v26 = (id)v4[2];
        uint64_t v27 = (void *)sub_1DA9893A8();
        uint64_t v28 = (void *)sub_1DA9893A8();
        *(void *)&v37[0] = 0;
        unsigned __int8 v29 = objc_msgSend(v26, sel_moveItemAtURL_toURL_error_, v27, v28, v37);

        uint64_t v30 = v36;
        if (v29)
        {
          uint64_t v31 = *(void (**)(char *, uint64_t))(v36 + 8);
          id v32 = *(id *)&v37[0];
          v31(v10, v7);
          return ((uint64_t (*)(char *, uint64_t))v31)(v13, v7);
        }
        else
        {
          id v33 = *(id *)&v37[0];
          sub_1DA9892D8();

          swift_willThrow();
          uint64_t v34 = *(void (**)(char *, uint64_t))(v30 + 8);
          v34(v10, v7);
          return ((uint64_t (*)(char *, uint64_t))v34)(v13, v7);
        }
      }
      else
      {
        id v24 = *(id *)&v37[0];
        sub_1DA9892D8();

        swift_willThrow();
        uint64_t v25 = *(void (**)(char *, uint64_t))(v36 + 8);
        v25(v10, v7);
        return ((uint64_t (*)(char *, uint64_t))v25)(v13, v7);
      }
    }
  }
  else
  {
    uint64_t v21 = *(void *)(v6 + 112);
    long long v22 = *(_OWORD *)(v6 + 96);
    v37[0] = *(_OWORD *)(v6 + 80);
    v37[1] = v22;
    uint64_t v38 = v21;
    type metadata accessor for BaseCacheManager.CacheManagementError();
    swift_getWitnessTable();
    swift_allocError();
    *char v23 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DA834488(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1DA989478();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((unsigned char *)v1 + 160) == 1)
  {
    uint64_t result = sub_1DA836244(a1, (uint64_t)v8);
    if (!v2)
    {
      id v10 = (id)v1[2];
      uint64_t v11 = (void *)sub_1DA9893A8();
      *(void *)&v19[0] = 0;
      unsigned __int8 v12 = objc_msgSend(v10, sel_removeItemAtURL_error_, v11, v19);

      if (v12)
      {
        id v13 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
        id v14 = *(id *)&v19[0];
        return v13(v8, v5);
      }
      else
      {
        id v18 = *(id *)&v19[0];
        sub_1DA9892D8();

        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
  }
  else
  {
    uint64_t v15 = *(void *)(v4 + 112);
    long long v16 = *(_OWORD *)(v4 + 96);
    v19[0] = *(_OWORD *)(v4 + 80);
    v19[1] = v16;
    uint64_t v20 = v15;
    type metadata accessor for BaseCacheManager.CacheManagementError();
    swift_getWitnessTable();
    swift_allocError();
    *unsigned int v17 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DA8346C4(uint64_t a1, uint64_t a2)
{
  uint64_t v66 = a2;
  uint64_t v5 = *v2;
  uint64_t v6 = *v2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5F38);
  uint64_t v63 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int64_t v62 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1DA989698();
  uint64_t v61 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  id v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v64 = (char *)v48 - v12;
  uint64_t v13 = *(void *)(v5 + 80);
  os_log_t v60 = *(os_log_t *)(v13 - 8);
  MEMORY[0x1F4188790](v14);
  long long v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  id v19 = (char *)v48 - v18;
  uint64_t v20 = sub_1DA989478();
  MEMORY[0x1F4188790](v20);
  id v24 = (char *)v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((unsigned char *)v2 + 160) == 1)
  {
    uint64_t v56 = v6;
    uint64_t v57 = v10;
    uint64_t v58 = v22;
    uint64_t v59 = v21;
    uint64_t v25 = v24;
    uint64_t result = sub_1DA836244(a1, (uint64_t)v24);
    if (!v3)
    {
      uint64_t v54 = v25;
      uint64_t v55 = v7;
      if (qword_1EBE62CA0 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1DA989F38();
      __swift_project_value_buffer(v27, (uint64_t)qword_1EBE6F318);
      os_log_t v28 = v60;
      Class isa = v60[2].isa;
      ((void (*)(char *, uint64_t, uint64_t))isa)(v19, a1, v13);
      uint64_t v29 = v61;
      uint64_t v30 = v64;
      os_log_type_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      uint64_t v53 = v61 + 16;
      v52(v64, v66, v65);
      uint64_t v31 = sub_1DA989F18();
      os_log_type_t v32 = sub_1DA98C548();
      int v51 = v32;
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        uint64_t v67 = v49;
        *(_DWORD *)uint64_t v33 = 136446466;
        v48[1] = v33 + 4;
        ((void (*)(char *, char *, uint64_t))isa)(v16, v19, v13);
        uint64_t v34 = (void (*)(char *, uint64_t))v28[1].isa;
        v34(v19, v13);
        os_log_t v60 = v31;
        uint64_t v35 = sub_1DA98CDD8();
        unint64_t v37 = v36;
        v34(v16, v13);
        uint64_t v70 = sub_1DA8C5E00(v35, v37, &v67);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 12) = 2082;
        sub_1DA83A324(&qword_1EA8E5950, MEMORY[0x1E4F27990]);
        uint64_t v39 = v64;
        uint64_t v38 = v65;
        uint64_t v40 = sub_1DA98CDD8();
        uint64_t v70 = sub_1DA8C5E00(v40, v41, &v67);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v39, v38);
        uint64_t v31 = v60;
        _os_log_impl(&dword_1DA795000, v60, (os_log_type_t)v51, "%{public}s marked with version %{public}s", (uint8_t *)v33, 0x16u);
        uint64_t v42 = v49;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v42, -1, -1);
        MEMORY[0x1E0178DA0](v33, -1, -1);
      }
      else
      {
        ((void (*)(char *, uint64_t))v28[1].isa)(v19, v13);
        uint64_t v38 = v65;
        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v65);
      }

      v52(v57, v66, v38);
      uint64_t v44 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
      sub_1DA83A324(&qword_1EA8E5980, MEMORY[0x1E4F27990]);
      sub_1DA83A324(&qword_1EBE5A068, v44);
      uint64_t v45 = v62;
      sub_1DA989908();
      sub_1DA7A0410(&qword_1EA8E5F40, &qword_1EA8E5F38);
      uint64_t v47 = v54;
      uint64_t v46 = v55;
      sub_1DA989328();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v46);
      return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v47, v59);
    }
  }
  else
  {
    uint64_t v67 = v13;
    long long v68 = *(_OWORD *)(v6 + 88);
    long long v69 = *(_OWORD *)(v6 + 104);
    type metadata accessor for BaseCacheManager.CacheManagementError();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v43 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DA834E1C(NSObject *a1)
{
  uint64_t v52 = *v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67040);
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v53 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v52 + 80);
  uint64_t v51 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = sub_1DA989478();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v56;
  uint64_t result = sub_1DA836244((uint64_t)a1, (uint64_t)v15);
  if (!v16)
  {
    os_log_t v46 = a1;
    uint64_t v47 = v11;
    uint64_t v45 = v8;
    uint64_t v18 = v51;
    uint64_t v49 = v15;
    uint64_t v50 = v13;
    uint64_t v56 = 0;
    uint64_t v48 = v12;
    if (qword_1EBE62CA0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1DA989F38();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EBE6F318);
    uint64_t v20 = v18;
    uint64_t v21 = *(void (**)(char *, os_log_t, uint64_t))(v18 + 16);
    uint64_t v22 = v47;
    v21(v47, v46, v5);
    uint64_t v23 = sub_1DA989F18();
    os_log_type_t v24 = sub_1DA98C548();
    int v25 = v24;
    BOOL v26 = os_log_type_enabled(v23, v24);
    uint64_t v27 = v50;
    if (v26)
    {
      os_log_t v46 = v23;
      uint64_t v28 = swift_slowAlloc();
      int v43 = v25;
      uint64_t v29 = (uint8_t *)v28;
      uint64_t v44 = swift_slowAlloc();
      uint64_t v58 = v44;
      *(_DWORD *)uint64_t v29 = 136446210;
      uint64_t v42 = v29 + 4;
      uint64_t v30 = v45;
      v21(v45, (os_log_t)v22, v5);
      uint64_t v31 = *(void (**)(char *, uint64_t))(v20 + 8);
      v31(v22, v5);
      uint64_t v32 = sub_1DA98CDD8();
      unint64_t v34 = v33;
      v31(v30, v5);
      uint64_t v57 = sub_1DA8C5E00(v32, v34, &v58);
      uint64_t v27 = v50;
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      os_log_t v35 = v46;
      _os_log_impl(&dword_1DA795000, v46, (os_log_type_t)v43, "%{public}s marked with having developer error", v29, 0xCu);
      uint64_t v36 = v44;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v36, -1, -1);
      MEMORY[0x1E0178DA0](v29, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v5);
    }
    uint64_t v38 = v53;
    uint64_t v37 = v54;
    uint64_t v39 = v48;
    LOBYTE(v58) = 1;
    sub_1DA989908();
    sub_1DA7A0410(&qword_1EBE5A8B0, &qword_1EBE67040);
    uint64_t v40 = v55;
    unint64_t v41 = v49;
    sub_1DA989328();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v41, v39);
  }
  return result;
}

uint64_t sub_1DA835320(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67040);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA989478();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA836244(a1, (uint64_t)v10);
  if (!v1)
  {
    sub_1DA7A0410((unint64_t *)&qword_1EBE67038, &qword_1EBE67040);
    sub_1DA989318();
    sub_1DA989918();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    char v11 = v14;
  }
  return v11 & 1;
}

uint64_t sub_1DA835540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5F38);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DA989478();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1DA836244(a1, (uint64_t)v11);
  if (!v2)
  {
    uint64_t v13 = v5;
    uint64_t v14 = v17;
    sub_1DA7A0410(&qword_1EA8E5F48, &qword_1EA8E5F38);
    sub_1DA989318();
    sub_1DA989918();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v15 = sub_1DA989698();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  }
  return result;
}

void sub_1DA8357A4(uint64_t a1)
{
  uint64_t v40 = *v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE67040);
  uint64_t v42 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v41 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v40 + 80);
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)v33 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DA989478();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((unsigned char *)v1 + 160) == 1)
  {
    uint64_t v39 = v3;
    sub_1DA836244(a1, (uint64_t)v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      sub_1DA7A1AE0((uint64_t)v14, (uint64_t *)&unk_1EBE66AB0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
      if (qword_1EBE62CA0 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1DA989F38();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EBE6F318);
      uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
      v38(v11, a1, v5);
      uint64_t v20 = sub_1DA989F18();
      os_log_type_t v21 = sub_1DA98C548();
      int v22 = v21;
      if (os_log_type_enabled(v20, v21))
      {
        os_log_t v37 = v20;
        uint64_t v23 = swift_slowAlloc();
        int v35 = v22;
        os_log_type_t v24 = (uint8_t *)v23;
        uint64_t v36 = swift_slowAlloc();
        uint64_t v45 = v36;
        *(_DWORD *)os_log_type_t v24 = 136446210;
        void v33[2] = v24 + 12;
        unint64_t v34 = v24;
        v33[1] = v24 + 4;
        v38(v8, (uint64_t)v11, v5);
        int v25 = *(void (**)(char *, uint64_t))(v43 + 8);
        v25(v11, v5);
        uint64_t v26 = sub_1DA98CDD8();
        unint64_t v28 = v27;
        v25(v8, v5);
        uint64_t v44 = sub_1DA8C5E00(v26, v28, &v45);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        os_log_t v29 = v37;
        uint64_t v30 = v34;
        _os_log_impl(&dword_1DA795000, v37, (os_log_type_t)v35, "%{public}s marked as requiring reload", v34, 0xCu);
        uint64_t v31 = v36;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v31, -1, -1);
        MEMORY[0x1E0178DA0](v30, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v5);
      }
      LOBYTE(v45) = 1;
      uint64_t v32 = v41;
      sub_1DA989908();
      sub_1DA7A0410(&qword_1EBE5A8B0, &qword_1EBE67040);
      sub_1DA989328();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v39);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
  }
}

id sub_1DA835D90(uint64_t a1)
{
  v12[4] = *(void *)v1;
  MEMORY[0x1F4188790](a1);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1DA989478();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA836244(a1, (uint64_t)v7);
  id v8 = *(id *)(v1 + 16);
  sub_1DA989448();
  uint64_t v9 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_fileExistsAtPath_, v9);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

uint64_t sub_1DA836244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  unint64_t v28 = (void *)*v2;
  uint64_t v4 = v28[11];
  uint64_t v5 = sub_1DA98C838();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v25 - v10;
  sub_1DA7A1A44((uint64_t)(v2 + 5), (uint64_t)v30);
  uint64_t v12 = v31;
  uint64_t v13 = v32;
  __swift_project_boxed_opaque_existential_0(v30, v31);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v27 = a1;
  v14(a1, v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    uint64_t v15 = v28;
    uint64_t v16 = v28[13];
    uint64_t v17 = v28[10];
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v17, v16);
    uint64_t v19 = v15[12];
    uint64_t v20 = v15[14];
    v30[0] = v17;
    v30[1] = v4;
    void v30[2] = v19;
    uint64_t v31 = v16;
    uint64_t v32 = v20;
    type metadata accessor for BaseCacheManager.CacheManagementError();
    swift_getWitnessTable();
    swift_allocError();
    *os_log_type_t v21 = v18;
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    sub_1DA7A1A44((uint64_t)(v2 + 10), (uint64_t)v30);
    uint64_t v23 = v31;
    uint64_t v24 = v32;
    __swift_project_boxed_opaque_existential_0(v30, v31);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 24))(v11, v23, v24);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
}

char *sub_1DA83656C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE64EF0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64EE8);
  uint64_t v23 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = sub_1DA989478();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA836244(a1, (uint64_t)v14);
  if (!v1)
  {
    uint64_t v18 = v7;
    uint64_t v19 = v12;
    uint64_t v20 = v11;
    sub_1DA7A0410(&qword_1EBE64EE0, &qword_1EBE64EE8);
    uint64_t v15 = v21;
    sub_1DA989318();
    uint64_t v17 = v23;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v5, 0, 1, v15);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v10, v5, v15);
    sub_1DA989918();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
    return (char *)v22;
  }
  return v10;
}

uint64_t sub_1DA83698C(id *a1, uint64_t a2)
{
  v112[5] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = type metadata accessor for WidgetEntryKey();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v95 = (uint64_t)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v96 = (uint64_t)&v94 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v97 = (uint64_t)&v94 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AA8);
  MEMORY[0x1F4188790](v10 - 8);
  char v107 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DA989098();
  uint64_t v13 = *(NSObject **)(v12 - 8);
  uint64_t v102 = v12;
  os_log_t v103 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v108 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1DA98B9E8();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v101 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DA989478();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v105 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v94 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v100 = (uint64_t)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v94 - v25;
  uint64_t v109 = v17;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v27((char *)&v94 - v25, 1, 1, v16);
  uint64_t v28 = a2;
  uint64_t v29 = v106;
  sub_1DA7EF438(a1, (uint64_t)v21);
  int64_t v104 = a1;
  if (v29)
  {
    uint64_t v30 = (uint64_t)v26;
    uint64_t v31 = v16;
    uint64_t v32 = v109;
    id v37 = v107;
    uint64_t v36 = v108;
    uint64_t v38 = (uint64_t)v104;
    uint64_t v39 = v105;
    if (*(unsigned char *)(a2 + 160) == 1)
    {
      uint64_t v109 = v31;
      uint64_t v106 = (char *)v30;
      v112[0] = v29;
      uint64_t v40 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
      uint64_t v41 = v102;
      int v42 = swift_dynamicCast();
      os_log_t v43 = v103;
      Class isa = v103[7].isa;
      if (v42)
      {
        ((void (*)(id, void, uint64_t, uint64_t))isa)(v37, 0, 1, v41);
        ((void (*)(char *, id, uint64_t))v43[4].isa)(v36, v37, v41);
        if (sub_1DA8382E0())
        {
          if (qword_1EA8E5578 != -1) {
            swift_once();
          }
          uint64_t v45 = sub_1DA989F38();
          __swift_project_value_buffer(v45, (uint64_t)qword_1EA8ED820);
          uint64_t v46 = v97;
          sub_1DA83AA68(v38, v97, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
          uint64_t v47 = sub_1DA989F18();
          os_log_type_t v48 = sub_1DA98C548();
          BOOL v49 = os_log_type_enabled(v47, v48);
          uint64_t v30 = (uint64_t)v106;
          if (v49)
          {
            uint64_t v50 = (uint8_t *)swift_slowAlloc();
            uint64_t v109 = swift_slowAlloc();
            v112[0] = (id)v109;
            char v107 = v29;
            *(_DWORD *)uint64_t v50 = 136446210;
            uint64_t v105 = (char *)(v50 + 4);
            uint64_t v51 = v96;
            sub_1DA83AA68(v46, v96, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
            sub_1DA83AAD0(v46, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
            uint64_t v52 = WidgetEntryKey.description.getter();
            unint64_t v54 = v53;
            sub_1DA83AAD0(v51, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
            uint64_t v110 = sub_1DA8C5E00(v52, v54, (uint64_t *)v112);
            sub_1DA98C858();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1DA795000, v47, v48, "Not removing item for key %{public}s because of keybag", v50, 0xCu);
            uint64_t v55 = v109;
            swift_arrayDestroy();
            MEMORY[0x1E0178DA0](v55, -1, -1);
            uint64_t v56 = v50;
            uint64_t v30 = (uint64_t)v106;
            MEMORY[0x1E0178DA0](v56, -1, -1);
          }
          else
          {
            sub_1DA83AAD0(v46, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
          }

          ((void (*)(char *, uint64_t))v103[1].isa)(v108, v41);
          goto LABEL_27;
        }
        ((void (*)(char *, uint64_t))v43[1].isa)(v36, v41);
      }
      else
      {
        ((void (*)(id, uint64_t, uint64_t, uint64_t))isa)(v37, 1, 1, v41);
        sub_1DA7A1AE0((uint64_t)v37, &qword_1EBE66AA8);
      }
      uint64_t v30 = (uint64_t)v106;
      uint64_t v62 = v100;
      sub_1DA7A1F58((uint64_t)v106, v100, (uint64_t *)&unk_1EBE66AB0);
      uint64_t v63 = v109;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v62, 1, v109) == 1)
      {
        sub_1DA7A1AE0(v62, (uint64_t *)&unk_1EBE66AB0);
      }
      else
      {
        uint64_t v64 = v39;
        uint64_t v65 = v38;
        char v107 = v29;
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v64, v62, v63);
        id v66 = *(id *)(a2 + 16);
        uint64_t v67 = (void *)sub_1DA9893A8();
        v112[0] = 0;
        unsigned __int8 v68 = objc_msgSend(v66, sel_removeItemAtURL_error_, v67, v112);

        if (v68)
        {
          uint64_t v69 = qword_1EBE62CA0;
          id v70 = v112[0];
          if (v69 != -1) {
            swift_once();
          }
          uint64_t v71 = sub_1DA989F38();
          __swift_project_value_buffer(v71, (uint64_t)qword_1EBE6F318);
          uint64_t v72 = v95;
          sub_1DA83AA68(v65, v95, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
          id v73 = v107;
          uint64_t v74 = v107;
          id v75 = v73;
          int64_t v76 = sub_1DA989F18();
          os_log_type_t v77 = sub_1DA98C548();
          if (os_log_type_enabled(v76, v77))
          {
            uint64_t v78 = swift_slowAlloc();
            int64_t v104 = (void *)swift_slowAlloc();
            uint64_t v108 = (char *)swift_slowAlloc();
            v112[0] = v108;
            *(_DWORD *)uint64_t v78 = 136446466;
            uint64_t v79 = v64;
            os_log_t v103 = v76;
            uint64_t v80 = v96;
            sub_1DA83AA68(v72, v96, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
            sub_1DA83AAD0(v72, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
            uint64_t v81 = WidgetEntryKey.description.getter();
            unint64_t v83 = v82;
            sub_1DA83AAD0(v80, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
            uint64_t v110 = sub_1DA8C5E00(v81, v83, (uint64_t *)v112);
            sub_1DA98C858();
            swift_bridgeObjectRelease();
            *(_WORD *)(v78 + 12) = 2112;
            long long v84 = v107;
            uint64_t v85 = _swift_stdlib_bridgeErrorToNSError();
            uint64_t v110 = v85;
            id v86 = v107;
            sub_1DA98C858();
            int64_t v87 = v104;
            *int64_t v104 = v85;
            uint64_t v30 = (uint64_t)v106;

            os_log_t v88 = v103;
            _os_log_impl(&dword_1DA795000, v103, v77, "Removing item for key %{public}s because  %@", (uint8_t *)v78, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
            swift_arrayDestroy();
            MEMORY[0x1E0178DA0](v87, -1, -1);
            uint64_t v89 = v108;
            swift_arrayDestroy();
            MEMORY[0x1E0178DA0](v89, -1, -1);
            MEMORY[0x1E0178DA0](v78, -1, -1);

            (*(void (**)(char *, uint64_t))(v32 + 8))(v79, v109);
          }
          else
          {
            sub_1DA83AAD0(v72, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);

            (*(void (**)(char *, uint64_t))(v32 + 8))(v64, v109);
            uint64_t v30 = (uint64_t)v106;
          }
        }
        else
        {
          id v90 = v112[0];
          uint64_t v91 = (void *)sub_1DA9892D8();

          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v64, v63);
        }
      }
    }
LABEL_27:
    swift_willThrow();
    sub_1DA7A1AE0(v30, (uint64_t *)&unk_1EBE66AB0);
    return v92 & 1;
  }
  sub_1DA7A1AE0((uint64_t)v26, (uint64_t *)&unk_1EBE66AB0);
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v26, v21, v16);
  uint64_t v106 = v26;
  v27(v26, 0, 1, v16);
  swift_beginAccess();
  sub_1DA7A1A44(a2 + 120, (uint64_t)v112);
  unint64_t v33 = (void (**)(void))v112[4];
  __swift_project_boxed_opaque_existential_0(v112, (uint64_t)v112[3]);
  id v34 = objc_msgSend(*a1, sel_extensionIdentity);
  int v35 = v101;
  v33[2]();
  uint64_t v57 = (uint64_t)v21;
  uint64_t v58 = v16;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
  if (*(unsigned char *)(v28 + 160))
  {
    id v59 = *(id *)(v28 + 16);
    sub_1DA7F1488(v57, v59);
  }
  uint64_t v60 = v57;
  sub_1DA7ED11C(&v111);
  uint64_t v61 = (uint64_t)v106;
  (*(void (**)(char *, uint64_t))(v98 + 8))(v35, v99);
  (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v60, v58);
  sub_1DA7A1AE0(v61, (uint64_t *)&unk_1EBE66AB0);
  char v92 = v111;
  return v92 & 1;
}

uint64_t sub_1DA837668(id *a1, uint64_t a2)
{
  v108[5] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = type metadata accessor for ControlEntryKey();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v92 = (uint64_t)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v93 = (uint64_t)&v92 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v94 = (uint64_t)&v92 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AA8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v100 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DA989098();
  uint64_t v13 = *(void **)(v12 - 8);
  uint64_t v102 = (void *)v12;
  os_log_t v103 = v13;
  MEMORY[0x1F4188790](v12);
  int64_t v104 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1DA98B9E8();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v99 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DA989478();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v101 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v92 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v98 = (uint64_t)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v92 - v26;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v17 + 56);
  v28((char *)&v92 - v26, 1, 1, v16, v25);
  uint64_t v29 = a1;
  uint64_t v106 = (id *)a2;
  uint64_t v30 = v105;
  sub_1DA7EF6E0(a1, (uint64_t)v21);
  uint64_t v97 = a1;
  if (v30)
  {
    uint64_t v31 = v17;
    uint64_t v32 = v16;
    uint64_t v38 = (uint64_t)v106;
    uint64_t v39 = (uint64_t)v27;
    uint64_t v41 = v103;
    uint64_t v40 = v104;
    if (*((unsigned char *)v106 + 160) != 1) {
      goto LABEL_27;
    }
    uint64_t v106 = (id *)v27;
    v108[0] = v30;
    int v42 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
    uint64_t v43 = (uint64_t)v100;
    uint64_t v44 = v102;
    int v45 = swift_dynamicCast();
    uint64_t v46 = (void (*)(uint64_t, uint64_t, uint64_t, void *))v41[7];
    if (v45)
    {
      v46(v43, 0, 1, v44);
      ((void (*)(char *, uint64_t, void *))v41[4])(v40, v43, v44);
      BOOL v47 = sub_1DA8382E0();
      os_log_type_t v48 = v44;
      BOOL v49 = v101;
      if (v47)
      {
        uint64_t v50 = (uint64_t)v97;
        uint64_t v39 = (uint64_t)v106;
        if (qword_1EA8E5578 != -1) {
          swift_once();
        }
        uint64_t v51 = sub_1DA989F38();
        __swift_project_value_buffer(v51, (uint64_t)qword_1EA8ED820);
        uint64_t v52 = v94;
        sub_1DA83AA68(v50, v94, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
        unint64_t v53 = sub_1DA989F18();
        os_log_type_t v54 = sub_1DA98C548();
        if (os_log_type_enabled(v53, v54))
        {
          uint64_t v55 = (uint8_t *)swift_slowAlloc();
          uint64_t v101 = (char *)swift_slowAlloc();
          v108[0] = v101;
          uint64_t v105 = v30;
          *(_DWORD *)uint64_t v55 = 136446210;
          uint64_t v100 = (char *)(v55 + 4);
          uint64_t v56 = v93;
          sub_1DA83AA68(v52, v93, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
          sub_1DA83AAD0(v52, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
          uint64_t v57 = ControlEntryKey.description.getter();
          uint64_t v58 = v41;
          unint64_t v60 = v59;
          sub_1DA83AAD0(v56, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
          uint64_t v107 = sub_1DA8C5E00(v57, v60, (uint64_t *)v108);
          sub_1DA98C858();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DA795000, v53, v54, "Not removing item for key %{public}s because of keybag", v55, 0xCu);
          uint64_t v61 = v101;
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v61, -1, -1);
          uint64_t v39 = (uint64_t)v106;
          MEMORY[0x1E0178DA0](v55, -1, -1);

          ((void (*)(char *, void *))v58[1])(v104, v102);
        }
        else
        {
          sub_1DA83AAD0(v52, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);

          ((void (*)(char *, void *))v41[1])(v104, v102);
        }
        goto LABEL_27;
      }
      uint64_t v62 = (char *)v32;
      uint64_t v63 = v31;
      ((void (*)(char *, void *))v41[1])(v40, v48);
    }
    else
    {
      v46(v43, 1, 1, v44);
      sub_1DA7A1AE0(v43, &qword_1EBE66AA8);
      uint64_t v62 = (char *)v32;
      uint64_t v63 = v31;
      BOOL v49 = v101;
    }
    uint64_t v67 = v98;
    sub_1DA7A1F58((uint64_t)v106, v98, (uint64_t *)&unk_1EBE66AB0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v63 + 48))(v67, 1, v62) == 1)
    {
      sub_1DA7A1AE0(v67, (uint64_t *)&unk_1EBE66AB0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, char *))(v63 + 32))(v49, v67, v62);
      id v68 = *(id *)(v38 + 16);
      uint64_t v69 = (void *)sub_1DA9893A8();
      v108[0] = 0;
      unsigned __int8 v70 = objc_msgSend(v68, sel_removeItemAtURL_error_, v69, v108);

      if (v70)
      {
        uint64_t v105 = (void (**)(char *, char *))v63;
        uint64_t v71 = qword_1EBE62CA0;
        id v72 = v108[0];
        if (v71 != -1) {
          swift_once();
        }
        uint64_t v73 = sub_1DA989F38();
        __swift_project_value_buffer(v73, (uint64_t)qword_1EBE6F318);
        uint64_t v74 = v92;
        sub_1DA83AA68((uint64_t)v97, v92, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
        id v75 = v30;
        int64_t v76 = v30;
        os_log_type_t v77 = sub_1DA989F18();
        os_log_type_t v78 = sub_1DA98C548();
        if (os_log_type_enabled(v77, v78))
        {
          uint64_t v79 = swift_slowAlloc();
          uint64_t v80 = swift_slowAlloc();
          int64_t v104 = v62;
          uint64_t v102 = (void *)v80;
          os_log_t v103 = (void *)swift_slowAlloc();
          v108[0] = v103;
          *(_DWORD *)uint64_t v79 = 136446466;
          uint64_t v81 = v93;
          sub_1DA83AA68(v74, v93, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
          sub_1DA83AAD0(v74, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
          uint64_t v82 = ControlEntryKey.description.getter();
          unint64_t v84 = v83;
          sub_1DA83AAD0(v81, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);
          uint64_t v107 = sub_1DA8C5E00(v82, v84, (uint64_t *)v108);
          sub_1DA98C858();
          swift_bridgeObjectRelease();
          *(_WORD *)(v79 + 12) = 2112;
          uint64_t v85 = v30;
          uint64_t v86 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v107 = v86;
          sub_1DA98C858();
          int64_t v87 = v102;
          *uint64_t v102 = v86;
          uint64_t v39 = (uint64_t)v106;

          _os_log_impl(&dword_1DA795000, v77, v78, "Removing item for key %{public}s because  %@", (uint8_t *)v79, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v87, -1, -1);
          os_log_t v88 = v103;
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v88, -1, -1);
          MEMORY[0x1E0178DA0](v79, -1, -1);

          v105[1](v101, v104);
LABEL_27:
          swift_willThrow();
          uint64_t v66 = v39;
          goto LABEL_28;
        }
        sub_1DA83AAD0(v74, (uint64_t (*)(void))type metadata accessor for ControlEntryKey);

        v105[1](v101, v62);
      }
      else
      {
        id v89 = v108[0];
        id v90 = (void *)sub_1DA9892D8();

        swift_willThrow();
        (*(void (**)(char *, char *))(v63 + 8))(v49, v62);
      }
    }
    uint64_t v39 = (uint64_t)v106;
    goto LABEL_27;
  }
  sub_1DA7A1AE0((uint64_t)v27, (uint64_t *)&unk_1EBE66AB0);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v27, v21, v16);
  uint64_t v105 = (void (**)(char *, char *))v17;
  unint64_t v33 = v27;
  ((void (*)(char *, void, uint64_t, uint64_t))v28)(v27, 0, 1, v16);
  uint64_t v34 = (uint64_t)(v106 + 15);
  swift_beginAccess();
  sub_1DA7A1A44(v34, (uint64_t)v108);
  int v35 = (void (**)(void))v108[4];
  __swift_project_boxed_opaque_existential_0(v108, (uint64_t)v108[3]);
  id v36 = objc_msgSend(*v29, sel_extensionIdentity);
  id v37 = v99;
  v35[2]();
  uint64_t v64 = v105;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
  if ((_BYTE)v106[20])
  {
    id v65 = v106[2];
    sub_1DA7F1488((uint64_t)v21, v65);
  }
  (*(void (**)(char *, uint64_t))(v95 + 8))(v37, v96);
  v64[1](v21, (char *)v16);
  uint64_t v66 = (uint64_t)v33;
LABEL_28:
  sub_1DA7A1AE0(v66, (uint64_t *)&unk_1EBE66AB0);
  return 1;
}

BOOL sub_1DA8382E0()
{
  uint64_t v20 = sub_1DA989098();
  uint64_t v0 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DA989078();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v19 - v8;
  v19[0] = sub_1DA83A324(&qword_1EBE61C88, MEMORY[0x1E4F26C20]);
  sub_1DA989298();
  sub_1DA989008();
  sub_1DA83A324(&qword_1EBE61C80, MEMORY[0x1E4F26C08]);
  sub_1DA98C248();
  sub_1DA98C248();
  uint64_t v11 = v22;
  uint64_t v10 = v23;
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, v3);
  v12(v9, v3);
  uint64_t v21 = v0;
  uint64_t v13 = *(void (**)(char *, void, uint64_t))(v0 + 16);
  uint64_t v14 = v2;
  uint64_t v15 = v2;
  uint64_t v16 = v20;
  v13(v15, v19[1], v20);
  if (v10 == v11)
  {
    BOOL v17 = 1;
  }
  else
  {
    sub_1DA989298();
    sub_1DA989018();
    sub_1DA98C248();
    sub_1DA98C248();
    BOOL v17 = v23 == v22;
    v12(v7, v3);
    v12(v9, v3);
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v16);
  return v17;
}

unint64_t static FileAttributeNames.requiresReloadExtendedAttributeName.getter()
{
  return 0xD000000000000021;
}

unint64_t static FileAttributeNames.version.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static FileAttributeNames.developerError.getter()
{
  return 0xD000000000000021;
}

unint64_t static FileAttributeNames.sha256Hash.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static FileAttributeNames.buildVersion.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t FileAttributeNames.deinit()
{
  return v0;
}

uint64_t FileAttributeNames.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t BaseCacheManager.__allocating_init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, long long *a3, long long *a4, long long *a5, uint64_t a6, char a7)
{
  uint64_t v14 = swift_allocObject();
  BaseCacheManager.init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t sub_1DA838718(uint64_t a1, uint64_t a2)
{
  sub_1DA7A1A44(a2 + 40, (uint64_t)v6);
  uint64_t v3 = v7;
  uint64_t v4 = v8;
  __swift_project_boxed_opaque_existential_0(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_1DA8387AC(uint64_t a1)
{
  return sub_1DA838718(a1, v1);
}

uint64_t sub_1DA8387C8(uint64_t a1, uint64_t a2)
{
  sub_1DA7A1A44(a2 + 80, (uint64_t)v6);
  uint64_t v3 = v7;
  uint64_t v4 = v8;
  __swift_project_boxed_opaque_existential_0(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

void sub_1DA83885C()
{
}

void sub_1DA8388A8()
{
}

void sub_1DA8388F4()
{
}

uint64_t BaseCacheManager.__deallocating_deinit()
{
  BaseCacheManager.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA83897C(uint64_t a1)
{
  return sub_1DA834488(a1);
}

uint64_t sub_1DA838998()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t sub_1DA8389C8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t sub_1DA838A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA836244(a1, a2);
}

uint64_t sub_1DA838A20(uint64_t a1)
{
  return sub_1DA835320(a1) & 1;
}

uint64_t sub_1DA838A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA835540(a1, a2);
}

char *sub_1DA838A54(uint64_t a1)
{
  return sub_1DA83656C(a1);
}

uint64_t sub_1DA838A6C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t sub_1DA838AAC(uint64_t a1, uint64_t a2)
{
  return sub_1DA8346C4(a1, a2);
}

uint64_t sub_1DA838AC8(NSObject *a1)
{
  return sub_1DA834E1C(a1);
}

uint64_t sub_1DA838AE0(uint64_t a1, uint64_t a2)
{
  return sub_1DA8340F8(a1, a2);
}

uint64_t sub_1DA838AF8(uint64_t a1)
{
  return sub_1DA8387C8(a1, v1);
}

uint64_t sub_1DA838B18(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1DA838BB8(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1DA838C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = sub_1DA989478();
  MEMORY[0x1F4188790](v10);
  id v36 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v35 - v13;
  v17.n128_f64[0] = MEMORY[0x1F4188790](v15);
  uint64_t v55 = (char *)&v35 - v18;
  uint64_t v56 = MEMORY[0x1E4FBC860];
  uint64_t v40 = *(void *)(a1 + 16);
  if (v40)
  {
    unint64_t v19 = 0;
    uint64_t v52 = v16 + 48;
    uint64_t v53 = v16 + 16;
    uint64_t v51 = (void (**)(char *, char *, uint64_t))(v16 + 32);
    uint64_t v38 = a1;
    uint64_t v39 = v16;
    uint64_t v46 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v54 = v16 + 56;
    unint64_t v35 = (v16 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v41 = a2;
    id v37 = v9;
    uint64_t v44 = v6;
    while (v19 < *(void *)(a1 + 16))
    {
      uint64_t v20 = v39;
      unint64_t v42 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      unint64_t v43 = v19;
      uint64_t v47 = *(void *)(v39 + 72);
      uint64_t v50 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v39 + 16);
      v50(v9, a1 + v42 + v47 * v19, v10, v17);
      uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
      v21(v9, 0, 1, v10);
      BOOL v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      if (v49(v9, 1, v10) == 1) {
        goto LABEL_24;
      }
      os_log_type_t v48 = *v51;
      v48(v55, v9, v10);
      uint64_t v22 = *(void *)(a2 + 16);
      if (v22)
      {
        uint64_t v23 = a2 + v42;
        swift_bridgeObjectRetain();
        while (1)
        {
          ((void (*)(char *, uint64_t, uint64_t))v50)(v6, v23, v10);
          v21(v6, 0, 1, v10);
          if (v49(v6, 1, v10) == 1) {
            break;
          }
          uint64_t v24 = ((uint64_t (*)(char *, char *, uint64_t))v48)(v14, v6, v10);
          double v25 = (void *)MEMORY[0x1E0178400](v24);
          uint64_t v26 = sub_1DA989378();
          uint64_t v27 = (void *)sub_1DA8590D4(v26);
          swift_bridgeObjectRelease();
          uint64_t v28 = sub_1DA989378();
          uint64_t v29 = sub_1DA8590D4(v28);
          swift_bridgeObjectRelease();
          if (v27[2] < *(void *)(v29 + 16))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*v46)(v14, v10);
          }
          else
          {
            uint64_t v30 = v45;
            char v31 = sub_1DA856264(v27, v29);
            uint64_t v45 = v30;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*v46)(v14, v10);
            if ((v31 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              v48(v36, v55, v10);
              uint64_t v32 = v56;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1DA7F7B10(0, *(void *)(v32 + 16) + 1, 1);
                uint64_t v32 = v56;
              }
              unint64_t v34 = *(void *)(v32 + 16);
              unint64_t v33 = *(void *)(v32 + 24);
              uint64_t v6 = v44;
              if (v34 >= v33 >> 1)
              {
                sub_1DA7F7B10(v33 > 1, v34 + 1, 1);
                uint64_t v32 = v56;
              }
              *(void *)(v32 + 16) = v34 + 1;
              v48((char *)(v32 + v42 + v34 * v47), v36, v10);
              uint64_t v56 = v32;
              unint64_t v9 = v37;
              a1 = v38;
              a2 = v41;
              goto LABEL_20;
            }
          }
          v23 += v47;
          --v22;
          uint64_t v6 = v44;
          if (!v22) {
            goto LABEL_18;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_18:
        v21(v6, 1, 1, v10);
      }
      a2 = v41;
      swift_bridgeObjectRelease();
      (*v46)(v55, v10);
      unint64_t v9 = v37;
      a1 = v38;
LABEL_20:
      unint64_t v19 = v43 + 1;
      if (v43 + 1 == v40) {
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
LABEL_23:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v21)(v9, 1, 1, v10, v17);
LABEL_24:
    swift_bridgeObjectRelease();
    sub_1DA7A1AE0((uint64_t)v9, (uint64_t *)&unk_1EBE66AB0);
  }
}

id sub_1DA83923C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = sub_1DA989478();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v83 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v80 = (char *)&v72 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v79 = (char *)&v72 - v13;
  MEMORY[0x1F4188790](v14);
  os_log_type_t v78 = (char *)&v72 - v15;
  uint64_t v16 = OBJC_IVAR____TtC9ChronoKit12WidgetReaper_objectWillChange;
  sub_1DA98A068();
  swift_allocObject();
  __n128 v17 = v3;
  *(void *)&v3[v16] = sub_1DA98A058();
  uint64_t v18 = &v17[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_cutoffDate];
  uint64_t v19 = sub_1DA989638();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(void *)&v17[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_fileManager] = a3;
  swift_bridgeObjectRetain();
  id v20 = a3;
  uint64_t v21 = sub_1DA881F78(a1);
  swift_bridgeObjectRelease();
  int64_t v22 = *(void *)(v21 + 16);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v81 = v7;
  uint64_t v84 = v8;
  uint64_t v73 = v17;
  if (v22)
  {
    uint64_t v72 = a2;
    uint64_t v86 = MEMORY[0x1E4FBC860];
    sub_1DA7F7B10(0, v22, 0);
    id result = (id)sub_1DA838B18(v21);
    int64_t v25 = (int64_t)result;
    int v27 = v26;
    char v29 = v28 & 1;
    uint64_t v76 = v21;
    uint64_t v77 = v21 + 56;
    uint64_t v82 = v8 + 32;
    uint64_t v74 = v8 + 8;
    uint64_t v75 = v8 + 16;
    uint64_t v30 = v79;
    while ((v25 & 0x8000000000000000) == 0 && v25 < 1 << *(unsigned char *)(v21 + 32))
    {
      if (((*(void *)(v77 + (((unint64_t)v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
        goto LABEL_29;
      }
      if (*(_DWORD *)(v21 + 36) != v27) {
        goto LABEL_30;
      }
      uint64_t v31 = *(void *)(v21 + 48);
      uint64_t v32 = v84;
      uint64_t v33 = *(void *)(v84 + 72);
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v30, v31 + v33 * v25, v7);
      unint64_t v34 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      unint64_t v35 = v80;
      v34(v80, v30, v7);
      sub_1DA9892F8();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v7);
      uint64_t v36 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA7F7B10(0, *(void *)(v36 + 16) + 1, 1);
        uint64_t v36 = v86;
      }
      unint64_t v38 = *(void *)(v36 + 16);
      unint64_t v37 = *(void *)(v36 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_1DA7F7B10(v37 > 1, v38 + 1, 1);
        uint64_t v36 = v86;
      }
      *(void *)(v36 + 16) = v38 + 1;
      uint64_t v7 = v81;
      v34((char *)(v36+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ v38 * v33), v83, v81);
      uint64_t v86 = v36;
      uint64_t v21 = v76;
      id result = (id)sub_1DA838BB8(v25, v27, v29 & 1, v76);
      int64_t v25 = (int64_t)result;
      int v27 = v39;
      char v29 = v40 & 1;
      if (!--v22)
      {
        sub_1DA83AA5C((uint64_t)result, v39, v40 & 1);
        swift_bridgeObjectRelease();
        uint64_t v23 = MEMORY[0x1E4FBC860];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = MEMORY[0x1E4FBC860];
LABEL_14:
  uint64_t v74 = v36;
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_1DA881F78(v41);
  swift_bridgeObjectRelease();
  int64_t v43 = *(void *)(v42 + 16);
  if (v43)
  {
    uint64_t v86 = v23;
    sub_1DA7F7B10(0, v43, 0);
    id result = (id)sub_1DA838B18(v42);
    int64_t v44 = (int64_t)result;
    int v46 = v45;
    int v48 = v47 & 1;
    uint64_t v82 = v42 + 56;
    uint64_t v75 = v84 + 8;
    uint64_t v76 = v84 + 16;
    uint64_t v77 = v42;
    BOOL v49 = v79;
    while ((v44 & 0x8000000000000000) == 0 && v44 < 1 << *(unsigned char *)(v42 + 32))
    {
      if (((*(void *)(v82 + (((unint64_t)v44 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v44) & 1) == 0) {
        goto LABEL_32;
      }
      if (*(_DWORD *)(v42 + 36) != v46) {
        goto LABEL_33;
      }
      LODWORD(v83) = v48;
      uint64_t v50 = *(void *)(v42 + 48);
      uint64_t v51 = v84;
      uint64_t v52 = *(void *)(v84 + 72);
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v49, v50 + v52 * v44, v7);
      uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
      uint64_t v54 = v80;
      v53(v80, v49, v7);
      sub_1DA9892F8();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v7);
      uint64_t v55 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA7F7B10(0, *(void *)(v55 + 16) + 1, 1);
        uint64_t v55 = v86;
      }
      unint64_t v57 = *(void *)(v55 + 16);
      unint64_t v56 = *(void *)(v55 + 24);
      if (v57 >= v56 >> 1)
      {
        sub_1DA7F7B10(v56 > 1, v57 + 1, 1);
        uint64_t v55 = v86;
      }
      *(void *)(v55 + 16) = v57 + 1;
      uint64_t v7 = v81;
      v53((char *)(v55+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ v57 * v52), v78, v81);
      uint64_t v86 = v55;
      uint64_t v42 = v77;
      id result = (id)sub_1DA838BB8(v44, v46, v83 & 1, v77);
      int64_t v44 = (int64_t)result;
      int v46 = v58;
      int v48 = v59 & 1;
      if (!--v43)
      {
        sub_1DA83AA5C((uint64_t)result, v58, v48);
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v55 = MEMORY[0x1E4FBC860];
LABEL_27:
  uint64_t v60 = v74;
  uint64_t v61 = swift_bridgeObjectRetain();
  uint64_t v62 = sub_1DA881F78(v61);
  swift_bridgeObjectRelease();
  uint64_t v63 = v73;
  uint64_t v64 = &v73[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove];
  *(void *)&v73[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove] = v62;
  uint64_t v65 = swift_bridgeObjectRetain();
  uint64_t v66 = sub_1DA881F78(v65);
  swift_bridgeObjectRelease();
  *(void *)&v63[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_urlsToProtect] = v66;
  swift_beginAccess();
  id v67 = objc_msgSend(self, sel_progressWithTotalUnitCount_, *(void *)(*(void *)v64 + 16));
  *(void *)&v63[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_progress] = v67;
  sub_1DA838C9C(v60, v55);
  uint64_t v69 = v68;
  swift_bridgeObjectRelease();
  uint64_t v70 = sub_1DA881F78(v69);
  swift_bridgeObjectRelease();
  *(void *)&v63[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemoveWithChildrenToKeep] = v70;

  uint64_t v71 = (objc_class *)type metadata accessor for WidgetReaper();
  v85.receiver = v63;
  v85.super_class = v71;
  return objc_msgSendSuper2(&v85, sel_init);
}

uint64_t type metadata accessor for BaseCacheManager.CacheManagementError()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DA83998C(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DA8399EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA833D94(a1);
}

uint64_t sub_1DA839A10(uint64_t a1)
{
  sub_1DA7A1A44(a1, (uint64_t)v2);
  return sub_1DA833DE0(v2);
}

uint64_t sub_1DA839A4C()
{
  return 40;
}

__n128 sub_1DA839A58(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t dispatch thunk of TimelineCacheManaged.cacheManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FileCacheReading.protectionLevelProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FileCacheReading.isDataPresent(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FileCacheReading.hasArchive(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FileCacheReading.content(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FileCacheReading.url(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of FileCacheReading.hasDeveloperError(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))() & 1;
}

uint64_t dispatch thunk of FileCacheReading.version(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FileCacheReading.sha256(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of FileCacheWriting.archiveFilePromise(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FileCacheWriting.markDataWithVersion(for:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FileCacheWriting.markDataAsRequiringReload(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FileCacheWriting.markDataAsHavingDeveloperError(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FileCacheWriting.ingestArchive(url:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of FileCacheManaging.reaper(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FileCacheManaging.reaper(for:protecting:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of FileCacheManaging.deleteArchive(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t type metadata accessor for FileAttributeNames()
{
  return self;
}

uint64_t method lookup function for FileAttributeNames(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FileAttributeNames);
}

uint64_t dispatch thunk of CacheManagerKey.init(baseURL:entryKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1DA839CDC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BaseCacheManager()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for BaseCacheManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BaseCacheManager);
}

uint64_t dispatch thunk of BaseCacheManager.protectionLevelProvider.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of BaseCacheManager.protectionLevelProvider.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of BaseCacheManager.protectionLevelProvider.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of BaseCacheManager.__allocating_init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of BaseCacheManager.reaper(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of BaseCacheManager.reaper(for:protecting:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of BaseCacheManager.archiveFilePromise(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of BaseCacheManager.ingestArchive(url:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of BaseCacheManager.deleteArchive(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of BaseCacheManager.markDataWithVersion(for:version:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of BaseCacheManager.markDataAsHavingDeveloperError(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of BaseCacheManager.hasDeveloperError(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))() & 1;
}

uint64_t dispatch thunk of BaseCacheManager.version(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of BaseCacheManager.markDataAsRequiringReload(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of BaseCacheManager.hasArchive(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of BaseCacheManager.url(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of BaseCacheManager.sha256(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of BaseCacheManager.isDataPresent(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of BaseCacheManager.content(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of BaseCacheManager.requiresReload(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t sub_1DA83A188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

void **sub_1DA83A190(void **a1, void **a2)
{
  long long v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **sub_1DA83A1C0(void **a1, void **a2)
{
  long long v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void **sub_1DA83A1F8(void **a1, void **a2)
{
  long long v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_1DA83A22C(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DA83A27C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

uint64_t sub_1DA83A2D0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1DA83A2E8(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *__n128 result = v2;
  return result;
}

uint64_t sub_1DA83A308()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DA83A324(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1DA83A36C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v81 = sub_1DA989478();
  uint64_t v7 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v79 = (char *)v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v77 = (char *)v70 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v76 = (char *)v70 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v75 = (char *)v70 - v14;
  uint64_t v15 = OBJC_IVAR____TtC9ChronoKit12WidgetReaper_objectWillChange;
  sub_1DA98A068();
  swift_allocObject();
  uint64_t v16 = v3;
  *(void *)&v3[v15] = sub_1DA98A058();
  __n128 v17 = &v16[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_cutoffDate];
  uint64_t v18 = sub_1DA989638();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(void *)&v16[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_fileManager] = a3;
  int64_t v19 = *(void *)(a1 + 16);
  uint64_t v74 = a2;
  uint64_t v80 = v7;
  v70[0] = v16;
  if (v19)
  {
    uint64_t v83 = MEMORY[0x1E4FBC860];
    id v20 = a3;
    swift_bridgeObjectRetain();
    sub_1DA7F7B10(0, v19, 0);
    id result = (id)sub_1DA838B18(a1);
    int64_t v22 = (int64_t)result;
    int v24 = v23;
    char v26 = v25 & 1;
    uint64_t v72 = a1;
    uint64_t v73 = a1 + 56;
    uint64_t v78 = v7 + 32;
    v70[1] = v7 + 8;
    uint64_t v71 = v7 + 16;
    uint64_t v27 = v7;
    char v28 = v76;
    while ((v22 & 0x8000000000000000) == 0 && v22 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(v73 + (((unint64_t)v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
        goto LABEL_28;
      }
      if (*(_DWORD *)(a1 + 36) != v24) {
        goto LABEL_29;
      }
      uint64_t v29 = *(void *)(a1 + 48);
      uint64_t v30 = *(void *)(v27 + 72);
      uint64_t v31 = v81;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v28, v29 + v30 * v22, v81);
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
      uint64_t v33 = v77;
      v32(v77, v28, v31);
      sub_1DA9892F8();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v33, v31);
      uint64_t v34 = v83;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA7F7B10(0, *(void *)(v34 + 16) + 1, 1);
        uint64_t v34 = v83;
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1DA7F7B10(v35 > 1, v36 + 1, 1);
        uint64_t v34 = v83;
      }
      *(void *)(v34 + 16) = v36 + 1;
      uint64_t v27 = v80;
      v32((char *)(v34+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ v36 * v30), v79, v81);
      uint64_t v83 = v34;
      a1 = v72;
      id result = (id)sub_1DA838BB8(v22, v24, v26 & 1, v72);
      int64_t v22 = (int64_t)result;
      int v24 = v37;
      char v26 = v38 & 1;
      if (!--v19)
      {
        uint64_t v71 = v34;
        sub_1DA83AA5C((uint64_t)result, v37, v38 & 1);
        swift_bridgeObjectRelease();
        a2 = v74;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
    id v39 = a3;
    uint64_t v71 = MEMORY[0x1E4FBC860];
LABEL_14:
    int64_t v40 = *(void *)(a2 + 16);
    uint64_t v41 = MEMORY[0x1E4FBC860];
    if (!v40)
    {
LABEL_26:
      uint64_t v58 = v71;
      uint64_t v59 = swift_bridgeObjectRetain();
      uint64_t v60 = sub_1DA881F78(v59);
      swift_bridgeObjectRelease();
      uint64_t v61 = (char *)v70[0];
      uint64_t v62 = v70[0] + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove;
      *(void *)(v70[0] + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove) = v60;
      uint64_t v63 = swift_bridgeObjectRetain();
      uint64_t v64 = sub_1DA881F78(v63);
      swift_bridgeObjectRelease();
      *(void *)&v61[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_urlsToProtect] = v64;
      swift_beginAccess();
      id v65 = objc_msgSend(self, sel_progressWithTotalUnitCount_, *(void *)(*(void *)v62 + 16));
      *(void *)&v61[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_progress] = v65;
      sub_1DA838C9C(v58, v41);
      uint64_t v67 = v66;
      swift_bridgeObjectRelease();
      uint64_t v68 = sub_1DA881F78(v67);
      swift_bridgeObjectRelease();
      *(void *)&v61[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemoveWithChildrenToKeep] = v68;

      uint64_t v69 = (objc_class *)type metadata accessor for WidgetReaper();
      v82.receiver = v61;
      v82.super_class = v69;
      return objc_msgSendSuper2(&v82, sel_init);
    }
    uint64_t v83 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DA7F7B10(0, v40, 0);
    id result = (id)sub_1DA838B18(a2);
    int64_t v42 = (int64_t)result;
    int v44 = v43;
    int v46 = v45 & 1;
    uint64_t v78 = a2 + 56;
    uint64_t v72 = v80 + 8;
    uint64_t v73 = v80 + 16;
    char v47 = v76;
    while ((v42 & 0x8000000000000000) == 0 && v42 < 1 << *(unsigned char *)(a2 + 32))
    {
      if (((*(void *)(v78 + (((unint64_t)v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v42) & 1) == 0) {
        goto LABEL_31;
      }
      if (*(_DWORD *)(a2 + 36) != v44) {
        goto LABEL_32;
      }
      LODWORD(v79) = v46;
      uint64_t v48 = *(void *)(a2 + 48);
      uint64_t v50 = v80;
      uint64_t v49 = v81;
      uint64_t v51 = *(void *)(v80 + 72);
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v47, v48 + v51 * v42, v81);
      uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
      uint64_t v53 = v77;
      v52(v77, v47, v49);
      sub_1DA9892F8();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v53, v49);
      uint64_t v41 = v83;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA7F7B10(0, *(void *)(v41 + 16) + 1, 1);
        uint64_t v41 = v83;
      }
      unint64_t v55 = *(void *)(v41 + 16);
      unint64_t v54 = *(void *)(v41 + 24);
      if (v55 >= v54 >> 1)
      {
        sub_1DA7F7B10(v54 > 1, v55 + 1, 1);
        uint64_t v41 = v83;
      }
      *(void *)(v41 + 16) = v55 + 1;
      v52((char *)(v41+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ v55 * v51), v75, v81);
      uint64_t v83 = v41;
      a2 = v74;
      id result = (id)sub_1DA838BB8(v42, v44, v79 & 1, v74);
      int64_t v42 = (int64_t)result;
      int v44 = v56;
      int v46 = v57 & 1;
      if (!--v40)
      {
        sub_1DA83AA5C((uint64_t)result, v56, v46);
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1DA83AA5C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA83AA68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA83AAD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t static CHSPlatform.current.getter()
{
  return MEMORY[0x1F4111760]();
}

id WidgetExtensionInfo.id.getter()
{
  return *v0;
}

void WidgetExtensionInfo.id.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*WidgetExtensionInfo.id.modify())()
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.version.modify())()
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.localizedDisplayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.localizedDisplayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.localizedDisplayName.modify())()
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.pluginUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 28);
  uint64_t v4 = sub_1DA989698();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WidgetExtensionInfo()
{
  uint64_t result = qword_1EBE5A420;
  if (!qword_1EBE5A420) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t WidgetExtensionInfo.pluginUUID.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 28);
  uint64_t v4 = sub_1DA989698();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExtensionInfo.pluginUUID.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.lastModifiedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 32);
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WidgetExtensionInfo.lastModifiedDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 32);
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExtensionInfo.lastModifiedDate.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.isInternal.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 36));
}

uint64_t WidgetExtensionInfo.isInternal.setter(char a1)
{
  uint64_t result = type metadata accessor for WidgetExtensionInfo();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.isInternal.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.bundleURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 40);
  uint64_t v4 = sub_1DA989478();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WidgetExtensionInfo.bundleURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 40);
  uint64_t v4 = sub_1DA989478();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExtensionInfo.bundleURL.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.dataContainerURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 44);
  uint64_t v4 = sub_1DA989478();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WidgetExtensionInfo.dataContainerURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 44);
  uint64_t v4 = sub_1DA989478();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExtensionInfo.dataContainerURL.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.systemDataContainerURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 48);
  uint64_t v4 = sub_1DA989478();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WidgetExtensionInfo.systemDataContainerURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 48);
  uint64_t v4 = sub_1DA989478();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExtensionInfo.systemDataContainerURL.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.requestedDataProtection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 52);

  return sub_1DA82FE00(v3, a1);
}

uint64_t WidgetExtensionInfo.requestedDataProtection.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 52);

  return sub_1DA83B424(a1, v3);
}

uint64_t sub_1DA83B424(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*WidgetExtensionInfo.requestedDataProtection.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.wantsLocation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 56));
}

uint64_t WidgetExtensionInfo.wantsLocation.setter(char a1)
{
  uint64_t result = type metadata accessor for WidgetExtensionInfo();
  *(unsigned char *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.wantsLocation.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.containerBundleURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 60);
  uint64_t v4 = sub_1DA989478();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WidgetExtensionInfo.containerBundleURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 60);
  uint64_t v4 = sub_1DA989478();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExtensionInfo.containerBundleURL.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.effectiveContainerBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.effectiveContainerBundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 64));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.effectiveContainerBundleIdentifier.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.localizedContainerDisplayName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.localizedContainerDisplayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 68));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.localizedContainerDisplayName.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.containerBundleVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.containerBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 72));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.containerBundleVersion.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.sdkVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.sdkVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 76));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.sdkVersion.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.platform.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 80));
}

uint64_t WidgetExtensionInfo.platform.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for WidgetExtensionInfo();
  *(void *)(v1 + *(int *)(result + 80)) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.platform.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.watchKitExtensionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.watchKitExtensionIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 84));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.watchKitExtensionIdentifier.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.pushEnvironment.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 88));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.pushEnvironment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 88));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.pushEnvironment.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.isDevelopmentExtension.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 92));
}

uint64_t WidgetExtensionInfo.isDevelopmentExtension.setter(char a1)
{
  uint64_t result = type metadata accessor for WidgetExtensionInfo();
  *(unsigned char *)(v1 + *(int *)(result + 92)) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.isDevelopmentExtension.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.availableLocalizations.getter()
{
  type metadata accessor for WidgetExtensionInfo();

  return swift_bridgeObjectRetain();
}

uint64_t WidgetExtensionInfo.availableLocalizations.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for WidgetExtensionInfo() + 96);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.availableLocalizations.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.allowsMixedLocalizations.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 100));
}

uint64_t WidgetExtensionInfo.allowsMixedLocalizations.setter(char a1)
{
  uint64_t result = type metadata accessor for WidgetExtensionInfo();
  *(unsigned char *)(v1 + *(int *)(result + 100)) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.allowsMixedLocalizations.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.nominatedContainingBundleIdentifiers.getter()
{
  type metadata accessor for WidgetExtensionInfo();

  return swift_bridgeObjectRetain();
}

uint64_t WidgetExtensionInfo.nominatedContainingBundleIdentifiers.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for WidgetExtensionInfo() + 104);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.nominatedContainingBundleIdentifiers.modify())(void, void, void, void)
{
  return CGSizeMake;
}

void *WidgetExtensionInfo.entitlements.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 108));
  id v2 = v1;
  return v1;
}

void WidgetExtensionInfo.entitlements.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for WidgetExtensionInfo() + 108);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*WidgetExtensionInfo.entitlements.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.bundleStub.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  uint64_t v5 = (char *)v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 40);
  uint64_t v6 = sub_1DA989478();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v3, v5, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v3, 0, 1, v6);
  id v8 = v4;
  swift_bridgeObjectRetain();
  return sub_1DA98B888();
}

void WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33)
{
  char v38 = (int *)type metadata accessor for WidgetExtensionInfo();
  id v39 = (char *)a9 + v38[13];
  uint64_t v58 = (uint64_t)v39;
  uint64_t v40 = sub_1DA98B9E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
  uint64_t v41 = (void *)((char *)a9 + v38[17]);
  *uint64_t v41 = 0;
  v41[1] = 0;
  int64_t v42 = (void *)((char *)a9 + v38[21]);
  *int64_t v42 = 0;
  v42[1] = 0;
  int v43 = (void *)((char *)a9 + v38[22]);
  *int v43 = 0;
  v43[1] = 0;
  uint64_t v44 = v38[27];
  *(void *)((char *)a9 + v44) = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  char v45 = (char *)a9 + v38[7];
  uint64_t v46 = sub_1DA989698();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v45, a6, v46);
  char v47 = (char *)a9 + v38[8];
  uint64_t v48 = sub_1DA989638();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(v47, a7, v48);
  *((unsigned char *)a9 + v38[9]) = a8;
  uint64_t v49 = (char *)a9 + v38[10];
  uint64_t v50 = sub_1DA989478();
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32);
  v51(v49, a10, v50);
  v51((char *)a9 + v38[11], a11, v50);
  v51((char *)a9 + v38[12], a12, v50);
  sub_1DA83B424(a13, v58);
  *((unsigned char *)a9 + v38[14]) = a14;
  v51((char *)a9 + v38[15], a15, v50);
  uint64_t v52 = (void *)((char *)a9 + v38[16]);
  void *v52 = a16;
  v52[1] = a17;
  swift_bridgeObjectRelease();
  *uint64_t v41 = a18;
  v41[1] = a19;
  uint64_t v53 = (void *)((char *)a9 + v38[18]);
  *uint64_t v53 = a20;
  v53[1] = a21;
  unint64_t v54 = (void *)((char *)a9 + v38[19]);
  *unint64_t v54 = a22;
  v54[1] = a23;
  *(void *)((char *)a9 + v38[20]) = a24;
  swift_bridgeObjectRelease();
  *int64_t v42 = a25;
  v42[1] = a26;
  swift_bridgeObjectRelease();
  *int v43 = a27;
  v43[1] = a28;
  *((unsigned char *)a9 + v38[23]) = a29;
  *(void *)((char *)a9 + v38[24]) = a30;
  *((unsigned char *)a9 + v38[25]) = a31;
  *(void *)((char *)a9 + v38[26]) = a32;

  *(void *)((char *)a9 + v44) = a33;
}

uint64_t WidgetExtensionInfo.matches(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for WidgetExtensionInfo();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v21 - v14;
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
  char v16 = sub_1DA98C7A8();
  sub_1DA83C698(v2, (uint64_t)v15);
  sub_1DA83C698(a1, (uint64_t)v12);
  if (v16)
  {
    if (*((void *)v15 + 1) == *((void *)v12 + 1) && *((void *)v15 + 2) == *((void *)v12 + 2))
    {
      sub_1DA83C6FC((uint64_t)v15);
      sub_1DA83C6FC((uint64_t)v12);
      sub_1DA83C698(v2, (uint64_t)v9);
      sub_1DA83C698(a1, (uint64_t)v6);
    }
    else
    {
      char v18 = sub_1DA98CE58();
      sub_1DA83C6FC((uint64_t)v15);
      sub_1DA83C6FC((uint64_t)v12);
      sub_1DA83C698(v2, (uint64_t)v9);
      sub_1DA83C698(a1, (uint64_t)v6);
      char v19 = 0;
      if ((v18 & 1) == 0) {
        goto LABEL_11;
      }
    }
    char v19 = sub_1DA9895E8();
  }
  else
  {
    sub_1DA83C6FC((uint64_t)v15);
    sub_1DA83C6FC((uint64_t)v12);
    sub_1DA83C698(v2, (uint64_t)v9);
    sub_1DA83C698(a1, (uint64_t)v6);
    char v19 = 0;
  }
LABEL_11:
  sub_1DA83C6FC((uint64_t)v6);
  sub_1DA83C6FC((uint64_t)v9);
  return v19 & 1;
}

uint64_t sub_1DA83C698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetExtensionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA83C6FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetExtensionInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t WidgetExtensionInfo.hash(into:)()
{
  id v1 = *v0;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  type metadata accessor for WidgetExtensionInfo();
  sub_1DA989638();
  sub_1DA842484(&qword_1EBE63390, MEMORY[0x1E4F27928]);
  return sub_1DA98BFB8();
}

void WidgetExtensionInfo.hashRecordVersion(into:)()
{
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v59);
  uint64_t v2 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v47 - v4;
  uint64_t v6 = sub_1DA98B8C8();
  uint64_t v58 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v12 = *v0;
  uint64_t v60 = v0;
  *(void *)&long long v61 = v12;
  uint64_t v13 = sub_1DA98C708();
  uint64_t v14 = sub_1DA842484(&qword_1EBE5A6B8, MEMORY[0x1E4F58B88]);
  uint64_t v15 = v62;
  sub_1DA989DD8();
  if (!v15)
  {
    id v51 = v12;
    uint64_t v52 = v14;
    uint64_t v53 = v13;
    unint64_t v54 = v11;
    unint64_t v55 = v8;
    uint64_t v56 = v5;
    uint64_t v57 = v6;
    uint64_t v62 = v2;
    char v16 = v60;
    long long v61 = *(_OWORD *)(v60 + 3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59680);
    sub_1DA840528(&qword_1EBE5A008, &qword_1EBE59680);
    sub_1DA989DD8();
    __n128 v17 = (int *)type metadata accessor for WidgetExtensionInfo();
    LOBYTE(v61) = *((unsigned char *)v16 + v17[9]);
    sub_1DA989DD8();
    char v18 = (char *)v16 + v17[10];
    uint64_t v19 = sub_1DA989478();
    uint64_t v20 = sub_1DA842484(&qword_1EBE5A060, MEMORY[0x1E4F276F0]);
    sub_1DA989DD8();
    sub_1DA989DD8();
    sub_1DA989DD8();
    uint64_t v21 = (char *)v16 + v17[13];
    uint64_t v49 = (void (*)(char *, char *, uint64_t))v20;
    uint64_t v50 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
    sub_1DA83D0D8();
    sub_1DA989DD8();
    LOBYTE(v61) = *((unsigned char *)v16 + v17[14]);
    sub_1DA989DD8();
    sub_1DA989DD8();
    int64_t v22 = (uint64_t *)((char *)v16 + v17[16]);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    *(void *)&long long v61 = v24;
    *((void *)&v61 + 1) = v23;
    sub_1DA989DD8();
    char v25 = v16;
    long long v61 = *(_OWORD *)((char *)v16 + v17[17]);
    sub_1DA989DD8();
    char v26 = (uint64_t *)((char *)v16 + v17[18]);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    *(void *)&long long v61 = v28;
    *((void *)&v61 + 1) = v27;
    sub_1DA989DD8();
    uint64_t v29 = (uint64_t *)((char *)v16 + v17[19]);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    *(void *)&long long v61 = v31;
    *((void *)&v61 + 1) = v30;
    sub_1DA989DD8();
    if (HIDWORD(*(unint64_t *)((char *)v16 + v17[20])))
    {
      sub_1DA98CBA8();
      __break(1u);
    }
    else
    {
      LODWORD(v61) = *(void **)((char *)v16 + v17[20]);
      sub_1DA989DD8();
      long long v61 = *(_OWORD *)((char *)v16 + v17[21]);
      sub_1DA989DD8();
      long long v61 = *(_OWORD *)((char *)v16 + v17[22]);
      sub_1DA989DD8();
      LOBYTE(v61) = *((unsigned char *)v16 + v17[23]);
      sub_1DA989DD8();
      *(void *)&long long v61 = *(void **)((char *)v16 + v17[24]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
      sub_1DA840528(&qword_1EBE5A660, &qword_1EBE62A40);
      sub_1DA989DD8();
      LOBYTE(v61) = *((unsigned char *)v16 + v17[25]);
      sub_1DA989DD8();
      *(void *)&long long v61 = *(void **)((char *)v16 + v17[26]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A650);
      sub_1DA83D17C(&qword_1EBE5A658, &qword_1EBE5A0C8);
      sub_1DA989DD8();
      uint64_t v32 = *(void **)((char *)v16 + v17[27]);
      if (v32)
      {
        sub_1DA7A1A08(0, &qword_1EBE5A6D0);
        id v33 = v32;
        sub_1DA989DE8();
      }
      uint64_t v34 = *(void *)(v19 - 8);
      uint64_t v35 = v34;
      unint64_t v36 = v56;
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      uint64_t v47 = v34 + 16;
      v49(v56, v18, v19);
      uint64_t v37 = *(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56);
      uint64_t v50 = (char *)(v35 + 56);
      uint64_t v48 = v37;
      v37(v36, 0, 1, v19);
      id v38 = v51;
      swift_bridgeObjectRetain();
      id v39 = v54;
      sub_1DA98B888();
      uint64_t v40 = (void *)sub_1DA98B898();
      uint64_t v41 = *(void (**)(char *, uint64_t))(v58 + 8);
      v58 += 8;
      v41(v39, v57);
      *(void *)&long long v61 = v40;
      sub_1DA989DD8();

      int64_t v42 = *v25;
      int v43 = v56;
      v49(v56, v18, v19);
      v48(v43, 0, 1, v19);
      id v44 = v42;
      swift_bridgeObjectRetain();
      char v45 = v55;
      sub_1DA98B888();
      uint64_t v46 = (uint64_t)v62;
      sub_1DA98B8A8();
      v41(v45, v57);
      sub_1DA83D1FC();
      sub_1DA989DD8();
      sub_1DA7A1AE0(v46, (uint64_t *)&unk_1EBE66AB0);
    }
  }
}