uint64_t destroy for SQLStatement()
{
  uint64_t vars8;

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s9ChronoKit12SQLStatementVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SQLStatement(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SQLStatement(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SQLStatement()
{
  return &type metadata for SQLStatement;
}

uint64_t sub_1DA8E44E0()
{
  return MEMORY[0x1E4FBB228];
}

unint64_t sub_1DA8E44F0()
{
  unint64_t result = qword_1EA8E6610;
  if (!qword_1EA8E6610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6610);
  }
  return result;
}

uint64_t sub_1DA8E4544()
{
  return MEMORY[0x1E4FBB230];
}

unint64_t sub_1DA8E4554()
{
  unint64_t result = qword_1EA8E6618;
  if (!qword_1EA8E6618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6618);
  }
  return result;
}

uint64_t sub_1DA8E45A8()
{
  return MEMORY[0x1E4FBB220];
}

unint64_t sub_1DA8E45B8()
{
  unint64_t result = qword_1EA8E6620;
  if (!qword_1EA8E6620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6620);
  }
  return result;
}

unint64_t sub_1DA8E4610()
{
  unint64_t result = qword_1EA8E6628;
  if (!qword_1EA8E6628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6628);
  }
  return result;
}

uint64_t destroy for SQLStatement.StringInterpolation()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s9ChronoKit12SQLStatementV19StringInterpolationVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SQLStatement.StringInterpolation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SQLStatement.StringInterpolation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLStatement.StringInterpolation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLStatement.StringInterpolation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLStatement.StringInterpolation()
{
  return &type metadata for SQLStatement.StringInterpolation;
}

uint64_t sub_1DA8E482C(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F490);
}

uint64_t sub_1DA8E4850(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F460);
}

uint64_t sub_1DA8E4874(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1DA989F38();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1DA989F28();
}

uint64_t _WidgetEntryDescriptorChangeObserver.__allocating_init(label:descriptorProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  _WidgetEntryDescriptorChangeObserver.init(label:descriptorProvider:)(a1, a2, a3);
  return v6;
}

void *_WidgetEntryDescriptorChangeObserver.init(label:descriptorProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v4[9] = 0;
  type metadata accessor for UnfairLock();
  uint64_t v8 = swift_allocObject();
  v9 = (_DWORD *)swift_slowAlloc();
  _DWORD *v9 = 0;
  *(void *)(v8 + 16) = v9;
  v4[10] = v8;
  sub_1DA7A1A44(a3, (uint64_t)(v4 + 4));
  v4[11] = objc_msgSend(self, sel_weakObjectsHashTable);
  v4[2] = a1;
  v4[3] = a2;
  sub_1DA7A1A44((uint64_t)(v4 + 4), (uint64_t)v14);
  uint64_t v10 = v15;
  uint64_t v11 = v16;
  __swift_project_boxed_opaque_existential_0(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63328);
  sub_1DA7A0410(&qword_1EBE63320, &qword_1EBE63328);
  uint64_t v12 = sub_1DA98A1A8();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  v4[9] = v12;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v4;
}

uint64_t sub_1DA8E4AEC()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t _WidgetEntryDescriptorChangeObserver.deinit()
{
  if (*(void *)(v0 + 72))
  {
    swift_retain();
    sub_1DA989FA8();
    swift_release();
  }
  *(void *)(v0 + 72) = 0;
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();

  return v0;
}

uint64_t _WidgetEntryDescriptorChangeObserver.__deallocating_deinit()
{
  if (*(void *)(v0 + 72))
  {
    swift_retain();
    sub_1DA989FA8();
    swift_release();
  }
  *(void *)(v0 + 72) = 0;
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA8E4C34()
{
  if (*(void *)(v0 + 72))
  {
    swift_retain();
    sub_1DA989FA8();
    swift_release();
  }
  *(void *)(v0 + 72) = 0;

  return swift_release();
}

void sub_1DA8E4C90(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 80);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1DA8E4E44(v2, a1, (SEL *)&selRef_addObject_, "[%{public}s] Registering for descriptor changes for widget: %s");
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key];
  sub_1DA7A1A44(v2 + 32, (uint64_t)v13);
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  __swift_project_boxed_opaque_existential_0(v13, v14);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 16);
    id v11 = v6;
    uint64_t v12 = (void *)WidgetDescriptorPredicate.evaluate(with:)(v10);

    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    if (v12)
    {
      sub_1DA8E5C40(v12, a1);
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
}

uint64_t sub_1DA8E4DC0(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA8E4E44(v1, a1, (SEL *)&selRef_removeObject_, "[%{public}s] Unregistering for descriptor changes for widget: %s");
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));

  return swift_release();
}

void sub_1DA8E4E44(uint64_t a1, void *a2, SEL *a3, char *a4)
{
  objc_msgSend(*(id *)(a1 + 88), *a3, a2);
  if (qword_1EBE64F00 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1DA989F38();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBE6F490);
  uint64_t v8 = a2;
  swift_retain();
  uint64_t v9 = sub_1DA989F18();
  os_log_type_t v10 = sub_1DA98C518();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)uint64_t v11 = 136446466;
    format = a4;
    uint64_t v12 = *(void *)(a1 + 16);
    unint64_t v13 = *(void *)(a1 + 24);
    swift_bridgeObjectRetain();
    sub_1DA8C5E00(v12, v13, &v20);
    sub_1DA98C858();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    id v14 = objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key], sel__loggingIdentifierWithoutMetrics);
    uint64_t v15 = sub_1DA98C038();
    unint64_t v17 = v16;

    sub_1DA8C5E00(v15, v17, &v20);
    sub_1DA98C858();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v9, v10, format, (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v19, -1, -1);
    MEMORY[0x1E0178DA0](v11, -1, -1);
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_1DA8E50AC(void *a1)
{
  sub_1DA7A1A44(v1 + 32, (uint64_t)v10);
  uint64_t v3 = v11;
  uint64_t v4 = v12;
  __swift_project_boxed_opaque_existential_0(v10, v11);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  if (v5)
  {
    uint64_t v6 = *(void *)(v5 + 16);
    id v7 = a1;
    uint64_t v8 = WidgetDescriptorPredicate.evaluate(with:)(v6);

    swift_release();
  }
  else
  {
    uint64_t v8 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v8;
}

uint64_t sub_1DA8E5168(unint64_t *a1)
{
  unint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = (void *)result;
    if (qword_1EBE64F00 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1DA989F38();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBE6F490);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v5 = sub_1DA989F18();
    os_log_type_t v6 = sub_1DA98C518();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = v15;
      *(_DWORD *)uint64_t v7 = 136446466;
      uint64_t v8 = v3[2];
      unint64_t v9 = v3[3];
      swift_bridgeObjectRetain();
      sub_1DA8C5E00(v8, v9, &v16);
      sub_1DA98C858();
      swift_release();
      uint64_t v10 = swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2048;
      MEMORY[0x1F4188790](v10);
      sub_1DA7A1A08(0, &qword_1EBE64D48);
      swift_getKeyPath();
      swift_retain();
      uint64_t v11 = swift_bridgeObjectRetain();
      unint64_t v12 = sub_1DA807F30(v11);
      swift_bridgeObjectRelease();
      swift_release_n();
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1DA98CBD8();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      swift_bridgeObjectRelease();
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_1DA795000, v5, v6, "[%{public}s] Descriptors did change: %ld", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v15, -1, -1);
      MEMORY[0x1E0178DA0](v7, -1, -1);
    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    uint64_t v13 = v3[10];
    id v14 = *(os_unfair_lock_s **)(v13 + 16);
    swift_retain();
    os_unfair_lock_lock(v14);
    sub_1DA8E54D8((uint64_t)v3, v1);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA8E54D0(unint64_t *a1)
{
  return sub_1DA8E5168(a1);
}

uint64_t sub_1DA8E54D8(uint64_t a1, unint64_t a2)
{
  uint64_t v65 = sub_1DA98A888();
  uint64_t v4 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v64 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = MEMORY[0x1F4188790](v6);
  v63 = (char *)&v60 - v8;
  id v9 = objc_msgSend(*(id *)(a1 + 88), sel_allObjects, v7);
  type metadata accessor for WidgetEntry(0);
  unint64_t v10 = sub_1DA98C288();

  if (v10 >> 62) {
    goto LABEL_45;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v11)
  {
    unint64_t v12 = 0;
    unint64_t v71 = v10 & 0xC000000000000001;
    a2 = *(void *)(a2 + 16);
    unint64_t v68 = v10 + 32;
    uint64_t v69 = v10 & 0xFFFFFFFFFFFFFF8;
    v62 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v61 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24);
    v60 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    uint64_t v66 = v11;
    unint64_t v67 = v10;
    unint64_t v72 = a2;
    while (1)
    {
      if (v71)
      {
        uint64_t v13 = (char *)MEMORY[0x1E0177C00](v12, v10);
      }
      else
      {
        if (v12 >= *(void *)(v69 + 16)) {
          goto LABEL_44;
        }
        uint64_t v13 = (char *)*(id *)(v68 + 8 * v12);
      }
      id v14 = v13;
      if (__OFADD__(v12++, 1)) {
        break;
      }
      v76 = (char *)*(id *)&v13[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key];
      id v16 = objc_msgSend(v76, sel_extensionIdentity);
      unint64_t v17 = v16;
      if (*(void *)(a2 + 16)
        && (v73 = v14, uint64_t v4 = v72, v18 = sub_1DA7FE920((uint64_t)v16), a2 = v72, v14 = v73, (v19 & 1) != 0))
      {
        a2 = *(void *)(*(void *)(v72 + 56) + 8 * v18);
        swift_bridgeObjectRetain();

        unint64_t v75 = a2;
        unint64_t v70 = v12;
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v4 = sub_1DA98CBD8();
          if (v4)
          {
LABEL_15:
            unint64_t v74 = v75 & 0xC000000000000001;
            uint64_t v20 = 4;
            while (1)
            {
              id v21 = v74 ? (id)MEMORY[0x1E0177C00](v20 - 4, v75) : *(id *)(v75 + 8 * v20);
              v22 = v21;
              unint64_t v10 = v20 - 3;
              if (__OFADD__(v20 - 4, 1)) {
                break;
              }
              id v23 = objc_msgSend(v21, sel_kind);
              uint64_t v24 = sub_1DA98C038();
              uint64_t v26 = v25;

              id v27 = objc_msgSend(v76, sel_kind);
              uint64_t v28 = sub_1DA98C038();
              uint64_t v30 = v29;

              if (v24 == v28 && v26 == v30)
              {
                swift_bridgeObjectRelease_n();
LABEL_28:
                swift_bridgeObjectRelease_n();

                v32 = v73;
                uint64_t v33 = *(void *)&v73[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
                v34 = *(os_unfair_lock_s **)(v33 + 16);
                id v14 = v22;
                swift_retain();
                os_unfair_lock_lock(v34);
                uint64_t v35 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor;
                v36 = *(void **)&v32[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor];
                if (v36)
                {
                  sub_1DA7A1A08(0, &qword_1EBE64D48);
                  v37 = v14;
                  id v38 = v36;
                  uint64_t v4 = sub_1DA98C7A8();

                  if (v4)
                  {
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));

                    swift_release();
                    goto LABEL_39;
                  }
                  v40 = v73;
                  v39 = *(void **)&v73[v35];
                }
                else
                {
                  v39 = 0;
                  v40 = v73;
                }
                *(void *)&v40[v35] = v22;
                v41 = v14;

                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
                swift_release();
                uint64_t v42 = *(void *)&v40[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__environmentProvider];
                uint64_t v43 = *(void *)(v42 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock);
                v44 = *(os_unfair_lock_s **)(v43 + 16);
                v45 = v41;
                swift_retain();
                os_unfair_lock_lock(v44);
                uint64_t v46 = OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock_descriptor;
                v47 = *(void **)(v42
                               + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock_descriptor);
                if (v47)
                {
                  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE645F0);
                  v48 = v45;
                  id v49 = v47;
                  char v50 = sub_1DA98C7A8();

                  if (v50)
                  {
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v43 + 16));

                    swift_release();
LABEL_38:
                    id v58 = v73;
                    uint64_t v4 = *(void *)&v73[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__descriptorDidChangePublisher];
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
                    sub_1DA7A0410((unint64_t *)&unk_1EBE66AC0, &qword_1EBE66AE0);
                    sub_1DA98A078();

                    goto LABEL_39;
                  }
                  v47 = *(void **)(v42 + v46);
                }
                *(void *)(v42 + v46) = v22;
                v76 = v45;

                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v43 + 16));
                swift_release();
                uint64_t v51 = *(void *)(v42 + 24);
                v52 = *(os_unfair_lock_s **)(v51 + 16);
                swift_retain();
                os_unfair_lock_lock(v52);
                uint64_t v53 = v42 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
                swift_beginAccess();
                v54 = v63;
                uint64_t v55 = v65;
                (*v62)(v63, v53, v65);
                uint64_t v56 = v64;
                sub_1DA84F724(v42, v64);
                swift_beginAccess();
                (*v61)(v53, v56, v55);
                swift_endAccess();
                v57 = *v60;
                (*v60)(v56, v55);
                v57((uint64_t)v54, v55);
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v51 + 16));
                swift_release();
                swift_retain();
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
                sub_1DA7A0410((unint64_t *)&unk_1EBE66AC0, &qword_1EBE66AE0);
                sub_1DA98A078();

                swift_release();
                goto LABEL_38;
              }
              a2 = sub_1DA98CE58();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (a2) {
                goto LABEL_28;
              }

              ++v20;
              if (v10 == v4) {
                goto LABEL_26;
              }
            }
            __break(1u);
            break;
          }
        }
        else
        {
          uint64_t v4 = *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v4) {
            goto LABEL_15;
          }
        }
LABEL_26:
        swift_bridgeObjectRelease_n();

        id v14 = v76;
LABEL_39:
        uint64_t v11 = v66;
        unint64_t v10 = v67;
        unint64_t v12 = v70;
        a2 = v72;
      }
      else
      {
      }
      if (v12 == v11) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DA98CBD8();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA8E5C40(void *a1, void *a2)
{
  uint64_t v3 = v2;
  if (qword_1EBE64E48 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1DA989F38();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBE6F460);
  id v7 = a2;
  id v8 = a1;
  id v9 = (char *)v7;
  id v10 = v8;
  swift_retain();
  uint64_t v11 = sub_1DA989F18();
  os_log_type_t v12 = sub_1DA98C548();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = v25;
    *(_DWORD *)uint64_t v13 = 136446722;
    uint64_t v14 = *(void *)(v3 + 16);
    unint64_t v15 = *(void *)(v3 + 24);
    swift_bridgeObjectRetain();
    sub_1DA8C5E00(v14, v15, &v26);
    sub_1DA98C858();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    id v16 = objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key], sel__loggingIdentifierWithoutMetrics);
    uint64_t v17 = sub_1DA98C038();
    unint64_t v19 = v18;

    sub_1DA8C5E00(v17, v19, &v26);
    sub_1DA98C858();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 22) = 2082;
    id v20 = objc_msgSend(v10, sel_description);
    uint64_t v21 = sub_1DA98C038();
    unint64_t v23 = v22;

    sub_1DA8C5E00(v21, v23, &v26);
    sub_1DA98C858();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v11, v12, "[%{public}s] Updating descriptor: %s with: %{public}s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v25, -1, -1);
    MEMORY[0x1E0178DA0](v13, -1, -1);
  }
  else
  {

    swift_release();
  }
  return sub_1DA9302B0(v10);
}

uint64_t sub_1DA8E5F20(void *a1)
{
  return sub_1DA8E50AC(a1);
}

void sub_1DA8E5F44(char *a1)
{
}

uint64_t sub_1DA8E5F68(void *a1)
{
  return sub_1DA8E4DC0(a1);
}

uint64_t dispatch thunk of WidgetEntryDescriptorChangeObserver.descriptor(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of WidgetEntryDescriptorChangeObserver.registerWidgetEntry(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of WidgetEntryDescriptorChangeObserver.unregisterWidgetEntry(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for _WidgetEntryDescriptorChangeObserver()
{
  return self;
}

uint64_t method lookup function for _WidgetEntryDescriptorChangeObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _WidgetEntryDescriptorChangeObserver);
}

uint64_t dispatch thunk of _WidgetEntryDescriptorChangeObserver.__allocating_init(label:descriptorProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of _WidgetEntryDescriptorChangeObserver.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of _WidgetEntryDescriptorChangeObserver.registerWidgetEntry(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of _WidgetEntryDescriptorChangeObserver.unregisterWidgetEntry(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of _WidgetEntryDescriptorChangeObserver.descriptor(matching:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of ArchiveVersionProviding.archiveVersion(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1DA8E60BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1DA8E60D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1DA8E60E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1DA8E60F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_1DA8E610C()
{
  return 0;
}

uint64_t sub_1DA8E632C()
{
  return 0;
}

void sub_1DA8E655C(unint64_t a1)
{
  uint64_t v3 = sub_1DA98B438();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = sub_1DA98B4A8();
  Class isa = v7[-1].isa;
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DA8E9080(a1);
  if (v11)
  {
    os_log_type_t v12 = (void *)v11;
    v22[0] = v7;
    uint64_t v13 = *(void **)(v1 + 24);
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = v12;
    void v14[3] = v1;
    v14[4] = a1;
    aBlock[4] = sub_1DA8E948C;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DA7A6EE0;
    aBlock[3] = &block_descriptor_31_0;
    unint64_t v15 = _Block_copy(aBlock);
    id v16 = v13;
    id v17 = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    v22[1] = (os_log_t)MEMORY[0x1E4FBC860];
    sub_1DA874DB4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE65C60);
    sub_1DA7ABDB4();
    sub_1DA98C918();
    MEMORY[0x1E01777D0](0, v10, v6, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*((void (**)(char *, os_log_t))isa + 1))(v10, v22[0]);
    swift_release();
  }
  else
  {
    if (qword_1EBE64E58 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1DA989F38();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EBE6F478);
    v22[0] = (os_log_t)sub_1DA989F18();
    os_log_type_t v19 = sub_1DA98C548();
    if (os_log_type_enabled(v22[0], v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      _os_log_impl(&dword_1DA795000, v22[0], v19, "No powerlog update entries to flush.", v20, 2u);
      MEMORY[0x1E0178DA0](v20, -1, -1);
    }
    os_log_t v21 = v22[0];
  }
}

void sub_1DA8E68E0(unint64_t a1)
{
  uint64_t v3 = sub_1DA98B438();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = sub_1DA98B4A8();
  Class isa = v7[-1].isa;
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DA8E84CC(a1);
  if (v11)
  {
    os_log_type_t v12 = (void *)v11;
    v22[0] = v7;
    uint64_t v13 = *(void **)(v1 + 24);
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = v12;
    void v14[3] = v1;
    v14[4] = a1;
    aBlock[4] = sub_1DA8E8B48;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DA7A6EE0;
    aBlock[3] = &block_descriptor_24_0;
    unint64_t v15 = _Block_copy(aBlock);
    id v16 = v13;
    id v17 = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    v22[1] = (os_log_t)MEMORY[0x1E4FBC860];
    sub_1DA874DB4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE65C60);
    sub_1DA7ABDB4();
    sub_1DA98C918();
    MEMORY[0x1E01777D0](0, v10, v6, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*((void (**)(char *, os_log_t))isa + 1))(v10, v22[0]);
    swift_release();
  }
  else
  {
    if (qword_1EBE64E58 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1DA989F38();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EBE6F478);
    v22[0] = (os_log_t)sub_1DA989F18();
    os_log_type_t v19 = sub_1DA98C548();
    if (os_log_type_enabled(v22[0], v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      _os_log_impl(&dword_1DA795000, v22[0], v19, "No powerlog view entries to flush.", v20, 2u);
      MEMORY[0x1E0178DA0](v20, -1, -1);
    }
    os_log_t v21 = v22[0];
  }
}

void sub_1DA8E6C64(void *a1, uint64_t a2, unint64_t a3, const char *a4, uint64_t a5, uint64_t a6, const char *a7)
{
  if (qword_1EBE64E58 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1DA989F38();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EBE6F478);
  id v12 = a1;
  uint64_t v13 = sub_1DA989F18();
  os_log_type_t v14 = sub_1DA98C518();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    os_log_t v21 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v15 = 138543362;
    id v16 = v12;
    sub_1DA98C858();
    *os_log_t v21 = v12;

    _os_log_impl(&dword_1DA795000, v13, v14, a4, v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v21, -1, -1);
    MEMORY[0x1E0178DA0](v15, -1, -1);
  }
  else
  {
  }
  id v17 = (void *)sub_1DA98C008();
  PLLogRegisteredEvent();

  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_1DA989F18();
  os_log_type_t v19 = sub_1DA98C548();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v20 = 134349056;
    if (a3 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1DA98CBD8();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v18, v19, a7, v20, 0xCu);
    MEMORY[0x1E0178DA0](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1DA8E6F70(uint64_t a1)
{
  uint64_t v3 = sub_1DA98B438();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = sub_1DA98B4A8();
  Class isa = v7[-1].isa;
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DA8E7A8C(a1);
  if (v11)
  {
    id v12 = (void *)v11;
    v22[0] = v7;
    uint64_t v13 = *(void **)(v1 + 24);
    os_log_type_t v14 = (void *)swift_allocObject();
    v14[2] = v12;
    void v14[3] = v1;
    v14[4] = a1;
    aBlock[4] = sub_1DA8E7F08;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DA7A6EE0;
    aBlock[3] = &block_descriptor_13;
    unint64_t v15 = _Block_copy(aBlock);
    id v16 = v13;
    id v17 = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    v22[1] = (os_log_t)MEMORY[0x1E4FBC860];
    sub_1DA874DB4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE65C60);
    sub_1DA7ABDB4();
    sub_1DA98C918();
    MEMORY[0x1E01777D0](0, v10, v6, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*((void (**)(char *, os_log_t))isa + 1))(v10, v22[0]);
    swift_release();
  }
  else
  {
    if (qword_1EBE64E58 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1DA989F38();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EBE6F478);
    v22[0] = (os_log_t)sub_1DA989F18();
    os_log_type_t v19 = sub_1DA98C548();
    if (os_log_type_enabled(v22[0], v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      _os_log_impl(&dword_1DA795000, v22[0], v19, "No powerlog suggestion entries to flush.", v20, 2u);
      MEMORY[0x1E0178DA0](v20, -1, -1);
    }
    os_log_t v21 = v22[0];
  }
}

void sub_1DA8E72F4(void *a1)
{
  if (qword_1EBE64E58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DA989F38();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBE6F478);
  id v3 = a1;
  uint64_t v4 = sub_1DA989F18();
  os_log_type_t v5 = sub_1DA98C518();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    id v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543362;
    id v8 = v3;
    sub_1DA98C858();
    *id v7 = v3;

    _os_log_impl(&dword_1DA795000, v4, v5, "Flushing suggestions to powerlog: %{public}@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v7, -1, -1);
    MEMORY[0x1E0178DA0](v6, -1, -1);
  }
  else
  {
  }
  uint64_t v9 = (void *)sub_1DA98C008();
  PLLogRegisteredEvent();

  swift_bridgeObjectRetain();
  id v10 = sub_1DA989F18();
  os_log_type_t v11 = sub_1DA98C548();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v12 = 134349056;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v10, v11, "Flushed %{public}ld powerlog suggestion entries.", v12, 0xCu);
    MEMORY[0x1E0178DA0](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for WidgetPowerlogProvider()
{
  return self;
}

unint64_t sub_1DA8E75CC()
{
  unint64_t result = qword_1EA8E6630;
  if (!qword_1EA8E6630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6630);
  }
  return result;
}

unint64_t sub_1DA8E7624()
{
  unint64_t result = qword_1EA8E6638;
  if (!qword_1EA8E6638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6638);
  }
  return result;
}

void sub_1DA8E7678(unint64_t a1)
{
}

void sub_1DA8E769C(unint64_t a1)
{
}

void sub_1DA8E76C0(uint64_t a1)
{
}

unint64_t sub_1DA8E76E4(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t result = sub_1DA98C138();
  if (v4) {
    unint64_t result = 15;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_12;
  }

  return sub_1DA98C198();
}

uint64_t sub_1DA8E77A0(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xC) {
    return 0;
  }
  else {
    return byte_1DA997896[a1 - 1];
  }
}

uint64_t sub_1DA8E77C4(uint64_t a1)
{
  id v1 = *(id *)a1;
  uint64_t v26 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  id v3 = objc_msgSend(*(id *)a1, sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v4 = sub_1DA9899C8();
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  uint64_t v29 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v28 = v4;
  *((void *)&v28 + 1) = v6;
  swift_endAccess();

  sub_1DA7A1930(&v28, v27);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v27, 0x4449656C646E7562, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v1, sel_kind);
  uint64_t v9 = sub_1DA98C038();
  unint64_t v11 = v10;

  uint64_t v29 = MEMORY[0x1E4FBB7A8];
  id v12 = (void *)swift_allocObject();
  *(void *)&long long v28 = v12;
  unint64_t v13 = sub_1DA8E76E4(6uLL, v9, v11);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  v12[2] = v13;
  v12[3] = v15;
  v12[4] = v17;
  v12[5] = v19;
  sub_1DA7A1930(&v28, v27);
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v27, 1684957547, 0xE400000000000000, v20);
  swift_bridgeObjectRelease();
  unsigned __int8 v21 = sub_1DA8E77A0((uint64_t)objc_msgSend(v1, sel_family));
  uint64_t v29 = MEMORY[0x1E4FBB550];
  *(void *)&long long v28 = v21;
  sub_1DA7A1930(&v28, v27);
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v27, 1702521203, 0xE400000000000000, v22);
  swift_bridgeObjectRelease();
  uint64_t v29 = v5;
  *(void *)&long long v28 = v26;
  *((void *)&v28 + 1) = v2;
  sub_1DA7A1930(&v28, v27);
  swift_bridgeObjectRetain();
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v27, 0xD000000000000014, 0x80000001DA9A2060, v23);
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1DA98BE68();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1DA8E7A8C(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA48]), sel_init);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = a1;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    uint64_t v5 = &selRef_alpha;
    do
    {
      unint64_t v6 = *(v4 - 1);
      uint64_t v7 = *v4;
      id v27 = (id)*(v4 - 2);
      unint64_t v28 = v6;
      uint64_t v29 = v7;
      id v8 = v27;
      swift_bridgeObjectRetain();
      uint64_t v9 = (void *)sub_1DA8E77C4((uint64_t)&v27);
      objc_msgSend(v2, v5[132], v9);

      if (qword_1EBE64E58 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1DA989F38();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EBE6F478);
      id v11 = v8;
      swift_bridgeObjectRetain_n();
      id v12 = v11;
      unint64_t v13 = sub_1DA989F18();
      os_log_type_t v14 = sub_1DA98C518();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v26 = v25;
        id v27 = 0;
        *(_DWORD *)uint64_t v24 = 136446210;
        unint64_t v28 = 0xE000000000000000;
        sub_1DA98CA18();
        sub_1DA98C148();
        id v15 = objc_msgSend(v12, sel_description);
        sub_1DA98C038();

        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        swift_bridgeObjectRetain();
        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        *(void *)(v24 + 4) = sub_1DA8C5E00((uint64_t)v27, v28, &v26);
        swift_bridgeObjectRelease_n();

        uint64_t v5 = &selRef_alpha;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DA795000, v13, v14, "Flushing powerlog suggestion entry: %{public}s", (uint8_t *)v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v25, -1, -1);
        MEMORY[0x1E0178DA0](v24, -1, -1);
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v4 += 3;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  if (objc_msgSend(v2, sel_count, v23))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BB8);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1DA994650;
    uint64_t v17 = MEMORY[0x1E4FBB1A0];
    *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v16 + 32) = 0x7374617473;
    *(void *)(v16 + 40) = 0xE500000000000000;
    objc_msgSend(v2, sel_copyWithZone_, 0);
    sub_1DA98C8C8();
    swift_unknownObjectRelease();
    *(void *)(v16 + 120) = v17;
    *(void *)(v16 + 96) = 0x6D617473656D6974;
    *(void *)(v16 + 104) = 0xE900000000000070;
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9C8]), sel_init);
    objc_msgSend(v18, sel_timeIntervalSince1970);
    uint64_t v20 = v19;

    *(void *)(v16 + 152) = MEMORY[0x1E4FBB3D0];
    *(void *)(v16 + 128) = v20;
    sub_1DA874E0C();
    uint64_t v21 = sub_1DA98C4D8();
  }
  else
  {

    return 0;
  }
  return v21;
}

void sub_1DA8E7F08()
{
  sub_1DA8E72F4(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_1DA8E7F2C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1DA8E7F64(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(a1 + 16), sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v3 = sub_1DA9899C8();
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  uint64_t v46 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v45 = v3;
  *((void *)&v45 + 1) = v5;
  swift_endAccess();

  sub_1DA7A1930(&v45, v44);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v44, 0x4449656C646E7562, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(*(id *)(a1 + 16), sel_kind);
  uint64_t v8 = sub_1DA98C038();
  unint64_t v10 = v9;

  uint64_t v46 = MEMORY[0x1E4FBB7A8];
  id v11 = (void *)swift_allocObject();
  *(void *)&long long v45 = v11;
  unint64_t v12 = sub_1DA8E76E4(6uLL, v8, v10);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  v11[2] = v12;
  v11[3] = v14;
  v11[4] = v16;
  v11[5] = v18;
  sub_1DA7A1930(&v45, v44);
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v44, 1684957547, 0xE400000000000000, v19);
  swift_bridgeObjectRelease();
  unsigned __int8 v20 = sub_1DA8E77A0((uint64_t)objc_msgSend(*(id *)(a1 + 16), sel_family));
  uint64_t v21 = MEMORY[0x1E4FBB550];
  uint64_t v46 = MEMORY[0x1E4FBB550];
  *(void *)&long long v45 = v20;
  sub_1DA7A1930(&v45, v44);
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v44, 1702521203, 0xE400000000000000, v22);
  swift_bridgeObjectRelease();
  char v23 = *(unsigned char *)(a1 + 56);
  uint64_t v46 = MEMORY[0x1E4FBB390];
  LOBYTE(v45) = v23;
  sub_1DA7A1930(&v45, v44);
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v44, 0x636174536E497369, 0xE90000000000006BLL, v24);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a1 + 72) == 1) {
    uint64_t v25 = qword_1DA9978A8[*(void *)(a1 + 64)];
  }
  else {
    uint64_t v25 = 3;
  }
  uint64_t v46 = v21;
  *(void *)&long long v45 = v25;
  sub_1DA7A1930(&v45, v44);
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v44, 0x6E6F697461636F6CLL, 0xE800000000000000, v26);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a1 + 72)) {
    uint64_t v27 = -1;
  }
  else {
    uint64_t v27 = *(void *)(a1 + 64);
  }
  uint64_t v46 = v21;
  *(void *)&long long v45 = v27;
  sub_1DA7A1930(&v45, v44);
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v44, 1701273968, 0xE400000000000000, v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(a1 + 48);
  if (v29)
  {
    uint64_t v30 = *(void *)(a1 + 40);
    uint64_t v46 = v4;
    *(void *)&long long v45 = v30;
    *((void *)&v45 + 1) = v29;
    sub_1DA7A1930(&v45, v44);
    swift_bridgeObjectRetain();
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DA916C08(v44, 0xD000000000000014, 0x80000001DA9A2060, v31);
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = *(void *)(a1 + 24);
  uint64_t v33 = *(void *)(a1 + 32);
  uint64_t v46 = v4;
  *(void *)&long long v45 = v32;
  *((void *)&v45 + 1) = v33;
  sub_1DA7A1930(&v45, v44);
  swift_bridgeObjectRetain();
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v44, 0x696669746E656469, 0xEA00000000007265, v34);
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(a1 + 112);
  uint64_t v36 = MEMORY[0x1E4FBB3D0];
  uint64_t v46 = MEMORY[0x1E4FBB3D0];
  *(void *)&long long v45 = v35;
  sub_1DA7A1930(&v45, v44);
  char v37 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v44, 0xD000000000000016, 0x80000001DA9A06C0, v37);
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(a1 + 88);
  uint64_t v46 = v36;
  *(void *)&long long v45 = v38;
  sub_1DA7A1930(&v45, v44);
  char v39 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v44, 0xD000000000000013, 0x80000001DA9A2080, v39);
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void *)(a1 + 96);
  uint64_t v46 = v21;
  *(void *)&long long v45 = v40;
  sub_1DA7A1930(&v45, v44);
  char v41 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v44, 0xD000000000000013, 0x80000001DA9A20A0, v41);
  swift_bridgeObjectRelease();
  uint64_t v42 = sub_1DA98BE68();
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_1DA8E84CC(unint64_t a1)
{
  id v2 = (SEL *)&unk_1E6BDB000;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA48]), sel_init);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DA98CBD8();
    uint64_t v4 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_23;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v6 = 0;
  unint64_t v7 = a1 & 0xC000000000000001;
  uint64_t v8 = &qword_1EBE64000;
  uint64_t v41 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v44 = v4;
  unint64_t v45 = a1;
  id v42 = v3;
  unint64_t v43 = a1 & 0xC000000000000001;
  do
  {
    if (v7)
    {
      uint64_t v9 = MEMORY[0x1E0177C00](v6, a1);
    }
    else
    {
      uint64_t v9 = *(void *)(a1 + 8 * v6 + 32);
      swift_retain();
    }
    if (*(double *)(v9 + 112) <= 0.0)
    {
      if (v8[459] != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1DA989F38();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EBE6F478);
      swift_retain_n();
      char v23 = sub_1DA989F18();
      os_log_type_t v24 = sub_1DA98C518();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        *(void *)&long long v46 = v26;
        *(_DWORD *)uint64_t v25 = 136446210;
        uint64_t v27 = *(void *)(v9 + 32);
        char v28 = *(unsigned char *)(v9 + 56);
        uint64_t v29 = *(void *)(v9 + 64);
        char v30 = *(unsigned char *)(v9 + 72);
        long long v48 = *(_OWORD *)(v9 + 16);
        uint64_t v49 = v27;
        long long v50 = *(_OWORD *)(v9 + 40);
        char v51 = v28;
        uint64_t v52 = v29;
        char v53 = v30;
        uint64_t v31 = PowerlogWidgetViewIdentity.description.getter();
        *(void *)(v25 + 4) = sub_1DA8C5E00(v31, v32, (uint64_t *)&v46);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DA795000, v23, v24, "Dropped view entry for identity: [%{public}s] because it was incomplete.", (uint8_t *)v25, 0xCu);
        swift_arrayDestroy();
        uint64_t v33 = v26;
        a1 = v45;
        MEMORY[0x1E0178DA0](v33, -1, -1);
        uint64_t v34 = v25;
        uint64_t v4 = v44;
        MEMORY[0x1E0178DA0](v34, -1, -1);
        swift_release();
      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      unint64_t v10 = (void *)sub_1DA8E7F64(v9);
      objc_msgSend(v3, sel_addObject_, v10);

      if (v8[459] != -1) {
        swift_once();
      }
      uint64_t v11 = sub_1DA989F38();
      __swift_project_value_buffer(v11, (uint64_t)qword_1EBE6F478);
      swift_retain_n();
      unint64_t v12 = sub_1DA989F18();
      os_log_type_t v13 = sub_1DA98C518();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v47 = v15;
        *(void *)&long long v48 = 0;
        *(_DWORD *)uint64_t v14 = 136446210;
        *((void *)&v48 + 1) = 0xE000000000000000;
        swift_retain();
        sub_1DA98CA18();
        long long v46 = v48;
        sub_1DA98C148();
        uint64_t v16 = *(void *)(v9 + 32);
        char v17 = *(unsigned char *)(v9 + 56);
        uint64_t v18 = *(void *)(v9 + 64);
        char v19 = *(unsigned char *)(v9 + 72);
        long long v20 = *(_OWORD *)(v9 + 40);
        long long v48 = *(_OWORD *)(v9 + 16);
        uint64_t v49 = v16;
        long long v50 = v20;
        char v51 = v17;
        uint64_t v52 = v18;
        char v53 = v19;
        sub_1DA98CB58();
        sub_1DA98C148();
        long long v21 = *(_OWORD *)(v9 + 96);
        long long v54 = *(_OWORD *)(v9 + 80);
        long long v55 = v21;
        uint64_t v56 = *(void *)(v9 + 112);
        sub_1DA8172D8();
        sub_1DA98C148();
        a1 = v45;
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        swift_release();
        *(void *)&long long v48 = sub_1DA8C5E00(v46, *((unint64_t *)&v46 + 1), &v47);
        uint64_t v4 = v44;
        id v3 = v42;
        sub_1DA98C858();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DA795000, v12, v13, "Flushing powerlog view entry: %{public}s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v15, -1, -1);
        MEMORY[0x1E0178DA0](v14, -1, -1);
        swift_release();
      }
      else
      {

        swift_release_n();
      }
      unint64_t v7 = v43;
      uint64_t v8 = &qword_1EBE64000;
    }
    ++v6;
  }
  while (v4 != v6);
  swift_bridgeObjectRelease();
  id v2 = (SEL *)&unk_1E6BDB000;
LABEL_24:
  if (objc_msgSend(v3, sel_count, v41))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BB8);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1DA994650;
    uint64_t v36 = MEMORY[0x1E4FBB1A0];
    *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v35 + 32) = 0x7374617473;
    *(void *)(v35 + 40) = 0xE500000000000000;
    objc_msgSend(v3, sel_copyWithZone_, 0);
    sub_1DA98C8C8();
    swift_unknownObjectRelease();
    *(void *)(v35 + 120) = v36;
    *(void *)(v35 + 96) = 0x6D617473656D6974;
    *(void *)(v35 + 104) = 0xE900000000000070;
    id v37 = [objc_allocWithZone(MEMORY[0x1E4F1C9C8]) v2[484]];
    objc_msgSend(v37, sel_timeIntervalSince1970);
    uint64_t v39 = v38;

    *(void *)(v35 + 152) = MEMORY[0x1E4FBB3D0];
    *(void *)(v35 + 128) = v39;
    sub_1DA874E0C();
    uint64_t v40 = sub_1DA98C4D8();
  }
  else
  {

    return 0;
  }
  return v40;
}

void sub_1DA8E8B48()
{
  sub_1DA8E6C64(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), "Flushing views to powerlog: %{public}@", 0x7453746567646957, 0xEB00000000737461, "Flushed %{public}ld powerlog view entries.");
}

uint64_t sub_1DA8E8B94(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = objc_msgSend(v2, sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v4 = sub_1DA9899C8();
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  uint64_t v45 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v44 = v4;
  *((void *)&v44 + 1) = v6;
  swift_endAccess();

  sub_1DA7A1930(&v44, v43);
  uint64_t v7 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v43, 0x4449656C646E7562, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v46 = v7;
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v2, sel_kind);
  uint64_t v10 = sub_1DA98C038();
  unint64_t v12 = v11;

  uint64_t v45 = MEMORY[0x1E4FBB7A8];
  os_log_type_t v13 = (void *)swift_allocObject();
  *(void *)&long long v44 = v13;
  unint64_t v14 = sub_1DA8E76E4(6uLL, v10, v12);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  v13[2] = v14;
  void v13[3] = v16;
  v13[4] = v18;
  v13[5] = v20;
  sub_1DA7A1930(&v44, v43);
  uint64_t v21 = v46;
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v43, 1684957547, 0xE400000000000000, v22);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a1 + 40);
  uint64_t v24 = *(void *)(a1 + 48);
  uint64_t v45 = v5;
  *(void *)&long long v44 = v23;
  *((void *)&v44 + 1) = v24;
  sub_1DA7A1930(&v44, v43);
  swift_bridgeObjectRetain();
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v43, 0x696669746E656469, 0xEA00000000007265, v25);
  uint64_t v46 = v21;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(a1 + 96);
  if (!v26)
  {
    sub_1DA912E28(1953722216, 0xE400000000000000, &v44);
    sub_1DA7A6D20((uint64_t)&v44);
    uint64_t v29 = *(void *)(a1 + 64);
    if (!v29) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  uint64_t v27 = *(void *)(a1 + 88);
  uint64_t v45 = v5;
  *(void *)&long long v44 = v27;
  *((void *)&v44 + 1) = v26;
  sub_1DA7A1930(&v44, v43);
  swift_bridgeObjectRetain();
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v43, 1953722216, 0xE400000000000000, v28);
  uint64_t v46 = v21;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(a1 + 64);
  if (v29)
  {
LABEL_3:
    uint64_t v30 = *(void *)(a1 + 56);
    uint64_t v45 = v5;
    *(void *)&long long v44 = v30;
    *((void *)&v44 + 1) = v29;
    sub_1DA7A1930(&v44, v43);
    swift_bridgeObjectRetain();
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DA916C08(v43, 0xD000000000000014, 0x80000001DA9A2060, v31);
    swift_bridgeObjectRelease();
  }
LABEL_5:
  uint64_t v32 = *(void *)(a1 + 112);
  uint64_t v33 = MEMORY[0x1E4FBB550];
  uint64_t v45 = MEMORY[0x1E4FBB550];
  *(void *)&long long v44 = v32;
  sub_1DA7A1930(&v44, v43);
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v43, 0x6E696E69616D6572, 0xEF74656764754267, v34);
  swift_bridgeObjectRelease();
  BOOL v35 = (*(unsigned char *)(a1 + 104) & 1) == 0;
  uint64_t v45 = v33;
  *(void *)&long long v44 = v35;
  sub_1DA7A1930(&v44, v43);
  char v36 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v43, 1953722211, 0xE400000000000000, v36);
  swift_bridgeObjectRelease();
  uint64_t v37 = qword_1DA9978E8[*(char *)(a1 + 105)];
  uint64_t v45 = v33;
  *(void *)&long long v44 = v37;
  sub_1DA7A1930(&v44, v43);
  char v38 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v43, 0x6E6F73616572, 0xE600000000000000, v38);
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(a1 + 120);
  uint64_t v45 = MEMORY[0x1E4FBB3D0];
  *(void *)&long long v44 = v39;
  sub_1DA7A1930(&v44, v43);
  char v40 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA916C08(v43, 0x6F69747563657865, 0xED0000656D69546ELL, v40);
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_1DA98BE68();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1DA8E9080(unint64_t a1)
{
  id v2 = (SEL *)&unk_1E6BDB000;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA48]), sel_init);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DA98CBD8();
    uint64_t v4 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_16;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v6 = 0;
  unint64_t v7 = a1 & 0xC000000000000001;
  uint64_t v8 = &selRef_alpha;
  unint64_t v29 = a1;
  id v30 = v3;
  unint64_t v27 = a1 & 0xC000000000000001;
  uint64_t v28 = v4;
  do
  {
    if (v7)
    {
      uint64_t v9 = MEMORY[0x1E0177C00](v6, a1);
    }
    else
    {
      uint64_t v9 = *(void *)(a1 + 8 * v6 + 32);
      swift_retain();
    }
    uint64_t v10 = (void *)sub_1DA8E8B94(v9);
    objc_msgSend(v3, v8[132], v10);

    if (qword_1EBE64E58 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1DA989F38();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBE6F478);
    swift_retain_n();
    unint64_t v12 = sub_1DA989F18();
    os_log_type_t v13 = sub_1DA98C518();
    if (os_log_type_enabled(v12, v13))
    {
      unint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v31 = v15;
      *(_DWORD *)unint64_t v14 = 136446210;
      swift_retain();
      uint64_t v16 = sub_1DA8E632C();
      unint64_t v18 = v17;
      swift_release();
      sub_1DA8C5E00(v16, v18, &v31);
      uint64_t v4 = v28;
      id v3 = v30;
      sub_1DA98C858();
      swift_release_n();
      unint64_t v7 = v27;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA795000, v12, v13, "Flushing powerlog update entry: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      uint64_t v19 = v15;
      uint64_t v8 = &selRef_alpha;
      MEMORY[0x1E0178DA0](v19, -1, -1);
      uint64_t v20 = v14;
      a1 = v29;
      MEMORY[0x1E0178DA0](v20, -1, -1);
      swift_release();
    }
    else
    {

      swift_release_n();
    }
    ++v6;
  }
  while (v4 != v6);
  swift_bridgeObjectRelease();
  id v2 = (SEL *)&unk_1E6BDB000;
LABEL_17:
  if (objc_msgSend(v3, sel_count))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BB8);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1DA994650;
    uint64_t v22 = MEMORY[0x1E4FBB1A0];
    *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v21 + 32) = 0x7374617473;
    *(void *)(v21 + 40) = 0xE500000000000000;
    objc_msgSend(v3, sel_copyWithZone_, 0);
    sub_1DA98C8C8();
    swift_unknownObjectRelease();
    *(void *)(v21 + 120) = v22;
    *(void *)(v21 + 96) = 0x6D617473656D6974;
    *(void *)(v21 + 104) = 0xE900000000000070;
    id v23 = [objc_allocWithZone(MEMORY[0x1E4F1C9C8]) v2[484]];
    objc_msgSend(v23, sel_timeIntervalSince1970);
    uint64_t v25 = v24;

    *(void *)(v21 + 152) = MEMORY[0x1E4FBB3D0];
    *(void *)(v21 + 128) = v25;
    sub_1DA874E0C();
    uint64_t v26 = sub_1DA98C4D8();
  }
  else
  {

    return 0;
  }
  return v26;
}

void sub_1DA8E948C()
{
  sub_1DA8E6C64(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), "Flushing updates to powerlog: %{public}@", 0x7055746567646957, 0xED00007365746164, "Flushed %{public}ld powerlog update entries.");
}

uint64_t sub_1DA8E94EC(void (*a1)(unsigned char *))
{
  uint64_t v3 = sub_1DA98A888();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  uint64_t v9 = v1 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
  a1(v6);
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 24))(v9, v6, v3);
  swift_endAccess();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  swift_release();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
  sub_1DA7A0410((unint64_t *)&unk_1EBE66AC0, &qword_1EBE66AE0);
  sub_1DA98A078();
  return swift_release();
}

uint64_t sub_1DA8E96DC(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A1E8);
  uint64_t v8 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__subscriptions) = MEMORY[0x1E4FBC870];
  *(void *)(v4 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity) = a1;
  sub_1DA7A1A44((uint64_t)a2, v4 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__systemProvider);
  sub_1DA7A1A44((uint64_t)a3, v4 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
  swift_allocObject();
  id v22 = a1;
  *(void *)(v4 + 16) = sub_1DA98A008();
  type metadata accessor for UnfairLock();
  uint64_t v11 = swift_allocObject();
  unint64_t v12 = (_DWORD *)swift_slowAlloc();
  *unint64_t v12 = 0;
  *(void *)(v11 + 16) = v12;
  *(void *)(v4 + 24) = v11;
  sub_1DA98A878();
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v13);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  uint64_t v23 = v15(v13, v14);
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61D00);
  sub_1DA7A0410((unint64_t *)&qword_1EBE61CF8, &qword_1EBE61D00);
  sub_1DA98A1A8();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1DA989F98();
  swift_endAccess();
  swift_release();
  if (qword_1EBE59408 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_1EBE5A4D8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A260);
  sub_1DA7A0410(&qword_1EBE5A258, &qword_1EBE5A260);
  uint64_t v23 = sub_1DA98A0F8();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A240);
  sub_1DA7A0410(&qword_1EBE5A238, &qword_1EBE5A240);
  sub_1DA98A148();
  swift_release();
  swift_release();
  sub_1DA7A0410(&qword_1EBE5A1E0, &qword_1EBE5A1E8);
  swift_retain();
  uint64_t v16 = v21;
  sub_1DA98A1A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  swift_beginAccess();
  sub_1DA989F98();
  swift_endAccess();
  swift_release();
  uint64_t v17 = a3[3];
  uint64_t v18 = a3[4];
  __swift_project_boxed_opaque_existential_0(a3, v17);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 64))(v17, v18);
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE58968);
  sub_1DA7A0410((unint64_t *)&qword_1EBE58960, (uint64_t *)&unk_1EBE58968);
  sub_1DA98A1A8();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1DA989F98();
  swift_endAccess();
  swift_release();
  sub_1DA8EA02C(1);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v4;
}

uint64_t sub_1DA8E9C40()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DA8EA02C(0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA8E9C9C(unint64_t *a1, uint64_t a2)
{
  unint64_t v2 = *a1;
  if (!*a1) {
    return 0;
  }
  uint64_t v3 = *(void **)(a2 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity);
  swift_bridgeObjectRetain();
  id v4 = v3;
  char v5 = sub_1DA935B38((uint64_t)v4, v2);
  swift_bridgeObjectRelease();

  return v5 & 1;
}

uint64_t sub_1DA8E9D08(uint64_t a1, uint64_t a2)
{
  if (qword_1EBE62C40 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1DA989F38();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBE6F2E8);
  swift_retain_n();
  id v4 = sub_1DA989F18();
  os_log_type_t v5 = sub_1DA98C548();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543362;
    uint64_t v10 = *(void **)(a2 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity);
    id v8 = v10;
    sub_1DA98C858();
    *uint64_t v7 = v10;
    swift_release_n();
    _os_log_impl(&dword_1DA795000, v4, v5, "Per app language override changed for extension: %{public}@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v7, -1, -1);
    MEMORY[0x1E0178DA0](v6, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return sub_1DA8EA02C(0);
}

uint64_t sub_1DA8E9EC0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    if (v3)
    {
      uint64_t v4 = v1 + 32;
      sub_1DA7ECAA0();
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1DA7A1A44(v4, (uint64_t)&v9);
        uint64_t v5 = v10;
        uint64_t v6 = v11;
        __swift_project_boxed_opaque_existential_0(&v9, v10);
        uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
        char v8 = sub_1DA98C7A8();

        if (v8) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
        v4 += 40;
        if (!--v3)
        {
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      sub_1DA7A19A4(&v9, (uint64_t)v12);
      sub_1DA7A1AE0((uint64_t)v12, &qword_1EBE58E50);
      sub_1DA8EA02C(0);
      return swift_release();
    }
    else
    {
LABEL_7:
      uint64_t v13 = 0;
      memset(v12, 0, sizeof(v12));
      swift_release();
      return sub_1DA7A1AE0((uint64_t)v12, &qword_1EBE58E50);
    }
  }
  return result;
}

uint64_t sub_1DA8EA02C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0F0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity)
      + *MEMORY[0x1E4F58B78];
  swift_beginAccess();
  sub_1DA8EB260(v11, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v6, &qword_1EBE5A0F0);
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A780);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DA990050;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 16))(v13 + v12, v10, v7);
  uint64_t v14 = _sSo8NSLocaleC9ChronoKitE18currentLocaleToken3forSDy0B8Services15TypedIdentifierVyAF0J4TypeO6BundleO9ContainerOGAC0eF10DescriptorVGSayAOG_tFZ_0(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (!*(void *)(v14 + 16)) {
    goto LABEL_8;
  }
  unint64_t v15 = sub_1DA7FE75C((uint64_t)v10);
  if ((v16 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 24 * v15);
  uint64_t v19 = *v17;
  unint64_t v18 = v17[1];
  uint64_t v20 = v17[2];
  sub_1DA79ED98(*v17, v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  strcpy((char *)v29, "AppleLanguages");
  HIBYTE(v29[1]) = -18;
  sub_1DA98C9C8();
  if (*(void *)(v20 + 16) && (unint64_t v21 = sub_1DA7FE2EC((uint64_t)v30), (v22 & 1) != 0))
  {
    sub_1DA800210(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v31);
  }
  else
  {
    long long v31 = 0u;
    long long v32 = 0u;
  }
  sub_1DA800404((uint64_t)v30);
  if (!*((void *)&v32 + 1))
  {
    sub_1DA79DA70(v19, v18);
    swift_bridgeObjectRelease();
    sub_1DA7A1AE0((uint64_t)&v31, &qword_1EBE66B48);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1DA79DA70(v19, v18);
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_9:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_10;
  }
  uint64_t v26 = *(void *)(v29[0] + 16);
  uint64_t v27 = swift_bridgeObjectRelease();
  if (v26)
  {
    MEMORY[0x1F4188790](v27);
    *(&v28 - 6) = v2;
    *(&v28 - 5) = v19;
    *(&v28 - 4) = v18;
    *(&v28 - 3) = v20;
    *((unsigned char *)&v28 - 16) = a1 & 1;
    sub_1DA79ED98(v19, v18);
    swift_bridgeObjectRetain();
    sub_1DA8E94EC((void (*)(unsigned char *))sub_1DA8EB2C8);
    sub_1DA79DA70(v19, v18);
    swift_bridgeObjectRelease();
    sub_1DA79DA70(v19, v18);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1DA79DA70(v19, v18);
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v23 = swift_retain();
  return sub_1DA95CFAC(v23, v2, 0, 0, 0, a1 & 1, v24);
}

uint64_t sub_1DA8EA4C8(NSObject *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6)
{
  LODWORD(v74) = a6;
  uint64_t v11 = sub_1DA98A888();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v75 = ((char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)&v66 - v15;
  uint64_t v77 = a2;
  uint64_t v17 = (void *)(a2 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__systemProvider);
  uint64_t v18 = *(void *)(a2 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__systemProvider + 24);
  uint64_t v19 = v17[4];
  __swift_project_boxed_opaque_existential_0(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
  v76 = a1;
  uint64_t v20 = a5;
  uint64_t v21 = sub_1DA98A708();
  uint64_t v23 = v21;
  unint64_t v24 = v22;
  if (!a5)
  {
    sub_1DA7A1ACC(v21, v22);
    sub_1DA7A1ACC(0, 0xF000000000000000);
    (*(void (**)(NSObject *, char *, uint64_t))(v12 + 16))(v75, v16, v11);
    uint64_t v26 = v12;
    unint64_t v29 = v16;
    if (v74)
    {
      uint64_t v27 = *(void (**)(NSObject *, uint64_t))(v12 + 8);
      v27(v75, v11);
    }
    else
    {
      v73 = v16;
      uint64_t v74 = v12;
      uint64_t v47 = v75;
      uint64_t v48 = sub_1DA98A708();
      unint64_t v50 = v49;
      uint64_t v51 = sub_1DA98A708();
      unint64_t v53 = v52;
      char v54 = sub_1DA816D7C(v48, v50, v51, v52);
      uint64_t v55 = v51;
      uint64_t v26 = v74;
      sub_1DA79DA70(v55, v53);
      sub_1DA79DA70(v48, v50);
      uint64_t v27 = *(void (**)(NSObject *, uint64_t))(v26 + 8);
      v27(v47, v11);
      if ((v54 & 1) == 0)
      {
        if (qword_1EBE62C40 != -1) {
          swift_once();
        }
        uint64_t v56 = sub_1DA989F38();
        __swift_project_value_buffer(v56, (uint64_t)qword_1EBE6F2E8);
        swift_retain_n();
        v57 = sub_1DA989F18();
        os_log_type_t v58 = sub_1DA98C548();
        int v59 = v58;
        unint64_t v75 = v57;
        if (os_log_type_enabled(v57, v58))
        {
          LODWORD(v72) = v59;
          v60 = (uint8_t *)swift_slowAlloc();
          unint64_t v70 = (void *)swift_slowAlloc();
          unint64_t v71 = v60;
          *(_DWORD *)v60 = 138543362;
          uint64_t v69 = v60 + 4;
          v61 = *(void **)(v77 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity);
          v79[0] = (uint64_t)v61;
          id v62 = v61;
          sub_1DA98C858();
          v63 = v70;
          *unint64_t v70 = v61;
          uint64_t v28 = v76;
          v27(v76, v11);
          swift_release_n();
          uint64_t v64 = v71;
          _os_log_impl(&dword_1DA795000, v75, (os_log_type_t)v72, "No language override found for %{public}@", v71, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v63, -1, -1);
          MEMORY[0x1E0178DA0](v64, -1, -1);

          unint64_t v29 = v73;
          uint64_t v26 = v74;
          goto LABEL_20;
        }
        swift_release_n();

        uint64_t v28 = v76;
        v27(v76, v11);
        uint64_t v26 = v74;
        goto LABEL_4;
      }
      unint64_t v29 = v73;
    }
    uint64_t v28 = v76;
    v27(v76, v11);
    goto LABEL_20;
  }
  v73 = v16;
  uint64_t v74 = v12;
  sub_1DA79ED98(a3, a4);
  char v25 = sub_1DA816D7C(v23, v24, a3, a4);
  sub_1DA79DA70(a3, a4);
  sub_1DA79DA70(v23, v24);
  if (v25)
  {
    uint64_t v26 = v74;
    uint64_t v27 = *(void (**)(NSObject *, uint64_t))(v74 + 8);
    uint64_t v28 = v76;
    v27(v76, v11);
LABEL_4:
    unint64_t v29 = v73;
    goto LABEL_20;
  }
  sub_1DA79ED98(a3, a4);
  uint64_t v30 = qword_1EBE62C40;
  swift_bridgeObjectRetain();
  uint64_t v31 = v77;
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1DA989F38();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EBE6F2E8);
  sub_1DA8EB2D8(a3, a4, a5);
  swift_retain();
  sub_1DA8EB2D8(a3, a4, a5);
  swift_retain();
  uint64_t v33 = (uint8_t *)sub_1DA989F18();
  os_log_type_t v34 = sub_1DA98C548();
  int v35 = v34;
  if (os_log_type_enabled((os_log_t)v33, v34))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v72 = v11;
    char v38 = (void *)v37;
    uint64_t v69 = (uint8_t *)v37;
    uint64_t v39 = swift_slowAlloc();
    unint64_t v75 = v39;
    *(_DWORD *)uint64_t v36 = 138543618;
    unint64_t v71 = v33;
    char v40 = *(void **)(v31 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity);
    LODWORD(v70) = v35;
    uint64_t v41 = (uint8_t *)v36;
    v78 = v39;
    v79[0] = (uint64_t)v40;
    id v42 = v40;
    sub_1DA98C858();
    *char v38 = v40;
    uint64_t v11 = v72;
    swift_release_n();
    *(_WORD *)(v36 + 12) = 2082;
    v79[0] = 0;
    v79[1] = 0xE000000000000000;
    sub_1DA79ED98(a3, a4);
    swift_bridgeObjectRetain();
    sub_1DA98CA18();
    swift_bridgeObjectRelease();
    strcpy((char *)v79, "<LocaleToken: ");
    HIBYTE(v79[1]) = -18;
    sub_1DA9894D8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    uint64_t v68 = MEMORY[0x1E4FBC840] + 8;
    sub_1DA98BE98();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA872360(a3, a4, v20);
    uint64_t v43 = sub_1DA8C5E00(v79[0], v79[1], (uint64_t *)&v78);
    uint64_t v67 = v36;
    v79[0] = v43;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    uint64_t v26 = v74;
    uint64_t v27 = *(void (**)(NSObject *, uint64_t))(v74 + 8);
    uint64_t v28 = v76;
    v27(v76, v11);
    sub_1DA872360(a3, a4, v20);
    sub_1DA872360(a3, a4, v20);
    long long v44 = v71;
    _os_log_impl(&dword_1DA795000, (os_log_t)v71, (os_log_type_t)v70, "Language override detected for %{public}@: %{public}s", v41, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
    uint64_t v45 = v69;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v45, -1, -1);
    uint64_t v46 = v75;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v46, -1, -1);
    MEMORY[0x1E0178DA0](v67, -1, -1);

    sub_1DA872360(a3, a4, v20);
  }
  else
  {

    sub_1DA872360(a3, a4, a5);
    sub_1DA872360(a3, a4, a5);
    swift_release_n();
    sub_1DA872360(a3, a4, a5);
    uint64_t v26 = v74;
    uint64_t v27 = *(void (**)(NSObject *, uint64_t))(v74 + 8);
    uint64_t v28 = v76;
    v27(v76, v11);
  }
  unint64_t v29 = v73;
LABEL_20:
  (*(void (**)(NSObject *, char *, uint64_t))(v26 + 16))(v28, v29, v11);
  v79[0] = a3;
  v79[1] = a4;
  v79[2] = v20;
  sub_1DA8EAD8C(v79);
  return ((uint64_t (*)(char *, uint64_t))v27)(v29, v11);
}

uint64_t sub_1DA8EAD8C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = v1 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager + 24);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager + 32);
  __swift_project_boxed_opaque_existential_0((void *)(v1 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager), v6);
  ExtensionManaging.extension(for:)(*(void *)(v1 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity), v6, v7);
  if (!v24) {
    return sub_1DA7A1AE0((uint64_t)&v23, &qword_1EBE58E50);
  }
  sub_1DA7A19A4(&v23, (uint64_t)v26);
  if (v4)
  {
    sub_1DA79ED98(v2, v3);
    sub_1DA98A718();
  }
  sub_1DA98B708();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  sub_1DA9899C8();
  swift_endAccess();
  uint64_t v8 = v27;
  uint64_t v9 = v28;
  __swift_project_boxed_opaque_existential_0(v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v9 + 216))(v8, v9);
  uint64_t v11 = v27;
  uint64_t v10 = v28;
  __swift_project_boxed_opaque_existential_0(v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v10 + 224))(v11, v10);
  sub_1DA98B6F8();
  swift_retain();
  sub_1DA98A6A8();
  sub_1DA7A1A44(v5, (uint64_t)v20);
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_0(v20, v21);
  swift_beginAccess();
  uint64_t v14 = sub_1DA9899C8();
  uint64_t v16 = v15;
  swift_endAccess();
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 40))(&v23, v14, v16, v12, v13);
  swift_bridgeObjectRelease();
  uint64_t v17 = v24;
  if (v24)
  {
    uint64_t v18 = v25;
    __swift_project_boxed_opaque_existential_0(&v23, v24);
    (*(void (**)(uint64_t, uint64_t))(v18 + 208))(v17, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    sub_1DA7A1AE0((uint64_t)&v23, &qword_1EBE58E50);
  }
  sub_1DA98A6F8();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t sub_1DA8EB05C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager);

  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__systemProvider);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA8EB0BC()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  uint64_t v2 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager);

  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__systemProvider);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA8EB1AC()
{
  return type metadata accessor for BundleEnvironmentProvider();
}

uint64_t type metadata accessor for BundleEnvironmentProvider()
{
  uint64_t result = qword_1EBE5A510;
  if (!qword_1EBE5A510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DA8EB200()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1DA8EB260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA8EB2C8(NSObject *a1)
{
  return sub_1DA8EA4C8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_1DA8EB2D8(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1DA79ED98(result, a2);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DA8EB318()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA8EB350()
{
  return sub_1DA8E9C40();
}

uint64_t sub_1DA8EB358(unint64_t *a1)
{
  return sub_1DA8E9C9C(a1, v1);
}

uint64_t sub_1DA8EB360(uint64_t a1)
{
  return sub_1DA8E9D08(a1, v1);
}

uint64_t sub_1DA8EB368(uint64_t *a1)
{
  return sub_1DA8E9EC0(a1);
}

uint64_t sub_1DA8EB370()
{
  return sub_1DA7A0410(&qword_1EA8E6640, &qword_1EA8E6648);
}

void sub_1DA8EB3AC(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
}

void (*sub_1DA8EB3BC(void (**a1)(uint64_t *a1), void *a2))(uint64_t *a1)
{
  uint64_t result = (void (*)(uint64_t *))malloc(0x28uLL);
  *a1 = result;
  if (*a2 >= *(void *)(*(void *)v2 + 16))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)v2 + 40 * *a2;
    uint64_t v8 = *(void *)(v7 + 48);
    *((void *)result + 3) = v8;
    unint64_t v9 = *(void *)(v7 + 56);
    *((void *)result + 4) = v9;
    char v10 = *(unsigned char *)(v7 + 64);
    *((unsigned char *)result + 17) = v10;
    swift_bridgeObjectRetain();
    sub_1DA7A1AA8(v8, v9, v10);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v6 = v8;
    *((void *)v6 + 1) = v9;
    *((unsigned char *)v6 + 16) = v10;
    return sub_1DA8EB47C;
  }
  return result;
}

void sub_1DA8EB47C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_1DA79EB2C(*(void *)(*a1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 17));

  free((void *)v1);
}

uint64_t *sub_1DA8EB4BC@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  if (*result < 0 || (uint64_t v4 = result[1], result = *v2, (*v2)[2] < v4))
  {
    __break(1u);
  }
  else
  {
    *a2 = v3;
    a2[1] = v4;
    a2[2] = result;
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DA8EB4E8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *a1 = *(void *)v1;
  a1[1] = 0;
  a1[2] = v2;
  return swift_bridgeObjectRetain();
}

BOOL sub_1DA8EB4FC()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

void sub_1DA8EB510(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t *sub_1DA8EB520@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    unint64_t v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA8EB558@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1DA8EC618(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_1DA8EB590(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result) {
    return 0;
  }
  unint64_t v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    uint64_t result = 0;
    unint64_t v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      uint64_t result = (uint64_t *)((char *)result + 1);
      if (v4 == result) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_1DA8EB5E8(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }
  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }
  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_1DA8EB604(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_1DA8EB620(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

void *sub_1DA8EB63C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_1DA8EB654(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

void sub_1DA8EB66C(void *a1@<X8>)
{
  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_1DA8EB678()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_1DA8EB684()
{
  return 2;
}

void *sub_1DA8EB68C()
{
  uint64_t v1 = sub_1DA8077F8(*v0);
  swift_bridgeObjectRelease();
  return v1;
}

void *sub_1DA8EB6C4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA8EB7CC(a1, a2, a3, *v3);
}

uint64_t sub_1DA8EB6CC()
{
  return sub_1DA98C1E8();
}

unint64_t sub_1DA8EB6F4()
{
  unint64_t result = qword_1EA8E6650;
  if (!qword_1EA8E6650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6650);
  }
  return result;
}

uint64_t sub_1DA8EB748()
{
  return MEMORY[0x1E4FBB568];
}

uint64_t sub_1DA8EB754()
{
  return sub_1DA7A0410(&qword_1EA8E6658, &qword_1EA8E6660);
}

uint64_t sub_1DA8EB790()
{
  return sub_1DA7A0410(&qword_1EA8E6668, &qword_1EA8E6670);
}

void *sub_1DA8EB7CC(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
  {
LABEL_11:
    uint64_t v5 = 0;
    goto LABEL_15;
  }
  uint64_t v5 = a3;
  if (!a3)
  {
LABEL_15:
    *unint64_t result = a4;
    result[1] = v5;
    return (void *)v5;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = *(void *)(a4 + 16);
    if (v6)
    {
      uint64_t v14 = result;
      uint64_t v7 = a2;
      uint64_t v8 = (char *)(a4 + 64);
      unint64_t v9 = 1;
      while (1)
      {
        uint64_t v10 = *((void *)v8 - 2);
        unint64_t v11 = *((void *)v8 - 1);
        char v12 = *v8;
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v10, v11, v12);
        unint64_t result = (void *)swift_bridgeObjectRelease();
        *(void *)uint64_t v7 = v10;
        *(void *)(v7 + 8) = v11;
        *(unsigned char *)(v7 + 16) = v12;
        if (v5 == v9) {
          break;
        }
        if (v6 == v9)
        {
          uint64_t v5 = v6;
          break;
        }
        v8 += 40;
        v7 += 24;
        if (v9++ >= *(void *)(a4 + 16))
        {
          __break(1u);
          goto LABEL_11;
        }
      }
      unint64_t result = v14;
    }
    else
    {
      uint64_t v5 = 0;
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void *sub_1DA8EB8CC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA8EBB14(a1, a2, a3, a4, &qword_1EBE5AB88, 0x1E4F58EB8, (unint64_t *)&qword_1EA8E5DB0);
}

uint64_t sub_1DA8EB8E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
LABEL_36:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_1DA7A1A44(*(void *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_1DA7A19A4(v21, (uint64_t)v22);
    unint64_t result = sub_1DA7A19A4(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      uint64_t v13 = a3;
LABEL_35:
      uint64_t v7 = v20;
      goto LABEL_36;
    }
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v17);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v12 = v17 + 1;
  if (v17 + 2 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  int64_t v12 = v17 + 2;
  if (v17 + 3 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  int64_t v19 = v17 + 4;
  int64_t v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    unint64_t v9 = 0;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    int64_t v17 = v19;
LABEL_23:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      int64_t v12 = v14 - 1;
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void *sub_1DA8EBAF8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA8EBB14(a1, a2, a3, a4, (unint64_t *)&qword_1EBE66D48, 0x1E4F58E18, (unint64_t *)&qword_1EBE64000);
}

void *sub_1DA8EBB14(void *result, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7 = a4;
  unint64_t v9 = a2;
  unint64_t v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1DA98C948();
    sub_1DA7A1A08(0, a5);
    sub_1DA8EC6F0(a7, a5);
    unint64_t result = (void *)sub_1DA98C418();
    uint64_t v7 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    int64_t v14 = v36;
    unint64_t v15 = v37;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v16 = 0;
    goto LABEL_38;
  }
  int64_t v14 = 0;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v12 = a4 + 56;
  uint64_t v13 = ~v24;
  uint64_t v25 = -v24;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v15 = v26 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v16 = 0;
LABEL_38:
    uint64_t v27 = v29;
LABEL_41:
    *uint64_t v27 = v7;
    v27[1] = v12;
    _OWORD v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (void *)v16;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v16 = 0;
  int64_t v30 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_1DA98C988()) {
        goto LABEL_40;
      }
      sub_1DA7A1A08(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v19 = v32;
      unint64_t result = (void *)swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v20 >= v30)
    {
      unint64_t v15 = 0;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v20);
    if (v21) {
      goto LABEL_23;
    }
    int64_t v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      unint64_t v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30) {
        goto LABEL_44;
      }
      unint64_t v21 = *(void *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        int64_t v20 = v14 + 3;
        goto LABEL_23;
      }
      int64_t v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        unint64_t v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (!v21)
      {
        int64_t v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          unint64_t v15 = 0;
          int64_t v14 = v22;
          goto LABEL_40;
        }
        unint64_t v21 = *(void *)(v12 + 8 * v20);
        if (!v21)
        {
          int64_t v23 = v14 + 6;
          while (v30 != v23)
          {
            unint64_t v21 = *(void *)(v12 + 8 * v23++);
            if (v21)
            {
              int64_t v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v15 = 0;
          int64_t v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v20 = v22;
LABEL_23:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v14 = v20;
LABEL_7:
    unint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    id v19 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      uint64_t v16 = a3;
LABEL_40:
      uint64_t v13 = v28;
      uint64_t v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void *sub_1DA8EBE10(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = *(void **)(*(void *)(a4 + 48) + 8 * v16);
    *uint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    unint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1DA8EC00C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    unint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1DA7F7A84(0, v1, 0);
    for (uint64_t i = a1 + 32; ; i += 48)
    {
      sub_1DA8EC740(i, (uint64_t)v20);
      uint64_t v5 = v20[0];
      uint64_t v6 = v20[1];
      sub_1DA800210((uint64_t)v21, (uint64_t)v19);
      uint64_t v7 = sub_1DA848368((uint64_t)v19);
      if (v9 == -1) {
        break;
      }
      uint64_t v10 = v7;
      uint64_t v11 = v8;
      char v12 = v9;
      sub_1DA800210((uint64_t)v21, (uint64_t)v19);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      sub_1DA7A1AE0((uint64_t)v20, (uint64_t *)&unk_1EBE58E98);
      unint64_t v2 = v22;
      int64_t v18 = v1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA7F7A84(0, *(void *)(v2 + 16) + 1, 1);
        unint64_t v2 = v22;
      }
      unint64_t v14 = *(void *)(v2 + 16);
      unint64_t v13 = *(void *)(v2 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1DA7F7A84(v13 > 1, v14 + 1, 1);
        unint64_t v2 = v22;
      }
      *(void *)(v2 + 16) = v14 + 1;
      unint64_t v15 = v2 + 40 * v14;
      *(void *)(v15 + 32) = v5;
      *(void *)(v15 + 40) = v6;
      *(void *)(v15 + 48) = v10;
      *(void *)(v15 + 56) = v11;
      *(unsigned char *)(v15 + 64) = v12;
      int64_t v1 = v18 - 1;
      if (v18 == 1) {
        return v2;
      }
    }
    sub_1DA800210((uint64_t)v21, (uint64_t)v19);
    sub_1DA98CA18();
    swift_bridgeObjectRelease();
    sub_1DA98CFF8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    unint64_t v2 = 0xD00000000000002ELL;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    sub_1DA8EC7A8();
    swift_allocError();
    *unint64_t v16 = 0xD00000000000002ELL;
    v16[1] = 0x80000001DA9A2210;
    swift_willThrow();
    sub_1DA7A1AE0((uint64_t)v20, (uint64_t *)&unk_1EBE58E98);
    swift_release();
  }
  return v2;
}

unint64_t sub_1DA8EC274(void *a1)
{
  unint64_t v3 = (unint64_t)objc_msgSend(a1, sel_count);
  if ((v3 & 0x8000000000000000) != 0) {
    goto LABEL_14;
  }
  unint64_t v4 = v3;
  if (v3)
  {
    uint64_t v1 = 0;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    while (v4 != v1)
    {
      id v6 = objc_msgSend(a1, sel_keyAtIndex_, v1);
      if (!v6) {
        goto LABEL_15;
      }
      uint64_t v7 = v6;
      uint64_t v8 = sub_1DA98C038();
      uint64_t v10 = v9;

      if (!objc_msgSend(a1, sel_objectAtIndex_, v1))
      {
        *(void *)&long long v23 = 0;
        *((void *)&v23 + 1) = 0xE000000000000000;
        sub_1DA98CA18();
        sub_1DA98C148();
        sub_1DA98C148();
        goto LABEL_17;
      }
      sub_1DA98C8C8();
      swift_unknownObjectRelease();
      sub_1DA7A1930(&v23, v25);
      *(void *)&long long v23 = v8;
      *((void *)&v23 + 1) = v10;
      sub_1DA800210((uint64_t)v25, (uint64_t)v24);
      uint64_t v20 = v8;
      uint64_t v21 = v10;
      sub_1DA800210((uint64_t)v24, (uint64_t)v22);
      *(void *)&long long v18 = v8;
      *((void *)&v18 + 1) = v10;
      sub_1DA7A1930(v22, v19);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_1DA7CA508(0, v5[2] + 1, 1, v5);
      }
      unint64_t v12 = v5[2];
      unint64_t v11 = v5[3];
      if (v12 >= v11 >> 1) {
        uint64_t v5 = sub_1DA7CA508((void *)(v11 > 1), v12 + 1, 1, v5);
      }
      ++v1;
      v5[2] = v12 + 1;
      unint64_t v13 = &v5[6 * v12];
      long long v14 = v19[1];
      void v13[3] = v19[0];
      v13[4] = v14;
      v13[2] = v18;
      sub_1DA7A1AE0((uint64_t)&v23, (uint64_t *)&unk_1EBE58EC0);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      if (v4 == v1) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    *(void *)&long long v23 = 0;
    *((void *)&v23 + 1) = 0xE000000000000000;
    sub_1DA98CA18();
    sub_1DA98C148();
    uint64_t v20 = v1;
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    while (1)
    {
LABEL_17:
      sub_1DA98CBB8();
      __break(1u);
      swift_bridgeObjectRelease();
      *(void *)&long long v23 = 0;
      *((void *)&v23 + 1) = 0xE000000000000000;
      sub_1DA98CA18();
      sub_1DA98C148();
      uint64_t v20 = v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
      sub_1DA98CB58();
    }
  }
LABEL_12:
  uint64_t v15 = swift_bridgeObjectRetain();
  unint64_t v16 = sub_1DA8EC00C(v15);

  swift_bridgeObjectRelease_n();
  return v16;
}

uint64_t sub_1DA8EC618(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    unint64_t v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1)) {
      unint64_t v3 = a2 - 1;
    }
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL)) {
      unint64_t v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    }
    unint64_t v4 = v3 + 1;
    if (v4 >= 5)
    {
      uint64_t v7 = v4 & 3;
      if ((v4 & 3) == 0) {
        uint64_t v7 = 4;
      }
      unint64_t v5 = v4 - v7;
      int64x2_t v8 = 0uLL;
      v9.i64[0] = 0;
      v9.i64[1] = result;
      int64x2_t v10 = vdupq_n_s64(1uLL);
      unint64_t v11 = v5;
      do
      {
        int64x2_t v8 = vaddq_s64(v8, v10);
        int64x2_t v9 = vaddq_s64(v9, v10);
        v11 -= 4;
      }
      while (v11);
      uint64_t v6 = vaddvq_s64(vaddq_s64(vzip1q_s64(v9, v8), vzip2q_s64(v9, v8)));
    }
    else
    {
      unint64_t v5 = 0;
      uint64_t v6 = result;
    }
    uint64_t v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v13 = v5 + result - a3;
    uint64_t v14 = a2 - v5;
    unint64_t result = v6;
    while (1)
    {
      if (!v13) {
        return 0;
      }
      if (!v12) {
        break;
      }
      ++result;
      ++v12;
      ++v13;
      if (!--v14) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1DA8EC6F0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DA7A1A08(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA8EC740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE58E98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DA8EC7A8()
{
  unint64_t result = qword_1EA8E6678;
  if (!qword_1EA8E6678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6678);
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLResultError()
{
  return &type metadata for SQLResultError;
}

ValueMetadata *type metadata accessor for SQLResult()
{
  return &type metadata for SQLResult;
}

unsigned char *storeEnumTagSinglePayload for SQLResultError.Code(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DA8EC8B8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLResultError.Code()
{
  return &type metadata for SQLResultError.Code;
}

unint64_t sub_1DA8EC8F4()
{
  unint64_t result = qword_1EA8E6680;
  if (!qword_1EA8E6680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6680);
  }
  return result;
}

dispatch_time_t CHDMonotonicTime.init()@<X0>(dispatch_time_t *a1@<X8>)
{
  dispatch_time_t result = CHDMonotonicTimeFromNow(0);
  *a1 = result;
  return result;
}

dispatch_time_t CHDMonotonicTime.advanced(by:)@<X0>(int64_t a1@<X0>, dispatch_time_t *a2@<X8>)
{
  if (a1 < 0)
  {
    if (qword_1EBE59070 != -1) {
      swift_once();
    }
    dispatch_time_t result = qword_1EBE592B0;
  }
  else
  {
    dispatch_time_t result = CHDMonotonicTimePlusInterval(*v2, a1);
  }
  *a2 = result;
  return result;
}

{
  dispatch_time_t *v2;
  dispatch_time_t result;

  dispatch_time_t result = CHDMonotonicTimePlusInterval(*v2, a1);
  *a2 = result;
  return result;
}

BOOL static CHDMonotonicTime.< infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return CHDMonotonicTimeLessThan(*a1, *a2);
}

uint64_t CHDMonotonicTimer.__allocating_init(time:repeat:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  CHDMonotonicTimer.init(time:repeat:)(a1, a2);
  return v4;
}

dispatch_time_t static CHDMonotonicTime.now()@<X0>(dispatch_time_t *a1@<X8>)
{
  dispatch_time_t result = CHDMonotonicTimeFromNow(0);
  *a1 = result;
  return result;
}

dispatch_time_t static CHDMonotonicTime.advancedFromNow(by:)@<X0>(int64_t a1@<X0>, dispatch_time_t *a2@<X8>)
{
  dispatch_time_t result = CHDMonotonicTimeFromNow(a1);
  *a2 = result;
  return result;
}

{
  dispatch_time_t result;

  if (a1 < 0)
  {
    if (qword_1EBE59070 != -1) {
      swift_once();
    }
    dispatch_time_t result = qword_1EBE592B0;
  }
  else
  {
    dispatch_time_t result = CHDMonotonicTimeFromNow(a1);
  }
  *a2 = result;
  return result;
}

void sub_1DA8ECB18()
{
  qword_1EBE592B0 = -1;
}

uint64_t static CHDMonotonicTime.distantFuture.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EBE59070 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_1EBE592B0;
  return result;
}

BOOL static CHDMonotonicTime.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return CHDMonotonicTimeEqual(*a1, *a2);
}

uint64_t static CHDMonotonicTime.earlier(_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)result;
  uint64_t v5 = *(void *)a2;
  if (*(unsigned char *)(result + 8)) {
    uint64_t v6 = *(void *)a2;
  }
  else {
    uint64_t v6 = *(void *)result;
  }
  char v7 = *(unsigned char *)(result + 8) & *(unsigned char *)(a2 + 8);
  if ((*(unsigned char *)(result + 8) & 1) == 0 && (*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    uint64_t result = CHDMonotonicTimeLessThan(*(void *)a2, v4);
    char v7 = 0;
    if (result) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = v4;
    }
  }
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 8) = v7;
  return result;
}

uint64_t CHDMonotonicTime.earlier(_:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *v2;
  if ((*(unsigned char *)(result + 8) & 1) == 0)
  {
    uint64_t v5 = *(void *)result;
    uint64_t result = CHDMonotonicTimeLessThan(*(void *)result, v4);
    if (result) {
      uint64_t v4 = v5;
    }
  }
  *a2 = v4;
  return result;
}

uint64_t CHDMonotonicTime.description.getter()
{
  uint64_t v1 = *v0;
  if (qword_1EBE59070 != -1) {
    swift_once();
  }
  if (CHDMonotonicTimeEqual(v1, qword_1EBE592B0)) {
    return 0x46746E6174736964;
  }
  else {
    return sub_1DA98CDD8();
  }
}

BOOL sub_1DA8ECD44(uint64_t *a1, uint64_t *a2)
{
  return CHDMonotonicTimeLessThan(*a1, *a2);
}

BOOL sub_1DA8ECD64(uint64_t *a1, uint64_t *a2)
{
  return !CHDMonotonicTimeLessThan(*a2, *a1);
}

BOOL sub_1DA8ECD8C(uint64_t *a1, uint64_t *a2)
{
  return !CHDMonotonicTimeLessThan(*a1, *a2);
}

BOOL sub_1DA8ECDB0(uint64_t *a1, uint64_t *a2)
{
  return CHDMonotonicTimeLessThan(*a2, *a1);
}

uint64_t sub_1DA8ECDD4()
{
  uint64_t v1 = *v0;
  if (qword_1EBE59070 != -1) {
    swift_once();
  }
  if (CHDMonotonicTimeEqual(v1, qword_1EBE592B0)) {
    return 0x46746E6174736964;
  }
  else {
    return sub_1DA98CDD8();
  }
}

BOOL sub_1DA8ECE80(uint64_t *a1, uint64_t *a2)
{
  return CHDMonotonicTimeEqual(*a1, *a2);
}

uint64_t Optional<A>.earlier(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)result;
  uint64_t v5 = *(void *)v2;
  if (*(unsigned char *)(v2 + 8)) {
    uint64_t v6 = *(void *)result;
  }
  else {
    uint64_t v6 = *(void *)v2;
  }
  char v7 = *(unsigned char *)(v2 + 8) & *(unsigned char *)(result + 8);
  if ((*(unsigned char *)(v2 + 8) & 1) == 0 && (*(unsigned char *)(result + 8) & 1) == 0)
  {
    uint64_t result = CHDMonotonicTimeLessThan(*(void *)result, *(void *)v2);
    char v7 = 0;
    if (result) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v5;
    }
  }
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v7;
  return result;
}

void CHDMonotonicTimer.time.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
}

uint64_t CHDMonotonicTimer.interval.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t CHDMonotonicTimer.init(time:repeat:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  *(void *)(v2 + 16) = 0;
  type metadata accessor for UnfairLock();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = (_DWORD *)swift_slowAlloc();
  *uint64_t v6 = 0;
  *(void *)(v5 + 16) = v6;
  *(void *)(v2 + 24) = v5;
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = a2 & ~(a2 >> 63);
  return v2;
}

uint64_t CHDMonotonicTimer.__allocating_init(repeat:)(double a1)
{
  if (a1 <= 0.0)
  {
    __break(1u);
    goto LABEL_11;
  }
  double v2 = a1 * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v2 <= -1.0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v1 = (unint64_t)v2;
  if (((unint64_t)v2 & 0x8000000000000000) != 0)
  {
    if (qword_1EBE59070 == -1)
    {
LABEL_8:
      dispatch_time_t v3 = qword_1EBE592B0;
      goto LABEL_9;
    }
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  dispatch_time_t v3 = CHDMonotonicTimeFromNow((unint64_t)v2);
LABEL_9:
  type metadata accessor for CHDMonotonicTimer();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  type metadata accessor for UnfairLock();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = (_DWORD *)swift_slowAlloc();
  *uint64_t v6 = 0;
  *(void *)(v5 + 16) = v6;
  *(void *)(v4 + 24) = v5;
  *(unsigned char *)(v4 + 32) = 0;
  *(void *)(v4 + 40) = v3;
  *(void *)(v4 + 48) = v1 & ~(v1 >> 63);
  return v4;
}

uint64_t type metadata accessor for CHDMonotonicTimer()
{
  return self;
}

uint64_t sub_1DA8ED0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1DA8ED158(v2, a1, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));

  return swift_release();
}

void sub_1DA8ED158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 32))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v6 = objc_msgSend(objc_allocWithZone((Class)CHDMonotonicTimer), sel_init);
  char v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v6;

  int64x2_t v8 = *(void **)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = *(void *)(a1 + 40);
    uint64_t v10 = *(void *)(a1 + 48);
    uint64_t v11 = swift_allocObject();
    swift_weakInit();
    uint64_t v12 = (void *)swift_allocObject();
    _OWORD v12[2] = v11;
    v12[3] = a2;
    v12[4] = a3;
    v15[4] = sub_1DA8ED660;
    v15[5] = v12;
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 1107296256;
    v15[2] = sub_1DA7A6EE0;
    v15[3] = &block_descriptor_14;
    uint64_t v13 = _Block_copy(v15);
    id v14 = v8;
    swift_retain();
    swift_release();
    objc_msgSend(v14, sel_activateWithTime_repeat_block_, v9, v10, v13);
    _Block_release(v13);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1DA8ED2DC(uint64_t a1, void (*a2)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    if (!*(void *)(result + 48))
    {
      uint64_t v5 = *(void *)(result + 24);
      id v6 = *(os_unfair_lock_s **)(v5 + 16);
      swift_retain();
      os_unfair_lock_lock(v6);
      if ((*(unsigned char *)(v4 + 32) & 1) == 0)
      {
        *(unsigned char *)(v4 + 32) = 1;
        objc_msgSend(*(id *)(v4 + 16), sel_invalidate);
      }
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
      swift_release();
    }
    a2(v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA8ED3A4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    *(unsigned char *)(v0 + 32) = 1;
    objc_msgSend(*(id *)(v0 + 16), sel_invalidate);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));

  return swift_release();
}

uint64_t sub_1DA8ED41C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 32);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v3;
}

uint64_t CHDMonotonicTimer.deinit()
{
  if (*(unsigned char *)(v0 + 32) == 1)
  {

    swift_release();
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CHDMonotonicTimer.__deallocating_deinit()
{
  if (*(unsigned char *)(v0 + 32) == 1)
  {

    swift_release();
    return swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1DA8ED4FC()
{
  unint64_t result = qword_1EBE59078;
  if (!qword_1EBE59078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59078);
  }
  return result;
}

uint64_t method lookup function for CHDMonotonicTimer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CHDMonotonicTimer);
}

uint64_t dispatch thunk of CHDMonotonicTimer.__allocating_init(time:repeat:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of CHDMonotonicTimer.activate(block:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of CHDMonotonicTimer.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of CHDMonotonicTimer.isInvalidated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t sub_1DA8ED5E8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA8ED620()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1DA8ED660()
{
  return sub_1DA8ED2DC(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

void *WidgetCacheURLProvider.__allocating_init(subdirectory:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_allocObject();
  v4[3] = 0;
  v4[2] = 0;
  swift_beginAccess();
  v4[2] = a1;
  v4[3] = a2;
  swift_bridgeObjectRelease();
  v4[4] = 0x742D6F6E6F726863;
  v4[5] = 0xEF656E696C656D69;
  return v4;
}

void *WidgetCacheURLProvider.init(subdirectory:)(uint64_t a1, uint64_t a2)
{
  v2[3] = 0;
  v2[2] = 0;
  swift_beginAccess();
  v2[2] = a1;
  v2[3] = a2;
  swift_bridgeObjectRelease();
  v2[4] = 0x742D6F6E6F726863;
  v2[5] = 0xEF656E696C656D69;
  return v2;
}

unint64_t sub_1DA8ED7B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA9892E8();
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int v59 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DA989478();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  v57 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v56 = (char *)&v47 - v13;
  MEMORY[0x1F4188790](v14);
  unint64_t v60 = (unint64_t)&v47 - v15;
  MEMORY[0x1F4188790](v16);
  long long v18 = (char *)&v47 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v47 - v20;
  swift_beginAccess();
  uint64_t v61 = v2;
  if (*(void *)(v2 + 24))
  {
    unint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v52(v18, a1, v9);
    swift_bridgeObjectRetain();
    sub_1DA9893B8();
    swift_bridgeObjectRelease();
    unint64_t v22 = *(void **)(a1 + *(int *)(type metadata accessor for WidgetCacheKey() + 20));
    if (v22)
    {
      id v23 = v22;
      sub_1DA8EE358(v23);
      sub_1DA9893B8();

      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v18, v9);
  }
  else
  {
    unint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v52(v21, a1, v9);
  }
  uint64_t v24 = type metadata accessor for WidgetCacheKey();
  if (*(void *)(a1 + *(int *)(v24 + 24)) && *(void *)(a1 + *(int *)(v24 + 20)))
  {
    unint64_t v25 = v60;
    sub_1DA8EE030(a1, v60);
    unint64_t v26 = sub_1DA7CA740(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v28 = *(void *)(v26 + 16);
    unint64_t v27 = *(void *)(v26 + 24);
    if (v28 >= v27 >> 1) {
      unint64_t v26 = sub_1DA7CA740(v27 > 1, v28 + 1, 1, v26);
    }
    *(void *)(v26 + 16) = v28 + 1;
    unint64_t v29 = v26;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(v26+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v28, v25, v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v9);
    return v29;
  }
  id v31 = objc_msgSend(self, sel_defaultManager);
  uint64_t v32 = (void *)sub_1DA98C4F8();

  if (!v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v9);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v48 = v21;
  id v33 = v32;
  uint64_t v34 = v59;
  sub_1DA98C4E8();
  id v47 = v33;

  swift_beginAccess();
  unint64_t v35 = sub_1DA8EDFD8();
  sub_1DA98C848();
  uint64_t v51 = v10;
  if (v65)
  {
    int64_t v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    unint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    os_log_type_t v58 = (char **)(v10 + 32);
    char v54 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v49 = v10 + 16;
    unint64_t v60 = MEMORY[0x1E4FBC860];
    char v38 = v56;
    unint64_t v55 = v35;
    uint64_t v53 = MEMORY[0x1E4FBC840] + 8;
    while (1)
    {
      sub_1DA7A1930(&v64, v63);
      sub_1DA800210((uint64_t)v63, (uint64_t)v62);
      int v39 = swift_dynamicCast();
      char v40 = *v36;
      if (v39)
      {
        v40(v6, 0, 1, v9);
        if ((*v37)(v6, 1, v9) != 1)
        {
          uint64_t v56 = *v58;
          ((void (*)(char *, char *, uint64_t))v56)(v38, v6, v9);
          sub_1DA989458();
          swift_bridgeObjectRetain();
          char v41 = sub_1DA98C178();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v41)
          {
            v52(v57, (uint64_t)v38, v9);
            if (swift_isUniquelyReferenced_nonNull_native())
            {
              uint64_t v34 = v59;
              unint64_t v42 = v60;
            }
            else
            {
              unint64_t v42 = sub_1DA7CA740(0, *(void *)(v60 + 16) + 1, 1, v60);
              uint64_t v34 = v59;
            }
            unint64_t v44 = *(void *)(v42 + 16);
            unint64_t v43 = *(void *)(v42 + 24);
            if (v44 >= v43 >> 1) {
              unint64_t v42 = sub_1DA7CA740(v43 > 1, v44 + 1, 1, v42);
            }
            *(void *)(v42 + 16) = v44 + 1;
            uint64_t v45 = v51;
            unint64_t v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
            unint64_t v60 = v42;
            ((void (*)(unint64_t, char *, uint64_t))v56)(v42 + v46 + *(void *)(v51 + 72) * v44, v57, v9);
            (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v9);
          }
          else
          {
            (*v54)(v38, v9);
            uint64_t v34 = v59;
          }
          goto LABEL_16;
        }
      }
      else
      {
        v40(v6, 1, 1, v9);
      }
      sub_1DA802060((uint64_t)v6);
LABEL_16:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
      sub_1DA98C848();
      if (!v65) {
        goto LABEL_29;
      }
    }
  }
  unint64_t v60 = MEMORY[0x1E4FBC860];
LABEL_29:
  (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v7);

  (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v9);
  return v60;
}

unint64_t sub_1DA8EDFD8()
{
  unint64_t result = qword_1EA8E6688[0];
  if (!qword_1EA8E6688[0])
  {
    sub_1DA9892E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA8E6688);
  }
  return result;
}

uint64_t sub_1DA8EE030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1DA989478();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v21[-v11];
  swift_beginAccess();
  if (*(void *)(v3 + 24))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    swift_bridgeObjectRetain();
    sub_1DA9893B8();
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(a1 + *(int *)(type metadata accessor for WidgetCacheKey() + 20));
    if (v13)
    {
      id v14 = v13;
      sub_1DA8EE358(v14);
      sub_1DA9893B8();

      swift_bridgeObjectRelease();
    }
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v12, v9, v6);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v12, a1, v6);
  }
  uint64_t v15 = type metadata accessor for WidgetCacheKey();
  uint64_t v16 = *(void **)(a1 + *(int *)(v15 + 20));
  if (v16)
  {
    uint64_t v17 = *(void **)(a1 + *(int *)(v15 + 24));
    if (v17)
    {
      id v18 = v16;
      id v19 = v17;
      sub_1DA8EE550(v18, v19);
      sub_1DA9893C8();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1DA9893D8();
      swift_bridgeObjectRelease();
    }
  }
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(a2, v12, v6);
}

uint64_t WidgetCacheURLProvider.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WidgetCacheURLProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_1DA8EE30C(uint64_t a1)
{
  return sub_1DA8ED7B0(a1);
}

uint64_t sub_1DA8EE330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA8EE030(a1, a2);
}

uint64_t sub_1DA8EE358(void *a1)
{
  uint64_t v2 = sub_1DA989148();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_kind, v4);
  uint64_t v8 = sub_1DA98C038();
  unint64_t v10 = v9;

  unint64_t v11 = sub_1DA8E76E4(0x32uLL, v8, v10);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = MEMORY[0x1E0177290](v11, v13, v15, v17);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  v26[1] = v18;
  v26[2] = v20;
  sub_1DA989138();
  sub_1DA7DF7A0();
  uint64_t v21 = sub_1DA98C8B8();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  swift_bridgeObjectRelease();
  if (!v23)
  {
    id v24 = objc_msgSend(a1, sel_extensionIdentity);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    uint64_t v21 = sub_1DA9899C8();
    swift_endAccess();
  }
  return v21;
}

uint64_t sub_1DA8EE550(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_intentReference);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_stableHash);

    sub_1DA98CDD8();
    sub_1DA98C148();
  }
  objc_msgSend(a1, sel_family);
  uint64_t v8 = sub_1DA98C568();
  sub_1DA98C148();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  id v6 = objc_msgSend(a2, sel__stringKeyRepresentation);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1DA8EE694@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA8EE6E4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for WidgetCacheURLProvider()
{
  return self;
}

uint64_t method lookup function for WidgetCacheURLProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetCacheURLProvider);
}

uint64_t dispatch thunk of WidgetCacheURLProvider.subdirectory.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.subdirectory.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.subdirectory.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.fileExtension.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.fileExtension.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.fileExtension.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.__allocating_init(subdirectory:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.urls(matching:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.url(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ReloadConfigurationPolicy.configuration(for:entries:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of ReloadConfigurationPolicy.configurationForReloadSuccess(for:entries:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of ReloadConfigurationPolicy.configurationForReloadFailure(for:configuration:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t dispatch thunk of ReloadConfigurationPolicy.permitReload(for:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_1DA8EE8F4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DA8EE93C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  type metadata accessor for _AnyReloadConfigurationPolicyBox();
  *(void *)(v2 + 16) = sub_1DA8EEABC(a1);
  return v2;
}

uint64_t sub_1DA8EE9AC()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 128))();
}

uint64_t sub_1DA8EE9F0()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 136))();
}

uint64_t sub_1DA8EEA34()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 144))();
}

uint64_t sub_1DA8EEA78(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for _AnyReloadConfigurationPolicyBox();
  *(void *)(v2 + 16) = sub_1DA8EEABC(a1);
  return v2;
}

uint64_t sub_1DA8EEABC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 160) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 176), a1);
  return v2;
}

uint64_t sub_1DA8EEB50()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 152))() & 1;
}

uint64_t type metadata accessor for AnyReloadConfigurationPolicy()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DA8EEBB0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DA8EEBE8()
{
  return sub_1DA8EE9AC();
}

uint64_t sub_1DA8EEC0C()
{
  return sub_1DA8EE9F0();
}

uint64_t sub_1DA8EEC30()
{
  return sub_1DA8EEA34();
}

uint64_t sub_1DA8EEC54()
{
  return sub_1DA8EEB50() & 1;
}

void sub_1DA8EEC7C()
{
}

void sub_1DA8EECC8()
{
}

void sub_1DA8EED14()
{
}

void sub_1DA8EED60()
{
}

uint64_t type metadata accessor for _AnyReloadConfigurationPolicyBase()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DA8EEDC4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DA8EEE58()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t sub_1DA8EEE9C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))();
}

uint64_t sub_1DA8EEEE0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))();
}

uint64_t sub_1DA8EEF24()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))() & 1;
}

uint64_t sub_1DA8EEF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(*v3 + 160);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790]();
  unint64_t v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v13 - v10, (uint64_t)v3 + *(void *)(v7 + 176), v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 168) + 48))(a1, a2, a3, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1DA8EF0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(*v3 + 160);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790]();
  unint64_t v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v13 - v10, (uint64_t)v3 + *(void *)(v7 + 176), v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 168) + 56))(a1, a2, a3, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1DA8EF224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *v5;
  uint64_t v12 = *(void *)(*v5 + 160);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v15 = (char *)&v17 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v17 - v14, (uint64_t)v5 + *(void *)(v11 + 176), v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 168) + 64))(a1, a2, a3, a4, a5, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1DA8EF388(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 160);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v11 - v8, (uint64_t)v2 + *(void *)(v5 + 176), v6);
  LOBYTE(a2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 168) + 72))(a1, a2, v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return a2 & 1;
}

uint64_t sub_1DA8EF4D4()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 160) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 176));
}

uint64_t sub_1DA8EF52C()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 160) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 176));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _AnyReloadConfigurationPolicyBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t VariantIdentifier.init(storedKey:variantKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for VariantIdentifier();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 68), a2, a4);
}

uint64_t type metadata accessor for VariantIdentifier()
{
  return swift_getGenericMetadata();
}

uint64_t StatefulStoreReloadEvent.init(key:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for StatefulStoreReloadEvent() + 44);

  return sub_1DA7E80D4(a2, v6);
}

uint64_t type metadata accessor for StatefulStoreReloadEvent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DA8EF7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for VariantIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for VariantReloadResult();
  *(void *)(a3 + *(int *)(result + 68)) = a2;
  return result;
}

uint64_t VariantIdentifier.variantKey.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 68));
}

uint64_t VariantIdentifier.description.getter()
{
  return 0;
}

uint64_t VariantIdentifier.hash(into:)()
{
  return sub_1DA98BFB8();
}

uint64_t static VariantIdentifier.== infix(_:_:)()
{
  if (sub_1DA98BFF8())
  {
    type metadata accessor for VariantIdentifier();
    char v0 = sub_1DA98BFF8();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t VariantIdentifier.hashValue.getter()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA8EFA74()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA8EFABC()
{
  return static VariantIdentifier.== infix(_:_:)();
}

uint64_t VariantReloadResult.variantIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for VariantIdentifier();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1, v3);
}

void *VariantReloadResult.error.getter(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + *(int *)(a1 + 68));
  id v3 = v2;
  return v2;
}

uint64_t (*StatefulStoreReloadEvent.key.modify())()
{
  return CGSizeMake;
}

uint64_t StatefulStoreReloadEvent.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA8EFBB0(v2 + *(int *)(a1 + 44), a2);
}

uint64_t sub_1DA8EFBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReloadConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t StatefulStoreReloadEvent.configuration.setter(uint64_t a1, uint64_t a2)
{
  return sub_1DA8C8C14(a1, v2 + *(int *)(a2 + 44));
}

uint64_t (*StatefulStoreReloadEvent.configuration.modify())()
{
  return CGSizeMake;
}

uint64_t static StatefulStoreReloadEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1DA98BFF8() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for StatefulStoreReloadEvent() + 44);

  return _s9ChronoKit19ReloadConfigurationV2eeoiySbAC_ACtFZ_0(a1 + v4, a2 + v4);
}

uint64_t sub_1DA8EFCD8(uint64_t a1, uint64_t a2)
{
  return static StatefulStoreReloadEvent.== infix(_:_:)(a1, a2);
}

uint64_t _s9ChronoKit17VariantIdentifierV9storedKeyxvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t _s9ChronoKit24StatefulStoreReloadEventV3keyxvs_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*StatefulStoreReloadVariantsEvent.key.modify())()
{
  return CGSizeMake;
}

uint64_t StatefulStoreReloadVariantsEvent.variantKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StatefulStoreReloadVariantsEvent.variantKeys.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*StatefulStoreReloadVariantsEvent.variantKeys.modify())()
{
  return CGSizeMake;
}

uint64_t StatefulStoreReloadVariantsEvent.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA8EFBB0(v2 + *(int *)(a1 + 40), a2);
}

uint64_t StatefulStoreReloadVariantsEvent.configuration.setter(uint64_t a1, uint64_t a2)
{
  return sub_1DA8C8C14(a1, v2 + *(int *)(a2 + 40));
}

uint64_t (*StatefulStoreReloadVariantsEvent.configuration.modify())()
{
  return CGSizeMake;
}

uint64_t StatefulStoreReloadVariantsEvent.init(key:variantKeys:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t v8 = type metadata accessor for StatefulStoreReloadVariantsEvent();
  *(void *)(a5 + *(int *)(v8 + 36)) = a2;
  uint64_t v9 = a5 + *(int *)(v8 + 40);

  return sub_1DA7E80D4(a3, v9);
}

uint64_t type metadata accessor for StatefulStoreReloadVariantsEvent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DA8EFEE4()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of ContentEntry.content.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContentEntry.content.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ContentEntry.content.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ContentEntry.contentLoadErrorDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ContentEntry.contentLoadErrorDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ContentEntry.contentLoadErrorDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of ContentEntry.contentLoadError.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ContentEntry.contentLoadError.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of ContentEntry.contentLoadError.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of ContentEntry.protectionType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ContentEntry.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t sub_1DA8EFFDC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DA8F00AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_1DA8F0208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_1DA8F02AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1DA8F0354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1DA8F03FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1DA8F04A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1DA8F054C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_1DA8F0744(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1DA8F0A10);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          id v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t sub_1DA8F0A38()
{
  uint64_t result = type metadata accessor for VariantIdentifier();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DA8F0AE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  int v12 = *(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80);
  if ((v12 & 0x1000F8) != 0 || ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + (((v12 & 0xF8 | 7u) + 16) & ~(unint64_t)(v12 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v15, ((unint64_t)a2 + v10) & v15, v7);
    unsigned int v16 = *(void **)(((unint64_t)a2 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
    id v17 = v16;
    *(void *)(((unint64_t)v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) = v16;
  }
  return v4;
}

void sub_1DA8F0C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56);
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v7 = v6 + 8;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v5 + v8;
  (*(void (**)(uint64_t))(v6 + 8))((v5 + v8 + a1) & ~v8);
  uint64_t v10 = *(void **)((a1 + *(void *)(v7 + 56) + (v9 & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1DA8F0D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))((v7 + v10 + a1) & ~v10, (v7 + v10 + a2) & ~v10);
  uint64_t v12 = (v11 & ~v10) + *(void *)(v9 + 48) + 7;
  uint64_t v13 = (void *)((v12 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = *(void **)((v12 + a2) & 0xFFFFFFFFFFFFFFF8);
  id v15 = v14;
  *uint64_t v13 = v14;
  return a1;
}

uint64_t sub_1DA8F0E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))((v7 + v10 + a1) & ~v10, (v7 + v10 + a2) & ~v10);
  uint64_t v12 = (v11 & ~v10) + *(void *)(v9 + 40) + 7;
  uint64_t v13 = (void **)((v12 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = *(void **)((v12 + a2) & 0xFFFFFFFFFFFFFFF8);
  id v15 = v14;
  unsigned int v16 = *v13;
  *uint64_t v13 = v14;

  return a1;
}

uint64_t sub_1DA8F0F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))((v7 + v10 + a1) & ~v10, (v7 + v10 + a2) & ~v10);
  uint64_t v12 = (v11 & ~v10) + *(void *)(v9 + 32) + 7;
  *(void *)((v12 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v12 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DA8F0FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))((v7 + v10 + a1) & ~v10, (v7 + v10 + a2) & ~v10);
  uint64_t v12 = (v11 & ~v10) + *(void *)(v9 + 24) + 7;
  uint64_t v13 = (void **)((v12 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = *v13;
  *uint64_t v13 = *(void **)((v12 + a2) & 0xFFFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1DA8F10C0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v5) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (v10 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  else {
    unsigned int v11 = v10;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  uint64_t v13 = (v12 & ~v9) + *(void *)(*(void *)(v6 - 8) + 64);
  if (v11 < a2)
  {
    unint64_t v14 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = a2 - v11 + 1;
    }
    if (v15 >= 0x10000) {
      unsigned int v16 = 4;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v15 < 0x100) {
      unsigned int v16 = 1;
    }
    if (v15 >= 2) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    switch(v17)
    {
      case 1:
        int v18 = *((unsigned __int8 *)a1 + v14);
        if (!*((unsigned char *)a1 + v14)) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v18 = *(unsigned __int16 *)((char *)a1 + v14);
        if (*(_WORD *)((char *)a1 + v14)) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DA8F12B0);
      case 4:
        int v18 = *(_DWORD *)((char *)a1 + v14);
        if (!v18) {
          break;
        }
LABEL_25:
        int v20 = v18 - 1;
        if ((v14 & 0xFFFFFFF8) != 0)
        {
          int v20 = 0;
          int v21 = *a1;
        }
        else
        {
          int v21 = 0;
        }
        return v11 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  if (v10 < 0x7FFFFFFE)
  {
    unint64_t v22 = *(void *)(((unint64_t)a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v22 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    if ((v22 + 1) >= 2) {
      return v22;
    }
    else {
      return 0;
    }
  }
  else if (v5 >= v8)
  {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else
  {
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v12) & ~v9, v8, v6);
  }
}

void sub_1DA8F12C4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = v11 + v12;
  size_t v16 = ((v11 + v12) & ~v12) + *(void *)(*(void *)(v8 - 8) + 64);
  unint64_t v17 = ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v14 >= a3)
  {
    int v21 = 0;
    int v22 = a2 - v14;
    if (a2 <= v14)
    {
LABEL_20:
      switch(v21)
      {
        case 1:
          a1[v17] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)&a1[v17] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_62;
        case 4:
          *(_DWORD *)&a1[v17] = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            if (v13 < 0x7FFFFFFE)
            {
              unint64_t v28 = (void *)((unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8);
              if (a2 > 0x7FFFFFFE)
              {
                *unint64_t v28 = 0;
                *(_DWORD *)unint64_t v28 = a2 - 0x7FFFFFFF;
              }
              else
              {
                *unint64_t v28 = a2;
              }
            }
            else if (v13 >= a2)
            {
              if (v7 >= v10)
              {
                id v31 = *(void (**)(unsigned char *))(v6 + 56);
                v31(a1);
              }
              else
              {
                unint64_t v29 = (unint64_t)&a1[v15] & ~v12;
                int64_t v30 = *(void (**)(unint64_t))(v9 + 56);
                v30(v29);
              }
            }
            else
            {
              if (v16 <= 3) {
                int v25 = ~(-1 << (8 * v16));
              }
              else {
                int v25 = -1;
              }
              if (v16)
              {
                int v26 = v25 & (~v13 + a2);
                if (v16 <= 3) {
                  int v27 = v16;
                }
                else {
                  int v27 = 4;
                }
                bzero(a1, v16);
                switch(v27)
                {
                  case 2:
                    *(_WORD *)a1 = v26;
                    break;
                  case 3:
                    *(_WORD *)a1 = v26;
                    a1[2] = BYTE2(v26);
                    break;
                  case 4:
                    *(_DWORD *)a1 = v26;
                    break;
                  default:
                    *a1 = v26;
                    break;
                }
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v18 = a3 - v14;
    if (((v16 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v19 = v18 + 1;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v19 >= 0x10000) {
      int v20 = 4;
    }
    else {
      int v20 = 2;
    }
    if (v19 < 0x100) {
      int v20 = 1;
    }
    if (v19 >= 2) {
      int v21 = v20;
    }
    else {
      int v21 = 0;
    }
    int v22 = a2 - v14;
    if (a2 <= v14) {
      goto LABEL_20;
    }
  }
  if (((v16 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v23 = v22;
  }
  else {
    int v23 = 1;
  }
  if (((v16 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v24 = ~v14 + a2;
    bzero(a1, ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v24;
  }
  switch(v21)
  {
    case 1:
      a1[v17] = v23;
      break;
    case 2:
      *(_WORD *)&a1[v17] = v23;
      break;
    case 3:
LABEL_62:
      __break(1u);
      JUMPOUT(0x1DA8F1600);
    case 4:
      *(_DWORD *)&a1[v17] = v23;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for VariantReloadResult()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DA8F1650()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ReloadConfiguration(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DA8F171C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1DA989638();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10 & 0xF8 | 7;
  uint64_t v12 = v7 + v11;
  uint64_t v13 = (v7 + v11) & ~v11;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v14 = *(void *)(v9 + 64);
  }
  else {
    size_t v14 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v15 = *(_DWORD *)(v6 + 80) & 0xF8 | v11;
  int v16 = (*(_DWORD *)(v6 + 80) | v10) & 0x100000;
  if (v15 != 7 || v16 != 0 || v13 + (((v14 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    uint64_t v20 = v8;
    uint64_t v21 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v22 = ((unint64_t)a1 + v12) & v21;
    int v23 = (char *)(((unint64_t)a2 + v12) & v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v23, 1, v20))
    {
      memcpy((void *)(((unint64_t)a1 + v12) & v21), v23, v14);
    }
    else
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v21, v23, v20);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v12) & v21, 0, 1, v20);
    }
    unint64_t v24 = (unint64_t)&v23[v14];
    *(unsigned char *)(v22 + v14) = v23[v14];
    unint64_t v25 = (v22 + v14) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = *(void *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8);
    sub_1DA7A19BC(v27);
    *(void *)(v25 + 8) = v27;
    unint64_t v28 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v28 = *(void *)v29;
    *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  }
  return a1;
}

unint64_t sub_1DA8F195C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_1DA989638();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  uint64_t v8 = (v4 + a1 + v7) & ~v7;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = *(void *)(v6 + 64) + v8;
  if (!*(_DWORD *)(v6 + 84)) {
    ++v9;
  }
  unint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8);

  return sub_1DA7E8048(v10);
}

uint64_t sub_1DA8F1A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_1DA989638();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (char *)((v6 + v9 + a1) & ~v9);
  uint64_t v12 = (char *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
    if (v13) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v12, v7);
    unint64_t v17 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v16 = v8 + 56;
    v17(v11, 0, 1, v7);
    int v13 = *(_DWORD *)(v16 + 28);
    size_t v14 = *(void *)(v16 + 8);
  }
  if (v13) {
    size_t v18 = v14;
  }
  else {
    size_t v18 = v14 + 1;
  }
  unint64_t v19 = (unint64_t)&v11[v18];
  unint64_t v20 = (unint64_t)&v12[v18];
  *(unsigned char *)unint64_t v19 = *(unsigned char *)v20;
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = *(void *)((v20 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_1DA7A19BC(v23);
  *(void *)(v21 + 8) = v23;
  unint64_t v24 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  return a1;
}

uint64_t sub_1DA8F1C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_1DA989638();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (char *)((v6 + v9 + a1) & ~v9);
  uint64_t v12 = (char *)((v10 + a2) & ~v9);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v14 = v13(v11, 1, v7);
  int v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v11, v12, v7);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v11, v12, v18);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v19 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v8 + 64) + 1;
  }
  unint64_t v20 = (unint64_t)&v11[v19];
  unint64_t v21 = (unint64_t)&v12[v19];
  *(unsigned char *)unint64_t v20 = *(unsigned char *)v21;
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = *(void *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_1DA7A19BC(v24);
  unint64_t v25 = *(void *)(v22 + 8);
  *(void *)(v22 + 8) = v24;
  sub_1DA7E8048(v25);
  unint64_t v26 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  return a1;
}

uint64_t sub_1DA8F1E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_1DA989638();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (char *)((v6 + v9 + a1) & ~v9);
  uint64_t v12 = (char *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
    if (v13) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v12, v7);
    size_t v17 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v16 = v8 + 56;
    v17(v11, 0, 1, v7);
    int v13 = *(_DWORD *)(v16 + 28);
    size_t v14 = *(void *)(v16 + 8);
  }
  if (v13) {
    size_t v18 = v14;
  }
  else {
    size_t v18 = v14 + 1;
  }
  unint64_t v19 = (unint64_t)&v11[v18];
  unint64_t v20 = (unint64_t)&v12[v18];
  *(unsigned char *)unint64_t v19 = *(unsigned char *)v20;
  v19 &= 0xFFFFFFFFFFFFFFF8;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  unint64_t v21 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  return a1;
}

uint64_t sub_1DA8F1FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_1DA989638();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (char *)((v6 + v9 + a1) & ~v9);
  uint64_t v12 = (char *)((v10 + a2) & ~v9);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v14 = v13(v11, 1, v7);
  int v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v11, v12, v7);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v11, v12, v18);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v19 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v8 + 64) + 1;
  }
  unint64_t v20 = (unint64_t)&v11[v19];
  unint64_t v21 = (unint64_t)&v12[v19];
  *(unsigned char *)unint64_t v20 = *(unsigned char *)v21;
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = *(void *)((v20 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)((v20 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_1DA7E8048(v24);
  unint64_t v25 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  return a1;
}

uint64_t sub_1DA8F21D8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_1DA989638();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 84);
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v12 <= 0xFE) {
    unsigned int v13 = 254;
  }
  else {
    unsigned int v13 = v12;
  }
  if (v13 <= v7) {
    unsigned int v14 = v7;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(void *)(*(void *)(v8 - 8) + 64);
  if (!v11) {
    ++v15;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v16 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  uint64_t v17 = *(void *)(v6 + 64) + v16;
  if (a2 <= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = (((v15 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + (v17 & ~v16) + 9;
  char v19 = 8 * v18;
  if (v18 <= 3)
  {
    unsigned int v22 = ((a2 - v14 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v22))
    {
      int v20 = *(_DWORD *)((char *)a1 + v18);
      if (!v20) {
        goto LABEL_33;
      }
      goto LABEL_23;
    }
    if (v22 > 0xFF)
    {
      int v20 = *(unsigned __int16 *)((char *)a1 + v18);
      if (!*(unsigned __int16 *)((char *)a1 + v18)) {
        goto LABEL_33;
      }
      goto LABEL_23;
    }
    if (v22 < 2)
    {
LABEL_33:
      if (v7 >= v13)
      {
        unint64_t v28 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
        return v28(a1, v7, v5);
      }
      else
      {
        unint64_t v26 = ((unint64_t)a1 + v17) & ~v16;
        if (v12 < 0xFE)
        {
          unsigned int v29 = *(unsigned __int8 *)(v26 + v15);
          if (v29 >= 2) {
            return v29 - 1;
          }
          else {
            return 0;
          }
        }
        else
        {
          unsigned int v27 = (*(uint64_t (**)(unint64_t))(v10 + 48))(v26);
          if (v27 >= 2) {
            return v27 - 1;
          }
          else {
            return 0;
          }
        }
      }
    }
  }
  int v20 = *((unsigned __int8 *)a1 + v18);
  if (!*((unsigned char *)a1 + v18)) {
    goto LABEL_33;
  }
LABEL_23:
  int v23 = (v20 - 1) << v19;
  if (v18 <= 3)
  {
    int v24 = v18;
  }
  else
  {
    int v23 = 0;
    int v24 = 4;
  }
  switch(v24)
  {
    case 2:
      int v25 = *a1;
      break;
    case 3:
      int v25 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      break;
    case 4:
      int v25 = *(_DWORD *)a1;
      break;
    default:
      int v25 = *(unsigned __int8 *)a1;
      break;
  }
  return v14 + (v25 | v23) + 1;
}

void sub_1DA8F2480(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v39 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  int v10 = 0;
  uint64_t v11 = *(void *)(sub_1DA989638() - 8);
  uint64_t v12 = v11;
  int v14 = *(_DWORD *)(v11 + 80);
  int v13 = *(_DWORD *)(v11 + 84);
  unsigned int v15 = v13 - 1;
  if (!v13) {
    unsigned int v15 = 0;
  }
  uint64_t v16 = *(void *)(v8 + 64);
  size_t v17 = *(void *)(v11 + 64);
  if (v15 <= 0xFE) {
    unsigned int v18 = 254;
  }
  else {
    unsigned int v18 = v15;
  }
  if (v18 <= v9) {
    unsigned int v19 = v9;
  }
  else {
    unsigned int v19 = v18;
  }
  uint64_t v20 = v14 & 0xF8 | 7;
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (v16 + v20) & ~v20;
  if (v13) {
    size_t v23 = v17;
  }
  else {
    size_t v23 = v17 + 1;
  }
  size_t v24 = (((v23 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v22 + 9;
  if (a3 <= v19) {
    goto LABEL_22;
  }
  if (v24 <= 3)
  {
    unsigned int v26 = ((a3 - v19 + ~(-1 << (8 * v24))) >> (8 * v24)) + 1;
    if (HIWORD(v26))
    {
      int v10 = 4;
      if (v19 < a2) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v26 >= 0x100) {
      int v10 = 2;
    }
    else {
      int v10 = v26 > 1;
    }
LABEL_22:
    if (v19 < a2) {
      goto LABEL_23;
    }
LABEL_15:
    uint64_t v25 = ~v20;
    switch(v10)
    {
      case 1:
        a1[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_30;
      case 2:
        *(_WORD *)&a1[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_30;
      case 3:
        goto LABEL_68;
      case 4:
        *(_DWORD *)&a1[v24] = 0;
        goto LABEL_29;
      default:
LABEL_29:
        if (a2)
        {
LABEL_30:
          if (v9 >= v18)
          {
            unint64_t v35 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
            v35(a1, a2, v9, v7);
          }
          else
          {
            unsigned int v29 = (unsigned char *)((unint64_t)&a1[v21] & v25);
            if (v18 >= a2)
            {
              if (v15 < 0xFE)
              {
                v29[v23] = a2 + 1;
              }
              else if (v15 >= a2)
              {
                char v38 = *(void (**)(unsigned char *, void))(v12 + 56);
                v38(v29, (a2 + 1));
              }
              else
              {
                if (v23 <= 3) {
                  int v36 = ~(-1 << (8 * v23));
                }
                else {
                  int v36 = -1;
                }
                if (v23)
                {
                  int v33 = v36 & (~v15 + a2);
                  if (v23 <= 3) {
                    int v37 = v23;
                  }
                  else {
                    int v37 = 4;
                  }
                  bzero(v29, v23);
                  switch(v37)
                  {
                    case 2:
                      *(_WORD *)unsigned int v29 = v33;
                      break;
                    case 3:
                      *(_WORD *)unsigned int v29 = v33;
                      void v29[2] = BYTE2(v33);
                      break;
                    case 4:
                      goto LABEL_40;
                    default:
                      goto LABEL_60;
                  }
                }
              }
            }
            else
            {
              unsigned int v30 = (v23 & 0xFFFFFFF8) + 23;
              unsigned int v31 = (v30 & 0xFFFFFFF8) + 9;
              int v32 = ~v18 + a2;
              if (v31 >= 4) {
                int v33 = v32;
              }
              else {
                int v33 = v32;
              }
              bzero(v29, (v30 & 0xFFFFFFF8) + 9);
              if (v30 < 0xFFFFFFF8 || v31 > 3) {
LABEL_40:
              }
                *(_DWORD *)unsigned int v29 = v33;
              else {
LABEL_60:
              }
                *unsigned int v29 = v33;
            }
          }
        }
        break;
    }
    return;
  }
  int v10 = 1;
  if (v19 >= a2) {
    goto LABEL_15;
  }
LABEL_23:
  unsigned int v27 = ~v19 + a2;
  if (v24 < 4)
  {
    int v28 = (v27 >> (8 * v24)) + 1;
    bzero(a1, v24);
    *a1 = v27 & ~(-1 << (8 * v24));
  }
  else
  {
    bzero(a1, v24);
    *(_DWORD *)a1 = v27;
    int v28 = 1;
  }
  switch(v10)
  {
    case 1:
      a1[v24] = v28;
      break;
    case 2:
      *(_WORD *)&a1[v24] = v28;
      break;
    case 3:
LABEL_68:
      __break(1u);
      JUMPOUT(0x1DA8F2874);
    case 4:
      *(_DWORD *)&a1[v24] = v28;
      break;
    default:
      return;
  }
}

uint64_t sub_1DA8F28AC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ReloadConfiguration(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DA8F2984(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1DA989638();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10 & 0xF8 | 7;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(v9 + 64);
  }
  else {
    size_t v12 = *(void *)(v9 + 64) + 1;
  }
  int v13 = v10 | *(_DWORD *)(v6 + 80);
  if ((v13 & 0x1000F8) != 0
    || ((v11 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11)
     + (((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 9 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v13 & 0xF8 | 7u) + 16) & ~(unint64_t)(v13 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    uint64_t v16 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    size_t v17 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v18 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *size_t v17 = *v18;
    unsigned int v19 = (void *)(((unint64_t)v17 + v11 + 8) & ~v11);
    uint64_t v20 = (char *)(((unint64_t)v18 + v11 + 8) & ~v11);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    if (v21(v20, 1, v16))
    {
      memcpy(v19, v20, v12);
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v19, v20, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v19, 0, 1, v16);
    }
    unint64_t v22 = (unint64_t)&v20[v12];
    *((unsigned char *)v19 + v12) = v20[v12];
    unint64_t v23 = ((unint64_t)v19 + v12) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = *(void *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
    sub_1DA7A19BC(v25);
    *(void *)(v23 + 8) = v25;
    unint64_t v26 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v26 = *(void *)v27;
    *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  }
  return a1;
}

unint64_t sub_1DA8F2BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1DA989638();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  uint64_t v8 = (v4 + v7 + 8) & ~v7;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = *(void *)(v6 + 64) + v8;
  if (!*(_DWORD *)(v6 + 84)) {
    ++v9;
  }
  unint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8);

  return sub_1DA7E8048(v10);
}

uint64_t sub_1DA8F2D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = sub_1DA989638();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  uint64_t v12 = v11 + 15;
  unint64_t v13 = (unint64_t)v7 + v11 + 15;
  unint64_t v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = (char *)(v13 & v14);
  uint64_t v16 = (char *)(((unint64_t)v8 + v12) & v14);
  size_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v17(v16, 1, v9))
  {
    int v18 = *(_DWORD *)(v10 + 84);
    uint64_t v19 = *(void *)(v10 + 64);
    if (v18) {
      size_t v20 = *(void *)(v10 + 64);
    }
    else {
      size_t v20 = v19 + 1;
    }
    memcpy(v15, v16, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
    unint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    uint64_t v21 = v10 + 56;
    v22(v15, 0, 1, v9);
    int v18 = *(_DWORD *)(v21 + 28);
    uint64_t v19 = *(void *)(v21 + 8);
  }
  if (v18) {
    uint64_t v23 = v19;
  }
  else {
    uint64_t v23 = v19 + 1;
  }
  unint64_t v24 = (unint64_t)&v15[v23];
  unint64_t v25 = (unint64_t)&v16[v23];
  *(unsigned char *)unint64_t v24 = *(unsigned char *)v25;
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = *(void *)((v25 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_1DA7A19BC(v28);
  *(void *)(v26 + 8) = v28;
  unint64_t v29 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  return a1;
}

uint64_t sub_1DA8F2EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1DA989638();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  uint64_t v12 = v11 + 15;
  unint64_t v13 = (unint64_t)v7 + v11 + 15;
  unint64_t v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = (char *)(v13 & v14);
  uint64_t v16 = (char *)(((unint64_t)v8 + v12) & v14);
  size_t v17 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
  int v18 = v17(v13 & v14, 1, v9);
  int v19 = v17((unint64_t)v16, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
      goto LABEL_12;
    }
    int v20 = *(_DWORD *)(v10 + 84);
    size_t v21 = *(void *)(v10 + 64);
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v15, v16, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    int v20 = *(_DWORD *)(v10 + 84);
    size_t v21 = *(void *)(v10 + 64);
  }
  if (v20) {
    size_t v22 = v21;
  }
  else {
    size_t v22 = v21 + 1;
  }
  memcpy(v15, v16, v22);
LABEL_12:
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v23 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v23 = *(void *)(v10 + 64) + 1;
  }
  unint64_t v24 = (unint64_t)&v15[v23];
  unint64_t v25 = (unint64_t)&v16[v23];
  *(unsigned char *)unint64_t v24 = *(unsigned char *)v25;
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = *(void *)((v25 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_1DA7A19BC(v28);
  unint64_t v29 = *(void *)(v26 + 8);
  *(void *)(v26 + 8) = v28;
  sub_1DA7E8048(v29);
  unint64_t v30 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  return a1;
}

uint64_t sub_1DA8F3140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = sub_1DA989638();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  uint64_t v12 = v11 + 15;
  unint64_t v13 = (unint64_t)v7 + v11 + 15;
  unint64_t v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = (char *)(v13 & v14);
  uint64_t v16 = (char *)(((unint64_t)v8 + v12) & v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9))
  {
    int v17 = *(_DWORD *)(v10 + 84);
    size_t v18 = *(void *)(v10 + 64);
    if (v17) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v18 + 1;
    }
    memcpy(v15, v16, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    size_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    uint64_t v20 = v10 + 56;
    v21(v15, 0, 1, v9);
    int v17 = *(_DWORD *)(v20 + 28);
    size_t v18 = *(void *)(v20 + 8);
  }
  if (v17) {
    size_t v22 = v18;
  }
  else {
    size_t v22 = v18 + 1;
  }
  unint64_t v23 = (unint64_t)&v15[v22];
  unint64_t v24 = (unint64_t)&v16[v22];
  *(unsigned char *)unint64_t v23 = *(unsigned char *)v24;
  v23 &= 0xFFFFFFFFFFFFFFF8;
  v24 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  unint64_t v25 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  return a1;
}

uint64_t sub_1DA8F32F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1DA989638();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  uint64_t v12 = v11 + 15;
  unint64_t v13 = (unint64_t)v7 + v11 + 15;
  unint64_t v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = (char *)(v13 & v14);
  uint64_t v16 = (char *)(((unint64_t)v8 + v12) & v14);
  int v17 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
  int v18 = v17(v13 & v14, 1, v9);
  int v19 = v17((unint64_t)v16, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
      goto LABEL_12;
    }
    int v20 = *(_DWORD *)(v10 + 84);
    size_t v21 = *(void *)(v10 + 64);
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v15, v16, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    int v20 = *(_DWORD *)(v10 + 84);
    size_t v21 = *(void *)(v10 + 64);
  }
  if (v20) {
    size_t v22 = v21;
  }
  else {
    size_t v22 = v21 + 1;
  }
  memcpy(v15, v16, v22);
LABEL_12:
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v23 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v23 = *(void *)(v10 + 64) + 1;
  }
  unint64_t v24 = (unint64_t)&v15[v23];
  unint64_t v25 = (unint64_t)&v16[v23];
  *(unsigned char *)unint64_t v24 = *(unsigned char *)v25;
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = *(void *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v25 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_1DA7E8048(v28);
  unint64_t v29 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  return a1;
}

uint64_t sub_1DA8F3534(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_1DA989638();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 84);
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v12 <= 0xFE) {
    unsigned int v13 = 254;
  }
  else {
    unsigned int v13 = v12;
  }
  if (v7 <= v13) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = v7;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(void *)(v6 + 64);
  uint64_t v17 = *(void *)(*(void *)(v8 - 8) + 64);
  if (!v11) {
    ++v17;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  if (a2 <= v15) {
    goto LABEL_36;
  }
  unint64_t v19 = ((v18 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v18)
      + (((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  char v20 = 8 * v19;
  if (v19 <= 3)
  {
    unsigned int v23 = ((a2 - v15 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v23))
    {
      int v21 = *(_DWORD *)((char *)a1 + v19);
      if (!v21) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v23 > 0xFF)
    {
      int v21 = *(unsigned __int16 *)((char *)a1 + v19);
      if (!*(unsigned __int16 *)((char *)a1 + v19)) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v23 < 2)
    {
LABEL_36:
      if (v7 == v15)
      {
        unint64_t v27 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
        return v27(a1, v7, v5);
      }
      else
      {
        unint64_t v28 = (uint64_t *)(((unint64_t)a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
        if ((v14 & 0x80000000) != 0)
        {
          uint64_t v30 = ((unint64_t)v28 + v18 + 8) & ~v18;
          if (v12 < 0xFE)
          {
            unsigned int v32 = *(unsigned __int8 *)(v30 + v17);
            if (v32 >= 2) {
              return v32 - 1;
            }
            else {
              return 0;
            }
          }
          else
          {
            unsigned int v31 = (*(uint64_t (**)(uint64_t))(v10 + 48))(v30);
            if (v31 >= 2) {
              return v31 - 1;
            }
            else {
              return 0;
            }
          }
        }
        else
        {
          uint64_t v29 = *v28;
          if ((unint64_t)*v28 >= 0xFFFFFFFF) {
            LODWORD(v29) = -1;
          }
          return (v29 + 1);
        }
      }
    }
  }
  int v21 = *((unsigned __int8 *)a1 + v19);
  if (!*((unsigned char *)a1 + v19)) {
    goto LABEL_36;
  }
LABEL_26:
  int v24 = (v21 - 1) << v20;
  if (v19 <= 3)
  {
    int v25 = v19;
  }
  else
  {
    int v24 = 0;
    int v25 = 4;
  }
  switch(v25)
  {
    case 2:
      int v26 = *a1;
      break;
    case 3:
      int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      break;
    case 4:
      int v26 = *(_DWORD *)a1;
      break;
    default:
      int v26 = *(unsigned __int8 *)a1;
      break;
  }
  return v15 + (v26 | v24) + 1;
}

void sub_1DA8F3820(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v35 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  int v10 = 0;
  uint64_t v11 = *(void *)(sub_1DA989638() - 8);
  uint64_t v12 = v11;
  int v14 = *(_DWORD *)(v11 + 80);
  int v13 = *(_DWORD *)(v11 + 84);
  unsigned int v15 = v13 - 1;
  if (!v13) {
    unsigned int v15 = 0;
  }
  uint64_t v16 = *(void *)(v8 + 64);
  size_t v17 = *(void *)(v11 + 64);
  if (v15 <= 0xFE) {
    unsigned int v18 = 254;
  }
  else {
    unsigned int v18 = v15;
  }
  if (v9 > v18) {
    unsigned int v18 = v9;
  }
  if (v18 <= 0x7FFFFFFF) {
    unsigned int v19 = 0x7FFFFFFF;
  }
  else {
    unsigned int v19 = v18;
  }
  uint64_t v20 = v14 & 0xF8 | 7;
  if (v13) {
    size_t v21 = v17;
  }
  else {
    size_t v21 = v17 + 1;
  }
  unint64_t v22 = ((v20 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v20)
      + (((v21 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (a3 <= v19) {
    goto LABEL_22;
  }
  if (v22 <= 3)
  {
    unsigned int v23 = ((a3 - v19 + ~(-1 << (8 * v22))) >> (8 * v22)) + 1;
    if (HIWORD(v23))
    {
      int v10 = 4;
      if (v19 >= a2) {
        goto LABEL_29;
      }
      goto LABEL_23;
    }
    if (v23 >= 0x100) {
      int v10 = 2;
    }
    else {
      int v10 = v23 > 1;
    }
LABEL_22:
    if (v19 >= a2) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
  int v10 = 1;
  if (v19 >= a2)
  {
LABEL_29:
    switch(v10)
    {
      case 1:
        a1[v22] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_36;
      case 2:
        *(_WORD *)&a1[v22] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_36;
      case 3:
        goto LABEL_66;
      case 4:
        *(_DWORD *)&a1[v22] = 0;
        goto LABEL_35;
      default:
LABEL_35:
        if (a2)
        {
LABEL_36:
          if (v9 == v19)
          {
            int v26 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
            v26(a1, a2, v9, v7);
          }
          else
          {
            unint64_t v27 = (void *)((unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8);
            if ((v18 & 0x80000000) != 0)
            {
              uint64_t v29 = (uint64_t)v27 + v20 + 8;
              uint64_t v30 = (unsigned char *)(v29 & ~v20);
              if (v15 < 0xFE)
              {
                v30[v21] = a2 + 1;
              }
              else if (v15 >= a2)
              {
                uint64_t v34 = *(void (**)(uint64_t, void))(v12 + 56);
                v34(v29 & ~v20, (a2 + 1));
              }
              else
              {
                if (v21 <= 3) {
                  int v31 = ~(-1 << (8 * v21));
                }
                else {
                  int v31 = -1;
                }
                if (v21)
                {
                  int v32 = v31 & (~v15 + a2);
                  if (v21 <= 3) {
                    int v33 = v21;
                  }
                  else {
                    int v33 = 4;
                  }
                  bzero(v30, v21);
                  switch(v33)
                  {
                    case 2:
                      *(_WORD *)uint64_t v30 = v32;
                      break;
                    case 3:
                      *(_WORD *)uint64_t v30 = v32;
                      v30[2] = BYTE2(v32);
                      break;
                    case 4:
                      *(_DWORD *)uint64_t v30 = v32;
                      break;
                    default:
                      *uint64_t v30 = v32;
                      break;
                  }
                }
              }
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v28 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v28 = (a2 - 1);
              }
              *unint64_t v27 = v28;
            }
          }
        }
        break;
    }
    return;
  }
LABEL_23:
  unsigned int v24 = ~v19 + a2;
  if (v22 < 4)
  {
    int v25 = (v24 >> (8 * v22)) + 1;
    bzero(a1, ((v20 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v20)+ (((v21 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 9);
    *a1 = v24 & ~(-1 << (8 * v22));
  }
  else
  {
    bzero(a1, ((v20 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v20)+ (((v21 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 9);
    *(_DWORD *)a1 = v24;
    int v25 = 1;
  }
  switch(v10)
  {
    case 1:
      a1[v22] = v25;
      break;
    case 2:
      *(_WORD *)&a1[v22] = v25;
      break;
    case 3:
LABEL_66:
      __break(1u);
      JUMPOUT(0x1DA8F3C14);
    case 4:
      *(_DWORD *)&a1[v22] = v25;
      break;
    default:
      return;
  }
}

uint64_t dispatch thunk of StatefulStoring.init<A, B>(reloadStrategy:reloadConfigurationPolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 72))();
}

uint64_t dispatch thunk of StatefulStoring.reloadPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of StatefulStoring.ignoredReloadPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of StatefulStoring.addedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of StatefulStoring.removedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of StatefulStoring.addedVariantPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of StatefulStoring.removedVariantPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of StatefulStoring.variantReloadPublisher(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of StatefulStoring.keys.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of StatefulStoring.variantKeys.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of StatefulStoring.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of StatefulStoring.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

uint64_t dispatch thunk of StatefulStoring.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of StatefulStoring.reload(configuration:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 184))();
}

uint64_t dispatch thunk of StatefulStoring.reloadAll(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of StatefulStoring.captureState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of StatefulStoring.mutate(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 208))();
}

uint64_t dispatch thunk of StatefulStoreMutating.keys.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of StatefulStoreMutating.entry(key:variantKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of StatefulStoreMutating.removeAll()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of StatefulStoreMutating.remove(key:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of StatefulStoreMutating.remove(key:variantKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of StatefulStoreMutating.add(key:variantKey:entry:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 112))();
}

uint64_t dispatch thunk of StatefulStoreMutating.reload(configuration:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t sub_1DA8F3E68()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 136))();
}

uint64_t sub_1DA8F3EAC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  type metadata accessor for _AnyReloadingStrategyBox();
  *(void *)(v2 + 16) = sub_1DA8F4550(a1);
  return v2;
}

uint64_t sub_1DA8F3F1C()
{
  if (*(void *)(v0 + 64))
  {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  else
  {
    sub_1DA7A1A44(v0 + 16, (uint64_t)v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58958);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58F78);
    if (swift_dynamicCast())
    {
      sub_1DA7A19A4(v3, (uint64_t)v6);
      __swift_project_boxed_opaque_existential_0(v6, v6[3]);
      uint64_t v1 = sub_1DA98CDD8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    }
    else
    {
      uint64_t v4 = 0;
      memset(v3, 0, sizeof(v3));
      sub_1DA8F4078((uint64_t)v3);
      v6[0] = 0;
      v6[1] = 0xE000000000000000;
      sub_1DA98CA18();
      sub_1DA98C148();
      v5[0] = v0;
      sub_1DA98CB58();
      sub_1DA98C148();
      uint64_t v1 = v6[0];
    }
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DA8F4078(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6710);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ReloadTaskCancellable.__allocating_init(_:description:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  double v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v13 + 16))(v12, v10);
  uint64_t v14 = sub_1DA8F4908((uint64_t)v12, a2, a3, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v14;
}

uint64_t ReloadTaskCancellable.init(_:description:)(long long *a1, uint64_t a2, uint64_t a3)
{
  sub_1DA7A19A4(a1, v3 + 16);
  *(void *)(v3 + 56) = a2;
  *(void *)(v3 + 64) = a3;
  return v3;
}

uint64_t ReloadTaskCancellable.__allocating_init(_:description:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1DA989FB8();
  swift_allocObject();
  uint64_t v7 = sub_1DA989FC8();
  uint64_t v11 = v6;
  uint64_t v12 = MEMORY[0x1E4F1AB08];
  *(void *)&long long v10 = v7;
  type metadata accessor for ReloadTaskCancellable();
  uint64_t v8 = swift_allocObject();
  sub_1DA7A19A4(&v10, v8 + 16);
  *(void *)(v8 + 56) = a3;
  *(void *)(v8 + 64) = a4;
  return v8;
}

uint64_t sub_1DA8F42C0()
{
  __swift_project_boxed_opaque_existential_0((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_1DA989F78();
}

uint64_t sub_1DA8F4304()
{
  return sub_1DA98CF28();
}

BOOL static ReloadTaskCancellable.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t ReloadTaskCancellable.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ReloadTaskCancellable.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA8F43A4()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA8F43EC()
{
  __swift_project_boxed_opaque_existential_0((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_1DA989F78();
}

uint64_t sub_1DA8F4434()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA8F447C()
{
  return sub_1DA98CF28();
}

uint64_t sub_1DA8F44A8()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA8F44E8()
{
  return sub_1DA8F3F1C();
}

uint64_t sub_1DA8F450C(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for _AnyReloadingStrategyBox();
  *(void *)(v2 + 16) = sub_1DA8F4550(a1);
  return v2;
}

uint64_t sub_1DA8F4550(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 144) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 160), a1);
  return v2;
}

uint64_t sub_1DA8F45E4()
{
  return sub_1DA8F3E68();
}

void sub_1DA8F4608()
{
}

uint64_t sub_1DA8F4654()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))();
}

uint64_t sub_1DA8F4698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *v5;
  uint64_t v12 = *(void *)(*v5 + 144);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790]();
  unsigned int v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v18 - v14, (uint64_t)v5 + *(void *)(v11 + 160), v12);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 152) + 56))(a1, a2, a3, a4, a5, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v16;
}

uint64_t sub_1DA8F4804()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 144) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 160));
}

uint64_t sub_1DA8F485C()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 144) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 160));

  return swift_deallocClassInstance();
}

uint64_t sub_1DA8F4908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = a5;
  uint64_t v15 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a1, a5);
  type metadata accessor for ReloadTaskCancellable();
  uint64_t v11 = swift_allocObject();
  sub_1DA7A19A4(&v13, v11 + 16);
  *(void *)(v11 + 56) = a2;
  *(void *)(v11 + 64) = a3;
  return v11;
}

uint64_t type metadata accessor for ReloadTaskCancellable()
{
  return self;
}

unint64_t sub_1DA8F49D0()
{
  unint64_t result = qword_1EA8E6718;
  if (!qword_1EA8E6718)
  {
    type metadata accessor for ReloadTaskCancellable();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6718);
  }
  return result;
}

uint64_t method lookup function for ReloadTaskCancellable(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ReloadTaskCancellable);
}

uint64_t dispatch thunk of ReloadTaskCancellable.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ReloadTaskCancellable.__allocating_init(_:description:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ReloadTaskCancellable.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ReloadTaskCancellable.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ReloadTaskCancellable.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ReloadingStrategy.reload(context:variantContexts:configuration:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t sub_1DA8F4AF4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AnyReloadingStrategy()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DA8F4B54()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for _AnyReloadingStrategyBase()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DA8F4BA4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for _AnyReloadingStrategyBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t DescriptorChangeReason.hash(into:)()
{
  switch(*(void *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      uint64_t result = sub_1DA98CF28();
      break;
    default:
      sub_1DA98CF28();
      uint64_t result = sub_1DA98C108();
      break;
  }
  return result;
}

uint64_t DescriptorChangeReason.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1DA98CF18();
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      sub_1DA98CF28();
      break;
    default:
      sub_1DA98CF28();
      sub_1DA98C108();
      break;
  }
  return sub_1DA98CF68();
}

uint64_t sub_1DA8F4E28()
{
  switch(*(void *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      uint64_t result = sub_1DA98CF28();
      break;
    default:
      sub_1DA98CF28();
      uint64_t result = sub_1DA98C108();
      break;
  }
  return result;
}

uint64_t sub_1DA8F4F08()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1DA98CF18();
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      sub_1DA98CF28();
      break;
    default:
      sub_1DA98CF28();
      sub_1DA98C108();
      break;
  }
  return sub_1DA98CF68();
}

uint64_t WidgetDescriptorsChangeEvent.descriptors.getter()
{
  return swift_retain();
}

uint64_t WidgetDescriptorsChangeEvent.descriptors.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*WidgetDescriptorsChangeEvent.descriptors.modify())()
{
  return CGSizeMake;
}

uint64_t WidgetDescriptorsChangeEvent.reasons.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetDescriptorsChangeEvent.reasons.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*WidgetDescriptorsChangeEvent.reasons.modify())()
{
  return CGSizeMake;
}

uint64_t WidgetDescriptorsChangeEvent.init(descriptors:reasons:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t (*ControlDescriptorsChangeEvent.descriptors.modify())()
{
  return CGSizeMake;
}

uint64_t (*ControlDescriptorsChangeEvent.reasons.modify())()
{
  return CGSizeMake;
}

uint64_t _s9ChronoKit22DescriptorChangeReasonO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5) {
        goto LABEL_15;
      }
      unint64_t v3 = 0;
      char v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1) {
        goto LABEL_15;
      }
      unint64_t v3 = 1;
      char v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2) {
        goto LABEL_15;
      }
      char v6 = 1;
      unint64_t v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3) {
        goto LABEL_15;
      }
      char v6 = 1;
      unint64_t v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4) {
        goto LABEL_15;
      }
      char v6 = 1;
      unint64_t v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5) {
        goto LABEL_15;
      }
      char v6 = 1;
      unint64_t v3 = 5;
      break;
    default:
      if (v5 >= 6)
      {
        if (v2 == v4 && v3 == v5) {
          char v6 = 1;
        }
        else {
          char v6 = sub_1DA98CE58();
        }
      }
      else
      {
LABEL_15:
        char v6 = 0;
      }
      sub_1DA8835DC(v4, v5);
      sub_1DA8835DC(v2, v3);
      break;
  }
  sub_1DA8835F0(v2, v3);
  sub_1DA8835F0(v4, v5);
  return v6 & 1;
}

unint64_t sub_1DA8F524C()
{
  unint64_t result = qword_1EBE63370;
  if (!qword_1EBE63370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63370);
  }
  return result;
}

uint64_t dispatch thunk of DescriptorProviding.extensionPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DescriptorProviding.extensions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WidgetDescriptorProviding.widgetDescriptorPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WidgetDescriptorProviding.widgetDescriptors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ControlDescriptorProviding.controlDescriptorPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ControlDescriptorProviding.controlDescriptors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ActivityDescriptorProviding.activityDescriptor(targeting:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ActivityDescriptorProviding.activityDescriptors(containedBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ActivityDescriptorProviding.activityDescriptor(for:containedBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

unint64_t destroy for DescriptorChangeReason(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9ChronoKit22DescriptorChangeReasonOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for DescriptorChangeReason(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DescriptorChangeReason(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DescriptorChangeReason(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF9 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483642);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 5;
  if (v4 >= 7) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DescriptorChangeReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 5;
    }
  }
  return result;
}

uint64_t sub_1DA8F5580(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1DA8F5598(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DescriptorChangeReason()
{
  return &type metadata for DescriptorChangeReason;
}

uint64_t destroy for WidgetDescriptorsChangeEvent()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for WidgetDescriptorsChangeEvent()
{
  return &type metadata for WidgetDescriptorsChangeEvent;
}

void *_s9ChronoKit28WidgetDescriptorsChangeEventVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s9ChronoKit28WidgetDescriptorsChangeEventVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s9ChronoKit28WidgetDescriptorsChangeEventVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetDescriptorCacheUpdate(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetDescriptorCacheUpdate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlDescriptorsChangeEvent()
{
  return &type metadata for ControlDescriptorsChangeEvent;
}

uint64_t ChronoMetadataStore.MutableRemoteExtensionStore.update(remoteWidgetExtensionInfo:)(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for WidgetExtensionInfo();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (id *)((char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = v1 + 16;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_10;
  }
  uint64_t v10 = Strong;
  uint64_t v11 = *(void *)(Strong + 24);
  uint64_t v12 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v12);
  uint64_t v13 = *(void *)(v10 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  swift_release();
  swift_release();
  if (!v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1DA91D480(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WidgetExtensionInfo);
  if (!objc_msgSend(*v7, sel_isRemote))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1DA91D4E8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WidgetExtensionInfo);
  sub_1DA989118();
  swift_allocObject();
  sub_1DA989108();
  sub_1DA91D680(&qword_1EA8E6738, (void (*)(uint64_t))type metadata accessor for WidgetExtensionInfo);
  uint64_t v14 = sub_1DA9890F8();
  unint64_t v16 = v15;
  uint64_t result = swift_release();
  if (v3) {
    return result;
  }
  v49[1] = 0;
  v49[2] = 0xE000000000000000;
  unint64_t v18 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  uint64_t v51 = v8;
  unint64_t v19 = v18;
  MEMORY[0x1E01772A0](75);
  uint64_t v50 = v19;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  id v20 = objc_msgSend(*(id *)a1, sel_tokenString);
  uint64_t v21 = sub_1DA98C038();
  uint64_t v23 = v22;

  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1DA79EBAC(v21, v23);
  unint64_t v26 = v25;
  v49[0] = v5;
  unint64_t v27 = v16;
  uint64_t v28 = v14;
  char v30 = v29;
  sub_1DA8E40CC(v24, v25, v29);
  sub_1DA79EB2C(v24, v26, v30);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v31 = *(void *)(a1 + 8);
  uint64_t v32 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain_n();
  uint64_t v33 = sub_1DA79EBAC(v31, v32);
  unint64_t v35 = v34;
  LOBYTE(v23) = v36;
  sub_1DA8E40CC(v33, v34, v36);
  sub_1DA79EB2C(v33, v35, v23);
  uint64_t v37 = v28;
  unint64_t v38 = v27;
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA989508();
  uint64_t v40 = sub_1DA7A0B60(v39);
  unint64_t v42 = v41;
  LOBYTE(v27) = v43;
  sub_1DA8E40CC(v40, v41, v43);
  sub_1DA79EB2C(v40, v42, v27);
  sub_1DA98C148();
  sub_1DA79ED98(v37, v38);
  sub_1DA79ED98(v37, v38);
  uint64_t v44 = sub_1DA79EB98(v37, v38);
  unint64_t v46 = v45;
  LOBYTE(v27) = v47;
  sub_1DA8E40CC(v44, v45, v47);
  sub_1DA79EB2C(v44, v46, v27);
  sub_1DA79DA70(v37, v38);
  sub_1DA98C148();
  uint64_t v48 = v50;
  if (!swift_weakLoadStrong())
  {
LABEL_10:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DA79DA70(v37, v38);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA8F5D3C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)(a3 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_initStackObject();
  sub_1DA91BE30();
  uint64_t v7 = *(void *)(a3 + 128);
  uint64_t v8 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  swift_retain();
  sub_1DA7C34DC(a1, a2, v6);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  swift_release();
  sub_1DA8FB09C();
  return swift_release();
}

uint64_t sub_1DA8F5E04(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  unint64_t v10 = *(void *)(a3 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_initStackObject();
  uint64_t v11 = sub_1DA91BE30();
  uint64_t v12 = *(void *)(a3 + 128);
  uint64_t v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_retain();
  sub_1DA7C3C3C(a1, a2, v10, (uint64_t)v11, a4, a5);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  sub_1DA8FB09C();
  return swift_release();
}

uint64_t ChronoMetadataStore.update(reason:_:)(uint64_t a1, unint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(v4 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_allocObject();
  uint64_t v11 = sub_1DA91BE30();
  uint64_t v12 = *(void *)(v5 + 128);
  uint64_t v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_retain();
  sub_1DA7C2D00(a1, a2, v10, a3, a4, (uint64_t)v11);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  sub_1DA8FB09C();
  return swift_release();
}

uint64_t ChronoMetadataStore.MutableRemoteExtensionStore.removeExtension(with:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_10;
  }
  uint64_t v5 = Strong;
  uint64_t v6 = *(void *)(Strong + 24);
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  uint64_t v8 = *(void *)(v5 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  swift_release();
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!objc_msgSend(a1, sel_isRemote))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v9 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](24);
  uint64_t v20 = v9;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  id v10 = objc_msgSend(a1, sel_tokenString);
  uint64_t v11 = sub_1DA98C038();
  uint64_t v13 = v12;

  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DA79EBAC(v11, v13);
  unint64_t v16 = v15;
  char v18 = v17;
  sub_1DA8E40CC(v14, v15, v17);
  sub_1DA79EB2C(v14, v16, v18);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_10:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ChronoMetadataStore.MutableRemoteExtensionStore.removeAllExtensions()()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void *)(Strong + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = *(void *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v7 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](13);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    sub_1DA98CBB8();
    __break(1u);
    return;
  }
  sub_1DA7BEF9C(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v1) {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DA8F6418@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, long long *a4@<X8>)
{
  switch(a3)
  {
    case 1:
      uint64_t v5 = MEMORY[0x1E4FBB3D0];
      uint64_t v6 = &off_1F34D99D0;
      goto LABEL_4;
    case 2:
      uint64_t v13 = MEMORY[0x1E4FBB1A0];
      uint64_t v14 = &off_1F34D99C8;
      *(void *)&long long v12 = a1;
      *((void *)&v12 + 1) = a2;
      swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t v13 = MEMORY[0x1E4F277C0];
      uint64_t v14 = &off_1F34D5038;
      *(void *)&long long v12 = a1;
      *((void *)&v12 + 1) = a2;
      sub_1DA79ED98(a1, a2);
      break;
    case 4:
      id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
      uint64_t v13 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
      uint64_t v14 = &off_1F34D9D00;
      *(void *)&long long v12 = v7;
      break;
    default:
      uint64_t v5 = MEMORY[0x1E4FBC1C8];
      uint64_t v6 = &off_1F34D9D78;
LABEL_4:
      uint64_t v13 = v5;
      uint64_t v14 = v6;
      *(void *)&long long v12 = a1;
      break;
  }
  sub_1DA7A19A4(&v12, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
  uint64_t result = swift_dynamicCast();
  if (result) {
    long long v9 = v10;
  }
  else {
    long long v9 = xmmword_1DA993170;
  }
  *a4 = v9;
  return result;
}

uint64_t sub_1DA8F6584(uint64_t a1, unint64_t a2, char a3)
{
  return sub_1DA8F66F4(a1, a2, a3);
}

uint64_t sub_1DA8F6590(uint64_t a1, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      uint64_t v3 = MEMORY[0x1E4FBB3D0];
      uint64_t v4 = &off_1F34D99D0;
      goto LABEL_4;
    case 2:
      uint64_t v10 = MEMORY[0x1E4FBB1A0];
      uint64_t v11 = &off_1F34D99C8;
      *(void *)&long long v9 = a1;
      *((void *)&v9 + 1) = a2;
      swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t v10 = MEMORY[0x1E4F277C0];
      uint64_t v11 = &off_1F34D5038;
      *(void *)&long long v9 = a1;
      *((void *)&v9 + 1) = a2;
      sub_1DA79ED98(a1, a2);
      break;
    case 4:
      id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
      uint64_t v10 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
      uint64_t v11 = &off_1F34D9D00;
      *(void *)&long long v9 = v5;
      break;
    default:
      uint64_t v3 = MEMORY[0x1E4FBC1C8];
      uint64_t v4 = &off_1F34D9D78;
LABEL_4:
      uint64_t v10 = v3;
      uint64_t v11 = v4;
      *(void *)&long long v9 = a1;
      break;
  }
  sub_1DA7A19A4(&v9, (uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
  if (swift_dynamicCast()) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DA8F66E8(uint64_t a1, unint64_t a2, char a3)
{
  return sub_1DA8F66F4(a1, a2, a3);
}

uint64_t sub_1DA8F66F4(uint64_t a1, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      uint64_t v3 = MEMORY[0x1E4FBB3D0];
      uint64_t v4 = &off_1F34D99D0;
      goto LABEL_4;
    case 2:
      uint64_t v12 = MEMORY[0x1E4FBB1A0];
      uint64_t v13 = &off_1F34D99C8;
      *(void *)&long long v11 = a1;
      *((void *)&v11 + 1) = a2;
      swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t v12 = MEMORY[0x1E4F277C0];
      uint64_t v13 = &off_1F34D5038;
      *(void *)&long long v11 = a1;
      *((void *)&v11 + 1) = a2;
      sub_1DA79ED98(a1, a2);
      break;
    case 4:
      id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
      uint64_t v12 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
      uint64_t v13 = &off_1F34D9D00;
      *(void *)&long long v11 = v5;
      break;
    default:
      uint64_t v3 = MEMORY[0x1E4FBC1C8];
      uint64_t v4 = &off_1F34D9D78;
LABEL_4:
      uint64_t v12 = v3;
      uint64_t v13 = v4;
      *(void *)&long long v11 = a1;
      break;
  }
  sub_1DA7A19A4(&v11, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
  int v6 = swift_dynamicCast();
  uint64_t v7 = v9;
  if (!v6) {
    return 0;
  }
  return v7;
}

uint64_t sub_1DA8F6858()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58928);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DA989698();
  __swift_allocate_value_buffer(v3, qword_1EA8E6720);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EA8E6720);
  sub_1DA989648();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA8F6988()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA8F69D0()
{
  return sub_1DA98CF48();
}

uint64_t sub_1DA8F69FC()
{
  return sub_1DA98CF68();
}

void *sub_1DA8F6A40@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

unint64_t sub_1DA8F6A60@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1DA91D400(*a1);
  *a2 = result;
  return result;
}

uint64_t ChronoMetadataStore.remoteExtensionStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.configuredWidgetStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.hostStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.snapshotConfigurationStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.stateReplicatorDeviceMetadataStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.stateReplicatorRecordMetadataStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.stateReplicatorPairingRelationshipStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.remoteActivitySubscriptionStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.remoteActivityArchiveBudgetStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.pushSubscriptionStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.publicTokenStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.__allocating_init(storage:corruptionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  ChronoMetadataStore.init(storage:corruptionHandler:)(a1, a2, a3);
  return v6;
}

void *ChronoMetadataStore.init(storage:corruptionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = type metadata accessor for SQLDatabase.Storage();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UnfairLock();
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = (_DWORD *)swift_slowAlloc();
  *uint64_t v12 = 0;
  *(void *)(v11 + 16) = v12;
  v3[16] = v11;
  sub_1DA91D480(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SQLDatabase.Storage);
  if (qword_1EBE59150 != -1) {
    swift_once();
  }
  uint64_t v13 = (unsigned __int16)word_1EBE589A8;
  uint64_t v14 = (char *)qword_1EBE589B0;
  swift_bridgeObjectRetain();
  sub_1DA7AE2F8(a2);
  uint64_t v15 = sub_1DA7C72E8((uint64_t)v10, v13, v14, a2, a3);
  if (v4)
  {
    sub_1DA7AD81C(a2);
    sub_1DA91D4E8(a1, (uint64_t (*)(void))type metadata accessor for SQLDatabase.Storage);
    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    long long v3[2] = v15;
    type metadata accessor for ChronoMetadataStore.ExtensionStore();
    uint64_t v16 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[3] = v16;
    type metadata accessor for ChronoMetadataStore.RemoteExtensionStore();
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[4] = v17;
    type metadata accessor for ChronoMetadataStore.ConfiguredWidgetStore();
    uint64_t v18 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[5] = v18;
    type metadata accessor for ChronoMetadataStore.HostConfigurationStore();
    uint64_t v19 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[6] = v19;
    type metadata accessor for ChronoMetadataStore.SnapshotConfigurationStore();
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[7] = v20;
    type metadata accessor for ChronoMetadataStore.StateReplicatorDeviceMetadataStore();
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[8] = v21;
    type metadata accessor for ChronoMetadataStore.StateReplicatorRecordMetadataStore();
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[9] = v22;
    type metadata accessor for ChronoMetadataStore.StateReplicatorPairingRelationshipStore();
    uint64_t v23 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[10] = v23;
    type metadata accessor for ChronoMetadataStore.RemoteActivitySubscriptionStore();
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[11] = v24;
    type metadata accessor for ChronoMetadataStore.RemoteActivityArchiveBudgetStore();
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[12] = v25;
    type metadata accessor for ChronoMetadataStore.PushTokenStore();
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[13] = v26;
    type metadata accessor for ChronoMetadataStore.PushSubscriptionStore();
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[14] = v27;
    type metadata accessor for ChronoMetadataStore.PublicTokenStore();
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    sub_1DA7AD81C(a2);
    sub_1DA91D4E8(a1, (uint64_t (*)(void))type metadata accessor for SQLDatabase.Storage);
    v3[15] = v28;
  }
  return v3;
}

uint64_t ChronoMetadataStore.lastRollbackDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7C0A5C(a1);
}

uint64_t ChronoMetadataStore.deinit()
{
  uint64_t v1 = v0;
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  sub_1DA7BEF9C(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v2 + 32), sel_close);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t ChronoMetadataStore.__deallocating_deinit()
{
  ChronoMetadataStore.deinit();

  return swift_deallocClassInstance();
}

void sub_1DA8F71E0()
{
  word_1EBE589A8 = 2;
  qword_1EBE589B0 = (uint64_t)&unk_1F34D5190;
}

uint64_t sub_1DA8F7200()
{
  uint64_t v0 = MEMORY[0x1E4FBC860];
  unint64_t v4 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](80);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v3 = sub_1DA79C348(v0);
  MEMORY[0x1E01772A0](120);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v1 = sub_1DA79C348(v0);
  MEMORY[0x1E01772A0](24);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    sub_1DA7BEF9C(v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA7BEF9C(v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA8F7778()
{
  uint64_t v0 = MEMORY[0x1E4FBC860];
  unint64_t v5 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](11);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  unint64_t v4 = sub_1DA79C348(v0);
  MEMORY[0x1E01772A0](24);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v3 = sub_1DA79C348(v0);
  MEMORY[0x1E01772A0](199);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v2 = sub_1DA79C348(v0);
  MEMORY[0x1E01772A0](24);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DA7BEF9C(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA7BEF9C(v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA7BEF9C(v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA8F7E1C()
{
  uint64_t v0 = MEMORY[0x1E4FBC860];
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](60);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v2 = sub_1DA79C348(v0);
  MEMORY[0x1E01772A0](25);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v4)
  {
    swift_bridgeObjectRelease();
    sub_1DA7BEF9C(v2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA8F80AC()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](25);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA8F81FC()
{
  return sub_1DA7A0F30();
}

uint64_t sub_1DA8F8218()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](60);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA8F8374()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](47);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA8F84D4()
{
  uint64_t v0 = MEMORY[0x1E4FBC860];
  unint64_t v4 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](61);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v3 = sub_1DA79C348(v0);
  MEMORY[0x1E01772A0](200);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](470);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    sub_1DA7BEF9C(v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA7BEF9C(v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA8F8C1C()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](62);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA8F8D30()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](47);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA8F8E90()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](47);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA8F8FF0()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](111);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA8F9220()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](98);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA8F9454()
{
  uint64_t v0 = MEMORY[0x1E4FBC860];
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](12);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v3 = sub_1DA79C348(v0);
  MEMORY[0x1E01772A0](226);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v4)
  {
    swift_bridgeObjectRelease();
    sub_1DA7BEF9C(v3);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA8F98A8()
{
  return sub_1DA7A10D0();
}

uint64_t sub_1DA8F98C4()
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  unint64_t v2 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](12);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v3 = sub_1DA79C348(v1);
  MEMORY[0x1E01772A0](111);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    sub_1DA7BEF9C(v3);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA8F9BE0()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](37);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA8F9CF4()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](38);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA8F9E08()
{
  uint64_t v0 = MEMORY[0x1E4FBC860];
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](39);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v6 = sub_1DA79C348(v0);
  MEMORY[0x1E01772A0](41);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v5 = sub_1DA79C348(v0);
  MEMORY[0x1E01772A0](52);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v4 = sub_1DA79C348(v0);
  MEMORY[0x1E01772A0](52);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v3 = sub_1DA79C348(v0);
  MEMORY[0x1E01772A0](45);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DA7BEF9C(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA7BEF9C(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA7BEF9C(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA7BEF9C(v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DA8FA324(uint64_t *a1)
{
}

uint64_t sub_1DA8FA340()
{
  return sub_1DA7A122C();
}

uint64_t sub_1DA8FA35C()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](69);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA8FA504()
{
  uint64_t result = sub_1DA94BCAC();
  if (!v0) {
    return sub_1DA82F400();
  }
  return result;
}

uint64_t sub_1DA8FA538()
{
  return sub_1DA95E914();
}

uint64_t sub_1DA8FA554(uint64_t *a1, void *a2, void *a3)
{
  unint64_t v75 = a3;
  id v74 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v70 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1DA989638();
  uint64_t v78 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  v63 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v77 = (char *)&v63 - v12;
  uint64_t v13 = sub_1DA989148();
  uint64_t v72 = *(void *)(v13 - 8);
  uint64_t v73 = v13;
  MEMORY[0x1F4188790](v13);
  unint64_t v71 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  uint64_t v16 = sub_1DA98CA38();
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v15 + 16);
  if (v19)
  {
    uint64_t v3 = v16;
    uint64_t v20 = (unsigned __int8 *)(v15 + 64);
    while (1)
    {
      unint64_t v4 = *((void *)v20 - 2);
      unint64_t v5 = *((void *)v20 - 1);
      uint64_t v6 = *v20;
      BOOL v21 = *((void *)v20 - 4) == v3 && *((void *)v20 - 3) == v18;
      if (v21 || (sub_1DA98CE58() & 1) != 0) {
        break;
      }
      v20 += 40;
      if (!--v19) {
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    __break(1u);
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA848220(v4, v5, v6, (uint64_t *)&v81);
  sub_1DA79EB2C(v4, v5, v6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
  swift_dynamicCast();
  uint64_t v68 = v79;
  uint64_t v69 = v80;
  uint64_t v22 = sub_1DA98CA38();
  uint64_t v24 = v23;
  uint64_t v25 = *(char **)(v15 + 16);
  if (v25)
  {
    uint64_t v26 = v22;
    uint64_t v27 = (unsigned char *)(v15 + 64);
    while (1)
    {
      uint64_t v6 = *((void *)v27 - 2);
      unint64_t v4 = *((void *)v27 - 1);
      LOBYTE(v3) = *v27;
      BOOL v28 = *((void *)v27 - 4) == v26 && *((void *)v27 - 3) == v24;
      if (v28 || (sub_1DA98CE58() & 1) != 0) {
        break;
      }
      v27 += 40;
      if (!--v25) {
        goto LABEL_18;
      }
    }
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease();
    __break(1u);
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v6, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v29 = &v81;
  sub_1DA848220(v6, v4, v3, (uint64_t *)&v81);
  sub_1DA79EB2C(v6, v4, v3);
  uint64_t v30 = swift_dynamicCast();
  uint64_t v31 = v79;
  unint64_t v32 = v80;
  *(void *)&long long v81 = 40;
  *((void *)&v81 + 1) = 0xE100000000000000;
  MEMORY[0x1F4188790](v30);
  *(&v63 - 2) = (char *)&v81;
  swift_bridgeObjectRetain_n();
  uint64_t v33 = v76;
  uint64_t v34 = sub_1DA90CFD0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1DA91D9D0, (uint64_t)(&v63 - 4), v31, v32);
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v34 + 16);
  if (!v35)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v35 == 1)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v76 = v33;
  uint64_t v66 = *(void *)(v34 + 32);
  uint64_t v65 = *(void *)(v34 + 40);
  uint64_t v36 = *(void *)(v34 + 56);
  uint64_t v64 = *(void *)(v34 + 48);
  long long v67 = *(_OWORD *)(v34 + 64);
  uint64_t v37 = *(void *)(v34 + 80);
  uint64_t v38 = *(void *)(v34 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v81 = v67;
  uint64_t v82 = v37;
  uint64_t v83 = v38;
  double v39 = v71;
  sub_1DA989128();
  sub_1DA91DA28();
  sub_1DA98C898();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v39, v73);
  swift_bridgeObjectRelease();
  uint64_t v40 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  id v41 = objc_msgSend(v74, sel_dateFromString_, v40);

  if (v41)
  {
    unint64_t v42 = v63;
    sub_1DA9895F8();

    uint64_t v24 = v78;
    char v43 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
    uint64_t v44 = (uint64_t)v70;
    unint64_t v45 = v42;
    char v29 = (long long *)v84;
    v43(v70, v45, v84);
    (*(void (**)(uint64_t, void, uint64_t, long long *))(v24 + 56))(v44, 0, 1, v29);
    int v46 = (*(uint64_t (**)(uint64_t, uint64_t, long long *))(v24 + 48))(v44, 1, v29);
    uint64_t v25 = v77;
    if (v46 != 1)
    {
      swift_bridgeObjectRelease();
      v43(v25, (char *)v44, (uint64_t)v29);
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v24 = v78;
    uint64_t v44 = (uint64_t)v70;
    char v29 = (long long *)v84;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v70, 1, 1, v84);
    uint64_t v25 = v77;
  }
  sub_1DA7A1AE0(v44, &qword_1EBE61CC0);
  sub_1DA989528();
  if (qword_1EBE59148 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_1DA989F38();
  __swift_project_value_buffer(v47, (uint64_t)qword_1EBE6F0A8);
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_1DA989F18();
  os_log_type_t v49 = sub_1DA98C528();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    *(void *)&long long v81 = v51;
    *(_DWORD *)uint64_t v50 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_1DA8C5E00(v31, v32, (uint64_t *)&v81);
    uint64_t v25 = v77;
    uint64_t v24 = v78;
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v48, v49, "Error parsing date from version string: %{public}s", v50, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v51, -1, -1);
    unint64_t v52 = v50;
    char v29 = (long long *)v84;
    MEMORY[0x1E0178DA0](v52, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_30:
  uint64_t v53 = MEMORY[0x1E0177290](v66, v65, v64, v36);
  uint64_t v55 = v54;
  swift_bridgeObjectRelease();
  *(void *)&long long v81 = v53;
  *((void *)&v81 + 1) = v55;
  sub_1DA98C148();
  if (qword_1EBE64608 != -1) {
LABEL_34:
  }
    swift_once();
  id v56 = (id)qword_1EBE64600;
  v57 = (void *)sub_1DA989568();
  id v58 = objc_msgSend(v56, sel_stringFromDate_, v57);

  sub_1DA98C038();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  long long v59 = v81;
  unint64_t v60 = v75;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v81 = *v60;
  void *v60 = 0x8000000000000000;
  sub_1DA917DB0(v59, *((uint64_t *)&v59 + 1), v68, v69, isUniquelyReferenced_nonNull_native);
  void *v60 = v81;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, long long *))(v24 + 8))(v25, v29);
}

uint64_t sub_1DA8FAE44(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  unint64_t v6 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](25);
  uint64_t v17 = v6;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1DA79EBAC(v5, v4);
  unint64_t v9 = v8;
  char v11 = v10;
  sub_1DA8E40CC(v7, v8, v10);
  sub_1DA79EB2C(v7, v9, v11);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1DA79EBAC(v3, v2);
  unint64_t v14 = v13;
  LOBYTE(v7) = v15;
  sub_1DA8E40CC(v12, v13, v15);
  sub_1DA79EB2C(v12, v14, v7);
  swift_bridgeObjectRelease();
  sub_1DA7BEF9C(v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ChronoMetadataStore.MutableStore.extensionStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.MutableStore.remoteExtensionsStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.MutableStore.publicTokenStore.getter()
{
  return swift_retain();
}

uint64_t sub_1DA8FB09C()
{
  if (qword_1EBE59148 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DA989F38();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE6F0A8);
  uint64_t v1 = sub_1DA989F18();
  os_log_type_t v2 = sub_1DA98C518();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1DA795000, v1, v2, "MutableStore invalidated.", v3, 2u);
    MEMORY[0x1E0178DA0](v3, -1, -1);
  }

  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();

  return swift_weakAssign();
}

uint64_t ChronoMetadataStore.MutableStore.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ChronoMetadataStore.MutableStore.__deallocating_deinit()
{
  ChronoMetadataStore.MutableStore.deinit();

  return swift_deallocClassInstance();
}

uint64_t ChronoMetadataStore.DatabaseAccessor.__deallocating_deinit()
{
  swift_weakDestroy();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA8FB340()
{
  uint64_t v2 = v0;
  LOBYTE(v3) = 19;
  *(void *)&long long v55 = 0;
  *((void *)&v55 + 1) = 0xE000000000000000;
  uint64_t v4 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](85);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong()) {
    goto LABEL_72;
  }
  uint64_t v5 = sub_1DA7BEF9C(v4);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v46 = v5;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v6 = sub_1DA79CDB8(MEMORY[0x1E4FBC860]);
    uint64_t v48 = *(void *)(v46 + 16);
    if (v48)
    {
      uint64_t v47 = (void *)v6;
      uint64_t v7 = *(void *)(v46 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1DA98CA38();
      uint64_t v10 = v9;
      uint64_t v51 = *(void *)(v7 + 16);
      if (!v51) {
        goto LABEL_71;
      }
      uint64_t v11 = v8;
      uint64_t v49 = 1;
      while (1)
      {
        uint64_t v12 = 0;
        uint64_t v50 = v7;
        unint64_t v13 = (unsigned __int8 *)(v7 + 64);
        unint64_t v14 = (unsigned __int8 *)(v7 + 64);
        uint64_t v58 = v10;
        while (1)
        {
          uint64_t v15 = v12 + 1;
          if (__OFADD__(v12, 1))
          {
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
          uint64_t v2 = *((void *)v14 - 2);
          unint64_t v1 = *((void *)v14 - 1);
          unint64_t v3 = *v14;
          BOOL v16 = *((void *)v14 - 4) == v11 && *((void *)v14 - 3) == v10;
          if (v16 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v14 += 40;
          ++v12;
          uint64_t v10 = v58;
          if (v15 == v51) {
            goto LABEL_71;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v2, v1, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        switch(v3)
        {
          case 1uLL:
            v57 = &off_1F34D99D0;
            uint64_t v17 = MEMORY[0x1E4FBB3D0];
            goto LABEL_22;
          case 2uLL:
            uint64_t v56 = MEMORY[0x1E4FBB1A0];
            v57 = &off_1F34D99C8;
            *(void *)&long long v55 = v2;
            *((void *)&v55 + 1) = v1;
            swift_bridgeObjectRetain();
            break;
          case 3uLL:
            uint64_t v56 = MEMORY[0x1E4F277C0];
            v57 = &off_1F34D5038;
            *(void *)&long long v55 = v2;
            *((void *)&v55 + 1) = v1;
            sub_1DA79ED98(v2, v1);
            break;
          case 4uLL:
            id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
            uint64_t v56 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
            v57 = &off_1F34D9D00;
            *(void *)&long long v55 = v18;
            break;
          default:
            v57 = &off_1F34D9D78;
            uint64_t v17 = MEMORY[0x1E4FBC1C8];
LABEL_22:
            uint64_t v56 = v17;
            *(void *)&long long v55 = v2;
            break;
        }
        sub_1DA7A19A4(&v55, (uint64_t)v54);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_73;
        }
        sub_1DA79EB2C(v2, v1, v3);
        if (!v53) {
          goto LABEL_72;
        }
        uint64_t v19 = sub_1DA98CA38();
        uint64_t v21 = v20;
        uint64_t v22 = *(void *)(v50 + 16);
        if (!v22)
        {
LABEL_33:
          swift_bridgeObjectRelease();
          goto LABEL_49;
        }
        uint64_t v58 = v53;
        while (1)
        {
          unint64_t v1 = *((void *)v13 - 2);
          unint64_t v3 = *((void *)v13 - 1);
          uint64_t v2 = *v13;
          BOOL v23 = *((void *)v13 - 4) == v19 && *((void *)v13 - 3) == v21;
          if (v23 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v13 += 40;
          if (!--v22) {
            goto LABEL_33;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v1, v3, v2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        switch(v2)
        {
          case 1:
            v57 = &off_1F34D99D0;
            uint64_t v24 = MEMORY[0x1E4FBB3D0];
            goto LABEL_41;
          case 2:
            uint64_t v56 = MEMORY[0x1E4FBB1A0];
            v57 = &off_1F34D99C8;
            *(void *)&long long v55 = v1;
            *((void *)&v55 + 1) = v3;
            swift_bridgeObjectRetain();
            break;
          case 3:
            uint64_t v56 = MEMORY[0x1E4F277C0];
            v57 = &off_1F34D5038;
            *(void *)&long long v55 = v1;
            *((void *)&v55 + 1) = v3;
            sub_1DA79ED98(v1, v3);
            break;
          case 4:
            id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
            uint64_t v56 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
            v57 = &off_1F34D9D00;
            *(void *)&long long v55 = v25;
            break;
          default:
            v57 = &off_1F34D9D78;
            uint64_t v24 = MEMORY[0x1E4FBC1C8];
LABEL_41:
            uint64_t v56 = v24;
            *(void *)&long long v55 = v1;
            break;
        }
        uint64_t v26 = v58;
        sub_1DA7A19A4(&v55, (uint64_t)v54);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v52 = 0;
          LOBYTE(v53) = 1;
          sub_1DA79EB2C(v1, v3, v2);
          goto LABEL_49;
        }
        LOBYTE(v53) = 0;
        sub_1DA79EB2C(v1, v3, v2);
        if (v52) {
          goto LABEL_49;
        }
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v55 = v47;
        unint64_t v29 = sub_1DA7FDF54(0, v26);
        uint64_t v30 = v47[2];
        BOOL v31 = (v28 & 1) == 0;
        uint64_t v32 = v30 + v31;
        if (__OFADD__(v30, v31)) {
          goto LABEL_69;
        }
        uint64_t v2 = v28;
        if (v47[3] >= v32)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1DA91AAC0();
          }
        }
        else
        {
          sub_1DA910F4C(v32, isUniquelyReferenced_nonNull_native);
          unint64_t v33 = sub_1DA7FDF54(v52, v26);
          if ((v2 & 1) != (v34 & 1))
          {
            sub_1DA98CEC8();
            __break(1u);
            JUMPOUT(0x1DA8FBDE4);
          }
          unint64_t v29 = v33;
        }
        uint64_t v36 = (void *)v55;
        swift_bridgeObjectRelease();
        if ((v2 & 1) == 0)
        {
          v36[(v29 >> 6) + 8] |= 1 << v29;
          uint64_t v37 = (uint64_t *)(v36[6] + 16 * v29);
          uint64_t *v37 = v52;
          v37[1] = v26;
          *(void *)(v36[7] + 8 * v29) = MEMORY[0x1E4FBC860];
          uint64_t v38 = v36[2];
          uint64_t v39 = v38 + 1;
          BOOL v40 = __OFADD__(v38, 1);
          swift_bridgeObjectRetain();
          if (!v40)
          {
            v36[2] = v39;
            goto LABEL_60;
          }
LABEL_70:
          __break(1u);
LABEL_71:
          swift_bridgeObjectRelease();
          while (1)
          {
LABEL_72:
            sub_1DA98CBB8();
            __break(1u);
LABEL_73:
            sub_1DA79EB2C(v2, v1, v3);
          }
        }
LABEL_60:
        swift_bridgeObjectRetain();
        uint64_t v41 = v36[7];
        uint64_t v47 = v36;
        swift_bridgeObjectRelease();
        uint64_t v2 = *(void *)(v41 + 8 * v29);
        char v42 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v41 + 8 * v29) = v2;
        if ((v42 & 1) == 0)
        {
          uint64_t v2 = (uint64_t)sub_1DA7CA630(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
          *(void *)(v41 + 8 * v29) = v2;
        }
        unint64_t v44 = *(void *)(v2 + 16);
        unint64_t v43 = *(void *)(v2 + 24);
        if (v44 >= v43 >> 1)
        {
          uint64_t v2 = (uint64_t)sub_1DA7CA630((void *)(v43 > 1), v44 + 1, 1, (void *)v2);
          *(void *)(v41 + 8 * v29) = v2;
        }
        *(void *)(v2 + 16) = v44 + 1;
        *(void *)(v2 + 8 * v44 + 32) = v50;
LABEL_49:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v49 == v48) {
          break;
        }
        uint64_t v7 = *(void *)(v46 + 32 + 8 * v49);
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_1DA98CA38();
        uint64_t v10 = v35;
        ++v49;
        uint64_t v51 = *(void *)(v7 + 16);
        if (!v51) {
          goto LABEL_71;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v6 = (unint64_t)v47;
    }
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v4 = sub_1DA91C5C4(v6);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v4;
}

uint64_t sub_1DA8FBE0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  unint64_t v4 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](98);
  uint64_t v18 = v4;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v5 = sub_1DA989AB8();
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DA79EBAC(v5, v7);
  unint64_t v10 = v9;
  char v12 = v11;
  sub_1DA8E40CC(v8, v9, v11);
  sub_1DA79EB2C(v8, v10, v12);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (swift_weakLoadStrong())
  {
    uint64_t v13 = sub_1DA7BEF9C(v18);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      uint64_t v15 = v13;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v15 + 16))
      {
        sub_1DA8FC33C(v15, a1);
        swift_bridgeObjectRelease();
        uint64_t v16 = type metadata accessor for ExtensionMetadata();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 0, 1, v16);
      }
      else
      {
        uint64_t v17 = type metadata accessor for ExtensionMetadata();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

int *sub_1DA8FC33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v213 = a2;
  uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v214 = *(void *)(v215 - 8);
  MEMORY[0x1F4188790](v215);
  v216 = (char *)v209 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(char **)(a1 + 16);
  if (v8)
  {
    uint64_t v225 = a1;
    v226 = v8;
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v220 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DA98CA38();
    char v12 = v11;
    uint64_t v13 = *(void *)(v9 + 16);
    if (v13)
    {
      uint64_t v2 = v10;
      v230 = (char *)v9;
      unint64_t v14 = (unsigned __int8 *)(v9 + 64);
      while (1)
      {
        uint64_t v5 = (char *)*((void *)v14 - 3);
        uint64_t v15 = *((void *)v14 - 2);
        unint64_t v3 = *((void *)v14 - 1);
        unint64_t v4 = *v14;
        if (*((void *)v14 - 4) == v2 && v5 == v12) {
          break;
        }
        if (sub_1DA98CE58()) {
          goto LABEL_13;
        }
        v14 += 40;
        if (!--v13) {
          goto LABEL_10;
        }
      }
      LOBYTE(v5) = (_BYTE)v12;
LABEL_13:
      swift_bridgeObjectRetain();
      sub_1DA7A1AA8(v15, v3, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v231 = sub_1DA8F6590(v15, v3, v4);
      uint64_t v2 = v17;
      sub_1DA79EB2C(v15, v3, v4);
      uint64_t v18 = v230;
      swift_bridgeObjectRelease();
      if (v2)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1DA98CA38();
        uint64_t v21 = v20;
        uint64_t v22 = *((void *)v18 + 2);
        if (v22)
        {
          uint64_t v23 = v19;
          uint64_t v24 = v18 + 64;
          do
          {
            unint64_t v3 = *((void *)v24 - 2);
            unint64_t v4 = *((void *)v24 - 1);
            LOBYTE(v5) = *v24;
            BOOL v25 = *((void *)v24 - 4) == v23 && *((void *)v24 - 3) == v21;
            if (v25 || (sub_1DA98CE58() & 1) != 0) {
              goto LABEL_24;
            }
            v24 += 40;
            --v22;
          }
          while (v22);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
LABEL_10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  do
  {
LABEL_23:
    sub_1DA98CBB8();
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    sub_1DA7A1AA8(v3, v4, (char)v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v222 = sub_1DA8F6590(v3, v4, (char)v5);
    uint64_t v27 = v26;
    sub_1DA79EB2C(v3, v4, (char)v5);
    uint64_t v28 = v230;
    swift_bridgeObjectRelease();
    uint64_t v224 = v27;
  }
  while (!v27);
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1DA98CA38();
  uint64_t v31 = v30;
  uint64_t v32 = *((void *)v28 + 2);
  if (v32)
  {
    uint64_t v33 = v29;
    char v34 = v28 + 64;
    while (1)
    {
      unint64_t v3 = *((void *)v34 - 2);
      unint64_t v4 = *((void *)v34 - 1);
      char v35 = *v34;
      BOOL v36 = *((void *)v34 - 4) == v33 && *((void *)v34 - 3) == v31;
      if (v36 || (sub_1DA98CE58() & 1) != 0) {
        break;
      }
      v34 += 40;
      if (!--v32) {
        goto LABEL_33;
      }
    }
    swift_bridgeObjectRetain();
    sub_1DA7A1AA8(v3, v4, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v221 = sub_1DA8F6590(v3, v4, v35);
    uint64_t v223 = v37;
    sub_1DA79EB2C(v3, v4, v35);
  }
  else
  {
LABEL_33:
    swift_bridgeObjectRelease();
    uint64_t v221 = 0;
    uint64_t v223 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
  uint64_t v40 = 0;
  uint64_t v5 = v226;
  do
  {
    uint64_t v41 = (char *)(v40 + 1);
    if (__OFADD__(v40, 1))
    {
LABEL_264:
      __break(1u);
      goto LABEL_265;
    }
    *(void *)&long long v235 = *(void *)(v225 + 8 * v40 + 32);
    swift_bridgeObjectRetain();
    uint64_t v42 = v232;
    char v43 = sub_1DA8FE410((uint64_t *)&v235, v231, v2, v222, v224, v221, v223);
    uint64_t v232 = v42;
    uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_23;
    }
    ++v40;
  }
  while (v41 != v5);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  sub_1DA7A0410(&qword_1EBE5A0F8, &qword_1EBE66CF0);
  sub_1DA7A0410(&qword_1EBE5A120, &qword_1EBE66CF0);
  sub_1DA7A0410(&qword_1EBE5A100, &qword_1EBE66CF0);
  sub_1DA7A0410(&qword_1EBE5A108, &qword_1EBE66CF0);
  sub_1DA989AA8();
  uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
  unint64_t v44 = 0;
  unint64_t v45 = (char *)MEMORY[0x1E4FBC860];
  long long v210 = xmmword_1DA994650;
  uint64_t v212 = MEMORY[0x1E4FBC840] + 8;
  long long v219 = xmmword_1DA993170;
  uint64_t v46 = v220;
  while (!__OFADD__(v44, 1))
  {
    v230 = v44 + 1;
    uint64_t v47 = *(void *)(v46 + 8 * (void)v44);
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1DA98CA38();
    uint64_t v50 = v49;
    uint64_t v51 = *(void *)(v47 + 16);
    if (v51)
    {
      uint64_t v52 = v48;
      v227 = (void *)v47;
      v228 = v45;
      uint64_t v53 = (char *)(v47 + 64);
      v229 = v53;
      uint64_t v231 = v51;
      uint64_t v54 = v51;
      while (1)
      {
        uint64_t v55 = *((void *)v53 - 2);
        unint64_t v56 = *((void *)v53 - 1);
        uint64_t v57 = *v53;
        BOOL v58 = *((void *)v53 - 4) == v52 && *((void *)v53 - 3) == v50;
        if (v58 || (sub_1DA98CE58() & 1) != 0) {
          break;
        }
        v53 += 40;
        if (!--v54)
        {
          swift_bridgeObjectRelease();
          uint64_t v5 = v226;
LABEL_52:
          unint64_t v45 = v228;
          goto LABEL_73;
        }
      }
      swift_bridgeObjectRetain();
      sub_1DA7A1AA8(v55, v56, v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v226;
      switch(v57)
      {
        case 1:
          v237 = &off_1F34D99D0;
          uint64_t v59 = MEMORY[0x1E4FBB3D0];
          goto LABEL_60;
        case 2:
          uint64_t v236 = MEMORY[0x1E4FBB1A0];
          v237 = &off_1F34D99C8;
          *(void *)&long long v235 = v55;
          *((void *)&v235 + 1) = v56;
          swift_bridgeObjectRetain();
          break;
        case 3:
          uint64_t v236 = MEMORY[0x1E4F277C0];
          v237 = &off_1F34D5038;
          *(void *)&long long v235 = v55;
          *((void *)&v235 + 1) = v56;
          sub_1DA79ED98(v55, v56);
          break;
        case 4:
          id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
          uint64_t v236 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
          v237 = &off_1F34D9D00;
          *(void *)&long long v235 = v60;
          break;
        default:
          v237 = &off_1F34D9D78;
          uint64_t v59 = MEMORY[0x1E4FBC1C8];
LABEL_60:
          uint64_t v236 = v59;
          *(void *)&long long v235 = v55;
          break;
      }
      unint64_t v45 = v228;
      sub_1DA7A19A4(&v235, (uint64_t)v234);
      uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
      if (!swift_dynamicCast())
      {
        long long v233 = v219;
        sub_1DA79EB2C(v55, v56, v57);
        goto LABEL_73;
      }
      *(void *)&long long v218 = v61;
      unint64_t v62 = *((void *)&v233 + 1);
      *((void *)&v218 + 1) = v233;
      sub_1DA79EB2C(v55, v56, v57);
      if (v62 >> 60 == 15) {
        goto LABEL_73;
      }
      unint64_t v217 = v62;
      uint64_t isUniquelyReferenced_nonNull_native = sub_1DA98CA38();
      uint64_t v63 = isUniquelyReferenced_nonNull_native;
      unint64_t v64 = v39;
      uint64_t v65 = 0;
      uint64_t v66 = v229;
      while (1)
      {
        uint64_t v67 = v65 + 1;
        if (__OFADD__(v65, 1))
        {
          __break(1u);
LABEL_262:
          __break(1u);
LABEL_263:
          __break(1u);
          goto LABEL_264;
        }
        uint64_t v68 = *((void *)v66 - 2);
        unint64_t v69 = *((void *)v66 - 1);
        uint64_t v70 = *v66;
        if (*((void *)v66 - 4) == v63 && *((void *)v66 - 3) == v64) {
          break;
        }
        uint64_t isUniquelyReferenced_nonNull_native = sub_1DA98CE58();
        if (isUniquelyReferenced_nonNull_native) {
          break;
        }
        v66 += 40;
        ++v65;
        if (v67 == v231)
        {
          swift_bridgeObjectRelease();
          sub_1DA7A1ACC(*((uint64_t *)&v218 + 1), v217);
          uint64_t v5 = v226;
LABEL_101:
          uint64_t v46 = v220;
          goto LABEL_52;
        }
      }
      swift_bridgeObjectRetain();
      sub_1DA7A1AA8(v68, v69, v70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v226;
      uint64_t v46 = v220;
      unint64_t v45 = v228;
      unint64_t v75 = v217;
      switch(v70)
      {
        case 1:
          v237 = &off_1F34D99D0;
          uint64_t v76 = MEMORY[0x1E4FBB3D0];
          goto LABEL_85;
        case 2:
          uint64_t v236 = MEMORY[0x1E4FBB1A0];
          v237 = &off_1F34D99C8;
          *(void *)&long long v235 = v68;
          *((void *)&v235 + 1) = v69;
          swift_bridgeObjectRetain();
          break;
        case 3:
          uint64_t v236 = MEMORY[0x1E4F277C0];
          v237 = &off_1F34D5038;
          *(void *)&long long v235 = v68;
          *((void *)&v235 + 1) = v69;
          sub_1DA79ED98(v68, v69);
          break;
        case 4:
          id v77 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
          unint64_t v75 = v217;
          uint64_t v236 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
          v237 = &off_1F34D9D00;
          *(void *)&long long v235 = v77;
          break;
        default:
          v237 = &off_1F34D9D78;
          uint64_t v76 = MEMORY[0x1E4FBC1C8];
LABEL_85:
          uint64_t v236 = v76;
          *(void *)&long long v235 = v68;
          break;
      }
      sub_1DA7A19A4(&v235, (uint64_t)v234);
      if ((swift_dynamicCast() & 1) == 0)
      {
        *(void *)&long long v233 = 0;
        BYTE8(v233) = 1;
        sub_1DA79EB2C(v68, v69, v70);
        sub_1DA7A1ACC(*((uint64_t *)&v218 + 1), v75);
        goto LABEL_73;
      }
      BYTE8(v233) = 0;
      *(void *)&long long v218 = v233;
      sub_1DA79EB2C(v68, v69, v70);
      uint64_t isUniquelyReferenced_nonNull_native = sub_1DA98CA38();
      uint64_t v78 = isUniquelyReferenced_nonNull_native;
      unint64_t v79 = v39;
      uint64_t v80 = 0;
      while (1)
      {
        uint64_t v81 = v80 + 1;
        if (__OFADD__(v80, 1)) {
          goto LABEL_268;
        }
        uint64_t v82 = *((void *)v229 - 2);
        unint64_t v83 = *((void *)v229 - 1);
        char v84 = *v229;
        if (*((void *)v229 - 4) == v78 && *((void *)v229 - 3) == v79) {
          break;
        }
        uint64_t isUniquelyReferenced_nonNull_native = sub_1DA98CE58();
        if (isUniquelyReferenced_nonNull_native) {
          break;
        }
        unint64_t v45 = v228;
        v229 += 40;
        ++v80;
        if (v81 == v231)
        {
          swift_bridgeObjectRelease();
          sub_1DA7A1ACC(*((uint64_t *)&v218 + 1), v217);
          uint64_t v46 = v220;
          goto LABEL_73;
        }
      }
      swift_bridgeObjectRetain();
      sub_1DA7A1AA8(v82, v83, v84);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v86 = sub_1DA8F66F4(v82, v83, v84);
      char v88 = v87;
      sub_1DA79EB2C(v82, v83, v84);
      if (v88)
      {
        sub_1DA7A1ACC(*((uint64_t *)&v218 + 1), v217);
        goto LABEL_101;
      }
      uint64_t v46 = v220;
      unint64_t v45 = v228;
      uint64_t v89 = *((void *)&v218 + 1);
      if ((void)v218)
      {
        uint64_t v90 = *((void *)&v218 + 1);
        unint64_t v91 = v217;
LABEL_104:
        sub_1DA7A1ACC(v90, v91);
        goto LABEL_73;
      }
      unint64_t v92 = v217;
      if (v86)
      {
        uint64_t v90 = *((void *)&v218 + 1);
        unint64_t v91 = v217;
        goto LABEL_104;
      }
      sub_1DA7A1A08(0, &qword_1EBE58EF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A7C0);
      uint64_t v93 = swift_allocObject();
      *(_OWORD *)(v93 + 16) = v210;
      *(void *)(v93 + 32) = sub_1DA7A1A08(0, &qword_1EBE5A6E0);
      *(void *)(v93 + 40) = sub_1DA7A1A08(0, &qword_1EBE64D48);
      uint64_t v94 = v232;
      sub_1DA98C588();
      if (v94)
      {
        sub_1DA7A1ACC(v89, v92);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_275;
      }
      sub_1DA7A1ACC(v89, v92);
      swift_bridgeObjectRelease();
      uint64_t v232 = 0;
      if (v236)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A668);
        if (swift_dynamicCast()) {
          goto LABEL_74;
        }
      }
      else
      {
        sub_1DA7A1AE0((uint64_t)&v235, &qword_1EBE66B48);
      }
      uint64_t v238 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_73:
      uint64_t v238 = 0;
    }
LABEL_74:
    uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
    uint64_t v72 = v238;
    if (v238)
    {
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DA7CB208(0, *((void *)v45 + 2) + 1, 1, v45);
        unint64_t v45 = (char *)isUniquelyReferenced_nonNull_native;
      }
      unint64_t v74 = *((void *)v45 + 2);
      unint64_t v73 = *((void *)v45 + 3);
      if (v74 >= v73 >> 1)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DA7CB208((void *)(v73 > 1), v74 + 1, 1, v45);
        unint64_t v45 = (char *)isUniquelyReferenced_nonNull_native;
      }
      *((void *)v45 + 2) = v74 + 1;
      *(void *)&v45[8 * v74 + 32] = v72;
    }
    unint64_t v44 = v230;
    if (v230 == v5)
    {
      swift_bridgeObjectRelease();
      *(void *)&long long v235 = MEMORY[0x1E4FBC860];
      uint64_t v95 = *((void *)v45 + 2);
      if (v95)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v95; ++i)
        {
          unint64_t v97 = swift_bridgeObjectRetain();
          sub_1DA884648(v97);
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v212 = v235;
      uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
      v98 = 0;
      v99 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v211 = MEMORY[0x1E4FBC840] + 8;
      while (!__OFADD__(v98, 1))
      {
        v229 = v98 + 1;
        uint64_t v100 = *(void *)(v46 + 8 * (void)v98);
        swift_bridgeObjectRetain();
        uint64_t v101 = sub_1DA98CA38();
        uint64_t v103 = v102;
        uint64_t v104 = *(void *)(v100 + 16);
        v230 = (char *)v100;
        if (v104)
        {
          uint64_t v105 = v101;
          v106 = (unsigned __int8 *)(v100 + 64);
          v227 = v99;
          v228 = (char *)(v100 + 64);
          uint64_t v231 = v104;
          uint64_t v107 = v104;
          while (1)
          {
            uint64_t v108 = *((void *)v106 - 2);
            unint64_t v109 = *((void *)v106 - 1);
            uint64_t v110 = *v106;
            BOOL v111 = *((void *)v106 - 4) == v105 && *((void *)v106 - 3) == v103;
            if (v111 || (sub_1DA98CE58() & 1) != 0) {
              break;
            }
            v106 += 40;
            if (!--v107)
            {
              swift_bridgeObjectRelease();
              uint64_t v5 = v226;
              v99 = v227;
              goto LABEL_148;
            }
          }
          swift_bridgeObjectRetain();
          sub_1DA7A1AA8(v108, v109, v110);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v5 = v226;
          v99 = v227;
          switch(v110)
          {
            case 1:
              v237 = &off_1F34D99D0;
              uint64_t v112 = MEMORY[0x1E4FBB3D0];
              goto LABEL_135;
            case 2:
              uint64_t v236 = MEMORY[0x1E4FBB1A0];
              v237 = &off_1F34D99C8;
              *(void *)&long long v235 = v108;
              *((void *)&v235 + 1) = v109;
              swift_bridgeObjectRetain();
              break;
            case 3:
              uint64_t v236 = MEMORY[0x1E4F277C0];
              v237 = &off_1F34D5038;
              *(void *)&long long v235 = v108;
              *((void *)&v235 + 1) = v109;
              sub_1DA79ED98(v108, v109);
              break;
            case 4:
              id v113 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
              uint64_t v236 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
              v237 = &off_1F34D9D00;
              *(void *)&long long v235 = v113;
              break;
            default:
              v237 = &off_1F34D9D78;
              uint64_t v112 = MEMORY[0x1E4FBC1C8];
LABEL_135:
              uint64_t v236 = v112;
              *(void *)&long long v235 = v108;
              break;
          }
          sub_1DA7A19A4(&v235, (uint64_t)v234);
          uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
          if (swift_dynamicCast())
          {
            long long v115 = v233;
            sub_1DA79EB2C(v108, v109, v110);
            if (*((void *)&v115 + 1) >> 60 != 15)
            {
              unint64_t v217 = v114;
              long long v218 = v115;
              uint64_t isUniquelyReferenced_nonNull_native = sub_1DA98CA38();
              uint64_t v116 = isUniquelyReferenced_nonNull_native;
              unint64_t v117 = v39;
              uint64_t v118 = 0;
              v119 = v228;
              while (1)
              {
                uint64_t v120 = v118 + 1;
                if (__OFADD__(v118, 1)) {
                  goto LABEL_262;
                }
                uint64_t v121 = *((void *)v119 - 2);
                unint64_t v122 = *((void *)v119 - 1);
                uint64_t v123 = *v119;
                BOOL v124 = *((void *)v119 - 4) == v116 && *((void *)v119 - 3) == v117;
                if (v124
                  || (uint64_t isUniquelyReferenced_nonNull_native = sub_1DA98CE58(),
                      (isUniquelyReferenced_nonNull_native & 1) != 0))
                {
                  swift_bridgeObjectRetain();
                  sub_1DA7A1AA8(v121, v122, v123);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v5 = v226;
                  v99 = v227;
                  uint64_t v46 = v220;
                  unint64_t v128 = *((void *)&v218 + 1);
                  switch(v123)
                  {
                    case 1:
                      v237 = &off_1F34D99D0;
                      uint64_t v129 = MEMORY[0x1E4FBB3D0];
                      goto LABEL_160;
                    case 2:
                      uint64_t v236 = MEMORY[0x1E4FBB1A0];
                      v237 = &off_1F34D99C8;
                      *(void *)&long long v235 = v121;
                      *((void *)&v235 + 1) = v122;
                      swift_bridgeObjectRetain();
                      break;
                    case 3:
                      uint64_t v236 = MEMORY[0x1E4F277C0];
                      v237 = &off_1F34D5038;
                      *(void *)&long long v235 = v121;
                      *((void *)&v235 + 1) = v122;
                      sub_1DA79ED98(v121, v122);
                      break;
                    case 4:
                      id v130 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
                      uint64_t v236 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
                      v237 = &off_1F34D9D00;
                      *(void *)&long long v235 = v130;
                      break;
                    default:
                      v237 = &off_1F34D9D78;
                      uint64_t v129 = MEMORY[0x1E4FBC1C8];
LABEL_160:
                      uint64_t v236 = v129;
                      *(void *)&long long v235 = v121;
                      break;
                  }
                  sub_1DA7A19A4(&v235, (uint64_t)v234);
                  if ((swift_dynamicCast() & 1) == 0)
                  {
                    *(void *)&long long v233 = 0;
                    BYTE8(v233) = 1;
                    sub_1DA79EB2C(v121, v122, v123);
                    sub_1DA7A1ACC(v218, v128);
                    break;
                  }
                  BYTE8(v233) = 0;
                  unint64_t v217 = v233;
                  sub_1DA79EB2C(v121, v122, v123);
                  uint64_t isUniquelyReferenced_nonNull_native = sub_1DA98CA38();
                  uint64_t v131 = isUniquelyReferenced_nonNull_native;
                  unint64_t v132 = v39;
                  uint64_t v133 = 0;
                  while (1)
                  {
                    uint64_t v134 = v133 + 1;
                    if (__OFADD__(v133, 1)) {
                      goto LABEL_269;
                    }
                    uint64_t v135 = *((void *)v228 - 2);
                    unint64_t v136 = *((void *)v228 - 1);
                    char v137 = *v228;
                    BOOL v138 = *((void *)v228 - 4) == v131 && *((void *)v228 - 3) == v132;
                    if (v138
                      || (uint64_t isUniquelyReferenced_nonNull_native = sub_1DA98CE58(),
                          (isUniquelyReferenced_nonNull_native & 1) != 0))
                    {
                      swift_bridgeObjectRetain();
                      sub_1DA7A1AA8(v135, v136, v137);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v139 = sub_1DA8F66F4(v135, v136, v137);
                      char v141 = v140;
                      sub_1DA79EB2C(v135, v136, v137);
                      if (v141)
                      {
                        sub_1DA7A1ACC(v218, *((unint64_t *)&v218 + 1));
                        goto LABEL_180;
                      }
                      uint64_t v46 = v220;
                      v99 = v227;
                      unint64_t v142 = *((void *)&v218 + 1);
                      uint64_t v143 = v218;
                      if (v217 || v139 != 2)
                      {
                        sub_1DA7A1ACC(v218, *((unint64_t *)&v218 + 1));
                        goto LABEL_148;
                      }
                      sub_1DA7A1A08(0, &qword_1EBE58EF0);
                      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A7C0);
                      uint64_t v144 = swift_allocObject();
                      *(_OWORD *)(v144 + 16) = v210;
                      *(void *)(v144 + 32) = sub_1DA7A1A08(0, &qword_1EBE5A6E0);
                      *(void *)(v144 + 40) = sub_1DA7A1A08(0, &qword_1EBE5A018);
                      uint64_t v145 = v232;
                      sub_1DA98C588();
                      uint64_t isUniquelyReferenced_nonNull_native = v143;
                      unint64_t v39 = v142;
                      if (v145) {
                        goto LABEL_271;
                      }
                      sub_1DA7A1ACC(v143, v142);
                      swift_bridgeObjectRelease();
                      uint64_t v232 = 0;
                      if (!v236)
                      {
                        sub_1DA7A1AE0((uint64_t)&v235, &qword_1EBE66B48);
                        goto LABEL_148;
                      }
                      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A010);
                      if ((swift_dynamicCast() & 1) == 0) {
                        goto LABEL_148;
                      }
                      goto LABEL_149;
                    }
                    v99 = v227;
                    v228 += 40;
                    ++v133;
                    if (v134 == v231)
                    {
                      swift_bridgeObjectRelease();
                      sub_1DA7A1ACC(v218, *((unint64_t *)&v218 + 1));
                      uint64_t v46 = v220;
                      goto LABEL_148;
                    }
                  }
                }
                v119 += 40;
                ++v118;
                if (v120 == v231)
                {
                  swift_bridgeObjectRelease();
                  sub_1DA7A1ACC(v218, *((unint64_t *)&v218 + 1));
                  uint64_t v5 = v226;
LABEL_180:
                  uint64_t v46 = v220;
                  v99 = v227;
                  break;
                }
              }
            }
          }
          else
          {
            long long v233 = v219;
            sub_1DA79EB2C(v108, v109, v110);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
LABEL_148:
        uint64_t v238 = 0;
LABEL_149:
        uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
        uint64_t v125 = v238;
        if (v238)
        {
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DA7CB0D8(0, v99[2] + 1, 1, v99);
            v99 = (void *)isUniquelyReferenced_nonNull_native;
          }
          unint64_t v127 = v99[2];
          unint64_t v126 = v99[3];
          if (v127 >= v126 >> 1)
          {
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DA7CB0D8((void *)(v126 > 1), v127 + 1, 1, v99);
            v99 = (void *)isUniquelyReferenced_nonNull_native;
          }
          v99[2] = v127 + 1;
          v99[v127 + 4] = v125;
        }
        v98 = v229;
        if (v229 == v5)
        {
          swift_bridgeObjectRelease();
          *(void *)&long long v235 = MEMORY[0x1E4FBC860];
          uint64_t v146 = v99[2];
          if (v146)
          {
            swift_bridgeObjectRetain();
            for (uint64_t j = 0; j != v146; ++j)
            {
              unint64_t v148 = swift_bridgeObjectRetain();
              sub_1DA884808(v148);
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v211 = v235;
          uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
          v149 = 0;
          v150 = (void *)MEMORY[0x1E4FBC860];
          v209[1] = MEMORY[0x1E4FBC840] + 8;
          while (!__OFADD__(v149, 1))
          {
            v229 = v149 + 1;
            uint64_t v151 = *(void *)(v46 + 8 * (void)v149);
            swift_bridgeObjectRetain();
            uint64_t v152 = sub_1DA98CA38();
            uint64_t v154 = v153;
            uint64_t v155 = *(void *)(v151 + 16);
            v230 = (char *)v151;
            if (v155)
            {
              uint64_t v156 = v152;
              v157 = (unsigned __int8 *)(v151 + 64);
              v227 = v150;
              v228 = (char *)(v151 + 64);
              uint64_t v231 = v155;
              uint64_t v158 = v155;
              while (1)
              {
                uint64_t v159 = *((void *)v157 - 2);
                unint64_t v160 = *((void *)v157 - 1);
                uint64_t v161 = *v157;
                BOOL v162 = *((void *)v157 - 4) == v156 && *((void *)v157 - 3) == v154;
                if (v162 || (sub_1DA98CE58() & 1) != 0) {
                  break;
                }
                v157 += 40;
                if (!--v158)
                {
                  swift_bridgeObjectRelease();
LABEL_200:
                  uint64_t v46 = v220;
                  v150 = v227;
                  goto LABEL_221;
                }
              }
              swift_bridgeObjectRetain();
              sub_1DA7A1AA8(v159, v160, v161);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v46 = v220;
              v150 = v227;
              switch(v161)
              {
                case 1:
                  v237 = &off_1F34D99D0;
                  uint64_t v163 = MEMORY[0x1E4FBB3D0];
                  goto LABEL_208;
                case 2:
                  uint64_t v236 = MEMORY[0x1E4FBB1A0];
                  v237 = &off_1F34D99C8;
                  *(void *)&long long v235 = v159;
                  *((void *)&v235 + 1) = v160;
                  swift_bridgeObjectRetain();
                  break;
                case 3:
                  uint64_t v236 = MEMORY[0x1E4F277C0];
                  v237 = &off_1F34D5038;
                  *(void *)&long long v235 = v159;
                  *((void *)&v235 + 1) = v160;
                  sub_1DA79ED98(v159, v160);
                  break;
                case 4:
                  id v164 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
                  uint64_t v236 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
                  v237 = &off_1F34D9D00;
                  *(void *)&long long v235 = v164;
                  break;
                default:
                  v237 = &off_1F34D9D78;
                  uint64_t v163 = MEMORY[0x1E4FBC1C8];
LABEL_208:
                  uint64_t v236 = v163;
                  *(void *)&long long v235 = v159;
                  break;
              }
              sub_1DA7A19A4(&v235, (uint64_t)v234);
              uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
              if (!swift_dynamicCast())
              {
                long long v233 = v219;
                sub_1DA79EB2C(v159, v160, v161);
                goto LABEL_221;
              }
              long long v166 = v233;
              sub_1DA79EB2C(v159, v160, v161);
              if (*((void *)&v166 + 1) >> 60 == 15) {
                goto LABEL_221;
              }
              unint64_t v217 = v165;
              long long v218 = v166;
              uint64_t isUniquelyReferenced_nonNull_native = sub_1DA98CA38();
              uint64_t v167 = isUniquelyReferenced_nonNull_native;
              unint64_t v168 = v39;
              uint64_t v169 = 0;
              v170 = v228;
              while (1)
              {
                uint64_t v171 = v169 + 1;
                if (__OFADD__(v169, 1)) {
                  goto LABEL_263;
                }
                uint64_t v172 = *((void *)v170 - 2);
                unint64_t v173 = *((void *)v170 - 1);
                uint64_t v174 = *v170;
                BOOL v175 = *((void *)v170 - 4) == v167 && *((void *)v170 - 3) == v168;
                if (v175
                  || (uint64_t isUniquelyReferenced_nonNull_native = sub_1DA98CE58(),
                      (isUniquelyReferenced_nonNull_native & 1) != 0))
                {
                  swift_bridgeObjectRetain();
                  sub_1DA7A1AA8(v172, v173, v174);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v5 = v226;
                  v150 = v227;
                  uint64_t v46 = v220;
                  unint64_t v179 = *((void *)&v218 + 1);
                  switch(v174)
                  {
                    case 1:
                      v237 = &off_1F34D99D0;
                      uint64_t v180 = MEMORY[0x1E4FBB3D0];
                      goto LABEL_233;
                    case 2:
                      uint64_t v236 = MEMORY[0x1E4FBB1A0];
                      v237 = &off_1F34D99C8;
                      *(void *)&long long v235 = v172;
                      *((void *)&v235 + 1) = v173;
                      swift_bridgeObjectRetain();
                      break;
                    case 3:
                      uint64_t v236 = MEMORY[0x1E4F277C0];
                      v237 = &off_1F34D5038;
                      *(void *)&long long v235 = v172;
                      *((void *)&v235 + 1) = v173;
                      sub_1DA79ED98(v172, v173);
                      break;
                    case 4:
                      id v181 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
                      uint64_t v236 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
                      v237 = &off_1F34D9D00;
                      *(void *)&long long v235 = v181;
                      break;
                    default:
                      v237 = &off_1F34D9D78;
                      uint64_t v180 = MEMORY[0x1E4FBC1C8];
LABEL_233:
                      uint64_t v236 = v180;
                      *(void *)&long long v235 = v172;
                      break;
                  }
                  sub_1DA7A19A4(&v235, (uint64_t)v234);
                  if ((swift_dynamicCast() & 1) == 0)
                  {
                    *(void *)&long long v233 = 0;
                    BYTE8(v233) = 1;
                    sub_1DA79EB2C(v172, v173, v174);
                    sub_1DA7A1ACC(v218, v179);
                    goto LABEL_221;
                  }
                  BYTE8(v233) = 0;
                  unint64_t v217 = v233;
                  sub_1DA79EB2C(v172, v173, v174);
                  uint64_t isUniquelyReferenced_nonNull_native = sub_1DA98CA38();
                  uint64_t v182 = isUniquelyReferenced_nonNull_native;
                  unint64_t v183 = v39;
                  uint64_t v184 = 0;
                  while (1)
                  {
                    uint64_t v185 = v184 + 1;
                    if (__OFADD__(v184, 1)) {
                      goto LABEL_270;
                    }
                    uint64_t v186 = *((void *)v228 - 2);
                    unint64_t v187 = *((void *)v228 - 1);
                    char v188 = *v228;
                    BOOL v189 = *((void *)v228 - 4) == v182 && *((void *)v228 - 3) == v183;
                    if (v189
                      || (uint64_t isUniquelyReferenced_nonNull_native = sub_1DA98CE58(),
                          (isUniquelyReferenced_nonNull_native & 1) != 0))
                    {
                      swift_bridgeObjectRetain();
                      sub_1DA7A1AA8(v186, v187, v188);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v190 = sub_1DA8F66F4(v186, v187, v188);
                      char v192 = v191;
                      sub_1DA79EB2C(v186, v187, v188);
                      uint64_t v46 = v220;
                      if (v192)
                      {
                        sub_1DA7A1ACC(v218, *((unint64_t *)&v218 + 1));
                        v150 = v227;
                        goto LABEL_221;
                      }
                      v150 = v227;
                      unint64_t v193 = *((void *)&v218 + 1);
                      uint64_t v194 = v218;
                      if (v217 || v190 != 1)
                      {
                        sub_1DA7A1ACC(v218, *((unint64_t *)&v218 + 1));
                        goto LABEL_221;
                      }
                      sub_1DA7A1A08(0, &qword_1EBE58EF0);
                      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A7C0);
                      uint64_t v195 = swift_allocObject();
                      *(_OWORD *)(v195 + 16) = v210;
                      *(void *)(v195 + 32) = sub_1DA7A1A08(0, &qword_1EBE5A6E0);
                      *(void *)(v195 + 40) = sub_1DA7A1A08(0, &qword_1EBE5A6D8);
                      uint64_t v196 = v232;
                      sub_1DA98C588();
                      if (v196)
                      {
                        sub_1DA7A1ACC(v194, v193);
                        swift_bridgeObjectRelease();
                        goto LABEL_273;
                      }
                      sub_1DA7A1ACC(v194, v193);
                      swift_bridgeObjectRelease();
                      uint64_t v232 = 0;
                      if (!v236)
                      {
                        sub_1DA7A1AE0((uint64_t)&v235, &qword_1EBE66B48);
                        goto LABEL_221;
                      }
                      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A680);
                      if ((swift_dynamicCast() & 1) == 0) {
                        goto LABEL_221;
                      }
                      goto LABEL_222;
                    }
                    v150 = v227;
                    v228 += 40;
                    ++v184;
                    if (v185 == v231)
                    {
                      swift_bridgeObjectRelease();
                      sub_1DA7A1ACC(v218, *((unint64_t *)&v218 + 1));
                      uint64_t v46 = v220;
                      goto LABEL_221;
                    }
                  }
                }
                v170 += 40;
                ++v169;
                if (v171 == v231)
                {
                  swift_bridgeObjectRelease();
                  sub_1DA7A1ACC(v218, *((unint64_t *)&v218 + 1));
                  uint64_t v5 = v226;
                  goto LABEL_200;
                }
              }
            }
            swift_bridgeObjectRelease();
LABEL_221:
            uint64_t v238 = 0;
LABEL_222:
            uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
            uint64_t v176 = v238;
            if (v238)
            {
              uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DA7CB0C4(0, v150[2] + 1, 1, v150);
                v150 = (void *)isUniquelyReferenced_nonNull_native;
              }
              unint64_t v178 = v150[2];
              unint64_t v177 = v150[3];
              if (v178 >= v177 >> 1)
              {
                uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DA7CB0C4((void *)(v177 > 1), v178 + 1, 1, v150);
                v150 = (void *)isUniquelyReferenced_nonNull_native;
              }
              v150[2] = v178 + 1;
              v150[v178 + 4] = v176;
            }
            v149 = v229;
            if (v229 == v5)
            {
              swift_bridgeObjectRelease();
              *(void *)&long long v235 = MEMORY[0x1E4FBC860];
              uint64_t v197 = v150[2];
              if (v197)
              {
                swift_bridgeObjectRetain();
                uint64_t v198 = 0;
                uint64_t v199 = v212;
                uint64_t v200 = v211;
                do
                {
                  ++v198;
                  unint64_t v201 = swift_bridgeObjectRetain();
                  sub_1DA8847F0(v201);
                }
                while (v197 != v198);
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v199 = v212;
                uint64_t v200 = v211;
              }
              swift_bridgeObjectRelease();
              uint64_t v202 = v235;
              uint64_t v203 = v213;
              (*(void (**)(uint64_t, char *, uint64_t))(v214 + 32))(v213, v216, v215);
              uint64_t result = (int *)type metadata accessor for ExtensionMetadata();
              v205 = (void *)(v203 + result[8]);
              v206 = (void *)(v203 + result[5]);
              uint64_t v207 = v224;
              void *v206 = v222;
              v206[1] = v207;
              uint64_t v208 = v223;
              void *v205 = v221;
              v205[1] = v208;
              *(void *)(v203 + result[6]) = v199;
              *(void *)(v203 + result[9]) = v202;
              *(void *)(v203 + result[7]) = v200;
              return result;
            }
          }
          goto LABEL_267;
        }
      }
      goto LABEL_266;
    }
  }
LABEL_265:
  __break(1u);
LABEL_266:
  __break(1u);
LABEL_267:
  __break(1u);
LABEL_268:
  __break(1u);
LABEL_269:
  __break(1u);
LABEL_270:
  __break(1u);
LABEL_271:
  sub_1DA7A1ACC(isUniquelyReferenced_nonNull_native, v39);
LABEL_273:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_275:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (int *)(*(uint64_t (**)(char *, uint64_t))(v214 + 8))(v216, v215);
}

uint64_t sub_1DA8FE410(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = *a1;
  uint64_t v12 = sub_1DA98CA38();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v11 + 16);
  if (!v15) {
    goto LABEL_25;
  }
  uint64_t v16 = v12;
  uint64_t v59 = a7;
  uint64_t v60 = a5;
  uint64_t v58 = a6;
  uint64_t v61 = v11;
  for (uint64_t i = (char *)(v11 + 64); ; i += 40)
  {
    uint64_t v19 = *((void *)i - 2);
    unint64_t v18 = *((void *)i - 1);
    char v20 = *i;
    BOOL v21 = *((void *)i - 4) == v16 && *((void *)i - 3) == v14;
    if (v21 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v19, v18, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1DA8F6590(v19, v18, v20);
  uint64_t v24 = v23;
  sub_1DA79EB2C(v19, v18, v20);
  if (!v24) {
    return 0;
  }
  if (v22 == a2 && v24 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v26 = sub_1DA98CE58();
    swift_bridgeObjectRelease();
    BOOL v25 = 0;
    if ((v26 & 1) == 0) {
      return v25;
    }
  }
  uint64_t v27 = sub_1DA98CA38();
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v11 + 16);
  if (!v30) {
    goto LABEL_25;
  }
  uint64_t v31 = v27;
  uint64_t v32 = (char *)(v61 + 64);
  while (1)
  {
    uint64_t v33 = *((void *)v32 - 2);
    unint64_t v34 = *((void *)v32 - 1);
    char v35 = *v32;
    BOOL v36 = *((void *)v32 - 4) == v31 && *((void *)v32 - 3) == v29;
    if (v36 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v32 += 40;
    if (!--v30) {
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v33, v34, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_1DA8F6590(v33, v34, v35);
  uint64_t v40 = v39;
  sub_1DA79EB2C(v33, v34, v35);
  if (!v40) {
    return 0;
  }
  if (v38 == a4 && v40 == v60)
  {
    swift_bridgeObjectRelease();
    uint64_t v41 = v61;
  }
  else
  {
    char v42 = sub_1DA98CE58();
    swift_bridgeObjectRelease();
    BOOL v25 = 0;
    uint64_t v41 = v61;
    if ((v42 & 1) == 0) {
      return v25;
    }
  }
  uint64_t v43 = sub_1DA98CA38();
  uint64_t v45 = v44;
  uint64_t v46 = *(void *)(v41 + 16);
  if (!v46)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    uint64_t v53 = v59;
LABEL_47:
    BOOL v25 = v53 == 0;
    swift_bridgeObjectRelease();
    return v25;
  }
  uint64_t v47 = v43;
  uint64_t v48 = (char *)(v41 + 64);
  while (1)
  {
    uint64_t v49 = *((void *)v48 - 2);
    unint64_t v50 = *((void *)v48 - 1);
    char v51 = *v48;
    BOOL v52 = *((void *)v48 - 4) == v47 && *((void *)v48 - 3) == v45;
    if (v52 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v48 += 40;
    if (!--v46) {
      goto LABEL_41;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v49, v50, v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v54 = sub_1DA8F6590(v49, v50, v51);
  uint64_t v56 = v55;
  sub_1DA79EB2C(v49, v50, v51);
  uint64_t v53 = v59;
  if (!v56) {
    goto LABEL_47;
  }
  if (!v59)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v54 == v58 && v56 == v59)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  char v57 = sub_1DA98CE58();
  swift_bridgeObjectRelease();
  return v57 & 1;
}

uint64_t sub_1DA8FE810(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA91D480((uint64_t)a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
  uint64_t v5 = type metadata accessor for ExtensionMetadata();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_1DA8FE910((uint64_t)v4, a1);
  return sub_1DA7A1AE0((uint64_t)v4, (uint64_t *)&unk_1EBE595D8);
}

uint64_t sub_1DA8FE910(uint64_t a1, void *a2)
{
  unint64_t v4 = v3;
  v313 = (char *)a1;
  uint64_t v326 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v295 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  v294 = (char *)&v286 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A1A8);
  MEMORY[0x1F4188790](v297);
  uint64_t v299 = (uint64_t)&v286 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A1A0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v290 = (uint64_t)&v286 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v286 - v12;
  MEMORY[0x1F4188790](v14);
  v302 = (char *)&v286 - v15;
  v314 = (int *)type metadata accessor for ExtensionMetadata();
  v310 = (uint8_t *)*((void *)v314 - 1);
  MEMORY[0x1F4188790](v314);
  uint64_t v288 = (uint64_t)&v286 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v293 = (uint64_t)&v286 - v18;
  MEMORY[0x1F4188790](v19);
  v311 = (char *)&v286 - v20;
  uint64_t v312 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  BOOL v21 = *(void **)(v312 - 8);
  MEMORY[0x1F4188790](v312);
  v289 = (char *)&v286 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  v307 = (char *)&v286 - v24;
  MEMORY[0x1F4188790](v25);
  v308 = (char *)&v286 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v296 = (uint64_t)&v286 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v306 = (uint64_t)&v286 - v30;
  MEMORY[0x1F4188790](v31);
  v301 = (char *)&v286 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v309 = (uint64_t)&v286 - v34;
  int64_t v303 = v2;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_72;
  }
  BOOL v36 = (void *)Strong;
  unint64_t v37 = *(void *)(Strong + 24);
  uint64_t v38 = *(os_unfair_lock_s **)(v37 + 16);
  swift_retain();
  os_unfair_lock_lock(v38);
  unint64_t v39 = v36[8];
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 16));
  swift_release();
  swift_release();
  if (!v39)
  {
    __break(1u);
    goto LABEL_63;
  }
  v298 = v13;
  v300 = v4;
  uint64_t v291 = v6;
  uint64_t v41 = v309;
  sub_1DA7A1F58((uint64_t)v313, v309, (uint64_t *)&unk_1EBE595D8);
  char v42 = (void (*)(char *, char *, uint64_t))v21[2];
  uint64_t v43 = v308;
  v304 = a2;
  uint64_t v44 = v312;
  v42(v308, (char *)a2, v312);
  uint64_t v45 = v310 + 48;
  v305 = (uint64_t (*)(uint64_t, uint64_t, int *))*((void *)v310 + 6);
  int v46 = v305(v41, 1, v314);
  uint64_t v47 = v41;
  uint64_t v48 = v306;
  sub_1DA7A1F58(v47, v306, (uint64_t *)&unk_1EBE595D8);
  uint64_t v49 = v307;
  v292 = v21 + 2;
  v42(v307, v43, v44);
  if (v46 == 1)
  {
    unint64_t v50 = (void (*)(char *, uint64_t))v21[1];
    v50(v49, v44);
    sub_1DA7A1AE0(v48, (uint64_t *)&unk_1EBE595D8);
    v50(v43, v44);
    uint64_t v13 = v313;
    uint64_t v51 = (uint64_t)v311;
LABEL_11:
    uint64_t v68 = (uint64_t)v301;
    goto LABEL_14;
  }
  v287 = v42;
  uint64_t v52 = v296;
  sub_1DA7A1F58(v48, v296, (uint64_t *)&unk_1EBE595D8);
  v310 = v45;
  int v53 = v305(v52, 1, v314);
  v286 = v21;
  if (v53 == 1)
  {
    sub_1DA7A1AE0(v52, (uint64_t *)&unk_1EBE595D8);
    uint64_t v54 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v21[7];
    uint64_t v55 = v312;
    v54((uint64_t)v302, 1, 1, v312);
    uint64_t v56 = v299;
    uint64_t v57 = v297;
    uint64_t v58 = v287;
  }
  else
  {
    uint64_t v59 = (uint64_t)v302;
    uint64_t v55 = v312;
    uint64_t v58 = v287;
    v287(v302, (char *)v52, v312);
    sub_1DA91D4E8(v52, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
    uint64_t v54 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v21[7];
    v54(v59, 0, 1, v55);
    uint64_t v56 = v299;
    uint64_t v57 = v297;
  }
  uint64_t v60 = (uint64_t)v298;
  v58(v298, v49, v55);
  v54(v60, 0, 1, v55);
  uint64_t v61 = v56 + *(int *)(v57 + 48);
  uint64_t v62 = (uint64_t)v302;
  sub_1DA7A1F58((uint64_t)v302, v56, &qword_1EBE5A1A0);
  sub_1DA7A1F58(v60, v61, &qword_1EBE5A1A0);
  uint64_t v63 = v286;
  uint64_t v64 = v56;
  uint64_t v65 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v286[6];
  int v66 = v65(v64, 1, v55);
  uint64_t v13 = v313;
  if (v66 == 1)
  {
    sub_1DA7A1AE0(v60, &qword_1EBE5A1A0);
    sub_1DA7A1AE0(v62, &qword_1EBE5A1A0);
    uint64_t v67 = (void (*)(char *, uint64_t))v63[1];
    v67(v307, v55);
    sub_1DA7A1AE0(v306, (uint64_t *)&unk_1EBE595D8);
    v67(v308, v55);
    if (v65(v61, 1, v55) == 1)
    {
      sub_1DA7A1AE0(v299, &qword_1EBE5A1A0);
      uint64_t v51 = (uint64_t)v311;
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v69 = v290;
    sub_1DA7A1F58(v64, v290, &qword_1EBE5A1A0);
    if (v65(v61, 1, v55) != 1)
    {
      uint64_t v70 = v289;
      ((void (*)(char *, uint64_t, uint64_t))v63[4])(v289, v61, v55);
      sub_1DA7A0410(&qword_1EBE5A170, &qword_1EBE5A190);
      char v71 = sub_1DA98BFF8();
      uint64_t v72 = (void (*)(char *, uint64_t))v63[1];
      v72(v70, v55);
      sub_1DA7A1AE0((uint64_t)v298, &qword_1EBE5A1A0);
      sub_1DA7A1AE0((uint64_t)v302, &qword_1EBE5A1A0);
      v72(v307, v55);
      sub_1DA7A1AE0(v306, (uint64_t *)&unk_1EBE595D8);
      v72(v308, v55);
      v72((char *)v69, v55);
      sub_1DA7A1AE0(v64, &qword_1EBE5A1A0);
      uint64_t v51 = (uint64_t)v311;
      uint64_t v68 = (uint64_t)v301;
      if (v71)
      {
LABEL_14:
        sub_1DA7A1AE0(v309, (uint64_t *)&unk_1EBE595D8);
        sub_1DA7A1F58((uint64_t)v13, v68, (uint64_t *)&unk_1EBE595D8);
        if (v305(v68, 1, v314) == 1)
        {
          sub_1DA7A1AE0(v68, (uint64_t *)&unk_1EBE595D8);
          v321 = 0;
          unint64_t v322 = 0xE000000000000000;
          unint64_t v73 = (void *)MEMORY[0x1E4FBC860];
          unint64_t v74 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
          MEMORY[0x1E01772A0](23);
          unint64_t v323 = v74;
          sub_1DA98C148();
          sub_1DA98CA38();
          sub_1DA98C148();
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          sub_1DA98CA38();
          sub_1DA98C148();
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          uint64_t v75 = sub_1DA989AB8();
          uint64_t v77 = v76;
          swift_bridgeObjectRetain();
          uint64_t v78 = sub_1DA79EBAC(v75, v77);
          unint64_t v80 = v79;
          char v82 = v81;
          sub_1DA8E40CC(v78, v79, v81);
          sub_1DA79EB2C(v78, v80, v82);
          swift_bridgeObjectRelease();
          BOOL v36 = v321;
          uint64_t v6 = v322;
          unint64_t v37 = v323;
          unint64_t v4 = sub_1DA7CB21C(0, 1, 1, v73);
          unint64_t v39 = v4[2];
          unint64_t v40 = v4[3];
          int64_t v2 = v39 + 1;
          a2 = v300;
          if (v39 < v40 >> 1)
          {
LABEL_16:
            v4[2] = v2;
            unint64_t v83 = &v4[3 * v39];
            v83[4] = v37;
            v83[5] = v36;
            v83[6] = v6;
            uint64_t v84 = v303;
            goto LABEL_54;
          }
LABEL_63:
          unint64_t v4 = sub_1DA7CB21C((void *)(v40 > 1), v2, 1, v4);
          goto LABEL_16;
        }
        sub_1DA91D5B0(v68, v51, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
        a2 = v300;
        if (qword_1EBE59148 != -1) {
          swift_once();
        }
        uint64_t v85 = sub_1DA989F38();
        __swift_project_value_buffer(v85, (uint64_t)qword_1EBE6F0A8);
        uint64_t v86 = v293;
        sub_1DA91D480(v51, v293, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
        char v87 = sub_1DA989F18();
        os_log_type_t v88 = sub_1DA98C548();
        if (os_log_type_enabled(v87, v88))
        {
          uint64_t v89 = (uint8_t *)swift_slowAlloc();
          uint64_t v90 = (void *)swift_slowAlloc();
          v321 = v90;
          *(_DWORD *)uint64_t v89 = 136446210;
          v310 = v89 + 4;
          sub_1DA91D480(v86, v288, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
          uint64_t v91 = sub_1DA98C0A8();
          *(void *)&long long v318 = sub_1DA8C5E00(v91, v92, (uint64_t *)&v321);
          sub_1DA98C858();
          swift_bridgeObjectRelease();
          sub_1DA91D4E8(v86, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
          _os_log_impl(&dword_1DA795000, v87, v88, "inserting metadata %{public}s into store.", v89, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v90, -1, -1);
          MEMORY[0x1E0178DA0](v89, -1, -1);
        }
        else
        {
          sub_1DA91D4E8(v86, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
        }

        v321 = 0;
        unint64_t v322 = 0xE000000000000000;
        uint64_t v93 = (void *)MEMORY[0x1E4FBC860];
        unint64_t v94 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
        MEMORY[0x1E01772A0](23);
        unint64_t v323 = v94;
        sub_1DA98C148();
        sub_1DA98CA38();
        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        sub_1DA98CA38();
        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        uint64_t v95 = sub_1DA989AB8();
        uint64_t v97 = v96;
        swift_bridgeObjectRetain();
        uint64_t v98 = sub_1DA79EBAC(v95, v97);
        unint64_t v100 = v99;
        char v102 = v101;
        sub_1DA8E40CC(v98, v99, v101);
        sub_1DA79EB2C(v98, v100, v102);
        swift_bridgeObjectRelease();
        id v103 = v321;
        unint64_t v104 = v322;
        unint64_t v105 = v323;
        v106 = (uint8_t *)sub_1DA7CB21C(0, 1, 1, v93);
        unint64_t v108 = *((void *)v106 + 2);
        unint64_t v107 = *((void *)v106 + 3);
        if (v108 >= v107 >> 1) {
          v106 = (uint8_t *)sub_1DA7CB21C((void *)(v107 > 1), v108 + 1, 1, v106);
        }
        unint64_t v109 = v311;
        *((void *)v106 + 2) = v108 + 1;
        uint64_t v110 = &v106[24 * v108];
        *((void *)v110 + 4) = v105;
        *((void *)v110 + 5) = v103;
        *((void *)v110 + 6) = v104;
        v321 = 0;
        unint64_t v322 = 0xE000000000000000;
        unint64_t v111 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
        MEMORY[0x1E01772A0](23);
        unint64_t v323 = v111;
        sub_1DA98C148();
        sub_1DA98CA38();
        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        sub_1DA98CA38();
        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        uint64_t v112 = v294;
        sub_1DA989AD8();
        uint64_t v113 = v291;
        uint64_t v114 = sub_1DA9899C8();
        uint64_t v116 = v115;
        (*(void (**)(char *, uint64_t))(v295 + 8))(v112, v113);
        swift_bridgeObjectRetain();
        uint64_t v117 = sub_1DA79EBAC(v114, v116);
        unint64_t v119 = v118;
        char v121 = v120;
        sub_1DA8E40CC(v117, v118, v120);
        sub_1DA79EB2C(v117, v119, v121);
        swift_bridgeObjectRelease();
        id v122 = v321;
        unint64_t v123 = v322;
        unint64_t v124 = v323;
        unint64_t v126 = *((void *)v106 + 2);
        unint64_t v125 = *((void *)v106 + 3);
        if (v126 >= v125 >> 1) {
          v106 = (uint8_t *)sub_1DA7CB21C((void *)(v125 > 1), v126 + 1, 1, v106);
        }
        *((void *)v106 + 2) = v126 + 1;
        v310 = v106;
        unint64_t v127 = &v106[24 * v126];
        *((void *)v127 + 4) = v124;
        *((void *)v127 + 5) = v122;
        *((void *)v127 + 6) = v123;
        v321 = 0;
        unint64_t v322 = 0xE000000000000000;
        unint64_t v128 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
        MEMORY[0x1E01772A0](132);
        id v315 = v321;
        unint64_t v316 = v322;
        unint64_t v317 = v128;
        sub_1DA98C148();
        sub_1DA98CA38();
        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        sub_1DA98CA38();
        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        sub_1DA98CA38();
        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        sub_1DA98CA38();
        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        uint64_t v129 = sub_1DA989AB8();
        uint64_t v131 = v130;
        swift_bridgeObjectRetain();
        uint64_t v132 = sub_1DA79EBAC(v129, v131);
        unint64_t v134 = v133;
        char v136 = v135;
        sub_1DA8E40CC(v132, v133, v135);
        sub_1DA79EB2C(v132, v134, v136);
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        char v137 = v314;
        BOOL v138 = v109;
        uint64_t v139 = (uint64_t *)&v109[v314[5]];
        uint64_t v140 = *v139;
        uint64_t v141 = v139[1];
        swift_bridgeObjectRetain_n();
        uint64_t v142 = sub_1DA79EBAC(v140, v141);
        unint64_t v144 = v143;
        char v146 = v145;
        sub_1DA8E40CC(v142, v143, v145);
        sub_1DA79EB2C(v142, v144, v146);
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        v147 = &v138[v137[8]];
        uint64_t v148 = *((void *)v147 + 1);
        if (v148)
        {
          uint64_t v149 = *(void *)v147;
          uint64_t v319 = MEMORY[0x1E4FBB1A0];
          v320 = &off_1F34D99C8;
          *(void *)&long long v318 = v149;
          *((void *)&v318 + 1) = v148;
          sub_1DA7A19A4(&v318, (uint64_t)&v321);
          uint64_t v150 = v324;
          uint64_t v151 = v325;
        }
        else
        {
          uint64_t v152 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
          uint64_t v150 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
          uint64_t v151 = &off_1F34D9D00;
          uint64_t v324 = v150;
          v325 = &off_1F34D9D00;
          v321 = v152;
        }
        uint64_t v153 = __swift_project_boxed_opaque_existential_0(&v321, v150);
        swift_bridgeObjectRetain();
        sub_1DA8E42AC((uint64_t)v153, (uint64_t)&v315, v150, (uint64_t)v151);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v321);
        sub_1DA98C148();
        sub_1DA98CA38();
        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        sub_1DA98CA38();
        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        uint64_t v154 = *v139;
        uint64_t v155 = v139[1];
        swift_bridgeObjectRetain_n();
        uint64_t v156 = sub_1DA79EBAC(v154, v155);
        unint64_t v158 = v157;
        char v160 = v159;
        sub_1DA8E40CC(v156, v157, v159);
        sub_1DA79EB2C(v156, v158, v160);
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        sub_1DA98CA38();
        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        uint64_t v161 = *((void *)v147 + 1);
        unint64_t v4 = v310;
        if (v161)
        {
          uint64_t v162 = *(void *)v147;
          uint64_t v319 = MEMORY[0x1E4FBB1A0];
          v320 = &off_1F34D99C8;
          *(void *)&long long v318 = v162;
          *((void *)&v318 + 1) = v161;
          sub_1DA7A19A4(&v318, (uint64_t)&v321);
          uint64_t v163 = v324;
          id v164 = v325;
        }
        else
        {
          uint64_t v165 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
          uint64_t v163 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
          id v164 = &off_1F34D9D00;
          uint64_t v324 = v163;
          v325 = &off_1F34D9D00;
          v321 = v165;
        }
        uint64_t v13 = v313;
        uint64_t v166 = (uint64_t)v311;
        uint64_t v167 = __swift_project_boxed_opaque_existential_0(&v321, v163);
        swift_bridgeObjectRetain();
        sub_1DA8E42AC((uint64_t)v167, (uint64_t)&v315, v163, (uint64_t)v164);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v321);
        id v168 = v315;
        unint64_t v169 = v316;
        unint64_t v170 = v317;
        unint64_t v172 = v4[2];
        unint64_t v171 = v4[3];
        if (v172 >= v171 >> 1) {
          unint64_t v4 = sub_1DA7CB21C((void *)(v171 > 1), v172 + 1, 1, v4);
        }
        v4[2] = v172 + 1;
        unint64_t v173 = &v4[3 * v172];
        v173[4] = v170;
        v173[5] = v168;
        v173[6] = v169;
        unint64_t v174 = *(void *)(v166 + v314[6]);
        if (v174 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v175 = sub_1DA98CBD8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v175 = *(void *)((v174 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v84 = v303;
        if (v175)
        {
          uint64_t v176 = self;
          sub_1DA7A1A08(0, &qword_1EBE64D48);
          swift_bridgeObjectRetain();
          unint64_t v177 = (void *)sub_1DA98C268();
          swift_bridgeObjectRelease();
          v321 = 0;
          id v178 = objc_msgSend(v176, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v177, 1, &v321);

          unint64_t v179 = v321;
          if (!v178) {
            goto LABEL_61;
          }
          uint64_t v180 = sub_1DA9894E8();
          unint64_t v182 = v181;

          v321 = 0;
          unint64_t v322 = 0xE000000000000000;
          unint64_t v183 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
          MEMORY[0x1E01772A0](73);
          unint64_t v323 = v183;
          sub_1DA98C148();
          sub_1DA98CA38();
          sub_1DA98C148();
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          sub_1DA98CA38();
          sub_1DA98C148();
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          sub_1DA98CA38();
          sub_1DA98C148();
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          sub_1DA98CA38();
          sub_1DA98C148();
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          sub_1DA98CA38();
          sub_1DA98C148();
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          uint64_t v184 = sub_1DA989AB8();
          uint64_t v186 = v185;
          swift_bridgeObjectRetain();
          uint64_t v187 = sub_1DA79EBAC(v184, v186);
          unint64_t v189 = v188;
          char v191 = v190;
          sub_1DA8E40CC(v187, v188, v190);
          sub_1DA79EB2C(v187, v189, v191);
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          sub_1DA79ED98(v180, v182);
          sub_1DA79ED98(v180, v182);
          uint64_t v192 = sub_1DA79EB98(v180, v182);
          unint64_t v194 = v193;
          LOBYTE(v189) = v195;
          sub_1DA8E40CC(v192, v193, v195);
          sub_1DA79EB2C(v192, v194, v189);
          sub_1DA79DA70(v180, v182);
          sub_1DA98C148();
          uint64_t v196 = sub_1DA7A0B60(0.0);
          unint64_t v198 = v197;
          LOBYTE(v189) = v199;
          sub_1DA8E40CC(v196, v197, v199);
          sub_1DA79EB2C(v196, v198, v189);
          sub_1DA98C148();
          uint64_t v200 = sub_1DA79E944(0);
          unint64_t v202 = v201;
          LOBYTE(v189) = v203;
          sub_1DA8E40CC(v200, v201, v203);
          sub_1DA79EB2C(v200, v202, v189);
          sub_1DA98C148();
          id v204 = v321;
          unint64_t v205 = v322;
          unint64_t v206 = v323;
          unint64_t v208 = v4[2];
          unint64_t v207 = v4[3];
          if (v208 >= v207 >> 1) {
            unint64_t v4 = sub_1DA7CB21C((void *)(v207 > 1), v208 + 1, 1, v4);
          }
          v4[2] = v208 + 1;
          v209 = &v4[3 * v208];
          v209[4] = v206;
          v209[5] = v204;
          v209[6] = v205;
          sub_1DA79DA70(v180, v182);
          uint64_t v84 = v303;
          uint64_t v13 = v313;
          uint64_t v166 = (uint64_t)v311;
        }
        unint64_t v210 = *(void *)(v166 + v314[7]);
        if (v210 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v283 = sub_1DA98CBD8();
          swift_bridgeObjectRelease();
          if (v283)
          {
LABEL_43:
            uint64_t v211 = self;
            sub_1DA7A1A08(0, &qword_1EBE5A018);
            swift_bridgeObjectRetain();
            uint64_t v212 = (void *)sub_1DA98C268();
            swift_bridgeObjectRelease();
            v321 = 0;
            id v213 = objc_msgSend(v211, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v212, 1, &v321);

            unint64_t v179 = v321;
            if (v213)
            {
              uint64_t v214 = sub_1DA9894E8();
              unint64_t v216 = v215;

              v321 = 0;
              unint64_t v322 = 0xE000000000000000;
              unint64_t v217 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
              MEMORY[0x1E01772A0](73);
              unint64_t v323 = v217;
              sub_1DA98C148();
              sub_1DA98CA38();
              sub_1DA98C148();
              swift_bridgeObjectRelease();
              sub_1DA98C148();
              sub_1DA98CA38();
              sub_1DA98C148();
              swift_bridgeObjectRelease();
              sub_1DA98C148();
              sub_1DA98CA38();
              sub_1DA98C148();
              swift_bridgeObjectRelease();
              sub_1DA98C148();
              sub_1DA98CA38();
              sub_1DA98C148();
              swift_bridgeObjectRelease();
              sub_1DA98C148();
              sub_1DA98CA38();
              sub_1DA98C148();
              swift_bridgeObjectRelease();
              sub_1DA98C148();
              uint64_t v218 = sub_1DA989AB8();
              uint64_t v220 = v219;
              swift_bridgeObjectRetain();
              uint64_t v221 = sub_1DA79EBAC(v218, v220);
              unint64_t v223 = v222;
              char v225 = v224;
              sub_1DA8E40CC(v221, v222, v224);
              sub_1DA79EB2C(v221, v223, v225);
              swift_bridgeObjectRelease();
              sub_1DA98C148();
              sub_1DA79ED98(v214, v216);
              sub_1DA79ED98(v214, v216);
              uint64_t v226 = sub_1DA79EB98(v214, v216);
              unint64_t v228 = v227;
              LOBYTE(v223) = v229;
              sub_1DA8E40CC(v226, v227, v229);
              sub_1DA79EB2C(v226, v228, v223);
              sub_1DA79DA70(v214, v216);
              sub_1DA98C148();
              uint64_t v230 = sub_1DA7A0B60(0.0);
              unint64_t v232 = v231;
              LOBYTE(v223) = v233;
              sub_1DA8E40CC(v230, v231, v233);
              sub_1DA79EB2C(v230, v232, v223);
              sub_1DA98C148();
              uint64_t v234 = sub_1DA79E944(2);
              unint64_t v236 = v235;
              LOBYTE(v223) = v237;
              sub_1DA8E40CC(v234, v235, v237);
              sub_1DA79EB2C(v234, v236, v223);
              sub_1DA98C148();
              id v238 = v321;
              unint64_t v239 = v322;
              unint64_t v240 = v323;
              unint64_t v242 = v4[2];
              unint64_t v241 = v4[3];
              if (v242 >= v241 >> 1) {
                unint64_t v4 = sub_1DA7CB21C((void *)(v241 > 1), v242 + 1, 1, v4);
              }
              v4[2] = v242 + 1;
              v243 = &v4[3 * v242];
              v243[4] = v240;
              v243[5] = v238;
              v243[6] = v239;
              sub_1DA79DA70(v214, v216);
              uint64_t v84 = v303;
              uint64_t v13 = v313;
              uint64_t v166 = (uint64_t)v311;
              goto LABEL_47;
            }
LABEL_61:
            v282 = v179;
            swift_bridgeObjectRelease();
            sub_1DA9892D8();

            swift_willThrow();
            return sub_1DA91D4E8(v166, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
          }
        }
        else if (*(void *)((v210 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_43;
        }
LABEL_47:
        unint64_t v244 = *(void *)(v166 + v314[9]);
        if (v244 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v284 = sub_1DA98CBD8();
          swift_bridgeObjectRelease();
          if (!v284) {
            goto LABEL_53;
          }
        }
        else if (!*(void *)((v244 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_53;
        }
        v245 = self;
        sub_1DA7A1A08(0, &qword_1EBE5A6D8);
        swift_bridgeObjectRetain();
        v246 = (void *)sub_1DA98C268();
        swift_bridgeObjectRelease();
        v321 = 0;
        id v247 = objc_msgSend(v245, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v246, 1, &v321);

        unint64_t v179 = v321;
        if (v247)
        {
          uint64_t v248 = sub_1DA9894E8();
          unint64_t v250 = v249;

          v321 = 0;
          unint64_t v322 = 0xE000000000000000;
          unint64_t v251 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
          MEMORY[0x1E01772A0](73);
          unint64_t v323 = v251;
          sub_1DA98C148();
          sub_1DA98CA38();
          sub_1DA98C148();
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          sub_1DA98CA38();
          sub_1DA98C148();
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          sub_1DA98CA38();
          sub_1DA98C148();
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          sub_1DA98CA38();
          sub_1DA98C148();
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          sub_1DA98CA38();
          sub_1DA98C148();
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          uint64_t v252 = sub_1DA989AB8();
          uint64_t v254 = v253;
          swift_bridgeObjectRetain();
          uint64_t v255 = sub_1DA79EBAC(v252, v254);
          unint64_t v257 = v256;
          char v259 = v258;
          sub_1DA8E40CC(v255, v256, v258);
          sub_1DA79EB2C(v255, v257, v259);
          swift_bridgeObjectRelease();
          sub_1DA98C148();
          sub_1DA79ED98(v248, v250);
          sub_1DA79ED98(v248, v250);
          uint64_t v260 = sub_1DA79EB98(v248, v250);
          unint64_t v262 = v261;
          LOBYTE(v257) = v263;
          sub_1DA8E40CC(v260, v261, v263);
          sub_1DA79EB2C(v260, v262, v257);
          sub_1DA79DA70(v248, v250);
          sub_1DA98C148();
          uint64_t v264 = sub_1DA7A0B60(0.0);
          unint64_t v266 = v265;
          LOBYTE(v257) = v267;
          sub_1DA8E40CC(v264, v265, v267);
          sub_1DA79EB2C(v264, v266, v257);
          sub_1DA98C148();
          uint64_t v268 = sub_1DA79E944(1);
          unint64_t v270 = v269;
          LOBYTE(v257) = v271;
          sub_1DA8E40CC(v268, v269, v271);
          sub_1DA79EB2C(v268, v270, v257);
          sub_1DA98C148();
          id v272 = v321;
          unint64_t v273 = v322;
          unint64_t v274 = v323;
          unint64_t v276 = v4[2];
          unint64_t v275 = v4[3];
          if (v276 >= v275 >> 1) {
            unint64_t v4 = sub_1DA7CB21C((void *)(v275 > 1), v276 + 1, 1, v4);
          }
          v4[2] = v276 + 1;
          v277 = &v4[3 * v276];
          v277[4] = v274;
          v277[5] = v272;
          v277[6] = v273;
          sub_1DA79DA70(v248, v250);
          uint64_t v84 = v303;
          uint64_t v13 = v313;
          uint64_t v166 = (uint64_t)v311;
LABEL_53:
          sub_1DA91D4E8(v166, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
          int64_t v2 = v4[2];
          if (!v2) {
            return swift_bridgeObjectRelease();
          }
LABEL_54:
          swift_bridgeObjectRetain();
          v278 = v4 + 6;
          while (1)
          {
            unint64_t v279 = *(v278 - 1);
            unint64_t v280 = *v278;
            v321 = (void *)*(v278 - 2);
            unint64_t v322 = v279;
            unint64_t v323 = v280;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1DA900CD8(&v321, (uint64_t)v13, v84);
            if (a2) {
              break;
            }
            v278 += 3;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!--v2)
            {
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }
          }
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_61;
      }
      goto LABEL_71;
    }
    sub_1DA7A1AE0((uint64_t)v298, &qword_1EBE5A1A0);
    sub_1DA7A1AE0((uint64_t)v302, &qword_1EBE5A1A0);
    v285 = (void (*)(char *, uint64_t))v63[1];
    v285(v307, v55);
    sub_1DA7A1AE0(v306, (uint64_t *)&unk_1EBE595D8);
    v285(v308, v55);
    v285((char *)v69, v55);
  }
  sub_1DA7A1AE0(v299, &qword_1EBE5A1A8);
LABEL_71:
  __break(1u);
LABEL_72:
  uint64_t result = sub_1DA98CBB8();
  __break(1u);
  return result;
}

uint64_t sub_1DA900CD8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v65 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v57 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v59 = (char *)&v54 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v10);
  uint64_t v62 = (uint64_t)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v58 = (uint64_t)&v54 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v54 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = (void *)*a1;
  uint64_t v21 = a1[1];
  uint64_t v22 = a1[2];
  uint64_t v63 = v21;
  uint64_t v64 = v20;
  if (qword_1EBE59148 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1DA989F38();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EBE6F0A8);
  sub_1DA7A1F58(a2, (uint64_t)v19, (uint64_t *)&unk_1EBE595D8);
  uint64_t v61 = v24;
  uint64_t v25 = sub_1DA989F18();
  os_log_type_t v26 = sub_1DA98C518();
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v60 = v6;
  if (v27)
  {
    uint64_t v54 = v22;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v56 = v5;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v68 = v30;
    uint64_t v55 = a2;
    *(_DWORD *)uint64_t v29 = 136446210;
    sub_1DA7A1F58((uint64_t)v19, (uint64_t)v16, (uint64_t *)&unk_1EBE595D8);
    uint64_t v31 = sub_1DA98C0A8();
    uint64_t v67 = sub_1DA8C5E00(v31, v32, &v68);
    a2 = v55;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA7A1AE0((uint64_t)v19, (uint64_t *)&unk_1EBE595D8);
    _os_log_impl(&dword_1DA795000, v25, v26, "Executing metadata update for %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v30, -1, -1);
    uint64_t v33 = v29;
    uint64_t v5 = v56;
    MEMORY[0x1E0178DA0](v33, -1, -1);
  }
  else
  {
    sub_1DA7A1AE0((uint64_t)v19, (uint64_t *)&unk_1EBE595D8);
  }

  if (swift_weakLoadStrong())
  {
    uint64_t v34 = (void *)v66;
    sub_1DA7BEF9C((uint64_t)v64);
    if (v34)
    {
      swift_release();
      uint64_t v35 = v62;
      sub_1DA7A1F58(a2, v62, (uint64_t *)&unk_1EBE595D8);
      id v36 = v34;
      id v37 = v34;
      uint64_t v38 = sub_1DA989F18();
      int v39 = sub_1DA98C548();
      if (os_log_type_enabled(v38, (os_log_type_t)v39))
      {
        LODWORD(v65) = v39;
        uint64_t v40 = swift_slowAlloc();
        uint64_t v64 = (void *)swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v68 = v66;
        *(_DWORD *)uint64_t v40 = 136446466;
        uint64_t v41 = v58;
        sub_1DA7A1F58(v35, v58, (uint64_t *)&unk_1EBE595D8);
        uint64_t v42 = type metadata accessor for ExtensionMetadata();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v41, 1, v42) == 1)
        {
          sub_1DA7A1AE0(v41, (uint64_t *)&unk_1EBE595D8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
          sub_1DA7A0410(&qword_1EBE5A0F8, &qword_1EBE66CF0);
          sub_1DA7A0410(&qword_1EBE5A120, &qword_1EBE66CF0);
          sub_1DA7A0410(&qword_1EBE5A100, &qword_1EBE66CF0);
          sub_1DA7A0410(&qword_1EBE5A108, &qword_1EBE66CF0);
          uint64_t v43 = v59;
          sub_1DA989A88();
          uint64_t v44 = v60;
        }
        else
        {
          uint64_t v44 = v60;
          int v46 = v57;
          (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v57, v41, v5);
          sub_1DA91D4E8(v41, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
          uint64_t v43 = v59;
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v59, v46, v5);
        }
        sub_1DA7A0410((unint64_t *)&unk_1EBE5A180, &qword_1EBE5A190);
        uint64_t v47 = sub_1DA98CDD8();
        unint64_t v49 = v48;
        (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v5);
        uint64_t v67 = sub_1DA8C5E00(v47, v49, &v68);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        sub_1DA7A1AE0(v62, (uint64_t *)&unk_1EBE595D8);
        *(_WORD *)(v40 + 12) = 2114;
        id v50 = v34;
        uint64_t v51 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v67 = v51;
        sub_1DA98C858();
        uint64_t v52 = v64;
        *uint64_t v64 = v51;

        _os_log_impl(&dword_1DA795000, v38, (os_log_type_t)v65, "Unexpected error performing metadata update for %{public}s: %{public}@", (uint8_t *)v40, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v52, -1, -1);
        uint64_t v53 = v66;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v53, -1, -1);
        MEMORY[0x1E0178DA0](v40, -1, -1);
      }
      else
      {
        sub_1DA7A1AE0(v35, (uint64_t *)&unk_1EBE595D8);
      }
      return swift_willThrow();
    }
    else
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA9014E4()
{
  if (swift_weakLoadStrong())
  {
    unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
    MEMORY[0x1E01772A0](12);
    sub_1DA98C148();
    sub_1DA98CA38();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA7BEF9C(v1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v0) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

unint64_t sub_1DA90163C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v55 = (uint64_t)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v50 - v4;
  uint64_t v64 = sub_1DA989638();
  uint64_t v6 = *(void *)(v64 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v64);
  uint64_t v54 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v63 = (char *)&v50 - v9;
  unint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  unint64_t v10 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](24);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v11 = v70;
  if (!swift_weakLoadStrong()) {
    goto LABEL_39;
  }
  uint64_t v12 = sub_1DA7BEF9C(v10);
  uint64_t v52 = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v51 = v12;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v11 = sub_1DA79CA74(MEMORY[0x1E4FBC860]);
    unint64_t v69 = v11;
    uint64_t v62 = *(void *)(v51 + 16);
    if (v62)
    {
      uint64_t v61 = v5;
      uint64_t v13 = *(void *)(v51 + 32);
      uint64_t v56 = v51 + 32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1DA98CA38();
      uint64_t v67 = *(void *)(v13 + 16);
      uint64_t v68 = v15;
      if (!v67) {
        goto LABEL_38;
      }
      uint64_t v16 = v14;
      uint64_t v59 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);
      uint64_t v60 = (void (**)(char *, char *, uint64_t))(v6 + 16);
      uint64_t v53 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
      uint64_t v57 = (void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v58 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      uint64_t v65 = 1;
      while (1)
      {
        uint64_t v17 = 0;
        uint64_t v66 = v13;
        uint64_t v18 = (char *)(v13 + 64);
        uint64_t v19 = (char *)(v13 + 64);
        while (1)
        {
          uint64_t v20 = v17 + 1;
          if (__OFADD__(v17, 1))
          {
            __break(1u);
LABEL_37:
            swift_bridgeObjectRelease();
            goto LABEL_38;
          }
          uint64_t v21 = *((void *)v19 - 2);
          unint64_t v22 = *((void *)v19 - 1);
          char v23 = *v19;
          BOOL v24 = *((void *)v19 - 4) == v16 && *((void *)v19 - 3) == v68;
          if (v24 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v19 += 40;
          ++v17;
          if (v20 == v67) {
            goto LABEL_38;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v21, v22, v23);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = sub_1DA8F6590(v21, v22, v23);
        uint64_t v27 = v26;
        sub_1DA79EB2C(v21, v22, v23);
        if (!v27) {
          goto LABEL_39;
        }
        uint64_t v28 = sub_1DA98CA38();
        uint64_t v30 = v29;
        uint64_t v31 = *(void *)(v66 + 16);
        if (!v31) {
          goto LABEL_37;
        }
        uint64_t v32 = v28;
        uint64_t v68 = v25;
        while (1)
        {
          uint64_t v33 = *((void *)v18 - 2);
          unint64_t v34 = *((void *)v18 - 1);
          char v35 = *v18;
          BOOL v36 = *((void *)v18 - 4) == v32 && *((void *)v18 - 3) == v30;
          if (v36 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v18 += 40;
          if (!--v31) {
            goto LABEL_37;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v33, v34, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DA8F66F4(v33, v34, v35);
        char v38 = v37;
        sub_1DA79EB2C(v33, v34, v35);
        if (v38)
        {
          while (1)
          {
LABEL_38:
            swift_bridgeObjectRelease();
LABEL_39:
            sub_1DA98CBB8();
            __break(1u);
          }
        }
        int v39 = v63;
        sub_1DA9895C8();
        uint64_t v40 = (uint64_t)v61;
        uint64_t v41 = v64;
        (*v60)(v61, v39, v64);
        (*v59)(v40, 0, 1, v41);
        if ((*v58)(v40, 1, v41) == 1)
        {
          sub_1DA7A1AE0(v40, &qword_1EBE61CC0);
          uint64_t v42 = v55;
          sub_1DA912F2C(v68, v27, v55);
          swift_bridgeObjectRelease();
          sub_1DA7A1AE0(v42, &qword_1EBE61CC0);
        }
        else
        {
          uint64_t v43 = (uint64_t)v54;
          (*v53)(v54, v40, v41);
          unint64_t v44 = v69;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v71 = v44;
          sub_1DA917204(v43, v68, v27, isUniquelyReferenced_nonNull_native, MEMORY[0x1E4F27928], &qword_1EBE58F50, MEMORY[0x1E4F27928], (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DA96FD14);
          unint64_t v69 = v71;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        (*v57)(v39, v41);
        swift_bridgeObjectRelease();
        if (v65 == v62) {
          break;
        }
        uint64_t v46 = v65 + 1;
        uint64_t v13 = *(void *)(v56 + 8 * v65);
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_1DA98CA38();
        uint64_t v47 = *(void *)(v13 + 16);
        uint64_t v65 = v46;
        uint64_t v67 = v47;
        uint64_t v68 = v48;
        if (!v47) {
          goto LABEL_38;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v11 = v69;
    }
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1DA901DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a3;
  uint64_t v57 = a1;
  uint64_t v58 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DA989638();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_14;
  }
  uint64_t v13 = Strong;
  uint64_t v14 = *(void *)(Strong + 24);
  uint64_t v15 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v15);
  uint64_t v16 = *(void *)(v13 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  swift_release();
  swift_release();
  if (!v16)
  {
    __break(1u);
    goto LABEL_14;
  }
  sub_1DA7A1F58(a4, (uint64_t)v7, &qword_1EBE61CC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE61CC0);
    if (swift_weakLoadStrong())
    {
      uint64_t v59 = 0;
      unint64_t v60 = 0xE000000000000000;
      unint64_t v17 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
      MEMORY[0x1E01772A0](43);
      unint64_t v61 = v17;
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
      uint64_t v18 = sub_1DA989AB8();
      uint64_t v20 = v19;
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1DA79EBAC(v18, v20);
      unint64_t v23 = v22;
      char v25 = v24;
      sub_1DA8E40CC(v21, v22, v24);
      sub_1DA79EB2C(v21, v23, v25);
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      uint64_t v26 = v56;
      swift_bridgeObjectRetain_n();
      uint64_t v27 = sub_1DA79EBAC(v58, v26);
      unint64_t v29 = v28;
      LOBYTE(v23) = v30;
      sub_1DA8E40CC(v27, v28, v30);
      sub_1DA79EB2C(v27, v29, v23);
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      uint64_t v31 = v62;
      sub_1DA7BEF9C(v61);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v31) {
        return swift_bridgeObjectRelease();
      }
      return result;
    }
LABEL_14:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  uint64_t v33 = v11;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  if (!swift_weakLoadStrong()) {
    goto LABEL_14;
  }
  uint64_t v59 = 0;
  unint64_t v60 = 0xE000000000000000;
  unint64_t v34 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](46);
  unint64_t v61 = v34;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v35 = sub_1DA989AB8();
  uint64_t v37 = v36;
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1DA79EBAC(v35, v37);
  unint64_t v40 = v39;
  char v42 = v41;
  sub_1DA8E40CC(v38, v39, v41);
  sub_1DA79EB2C(v38, v40, v42);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v43 = v56;
  swift_bridgeObjectRetain_n();
  uint64_t v44 = sub_1DA79EBAC(v58, v43);
  unint64_t v46 = v45;
  LOBYTE(v40) = v47;
  sub_1DA8E40CC(v44, v45, v47);
  sub_1DA79EB2C(v44, v46, v40);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA9895D8();
  uint64_t v49 = sub_1DA7A0B60(v48);
  unint64_t v51 = v50;
  LOBYTE(v46) = v52;
  sub_1DA8E40CC(v49, v50, v52);
  sub_1DA79EB2C(v49, v51, v46);
  sub_1DA98C148();
  uint64_t v53 = v62;
  sub_1DA7BEF9C(v61);
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v33, v8);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v33, v8);
}

uint64_t sub_1DA902404(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v7 = Strong;
  uint64_t v8 = *(void *)(Strong + 24);
  uint64_t v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  uint64_t v10 = *(void *)(v7 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  swift_release();
  swift_release();
  if (!v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  unint64_t v11 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](31);
  uint64_t v18 = v11;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1DA79EBAC(a1, a2);
  unint64_t v14 = v13;
  char v16 = v15;
  sub_1DA8E40CC(v12, v13, v15);
  sub_1DA79EB2C(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1DA7BEF9C(v18);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA902664()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void *)(Strong + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = *(void *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  unint64_t v7 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](12);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA7BEF9C(v7);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DA90280C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v59 = (uint64_t)v56 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v56 - v3;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v73 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v6 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA989638();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v58 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v70 = (char *)v56 - v11;
  unint64_t v76 = 0;
  unint64_t v77 = 0xE000000000000000;
  unint64_t v12 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](28);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_39;
  }
  unint64_t v14 = Strong;
  uint64_t v15 = v75;
  uint64_t v16 = sub_1DA7BEF9C(v12);
  v56[1] = v15;
  if (v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v56[0] = v16;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v14 = sub_1DA79CED4(MEMORY[0x1E4FBC860]);
    unint64_t v76 = v14;
    uint64_t v69 = *(void *)(v56[0] + 16);
    if (v69)
    {
      uint64_t v17 = *(void *)(v56[0] + 32);
      uint64_t v60 = v56[0] + 32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1DA98CA38();
      uint64_t v20 = v19;
      uint64_t v74 = *(void *)(v17 + 16);
      if (!v74) {
        goto LABEL_38;
      }
      uint64_t v21 = v18;
      uint64_t v66 = v7;
      uint64_t v67 = v6;
      uint64_t v68 = v4;
      uint64_t v64 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);
      uint64_t v65 = (void (**)(char *, char *, uint64_t))(v8 + 16);
      uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
      uint64_t v62 = (void (**)(uint64_t, uint64_t))(v73 + 8);
      uint64_t v63 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
      unint64_t v61 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v72 = 1;
      while (1)
      {
        uint64_t v22 = 0;
        uint64_t v73 = v17;
        unint64_t v23 = (char *)(v17 + 64);
        char v24 = v23;
        uint64_t v75 = v20;
        while (1)
        {
          uint64_t v25 = v22 + 1;
          if (__OFADD__(v22, 1))
          {
            __break(1u);
LABEL_37:
            swift_bridgeObjectRelease();
            goto LABEL_38;
          }
          uint64_t v26 = *((void *)v24 - 2);
          unint64_t v27 = *((void *)v24 - 1);
          char v28 = *v24;
          BOOL v29 = *((void *)v24 - 4) == v21 && *((void *)v24 - 3) == v20;
          if (v29 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v24 += 40;
          ++v22;
          uint64_t v20 = v75;
          if (v25 == v74) {
            goto LABEL_38;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v26, v27, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v30 = sub_1DA8F6590(v26, v27, v28);
        uint64_t v32 = v31;
        sub_1DA79EB2C(v26, v27, v28);
        if (!v32) {
          goto LABEL_39;
        }
        uint64_t v75 = v30;
        uint64_t v33 = sub_1DA98CA38();
        uint64_t v35 = v34;
        uint64_t v36 = *(void *)(v73 + 16);
        if (!v36) {
          goto LABEL_37;
        }
        uint64_t v37 = v33;
        while (1)
        {
          uint64_t v38 = *((void *)v23 - 2);
          unint64_t v39 = *((void *)v23 - 1);
          char v40 = *v23;
          BOOL v41 = *((void *)v23 - 4) == v37 && *((void *)v23 - 3) == v35;
          if (v41 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v23 += 40;
          if (!--v36) {
            goto LABEL_37;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v38, v39, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DA8F66F4(v38, v39, v40);
        char v43 = v42;
        sub_1DA79EB2C(v38, v39, v40);
        if (v43)
        {
          while (1)
          {
LABEL_38:
            swift_bridgeObjectRelease();
LABEL_39:
            sub_1DA98CBB8();
            __break(1u);
          }
        }
        uint64_t v44 = v70;
        sub_1DA9894F8();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0C0);
        sub_1DA7A0410((unint64_t *)&unk_1EBE5A088, &qword_1EBE5A0C0);
        sub_1DA7A0410((unint64_t *)&unk_1EBE5A0B0, &qword_1EBE5A0C0);
        sub_1DA7A0410(&qword_1EBE5A098, &qword_1EBE5A0C0);
        sub_1DA7A0410((unint64_t *)&unk_1EBE5A0A0, &qword_1EBE5A0C0);
        uint64_t v45 = (uint64_t)v67;
        sub_1DA989AA8();
        uint64_t v46 = v66;
        uint64_t v47 = (uint64_t)v68;
        (*v65)(v68, v44, v66);
        (*v64)(v47, 0, 1, v46);
        if ((*v63)(v47, 1, v46) == 1)
        {
          sub_1DA7A1AE0(v47, &qword_1EBE61CC0);
          uint64_t v48 = v59;
          sub_1DA913ADC(v45, v59);
          (*v62)(v45, v71);
          sub_1DA7A1AE0(v48, &qword_1EBE61CC0);
        }
        else
        {
          uint64_t v49 = (uint64_t)v58;
          (*v57)(v58, v47, v46);
          unint64_t v50 = v76;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v78 = v50;
          sub_1DA917F04(v49, v45, isUniquelyReferenced_nonNull_native);
          unint64_t v76 = v78;
          swift_bridgeObjectRelease();
          (*v62)(v45, v71);
        }
        (*v61)(v44, v46);
        swift_bridgeObjectRelease();
        if (v72 == v69) {
          break;
        }
        uint64_t v52 = v72 + 1;
        uint64_t v17 = *(void *)(v60 + 8 * v72);
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1DA98CA38();
        uint64_t v20 = v53;
        uint64_t v54 = *(void *)(v17 + 16);
        uint64_t v72 = v52;
        uint64_t v74 = v54;
        if (!v54) {
          goto LABEL_38;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v14 = v76;
    }
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1DA9030E8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v47 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (uint64_t)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v60 = 0;
  *((void *)&v60 + 1) = 0xE000000000000000;
  unint64_t v4 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](28);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  unint64_t v5 = *((void *)&v60 + 1);
  if (!swift_weakLoadStrong())
  {
    int v45 = 0;
    uint64_t v44 = 793;
    goto LABEL_56;
  }
  uint64_t v6 = sub_1DA7BEF9C(v4);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v7 = v6;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v55 = sub_1DA79D10C(MEMORY[0x1E4FBC860]);
    uint64_t v52 = *(void *)(v7 + 16);
    if (v52)
    {
      uint64_t v54 = 0;
      uint64_t v8 = *(void *)(v7 + 32);
      uint64_t v48 = v7 + 32;
      uint64_t v46 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1DA98CA38();
      uint64_t v11 = v10;
      uint64_t v57 = *(void *)(v8 + 16);
      if (!v57) {
        goto LABEL_54;
      }
      uint64_t v12 = v9;
      uint64_t v50 = v1;
      uint64_t v51 = v3;
      uint64_t v49 = (void (**)(uint64_t, uint64_t))(v47 + 8);
      uint64_t v53 = 1;
      while (1)
      {
        uint64_t v13 = 0;
        uint64_t v56 = v8;
        unint64_t v14 = (unsigned __int8 *)(v8 + 64);
        uint64_t v3 = (uint64_t)v14;
        uint64_t v63 = v11;
        while (1)
        {
          uint64_t v15 = v13 + 1;
          if (__OFADD__(v13, 1))
          {
            __break(1u);
LABEL_53:
            swift_bridgeObjectRelease();
            goto LABEL_54;
          }
          uint64_t v16 = *(void *)(v3 - 16);
          unint64_t v5 = *(void *)(v3 - 8);
          uint64_t v1 = *(unsigned __int8 *)v3;
          BOOL v17 = *(void *)(v3 - 32) == v12 && *(void *)(v3 - 24) == v11;
          if (v17 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v3 += 40;
          ++v13;
          uint64_t v11 = v63;
          if (v15 == v57) {
            goto LABEL_54;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v16, v5, v1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = sub_1DA8F6590(v16, v5, v1);
        uint64_t v20 = v19;
        sub_1DA79EB2C(v16, v5, v1);
        if (!v20) {
          goto LABEL_55;
        }
        uint64_t v21 = sub_1DA98CA38();
        uint64_t v23 = v22;
        uint64_t v24 = *(void *)(v56 + 16);
        if (!v24) {
          goto LABEL_53;
        }
        uint64_t v25 = v21;
        uint64_t v63 = v18;
        while (1)
        {
          uint64_t v1 = *((void *)v14 - 2);
          unint64_t v5 = *((void *)v14 - 1);
          uint64_t v3 = *v14;
          BOOL v26 = *((void *)v14 - 4) == v25 && *((void *)v14 - 3) == v23;
          if (v26 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v14 += 40;
          if (!--v24) {
            goto LABEL_53;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v1, v5, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v27 = v51;
        uint64_t v28 = v54;
        switch(v3)
        {
          case 1:
            uint64_t v62 = &off_1F34D99D0;
            uint64_t v29 = MEMORY[0x1E4FBB3D0];
            goto LABEL_32;
          case 2:
            uint64_t v61 = MEMORY[0x1E4FBB1A0];
            uint64_t v62 = &off_1F34D99C8;
            *(void *)&long long v60 = v1;
            *((void *)&v60 + 1) = v5;
            swift_bridgeObjectRetain();
            break;
          case 3:
            uint64_t v61 = MEMORY[0x1E4F277C0];
            uint64_t v62 = &off_1F34D5038;
            *(void *)&long long v60 = v1;
            *((void *)&v60 + 1) = v5;
            sub_1DA79ED98(v1, v5);
            break;
          case 4:
            id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
            uint64_t v61 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
            uint64_t v62 = &off_1F34D9D00;
            *(void *)&long long v60 = v30;
            break;
          default:
            uint64_t v62 = &off_1F34D9D78;
            uint64_t v29 = MEMORY[0x1E4FBC1C8];
LABEL_32:
            uint64_t v61 = v29;
            *(void *)&long long v60 = v1;
            break;
        }
        sub_1DA7A19A4(&v60, (uint64_t)v59);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
        if (!swift_dynamicCast()) {
          goto LABEL_57;
        }
        long long v31 = v58;
        sub_1DA79EB2C(v1, v5, v3);
        if (*((void *)&v31 + 1) >> 60 == 15)
        {
          while (1)
          {
LABEL_54:
            swift_bridgeObjectRelease();
LABEL_55:
            int v45 = 0;
            uint64_t v44 = 1148;
LABEL_56:
            sub_1DA98CBB8();
            __break(1u);
LABEL_57:
            long long v58 = xmmword_1DA993170;
            sub_1DA79EB2C(v1, v5, v3);
          }
        }
        sub_1DA7A1A08(0, &qword_1EBE58EF0);
        sub_1DA7A1A08(0, &qword_1EBE5A6C8);
        uint64_t v32 = sub_1DA98C578();
        if (v28)
        {
          sub_1DA7A1ACC(v31, *((unint64_t *)&v31 + 1));
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v3;
        }
        unint64_t v5 = v32;
        uint64_t v57 = v31;
        uint64_t v54 = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0C0);
        sub_1DA7A0410((unint64_t *)&unk_1EBE5A088, &qword_1EBE5A0C0);
        uint64_t v1 = sub_1DA7A0410((unint64_t *)&unk_1EBE5A0B0, &qword_1EBE5A0C0);
        sub_1DA7A0410(&qword_1EBE5A098, &qword_1EBE5A0C0);
        sub_1DA7A0410((unint64_t *)&unk_1EBE5A0A0, &qword_1EBE5A0C0);
        sub_1DA989AA8();
        if (v5)
        {
          unint64_t v33 = v55;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v60 = v33;
          sub_1DA918130(v5, v27, isUniquelyReferenced_nonNull_native);
          uint64_t v3 = v60;
          swift_bridgeObjectRelease();
          (*v49)(v27, v50);
        }
        else
        {
          uint64_t v3 = v55;
          swift_bridgeObjectRetain();
          unint64_t v5 = sub_1DA7FE964(v27);
          char v36 = v35;
          swift_bridgeObjectRelease();
          uint64_t v1 = v50;
          if (v36)
          {
            int v37 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v60 = v3;
            if (!v37)
            {
              sub_1DA91B028();
              uint64_t v3 = v60;
            }
            uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
            v38(*(void *)(v3 + 48) + *(void *)(v47 + 72) * v5, v1);
            unint64_t v39 = *(void **)(*(void *)(v3 + 56) + 8 * v5);
            sub_1DA915D68(v5, v3);
            swift_bridgeObjectRelease();
          }
          else
          {
            unint64_t v39 = 0;
            uint64_t v38 = *v49;
          }
          v38(v27, v1);
        }
        sub_1DA7A1ACC(v31, *((unint64_t *)&v31 + 1));
        swift_bridgeObjectRelease();
        if (v53 == v52) {
          break;
        }
        unint64_t v55 = v3;
        uint64_t v40 = v53 + 1;
        uint64_t v8 = *(void *)(v48 + 8 * v53);
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_1DA98CA38();
        uint64_t v11 = v41;
        uint64_t v42 = *(void *)(v8 + 16);
        uint64_t v53 = v40;
        uint64_t v57 = v42;
        if (!v42) {
          goto LABEL_54;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v3 = v55;
    }
    swift_bridgeObjectRelease();
  }
  return v3;
}

void sub_1DA903A78(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1DA989638();
  uint64_t v46 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v1 + 16;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    uint64_t v10 = *(void *)(Strong + 24);
    uint64_t v11 = *(os_unfair_lock_s **)(v10 + 16);
    swift_retain();
    os_unfair_lock_lock(v11);
    uint64_t v12 = *(void *)(v9 + 64);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
    swift_release();
    swift_release();
    if (!v12) {
      __break(1u);
    }
    if (!a1)
    {
      sub_1DA903FA8();
      return;
    }
    uint64_t v13 = self;
    v48[0] = 0;
    id v14 = a1;
    id v15 = objc_msgSend(v13, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v14, 1, v48);
    id v16 = v48[0];
    if (!v15)
    {
      char v43 = v16;
      sub_1DA9892D8();

      swift_willThrow();
LABEL_11:

      return;
    }
    id v44 = v14;
    uint64_t v45 = v3;
    uint64_t v17 = sub_1DA9894E8();
    unint64_t v19 = v18;

    v48[0] = 0;
    v48[1] = (id)0xE000000000000000;
    unint64_t v20 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
    MEMORY[0x1E01772A0](103);
    unint64_t v49 = v20;
    sub_1DA98C148();
    sub_1DA98CA38();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA98CA38();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA98CA38();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA98CA38();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
    uint64_t v21 = sub_1DA989AB8();
    uint64_t v23 = v22;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1DA79EBAC(v21, v23);
    unint64_t v26 = v25;
    char v28 = v27;
    sub_1DA8E40CC(v24, v25, v27);
    sub_1DA79EB2C(v24, v26, v28);
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA79ED98(v17, v19);
    sub_1DA79ED98(v17, v19);
    uint64_t v29 = sub_1DA79EB98(v17, v19);
    unint64_t v31 = v30;
    char v33 = v32;
    sub_1DA8E40CC(v29, v30, v32);
    sub_1DA79EB2C(v29, v31, v33);
    sub_1DA79DA70(v17, v19);
    sub_1DA98C148();
    _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
    sub_1DA989508();
    double v35 = v34;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v5);
    uint64_t v36 = sub_1DA7A0B60(v35);
    unint64_t v38 = v37;
    char v40 = v39;
    sub_1DA8E40CC(v36, v37, v39);
    sub_1DA79EB2C(v36, v38, v40);
    sub_1DA98C148();
    uint64_t v41 = v49;
    if (swift_weakLoadStrong())
    {
      uint64_t v42 = v45;
      sub_1DA7BEF9C(v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      id v14 = v44;
      if (!v42) {
        swift_bridgeObjectRelease();
      }
      sub_1DA79DA70(v17, v19);
      goto LABEL_11;
    }
  }
  sub_1DA98CBB8();
  __break(1u);
}

uint64_t sub_1DA903FA8()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void *)(Strong + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = *(void *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v7 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](24);
  uint64_t v17 = v7;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v8 = sub_1DA989AB8();
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1DA79EBAC(v8, v10);
  unint64_t v13 = v12;
  char v15 = v14;
  sub_1DA8E40CC(v11, v12, v14);
  sub_1DA79EB2C(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA904228()
{
  unint64_t v3 = v0;
  uint64_t v51 = sub_1DA989698();
  uint64_t v4 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v50 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for RemoteActivitySubscription(0);
  MEMORY[0x1F4188790](v53);
  uint64_t v49 = (uint64_t)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v52 = (char *)v44 - v8;
  *(void *)&long long v61 = 0;
  *((void *)&v61 + 1) = 0xE000000000000000;
  unint64_t v9 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  uint64_t v10 = &v61;
  MEMORY[0x1E01772A0](28);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_46;
  }
  uint64_t v12 = Strong;
  uint64_t v13 = sub_1DA7BEF9C(v9);
  uint64_t v2 = v1;
  if (!v1)
  {
    uint64_t v14 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void *)(v14 + 16);
    if (!v48)
    {
      uint64_t v12 = MEMORY[0x1E4FBC868];
LABEL_42:
      swift_bridgeObjectRelease();
      return v12;
    }
    uint64_t v57 = 0;
    uint64_t v10 = *(long long **)(v14 + 32);
    uint64_t v45 = v14 + 32;
    v44[1] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1DA98CA38();
    uint64_t v17 = v16;
    uint64_t v58 = *((void *)v10 + 2);
    if (v58)
    {
      uint64_t v18 = v15;
      uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v46 = (void (**)(uint64_t, uint64_t))(v4 + 8);
      uint64_t v56 = MEMORY[0x1E4FBC868];
      uint64_t v54 = 1;
      while (1)
      {
        unint64_t v3 = 0;
        unint64_t v55 = v10;
        unint64_t v19 = (unsigned __int8 *)(v10 + 4);
        unint64_t v20 = (unsigned __int8 *)(v10 + 4);
        uint64_t v64 = v17;
        while (1)
        {
          unint64_t v21 = v3 + 1;
          if (__OFADD__(v3, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          uint64_t v10 = (long long *)*((void *)v20 - 3);
          uint64_t v22 = *((void *)v20 - 2);
          unint64_t v23 = *((void *)v20 - 1);
          uint64_t v2 = *v20;
          if (*((void *)v20 - 4) == v18 && v10 == v17) {
            break;
          }
          if (sub_1DA98CE58()) {
            goto LABEL_17;
          }
          v20 += 40;
          ++v3;
          uint64_t v17 = v64;
          if (v21 == v58) {
            goto LABEL_45;
          }
        }
        LOBYTE(v10) = (_BYTE)v17;
LABEL_17:
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v22, v23, v2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DA79EB2C(v22, v23, v2);
        uint64_t v25 = sub_1DA98CA38();
        uint64_t v27 = v26;
        uint64_t v28 = *((void *)v55 + 2);
        if (!v28) {
          goto LABEL_45;
        }
        uint64_t v29 = v25;
        while (1)
        {
          uint64_t v2 = *((void *)v19 - 2);
          unint64_t v3 = *((void *)v19 - 1);
          uint64_t v10 = (long long *)*v19;
          BOOL v30 = *((void *)v19 - 4) == v29 && *((void *)v19 - 3) == v27;
          if (v30 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v19 += 40;
          if (!--v28) {
            goto LABEL_45;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v2, v3, (char)v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = v57;
        switch((unint64_t)v10)
        {
          case 1uLL:
            uint64_t v63 = &off_1F34D99D0;
            uint64_t v32 = MEMORY[0x1E4FBB3D0];
            goto LABEL_32;
          case 2uLL:
            uint64_t v62 = MEMORY[0x1E4FBB1A0];
            uint64_t v63 = &off_1F34D99C8;
            *(void *)&long long v61 = v2;
            *((void *)&v61 + 1) = v3;
            swift_bridgeObjectRetain();
            break;
          case 3uLL:
            uint64_t v62 = MEMORY[0x1E4F277C0];
            uint64_t v63 = &off_1F34D5038;
            *(void *)&long long v61 = v2;
            *((void *)&v61 + 1) = v3;
            sub_1DA79ED98(v2, v3);
            break;
          case 4uLL:
            id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
            uint64_t v62 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
            uint64_t v63 = &off_1F34D9D00;
            *(void *)&long long v61 = v33;
            break;
          default:
            uint64_t v63 = &off_1F34D9D78;
            uint64_t v32 = MEMORY[0x1E4FBC1C8];
LABEL_32:
            uint64_t v62 = v32;
            *(void *)&long long v61 = v2;
            break;
        }
        sub_1DA7A19A4(&v61, (uint64_t)v60);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
        if (!swift_dynamicCast()) {
          goto LABEL_47;
        }
        long long v34 = v59;
        sub_1DA79EB2C(v2, v3, (char)v10);
        if (*((void *)&v34 + 1) >> 60 == 15) {
          goto LABEL_46;
        }
        sub_1DA9890E8();
        swift_allocObject();
        uint64_t v35 = sub_1DA9890D8();
        sub_1DA91D680(&qword_1EA8E6740, (void (*)(uint64_t))type metadata accessor for RemoteActivitySubscription);
        unint64_t v3 = (unint64_t)v52;
        uint64_t v12 = v35;
        sub_1DA9890C8();
        if (v31)
        {
          swift_release();
          sub_1DA7A1ACC(v34, *((unint64_t *)&v34 + 1));
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v12;
        }
        uint64_t v57 = 0;
        uint64_t v36 = (uint64_t)v50;
        uint64_t v2 = v51;
        (*v47)(v50, v3, v51);
        uint64_t v37 = v49;
        sub_1DA91D480(v3, v49, type metadata accessor for RemoteActivitySubscription);
        uint64_t v38 = v56;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v61 = v38;
        sub_1DA9182DC(v37, v36, isUniquelyReferenced_nonNull_native);
        uint64_t v12 = v61;
        swift_bridgeObjectRelease();
        (*v46)(v36, v2);
        swift_release();
        sub_1DA7A1ACC(v34, *((unint64_t *)&v34 + 1));
        sub_1DA91D4E8(v3, type metadata accessor for RemoteActivitySubscription);
        swift_bridgeObjectRelease();
        if (v54 == v48) {
          break;
        }
        uint64_t v56 = v12;
        uint64_t v40 = v54 + 1;
        uint64_t v10 = *(long long **)(v45 + 8 * v54);
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1DA98CA38();
        uint64_t v17 = v41;
        uint64_t v42 = *((void *)v10 + 2);
        uint64_t v54 = v40;
        uint64_t v58 = v42;
        if (!v42) {
          goto LABEL_45;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
LABEL_45:
    swift_bridgeObjectRelease();
    while (1)
    {
LABEL_46:
      sub_1DA98CBB8();
      __break(1u);
LABEL_47:
      long long v59 = xmmword_1DA993170;
      sub_1DA79EB2C(v2, v3, (char)v10);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v12;
}

uint64_t sub_1DA904AF0()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v4 = *(void *)(Strong + 24);
    uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    uint64_t v6 = *(void *)(v3 + 64);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    swift_release();
    swift_release();
    if (v6)
    {
      sub_1DA989118();
      swift_allocObject();
      sub_1DA989108();
      type metadata accessor for RemoteActivitySubscription(0);
      sub_1DA91D680(&qword_1EA8E6748, (void (*)(uint64_t))type metadata accessor for RemoteActivitySubscription);
      uint64_t v7 = sub_1DA9890F8();
      if (v1) {
        return swift_release();
      }
      uint64_t v9 = v7;
      unint64_t v10 = v8;
      unint64_t v11 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
      MEMORY[0x1E01772A0](83);
      uint64_t v25 = v11;
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      uint64_t v12 = sub_1DA989658();
      uint64_t v14 = v13;
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1DA79EBAC(v12, v14);
      unint64_t v17 = v16;
      char v19 = v18;
      sub_1DA8E40CC(v15, v16, v18);
      sub_1DA79EB2C(v15, v17, v19);
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA79ED98(v9, v10);
      sub_1DA79ED98(v9, v10);
      uint64_t v20 = sub_1DA79EB98(v9, v10);
      unint64_t v22 = v21;
      LOBYTE(v15) = v23;
      sub_1DA8E40CC(v20, v21, v23);
      sub_1DA79EB2C(v20, v22, v15);
      sub_1DA79DA70(v9, v10);
      sub_1DA98C148();
      if (swift_weakLoadStrong())
      {
        sub_1DA7BEF9C(v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1DA79DA70(v9, v10);
        return swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
  uint64_t result = sub_1DA98CBB8();
  __break(1u);
  return result;
}

uint64_t sub_1DA904ECC()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void *)(Strong + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = *(void *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v7 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](24);
  uint64_t v17 = v7;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v8 = sub_1DA989658();
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1DA79EBAC(v8, v10);
  unint64_t v13 = v12;
  char v15 = v14;
  sub_1DA8E40CC(v11, v12, v14);
  sub_1DA79EB2C(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA905140@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58928);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = 0;
  unint64_t v30 = 0xE000000000000000;
  unint64_t v6 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](22);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (swift_weakLoadStrong())
  {
    uint64_t v7 = sub_1DA7BEF9C(v6);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    uint64_t v9 = v7;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v9 + 16))
    {
      uint64_t v31 = v5;
      uint64_t v10 = *(void *)(v9 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_1DA98CA38();
      uint64_t v13 = v12;
      uint64_t v14 = *(void *)(v10 + 16);
      if (v14)
      {
        uint64_t v15 = v11;
        uint64_t v27 = v10;
        uint64_t v28 = a1;
        unint64_t v16 = (char *)(v10 + 64);
        while (1)
        {
          uint64_t v17 = *((void *)v16 - 2);
          unint64_t v18 = *((void *)v16 - 1);
          char v19 = *v16;
          BOOL v20 = *((void *)v16 - 4) == v15 && *((void *)v16 - 3) == v13;
          if (v20 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v16 += 40;
          if (!--v14)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a1 = v28;
            goto LABEL_19;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v17, v18, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DA8F6590(v17, v18, v19);
        uint64_t v22 = v21;
        sub_1DA79EB2C(v17, v18, v19);
        swift_bridgeObjectRelease();
        a1 = v28;
        if (v22)
        {
          uint64_t v23 = (uint64_t)v31;
          sub_1DA989648();
          swift_bridgeObjectRelease();
          uint64_t v24 = sub_1DA989698();
          uint64_t v25 = *(void *)(v24 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) != 1)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(a1, v23, v24);
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v24);
          }
          sub_1DA7A1AE0(v23, &qword_1EBE58928);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_19:
    uint64_t v26 = sub_1DA989698();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a1, 1, 1, v26);
  }
  else
  {
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA905590()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void *)(Strong + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = *(void *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t result = sub_1DA905824();
  if (v1) {
    return result;
  }
  unint64_t v8 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](38);
  uint64_t v17 = v8;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v9 = sub_1DA989658();
  uint64_t v11 = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1DA79EBAC(v9, v11);
  unint64_t v14 = v13;
  char v16 = v15;
  sub_1DA8E40CC(v12, v13, v15);
  sub_1DA79EB2C(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA905824()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void *)(Strong + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = *(void *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v7 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](13);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA9059DC()
{
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](52);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (swift_weakLoadStrong())
  {
    uint64_t v2 = sub_1DA7BEF9C(v1);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      uint64_t v4 = v2;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7[0] = MEMORY[0x1E4FBC868];
      uint64_t v5 = *(void *)(v4 + 16);
      if (v5)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v5; ++i)
        {
          uint64_t v8 = *(void *)(v4 + 8 * i + 32);
          swift_bridgeObjectRetain();
          sub_1DA905D88((uint64_t)v7, &v8);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease_n();
        return v7[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        return MEMORY[0x1E4FBC868];
      }
    }
  }
  else
  {
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

void sub_1DA905D88(uint64_t a1, uint64_t *a2)
{
  uint64_t v238 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6308);
  MEMORY[0x1F4188790](v4 - 8);
  char v237 = (char *)&v219 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = sub_1DA989C48();
  uint64_t v247 = *(void *)(v249 - 8);
  MEMORY[0x1F4188790](v249);
  unint64_t v236 = (char *)&v219 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v248 = (unint64_t *)((char *)&v219 - v8);
  uint64_t v9 = sub_1DA989C78();
  MEMORY[0x1F4188790](v9 - 8);
  v245 = (char *)&v219 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DA989CD8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v235 = (char *)&v219 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v243 = (uint64_t)&v219 - v15;
  MEMORY[0x1F4188790](v16);
  unint64_t v239 = (char *)&v219 - v17;
  MEMORY[0x1F4188790](v18);
  v246 = (char *)&v219 - v19;
  MEMORY[0x1F4188790](v20);
  unint64_t v232 = (char *)&v219 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v219 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58928);
  MEMORY[0x1F4188790](v25 - 8);
  unint64_t v241 = (char *)&v219 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v253 = (char *)&v219 - v28;
  MEMORY[0x1F4188790](v29);
  unint64_t v240 = (char *)&v219 - v30;
  uint64_t v31 = sub_1DA989698();
  uint64_t v254 = *(void *)(v31 - 8);
  uint64_t v255 = (uint8_t *)v31;
  MEMORY[0x1F4188790](v31);
  uint64_t v234 = (char *)&v219 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  unint64_t v242 = (char *)&v219 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v252 = (char *)&v219 - v36;
  MEMORY[0x1F4188790](v37);
  unint64_t v251 = (char *)&v219 - v38;
  MEMORY[0x1F4188790](v39);
  char v233 = (char *)&v219 - v40;
  uint64_t v41 = sub_1DA989CB8();
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v244 = (uint64_t)&v219 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  unint64_t v250 = (char *)&v219 - v44;
  uint64_t v45 = *a2;
  uint64_t v46 = sub_1DA98CA38();
  uint64_t v48 = v47;
  uint64_t v49 = *(void *)(v45 + 16);
  if (!v49) {
    goto LABEL_55;
  }
  uint64_t v50 = v46;
  unint64_t v231 = v24;
  uint64_t v230 = v11;
  uint64_t v229 = v12;
  v258[4] = v2;
  uint64_t v51 = (char *)(v45 + 64);
  while (1)
  {
    uint64_t v52 = *((void *)v51 - 2);
    unint64_t v53 = *((void *)v51 - 1);
    char v54 = *v51;
    BOOL v55 = *((void *)v51 - 4) == v50 && *((void *)v51 - 3) == v48;
    if (v55 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v51 += 40;
    if (!--v49) {
      goto LABEL_55;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v52, v53, v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v56 = sub_1DA8F6590(v52, v53, v54);
  unint64_t v58 = v57;
  sub_1DA79EB2C(v52, v53, v54);
  if (!v58) {
    goto LABEL_56;
  }
  uint64_t v59 = sub_1DA98CA38();
  uint64_t v61 = v60;
  uint64_t v62 = *(void *)(v45 + 16);
  if (!v62) {
    goto LABEL_54;
  }
  uint64_t v63 = v59;
  uint64_t v227 = v56;
  unint64_t v228 = v58;
  uint64_t v64 = (char *)(v45 + 64);
  while (1)
  {
    uint64_t v65 = *((void *)v64 - 2);
    unint64_t v66 = *((void *)v64 - 1);
    char v67 = *v64;
    BOOL v68 = *((void *)v64 - 4) == v63 && *((void *)v64 - 3) == v61;
    if (v68 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v64 += 40;
    if (!--v62) {
      goto LABEL_54;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v65, v66, v67);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v69 = sub_1DA8F6590(v65, v66, v67);
  uint64_t v71 = v70;
  sub_1DA79EB2C(v65, v66, v67);
  if (!v71) {
    goto LABEL_55;
  }
  uint64_t v225 = v69;
  uint64_t v226 = v71;
  uint64_t v72 = sub_1DA98CA38();
  uint64_t v74 = v73;
  uint64_t v75 = *(void *)(v45 + 16);
  if (!v75) {
    goto LABEL_53;
  }
  uint64_t v76 = v72;
  unint64_t v77 = (char *)(v45 + 64);
  while (1)
  {
    uint64_t v78 = *((void *)v77 - 2);
    unint64_t v79 = *((void *)v77 - 1);
    char v80 = *v77;
    BOOL v81 = *((void *)v77 - 4) == v76 && *((void *)v77 - 3) == v74;
    if (v81 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v77 += 40;
    if (!--v75) {
      goto LABEL_53;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v78, v79, v80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v82 = sub_1DA8F6590(v78, v79, v80);
  unint64_t v84 = v83;
  sub_1DA79EB2C(v78, v79, v80);
  if (!v84) {
    goto LABEL_54;
  }
  uint64_t v223 = v82;
  unint64_t v224 = v84;
  uint64_t v85 = sub_1DA98CA38();
  uint64_t v87 = v86;
  uint64_t v88 = *(void *)(v45 + 16);
  if (!v88)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_54:
    swift_bridgeObjectRelease();
LABEL_55:
    swift_bridgeObjectRelease();
LABEL_56:
    if (qword_1EBE59148 != -1) {
      swift_once();
    }
    uint64_t v109 = sub_1DA989F38();
    __swift_project_value_buffer(v109, (uint64_t)qword_1EBE6F0A8);
    uint64_t v110 = sub_1DA989F18();
    os_log_type_t v111 = sub_1DA98C528();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v112 = 0;
      _os_log_impl(&dword_1DA795000, v110, v111, "Encountered malformed record metadata", v112, 2u);
      MEMORY[0x1E0178DA0](v112, -1, -1);
    }

    return;
  }
  uint64_t v89 = v85;
  uint64_t v90 = (char *)(v45 + 64);
  while (1)
  {
    uint64_t v91 = *((void *)v90 - 2);
    unint64_t v92 = *((void *)v90 - 1);
    char v93 = *v90;
    BOOL v94 = *((void *)v90 - 4) == v89 && *((void *)v90 - 3) == v87;
    if (v94 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v90 += 40;
    if (!--v88) {
      goto LABEL_41;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v91, v92, v93);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v95 = sub_1DA8F6590(v91, v92, v93);
  unint64_t v97 = v96;
  sub_1DA79EB2C(v91, v92, v93);
  if (!v97)
  {
LABEL_53:
    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  unint64_t v222 = v97;
  uint64_t v221 = v95;
  uint64_t v98 = sub_1DA98CA38();
  uint64_t v100 = v99;
  uint64_t v101 = *(void *)(v45 + 16);
  if (!v101)
  {
LABEL_52:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_68:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  uint64_t v102 = v98;
  id v103 = (char *)(v45 + 64);
  uint64_t v104 = v99;
  while (1)
  {
    uint64_t v105 = *((void *)v103 - 2);
    unint64_t v106 = *((void *)v103 - 1);
    char v107 = *v103;
    BOOL v108 = *((void *)v103 - 4) == v102 && *((void *)v103 - 3) == v100;
    if (v108 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v103 += 40;
    --v101;
    uint64_t v100 = v104;
    if (!v101) {
      goto LABEL_52;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v105, v106, v107);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v113 = sub_1DA8F66F4(v105, v106, v107);
  char v115 = v114;
  sub_1DA79EB2C(v105, v106, v107);
  if (v115)
  {
    swift_bridgeObjectRelease();
    goto LABEL_68;
  }
  uint64_t v220 = v113;
  unint64_t v116 = v224;
  if (qword_1EA8E5528 != -1) {
    swift_once();
  }
  __swift_project_value_buffer((uint64_t)v255, (uint64_t)qword_1EA8E6720);
  uint64_t v117 = sub_1DA989658();
  uint64_t v119 = v254;
  char v120 = v231;
  if (v223 == v117 && v116 == v118)
  {
    swift_bridgeObjectRelease();
LABEL_70:
    swift_bridgeObjectRelease();
    uint64_t v122 = (uint64_t)v250;
    uint64_t v123 = (uint64_t)v255;
    (*(void (**)(char *, uint64_t, uint64_t, uint8_t *))(v119 + 56))(v250, 1, 1, v255);
    goto LABEL_71;
  }
  char v121 = sub_1DA98CE58();
  swift_bridgeObjectRelease();
  if (v121) {
    goto LABEL_70;
  }
  uint64_t v136 = (uint64_t)v240;
  sub_1DA989648();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v119 + 48))(v136, 1, v255) != 1)
  {
    swift_bridgeObjectRelease();
    id v178 = *(void (**)(char *, uint64_t, uint8_t *))(v119 + 32);
    unint64_t v179 = v233;
    v178(v233, v136, v255);
    uint64_t v180 = (uint64_t)v250;
    v178(v250, (uint64_t)v179, v255);
    uint64_t v123 = (uint64_t)v255;
    uint64_t v122 = v180;
    (*(void (**)(uint64_t, void, uint64_t, uint8_t *))(v119 + 56))(v180, 0, 1, v255);
LABEL_71:
    sub_1DA989C58();
    sub_1DA91D480(v122, v244, MEMORY[0x1E4F960D0]);
    sub_1DA989C88();
    uint64_t v124 = sub_1DA98CA38();
    uint64_t v126 = v125;
    uint64_t v127 = *(void *)(v45 + 16);
    if (v127)
    {
      uint64_t v128 = v124;
      uint64_t v129 = (char *)(v45 + 64);
      while (1)
      {
        uint64_t v130 = *((void *)v129 - 2);
        unint64_t v131 = *((void *)v129 - 1);
        char v132 = *v129;
        BOOL v133 = *((void *)v129 - 4) == v128 && *((void *)v129 - 3) == v126;
        if (v133 || (sub_1DA98CE58() & 1) != 0) {
          break;
        }
        v129 += 40;
        if (!--v127)
        {
          swift_bridgeObjectRelease();
          uint64_t v134 = 0;
          uint64_t v135 = 0;
          goto LABEL_87;
        }
      }
      swift_bridgeObjectRetain();
      sub_1DA7A1AA8(v130, v131, v132);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v134 = sub_1DA8F6590(v130, v131, v132);
      uint64_t v135 = v143;
      sub_1DA79EB2C(v130, v131, v132);
LABEL_87:
      uint64_t v119 = v254;
      uint64_t v123 = (uint64_t)v255;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v134 = 0;
      uint64_t v135 = 0;
    }
    if (v220 == 1) {
      int v144 = 1;
    }
    else {
      int v144 = 2;
    }
    if (!v220) {
      int v144 = 0;
    }
    uint64_t v145 = v230;
    char v146 = v246;
    if (v144 == 2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1EBE59148 != -1) {
        swift_once();
      }
      uint64_t v151 = sub_1DA989F38();
      __swift_project_value_buffer(v151, (uint64_t)qword_1EBE6F0A8);
      uint64_t v152 = v229;
      (*(void (**)(char *, char *, uint64_t))(v229 + 16))(v146, v120, v145);
      uint64_t v153 = sub_1DA989F18();
      os_log_type_t v154 = sub_1DA98C528();
      if (!os_log_type_enabled(v153, v154))
      {

        unint64_t v177 = *(void (**)(char *, uint64_t))(v152 + 8);
        v177(v146, v145);
        v177(v120, v145);
LABEL_130:
        sub_1DA91D4E8((uint64_t)v250, MEMORY[0x1E4F960D0]);
        return;
      }
      uint64_t v155 = v152;
      uint64_t v156 = swift_slowAlloc();
      uint64_t v255 = (uint8_t *)swift_slowAlloc();
      v258[0] = (uint64_t)v255;
      *(_DWORD *)uint64_t v156 = 136446466;
      LOBYTE(v256) = 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6770);
      uint64_t v157 = sub_1DA98C0A8();
      uint64_t v256 = sub_1DA8C5E00(v157, v158, v258);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      *(_WORD *)(v156 + 12) = 2082;
      sub_1DA91D680(&qword_1EA8E6778, MEMORY[0x1E4F960D8]);
      uint64_t v159 = v230;
      uint64_t v160 = sub_1DA98CDD8();
      uint64_t v256 = sub_1DA8C5E00(v160, v161, v258);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      uint64_t v162 = *(void (**)(char *, uint64_t))(v155 + 8);
      v162(v146, v159);
      _os_log_impl(&dword_1DA795000, v153, v154, "Illegal destination type %{public}s for %{public}s", (uint8_t *)v156, 0x16u);
      uint64_t v163 = (uint64_t)v255;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v163, -1, -1);
      MEMORY[0x1E0178DA0](v156, -1, -1);
    }
    else
    {
      if (v144)
      {
        if (!v135)
        {
          uint64_t v181 = v230;
          swift_bridgeObjectRelease();
          if (qword_1EBE59148 != -1) {
            swift_once();
          }
          uint64_t v182 = sub_1DA989F38();
          __swift_project_value_buffer(v182, (uint64_t)qword_1EBE6F0A8);
          uint64_t v183 = v229;
          uint64_t v184 = v232;
          (*(void (**)(char *, char *, uint64_t))(v229 + 16))(v232, v120, v181);
          uint64_t v185 = sub_1DA989F18();
          os_log_type_t v186 = sub_1DA98C528();
          if (os_log_type_enabled(v185, v186))
          {
            uint64_t v187 = (uint8_t *)swift_slowAlloc();
            uint64_t v188 = swift_slowAlloc();
            v258[0] = v188;
            *(_DWORD *)uint64_t v187 = 136446210;
            uint64_t v255 = v187 + 4;
            sub_1DA91D680(&qword_1EA8E6778, MEMORY[0x1E4F960D8]);
            uint64_t v189 = sub_1DA98CDD8();
            uint64_t v256 = sub_1DA8C5E00(v189, v190, v258);
            sub_1DA98C858();
            swift_bridgeObjectRelease();
            char v191 = *(void (**)(char *, uint64_t))(v183 + 8);
            v191(v184, v181);
            _os_log_impl(&dword_1DA795000, v185, v186, "Missing destination IDs for %{public}s", v187, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1E0178DA0](v188, -1, -1);
            MEMORY[0x1E0178DA0](v187, -1, -1);

            v191(v231, v181);
          }
          else
          {

            uint64_t v218 = *(void (**)(char *, uint64_t))(v183 + 8);
            v218(v184, v181);
            v218(v231, v181);
          }
          goto LABEL_130;
        }
        v258[0] = v134;
        v258[1] = v135;
        uint64_t v256 = 124;
        unint64_t v257 = 0xE100000000000000;
        sub_1DA7DF7A0();
        uint64_t v164 = sub_1DA98C878();
        swift_bridgeObjectRelease();
        uint64_t v165 = *(void *)(v164 + 16);
        if (v165)
        {
          uint64_t v166 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v254 + 48);
          uint64_t v167 = (void (**)(char *, uint64_t, uint64_t))(v254 + 32);
          swift_bridgeObjectRetain();
          v246 = (char *)v164;
          uint64_t v168 = v164 + 40;
          unint64_t v169 = MEMORY[0x1E4FBC860];
          uint64_t v123 = (uint64_t)v255;
          do
          {
            swift_bridgeObjectRetain();
            uint64_t v170 = (uint64_t)v253;
            sub_1DA989648();
            uint64_t v171 = v170;
            swift_bridgeObjectRelease();
            if ((*v166)(v170, 1, v123) == 1)
            {
              sub_1DA7A1AE0(v170, &qword_1EBE58928);
            }
            else
            {
              unint64_t v172 = *v167;
              unint64_t v173 = v251;
              (*v167)(v251, v171, v123);
              v172(v252, (uint64_t)v173, v123);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v169 = sub_1DA7CB344(0, *(void *)(v169 + 16) + 1, 1, v169);
              }
              unint64_t v175 = *(void *)(v169 + 16);
              unint64_t v174 = *(void *)(v169 + 24);
              if (v175 >= v174 >> 1) {
                unint64_t v169 = sub_1DA7CB344(v174 > 1, v175 + 1, 1, v169);
              }
              *(void *)(v169 + 16) = v175 + 1;
              unint64_t v176 = v169
                   + ((*(unsigned __int8 *)(v254 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v254 + 80))
                   + *(void *)(v254 + 72) * v175;
              uint64_t v123 = (uint64_t)v255;
              v172((char *)v176, (uint64_t)v252, (uint64_t)v255);
            }
            v168 += 16;
            --v165;
          }
          while (v165);
          swift_bridgeObjectRelease();
          uint64_t v145 = v230;
          uint64_t v148 = v247;
        }
        else
        {
          unint64_t v169 = MEMORY[0x1E4FBC860];
          uint64_t v148 = v247;
          uint64_t v123 = (uint64_t)v255;
        }
        uint64_t v150 = (uint64_t)v241;
        swift_bridgeObjectRelease();
        uint64_t v149 = v248;
        *uint64_t v248 = v169;
        v147 = (unsigned int *)MEMORY[0x1E4F960C0];
        uint64_t v119 = v254;
      }
      else
      {
        swift_bridgeObjectRelease();
        v147 = (unsigned int *)MEMORY[0x1E4F960C8];
        uint64_t v148 = v247;
        uint64_t v149 = v248;
        uint64_t v150 = (uint64_t)v241;
      }
      (*(void (**)(unint64_t *, void, uint64_t))(v148 + 104))(v149, *v147, v249);
      sub_1DA989648();
      int v192 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v150, 1, v123);
      uint64_t v193 = v229;
      if (v192 != 1)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v242, v150, v123);
        uint64_t v207 = v123;
        unint64_t v208 = *(void (**)(uint64_t))(v193 + 16);
        v209 = v149;
        unint64_t v210 = v231;
        v208(v243);
        ((void (*)(char *, char *, uint64_t))v208)(v235, v210, v145);
        uint64_t v211 = v242;
        (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v234, v242, v207);
        uint64_t v212 = v247;
        id v213 = v209;
        uint64_t v214 = v249;
        (*(void (**)(char *, unint64_t *, uint64_t))(v247 + 16))(v236, v213, v249);
        uint64_t v215 = (uint64_t)v237;
        sub_1DA989C08();
        uint64_t v216 = sub_1DA989C38();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v216 - 8) + 56))(v215, 0, 1, v216);
        sub_1DA870054(v215, v243);
        (*(void (**)(char *, uint8_t *))(v119 + 8))(v211, v255);
        (*(void (**)(unint64_t *, uint64_t))(v212 + 8))(v248, v214);
        (*(void (**)(char *, uint64_t))(v193 + 8))(v231, v230);
        goto LABEL_130;
      }
      sub_1DA7A1AE0(v150, &qword_1EBE58928);
      if (qword_1EBE59148 != -1) {
        swift_once();
      }
      uint64_t v194 = sub_1DA989F38();
      __swift_project_value_buffer(v194, (uint64_t)qword_1EBE6F0A8);
      uint64_t v195 = v193;
      uint64_t v196 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
      unint64_t v197 = v239;
      unint64_t v198 = v231;
      v196(v239, v231, v145);
      unint64_t v199 = v222;
      swift_bridgeObjectRetain();
      uint64_t v200 = sub_1DA989F18();
      os_log_type_t v201 = sub_1DA98C528();
      if (!os_log_type_enabled(v200, v201))
      {

        unint64_t v217 = *(void (**)(char *, uint64_t))(v195 + 8);
        v217(v197, v145);
        swift_bridgeObjectRelease_n();
        (*(void (**)(unint64_t *, uint64_t))(v247 + 8))(v248, v249);
        v217(v198, v145);
        goto LABEL_130;
      }
      uint64_t v202 = swift_slowAlloc();
      uint64_t v255 = (uint8_t *)swift_slowAlloc();
      v258[0] = (uint64_t)v255;
      *(_DWORD *)uint64_t v202 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v256 = sub_1DA8C5E00(v221, v199, v258);
      char v203 = v197;
      sub_1DA98C858();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v202 + 12) = 2082;
      sub_1DA91D680(&qword_1EA8E6778, MEMORY[0x1E4F960D8]);
      uint64_t v159 = v230;
      uint64_t v204 = sub_1DA98CDD8();
      uint64_t v256 = sub_1DA8C5E00(v204, v205, v258);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      uint64_t v162 = *(void (**)(char *, uint64_t))(v195 + 8);
      v162(v203, v159);
      _os_log_impl(&dword_1DA795000, v200, v201, "Malformed version %{public}s for %{public}s", (uint8_t *)v202, 0x16u);
      uint64_t v206 = (uint64_t)v255;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v206, -1, -1);
      MEMORY[0x1E0178DA0](v202, -1, -1);

      (*(void (**)(unint64_t *, uint64_t))(v247 + 8))(v248, v249);
    }
    v162(v231, v159);
    goto LABEL_130;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA7A1AE0(v136, &qword_1EBE58928);
  if (qword_1EBE59148 != -1) {
    swift_once();
  }
  uint64_t v137 = sub_1DA989F38();
  __swift_project_value_buffer(v137, (uint64_t)qword_1EBE6F0A8);
  swift_bridgeObjectRetain();
  unint64_t v138 = v228;
  swift_bridgeObjectRetain();
  uint64_t v139 = sub_1DA989F18();
  os_log_type_t v140 = sub_1DA98C528();
  if (os_log_type_enabled(v139, v140))
  {
    uint64_t v141 = swift_slowAlloc();
    uint64_t v142 = swift_slowAlloc();
    v258[0] = v142;
    *(_DWORD *)uint64_t v141 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v256 = sub_1DA8C5E00(v223, v116, v258);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v141 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v256 = sub_1DA8C5E00(v227, v138, v258);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v139, v140, "Malformed relationshipID %{public}s for %{public}s", (uint8_t *)v141, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v142, -1, -1);
    MEMORY[0x1E0178DA0](v141, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1DA907908(uint64_t a1)
{
  uint64_t v96 = sub_1DA989C78();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  BOOL v94 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DA989CB8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v91 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1DA989CD8();
  uint64_t v93 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  unint64_t v92 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v90 = (char *)&v87 - v8;
  uint64_t v115 = sub_1DA989698();
  uint64_t v9 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115);
  uint64_t v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DA989C48();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = v1 + 16;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_29;
  }
  uint64_t v17 = Strong;
  uint64_t v18 = *(void *)(Strong + 24);
  uint64_t v19 = *(os_unfair_lock_s **)(v18 + 16);
  swift_retain();
  os_unfair_lock_lock(v19);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v17 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
  swift_release();
  swift_release();
  if (!v20)
  {
    __break(1u);
    goto LABEL_28;
  }
  sub_1DA989BF8();
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  int v88 = *MEMORY[0x1E4F960C0];
  uint64_t v105 = v11;
  uint64_t v99 = v9;
  uint64_t v100 = a1;
  int v89 = v21;
  if (v21 != v88)
  {
    uint64_t v12 = v115;
    if (v21 == *MEMORY[0x1E4F960C8])
    {
      uint64_t v87 = 0;
      uint64_t v104 = 0;
      goto LABEL_16;
    }
LABEL_29:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
  uint64_t v22 = *(void *)v15;
  int64_t v23 = *(void *)(*(void *)v15 + 16);
  if (v23)
  {
    uint64_t v109 = (unint64_t *)MEMORY[0x1E4FBC860];
    sub_1DA7F7A64(0, v23, 0);
    uint64_t v25 = *(void *)(v9 + 16);
    uint64_t v24 = v9 + 16;
    BOOL v103 = v25;
    unint64_t v26 = (*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64);
    uint64_t v87 = v22;
    unint64_t v27 = v22 + v26;
    uint64_t v102 = *(void *)(v24 + 56);
    uint64_t v104 = v24;
    uint64_t v28 = (void (**)(char *, uint64_t))(v24 - 8);
    do
    {
      uint64_t v29 = v115;
      ((void (*)(char *, unint64_t, uint64_t))v103)(v11, v27, v115);
      uint64_t v30 = sub_1DA989658();
      unint64_t v32 = v31;
      (*v28)(v11, v29);
      uint64_t v33 = v109;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA7F7A64(0, v33[2] + 1, 1);
        uint64_t v33 = v109;
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1)
      {
        sub_1DA7F7A64(v34 > 1, v35 + 1, 1);
        uint64_t v33 = v109;
      }
      v33[2] = v35 + 1;
      uint64_t v36 = &v33[2 * v35];
      v36[4] = v30;
      v36[5] = v32;
      v27 += v102;
      --v23;
      uint64_t v11 = v105;
    }
    while (v23);
    swift_bridgeObjectRelease();
    uint64_t v9 = v99;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = (unint64_t *)MEMORY[0x1E4FBC860];
  }
  uint64_t v109 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
  sub_1DA7A0410((unint64_t *)&qword_1EBE62A48, &qword_1EBE62A40);
  uint64_t v87 = sub_1DA98BFC8();
  uint64_t v104 = v37;
  swift_bridgeObjectRelease();
  uint64_t v12 = v115;
LABEL_16:
  uint64_t v38 = v90;
  sub_1DA989C18();
  uint64_t v39 = v91;
  sub_1DA989CC8();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v93 + 8);
  v20(v38, v101);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v39, 1, v12) == 1)
  {
    if (qword_1EA8E5528 == -1)
    {
LABEL_18:
      __swift_project_value_buffer(v12, (uint64_t)qword_1EA8E6720);
      uint64_t v93 = sub_1DA989658();
      uint64_t v102 = v40;
      goto LABEL_20;
    }
LABEL_28:
    swift_once();
    goto LABEL_18;
  }
  uint64_t v41 = v105;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v105, v39, v12);
  uint64_t v93 = sub_1DA989658();
  uint64_t v102 = v42;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v41, v12);
LABEL_20:
  BOOL v103 = v89 == v88;
  uint64_t v109 = 0;
  unint64_t v110 = 0xE000000000000000;
  unint64_t v43 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](99);
  v113[0] = v109;
  v113[1] = v110;
  unint64_t v114 = v43;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v44 = v92;
  sub_1DA989C18();
  uint64_t v45 = sub_1DA989C98();
  uint64_t v47 = v46;
  v20(v44, v101);
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_1DA79EBAC(v45, v47);
  unint64_t v50 = v49;
  char v52 = v51;
  sub_1DA8E40CC(v48, v49, v51);
  sub_1DA79EB2C(v48, v50, v52);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA989C18();
  unint64_t v53 = v94;
  sub_1DA989CA8();
  v20(v44, v101);
  uint64_t v54 = sub_1DA989C68();
  uint64_t v56 = v55;
  (*(void (**)(char *, uint64_t))(v95 + 8))(v53, v96);
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_1DA79EBAC(v54, v56);
  unint64_t v59 = v58;
  char v61 = v60;
  sub_1DA8E40CC(v57, v58, v60);
  sub_1DA79EB2C(v57, v59, v61);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v62 = v102;
  swift_bridgeObjectRetain();
  uint64_t v63 = sub_1DA79EBAC(v93, v62);
  unint64_t v65 = v64;
  LOBYTE(v44) = v66;
  sub_1DA8E40CC(v63, v64, v66);
  sub_1DA79EB2C(v63, v65, (char)v44);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  char v67 = v105;
  sub_1DA989C28();
  uint64_t v68 = sub_1DA989658();
  uint64_t v70 = v69;
  (*(void (**)(char *, uint64_t))(v99 + 8))(v67, v115);
  swift_bridgeObjectRetain();
  uint64_t v71 = sub_1DA79EBAC(v68, v70);
  unint64_t v73 = v72;
  char v75 = v74;
  sub_1DA8E40CC(v71, v72, v74);
  sub_1DA79EB2C(v71, v73, v75);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v76 = sub_1DA79E944(v103);
  unint64_t v78 = v77;
  LOBYTE(v73) = v79;
  sub_1DA8E40CC(v76, v77, v79);
  sub_1DA79EB2C(v76, v78, v73);
  sub_1DA98C148();
  if (v104)
  {
    uint64_t v107 = MEMORY[0x1E4FBB1A0];
    BOOL v108 = &off_1F34D99C8;
    *(void *)&long long v106 = v87;
    *((void *)&v106 + 1) = v104;
    sub_1DA7A19A4(&v106, (uint64_t)&v109);
    uint64_t v80 = v111;
    BOOL v81 = v112;
  }
  else
  {
    uint64_t v82 = (unint64_t *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
    uint64_t v80 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
    BOOL v81 = &off_1F34D9D00;
    uint64_t v111 = v80;
    uint64_t v112 = &off_1F34D9D00;
    uint64_t v109 = v82;
  }
  unint64_t v83 = __swift_project_boxed_opaque_existential_0(&v109, v80);
  sub_1DA8E42AC((uint64_t)v83, (uint64_t)v113, v80, (uint64_t)v81);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
  sub_1DA98C148();
  uint64_t v84 = v114;
  if (!swift_weakLoadStrong()) {
    goto LABEL_29;
  }
  uint64_t v85 = v98;
  sub_1DA7BEF9C(v84);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v85) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA9085BC()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1DA989C78();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0 + 16;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v9 = Strong;
  uint64_t v10 = *(void *)(Strong + 24);
  uint64_t v11 = *(os_unfair_lock_s **)(v10 + 16);
  swift_retain();
  os_unfair_lock_lock(v11);
  uint64_t v12 = *(void *)(v9 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  swift_release();
  swift_release();
  if (!v12)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v35 = v2;
  v33[1] = 0;
  v33[2] = 0xE000000000000000;
  unint64_t v13 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](33);
  unint64_t v34 = v13;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v14 = sub_1DA989C98();
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1DA79EBAC(v14, v16);
  v33[0] = v7;
  unint64_t v19 = v18;
  char v21 = v20;
  sub_1DA8E40CC(v17, v18, v20);
  sub_1DA79EB2C(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA989CA8();
  uint64_t v22 = sub_1DA989C68();
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1DA79EBAC(v22, v24);
  unint64_t v27 = v26;
  char v29 = v28;
  sub_1DA8E40CC(v25, v26, v28);
  sub_1DA79EB2C(v25, v27, v29);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v30 = v34;
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  uint64_t v31 = v35;
  sub_1DA7BEF9C(v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v31) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA908960()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void *)(Strong + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = *(void *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v7 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](13);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DA908B18()
{
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  unint64_t v1 = MEMORY[0x1E4FBC860];
  unint64_t v2 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](64);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (swift_weakLoadStrong())
  {
    uint64_t v3 = sub_1DA7BEF9C(v2);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      uint64_t v5 = v3;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9[0] = v1;
      uint64_t v6 = *(void *)(v5 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v6; ++i)
        {
          uint64_t v8 = *(void *)(v5 + 8 * i + 32);
          swift_bridgeObjectRetain();
          sub_1DA908F40(v9, &v8);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease_n();
        return v9[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        return MEMORY[0x1E4FBC860];
      }
    }
  }
  else
  {
    unint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

void sub_1DA908F40(unint64_t *a1, uint64_t *a2)
{
  v285 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6760);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v284 = (char *)v266 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v288 = sub_1DA989DC8();
  uint64_t v287 = *(void *)(v288 - 8);
  MEMORY[0x1F4188790](v288);
  v282 = (char *)v266 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v286 = (char *)v266 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v295 = (char *)v266 - v10;
  MEMORY[0x1F4188790](v11);
  v289 = (char *)v266 - v12;
  uint64_t v13 = sub_1DA989D68();
  uint64_t v296 = *(void *)(v13 - 8);
  uint64_t v297 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v283 = (char *)v266 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  v298 = (char *)v266 - v16;
  uint64_t v17 = sub_1DA989D28();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v304 = v17;
  uint64_t v305 = v18;
  MEMORY[0x1F4188790](v17);
  v294 = (char *)v266 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  int64_t v303 = (char *)v266 - v21;
  uint64_t v307 = sub_1DA989D18();
  uint64_t v22 = *(void *)(v307 - 8);
  MEMORY[0x1F4188790](v307);
  uint64_t v293 = (char *)v266 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  v300 = (char *)v266 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v299 = (char *)v266 - v27;
  MEMORY[0x1F4188790](v28);
  v301 = (char *)v266 - v29;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58928);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v278 = (uint64_t)v266 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v290 = (char *)v266 - v33;
  MEMORY[0x1F4188790](v34);
  v281 = (char *)v266 - v35;
  uint64_t v36 = sub_1DA989698();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  v292 = (char *)v266 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v39);
  uint64_t v291 = (char *)v266 - v40;
  MEMORY[0x1F4188790](v41);
  unint64_t v280 = (char *)v266 - v42;
  MEMORY[0x1F4188790](v43);
  v277 = (char *)v266 - v44;
  MEMORY[0x1F4188790](v45);
  unint64_t v276 = (char *)v266 - v46;
  MEMORY[0x1F4188790](v47);
  unint64_t v279 = (char *)v266 - v48;
  MEMORY[0x1F4188790](v49);
  uint64_t v306 = (char *)v266 - v50;
  MEMORY[0x1F4188790](v51);
  v302 = (char *)v266 - v52;
  uint64_t v53 = *a2;
  uint64_t v54 = sub_1DA98CA38();
  uint64_t v56 = v55;
  uint64_t v57 = *(void *)(v53 + 16);
  if (!v57) {
    goto LABEL_62;
  }
  uint64_t v58 = v54;
  uint64_t v275 = v22;
  uint64_t v274 = v36;
  uint64_t v273 = v37;
  uint64_t v308 = v2;
  unint64_t v59 = (char *)(v53 + 64);
  while (1)
  {
    uint64_t v60 = *((void *)v59 - 2);
    unint64_t v61 = *((void *)v59 - 1);
    char v62 = *v59;
    BOOL v63 = *((void *)v59 - 4) == v58 && *((void *)v59 - 3) == v56;
    if (v63 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v59 += 40;
    if (!--v57) {
      goto LABEL_62;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v60, v61, v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v64 = sub_1DA8F6590(v60, v61, v62);
  char v66 = v65;
  sub_1DA79EB2C(v60, v61, v62);
  if (!v66) {
    goto LABEL_63;
  }
  uint64_t v271 = v64;
  uint64_t v67 = sub_1DA98CA38();
  uint64_t v69 = v68;
  uint64_t v70 = *(void *)(v53 + 16);
  if (!v70) {
    goto LABEL_51;
  }
  uint64_t v71 = v67;
  id v272 = v66;
  unint64_t v72 = (char *)(v53 + 64);
  while (1)
  {
    uint64_t v73 = *((void *)v72 - 2);
    unint64_t v74 = *((void *)v72 - 1);
    char v75 = *v72;
    BOOL v76 = *((void *)v72 - 4) == v71 && *((void *)v72 - 3) == v69;
    if (v76 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v72 += 40;
    if (!--v70) {
      goto LABEL_51;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v73, v74, v75);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v77 = sub_1DA8F66F4(v73, v74, v75);
  char v79 = v78;
  sub_1DA79EB2C(v73, v74, v75);
  if (v79) {
    goto LABEL_62;
  }
  uint64_t v80 = sub_1DA98CA38();
  uint64_t v82 = v81;
  uint64_t v83 = *(void *)(v53 + 16);
  if (!v83) {
    goto LABEL_51;
  }
  uint64_t v84 = v80;
  uint64_t v270 = v77;
  uint64_t v85 = (char *)(v53 + 64);
  while (1)
  {
    uint64_t v86 = *((void *)v85 - 2);
    unint64_t v87 = *((void *)v85 - 1);
    char v88 = *v85;
    BOOL v89 = *((void *)v85 - 4) == v84 && *((void *)v85 - 3) == v82;
    if (v89 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v85 += 40;
    if (!--v83) {
      goto LABEL_51;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v86, v87, v88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v90 = sub_1DA8F66F4(v86, v87, v88);
  char v92 = v91;
  sub_1DA79EB2C(v86, v87, v88);
  if (v92) {
    goto LABEL_62;
  }
  uint64_t v93 = sub_1DA98CA38();
  uint64_t v95 = v94;
  uint64_t v96 = *(void *)(v53 + 16);
  if (!v96) {
    goto LABEL_51;
  }
  uint64_t v97 = v93;
  uint64_t v269 = v90;
  uint64_t v98 = (char *)(v53 + 64);
  while (1)
  {
    uint64_t v99 = *((void *)v98 - 2);
    unint64_t v100 = *((void *)v98 - 1);
    char v101 = *v98;
    BOOL v102 = *((void *)v98 - 4) == v97 && *((void *)v98 - 3) == v95;
    if (v102 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v98 += 40;
    if (!--v96) {
      goto LABEL_51;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v99, v100, v101);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v103 = sub_1DA8F66F4(v99, v100, v101);
  char v105 = v104;
  sub_1DA79EB2C(v99, v100, v101);
  if (v105) {
    goto LABEL_62;
  }
  uint64_t v106 = sub_1DA98CA38();
  uint64_t v108 = v107;
  uint64_t v109 = *(void *)(v53 + 16);
  if (!v109)
  {
LABEL_51:
    swift_bridgeObjectRelease();
LABEL_62:
    swift_bridgeObjectRelease();
LABEL_63:
    if (qword_1EBE59148 != -1) {
      swift_once();
    }
    uint64_t v129 = sub_1DA989F38();
    __swift_project_value_buffer(v129, (uint64_t)qword_1EBE6F0A8);
    uint64_t v130 = sub_1DA989F18();
    os_log_type_t v131 = sub_1DA98C528();
    if (os_log_type_enabled(v130, v131))
    {
      char v132 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v132 = 0;
      _os_log_impl(&dword_1DA795000, v130, v131, "Encountered malformed pairing relationship", v132, 2u);
      MEMORY[0x1E0178DA0](v132, -1, -1);
    }
LABEL_67:

    return;
  }
  uint64_t v110 = v106;
  uint64_t v268 = v103;
  uint64_t v111 = (char *)(v53 + 64);
  while (1)
  {
    uint64_t v112 = *((void *)v111 - 2);
    unint64_t v113 = *((void *)v111 - 1);
    char v114 = *v111;
    BOOL v115 = *((void *)v111 - 4) == v110 && *((void *)v111 - 3) == v108;
    if (v115 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v111 += 40;
    if (!--v109) {
      goto LABEL_51;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v112, v113, v114);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v116 = sub_1DA8F66F4(v112, v113, v114);
  char v118 = v117;
  sub_1DA79EB2C(v112, v113, v114);
  if (v118) {
    goto LABEL_62;
  }
  uint64_t v267 = v116;
  uint64_t v119 = sub_1DA98CA38();
  uint64_t v121 = v120;
  uint64_t v122 = *(void *)(v53 + 16);
  if (!v122)
  {
LABEL_61:
    swift_bridgeObjectRelease();
LABEL_75:
    _s9ChronoKit26RemoteActivitySubscriptionV2id10activityID12hostIdentity0G5Owner7metrics6family16subscriptionType12creationDateAC10Foundation4UUIDV_SS0A8Services012DeviceScopedJ0VyAO15TypedIdentifierVyAO0xO0O10WidgetHostOGGAC0D9OwnershipO0yB00D17MetricsDefinitionVA0_0D6FamilyOAC0deO0OAL0Q0VSgtcfcfA__0();
    uint64_t v136 = v273;
    uint64_t v137 = v274;
    goto LABEL_76;
  }
  uint64_t v123 = v119;
  uint64_t v124 = (char *)(v53 + 64);
  while (1)
  {
    uint64_t v125 = *((void *)v124 - 2);
    unint64_t v126 = *((void *)v124 - 1);
    char v127 = *v124;
    BOOL v128 = *((void *)v124 - 4) == v123 && *((void *)v124 - 3) == v121;
    if (v128 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v124 += 40;
    if (!--v122) {
      goto LABEL_61;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v125, v126, v127);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA8F6590(v125, v126, v127);
  uint64_t v134 = v133;
  sub_1DA79EB2C(v125, v126, v127);
  if (!v134) {
    goto LABEL_75;
  }
  uint64_t v135 = (uint64_t)v281;
  sub_1DA989648();
  swift_bridgeObjectRelease();
  uint64_t v136 = v273;
  uint64_t v137 = v274;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v135, 1, v274) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1DA7A1AE0(v135, &qword_1EBE58928);
    if (qword_1EBE59148 != -1) {
      swift_once();
    }
    uint64_t v138 = sub_1DA989F38();
    __swift_project_value_buffer(v138, (uint64_t)qword_1EBE6F0A8);
    uint64_t v130 = sub_1DA989F18();
    os_log_type_t v139 = sub_1DA98C528();
    if (os_log_type_enabled(v130, v139))
    {
      os_log_type_t v140 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v140 = 0;
      _os_log_impl(&dword_1DA795000, v130, v139, "Encountered malformed relationship ID", v140, 2u);
      MEMORY[0x1E0178DA0](v140, -1, -1);
    }
    goto LABEL_67;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v136 + 32))(v302, v135, v137);
LABEL_76:
  uint64_t v141 = v306;
  uint64_t v142 = v290;
  sub_1DA989648();
  swift_bridgeObjectRelease();
  id v272 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48);
  if (v272(v142, 1, v137) == 1)
  {
    __break(1u);
    goto LABEL_136;
  }
  uint64_t v271 = v136 + 48;
  uint64_t v143 = *(void (**)(char *, char *, uint64_t))(v136 + 32);
  v266[1] = v136 + 32;
  v266[0] = v143;
  v143(v141, v142, v137);
  uint64_t v144 = sub_1DA98CA38();
  uint64_t v146 = v145;
  uint64_t v147 = *(void *)(v53 + 16);
  if (!v147)
  {
LABEL_85:
    swift_bridgeObjectRelease();
LABEL_88:
    swift_bridgeObjectRelease();
    uint64_t v290 = 0;
    unint64_t v156 = 0xE000000000000000;
    goto LABEL_89;
  }
  uint64_t v148 = v144;
  uint64_t v149 = (char *)(v53 + 64);
  while (1)
  {
    uint64_t v150 = *((void *)v149 - 2);
    unint64_t v151 = *((void *)v149 - 1);
    char v152 = *v149;
    BOOL v153 = *((void *)v149 - 4) == v148 && *((void *)v149 - 3) == v146;
    if (v153 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v149 += 40;
    if (!--v147) {
      goto LABEL_85;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v150, v151, v152);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v154 = sub_1DA8F6590(v150, v151, v152);
  unint64_t v156 = v155;
  sub_1DA79EB2C(v150, v151, v152);
  if (!v156) {
    goto LABEL_88;
  }
  uint64_t v290 = (char *)v154;
LABEL_89:
  uint64_t v157 = v308;
  uint64_t v158 = v275;
  uint64_t v159 = v268;
  uint64_t v160 = v267;
  unint64_t v161 = v301;
  sub_1DA989CE8();
  uint64_t v162 = (unsigned int *)MEMORY[0x1E4F961B0];
  if (v159 != 1) {
    uint64_t v162 = (unsigned int *)MEMORY[0x1E4F961A8];
  }
  (*(void (**)(char *, void, uint64_t))(v305 + 104))(v303, *v162, v304);
  uint64_t v163 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
  uint64_t v164 = v307;
  v163(v299, v161, v307);
  v163(v300, v161, v164);
  uint64_t v165 = (unsigned int *)MEMORY[0x1E4F961C8];
  uint64_t v166 = v270;
  uint64_t v167 = v269;
  v281 = (char *)v156;
  switch(v160)
  {
    case 0:
      goto LABEL_94;
    case 1:
      uint64_t v165 = (unsigned int *)MEMORY[0x1E4F961D8];
      goto LABEL_94;
    case 2:
      uint64_t v165 = (unsigned int *)MEMORY[0x1E4F961D0];
      goto LABEL_94;
    case 3:
      uint64_t v202 = sub_1DA98CA38();
      uint64_t v204 = v203;
      uint64_t v205 = *(void *)(v53 + 16);
      if (!v205) {
        goto LABEL_115;
      }
      uint64_t v206 = v202;
      uint64_t v207 = (char *)(v53 + 64);
      break;
    default:
      swift_bridgeObjectRelease();
      uint64_t v212 = *(void (**)(char *, uint64_t))(v158 + 8);
      uint64_t v213 = v307;
      v212(v300, v307);
      uint64_t v275 = v158 + 8;
      v212(v299, v213);
      if (qword_1EBE59148 != -1) {
        swift_once();
      }
      uint64_t v214 = sub_1DA989F38();
      __swift_project_value_buffer(v214, (uint64_t)qword_1EBE6F0A8);
      uint64_t v215 = v273;
      uint64_t v216 = v280;
      uint64_t v217 = v274;
      (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v280, v306, v274);
      uint64_t v218 = sub_1DA989F18();
      os_log_type_t v219 = sub_1DA98C528();
      if (os_log_type_enabled(v218, v219))
      {
        uint64_t v220 = swift_slowAlloc();
        v300 = (char *)swift_slowAlloc();
        uint64_t v312 = v300;
        *(_DWORD *)uint64_t v220 = 136446466;
        sub_1DA91D680(&qword_1EA8E5950, MEMORY[0x1E4F27990]);
        uint64_t v221 = sub_1DA98CDD8();
        uint64_t v311 = sub_1DA8C5E00(v221, v222, (uint64_t *)&v312);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        uint64_t v223 = *(void (**)(char *, uint64_t))(v215 + 8);
        v223(v216, v217);
        *(_WORD *)(v220 + 12) = 2082;
        LOBYTE(v311) = 4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6768);
        uint64_t v224 = sub_1DA98C0A8();
        uint64_t v311 = sub_1DA8C5E00(v224, v225, (uint64_t *)&v312);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DA795000, v218, v219, "Illegal state for %{public}s: %{public}s", (uint8_t *)v220, 0x16u);
        uint64_t v226 = v300;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v226, -1, -1);
        MEMORY[0x1E0178DA0](v220, -1, -1);

        (*(void (**)(char *, uint64_t))(v305 + 8))(v303, v304);
        v212(v301, v307);
        v223(v306, v217);
        v223(v302, v217);
      }
      else
      {

        uint64_t v227 = *(void (**)(char *, uint64_t))(v215 + 8);
        v227(v216, v217);
        (*(void (**)(char *, uint64_t))(v305 + 8))(v303, v304);
        v212(v301, v307);
        v227(v306, v217);
        v227(v302, v217);
      }
      return;
  }
  while (1)
  {
    uint64_t v208 = *((void *)v207 - 2);
    unint64_t v209 = *((void *)v207 - 1);
    char v210 = *v207;
    BOOL v211 = *((void *)v207 - 4) == v206 && *((void *)v207 - 3) == v204;
    if (v211 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v207 += 40;
    if (!--v205)
    {
LABEL_115:
      swift_bridgeObjectRelease();
      goto LABEL_128;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v208, v209, v210);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA8F6590(v208, v209, v210);
  uint64_t v229 = v228;
  sub_1DA79EB2C(v208, v209, v210);
  if (v229)
  {
    uint64_t v230 = v278;
    sub_1DA989648();
    swift_bridgeObjectRelease();
    if (v272((char *)v230, 1, v274) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v231 = v275 + 8;
      unint64_t v232 = *(void (**)(char *, uint64_t))(v275 + 8);
      uint64_t v233 = v307;
      v232(v300, v307);
      uint64_t v275 = v231;
      v300 = (char *)v232;
      v232(v299, v233);
      sub_1DA7A1AE0(v278, &qword_1EBE58928);
      if (qword_1EBE59148 != -1) {
        swift_once();
      }
      uint64_t v234 = sub_1DA989F38();
      __swift_project_value_buffer(v234, (uint64_t)qword_1EBE6F0A8);
      (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v277, v306, v274);
      unint64_t v235 = sub_1DA989F18();
      os_log_type_t v236 = sub_1DA98C528();
      if (os_log_type_enabled(v235, v236))
      {
        char v237 = (uint8_t *)swift_slowAlloc();
        uint64_t v238 = swift_slowAlloc();
        uint64_t v312 = (char *)v238;
        *(_DWORD *)char v237 = 136446210;
        sub_1DA91D680(&qword_1EA8E5950, MEMORY[0x1E4F27990]);
        unint64_t v239 = v277;
        uint64_t v240 = v274;
        uint64_t v241 = sub_1DA98CDD8();
        uint64_t v311 = sub_1DA8C5E00(v241, v242, (uint64_t *)&v312);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        uint64_t v243 = *(void (**)(char *, uint64_t))(v273 + 8);
        v243(v239, v240);
        _os_log_impl(&dword_1DA795000, v235, v236, "Bad migrating-from ID for %{public}s", v237, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v238, -1, -1);
        MEMORY[0x1E0178DA0](v237, -1, -1);

        (*(void (**)(char *, uint64_t))(v305 + 8))(v303, v304);
        ((void (*)(char *, uint64_t))v300)(v301, v307);
        v243(v306, v240);
        v243(v302, v240);
        return;
      }

      unint64_t v199 = *(void (**)(char *, uint64_t))(v273 + 8);
      uint64_t v201 = v274;
      v199(v277, v274);
      (*(void (**)(char *, uint64_t))(v305 + 8))(v303, v304);
      ((void (*)(char *, uint64_t))v300)(v301, v307);
      uint64_t v200 = v306;
LABEL_106:
      v199(v200, v201);
      v199(v302, v201);
      return;
    }
    char v259 = v276;
    uint64_t v260 = v274;
    unint64_t v261 = (void (*)(char *, char *, uint64_t))v266[0];
    ((void (*)(char *, uint64_t, uint64_t))v266[0])(v276, v278, v274);
    v261(v298, v259, v260);
    uint64_t v165 = (unsigned int *)MEMORY[0x1E4F961E8];
    uint64_t v157 = v308;
    uint64_t v158 = v275;
    uint64_t v166 = v270;
    uint64_t v167 = v269;
LABEL_94:
    (*(void (**)(char *, void, uint64_t))(v296 + 104))(v298, *v165, v297);
    uint64_t v168 = *(void (**)(char *, char *, uint64_t))(v273 + 16);
    uint64_t v169 = v274;
    v168(v291, v306, v274);
    v168(v292, v302, v169);
    if ((v167 & 0x8000000000000000) == 0 && (v166 & 0x8000000000000000) == 0)
    {
      sub_1DA989CE8();
      (*(void (**)(char *, char *, uint64_t))(v305 + 16))(v294, v303, v304);
      uint64_t v170 = sub_1DA989DB8();
      uint64_t v171 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v170 - 8) + 56))(v284, 1, 1, v170);
      MEMORY[0x1F4188790](v171);
      unint64_t v262 = 0xD000000000000011;
      unint64_t v263 = 0x80000001DA99E250;
      unint64_t v172 = v299;
      uint64_t v264 = v299;
      uint64_t v173 = v157;
      unint64_t v280 = (char *)sub_1DA849E0C((void (*)(void *))sub_1DA91D410, (uint64_t)&v266[-6], (uint64_t)&unk_1F34D5100, (uint64_t)v310);
      swift_arrayDestroy();
      unint64_t v174 = *(uint64_t (**)(char *, uint64_t))(v158 + 8);
      unint64_t v175 = v172;
      uint64_t v176 = v307;
      uint64_t v177 = v174(v175, v307);
      MEMORY[0x1F4188790](v177);
      unint64_t v262 = 0xD000000000000011;
      unint64_t v263 = 0x80000001DA99E250;
      id v178 = v300;
      uint64_t v264 = v300;
      uint64_t v179 = sub_1DA849E4C((void (*)(void *))sub_1DA91D448, (uint64_t)&v266[-6], (uint64_t)&unk_1F34D50A0, (uint64_t)v309);
      uint64_t v308 = v173;
      swift_arrayDestroy();
      uint64_t v275 = v158 + 8;
      v300 = (char *)v174;
      v174(v178, v176);
      uint64_t v180 = v283;
      (*(void (**)(char *, char *, uint64_t))(v296 + 16))(v283, v298, v297);
      uint64_t v264 = (char *)v179;
      unint64_t v265 = v180;
      uint64_t v181 = v289;
      sub_1DA989D98();
      uint64_t v182 = v287;
      uint64_t v183 = v288;
      uint64_t v299 = *(char **)(v287 + 16);
      ((void (*)(char *, char *, uint64_t))v299)(v295, v181, v288);
      uint64_t v184 = v285;
      unint64_t v185 = *v285;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v185 = sub_1DA7CB378(0, *(void *)(v185 + 16) + 1, 1, v185);
      }
      os_log_type_t v186 = v286;
      unint64_t v188 = *(void *)(v185 + 16);
      unint64_t v187 = *(void *)(v185 + 24);
      if (v188 >= v187 >> 1) {
        unint64_t v185 = sub_1DA7CB378(v187 > 1, v188 + 1, 1, v185);
      }
      *(void *)(v185 + 16) = v188 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v182 + 32))(v185+ ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80))+ *(void *)(v182 + 72) * v188, v295, v183);
      *uint64_t v184 = v185;
      if (qword_1EBE59148 != -1) {
        swift_once();
      }
      uint64_t v189 = sub_1DA989F38();
      __swift_project_value_buffer(v189, (uint64_t)qword_1EBE6F0A8);
      unint64_t v190 = (void (*)(char *, char *, uint64_t))v299;
      ((void (*)(char *, char *, uint64_t))v299)(v186, v181, v183);
      char v191 = sub_1DA989F18();
      os_log_type_t v192 = sub_1DA98C548();
      if (os_log_type_enabled(v191, v192))
      {
        uint64_t v193 = (uint8_t *)swift_slowAlloc();
        uint64_t v295 = (char *)swift_slowAlloc();
        uint64_t v312 = v295;
        *(_DWORD *)uint64_t v193 = 136315138;
        v294 = (char *)(v193 + 4);
        v190(v282, v186, v183);
        uint64_t v194 = sub_1DA98C0A8();
        uint64_t v311 = sub_1DA8C5E00(v194, v195, (uint64_t *)&v312);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        uint64_t v196 = *(void (**)(char *, uint64_t))(v182 + 8);
        v196(v186, v183);
        _os_log_impl(&dword_1DA795000, v191, v192, "Parsed stored remote device: %s", v193, 0xCu);
        unint64_t v197 = v295;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v197, -1, -1);
        MEMORY[0x1E0178DA0](v193, -1, -1);

        v196(v289, v183);
      }
      else
      {

        unint64_t v198 = *(void (**)(char *, uint64_t))(v182 + 8);
        v198(v186, v183);
        v198(v181, v183);
      }
      (*(void (**)(char *, uint64_t))(v296 + 8))(v298, v297);
      (*(void (**)(char *, uint64_t))(v305 + 8))(v303, v304);
      ((void (*)(char *, uint64_t))v300)(v301, v307);
      unint64_t v199 = *(void (**)(char *, uint64_t))(v273 + 8);
      uint64_t v200 = v306;
      uint64_t v201 = v274;
      goto LABEL_106;
    }
LABEL_136:
    LODWORD(v264) = 0;
    unint64_t v263 = 3451;
    LOBYTE(v262) = 2;
    sub_1DA98CBA8();
    __break(1u);
    JUMPOUT(0x1DA90B038);
  }
LABEL_128:
  swift_bridgeObjectRelease();
  uint64_t v244 = v275 + 8;
  v245 = *(void (**)(char *, uint64_t))(v275 + 8);
  uint64_t v246 = v307;
  v245(v300, v307);
  uint64_t v275 = v244;
  v300 = (char *)v245;
  v245(v299, v246);
  if (qword_1EBE59148 != -1) {
    swift_once();
  }
  uint64_t v247 = sub_1DA989F38();
  __swift_project_value_buffer(v247, (uint64_t)qword_1EBE6F0A8);
  uint64_t v248 = v273;
  uint64_t v249 = v279;
  uint64_t v250 = v274;
  (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v279, v306, v274);
  unint64_t v251 = sub_1DA989F18();
  os_log_type_t v252 = sub_1DA98C528();
  if (os_log_type_enabled(v251, v252))
  {
    uint64_t v253 = (uint8_t *)swift_slowAlloc();
    uint64_t v254 = swift_slowAlloc();
    uint64_t v312 = (char *)v254;
    *(_DWORD *)uint64_t v253 = 136446210;
    uint64_t v299 = (char *)(v253 + 4);
    sub_1DA91D680(&qword_1EA8E5950, MEMORY[0x1E4F27990]);
    uint64_t v255 = sub_1DA98CDD8();
    uint64_t v311 = sub_1DA8C5E00(v255, v256, (uint64_t *)&v312);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    unint64_t v257 = *(void (**)(char *, uint64_t))(v248 + 8);
    v257(v249, v250);
    _os_log_impl(&dword_1DA795000, v251, v252, "No migrating-from ID for %{public}s", v253, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v254, -1, -1);
    MEMORY[0x1E0178DA0](v253, -1, -1);

    (*(void (**)(char *, uint64_t))(v305 + 8))(v303, v304);
    ((void (*)(char *, uint64_t))v300)(v301, v307);
    v257(v306, v250);
    v257(v302, v250);
  }
  else
  {

    char v258 = *(void (**)(char *, uint64_t))(v248 + 8);
    v258(v249, v250);
    (*(void (**)(char *, uint64_t))(v305 + 8))(v303, v304);
    ((void (*)(char *, uint64_t))v300)(v301, v307);
    v258(v306, v250);
    v258(v302, v250);
  }
}

uint64_t sub_1DA90B048(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v11 = sub_1DA989D18();
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  uint64_t v15 = a1[1];
  (*(void (**)(char *, uint64_t, double))(v17 + 16))(v14, a4, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a6(v16, v15, a2, a3, v14);
}

uint64_t sub_1DA90B170(uint64_t a1)
{
  uint64_t v100 = sub_1DA989638();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v98 = (char *)&v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DA989D18();
  uint64_t v104 = *(void *)(v3 - 8);
  uint64_t v105 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v103 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1DA989D28();
  uint64_t v5 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v7 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DA989698();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DA989D68();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = a1;
  sub_1DA989D78();
  int v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == *MEMORY[0x1E4F961E8])
  {
    (*(void (**)(uint64_t, uint64_t))(v13 + 96))(v15, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v11, v15, v8);
    uint64_t v93 = sub_1DA989658();
    uint64_t v97 = v17;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v18 = 3;
LABEL_3:
    uint64_t v96 = v18;
    goto LABEL_6;
  }
  if (v16 != *MEMORY[0x1E4F961C8])
  {
    if (v16 == *MEMORY[0x1E4F961D8])
    {
      uint64_t v93 = 0;
      uint64_t v97 = 0;
      uint64_t v18 = 1;
    }
    else
    {
      if (v16 != *MEMORY[0x1E4F961D0]) {
        goto LABEL_26;
      }
      uint64_t v93 = 0;
      uint64_t v97 = 0;
      uint64_t v18 = 2;
    }
    goto LABEL_3;
  }
  uint64_t v93 = 0;
  uint64_t v97 = 0;
  uint64_t v96 = 0;
LABEL_6:
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  sub_1DA989D38();
  uint64_t v21 = v102;
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v102);
  int v23 = *MEMORY[0x1E4F961B0];
  int v95 = v22;
  int v94 = v23;
  if (v22 != v23) {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  }
  double v110 = 0.0;
  unint64_t v111 = 0xE000000000000000;
  unint64_t v24 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](147);
  *(double *)char v114 = v110;
  v114[1] = v111;
  unint64_t v115 = v24;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA989D48();
  uint64_t v25 = sub_1DA989658();
  uint64_t v27 = v26;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v20 + 8);
  v28(v11, v19);
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1DA79EBAC(v25, v27);
  unint64_t v31 = v30;
  uint64_t v102 = v19;
  char v33 = v32;
  sub_1DA8E40CC(v29, v30, v32);
  sub_1DA79EB2C(v29, v31, v33);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA989D88();
  uint64_t v34 = sub_1DA989658();
  uint64_t v36 = v35;
  v28(v11, v102);
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1DA79EBAC(v34, v36);
  unint64_t v39 = v38;
  char v41 = v40;
  sub_1DA8E40CC(v37, v38, v40);
  sub_1DA79EB2C(v37, v39, v41);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v42 = sub_1DA989DA8();
  uint64_t v44 = v43;
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_1DA79EBAC(v42, v44);
  unint64_t v47 = v46;
  char v49 = v48;
  sub_1DA8E40CC(v45, v46, v48);
  sub_1DA79EB2C(v45, v47, v49);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v50 = v103;
  sub_1DA989D58();
  uint64_t v15 = sub_1DA989D08();
  uint64_t v51 = v105;
  uint64_t v12 = v104 + 8;
  uint64_t v13 = *(void *)(v104 + 8);
  ((void (*)(char *, uint64_t))v13)(v50, v105);
  if (v15 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v52 = sub_1DA79E944(v15);
  unint64_t v54 = v53;
  char v56 = v55;
  sub_1DA8E40CC(v52, v53, v55);
  sub_1DA79EB2C(v52, v54, v56);
  sub_1DA98C148();
  sub_1DA989D58();
  uint64_t v15 = sub_1DA989CF8();
  ((void (*)(char *, uint64_t))v13)(v50, v51);
  if (v15 < 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v57 = sub_1DA79E944(v15);
  unint64_t v59 = v58;
  char v61 = v60;
  sub_1DA8E40CC(v57, v58, v60);
  sub_1DA79EB2C(v57, v59, v61);
  sub_1DA98C148();
  double v62 = 0.0;
  uint64_t v63 = MEMORY[0x1E4FBB3D0];
  if (v95 == v94) {
    double v62 = 1.0;
  }
  uint64_t v112 = MEMORY[0x1E4FBB3D0];
  unint64_t v113 = &off_1F34D99D0;
  double v110 = v62;
  uint64_t v64 = __swift_project_boxed_opaque_existential_0(&v110, MEMORY[0x1E4FBB3D0]);
  sub_1DA8E42AC((uint64_t)v64, (uint64_t)v114, v63, (uint64_t)&off_1F34D99D0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v110);
  sub_1DA98C148();
  unint64_t v65 = v98;
  _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
  sub_1DA9895D8();
  double v67 = v66;
  uint64_t v13 = *(void *)(v99 + 8);
  uint64_t v68 = v100;
  ((void (*)(char *, uint64_t))v13)(v65, v100);
  uint64_t v69 = sub_1DA7A0B60(v67);
  unint64_t v71 = v70;
  char v73 = v72;
  sub_1DA8E40CC(v69, v70, v72);
  sub_1DA79EB2C(v69, v71, v73);
  sub_1DA98C148();
  _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
  sub_1DA9895D8();
  double v75 = v74;
  ((void (*)(char *, uint64_t))v13)(v65, v68);
  uint64_t v76 = sub_1DA7A0B60(v75);
  unint64_t v78 = v77;
  char v80 = v79;
  sub_1DA8E40CC(v76, v77, v79);
  sub_1DA79EB2C(v76, v78, v80);
  sub_1DA98C148();
  uint64_t v81 = sub_1DA79E944(v96);
  unint64_t v83 = v82;
  char v85 = v84;
  sub_1DA8E40CC(v81, v82, v84);
  sub_1DA79EB2C(v81, v83, v85);
  sub_1DA98C148();
  if (v97)
  {
    uint64_t v108 = MEMORY[0x1E4FBB1A0];
    uint64_t v109 = &off_1F34D99C8;
    *(void *)&long long v107 = v93;
    *((void *)&v107 + 1) = v97;
    sub_1DA7A19A4(&v107, (uint64_t)&v110);
    uint64_t v86 = v112;
    unint64_t v87 = v113;
  }
  else
  {
    id v88 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
    uint64_t v86 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
    unint64_t v87 = &off_1F34D9D00;
    uint64_t v112 = v86;
    unint64_t v113 = &off_1F34D9D00;
    double v110 = *(double *)&v88;
  }
  BOOL v89 = __swift_project_boxed_opaque_existential_0(&v110, v86);
  sub_1DA8E42AC((uint64_t)v89, (uint64_t)v114, v86, (uint64_t)v87);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v110);
  sub_1DA98C148();
  uint64_t v15 = v115;
  if (!swift_weakLoadStrong())
  {
    while (1)
    {
LABEL_25:
      int v16 = sub_1DA98CBB8();
      __break(1u);
LABEL_26:
      if (v16 != *MEMORY[0x1E4F961E0])
      {
        char v92 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v13 += 8;
        v92(v15, v12);
      }
    }
  }
  uint64_t v90 = v101;
  sub_1DA7BEF9C(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v90) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA90BE74()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void *)(Strong + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = *(void *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v7 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](24);
  uint64_t v17 = v7;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v8 = sub_1DA989658();
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1DA79EBAC(v8, v10);
  unint64_t v13 = v12;
  char v15 = v14;
  sub_1DA8E40CC(v11, v12, v14);
  sub_1DA79EB2C(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA90C0E4()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void *)(Strong + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = *(void *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v7 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](13);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DA90C29C()
{
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  unint64_t v1 = MEMORY[0x1E4FBC860];
  unint64_t v2 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](40);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (swift_weakLoadStrong())
  {
    uint64_t v3 = sub_1DA7BEF9C(v2);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      uint64_t v5 = v3;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9[0] = v1;
      uint64_t v6 = *(void *)(v5 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v6; ++i)
        {
          uint64_t v8 = *(void *)(v5 + 8 * i + 32);
          swift_bridgeObjectRetain();
          sub_1DA90C5C8(v9, &v8);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease_n();
        return v9[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        return MEMORY[0x1E4FBC860];
      }
    }
  }
  else
  {
    unint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

void sub_1DA90C5C8(unint64_t *a1, uint64_t *a2)
{
  uint64_t v90 = type metadata accessor for WidgetExtensionInfo();
  uint64_t v5 = *(void *)(v90 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v90);
  BOOL v89 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v81 - v8;
  uint64_t v10 = *a2;
  uint64_t v11 = sub_1DA98CA38();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v10 + 16);
  if (!v14) {
    goto LABEL_35;
  }
  uint64_t v15 = v11;
  uint64_t v86 = v5;
  unint64_t v87 = a1;
  id v88 = v9;
  uint64_t v92 = v2;
  int v16 = (char *)(v10 + 64);
  while (1)
  {
    uint64_t v18 = *((void *)v16 - 2);
    unint64_t v17 = *((void *)v16 - 1);
    char v19 = *v16;
    BOOL v20 = *((void *)v16 - 4) == v15 && *((void *)v16 - 3) == v13;
    if (v20 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v16 += 40;
    if (!--v14) {
      goto LABEL_35;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v18, v17, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1DA8F6590(v18, v17, v19);
  int v23 = v22;
  sub_1DA79EB2C(v18, v17, v19);
  if (!v23) {
    goto LABEL_36;
  }
  uint64_t v24 = sub_1DA98CA38();
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v10 + 16);
  if (!v27)
  {
LABEL_34:
    swift_bridgeObjectRelease();
LABEL_35:
    swift_bridgeObjectRelease();
LABEL_36:
    if (qword_1EBE59148 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_1DA989F38();
    __swift_project_value_buffer(v48, (uint64_t)qword_1EBE6F0A8);
    char v49 = sub_1DA989F18();
    os_log_type_t v50 = sub_1DA98C528();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl(&dword_1DA795000, v49, v50, "Encountered malformed remote extension", v51, 2u);
      MEMORY[0x1E0178DA0](v51, -1, -1);
    }

    return;
  }
  uint64_t v28 = v24;
  uint64_t v84 = v21;
  id v85 = v23;
  uint64_t v29 = (char *)(v10 + 64);
  while (1)
  {
    uint64_t v30 = *((void *)v29 - 2);
    unint64_t v31 = *((void *)v29 - 1);
    char v32 = *v29;
    BOOL v33 = *((void *)v29 - 4) == v28 && *((void *)v29 - 3) == v26;
    if (v33 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v29 += 40;
    if (!--v27) {
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v30, v31, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_1DA8F6590(v30, v31, v32);
  uint64_t v36 = v35;
  sub_1DA79EB2C(v30, v31, v32);
  if (!v36) {
    goto LABEL_35;
  }
  uint64_t v83 = v34;
  uint64_t v37 = sub_1DA98CA38();
  uint64_t v39 = v38;
  uint64_t v40 = *(void *)(v10 + 16);
  if (!v40)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  uint64_t v41 = v37;
  uint64_t v42 = (char *)(v10 + 64);
  while (1)
  {
    uint64_t v43 = *((void *)v42 - 2);
    unint64_t v44 = *((void *)v42 - 1);
    char v45 = *v42;
    BOOL v46 = *((void *)v42 - 4) == v41 && *((void *)v42 - 3) == v39;
    if (v46 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v42 += 40;
    if (!--v40) {
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v43, v44, v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA8F6418(v43, v44, v45, &v91);
  sub_1DA79EB2C(v43, v44, v45);
  unint64_t v47 = *((void *)&v91 + 1);
  if (*((void *)&v91 + 1) >> 60 == 15) {
    goto LABEL_34;
  }
  uint64_t v52 = v91;
  sub_1DA98C708();
  unint64_t v53 = (void *)sub_1DA98C6D8();
  uint64_t v54 = v92;
  if (v53)
  {
    char v55 = v53;
    if (objc_msgSend(v53, sel_isRemote))
    {
      sub_1DA9890E8();
      swift_allocObject();
      sub_1DA9890D8();
      sub_1DA91D680(&qword_1EA8E6758, (void (*)(uint64_t))type metadata accessor for WidgetExtensionInfo);
      uint64_t v56 = (uint64_t)v88;
      sub_1DA9890C8();
      if (v54)
      {
        sub_1DA7A1ACC(v52, v47);
        swift_release();

        swift_bridgeObjectRelease();
        return;
      }
      swift_release();
      sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
      id v65 = *(id *)v56;
      char v66 = sub_1DA98C7A8();

      uint64_t v82 = v52;
      id v85 = v55;
      if (v66)
      {
        if (*(void *)(v56 + 8) == v83 && v36 == *(void *)(v56 + 16))
        {
          swift_bridgeObjectRelease();
          uint64_t v68 = v86;
          double v67 = v87;
          uint64_t v69 = (uint64_t)v89;
LABEL_61:
          sub_1DA91D480(v56, v69, (uint64_t (*)(void))type metadata accessor for WidgetExtensionInfo);
          unint64_t v71 = *v67;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v71 = sub_1DA7CB3AC(0, *(void *)(v71 + 16) + 1, 1, v71);
          }
          unint64_t v73 = *(void *)(v71 + 16);
          unint64_t v72 = *(void *)(v71 + 24);
          if (v73 >= v72 >> 1) {
            unint64_t v71 = sub_1DA7CB3AC(v72 > 1, v73 + 1, 1, v71);
          }
          *(void *)(v71 + 16) = v73 + 1;
          sub_1DA91D5B0(v69, v71+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v73, (uint64_t (*)(void))type metadata accessor for WidgetExtensionInfo);
          sub_1DA7A1ACC(v82, v47);

          *double v67 = v71;
LABEL_71:
          sub_1DA91D4E8(v56, (uint64_t (*)(void))type metadata accessor for WidgetExtensionInfo);
          return;
        }
        char v70 = sub_1DA98CE58();
        swift_bridgeObjectRelease();
        uint64_t v68 = v86;
        double v67 = v87;
        uint64_t v69 = (uint64_t)v89;
        if (v70) {
          goto LABEL_61;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (qword_1EBE59148 != -1) {
        swift_once();
      }
      uint64_t v74 = sub_1DA989F38();
      __swift_project_value_buffer(v74, (uint64_t)qword_1EBE6F0A8);
      double v75 = sub_1DA989F18();
      os_log_type_t v76 = sub_1DA98C528();
      BOOL v77 = os_log_type_enabled(v75, v76);
      uint64_t v78 = v82;
      id v79 = v85;
      if (v77)
      {
        char v80 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v80 = 0;
        _os_log_impl(&dword_1DA795000, v75, v76, "Unexpected mismatch in serialized info", v80, 2u);
        MEMORY[0x1E0178DA0](v80, -1, -1);
      }
      sub_1DA7A1ACC(v78, v47);

      goto LABEL_71;
    }
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_1DA989F38();
    __swift_project_value_buffer(v61, (uint64_t)qword_1EBE6F0A8);
    double v62 = sub_1DA989F18();
    os_log_type_t v63 = sub_1DA98C528();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v64 = 0;
      _os_log_impl(&dword_1DA795000, v62, v63, "Encountered non-remote extension", v64, 2u);
      MEMORY[0x1E0178DA0](v64, -1, -1);
      sub_1DA7A1ACC(v52, v47);
    }
    else
    {
      sub_1DA7A1ACC(v52, v47);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1EBE59148 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_1DA989F38();
    __swift_project_value_buffer(v57, (uint64_t)qword_1EBE6F0A8);
    unint64_t v58 = sub_1DA989F18();
    os_log_type_t v59 = sub_1DA98C528();
    if (os_log_type_enabled(v58, v59))
    {
      char v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v60 = 0;
      _os_log_impl(&dword_1DA795000, v58, v59, "Encountered malformed extension identity", v60, 2u);
      MEMORY[0x1E0178DA0](v60, -1, -1);
    }
    sub_1DA7A1ACC(v52, v47);
  }
}

uint64_t ChronoMetadataStore.RemoteExtensionStore.deinit()
{
  swift_weakDestroy();
  return v0;
}

unint64_t sub_1DA90CF3C()
{
  return sub_1DA90C29C();
}

uint64_t sub_1DA90CF64(uint64_t a1)
{
  return ChronoMetadataStore.MutableRemoteExtensionStore.update(remoteWidgetExtensionInfo:)(a1);
}

uint64_t sub_1DA90CF88(void *a1)
{
  return ChronoMetadataStore.MutableRemoteExtensionStore.removeExtension(with:)(a1);
}

void sub_1DA90CFAC()
{
}

uint64_t sub_1DA90CFD0(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1DA90D474(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_1DA98C188();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_1DA98C128();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_1DA98C128();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_1DA98C198();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1DA7CAFB4(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_1DA7CAFB4((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_1DA98C128();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_1DA98C198();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1DA7CAFB4(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_1DA7CAFB4((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1DA98CBA8();
  __break(1u);
LABEL_42:
  uint64_t result = sub_1DA98CBA8();
  __break(1u);
  return result;
}

uint64_t sub_1DA90D474(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1DA98C198();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_1DA7CAFB4(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_1DA7CAFB4((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1DA98CBA8();
  __break(1u);
  return result;
}

uint64_t sub_1DA90D5D0(id *a1, long long *a2, void *a3)
{
  sub_1DA98CF18();
  id v6 = *a1;
  sub_1DA98C7B8();

  type metadata accessor for ActivityKey(0);
  sub_1DA9897A8();
  sub_1DA91D680(&qword_1EBE59DC8, MEMORY[0x1E4F17CC8]);
  sub_1DA98BFB8();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  sub_1DA98BC48();
  sub_1DA91D680(&qword_1EBE5A000, MEMORY[0x1E4F46E38]);
  sub_1DA98BFB8();
  type metadata accessor for ActivityVariantKey(0);
  sub_1DA98B928();
  sub_1DA91D680(&qword_1EBE59760, MEMORY[0x1E4F46C88]);
  sub_1DA98BFB8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  sub_1DA7A0410(&qword_1EBE5A138, &qword_1EBE66B90);
  sub_1DA98BFB8();
  sub_1DA98CF68();
  unint64_t v8 = sub_1DA98C938();
  *(void *)((char *)a3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
  sub_1DA91D618((uint64_t)a1, a3[6] + *(void *)(*(void *)(v7 - 8) + 72) * v8);
  uint64_t result = sub_1DA7A19A4(a2, a3[7] + 40 * v8);
  ++a3[2];
  return result;
}

uint64_t sub_1DA90D878(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE59110);
  char v40 = a2;
  uint64_t v6 = sub_1DA98CBF8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v34 = *(void *)v32;
      unint64_t v33 = *(void *)(v32 + 8);
      char v35 = *(unsigned char *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v34, v33, v35);
      }
      sub_1DA98CF18();
      sub_1DA98C108();
      uint64_t result = sub_1DA98CF68();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      char v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *char v18 = v30;
      v18[1] = v31;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(void *)uint64_t v19 = v34;
      *(void *)(v19 + 8) = v33;
      *(unsigned char *)(v19 + 16) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DA90DBA4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62B98);
  char v35 = a2;
  uint64_t v6 = sub_1DA98CBF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    char v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    int64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_1DA7A1930(v22, v36);
    }
    else
    {
      sub_1DA800210((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_1DA98C038();
    sub_1DA98CF18();
    sub_1DA98C108();
    uint64_t v24 = sub_1DA98CF68();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_1DA7A1930(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DA90DEE0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1DA98BB28();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v55 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (uint64_t *)((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64030);
  int v53 = a2;
  uint64_t v12 = sub_1DA98CBF8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v44 = v2;
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  BOOL v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = v6 + 16;
  uint64_t v49 = v6;
  uint64_t v54 = (uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32);
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  uint64_t v50 = v5;
  while (1)
  {
    if (v17)
    {
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v45) {
      break;
    }
    uint64_t v25 = v46;
    unint64_t v26 = v46[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v26 = v46[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v53 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v46[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v26 = v46[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v51 + 72);
    uint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v53)
    {
      sub_1DA91D5B0(v29, (uint64_t)v10, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      uint64_t v30 = *(void *)(v11 + 56);
      uint64_t v31 = *(void *)(v49 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v49 + 32))(v55, v30 + v31 * v23, v5);
    }
    else
    {
      sub_1DA91D480(v29, (uint64_t)v10, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v31 = *(void *)(v49 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v55, v32 + v31 * v23, v5);
    }
    sub_1DA98CF18();
    sub_1DA989638();
    sub_1DA91D680(&qword_1EBE63390, MEMORY[0x1E4F27928]);
    sub_1DA98BFB8();
    sub_1DA98B648();
    sub_1DA91D680(&qword_1EBE63FC0, MEMORY[0x1E4F46A80]);
    sub_1DA98BFB8();
    uint64_t v33 = v10[3];
    uint64_t v34 = v10[4];
    __swift_project_boxed_opaque_existential_0(v10, v33);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v34 + 16))(&v56, v33, v34);
    sub_1DA98CF28();
    uint64_t result = sub_1DA98CF68();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v5 = v50;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      uint64_t v5 = v50;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v21 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    sub_1DA91D5B0((uint64_t)v10, *(void *)(v13 + 48) + v28 * v21, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    uint64_t result = (*v54)(*(void *)(v13 + 56) + v31 * v21, v55, v5);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
  }
  swift_release();
  uint64_t v3 = v44;
  uint64_t v25 = v46;
  if ((v53 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v25, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1DA90E4B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62B78);
  uint64_t v6 = sub_1DA98CBF8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1DA7A1930(v24, v35);
      }
      else
      {
        sub_1DA800210((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1DA98CF18();
      sub_1DA98C108();
      uint64_t result = sub_1DA98CF68();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1DA7A1930(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DA90E7B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62B90);
  char v35 = a2;
  uint64_t v6 = sub_1DA98CBF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    int64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_1DA7A1930(v22, v36);
    }
    else
    {
      sub_1DA800210((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_1DA98C038();
    sub_1DA98CF18();
    sub_1DA98C108();
    uint64_t v24 = sub_1DA98CF68();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_1DA7A1930(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DA90EAEC(uint64_t a1, int a2)
{
  return sub_1DA90F0D4(a1, a2, MEMORY[0x1E4F27928], &qword_1EBE58F50);
}

uint64_t sub_1DA90EB0C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (id *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A030);
  unint64_t v10 = (void *)sub_1DA98CBF8();
  if (*(void *)(v9 + 16))
  {
    uint64_t v25 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v19 = v18 | (v17 << 6);
      }
      else
      {
        int64_t v20 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v20 >= v15) {
          goto LABEL_23;
        }
        unint64_t v21 = v12[v20];
        ++v17;
        if (!v21)
        {
          int64_t v17 = v20 + 1;
          if (v20 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v21 = v12[v17];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v25;
                goto LABEL_30;
              }
              uint64_t v24 = 1 << *(unsigned char *)(v9 + 32);
              if (v24 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v12 = -1 << v24;
              }
              uint64_t v3 = v25;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v21 = v12[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v17 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v21 = v12[v17];
                ++v22;
                if (v21) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v22;
          }
        }
LABEL_20:
        unint64_t v14 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
      }
      uint64_t v23 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v19;
      if (a2)
      {
        sub_1DA91D618(v23, (uint64_t)v8);
        sub_1DA7A19A4((long long *)(*(void *)(v9 + 56) + 40 * v19), (uint64_t)v26);
      }
      else
      {
        sub_1DA7A1F58(v23, (uint64_t)v8, &qword_1EBE59EF8);
        sub_1DA7A1A44(*(void *)(v9 + 56) + 40 * v19, (uint64_t)v26);
      }
      uint64_t result = sub_1DA90D5D0(v8, v26, v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1DA90EDBC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A038);
  char v36 = a2;
  uint64_t v6 = sub_1DA98CBF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1DA98CF18();
    sub_1DA98C108();
    uint64_t result = sub_1DA98CF68();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DA90F0D4(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v52 = a3(0);
  uint64_t v8 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v51 = (char *)&v44 - v9;
  uint64_t v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v50 = a2;
  uint64_t v11 = sub_1DA98CBF8();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v47 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int64_t v45 = v4;
  int64_t v46 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v48 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v49 = v8;
  unint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v18 = v11 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v46) {
      break;
    }
    unint64_t v26 = v47;
    unint64_t v27 = v47[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v27 = v47[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v46)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v45;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v47[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v46) {
              goto LABEL_34;
            }
            unint64_t v27 = v47[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v10 + 56);
    uint64_t v30 = v10;
    uint64_t v31 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v24);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = *(void *)(v49 + 72);
    uint64_t v35 = v29 + v34 * v24;
    if (v50)
    {
      (*v17)(v51, v35, v52);
    }
    else
    {
      (*v48)(v51, v35, v52);
      swift_bridgeObjectRetain();
    }
    sub_1DA98CF18();
    sub_1DA98C108();
    uint64_t result = sub_1DA98CF68();
    uint64_t v36 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v18 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v21 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    int64_t v22 = (void *)(*(void *)(v12 + 48) + 16 * v21);
    void *v22 = v32;
    v22[1] = v33;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 56) + v34 * v21, v51, v52);
    ++*(void *)(v12 + 16);
    uint64_t v10 = v30;
  }
  swift_release();
  uint64_t v6 = v45;
  unint64_t v26 = v47;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v10 + 32);
  if (v43 >= 64) {
    bzero(v26, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v43;
  }
  *(void *)(v10 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v12;
  return result;
}

uint64_t sub_1DA90F4C0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A730);
  int v49 = a2;
  uint64_t v10 = sub_1DA98CBF8();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v52 = v8;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  int64_t v45 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  uint64_t v43 = v2;
  int64_t v44 = (unint64_t)(v12 + 63) >> 6;
  int64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  int v50 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v47 = v6;
  uint64_t v48 = v9;
  uint64_t v53 = v5;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v44) {
      break;
    }
    unint64_t v24 = v45;
    unint64_t v25 = v45[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v25 = v45[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v44)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v43;
          if ((v49 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v45[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v44) {
              goto LABEL_34;
            }
            unint64_t v25 = v45[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    int64_t v51 = v18;
    if (v49)
    {
      (*v50)(v52, v28, v53);
      uint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 24 * v22);
      uint64_t v31 = *v29;
      unint64_t v30 = v29[1];
      uint64_t v32 = v29[2];
    }
    else
    {
      (*v46)(v52, v28, v53);
      uint64_t v33 = (uint64_t *)(*(void *)(v9 + 56) + 24 * v22);
      uint64_t v31 = *v33;
      unint64_t v30 = v33[1];
      uint64_t v32 = v33[2];
      sub_1DA79ED98(*v33, v30);
      swift_bridgeObjectRetain();
    }
    sub_1DA7A0410((unint64_t *)&unk_1EBE5A0D0, &qword_1EBE5A0E8);
    uint64_t result = sub_1DA98BFA8();
    uint64_t v34 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v16 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v19 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v50)(*(void *)(v11 + 48) + v27 * v19, v52, v53);
    int64_t v20 = (uint64_t *)(*(void *)(v11 + 56) + 24 * v19);
    *int64_t v20 = v31;
    v20[1] = v30;
    void v20[2] = v32;
    ++*(void *)(v11 + 16);
    uint64_t v6 = v47;
    uint64_t v9 = v48;
    int64_t v18 = v51;
  }
  swift_release();
  uint64_t v3 = v43;
  unint64_t v24 = v45;
  if ((v49 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v9 + 32);
  if (v41 >= 64) {
    bzero(v24, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v41;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1DA90F920(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = sub_1DA989698();
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6790);
  int v50 = a2;
  uint64_t v12 = sub_1DA98CBF8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int64_t v44 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v45 = v5 + 16;
  int64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v48 = v5;
  uint64_t v49 = v8;
  int64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  int64_t v51 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v43) {
      break;
    }
    int64_t v26 = v44;
    unint64_t v27 = v44[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v27 = v44[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v44[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v43) {
              goto LABEL_34;
            }
            unint64_t v27 = v44[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v49 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v50)
    {
      (*v18)(v10, v30, v7);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      (*v46)(v10, v30, v7);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_1DA7A0410(&qword_1EBE5A108, &qword_1EBE66CF0);
    uint64_t result = sub_1DA98BFA8();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v7);
    uint64_t result = (*v51)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v42;
  int64_t v26 = v44;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1DA90FE14(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE5A738);
  int v45 = a2;
  uint64_t v9 = sub_1DA98CBF8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v40 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  unint64_t v38 = v2;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  int64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  uint64_t v42 = v8;
  int64_t v43 = v7;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v39) {
      break;
    }
    unint64_t v22 = v40;
    unint64_t v23 = v40[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v39) {
        goto LABEL_34;
      }
      unint64_t v23 = v40[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v38;
          if ((v45 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v39) {
              goto LABEL_34;
            }
            unint64_t v23 = v40[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = v5;
    uint64_t v26 = *(void *)(v5 + 72);
    unint64_t v27 = *(void *)(v8 + 48) + v26 * v20;
    int64_t v28 = v43;
    uint64_t v29 = v44;
    if (v45)
    {
      (*v46)(v43, v27, v44);
      sub_1DA7A19A4((long long *)(*(void *)(v8 + 56) + 40 * v20), (uint64_t)v47);
    }
    else
    {
      (*v41)(v43, v27, v44);
      sub_1DA7A1A44(*(void *)(v8 + 56) + 40 * v20, (uint64_t)v47);
    }
    sub_1DA7A0410((unint64_t *)&unk_1EBE5A160, &qword_1EBE5A190);
    uint64_t result = sub_1DA98BFA8();
    uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v15 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v18 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*v46)((char *)(*(void *)(v10 + 48) + v26 * v18), (unint64_t)v28, v29);
    uint64_t result = sub_1DA7A19A4(v47, *(void *)(v10 + 56) + 40 * v18);
    ++*(void *)(v10 + 16);
    uint64_t v5 = v25;
    uint64_t v8 = v42;
  }
  swift_release();
  uint64_t v3 = v38;
  unint64_t v22 = v40;
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
  if (v37 >= 64) {
    bzero(v22, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v37;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1DA910258(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for RemoteActivityArchiveBudget();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6750);
  int v43 = a2;
  uint64_t v9 = sub_1DA98CBF8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1DA91D5B0(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RemoteActivityArchiveBudget);
    }
    else
    {
      sub_1DA91D480(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RemoteActivityArchiveBudget);
      swift_bridgeObjectRetain();
    }
    sub_1DA98CF18();
    sub_1DA98C108();
    uint64_t result = sub_1DA98CF68();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *unint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1DA91D5B0((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, (uint64_t (*)(void))type metadata accessor for RemoteActivityArchiveBudget);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1DA910638(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A760);
  uint64_t v6 = sub_1DA98CBF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    int64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v23 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (a2)
    {
      sub_1DA7A19A4(v23, (uint64_t)v34);
    }
    else
    {
      sub_1DA7A1A44((uint64_t)v23, (uint64_t)v34);
      id v24 = v22;
    }
    uint64_t result = sub_1DA98C798();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = sub_1DA7A19A4(v34, *(void *)(v7 + 56) + 40 * v15);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DA910918(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6798);
  char v6 = a2;
  uint64_t v7 = sub_1DA98CBF8();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_1DA98CF18();
      sub_1DA98C108();
      uint64_t result = sub_1DA98CF68();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      unint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *unint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1DA910C24(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5768);
  char v42 = a2;
  uint64_t v6 = sub_1DA98CBF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    int64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DA98CF18();
    sub_1DA98C108();
    uint64_t result = sub_1DA98CF68();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DA910F4C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE58F60);
  char v36 = a2;
  uint64_t v6 = sub_1DA98CBF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DA98CF18();
    sub_1DA98C108();
    uint64_t result = sub_1DA98CF68();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DA911264(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = sub_1DA989638();
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA8E5758);
  int v50 = a2;
  uint64_t v12 = sub_1DA98CBF8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v44 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  char v42 = v2;
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v45 = v5 + 16;
  int64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v48 = v5;
  uint64_t v49 = v8;
  uint64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  int64_t v51 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v43) {
      break;
    }
    unint64_t v26 = v44;
    unint64_t v27 = v44[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v27 = v44[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v44[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v43) {
              goto LABEL_34;
            }
            unint64_t v27 = v44[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v49 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v50)
    {
      (*v18)(v10, v30, v7);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      (*v46)(v10, v30, v7);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_1DA7A0410(&qword_1EBE5A138, &qword_1EBE66B90);
    uint64_t result = sub_1DA98BFA8();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v7);
    uint64_t result = (*v51)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v26 = v44;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1DA911758(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5748);
  int v45 = a2;
  uint64_t v10 = sub_1DA98CBF8();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v41 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  BOOL v39 = v2;
  int64_t v40 = (unint64_t)(v12 + 63) >> 6;
  char v42 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v44 = v6;
  uint64_t v16 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v17 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v19 = 0;
  for (i = v9; ; uint64_t v9 = i)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = v41;
    unint64_t v25 = v41[v23];
    ++v19;
    if (!v25)
    {
      int64_t v19 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v25 = v41[v19];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v45 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v41[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v19 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v19 >= v40) {
              goto LABEL_34;
            }
            unint64_t v25 = v41[v19];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v19 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v44 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v45)
    {
      (*v16)(v8, v28, v5);
      id v29 = *(id *)(*(void *)(v9 + 56) + 8 * v22);
    }
    else
    {
      (*v42)(v8, v28, v5);
      id v29 = *(id *)(*(void *)(v9 + 56) + 8 * v22);
    }
    sub_1DA7A0410(&qword_1EBE5A138, &qword_1EBE66B90);
    uint64_t result = sub_1DA98BFA8();
    uint64_t v30 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v17 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v31) & ~*(void *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v17 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v20 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v16)(*(void *)(v11 + 48) + v27 * v20, v8, v5);
    *(void *)(*(void *)(v11 + 56) + 8 * v20) = v29;
    ++*(void *)(v11 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = v41;
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v9 + 32);
  if (v37 >= 64) {
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v37;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1DA911B70(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for RemoteActivitySubscription(0);
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA989698();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6788);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_1DA98CBF8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  unint64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    int64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    unint64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1DA91D5B0(v32 + v33 * v24, v54, type metadata accessor for RemoteActivitySubscription);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1DA91D480(v34 + v33 * v24, v54, type metadata accessor for RemoteActivitySubscription);
    }
    sub_1DA91D680(&qword_1EA8E5958, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1DA98BFA8();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      unint64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      unint64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_1DA91D5B0(v54, *(void *)(v13 + 56) + v33 * v22, type metadata accessor for RemoteActivitySubscription);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  int64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1DA912088(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = sub_1DA989C38();
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA989CD8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6780);
  int v50 = a2;
  uint64_t v12 = sub_1DA98CBF8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v44 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v45 = v5 + 16;
  int64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v48 = v5;
  uint64_t v49 = v8;
  uint64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  int64_t v51 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v43) {
      break;
    }
    int64_t v26 = v44;
    unint64_t v27 = v44[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v27 = v44[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v44[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v43) {
              goto LABEL_34;
            }
            unint64_t v27 = v44[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v49 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v50)
    {
      (*v18)(v10, v30, v7);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      (*v46)(v10, v30, v7);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_1DA91D680(&qword_1EA8E5CE8, MEMORY[0x1E4F960D8]);
    uint64_t result = sub_1DA98BFA8();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v7);
    uint64_t result = (*v51)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v42;
  int64_t v26 = v44;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1DA912584(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ExtensionMetadata();
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A758);
  int v41 = a2;
  uint64_t v9 = sub_1DA98CBF8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  unint64_t v38 = v2;
  BOOL v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v15 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v16 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v15) {
      break;
    }
    unint64_t v23 = v39;
    unint64_t v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      int64_t v18 = v22 + 1;
      if (v22 + 1 >= v15) {
        goto LABEL_34;
      }
      unint64_t v24 = v39[v18];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v15)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v38;
          if ((v41 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v18 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v15) {
              goto LABEL_34;
            }
            unint64_t v24 = v39[v18];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    int64_t v26 = *(void **)(*(void *)(v8 + 48) + 8 * v21);
    uint64_t v27 = *(void *)(v40 + 72);
    uint64_t v28 = *(void *)(v8 + 56) + v27 * v21;
    if (v41)
    {
      sub_1DA91D5B0(v28, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
    }
    else
    {
      sub_1DA91D480(v28, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
      id v29 = v26;
    }
    uint64_t result = sub_1DA98C798();
    uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v16 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v19 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(void *)(*(void *)(v10 + 48) + 8 * v19) = v26;
    uint64_t result = sub_1DA91D5B0((uint64_t)v7, *(void *)(v10 + 56) + v27 * v19, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  unint64_t v23 = v39;
  if ((v41 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v37;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1DA91292C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59688);
  char v40 = a2;
  uint64_t v6 = sub_1DA98CBF8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      id v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      unint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v21);
      uint64_t v34 = *v32;
      unint64_t v33 = v32[1];
      uint64_t v35 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1DA79ED98(v34, v33);
        swift_bridgeObjectRetain();
      }
      sub_1DA98CF18();
      sub_1DA98C108();
      uint64_t result = sub_1DA98CF68();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *int64_t v18 = v30;
      v18[1] = v31;
      unint64_t v19 = (uint64_t *)(*(void *)(v7 + 56) + 24 * v17);
      *unint64_t v19 = v34;
      v19[1] = v33;
      _OWORD v19[2] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DA912C5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DA7FE118(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA918B5C();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
    sub_1DA91D4E8(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = sub_1DA98BB28();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_1DA91418C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_1DA98BB28();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

double sub_1DA912E28@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1DA7FDF54(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA918E9C();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1DA7A1930((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1DA9145A8(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1DA912F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1DA7FDF54(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA919A68(MEMORY[0x1E4F27928], &qword_1EBE58F50);
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = sub_1DA989638();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a3, v12 + *(void *)(v20 + 72) * v8, v13);
    sub_1DA91564C(v8, v11, MEMORY[0x1E4F27928]);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_1DA989638();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_1DA913104(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1DA7FE3C0(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v11 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DA919264();
    uint64_t v7 = v11;
  }
  unint64_t v8 = *(void **)(*(void *)(v7 + 48) + (v4 << 6));
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1DA914798(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1DA9131E8(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1DA7FE444(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v11 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DA919458();
    uint64_t v7 = v11;
  }
  unint64_t v8 = *(void **)(*(void *)(v7 + 48) + 40 * v4);
  swift_bridgeObjectRelease();

  uint64_t v9 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1DA914A6C(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v9;
}

double sub_1DA9132BC@<D0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DA7FE530(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA91963C();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
    sub_1DA7A1AE0(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, &qword_1EBE59EF8);
    sub_1DA7A19A4((long long *)(*(void *)(v9 + 56) + 40 * v6), a2);
    sub_1DA914CF8(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1DA9133E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DA7FDF54(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DA9198B0();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1DA915178(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1DA9134B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DA7FE84C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA91AC78(MEMORY[0x1E4F27990], &qword_1EBE66CF0, &qword_1EA8E6790);
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = sub_1DA989698();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_1DA915A34(v6, v9, &qword_1EBE66CF0, &qword_1EBE5A108, MEMORY[0x1E4F589E0], MEMORY[0x1E4F27990]);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_1DA989698();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

double sub_1DA9136EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DA7FE778(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA91A030();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_1DA7A19A4((long long *)(*(void *)(v9 + 56) + 40 * v6), a2);
    sub_1DA915350(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1DA913824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1DA7FDF54(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA91A2E0();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for RemoteActivityArchiveBudget();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1DA91D5B0(v12 + *(void *)(v20 + 72) * v8, a3, (uint64_t (*)(void))type metadata accessor for RemoteActivityArchiveBudget);
    sub_1DA91564C(v8, v11, (uint64_t (*)(void))type metadata accessor for RemoteActivityArchiveBudget);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for RemoteActivityArchiveBudget();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

double sub_1DA9139DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DA7FE920(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA91A574();
      uint64_t v9 = v11;
    }

    sub_1DA7A19A4((long long *)(*(void *)(v9 + 56) + 40 * v6), a2);
    sub_1DA91586C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1DA913ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DA7FE964(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA91AC78(MEMORY[0x1E4F27928], &qword_1EBE66B90, (uint64_t *)&unk_1EA8E5758);
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = sub_1DA989638();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_1DA915A34(v6, v9, &qword_1EBE66B90, &qword_1EBE5A138, MEMORY[0x1E4F58A80], MEMORY[0x1E4F27928]);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_1DA989638();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_1DA913D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DA7FEA54(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA91B604();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1DA989CD8();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = sub_1DA989C38();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_1DA916058(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_1DA989C38();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_1DA913EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DA7FE920(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA91B9AC();
      uint64_t v9 = v19;
    }

    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for ExtensionMetadata();
    uint64_t v18 = *(void *)(v11 - 8);
    sub_1DA91D5B0(v10 + *(void *)(v18 + 72) * v6, a2, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
    sub_1DA9163A0(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for ExtensionMetadata();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

uint64_t sub_1DA91407C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1DA7FDF54(a1, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v15 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA91BC2C();
      uint64_t v12 = v15;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 56) + 24 * v8;
    uint64_t v14 = *(void *)(v13 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v13;
    *(void *)(a3 + 16) = v14;
    sub_1DA91658C(v8, v12);
    *unint64_t v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
  }
  return result;
}

void sub_1DA91418C(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  uint64_t v3 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  unint64_t v6 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = a2 + 64;
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (v4 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    int64_t v11 = v4;
    uint64_t v12 = sub_1DA98C928();
    if ((*(void *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v13 = (v12 + 1) & v10;
      uint64_t v14 = *(void *)(v3 + 72);
      uint64_t v36 = v14;
      uint64_t v37 = a2 + 64;
      do
      {
        int64_t v15 = v14 * v9;
        sub_1DA91D480(*(void *)(a2 + 48) + v14 * v9, (uint64_t)v6, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        uint64_t v16 = a2;
        sub_1DA98CF18();
        sub_1DA989638();
        unint64_t v17 = v13;
        uint64_t v18 = v10;
        sub_1DA91D680(&qword_1EBE63390, MEMORY[0x1E4F27928]);
        sub_1DA98BFB8();
        sub_1DA98B648();
        sub_1DA91D680(&qword_1EBE63FC0, MEMORY[0x1E4F46A80]);
        sub_1DA98BFB8();
        uint64_t v20 = v6[3];
        uint64_t v19 = v6[4];
        __swift_project_boxed_opaque_existential_0(v6, v20);
        uint64_t v21 = v20;
        uint64_t v10 = v18;
        unint64_t v13 = v17;
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 16))(&v39, v21, v19);
        sub_1DA98CF28();
        uint64_t v22 = sub_1DA98CF68();
        sub_1DA91D4E8((uint64_t)v6, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        unint64_t v23 = v22 & v10;
        unint64_t v24 = v11;
        if (v11 >= (uint64_t)v17)
        {
          if (v23 < v17)
          {
            uint64_t v7 = v37;
            a2 = v16;
          }
          else
          {
            uint64_t v7 = v37;
            a2 = v16;
            if (v11 >= (uint64_t)v23) {
              goto LABEL_13;
            }
          }
        }
        else
        {
          uint64_t v7 = v37;
          a2 = v16;
          if (v23 >= v13 || v11 >= (uint64_t)v23)
          {
LABEL_13:
            uint64_t v14 = v36;
            if (v36 * v11 < v15
              || *(void *)(a2 + 48) + v36 * v11 >= (unint64_t)(*(void *)(a2 + 48) + v15 + v36))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v36 * v11 != v15)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = *(void *)(*(void *)(sub_1DA98BB28() - 8) + 72);
            uint64_t v27 = v26 * v11;
            unint64_t v28 = v26 * v9;
            if (v26 * v11 < (uint64_t)(v26 * v9) || v25 + v26 * v11 >= v25 + v26 * v9 + v26)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v24 = v9;
            }
            else
            {
              unint64_t v24 = v9;
              if (v27 != v28)
              {
                swift_arrayInitWithTakeBackToFront();
                unint64_t v24 = v9;
              }
            }
            goto LABEL_6;
          }
        }
        uint64_t v14 = v36;
LABEL_6:
        int64_t v11 = v24;
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    id v29 = (uint64_t *)(v7 + 8 * ((unint64_t)v11 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << v11) - 1;
  }
  else
  {
    id v29 = (uint64_t *)(v7 + 8 * (v4 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << v4) - 1;
  }
  *id v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1DA9145A8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1DA98C928();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1DA98CF18();
        swift_bridgeObjectRetain();
        sub_1DA98C108();
        uint64_t v10 = sub_1DA98CF68();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          unint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *unint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DA914780(unint64_t a1, uint64_t a2)
{
  return sub_1DA91564C(a1, a2, MEMORY[0x1E4F27928]);
}

void sub_1DA914798(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1DA98C928();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v33 = v4;
      uint64_t v34 = v2;
      unint64_t v31 = (v8 + 1) & v7;
      uint64_t v32 = v7;
      do
      {
        unint64_t v35 = v6 << 6;
        unint64_t v9 = *(void *)(v2 + 48) + (v6 << 6);
        uint64_t v10 = *(void **)v9;
        uint64_t v11 = *(void *)(v9 + 32);
        char v12 = *(unsigned char *)(v9 + 56);
        sub_1DA98CF18();
        swift_bridgeObjectRetain();
        id v13 = v10;
        swift_bridgeObjectRetain();
        sub_1DA98C7B8();

        swift_bridgeObjectRetain();
        sub_1DA98C108();
        swift_bridgeObjectRelease();
        sub_1DA98CF38();
        if (v11)
        {
          swift_bridgeObjectRetain();
          sub_1DA98C108();
          swift_bridgeObjectRelease();
        }
        sub_1DA98CF38();
        uint64_t v4 = v33;
        uint64_t v2 = v34;
        if ((v12 & 1) == 0) {
          sub_1DA98CF28();
        }
        sub_1DA98CF28();
        uint64_t v14 = sub_1DA98CF68();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        unint64_t v15 = v14 & v32;
        if (v3 >= (uint64_t)v31)
        {
          if (v15 < v31) {
            goto LABEL_5;
          }
        }
        else if (v15 >= v31)
        {
          goto LABEL_15;
        }
        if (v3 >= (uint64_t)v15)
        {
LABEL_15:
          uint64_t v16 = *(void *)(v34 + 48);
          unint64_t v17 = (long long *)(v16 + (v3 << 6));
          uint64_t v18 = (long long *)(v16 + v35);
          if (v3 << 6 != v35 || v17 >= v18 + 4)
          {
            long long v19 = *v18;
            long long v20 = v18[1];
            long long v21 = v18[3];
            v17[2] = v18[2];
            v17[3] = v21;
            *unint64_t v17 = v19;
            v17[1] = v20;
          }
          uint64_t v22 = *(void *)(v34 + 56);
          uint64_t v23 = (void *)(v22 + 8 * v3);
          unint64_t v24 = (void *)(v22 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v23 >= v24 + 1))
          {
            *uint64_t v23 = *v24;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v32;
      }
      while (((*(void *)(v33 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(v2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v30;
    ++*(_DWORD *)(v2 + 36);
  }
}

void sub_1DA914A6C(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1DA98C928();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v32 = v4;
      uint64_t v33 = v2;
      unint64_t v30 = (v8 + 1) & v7;
      uint64_t v31 = v7;
      do
      {
        uint64_t v9 = 40 * v6;
        uint64_t v10 = *(void *)(v2 + 48) + 40 * v6;
        uint64_t v11 = *(void **)v10;
        char v12 = *(unsigned char *)(v10 + 32);
        sub_1DA98CF18();
        id v13 = v11;
        swift_bridgeObjectRetain();
        sub_1DA98C7B8();

        swift_bridgeObjectRetain();
        sub_1DA98C108();
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0) {
          sub_1DA98CF28();
        }
        sub_1DA98CF28();
        sub_1DA98CF38();
        uint64_t v14 = sub_1DA98CF68();
        swift_bridgeObjectRelease();

        unint64_t v15 = v14 & v31;
        uint64_t v2 = v33;
        if (v3 >= (uint64_t)v30)
        {
          uint64_t v4 = v32;
          if (v15 < v30) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v4 = v32;
          if (v15 >= v30) {
            goto LABEL_13;
          }
        }
        if (v3 >= (uint64_t)v15)
        {
LABEL_13:
          uint64_t v16 = *(void *)(v33 + 48);
          unint64_t v17 = v16 + 40 * v3;
          uint64_t v18 = (long long *)(v16 + v9);
          if (40 * v3 < v9 || v17 >= (unint64_t)v18 + 40 || v3 != v6)
          {
            long long v19 = *v18;
            long long v20 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v19;
            *(_OWORD *)(v17 + 16) = v20;
          }
          uint64_t v21 = *(void *)(v33 + 56);
          uint64_t v22 = (void *)(v21 + 8 * v3);
          uint64_t v23 = (void *)(v21 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v22 >= v23 + 1))
          {
            void *v22 = *v23;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v31;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v24 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *unint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(v2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v29;
    ++*(_DWORD *)(v2 + 36);
  }
}

void sub_1DA914CF8(int64_t a1, uint64_t a2)
{
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  uint64_t v4 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  unint64_t v6 = (id *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = a2 + 64;
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = sub_1DA98C928();
    if ((*(void *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v12 = (v11 + 1) & v10;
      uint64_t v13 = *(void *)(v4 + 72);
      uint64_t v31 = a2;
      uint64_t v32 = a2 + 64;
      uint64_t v30 = v13;
      do
      {
        int64_t v16 = v13 * v9;
        sub_1DA7A1F58(*(void *)(a2 + 48) + v13 * v9, (uint64_t)v6, &qword_1EBE59EF8);
        sub_1DA98CF18();
        id v17 = *v6;
        sub_1DA98C7B8();

        type metadata accessor for ActivityKey(0);
        sub_1DA9897A8();
        sub_1DA91D680(&qword_1EBE59DC8, MEMORY[0x1E4F17CC8]);
        sub_1DA98BFB8();
        swift_bridgeObjectRetain();
        sub_1DA98C108();
        swift_bridgeObjectRelease();
        sub_1DA98BC48();
        sub_1DA91D680(&qword_1EBE5A000, MEMORY[0x1E4F46E38]);
        sub_1DA98BFB8();
        type metadata accessor for ActivityVariantKey(0);
        sub_1DA98B928();
        sub_1DA91D680(&qword_1EBE59760, MEMORY[0x1E4F46C88]);
        sub_1DA98BFB8();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
        sub_1DA7A0410(&qword_1EBE5A138, &qword_1EBE66B90);
        sub_1DA98BFB8();
        uint64_t v18 = sub_1DA98CF68();
        sub_1DA7A1AE0((uint64_t)v6, &qword_1EBE59EF8);
        unint64_t v19 = v18 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v19 < v12)
          {
            a2 = v31;
            uint64_t v7 = v32;
            uint64_t v13 = v30;
          }
          else
          {
            a2 = v31;
            uint64_t v7 = v32;
            uint64_t v13 = v30;
            if (a1 >= (uint64_t)v19) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          a2 = v31;
          uint64_t v7 = v32;
          uint64_t v13 = v30;
          if (v19 >= v12 || a1 >= (uint64_t)v19)
          {
LABEL_12:
            if (v13 * a1 < v16
              || *(void *)(a2 + 48) + v13 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v13))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v20 = *(void *)(a2 + 56);
            unint64_t v21 = v20 + 40 * a1;
            uint64_t v22 = (long long *)(v20 + 40 * v9);
            if (a1 != v9 || (a1 = v9, v21 >= (unint64_t)v22 + 40))
            {
              long long v14 = *v22;
              long long v15 = v22[1];
              *(void *)(v21 + 32) = *((void *)v22 + 4);
              *(_OWORD *)unint64_t v21 = v14;
              *(_OWORD *)(v21 + 16) = v15;
              a1 = v9;
            }
          }
        }
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v23 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << a1) - 1;
  }
  *uint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1DA915178(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1DA98C928();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1DA98CF18();
        swift_bridgeObjectRetain();
        sub_1DA98C108();
        uint64_t v9 = sub_1DA98CF68();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          long long v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *long long v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    id v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    id v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *id v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1DA915350(int64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v35 = a2 + 64;
    uint64_t v11 = sub_1DA98C928();
    uint64_t v12 = v35;
    if ((*(void *)(v35 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v32 = (v11 + 1) & v10;
      uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v34 = v5 + 16;
      uint64_t v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v33(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_1DA7A0410((unint64_t *)&unk_1EBE5A160, &qword_1EBE5A190);
        uint64_t v17 = sub_1DA98BFA8();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v32)
        {
          if (v18 >= v32 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            unint64_t v22 = v21 + 40 * a1;
            uint64_t v23 = (long long *)(v21 + 40 * v9);
            uint64_t v12 = v35;
            if (a1 != v9 || (a1 = v9, v22 >= (unint64_t)v23 + 40))
            {
              long long v24 = *v23;
              long long v25 = v23[1];
              *(void *)(v22 + 32) = *((void *)v23 + 4);
              *(_OWORD *)unint64_t v22 = v24;
              *(_OWORD *)(v22 + 16) = v25;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v32 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v35;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v26 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v26 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  *uint64_t v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1DA91564C(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    uint64_t result = sub_1DA98C928();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        sub_1DA98CF18();
        swift_bridgeObjectRetain();
        sub_1DA98C108();
        uint64_t v11 = sub_1DA98CF68();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        uint64_t v14 = (_OWORD *)(v13 + 16 * v4);
        uint64_t v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          *uint64_t v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v18 = v17 * v4;
        uint64_t result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    unint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  uint64_t *v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1DA91586C(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1DA98C928();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v13 = sub_1DA98C798();

        unint64_t v14 = v13 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v14 >= v9 && v3 >= (uint64_t)v14)
          {
LABEL_16:
            uint64_t v17 = *(void *)(a2 + 48);
            int64_t v18 = (void *)(v17 + 8 * v3);
            int64_t v19 = (void *)(v17 + 8 * v6);
            if (v3 != v6 || v18 >= v19 + 1) {
              *int64_t v18 = *v19;
            }
            uint64_t v20 = *(void *)(a2 + 56);
            unint64_t v21 = v20 + 40 * v3;
            unint64_t v22 = (long long *)(v20 + 40 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v21 >= (unint64_t)v22 + 40))
            {
              long long v10 = *v22;
              long long v11 = v22[1];
              *(void *)(v21 + 32) = *((void *)v22 + 4);
              *(_OWORD *)unint64_t v21 = v10;
              *(_OWORD *)(v21 + 16) = v11;
              int64_t v3 = v6;
            }
          }
        }
        else if (v14 >= v9 || v3 >= (uint64_t)v14)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << a1) - 1;
  }
  *uint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1DA915A34(int64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v45 = a6;
  int v50 = a4;
  uint64_t v51 = a5;
  uint64_t v49 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a2 + 64;
  uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(void *)(a2 + 64 + 8 * (v14 >> 6))) != 0)
  {
    uint64_t v15 = ~v13;
    uint64_t v16 = sub_1DA98C928();
    if ((*(void *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      unint64_t v47 = (v16 + 1) & v15;
      int64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v17 = v9 + 16;
      int64_t v46 = v18;
      uint64_t v52 = *(void *)(v17 + 56);
      uint64_t v48 = v17;
      int64_t v19 = (void (**)(char *, uint64_t))(v17 - 8);
      uint64_t v20 = v15;
      do
      {
        uint64_t v21 = v12;
        int64_t v22 = v52 * v14;
        v46(v11, *(void *)(a2 + 48) + v52 * v14, v8);
        uint64_t v23 = v20;
        sub_1DA7A0410(v50, v49);
        uint64_t v24 = sub_1DA98BFA8();
        (*v19)(v11, v8);
        unint64_t v25 = v24 & v23;
        uint64_t v20 = v23;
        if (a1 >= (uint64_t)v47)
        {
          if (v25 >= v47 && a1 >= (uint64_t)v25)
          {
LABEL_16:
            uint64_t v28 = *(void *)(a2 + 48);
            unint64_t v29 = v28 + v52 * a1;
            unint64_t v30 = v28 + v22 + v52;
            if (v52 * a1 < v22 || v29 >= v30)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v52 * a1 != v22)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v32 = *(void *)(a2 + 56);
            uint64_t v33 = *(void *)(*(void *)(v45(0) - 8) + 72);
            int64_t v34 = v33 * a1;
            unint64_t v35 = v32 + v33 * a1;
            int64_t v36 = v33 * v14;
            unint64_t v37 = v32 + v33 * v14 + v33;
            BOOL v38 = v34 < v36 || v35 >= v37;
            uint64_t v12 = v21;
            if (v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v14;
              uint64_t v20 = v23;
            }
            else
            {
              a1 = v14;
              uint64_t v20 = v23;
              if (v34 != v36)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v14;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v25 >= v47 || a1 >= (uint64_t)v25)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v21;
LABEL_5:
        unint64_t v14 = (v14 + 1) & v20;
      }
      while (((*(void *)(v12 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
    }
    uint64_t v39 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v40 = *v39;
    uint64_t v41 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v39 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v41 = *v39;
    uint64_t v40 = (-1 << a1) - 1;
  }
  uint64_t *v39 = v41 & v40;
  uint64_t v42 = *(void *)(a2 + 16);
  BOOL v43 = __OFSUB__(v42, 1);
  uint64_t v44 = v42 - 1;
  if (v43)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v44;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1DA915D68(int64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = sub_1DA98C928();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      uint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      uint64_t v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_1DA7A0410(&qword_1EBE5A138, &qword_1EBE66B90);
        uint64_t v17 = sub_1DA98BFA8();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            int64_t v22 = (void *)(v21 + 8 * a1);
            uint64_t v23 = (void *)(v21 + 8 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              void *v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1DA916058(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989CD8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = sub_1DA98C928();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v40 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v41 = v13;
      BOOL v38 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v39 = v14;
      uint64_t v37 = v11;
      do
      {
        uint64_t v16 = v8;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v10;
        v39(v7, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_1DA91D680(&qword_1EA8E5CE8, MEMORY[0x1E4F960D8]);
        uint64_t v19 = sub_1DA98BFA8();
        (*v38)(v7, v4);
        unint64_t v20 = v19 & v11;
        if (a1 >= (uint64_t)v40)
        {
          if (v20 >= v40 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(sub_1DA989C38() - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t v26 = v23 + v24 * a1;
            int64_t v27 = v24 * v10;
            unint64_t v28 = v23 + v24 * v10 + v24;
            BOOL v29 = v25 < v27 || v26 >= v28;
            uint64_t v8 = v16;
            if (v29)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              uint64_t v11 = v37;
            }
            else
            {
              a1 = v10;
              uint64_t v11 = v37;
              if (v25 != v27)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v40 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v8 = v16;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    unint64_t v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *unint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1DA9163A0(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1DA98C928();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1DA98C798();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 < v9 || v3 < (uint64_t)v12) {
            goto LABEL_6;
          }
        }
        else if (v12 < v9 && v3 < (uint64_t)v12)
        {
          goto LABEL_6;
        }
        uint64_t v15 = *(void *)(a2 + 48);
        uint64_t v16 = (void *)(v15 + 8 * v3);
        uint64_t v17 = (void *)(v15 + 8 * v6);
        if (v3 != v6 || v16 >= v17 + 1) {
          *uint64_t v16 = *v17;
        }
        uint64_t v18 = *(void *)(a2 + 56);
        uint64_t v19 = *(void *)(*(void *)(type metadata accessor for ExtensionMetadata() - 8) + 72);
        int64_t v20 = v19 * v3;
        unint64_t v21 = v18 + v19 * v3;
        int64_t v22 = v19 * v6;
        unint64_t v23 = v18 + v19 * v6 + v19;
        if (v20 < v22 || v21 >= v23)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v20 == v22) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v25 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v25 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *int64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1DA91658C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1DA98C928();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1DA98CF18();
        swift_bridgeObjectRetain();
        sub_1DA98C108();
        uint64_t v10 = sub_1DA98CF68();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          uint64_t v17 = (long long *)(v15 + 24 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1DA916778(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = (void **)v6;
  uint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_1DA7FDF54(a4, a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a6 & 1) != 0)
  {
LABEL_7:
    BOOL v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      uint64_t result = sub_1DA79EB2C(*(void *)v23, *(void *)(v23 + 8), *(unsigned char *)(v23 + 16));
      *(void *)uint64_t v23 = a1;
      *(void *)(v23 + 8) = a2;
      *(unsigned char *)(v23 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1DA918980();
    goto LABEL_7;
  }
  sub_1DA90D878(v19, a6 & 1);
  unint64_t v25 = sub_1DA7FDF54(a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_15:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  BOOL v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1DA96FAF8(v16, a4, a5, a1, a2, a3, v22);

  return swift_bridgeObjectRetain();
}

_OWORD *sub_1DA9168E0(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1DA7FE080((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1DA919084(&qword_1EBE62B98);
      goto LABEL_7;
    }
    sub_1DA90DBA4(v12, a3 & 1);
    unint64_t v18 = sub_1DA7FE080((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for RBLayerCopyImageKey(0);
    uint64_t result = (_OWORD *)sub_1DA98CEC8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    unint64_t v16 = (_OWORD *)(*(void *)(v15 + 56) + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return sub_1DA7A1930(a1, v16);
  }
LABEL_13:
  sub_1DA96FB4C(v9, a2, a1, v15);

  return a2;
}

uint64_t sub_1DA916A2C(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v11 = (void *)*v3;
  unint64_t v13 = sub_1DA7FE118(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 < v16 || (a3 & 1) == 0)
  {
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_1DA918B5C();
      goto LABEL_7;
    }
    sub_1DA90DEE0(v16, a3 & 1);
    unint64_t v27 = sub_1DA7FE118(a2);
    if ((v17 & 1) == (v28 & 1))
    {
      unint64_t v13 = v27;
      char v19 = *v4;
      if (v17) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1DA91D480((uint64_t)a2, (uint64_t)v10, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      return sub_1DA96FB50(v13, (uint64_t)v10, a1, v19);
    }
LABEL_15:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v19 = *v4;
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = v19[7];
  uint64_t v21 = sub_1DA98BB28();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 40);
  uint64_t v24 = v21;
  uint64_t v25 = v20 + *(void *)(v22 + 72) * v13;

  return v23(v25, a1, v24);
}

_OWORD *sub_1DA916C08(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1DA7FDF54(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1DA918E9C();
      goto LABEL_7;
    }
    sub_1DA90E4B0(v15, a4 & 1);
    unint64_t v21 = sub_1DA7FDF54(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1DA98CEC8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    char v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_1DA7A1930(a1, v19);
  }
LABEL_13:
  sub_1DA96FC40(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_1DA916D5C(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1DA7FE084((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1DA919084(&qword_1EBE62B90);
      goto LABEL_7;
    }
    sub_1DA90E7B0(v12, a3 & 1);
    unint64_t v18 = sub_1DA7FE084((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for FileAttributeKey(0);
    uint64_t result = (_OWORD *)sub_1DA98CEC8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    char v16 = (_OWORD *)(*(void *)(v15 + 56) + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return sub_1DA7A1930(a1, v16);
  }
LABEL_13:
  sub_1DA96FB4C(v9, a2, a1, v15);

  return a2;
}

uint64_t sub_1DA916EA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DA917204(a1, a2, a3, a4, MEMORY[0x1E4F27928], &qword_1EBE58F50, MEMORY[0x1E4F27928], (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DA96FD14);
}

uint64_t sub_1DA916EE0(long long *a1, id *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v11 = (void *)*v3;
  unint64_t v13 = sub_1DA7FE530(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 < v16 || (a3 & 1) == 0)
  {
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_1DA91963C();
      goto LABEL_7;
    }
    sub_1DA90EB0C(v16, a3 & 1);
    unint64_t v22 = sub_1DA7FE530(a2);
    if ((v17 & 1) == (v23 & 1))
    {
      unint64_t v13 = v22;
      char v19 = *v4;
      if (v17) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1DA7A1F58((uint64_t)a2, (uint64_t)v10, &qword_1EBE59EF8);
      return sub_1DA96FD2C(v13, (uint64_t)v10, a1, v19);
    }
LABEL_15:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v19 = *v4;
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = v19[7] + 40 * v13;
  __swift_destroy_boxed_opaque_existential_1(v20);

  return sub_1DA7A19A4(a1, v20);
}

uint64_t sub_1DA91708C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1DA7FDF54(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1DA9198B0();
    goto LABEL_7;
  }
  sub_1DA90EDBC(v15, a4 & 1);
  unint64_t v21 = sub_1DA7FDF54(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1DA96FDE4(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA9171CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DA917204(a1, a2, a3, a4, MEMORY[0x1E4F17BF8], &qword_1EBE59998, MEMORY[0x1E4F17BF8], (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DA96FE2C);
}

uint64_t sub_1DA917204(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(void), uint64_t *a6, uint64_t (*a7)(void), void (*a8)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v11 = v8;
  uint64_t v16 = *v8;
  unint64_t v18 = sub_1DA7FDF54(a2, a3);
  uint64_t v19 = *(void *)(v16 + 16);
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v22 = v17;
  uint64_t v23 = *(void *)(v16 + 24);
  if (v23 < v21 || (a4 & 1) == 0)
  {
    if (v23 >= v21 && (a4 & 1) == 0)
    {
      sub_1DA919A68(a5, a6);
      goto LABEL_7;
    }
    sub_1DA90F0D4(v21, a4 & 1, a5, a6);
    unint64_t v32 = sub_1DA7FDF54(a2, a3);
    if ((v22 & 1) == (v33 & 1))
    {
      unint64_t v18 = v32;
      uint64_t v24 = *v11;
      if (v22) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v24 = *v11;
  if (v22)
  {
LABEL_8:
    uint64_t v25 = *(void *)(v24 + 56);
    uint64_t v26 = a7(0);
    uint64_t v27 = *(void *)(v26 - 8);
    char v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 40);
    uint64_t v29 = v26;
    uint64_t v30 = v25 + *(void *)(v27 + 72) * v18;
    return v28(v30, a1, v29);
  }
LABEL_13:
  a8(v18, a2, a3, a1, v24);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA9173C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v14 = (void *)*v5;
  unint64_t v16 = sub_1DA7FE75C(a4);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    char v22 = *v6;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = (uint64_t *)(v22[7] + 24 * v16);
      sub_1DA79DA70(*v23, v23[1]);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v25 = v28;
      *uint64_t v23 = a1;
      v23[1] = v25;
      v23[2] = v29;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_1DA919D2C();
    goto LABEL_7;
  }
  sub_1DA90F4C0(v19, a5 & 1);
  unint64_t v26 = sub_1DA7FE75C(a4);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_14:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
  unint64_t v16 = v26;
  char v22 = *v6;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  return sub_1DA96FEF8(v16, (uint64_t)v13, a1, v28, v29, v22);
}

uint64_t sub_1DA91759C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1DA7FE84C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1DA91AC78(MEMORY[0x1E4F27990], &qword_1EBE66CF0, &qword_1EA8E6790);
      goto LABEL_7;
    }
    sub_1DA90F920(v17, a3 & 1);
    unint64_t v28 = sub_1DA7FE84C(a2);
    if ((v18 & 1) == (v29 & 1))
    {
      unint64_t v14 = v28;
      char v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1DA96FFD0(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = sub_1DA989698();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  uint64_t v25 = v22;
  uint64_t v26 = v21 + *(void *)(v23 + 72) * v14;

  return v24(v26, a1, v25);
}

uint64_t sub_1DA9177C8(long long *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1DA7FE778(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1DA91A030();
      goto LABEL_7;
    }
    sub_1DA90FE14(v17, a3 & 1);
    unint64_t v23 = sub_1DA7FE778(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      char v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1DA96FFF0(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7] + 40 * v14;
  __swift_destroy_boxed_opaque_existential_1(v21);

  return sub_1DA7A19A4(a1, v21);
}

uint64_t sub_1DA9179A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1DA7FDF54(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for RemoteActivityArchiveBudget();
      return sub_1DA91D548(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for RemoteActivityArchiveBudget);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1DA91A2E0();
    goto LABEL_7;
  }
  sub_1DA910258(v15, a4 & 1);
  unint64_t v22 = sub_1DA7FDF54(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1DA9700B8(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

id sub_1DA917B14(long long *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1DA7FE920((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1DA91A574();
      goto LABEL_7;
    }
    sub_1DA910638(v12, a3 & 1);
    unint64_t v18 = sub_1DA7FE920((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    sub_1DA98C708();
    id result = (id)sub_1DA98CEC8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = v15[7] + 40 * v9;
    __swift_destroy_boxed_opaque_existential_1(v16);
    return (id)sub_1DA7A19A4(a1, v16);
  }
LABEL_13:
  sub_1DA970164(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_1DA917C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1DA7FDF54(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_release();
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1DA91A740();
    goto LABEL_7;
  }
  sub_1DA910918(v17, a5 & 1);
  unint64_t v23 = sub_1DA7FDF54(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1DA9701D0(v14, a3, a4, a1, a2, v20);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA917DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1DA7FDF54(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1DA91A904();
    goto LABEL_7;
  }
  sub_1DA910C24(v17, a5 & 1);
  unint64_t v23 = sub_1DA7FDF54(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1DA9701D0(v14, a3, a4, a1, a2, v20);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA917F04(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1DA7FE964(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1DA91AC78(MEMORY[0x1E4F27928], &qword_1EBE66B90, (uint64_t *)&unk_1EA8E5758);
      goto LABEL_7;
    }
    sub_1DA911264(v17, a3 & 1);
    unint64_t v28 = sub_1DA7FE964(a2);
    if ((v18 & 1) == (v29 & 1))
    {
      unint64_t v14 = v28;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1DA970220(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = sub_1DA989638();
  uint64_t v23 = *(void *)(v22 - 8);
  char v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  uint64_t v25 = v22;
  uint64_t v26 = v21 + *(void *)(v23 + 72) * v14;

  return v24(v26, a1, v25);
}

void sub_1DA918130(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1DA7FE964(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1DA91B028();
    goto LABEL_7;
  }
  sub_1DA911758(v17, a3 & 1);
  unint64_t v22 = sub_1DA7FE964(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_1DA98CEC8();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1DA97033C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1DA9182DC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1DA989698();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1DA7FE980(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for RemoteActivitySubscription(0);
      return sub_1DA91D548(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, type metadata accessor for RemoteActivitySubscription);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1DA91B2C4();
    goto LABEL_7;
  }
  sub_1DA911B70(v17, a3 & 1);
  unint64_t v24 = sub_1DA7FE980(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1DA9703F8(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1DA9184B0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1DA989CD8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1DA7FEA54(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1DA91B604();
      goto LABEL_7;
    }
    sub_1DA912088(v17, a3 & 1);
    unint64_t v28 = sub_1DA7FEA54(a2);
    if ((v18 & 1) == (v29 & 1))
    {
      unint64_t v14 = v28;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1DA9704E8(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = sub_1DA989C38();
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  uint64_t v25 = v22;
  uint64_t v26 = v21 + *(void *)(v23 + 72) * v14;

  return v24(v26, a1, v25);
}

id sub_1DA9186B4(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1DA7FE920((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      uint64_t v17 = type metadata accessor for ExtensionMetadata();
      return (id)sub_1DA91D548(a1, v16 + *(void *)(*(void *)(v17 - 8) + 72) * v9, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1DA91B9AC();
    goto LABEL_7;
  }
  sub_1DA912584(v12, a3 & 1);
  unint64_t v19 = sub_1DA7FE920((uint64_t)a2);
  if ((v13 & 1) != (v20 & 1))
  {
LABEL_15:
    sub_1DA98C708();
    id result = (id)sub_1DA98CEC8();
    __break(1u);
    return result;
  }
  unint64_t v9 = v19;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1DA9705DC(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_1DA918810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = (void **)v6;
  uint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_1DA7FDF54(a4, a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a6 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = (uint64_t *)(v22[7] + 24 * v16);
      sub_1DA79DA70(*v23, v23[1]);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v23 = a1;
      v23[1] = a2;
      v23[2] = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1DA91BC2C();
    goto LABEL_7;
  }
  sub_1DA91292C(v19, a6 & 1);
  unint64_t v25 = sub_1DA7FDF54(a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_15:
    uint64_t result = sub_1DA98CEC8();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  uint64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1DA970684(v16, a4, a5, a1, a2, a3, v22);

  return swift_bridgeObjectRetain();
}

void *sub_1DA918980()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE59110);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA98CBE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    unint64_t v23 = *(void *)(v21 + 8);
    unint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    char v25 = *(unsigned char *)(v21 + 16);
    *unint64_t v24 = v19;
    v24[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(void *)(v26 + 8) = v23;
    *(unsigned char *)(v26 + 16) = v25;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1DA7A1AA8(v22, v23, v25);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA918B5C()
{
  uint64_t v1 = sub_1DA98BB28();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  uint64_t v29 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64030);
  unint64_t v24 = v0;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_1DA98CBE8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *unint64_t v24 = v10;
    return result;
  }
  uint64_t result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    uint64_t result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v8 + 64);
  uint64_t v25 = v8 + 64;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  uint64_t v28 = v2 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v29 + 72) * v18;
    sub_1DA91D480(*(void *)(v8 + 48) + v19, (uint64_t)v7, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    unint64_t v20 = *(void *)(v2 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v8 + 56) + v20, v1);
    sub_1DA91D5B0((uint64_t)v7, *(void *)(v10 + 48) + v19, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v10 + 56) + v20, v4, v1);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1DA918E9C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62B78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA98CBE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1DA800210(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_1DA7A1930(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1DA919084(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1DA98CBE8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v7 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t v19 = 32 * v16;
    sub_1DA800210(*(void *)(v3 + 56) + 32 * v16, (uint64_t)v23);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    sub_1DA7A1930(v23, (_OWORD *)(*(void *)(v5 + 56) + v19));
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v7 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA919244()
{
  return sub_1DA919A68(MEMORY[0x1E4F27928], &qword_1EBE58F50);
}

void *sub_1DA919264()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A7C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA98CBE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = v15 << 6;
    unint64_t v17 = *(void *)(v2 + 48) + (v15 << 6);
    uint64_t v19 = *(void **)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v21 = *(void *)(v17 + 16);
    uint64_t v20 = *(void *)(v17 + 24);
    uint64_t v22 = *(void *)(v17 + 32);
    char v23 = *(unsigned char *)(v17 + 40);
    uint64_t v24 = *(void *)(v17 + 48);
    LOBYTE(v17) = *(unsigned char *)(v17 + 56);
    uint64_t v25 = 8 * v15;
    uint64_t v26 = *(void *)(*(void *)(v2 + 56) + v25);
    unint64_t v27 = *(void *)(v4 + 48) + v16;
    *(void *)unint64_t v27 = v19;
    *(void *)(v27 + 8) = v18;
    *(void *)(v27 + 16) = v21;
    *(void *)(v27 + 24) = v20;
    *(void *)(v27 + 32) = v22;
    *(unsigned char *)(v27 + 40) = v23;
    *(void *)(v27 + 48) = v24;
    *(unsigned char *)(v27 + 56) = v17;
    *(void *)(*(void *)(v4 + 56) + v25) = v26;
    swift_bridgeObjectRetain();
    swift_retain();
    id v28 = v19;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA919458()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A898);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA98CBE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 40 * v15;
    uint64_t v18 = *(void **)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v21 = *(void *)(v17 + 16);
    uint64_t v20 = *(void *)(v17 + 24);
    char v22 = *(unsigned char *)(v17 + 32);
    uint64_t v23 = 8 * v15;
    uint64_t v24 = *(void *)(*(void *)(v2 + 56) + v23);
    LOBYTE(v17) = *(unsigned char *)(v17 + 33);
    uint64_t v25 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v25 = v18;
    *(void *)(v25 + 8) = v19;
    *(void *)(v25 + 16) = v21;
    *(void *)(v25 + 24) = v20;
    *(unsigned char *)(v25 + 32) = v22;
    *(unsigned char *)(v25 + 33) = v17;
    *(void *)(*(void *)(v4 + 56) + v23) = v24;
    id v26 = v18;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA91963C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A030);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1DA98CBE8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v24 = v1;
  id result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v16) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v21);
    ++v12;
    if (!v22)
    {
      int64_t v12 = v21 + 1;
      if (v21 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v10 + 8 * v12);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_1DA7A1F58(*(void *)(v6 + 48) + v19, (uint64_t)v5, &qword_1EBE59EF8);
    uint64_t v20 = 40 * v18;
    sub_1DA7A1A44(*(void *)(v6 + 56) + v20, (uint64_t)v25);
    sub_1DA91D618((uint64_t)v5, *(void *)(v8 + 48) + v19);
    id result = (void *)sub_1DA7A19A4(v25, *(void *)(v8 + 56) + v20);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v10 + 8 * v23);
  if (v22)
  {
    int64_t v12 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v12);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DA9198B0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A038);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA98CBE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA919A68(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v39 = a1(0);
  uint64_t v4 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v6 = (char *)&v33 - v5;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  BOOL v34 = v2;
  uint64_t v7 = *v2;
  uint64_t v8 = sub_1DA98CBE8();
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t v40 = v8;
  if (!v9)
  {
    id result = (void *)swift_release();
    uint64_t v32 = v40;
    int64_t v31 = v34;
LABEL_28:
    *int64_t v31 = v32;
    return result;
  }
  uint64_t v10 = v8;
  id result = (void *)(v8 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    uint64_t v10 = v40;
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 64);
  uint64_t v35 = v7 + 64;
  int64_t v36 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v37 = v4 + 32;
  uint64_t v38 = v4 + 16;
  uint64_t v18 = v39;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      int64_t v14 = v28 + 1;
      if (v28 + 1 >= v36) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v14);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v29 - 1) & v29;
    unint64_t v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    uint64_t v21 = 16 * v20;
    int64_t v22 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v20);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    unint64_t v25 = *(void *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 56) + v25, v18);
    uint64_t v26 = v40;
    int64_t v27 = (void *)(*(void *)(v40 + 48) + v21);
    *int64_t v27 = v23;
    v27[1] = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v26 + 56) + v25, v6, v18);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    id result = (void *)swift_release();
    int64_t v31 = v34;
    uint64_t v32 = v40;
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v30);
  if (v29)
  {
    int64_t v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v14 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v14);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

char *sub_1DA919D2C()
{
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v43 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v40 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A730);
  uint64_t v35 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA98CBE8();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v44 = v3;
  if (!v4)
  {
    id result = (char *)swift_release();
    uint64_t v33 = v44;
    uint64_t v32 = v35;
LABEL_25:
    uint64_t *v32 = v33;
    return result;
  }
  uint64_t v5 = v3;
  id result = (char *)(v3 + 64);
  uint64_t v7 = (char *)(v2 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  uint64_t v36 = v2 + 64;
  if (v5 != v2 || result >= &v7[8 * v8])
  {
    id result = (char *)memmove(result, v7, 8 * v8);
    uint64_t v5 = v44;
  }
  int64_t v9 = 0;
  *(void *)(v5 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v42 = v2;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  uint64_t v13 = v44;
  uint64_t v39 = v43 + 16;
  int64_t v37 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v38 = v43 + 32;
  uint64_t v14 = v43;
  uint64_t v15 = v40;
  uint64_t v16 = v41;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v45 = v9;
      unint64_t v18 = v17 | (v9 << 6);
      uint64_t v19 = v42;
      goto LABEL_9;
    }
    int64_t v28 = v9 + 1;
    uint64_t v19 = v42;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 >= v37) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v36 + 8 * v28);
    int64_t v30 = v9 + 1;
    if (!v29)
    {
      int64_t v30 = v28 + 1;
      if (v28 + 1 >= v37) {
        goto LABEL_23;
      }
      unint64_t v29 = *(void *)(v36 + 8 * v30);
      if (!v29) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v29 - 1) & v29;
    int64_t v45 = v30;
    unint64_t v18 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_9:
    unint64_t v20 = *(void *)(v14 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(void *)(v19 + 48) + v20, v16);
    uint64_t v21 = *(void *)(v19 + 56);
    uint64_t v22 = 24 * v18;
    uint64_t v23 = (uint64_t *)(v21 + 24 * v18);
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    uint64_t v26 = v23[2];
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v13 + 48) + v20, v15, v16);
    int64_t v27 = (uint64_t *)(*(void *)(v13 + 56) + v22);
    *int64_t v27 = v24;
    v27[1] = v25;
    _OWORD v27[2] = v26;
    sub_1DA79ED98(v24, v25);
    id result = (char *)swift_bridgeObjectRetain();
    int64_t v9 = v45;
  }
  int64_t v31 = v28 + 2;
  if (v31 >= v37)
  {
LABEL_23:
    id result = (char *)swift_release();
    uint64_t v32 = v35;
    uint64_t v33 = v44;
    goto LABEL_25;
  }
  unint64_t v29 = *(void *)(v36 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v37) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v36 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DA91A030()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE5A738);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1DA98CBE8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v23 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v24 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v25 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 40 * v16;
    sub_1DA7A1A44(*(void *)(v6 + 56) + v18, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    id result = (void *)sub_1DA7A19A4(v27, *(void *)(v8 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DA91A2E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RemoteActivityArchiveBudget();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6750);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DA98CBE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1DA91D480(*(void *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for RemoteActivityArchiveBudget);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    void *v22 = v19;
    v22[1] = v20;
    sub_1DA91D5B0((uint64_t)v4, *(void *)(v7 + 56) + v21, (uint64_t (*)(void))type metadata accessor for RemoteActivityArchiveBudget);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1DA91A574()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A760);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA98CBE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    sub_1DA7A1A44(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_1DA7A19A4(v22, *(void *)(v4 + 56) + v18);
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA91A740()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6798);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA98CBE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA91A904()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5768);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA98CBE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA91AAC0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE58F60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA98CBE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA91AC78(uint64_t (*a1)(void), uint64_t *a2, uint64_t *a3)
{
  uint64_t v47 = a1(0);
  uint64_t v50 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  int64_t v46 = (char *)&v37 - v6;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v49 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v44 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  int64_t v37 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1DA98CBE8();
  uint64_t v10 = *(void *)(v8 + 16);
  uint64_t v51 = v9;
  if (!v10)
  {
    id result = (void *)swift_release();
    uint64_t v36 = v51;
    uint64_t v35 = v37;
LABEL_25:
    *uint64_t v35 = v36;
    return result;
  }
  uint64_t v11 = v9;
  id result = (void *)(v9 + 64);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    uint64_t v11 = v51;
  }
  int64_t v14 = 0;
  *(void *)(v11 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  uint64_t v48 = v8;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  uint64_t v38 = v8 + 64;
  int64_t v39 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v18 = v50;
  uint64_t v19 = v49;
  uint64_t v42 = v50 + 16;
  uint64_t v43 = v49 + 16;
  uint64_t v40 = v50 + 32;
  uint64_t v41 = v49 + 32;
  uint64_t v20 = v44;
  uint64_t v21 = v45;
  uint64_t v22 = v47;
  uint64_t v23 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v24 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      int64_t v52 = v14;
      unint64_t v25 = v24 | (v14 << 6);
      uint64_t v26 = v48;
      goto LABEL_9;
    }
    int64_t v31 = v14 + 1;
    uint64_t v26 = v48;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v31 >= v39) {
      goto LABEL_23;
    }
    unint64_t v32 = *(void *)(v38 + 8 * v31);
    int64_t v33 = v14 + 1;
    if (!v32)
    {
      int64_t v33 = v31 + 1;
      if (v31 + 1 >= v39) {
        goto LABEL_23;
      }
      unint64_t v32 = *(void *)(v38 + 8 * v33);
      if (!v32) {
        break;
      }
    }
LABEL_22:
    unint64_t v17 = (v32 - 1) & v32;
    int64_t v52 = v33;
    unint64_t v25 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_9:
    unint64_t v27 = *(void *)(v19 + 72) * v25;
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v20, *(void *)(v26 + 48) + v27, v21);
    unint64_t v28 = *(void *)(v18 + 72) * v25;
    unint64_t v29 = *(void *)(v26 + 56) + v28;
    int64_t v30 = v46;
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v46, v29, v22);
    (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(*(void *)(v23 + 48) + v27, v20, v21);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v18 + 32))(*(void *)(v23 + 56) + v28, v30, v22);
    int64_t v14 = v52;
  }
  int64_t v34 = v31 + 2;
  if (v34 >= v39)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v35 = v37;
    uint64_t v36 = v51;
    goto LABEL_25;
  }
  unint64_t v32 = *(void *)(v38 + 8 * v34);
  if (v32)
  {
    int64_t v33 = v34;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v33 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v33 >= v39) {
      goto LABEL_23;
    }
    unint64_t v32 = *(void *)(v38 + 8 * v33);
    ++v34;
    if (v32) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1DA91B028()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5748);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DA98CBE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1DA91B2C4()
{
  uint64_t v1 = type metadata accessor for RemoteActivitySubscription(0);
  uint64_t v29 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DA989698();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6788);
  uint64_t v24 = v0;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_1DA98CBE8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v24 = v10;
    return result;
  }
  id result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v8 + 64);
  uint64_t v25 = v8 + 64;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v27 = v5 + 32;
  uint64_t v28 = v5 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v19, v4);
    unint64_t v20 = *(void *)(v29 + 72) * v18;
    sub_1DA91D480(*(void *)(v8 + 56) + v20, (uint64_t)v3, type metadata accessor for RemoteActivitySubscription);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v10 + 48) + v19, v7, v4);
    id result = (void *)sub_1DA91D5B0((uint64_t)v3, *(void *)(v10 + 56) + v20, type metadata accessor for RemoteActivitySubscription);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1DA91B604()
{
  uint64_t v42 = sub_1DA989C38();
  uint64_t v45 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1DA989CD8();
  uint64_t v44 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  int64_t v39 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6780);
  unint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1DA98CBE8();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v46 = v4;
  if (!v5)
  {
    id result = (void *)swift_release();
    uint64_t v31 = v46;
    int64_t v30 = v32;
LABEL_25:
    *int64_t v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  id result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v46;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  uint64_t v43 = v3;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v45;
  uint64_t v14 = v44;
  uint64_t v37 = v45 + 16;
  uint64_t v38 = v44 + 16;
  uint64_t v35 = v45 + 32;
  uint64_t v36 = v44 + 32;
  uint64_t v15 = v39;
  uint64_t v16 = v40;
  uint64_t v17 = v42;
  uint64_t v18 = v46;
  while (1)
  {
    if (v12)
    {
      unint64_t v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v47 = v9;
      unint64_t v20 = v19 | (v9 << 6);
      uint64_t v21 = v43;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v21 = v43;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    int64_t v28 = v9 + 1;
    if (!v27)
    {
      int64_t v28 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v28);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    int64_t v47 = v28;
    unint64_t v20 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v14 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(void *)(v21 + 48) + v22, v16);
    unint64_t v23 = *(void *)(v13 + 72) * v20;
    unint64_t v24 = *(void *)(v21 + 56) + v23;
    uint64_t v25 = v41;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v41, v24, v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v18 + 48) + v22, v15, v16);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v18 + 56) + v23, v25, v17);
    int64_t v9 = v47;
  }
  int64_t v29 = v26 + 2;
  if (v29 >= v34)
  {
LABEL_23:
    id result = (void *)swift_release();
    int64_t v30 = v32;
    uint64_t v31 = v46;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1DA91B9AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ExtensionMetadata();
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A758);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DA98CBE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (id)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v24 = v1;
  id result = (id)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 8 * v17;
    unint64_t v19 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v20 = *(void *)(v25 + 72) * v17;
    sub_1DA91D480(*(void *)(v5 + 56) + v20, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
    *(void *)(*(void *)(v7 + 48) + v18) = v19;
    sub_1DA91D5B0((uint64_t)v4, *(void *)(v7 + 56) + v20, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DA91BC2C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59688);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA98CBE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = v18[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v17 + v20);
    unint64_t v22 = *(void *)(v17 + v20 + 8);
    uint64_t v23 = *(void *)(v17 + v20 + 16);
    unint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v24 = *v18;
    v24[1] = v19;
    uint64_t v25 = (uint64_t *)(*(void *)(v4 + 56) + v20);
    *uint64_t v25 = v21;
    v25[1] = v22;
    long long v25[2] = v23;
    swift_bridgeObjectRetain();
    sub_1DA79ED98(v21, v22);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableStore()
{
  return self;
}

void *sub_1DA91BE30()
{
  type metadata accessor for ChronoMetadataStore.MutableExtensionStore();
  uint64_t v1 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[2] = v1;
  type metadata accessor for ChronoMetadataStore.MutableRemoteExtensionStore();
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[3] = v2;
  type metadata accessor for ChronoMetadataStore.MutableConfiguredWidgetStore();
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[4] = v3;
  type metadata accessor for ChronoMetadataStore.MutableHostConfigurationStore();
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[5] = v4;
  type metadata accessor for ChronoMetadataStore.MutableSnapshotConfigurationStore();
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[6] = v5;
  type metadata accessor for ChronoMetadataStore.MutableStateReplicatorDeviceMetadataStore();
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[7] = v6;
  type metadata accessor for ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore();
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[8] = v7;
  type metadata accessor for ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[9] = v8;
  type metadata accessor for ChronoMetadataStore.MutableRemoteActivitySubscriptionStore();
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[10] = v9;
  type metadata accessor for ChronoMetadataStore.MutableRemoteActivityArchiveBudgetStore();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[11] = v10;
  type metadata accessor for ChronoMetadataStore.MutablePushSubcriptionStore();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[12] = v11;
  type metadata accessor for ChronoMetadataStore.MutablePublicTokenStore();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[13] = v12;
  type metadata accessor for ChronoMetadataStore.MutablePushTokenStore();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[14] = v13;
  return v0;
}

uint64_t sub_1DA91C0AC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = *(void **)(a3 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_initStackObject();
  uint64_t v9 = sub_1DA91BE30();
  uint64_t v10 = *(void *)(a3 + 128);
  uint64_t v11 = *(os_unfair_lock_s **)(v10 + 16);
  id v12 = a4;
  swift_retain();
  os_unfair_lock_lock(v11);
  swift_retain();
  sub_1DA7C2D1C(a1, a2, v8, (uint64_t)v9, v12);

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  swift_release();
  sub_1DA8FB09C();
  return swift_release();
}

uint64_t sub_1DA91C188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA91C3BC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t))sub_1DA7C4BDC);
}

uint64_t sub_1DA91C1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ExtensionMetadata();
  MEMORY[0x1F4188790](v16);
  uint64_t v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void *)(a2 + 16);
  if (v10)
  {
    uint64_t v11 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    id v12 = (void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v13 = *(void *)(v7 + 72);
    do
    {
      sub_1DA91D480(v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
      sub_1DA91D480((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
      (*v12)(v6, 0, 1, v16);
      sub_1DA8FE910((uint64_t)v6, v9);
      sub_1DA7A1AE0((uint64_t)v6, (uint64_t *)&unk_1EBE595D8);
      sub_1DA91D4E8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
      if (v2) {
        break;
      }
      v11 += v13;
      --v10;
    }
    while (v10);
  }
  return 1;
}

uint64_t sub_1DA91C390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA91C3BC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t))sub_1DA7C53B8);
}

uint64_t sub_1DA91C3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, void *, uint64_t))
{
  uint64_t v10 = *(void *)(a3 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_initStackObject();
  uint64_t v11 = sub_1DA91BE30();
  uint64_t v12 = *(void *)(a3 + 128);
  uint64_t v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_retain();
  a5(a1, a2, v10, v11, a4);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  sub_1DA8FB09C();
  return swift_release();
}

uint64_t type metadata accessor for ChronoMetadataStore.ExtensionStore()
{
  return self;
}

uint64_t type metadata accessor for ChronoMetadataStore.RemoteExtensionStore()
{
  return self;
}

uint64_t type metadata accessor for ChronoMetadataStore.ConfiguredWidgetStore()
{
  return self;
}

uint64_t type metadata accessor for ChronoMetadataStore.SnapshotConfigurationStore()
{
  return self;
}

uint64_t type metadata accessor for ChronoMetadataStore.StateReplicatorDeviceMetadataStore()
{
  return self;
}

uint64_t type metadata accessor for ChronoMetadataStore.StateReplicatorRecordMetadataStore()
{
  return self;
}

uint64_t type metadata accessor for ChronoMetadataStore.StateReplicatorPairingRelationshipStore()
{
  return self;
}

uint64_t type metadata accessor for ChronoMetadataStore.RemoteActivitySubscriptionStore()
{
  return self;
}

uint64_t sub_1DA91C5C4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ExtensionMetadata();
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6) {
    return v7;
  }
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1DA7F7BDC(0, v6, 0);
  uint64_t v7 = v32;
  uint64_t result = sub_1DA80F8C8(a1);
  uint64_t v10 = result;
  uint64_t v11 = 0;
  uint64_t v12 = a1 + 64;
  char v13 = *(unsigned char *)(a1 + 32);
  uint64_t v26 = a1 + 88;
  int64_t v27 = v6;
  uint64_t v28 = a1;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << v13)
  {
    unint64_t v16 = (unint64_t)v10 >> 6;
    if ((*(void *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_28;
    }
    if (*(_DWORD *)(a1 + 36) != v9) {
      goto LABEL_29;
    }
    uint64_t v31 = v11;
    uint64_t v17 = v9;
    uint64_t v18 = swift_bridgeObjectRetain();
    sub_1DA8FC33C(v18, (uint64_t)v5);
    if (v1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v7;
    }
    uint64_t v30 = 0;
    swift_bridgeObjectRelease();
    uint64_t v32 = v7;
    unint64_t v20 = *(void *)(v7 + 16);
    unint64_t v19 = *(void *)(v7 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_1DA7F7BDC(v19 > 1, v20 + 1, 1);
      uint64_t v7 = v32;
    }
    *(void *)(v7 + 16) = v20 + 1;
    uint64_t result = sub_1DA91D5B0((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v20, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
    a1 = v28;
    char v13 = *(unsigned char *)(v28 + 32);
    unint64_t v14 = 1 << v13;
    if (v10 >= 1 << v13) {
      goto LABEL_30;
    }
    uint64_t v21 = *(void *)(v12 + 8 * v16);
    if ((v21 & (1 << v10)) == 0) {
      goto LABEL_31;
    }
    uint64_t v9 = v17;
    if (*(_DWORD *)(v28 + 36) != v17) {
      goto LABEL_32;
    }
    unint64_t v22 = v21 & (-2 << (v10 & 0x3F));
    if (v22)
    {
      unint64_t v14 = __clz(__rbit64(v22)) | v10 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v1 = v30;
      int64_t v15 = v27;
    }
    else
    {
      unint64_t v23 = v16 + 1;
      unint64_t v24 = (v14 + 63) >> 6;
      uint64_t v1 = v30;
      int64_t v15 = v27;
      if (v16 + 1 < v24)
      {
        unint64_t v25 = *(void *)(v12 + 8 * v23);
        if (!v25)
        {
          unint64_t v23 = v16 + 2;
          if (v16 + 2 >= v24) {
            goto LABEL_4;
          }
          unint64_t v25 = *(void *)(v12 + 8 * v23);
          if (!v25)
          {
            while (v24 - 3 != v16)
            {
              unint64_t v25 = *(void *)(v26 + 8 * v16++);
              if (v25)
              {
                unint64_t v23 = v16 + 2;
                goto LABEL_18;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_18:
        unint64_t v14 = __clz(__rbit64(v25)) + (v23 << 6);
      }
    }
LABEL_4:
    uint64_t v11 = v31 + 1;
    uint64_t v10 = v14;
    if (v31 + 1 == v15) {
      return v7;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ChronoMetadataStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.__allocating_init(storage:corruptionHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t method lookup function for ChronoMetadataStore.MutableStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutableStore);
}

uint64_t type metadata accessor for ChronoMetadataStore.DatabaseAccessor()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.DatabaseAccessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.DatabaseAccessor);
}

uint64_t method lookup function for ChronoMetadataStore.ExtensionStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.ExtensionStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.ExtensionStore.allExtensions()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ChronoMetadataStore.ExtensionStore.metadata(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableExtensionStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.MutableExtensionStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutableExtensionStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableExtensionStore.set(metadata:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableExtensionStore.set(metadata:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableExtensionStore.removeAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t method lookup function for ChronoMetadataStore.ConfiguredWidgetStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.ConfiguredWidgetStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.ConfiguredWidgetStore.startDatesForWidgetIDs()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableConfiguredWidgetStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.MutableConfiguredWidgetStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutableConfiguredWidgetStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableConfiguredWidgetStore.addIfNotPresent(identity:widgetID:date:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableConfiguredWidgetStore.delete(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableConfiguredWidgetStore.deleteAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t method lookup function for ChronoMetadataStore.SnapshotConfigurationStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.SnapshotConfigurationStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.SnapshotConfigurationStore.allCreationDates()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ChronoMetadataStore.SnapshotConfigurationStore.allConfigurations()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableSnapshotConfigurationStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.MutableSnapshotConfigurationStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutableSnapshotConfigurationStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableSnapshotConfigurationStore.set(configuration:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableSnapshotConfigurationStore.delete(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t method lookup function for ChronoMetadataStore.RemoteActivitySubscriptionStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.RemoteActivitySubscriptionStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.RemoteActivitySubscriptionStore.allSubscriptions()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableRemoteActivitySubscriptionStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.MutableRemoteActivitySubscriptionStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutableRemoteActivitySubscriptionStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableRemoteActivitySubscriptionStore.update(subscription:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableRemoteActivitySubscriptionStore.delete(subscriptionID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t method lookup function for ChronoMetadataStore.StateReplicatorDeviceMetadataStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.StateReplicatorDeviceMetadataStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.StateReplicatorDeviceMetadataStore.localDeviceID()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableStateReplicatorDeviceMetadataStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.MutableStateReplicatorDeviceMetadataStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutableStateReplicatorDeviceMetadataStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorDeviceMetadataStore.set(localDeviceID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorDeviceMetadataStore.remove()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t method lookup function for ChronoMetadataStore.StateReplicatorRecordMetadataStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.StateReplicatorRecordMetadataStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.StateReplicatorRecordMetadataStore.recordMetadata()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore.update(recordMetadata:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore.remove(recordID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore.removeAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t method lookup function for ChronoMetadataStore.StateReplicatorPairingRelationshipStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.StateReplicatorPairingRelationshipStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.StateReplicatorPairingRelationshipStore.remoteDevices()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore.update(remoteDevice:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore.remove(remoteDeviceID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore.removeAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t method lookup function for ChronoMetadataStore.RemoteExtensionStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.RemoteExtensionStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.RemoteExtensionStore.allExtensions()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableRemoteExtensionStore()
{
  return self;
}

uint64_t sub_1DA91D228(uint64_t a1)
{
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v15 = 16 * i;
    unint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + v15);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    unint64_t v19 = (uint64_t *)(*(void *)(a1 + 56) + v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    v23[0] = v17;
    v23[1] = v18;
    _OWORD v23[2] = v20;
    v23[3] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DA8FAE44(v23);
    if (v1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    if (!v13)
    {
      int64_t v14 = v9 + 1;
      if (v9 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v3 + 8 * v14);
      if (v13) {
        goto LABEL_14;
      }
      int64_t v14 = v9 + 2;
      if (v9 + 2 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v3 + 8 * v14);
      if (v13) {
        goto LABEL_14;
      }
      int64_t v14 = v9 + 3;
      if (v9 + 3 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v3 + 8 * v14);
      if (v13)
      {
LABEL_14:
        int64_t v9 = v14;
        goto LABEL_15;
      }
      int64_t v22 = v9 + 4;
      if (v9 + 4 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v3 + 8 * v22);
      v9 += 4;
      if (!v13) {
        break;
      }
    }
LABEL_15:
    unint64_t v6 = (v13 - 1) & v13;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    ++v22;
    if (v13) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1DA91D400(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

uint64_t sub_1DA91D410(uint64_t *a1, uint64_t a2)
{
  return sub_1DA90B048(a1, v2[2], v2[3], v2[4], a2, MEMORY[0x1E4F96130]);
}

uint64_t sub_1DA91D448(uint64_t *a1, uint64_t a2)
{
  return sub_1DA90B048(a1, v2[2], v2[3], v2[4], a2, MEMORY[0x1E4F96100]);
}

uint64_t sub_1DA91D480(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA91D4E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DA91D548(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA91D5B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA91D618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA91D680(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DA91D6C8(uint64_t a1)
{
  v15[0] = a1;
  uint64_t v1 = sub_1DA989748();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  unint64_t v5 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](27);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  id v6 = objc_allocWithZone(MEMORY[0x1E4F28D48]);
  id v7 = objc_msgSend(v6, sel_init, v15[0]);
  sub_1DA989738();
  uint64_t v8 = (void *)sub_1DA989718();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v7, sel_setTimeZone_, v8);

  uint64_t v9 = v15[1];
  uint64_t v10 = sub_1DA7BEF9C(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
  }
  else
  {
    v16[0] = sub_1DA79C48C(MEMORY[0x1E4FBC860]);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = 0;
      do
      {
        uint64_t v13 = *(void *)(v10 + 8 * v12++ + 32);
        uint64_t v17 = v13;
        swift_bridgeObjectRetain();
        sub_1DA8FA554(&v17, v7, v16);
        swift_bridgeObjectRelease();
      }
      while (v11 != v12);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_retain();
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_1DA91D228(v14);
    swift_bridgeObjectRelease_n();

    swift_release();
  }
}

uint64_t sub_1DA91D9D0(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1DA98CE58() & 1;
  }
}

unint64_t sub_1DA91DA28()
{
  unint64_t result = qword_1EA8E67A0;
  if (!qword_1EA8E67A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E67A0);
  }
  return result;
}

uint64_t sub_1DA91DA7C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA91DAB4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unsigned char *storeEnumTagSinglePayload for StateReplicatorEnumValues.DestinationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA91DB90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateReplicatorEnumValues.DestinationType()
{
  return &type metadata for StateReplicatorEnumValues.DestinationType;
}

ValueMetadata *type metadata accessor for StateReplicatorEnumValues()
{
  return &type metadata for StateReplicatorEnumValues;
}

unsigned char *storeEnumTagSinglePayload for StateReplicatorEnumValues.RelationshipState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA91DCA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateReplicatorEnumValues.RelationshipState()
{
  return &type metadata for StateReplicatorEnumValues.RelationshipState;
}

unint64_t sub_1DA91DCE0()
{
  unint64_t result = qword_1EA8E67A8;
  if (!qword_1EA8E67A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E67A8);
  }
  return result;
}

unint64_t sub_1DA91DD38()
{
  unint64_t result = qword_1EA8E67B0;
  if (!qword_1EA8E67B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E67B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeatureFlags.Widgets(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeatureFlags.Widgets(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA91DF58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlags.Widgets()
{
  return &type metadata for FeatureFlags.Widgets;
}

unsigned char *storeEnumTagSinglePayload for FeatureFlags.SpringBoard(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA91E05CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlags.SpringBoard()
{
  return &type metadata for FeatureFlags.SpringBoard;
}

unint64_t sub_1DA91E098()
{
  unint64_t result = qword_1EA8E67B8;
  if (!qword_1EA8E67B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E67B8);
  }
  return result;
}

const char *sub_1DA91E0EC(char a1)
{
  unint64_t result = "BackgroundAbsentCheck";
  switch(a1)
  {
    case 1:
      unint64_t result = "AnimatedTransition";
      break;
    case 2:
      unint64_t result = "InteractiveWidgets";
      break;
    case 3:
      unint64_t result = "PrefetchRemoteSnapshots2";
      break;
    case 4:
      unint64_t result = "InteractiveSystemSmall";
      break;
    case 5:
      unint64_t result = "FirstPartyContentMargins";
      break;
    case 6:
      unint64_t result = "InteractiveWatchOS";
      break;
    case 7:
      unint64_t result = "AnimatedTransitionWatchOS";
      break;
    case 8:
      unint64_t result = "RelevanceDuringTimelineReload";
      break;
    case 9:
      unint64_t result = "ContextualWidgets";
      break;
    case 10:
      unint64_t result = "ControlsBuildAndRunHack";
      break;
    case 11:
      unint64_t result = "FFGatedWidgets";
      break;
    case 12:
      unint64_t result = "CorrectDominoContentMargins";
      break;
    default:
      return result;
  }
  return result;
}

const char *sub_1DA91E22C()
{
  return "Widgets";
}

const char *sub_1DA91E240()
{
  return sub_1DA91E0EC(*v0);
}

unint64_t sub_1DA91E264()
{
  unint64_t result = qword_1EA8E67C0;
  if (!qword_1EA8E67C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E67C0);
  }
  return result;
}

const char *sub_1DA91E2B8()
{
  return "SpringBoard";
}

const char *sub_1DA91E2CC()
{
  unint64_t result = "Papaya";
  switch(*v0)
  {
    case 1:
      unint64_t result = "Autobahn";
      break;
    case 2:
      unint64_t result = "Maglev";
      break;
    case 3:
      unint64_t result = "Domino";
      break;
    default:
      return result;
  }
  return result;
}

uint64_t ActivityArchivedViewCollection.ViewEntry.containsPrivacyRedactions.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E67C8);
  MEMORY[0x1F4188790](v0 - 8);
  int v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA98BCE8();
  uint64_t v3 = sub_1DA98BC88();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v2, &qword_1EA8E67C8);
    char v5 = 0;
  }
  else
  {
    char v5 = sub_1DA98BC78();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5 & 1;
}

uint64_t ActivityArchivedViewCollection.ViewEntry.entryData.getter()
{
  return 0;
}

uint64_t sub_1DA91E464@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA98BCC8();
  *a1 = result;
  return result;
}

uint64_t sub_1DA91E48C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DA91E500()
{
  return 0;
}

uint64_t sub_1DA91E50C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E67C8);
  MEMORY[0x1F4188790](v0 - 8);
  int v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA98BCE8();
  uint64_t v3 = sub_1DA98BC88();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v2, &qword_1EA8E67C8);
    char v5 = 0;
  }
  else
  {
    char v5 = sub_1DA98BC78();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5 & 1;
}

uint64_t sub_1DA91E624()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC9ChronoKit36ActivityPreviewHostingViewController15StateController__stateIndex;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E62D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA91E6C8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ActivityPreviewHostingViewController.StateController(0);
  uint64_t result = sub_1DA989FD8();
  *a1 = result;
  return result;
}

void sub_1DA91E708()
{
  qword_1EA8ED7B8 = 0x4020000000000000;
}

double sub_1DA91E718()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DA91E760(double a1, double a2)
{
  char v5 = (double *)(v2 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize);
  uint64_t result = swift_beginAccess();
  double *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1DA91E7B8())()
{
  return j__swift_endAccess;
}

double sub_1DA91E814()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DA91E85C(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1DA91E8B0())()
{
  return j_j__swift_endAccess;
}

double sub_1DA91E90C()
{
  uint64_t v0 = sub_1DA98B9A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA920178((uint64_t)v3);
  sub_1DA98B978();
  double v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

double sub_1DA91E9E4()
{
  uint64_t v0 = sub_1DA98B9A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA920178((uint64_t)v3);
  sub_1DA98B998();
  double Width = CGRectGetWidth(v7);
  sub_1DA98B998();
  CGRectGetHeight(v8);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return Width;
}

uint64_t sub_1DA91EAD0()
{
  return *(void *)(v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_autoupdatingPreviewView + 24);
}

uint64_t sub_1DA91EAE4()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_isLuminanceReduced);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1DA91EB2C(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_isLuminanceReduced);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1DA91EB78())()
{
  return j_j__swift_endAccess;
}

uint64_t ActivityPreviewHostingViewController.viewKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewKind;
  uint64_t v4 = sub_1DA98BBC8();
  double v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1DA91EC48()
{
  return sub_1DA98A6D8();
}

uint64_t sub_1DA91EC74(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_appName);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA91ECE0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_appName);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DA91ED38(uint64_t a1, uint64_t a2)
{
  double v5 = (void *)(v2 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_appName);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1DA91ED98())()
{
  return j_j__swift_endAccess;
}

char *ActivityPreviewHostingViewController.__allocating_init(viewCollections:currentStateIndex:widgetLocation:environment:viewKind:apertureTopEdgeMetric:islandSize:renderBoxRendersAsynchronously:appName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, double a9, char a10, uint64_t a11, uint64_t a12)
{
  int v19 = a8 & 1;
  id v20 = objc_allocWithZone(v12);
  return ActivityPreviewHostingViewController.init(viewCollections:currentStateIndex:widgetLocation:environment:viewKind:apertureTopEdgeMetric:islandSize:renderBoxRendersAsynchronously:appName:)(a1, a2, a3, a4, a5, a6, a7, v19, a9, a10, a11, a12);
}

char *ActivityPreviewHostingViewController.init(viewCollections:currentStateIndex:widgetLocation:environment:viewKind:apertureTopEdgeMetric:islandSize:renderBoxRendersAsynchronously:appName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, unsigned __int8 a10, uint64_t a11, uint64_t a12)
{
  LODWORD(v72) = a8;
  double v71 = *(double *)&a7;
  double v69 = *(double *)&a6;
  int v75 = a10;
  uint64_t v73 = a12;
  uint64_t v74 = a3;
  uint64_t v76 = a4;
  uint64_t v77 = a11;
  uint64_t v63 = sub_1DA98B9A8();
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v61 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(0);
  MEMORY[0x1F4188790](v68);
  id v20 = (uint64_t *)((char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = (double *)&v12[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize];
  *uint64_t v21 = 0.0;
  v21[1] = 0.0;
  char v66 = (double *)&v12[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric];
  *(void *)&v12[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric] = 0;
  v12[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_isLuminanceReduced] = 0;
  *(void *)&v12[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewCollections] = a1;
  uint64_t v67 = a1;
  uint64_t v70 = type metadata accessor for ActivityPreviewHostingViewController.StateController(0);
  uint64_t v22 = swift_allocObject();
  uint64_t v65 = v22;
  swift_beginAccess();
  uint64_t v81 = a2;
  unint64_t v23 = v12;
  swift_bridgeObjectRetain();
  sub_1DA98A088();
  swift_endAccess();
  *(void *)&v23[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_stateController] = v22;
  unint64_t v24 = &v23[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_environment];
  uint64_t v25 = sub_1DA98A888();
  uint64_t v60 = *(void *)(v25 - 8);
  uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
  v64(v24, a4, v25);
  uint64_t v26 = &v23[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewKind];
  uint64_t v27 = sub_1DA98BBC8();
  uint64_t v59 = *(void *)(v27 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  v28(v26, a5, v27);
  uint64_t v29 = v66;
  swift_beginAccess();
  *uint64_t v29 = a9;
  if (v72) {
    double v30 = 0.0;
  }
  else {
    double v30 = v71;
  }
  if (v72) {
    double v31 = 0.0;
  }
  else {
    double v31 = v69;
  }
  swift_beginAccess();
  *uint64_t v21 = v31;
  v21[1] = v30;
  uint64_t v32 = &v23[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_appName];
  uint64_t v33 = v76;
  uint64_t v34 = v73;
  *(void *)uint64_t v32 = v77;
  *((void *)v32 + 1) = v34;
  uint64_t v35 = v68;
  uint64_t v36 = (char *)v20 + *(int *)(v68 + 32);
  uint64_t v72 = v25;
  v64(v36, v33, v25);
  v28((char *)v20 + *(int *)(v35 + 36), a5, v27);
  void v20[2] = 0;
  uint64_t v37 = v35;
  uint64_t v38 = (uint64_t *)((char *)v20 + *(int *)(v35 + 48));
  uint64_t v78 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DA98B268();
  uint64_t v39 = v80;
  *uint64_t v38 = v79;
  v38[1] = v39;
  v20[4] = v67;
  sub_1DA921830(&qword_1EA8E6810, (void (*)(uint64_t))type metadata accessor for ActivityPreviewHostingViewController.StateController);
  *id v20 = sub_1DA98A318();
  v20[1] = v40;
  void v20[3] = v74;
  uint64_t v41 = (double *)((char *)v20 + *(int *)(v37 + 40));
  double *v41 = v31;
  v41[1] = v30;
  uint64_t v42 = (uint64_t *)((char *)v20 + *(int *)(v37 + 44));
  *uint64_t v42 = v77;
  v42[1] = v34;
  uint64_t v43 = (uint64_t)&v23[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_autoupdatingPreviewView];
  sub_1DA9217CC((uint64_t)v20, (uint64_t)&v23[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_autoupdatingPreviewView]);

  sub_1DA926C54(v43, (uint64_t)v20, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
  sub_1DA921830(&qword_1EA8E6818, (void (*)(uint64_t))type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
  uint64_t v44 = sub_1DA98B348();
  uint64_t v45 = sub_1DA7FC0B8(v44, 0, 1, v75);
  uint64_t result = (char *)objc_msgSend(v45, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  int64_t v47 = result;
  id v48 = objc_msgSend(result, sel_layer);

  uint64_t v49 = v61;
  sub_1DA920178(v61);
  sub_1DA98B978();
  double v51 = v50;
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v49, v63);
  objc_msgSend(v48, sel_setCornerRadius_, v51);

  uint64_t result = (char *)objc_msgSend(v45, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  int64_t v52 = result;
  id v53 = objc_msgSend(result, sel_layer);

  objc_msgSend(v53, sel_setMasksToBounds_, 1);
  uint64_t v54 = OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController;
  id v55 = *(id *)&v45[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController];
  sub_1DA98A9F8();

  uint64_t result = (char *)objc_msgSend(*(id *)&v45[v54], sel_view);
  if (result)
  {
    uint64_t v56 = result;
    id v57 = objc_msgSend(self, sel_blackColor);
    objc_msgSend(v56, sel_setBackgroundColor_, v57);

    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(a5, v27);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v76, v72);
    return v45;
  }
LABEL_13:
  __break(1u);
  return result;
}

id ActivityPreviewHostingViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ActivityPreviewHostingViewController.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize];
  *uint64_t v1 = 0;
  v1[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric] = 0;
  v0[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_isLuminanceReduced] = 0;

  sub_1DA98CBB8();
  __break(1u);
}

uint64_t sub_1DA91F6C0(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return sub_1DA98A0D8();
  }
  else
  {
    if (qword_1EBE59CF8 != -1) {
      swift_once();
    }
    MEMORY[0x1F4188790](qword_1EBE6F1A0);
    return sub_1DA98A2E8();
  }
}

uint64_t sub_1DA91F7D0()
{
  return sub_1DA98A0D8();
}

uint64_t sub_1DA91F854()
{
  return *(void *)(*(void *)(v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewCollections)
                   + 16);
}

uint64_t sub_1DA91F868()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DA91F8F4@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewCollections);
  uint64_t v5 = *(void *)(v4 + 16);
  if ((uint64_t)v8 < v5)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1DA98A0C8();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(void *)(v4 + 16))
    {
      uint64_t v6 = sub_1DA98BD88();
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, v4+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80))+ *(void *)(*(void *)(v6 - 8) + 72) * v8, v6);
    }
    __break(1u);
    goto LABEL_10;
  }
  if (!v5)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v7 = sub_1DA98BD88();
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v4+ ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80)), v7);
}

uint64_t sub_1DA91FAA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v52 = sub_1DA98BCF8();
  uint64_t v54 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  id v53 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1DA98B958();
  uint64_t v51 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  id v48 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DA98BD88();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6820);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = sub_1DA98BBC8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = MEMORY[0x1F4188790](v17);
  id v20 = (char *)&v41 - v19;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v21((char *)&v41 - v19, v1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewKind, v13, v18);
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 88))(v20, v13) != *MEMORY[0x1E4F46E18]) {
    goto LABEL_5;
  }
  uint64_t v41 = v1;
  uint64_t v42 = v9;
  uint64_t v43 = v12;
  uint64_t v46 = v20;
  ((void (*)(char *, char *, uint64_t))v21)(v16, v20, v13);
  uint64_t v44 = v14;
  uint64_t v45 = v13;
  (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
  uint64_t v22 = sub_1DA98BBB8();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v23 + 88))(v16, v22) != *MEMORY[0x1E4F46E00])
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v22);
    uint64_t v13 = v45;
    id v20 = v46;
    uint64_t v14 = v44;
LABEL_5:
    uint64_t v28 = sub_1DA98B9A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v55, 1, 1, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v20, v13);
  }
  sub_1DA91F8F4((uint64_t)v6);
  uint64_t v25 = v47;
  unint64_t v24 = v48;
  unsigned char *v48 = 1;
  uint64_t v26 = v51;
  (*(void (**)(unsigned char *, void, uint64_t))(v51 + 104))(v24, *MEMORY[0x1E4F46CD0], v25);
  sub_1DA98BD78();
  uint64_t v27 = (uint64_t)v43;
  sub_1DA98BD68();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v24, v25);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v6, v50);
  uint64_t v31 = v54;
  uint64_t v30 = v55;
  uint64_t v32 = v52;
  uint64_t v33 = v45;
  uint64_t v34 = v46;
  uint64_t v35 = (uint64_t)v42;
  sub_1DA7A1F58(v27, (uint64_t)v42, &qword_1EA8E6820);
  int v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v35, 1, v32);
  uint64_t v37 = v53;
  uint64_t v38 = v44;
  if (v36 == 1)
  {
    sub_1DA7A1AE0(v27, &qword_1EA8E6820);
    sub_1DA7A1AE0(v35, &qword_1EA8E6820);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v34, v33);
    uint64_t v39 = sub_1DA98B9A8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v30, 1, 1, v39);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v53, v35, v32);
    sub_1DA98BCD8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v32);
    sub_1DA7A1AE0(v27, &qword_1EA8E6820);
    uint64_t v40 = sub_1DA98B9A8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v30, 0, 1, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v34, v33);
  }
}

uint64_t sub_1DA920178@<X0>(uint64_t a1@<X8>)
{
  uint64_t v167 = a1;
  uint64_t v2 = sub_1DA98B9A8();
  uint64_t v170 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v137 = (char *)&v136 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v141 = (char *)&v136 - v5;
  MEMORY[0x1F4188790](v6);
  os_log_type_t v140 = (char *)&v136 - v7;
  uint64_t v153 = sub_1DA98BCF8();
  uint64_t v155 = *(void *)(v153 - 8);
  MEMORY[0x1F4188790](v153);
  uint64_t v148 = (char *)&v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  char v152 = (char *)&v136 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6820);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v147 = (uint64_t)&v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v151 = (uint64_t)&v136 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v156 = (uint64_t)&v136 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v157 = (uint64_t)&v136 - v18;
  uint64_t v161 = sub_1DA98B958();
  uint64_t v168 = *(void *)(v161 - 8);
  MEMORY[0x1F4188790](v161);
  uint64_t v150 = (char *)&v136 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v149 = (char *)&v136 - v21;
  MEMORY[0x1F4188790](v22);
  unint64_t v24 = (char *)&v136 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E68E0);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v145 = (char *)&v136 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v144 = (char *)&v136 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v136 - v30;
  uint64_t v32 = sub_1DA98BD08();
  uint64_t v159 = *(void *)(v32 - 8);
  uint64_t v160 = v32;
  MEMORY[0x1F4188790](v32);
  uint64_t v146 = (char *)&v136 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  os_log_type_t v139 = (char *)&v136 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v136 - v37;
  uint64_t v39 = sub_1DA98BBC8();
  uint64_t v40 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v42 = (char *)&v136 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)&v136 - v44;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E68E8);
  MEMORY[0x1F4188790](v46 - 8);
  uint64_t v165 = (char *)&v136 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v48);
  uint64_t v138 = (uint64_t)&v136 - v49;
  MEMORY[0x1F4188790](v50);
  uint64_t v154 = (char *)&v136 - v51;
  MEMORY[0x1F4188790](v52);
  uint64_t v54 = (char *)&v136 - v53;
  uint64_t v55 = sub_1DA98BD88();
  uint64_t v162 = *(void *)(v55 - 8);
  uint64_t v163 = v55;
  MEMORY[0x1F4188790](v55);
  uint64_t v169 = (uint64_t)&v136 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA91F8F4(v169);
  id v57 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v170 + 56);
  uint64_t v164 = v54;
  uint64_t v58 = v54;
  uint64_t v59 = v1;
  uint64_t v166 = v2;
  uint64_t v143 = v170 + 56;
  uint64_t v142 = v57;
  v57((uint64_t)v58, 1, 1, v2);
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v60(v45, &v1[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewKind], v39);
  int v61 = (*(uint64_t (**)(char *, uint64_t))(v40 + 88))(v45, v39);
  if (v61 != *MEMORY[0x1E4F46E18])
  {
    uint64_t v158 = v45;
    if (v61 == *MEMORY[0x1E4F46E20])
    {
      uint64_t v70 = v168;
      uint64_t v71 = v161;
      (*(void (**)(unsigned char *, void, uint64_t))(v168 + 104))(v24, *MEMORY[0x1E4F46CD8], v161);
      sub_1DA98BD48();
      uint64_t v72 = v169;
      sub_1DA98BD38();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v70 + 8))(v24, v71);
      uint64_t v74 = v159;
      uint64_t v73 = v160;
      int v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v159 + 48))(v31, 1, v160);
      uint64_t v76 = (uint64_t)v164;
      if (v75 == 1)
      {
        sub_1DA7A1AE0((uint64_t)v31, &qword_1EA8E68E0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v38, v31, v73);
        uint64_t v86 = (uint64_t)v154;
        sub_1DA98BD58();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v38, v73);
        sub_1DA7A1AE0(v76, &qword_1EA8E68E8);
        sub_1DA7BA440(v86, v76, &qword_1EA8E68E8);
      }
      uint64_t v82 = (uint64_t)v165;
      uint64_t v83 = v166;
      uint64_t v84 = v170;
      uint64_t v65 = v158;
      uint64_t v85 = v72;
      goto LABEL_12;
    }
    goto LABEL_38;
  }
  v60(v42, v45, v39);
  (*(void (**)(char *, uint64_t))(v40 + 96))(v42, v39);
  uint64_t v62 = sub_1DA98BBB8();
  uint64_t v63 = *(void *)(v62 - 8);
  int v64 = (*(uint64_t (**)(char *, uint64_t))(v63 + 88))(v42, v62);
  uint64_t v65 = v45;
  if (v64 == *MEMORY[0x1E4F46E00])
  {
    uint64_t v158 = v45;
    uint64_t v160 = v40;
    uint64_t v136 = v39;
    char v66 = v149;
    unsigned char *v149 = 1;
    uint64_t v67 = *MEMORY[0x1E4F46CD0];
    uint64_t v68 = v168;
    uint64_t v69 = v161;
    uint64_t v159 = *(void *)(v168 + 104);
    ((void (*)(unsigned char *, uint64_t, uint64_t))v159)(v66, v67, v161);
    uint64_t v144 = v59;
    sub_1DA98BD78();
    sub_1DA98BD68();
    int v94 = *(void (**)(unsigned char *, uint64_t))(v68 + 8);
    v94(v66, v69);
    swift_bridgeObjectRelease();
    int v95 = v150;
    unsigned char *v150 = 2;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v159)(v95, v67, v69);
    sub_1DA98BD78();
    sub_1DA98BD68();
    uint64_t v40 = v160;
    v94(v95, v69);
    swift_bridgeObjectRelease();
    uint64_t v39 = v136;
    uint64_t v65 = v158;
    uint64_t v96 = v153;
    uint64_t v97 = v155;
    uint64_t v98 = v157;
    uint64_t v99 = v151;
    sub_1DA7A1F58(v157, v151, &qword_1EA8E6820);
    uint64_t v100 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
    int v101 = v100(v99, 1, v96);
    uint64_t v76 = (uint64_t)v164;
    if (v101 == 1)
    {
      sub_1DA7A1AE0(v156, &qword_1EA8E6820);
      sub_1DA7A1AE0(v98, &qword_1EA8E6820);
      sub_1DA7A1AE0(v99, &qword_1EA8E6820);
      uint64_t v82 = (uint64_t)v165;
      uint64_t v83 = v166;
      uint64_t v85 = v169;
      uint64_t v84 = v170;
    }
    else
    {
      uint64_t v102 = v97;
      uint64_t v103 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 32);
      uint64_t v104 = v99;
      uint64_t v105 = v96;
      v103(v152, v104, v96);
      uint64_t v106 = v156;
      uint64_t v107 = v147;
      sub_1DA7A1F58(v156, v147, &qword_1EA8E6820);
      if (v100(v107, 1, v96) == 1)
      {
        (*(void (**)(char *, uint64_t))(v102 + 8))(v152, v96);
        sub_1DA7A1AE0(v106, &qword_1EA8E6820);
        sub_1DA7A1AE0(v157, &qword_1EA8E6820);
        sub_1DA7A1AE0(v107, &qword_1EA8E6820);
        uint64_t v83 = v166;
        uint64_t v84 = v170;
      }
      else
      {
        v103(v148, v107, v96);
        unint64_t v111 = v140;
        uint64_t v112 = v152;
        sub_1DA98BCD8();
        unint64_t v113 = v141;
        sub_1DA98BCD8();
        sub_1DA98B998();
        CGRectGetWidth(v171);
        swift_beginAccess();
        sub_1DA98B998();
        CGRectGetWidth(v172);
        uint64_t v114 = v105;
        if (qword_1EA8E5538 != -1) {
          swift_once();
        }
        sub_1DA98B998();
        CGRectGetHeight(v173);
        sub_1DA98B978();
        uint64_t v115 = (uint64_t)v154;
        sub_1DA98B988();
        uint64_t v84 = v170;
        uint64_t v116 = *(void (**)(char *, uint64_t))(v170 + 8);
        char v117 = v113;
        uint64_t v83 = v166;
        v116(v117, v166);
        v116(v111, v83);
        char v118 = *(void (**)(char *, uint64_t))(v155 + 8);
        v118(v148, v114);
        v118(v112, v114);
        sub_1DA7A1AE0(v156, &qword_1EA8E6820);
        sub_1DA7A1AE0(v157, &qword_1EA8E6820);
        sub_1DA7A1AE0(v76, &qword_1EA8E68E8);
        v142(v115, 0, 1, v83);
        sub_1DA7BA440(v115, v76, &qword_1EA8E68E8);
      }
      uint64_t v82 = (uint64_t)v165;
      uint64_t v85 = v169;
      uint64_t v39 = v136;
      uint64_t v65 = v158;
    }
    goto LABEL_12;
  }
  if (v64 != *MEMORY[0x1E4F46E08])
  {
    uint64_t v85 = v169;
    if (v64 == *MEMORY[0x1E4F46E10])
    {
      *unint64_t v24 = 0;
      uint64_t v88 = v168;
      uint64_t v89 = v161;
      (*(void (**)(unsigned char *, void, uint64_t))(v168 + 104))(v24, *MEMORY[0x1E4F46CD0], v161);
      sub_1DA98BD48();
      uint64_t v90 = v144;
      sub_1DA98BD38();
      uint64_t v91 = (uint64_t)v90;
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v88 + 8))(v24, v89);
      uint64_t v93 = v159;
      uint64_t v92 = v160;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48))(v91, 1, v160) == 1)
      {
        sub_1DA7A1AE0(v91, &qword_1EA8E68E0);
        uint64_t v82 = (uint64_t)v165;
        uint64_t v83 = v166;
        uint64_t v84 = v170;
        uint64_t v76 = (uint64_t)v164;
        goto LABEL_12;
      }
      uint64_t v119 = v139;
      (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v139, v91, v92);
      uint64_t v120 = (uint64_t)v154;
      sub_1DA98BD58();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v119, v92);
      uint64_t v76 = (uint64_t)v164;
      sub_1DA7A1AE0((uint64_t)v164, &qword_1EA8E68E8);
      sub_1DA7BA440(v120, v76, &qword_1EA8E68E8);
      uint64_t v83 = v166;
      uint64_t v84 = v170;
LABEL_28:
      uint64_t v82 = (uint64_t)v165;
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v62);
LABEL_38:
    if (qword_1EA8E5580 != -1) {
      swift_once();
    }
    uint64_t v133 = sub_1DA989F38();
    __swift_project_value_buffer(v133, (uint64_t)qword_1EA8ED838);
    uint64_t v130 = sub_1DA989F18();
    os_log_type_t v134 = sub_1DA98C528();
    if (os_log_type_enabled(v130, v134))
    {
      uint64_t v135 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v135 = 0;
      _os_log_impl(&dword_1DA795000, v130, v134, "Unknown view kind when fetching metrics", v135, 2u);
      MEMORY[0x1E0178DA0](v135, -1, -1);
    }
    goto LABEL_42;
  }
  *unint64_t v24 = 3;
  uint64_t v77 = v168;
  uint64_t v78 = v161;
  (*(void (**)(unsigned char *, void, uint64_t))(v168 + 104))(v24, *MEMORY[0x1E4F46CD0], v161);
  sub_1DA98BD48();
  uint64_t v79 = (uint64_t)v145;
  sub_1DA98BD38();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v77 + 8))(v24, v78);
  uint64_t v81 = v159;
  uint64_t v80 = v160;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48))(v79, 1, v160) != 1)
  {
    uint64_t v144 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v146, v79, v80);
    uint64_t v108 = (uint64_t)v154;
    uint64_t v85 = v169;
    sub_1DA98BD58();
    uint64_t v109 = v80;
    uint64_t v76 = (uint64_t)v164;
    sub_1DA7A1AE0((uint64_t)v164, &qword_1EA8E68E8);
    sub_1DA7BA440(v108, v76, &qword_1EA8E68E8);
    uint64_t v110 = v138;
    sub_1DA7A1F58(v76, v138, &qword_1EA8E68E8);
    uint64_t v84 = v170;
    uint64_t v83 = v166;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v170 + 48))(v110, 1, v166) == 1)
    {
      (*(void (**)(char *, uint64_t))(v81 + 8))(v146, v109);
      sub_1DA7A1AE0(v110, &qword_1EA8E68E8);
    }
    else
    {
      uint64_t v121 = v137;
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v137, v110, v83);
      sub_1DA98B998();
      double Width = CGRectGetWidth(v174);
      uint64_t v123 = &v144[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize];
      uint64_t v124 = swift_beginAccess();
      if (Width >= *((double *)v123 + 1))
      {
        (*(void (**)(char *, uint64_t))(v84 + 8))(v121, v83);
        (*(void (**)(char *, uint64_t))(v159 + 8))(v146, v160);
      }
      else
      {
        CGSizeMake(v124, v125, v126, v127);
        sub_1DA98B978();
        uint64_t v128 = (uint64_t)v154;
        sub_1DA98B988();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v121, v83);
        (*(void (**)(char *, uint64_t))(v159 + 8))(v146, v160);
        sub_1DA7A1AE0(v76, &qword_1EA8E68E8);
        v142(v128, 0, 1, v83);
        sub_1DA7BA440(v128, v76, &qword_1EA8E68E8);
      }
    }
    goto LABEL_28;
  }
  sub_1DA7A1AE0(v79, &qword_1EA8E68E0);
  uint64_t v82 = (uint64_t)v165;
  uint64_t v83 = v166;
  uint64_t v85 = v169;
  uint64_t v84 = v170;
  uint64_t v76 = (uint64_t)v164;
LABEL_12:
  (*(void (**)(char *, uint64_t))(v40 + 8))(v65, v39);
  sub_1DA7A1F58(v76, v82, &qword_1EA8E68E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83) != 1)
  {
    sub_1DA7A1AE0(v76, &qword_1EA8E68E8);
    (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v85, v163);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 32))(v167, v82, v83);
  }
  sub_1DA7A1AE0(v82, &qword_1EA8E68E8);
  if (qword_1EA8E5580 != -1) {
    swift_once();
  }
  uint64_t v129 = sub_1DA989F38();
  __swift_project_value_buffer(v129, (uint64_t)qword_1EA8ED838);
  uint64_t v130 = sub_1DA989F18();
  os_log_type_t v131 = sub_1DA98C528();
  if (os_log_type_enabled(v130, v131))
  {
    char v132 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v132 = 0;
    _os_log_impl(&dword_1DA795000, v130, v131, "No activity metrics found", v132, 2u);
    MEMORY[0x1E0178DA0](v132, -1, -1);
  }
LABEL_42:

  uint64_t result = sub_1DA98CBB8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EA8E6848);
}

uint64_t type metadata accessor for ActivityPreviewHostingViewController.StateController(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EA8E6838);
}

uint64_t sub_1DA9217CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA921830(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA921878()
{
  return sub_1DA91F7D0();
}

uint64_t sub_1DA921894(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DA98BCF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6820);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v20 - v12;
  sub_1DA921BC8(a1, (void (*)(void, void, void))((char *)v20 - v12));
  sub_1DA7A1F58((uint64_t)v13, (uint64_t)v10, &qword_1EA8E6820);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v13, &qword_1EA8E6820);
    sub_1DA7A1AE0((uint64_t)v10, &qword_1EA8E6820);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    uint64_t v14 = sub_1DA98BCC8();
    uint64_t v15 = *(void **)(v2 + 16);
    if (v15)
    {
      type metadata accessor for TintedWidgetViewModel();
      swift_allocObject();
      swift_beginAccess();
      v20[5] = v15;
      sub_1DA86F3F4();
      id v16 = v15;
      sub_1DA98A088();
      swift_endAccess();
      sub_1DA921830((unint64_t *)&qword_1EBE63C38, (void (*)(uint64_t))type metadata accessor for TintedWidgetViewModel);
      swift_retain_n();
      swift_retain();
      v20[1] = sub_1DA98A318();
      void v20[2] = v17;
      void v20[3] = v14;
      v20[4] = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E62A8);
      sub_1DA7A0410(&qword_1EA8E62B0, &qword_1EA8E62A8);
      uint64_t v18 = sub_1DA98B348();
      swift_release();
      swift_release();

      uint64_t v14 = v18;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1DA7A1AE0((uint64_t)v13, &qword_1EA8E6820);
  }
  return v14;
}

uint64_t sub_1DA921BC8@<X0>(uint64_t a1@<X0>, void (*a2)(void, void, void)@<X8>)
{
  uint64_t v73 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E67C8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DA98BCF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v62 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DA98A888();
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v71 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v69 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)sub_1DA98A3F8();
  uint64_t v67 = *(v11 - 1);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)&v58 - v15;
  uint64_t v17 = sub_1DA98BD88();
  uint64_t v77 = *(void *)(v17 - 8);
  uint64_t v78 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v76 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6820);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v63 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v68 = (uint64_t)&v58 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v61 = (uint64_t)&v58 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v66 = (uint64_t)&v58 - v26;
  double v28 = MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v58 - v29;
  uint64_t v72 = v7;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, char *))(v7 + 56);
  uint64_t v74 = (char *)v6;
  int v64 = v31;
  uint64_t v65 = v7 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v31)((char *)&v58 - v29, 1, 1, v6, v28);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v32 = *(void *)(v2 + 32);
  if (v79 >= *(void *)(v32 + 16)) {
    return sub_1DA7BA440((uint64_t)v30, (uint64_t)a2, &qword_1EA8E6820);
  }
  uint64_t v59 = a2;
  swift_getKeyPath();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  swift_release();
  if (v79 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if ((unint64_t)v79 >= *(void *)(v32 + 16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int v75 = v30;
  (*(void (**)(char *, unint64_t, uint64_t))(v77 + 16))(v76, v32+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(void *)(v77 + 72) * v79, v78);
  uint64_t v34 = v2
      + *(int *)(type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(0)
               + 32);
  sub_1DA98A4F8();
  sub_1DA98A3D8();
  sub_1DA921830((unint64_t *)&qword_1EBE62DE8, MEMORY[0x1E4F3CD58]);
  char v35 = sub_1DA98C8E8();
  uint64_t v36 = *(void (**)(char *, void *))(v67 + 8);
  v36(v13, v11);
  v36(v16, v11);
  if ((v35 & 1) == 0)
  {
    uint64_t v11 = 0;
    uint64_t v13 = v74;
    uint64_t KeyPath = v72;
    goto LABEL_17;
  }
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
  uint64_t v58 = v34;
  v37(v69, v34, v71);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E5A48);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1DA990050;
  sub_1DA98A3E8();
  uint64_t v79 = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE630C8);
  sub_1DA7A0410(&qword_1EBE630D0, &qword_1EBE630C8);
  sub_1DA98C918();
  sub_1DA98A508();
  sub_1DA98BD78();
  uint64_t v39 = v66;
  uint64_t v11 = 0;
  sub_1DA98BD68();
  uint64_t v13 = v74;
  uint64_t KeyPath = v72;
  swift_bridgeObjectRelease();
  uint64_t v30 = v75;
  uint64_t v40 = v61;
  sub_1DA7A1F58(v39, v61, &qword_1EA8E6820);
  int v41 = (*(uint64_t (**)(uint64_t, uint64_t, char *))(KeyPath + 48))(v40, 1, v13);
  if (v41 == 1)
  {
    sub_1DA7A1AE0(v39, &qword_1EA8E6820);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v71);
    sub_1DA7A1AE0(v40, &qword_1EA8E6820);
    goto LABEL_17;
  }
  a2 = *(void (**)(void, void, void))(KeyPath + 32);
  a2(v62, v40, v13);
  uint64_t v42 = v60;
  sub_1DA98BCE8();
  uint64_t v43 = (uint64_t)v42;
  uint64_t v44 = sub_1DA98BC88();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44) != 1)
  {
    char v46 = sub_1DA98BC78();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
    if ((v46 & 1) == 0) {
      goto LABEL_16;
    }
    if (qword_1EA8E5580 == -1)
    {
LABEL_13:
      uint64_t v47 = sub_1DA989F38();
      __swift_project_value_buffer(v47, (uint64_t)qword_1EA8ED838);
      uint64_t v48 = sub_1DA989F18();
      os_log_type_t v49 = sub_1DA98C518();
      BOOL v50 = os_log_type_enabled(v48, v49);
      uint64_t v51 = v66;
      if (v50)
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v52 = 0;
        _os_log_impl(&dword_1DA795000, v48, v49, "Preview placeholder containsPrivacyRedactions, switching to privacy", v52, 2u);
        MEMORY[0x1E0178DA0](v52, -1, -1);
      }

      sub_1DA7A1AE0(v51, &qword_1EA8E6820);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v71);
      sub_1DA7A1AE0((uint64_t)v30, &qword_1EA8E6820);
      a2(v30, v62, v13);
      v64(v30, 0, 1, v13);
      goto LABEL_17;
    }
LABEL_26:
    swift_once();
    goto LABEL_13;
  }
  sub_1DA7A1AE0(v43, &qword_1EA8E67C8);
LABEL_16:
  (*(void (**)(char *, char *))(KeyPath + 8))(v62, v13);
  sub_1DA7A1AE0(v66, &qword_1EA8E6820);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v71);
LABEL_17:
  uint64_t v53 = v68;
  sub_1DA7A1F58((uint64_t)v75, v68, &qword_1EA8E6820);
  int v54 = (*(uint64_t (**)(uint64_t, uint64_t, char *))(KeyPath + 48))(v53, 1, v13);
  sub_1DA7A1AE0(v53, &qword_1EA8E6820);
  if (v54 == 1)
  {
    sub_1DA98BD78();
    uint64_t v55 = (uint64_t)v63;
    uint64_t v56 = v76;
    sub_1DA98BD68();
    swift_bridgeObjectRelease();
    if (v11)
    {

      (*(void (**)(char *, uint64_t))(v77 + 8))(v56, v78);
      uint64_t v30 = v75;
      sub_1DA7A1AE0((uint64_t)v75, &qword_1EA8E6820);
      v64((char *)v55, 1, 1, v13);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v77 + 8))(v56, v78);
      uint64_t v30 = v75;
      sub_1DA7A1AE0((uint64_t)v75, &qword_1EA8E6820);
    }
    sub_1DA7BA440(v55, (uint64_t)v30, &qword_1EA8E6820);
    a2 = v59;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
    a2 = v59;
    uint64_t v30 = v75;
  }
  return sub_1DA7BA440((uint64_t)v30, (uint64_t)a2, &qword_1EA8E6820);
}

uint64_t sub_1DA9226A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v299 = a1;
  uint64_t v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5ABA0);
  MEMORY[0x1F4188790](v297);
  v298 = (uint64_t *)((char *)&v259 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v291 = sub_1DA98A408();
  MEMORY[0x1F4188790](v291);
  v294 = (char *)&v259 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6270);
  MEMORY[0x1F4188790](v3 - 8);
  v289 = (uint64_t *)((char *)&v259 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v288 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6278);
  MEMORY[0x1F4188790](v288);
  uint64_t v292 = (uint64_t)&v259 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6858);
  MEMORY[0x1F4188790](v290);
  uint64_t v295 = (char *)&v259 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v293 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6860);
  MEMORY[0x1F4188790](v293);
  uint64_t v296 = (uint64_t)&v259 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6868);
  MEMORY[0x1F4188790](v8 - 8);
  char v259 = (char *)&v259 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v301 = sub_1DA98BCF8();
  uint64_t v10 = *(void *)(v301 - 8);
  MEMORY[0x1F4188790](v301);
  unint64_t v263 = (char *)&v259 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v266 = (char *)&v259 - v13;
  MEMORY[0x1F4188790](v14);
  unint64_t v261 = (char *)&v259 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v259 - v17;
  uint64_t v311 = sub_1DA98B928();
  uint64_t v286 = *(void *)(v311 - 8);
  MEMORY[0x1F4188790](v311);
  v282 = (char *)&v259 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v283 = (char *)&v259 - v21;
  uint64_t v277 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6870);
  MEMORY[0x1F4188790](v277);
  unint64_t v279 = (char *)&v259 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E67C8);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v264 = (char *)&v259 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  unint64_t v276 = (char *)&v259 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6878);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)&v259 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  unint64_t v280 = (char **)((char *)&v259 - v31);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v259 - v33;
  uint64_t v305 = sub_1DA98B958();
  uint64_t v309 = *(void *)(v305 - 8);
  MEMORY[0x1F4188790](v305);
  uint64_t v304 = (char *)&v259 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6820);
  MEMORY[0x1F4188790](v36 - 8);
  unint64_t v262 = (char **)((char *)&v259 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v38);
  uint64_t v268 = (char **)((char *)&v259 - v39);
  MEMORY[0x1F4188790](v40);
  uint64_t v271 = (char **)((char *)&v259 - v41);
  MEMORY[0x1F4188790](v42);
  uint64_t v44 = (char *)&v259 - v43;
  MEMORY[0x1F4188790](v45);
  uint64_t v270 = (uint64_t)&v259 - v46;
  MEMORY[0x1F4188790](v47);
  uint64_t v260 = (char **)((char *)&v259 - v48);
  MEMORY[0x1F4188790](v49);
  unint64_t v265 = (char **)((char *)&v259 - v50);
  MEMORY[0x1F4188790](v51);
  uint64_t v275 = (uint64_t)&v259 - v52;
  MEMORY[0x1F4188790](v53);
  v285 = (char **)((char *)&v259 - v54);
  uint64_t v307 = sub_1DA98BBC8();
  uint64_t v55 = *(void *)(v307 - 8);
  MEMORY[0x1F4188790](v307);
  uint64_t v274 = (char *)&v259 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v57);
  uint64_t v306 = (char *)&v259 - v58;
  uint64_t v310 = type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(0);
  MEMORY[0x1F4188790](v310);
  uint64_t v278 = (uint64_t)&v259 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v60);
  uint64_t v62 = (char *)&v259 - v61;
  uint64_t v63 = sub_1DA98A1F8();
  uint64_t v64 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v312 = (char *)&v259 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v284 = self;
  id v308 = objc_msgSend(v284, sel_clearColor);
  if (qword_1EA8E5580 != -1) {
    swift_once();
  }
  v281 = v34;
  uint64_t v269 = v29;
  uint64_t v267 = v18;
  uint64_t v302 = v10;
  uint64_t v273 = sub_1DA989F38();
  __swift_project_value_buffer(v273, (uint64_t)qword_1EA8ED838);
  sub_1DA926C54(v313, (uint64_t)v62, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
  uint64_t v66 = sub_1DA989F18();
  os_log_type_t v67 = sub_1DA98C518();
  BOOL v68 = os_log_type_enabled(v66, v67);
  uint64_t v303 = v63;
  uint64_t v287 = v64;
  uint64_t v300 = v55;
  id v272 = (void (*)(void))v44;
  if (v68)
  {
    uint64_t v69 = (uint8_t *)swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    uint64_t v324 = v70;
    *(_DWORD *)uint64_t v69 = 136446210;
    uint64_t v71 = v310;
    uint64_t v72 = sub_1DA98A468();
    *(void *)v341 = sub_1DA8C5E00(v72, v73, &v324);
    uint64_t v55 = v300;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA926CBC((uint64_t)v62, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
    _os_log_impl(&dword_1DA795000, v66, v67, "Trying to use preview view for environment: %{public}s", v69, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v70, -1, -1);
    MEMORY[0x1E0178DA0](v69, -1, -1);
  }
  else
  {
    sub_1DA926CBC((uint64_t)v62, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);

    uint64_t v71 = v310;
  }
  uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
  int v75 = v306;
  uint64_t v76 = v307;
  v74(v306, v313 + *(int *)(v71 + 36), v307);
  int v77 = (*(uint64_t (**)(char *, uint64_t))(v55 + 88))(v75, v76);
  if (v77 != *MEMORY[0x1E4F46E18])
  {
    uint64_t v95 = v302;
    if (v77 != *MEMORY[0x1E4F46E20]) {
      goto LABEL_71;
    }
    id v96 = objc_msgSend(v284, sel_systemBackgroundColor);

    uint64_t v97 = v309;
    uint64_t v98 = *(void (**)(void))(v309 + 104);
    uint64_t v100 = (uint64_t)v304;
    uint64_t v99 = v305;
    LODWORD(v266) = *MEMORY[0x1E4F46CD8];
    id v308 = (id)(v309 + 104);
    id v272 = v98;
    v98(v304);
    id v284 = v96;
    int v101 = (void (*)(void, void, void))v285;
    sub_1DA921BC8(v100, (void (*)(void, void, void))v285);
    uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
    v102(v100, v99);
    uint64_t v103 = v275;
    sub_1DA7A1F58((uint64_t)v101, v275, &qword_1EA8E6820);
    uint64_t v104 = *(char ***)(v95 + 48);
    uint64_t v105 = v301;
    uint64_t v271 = (char **)(v95 + 48);
    uint64_t v268 = v104;
    unsigned int v106 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v104)(v103, 1, v301);
    uint64_t v107 = v286;
    uint64_t v108 = (uint64_t)v276;
    uint64_t v274 = (char *)v102;
    uint64_t v309 = v97 + 8;
    if (v106 == 1)
    {
      sub_1DA7A1AE0(v103, &qword_1EA8E6820);
      uint64_t v109 = (uint64_t)v279;
    }
    else
    {
      sub_1DA98BCE8();
      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v103, v105);
      uint64_t v119 = sub_1DA98BC88();
      uint64_t v120 = *(void *)(v119 - 8);
      int v121 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v108, 1, v119);
      uint64_t v109 = (uint64_t)v279;
      if (v121 != 1)
      {
        uint64_t v123 = (uint64_t)v281;
        sub_1DA98BC58();
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v108, v119);
        uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56);
        uint64_t v124 = v123;
        uint64_t v125 = 0;
LABEL_26:
        uint64_t v135 = v311;
        v122(v124, v125, 1, v311);
        uint64_t v136 = (char *)(v313 + *(int *)(v71 + 32));
        uint64_t v137 = (void (*)(void, void, void))v280;
        unint64_t v279 = v136;
        sub_1DA98A6D8();
        v122((uint64_t)v137, 0, 1, v135);
        uint64_t v138 = v109 + *(int *)(v277 + 48);
        sub_1DA7A1F58(v123, v109, &qword_1EA8E6878);
        sub_1DA7A1F58((uint64_t)v137, v138, &qword_1EA8E6878);
        os_log_type_t v139 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
        int v140 = v139(v109, 1, v135);
        uint64_t v141 = (unsigned int *)MEMORY[0x1E4F46C80];
        if (v140 == 1)
        {
          sub_1DA7A1AE0((uint64_t)v137, &qword_1EA8E6878);
          uint64_t v135 = v311;
          sub_1DA7A1AE0(v123, &qword_1EA8E6878);
          if (v139(v138, 1, v135) == 1)
          {
            sub_1DA7A1AE0(v109, &qword_1EA8E6878);
            uint64_t v142 = v278;
            sub_1DA926C54(v313, v278, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
LABEL_37:
            sub_1DA926CBC(v142, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
            goto LABEL_38;
          }
        }
        else
        {
          uint64_t v143 = (uint64_t)v269;
          sub_1DA7A1F58(v109, (uint64_t)v269, &qword_1EA8E6878);
          if (v139(v138, 1, v135) != 1)
          {
            uint64_t v162 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 32);
            uint64_t v163 = v107;
            uint64_t v164 = v141;
            uint64_t v165 = v283;
            v162(v283, v138, v135);
            sub_1DA921830(&qword_1EA8E68B0, MEMORY[0x1E4F46C88]);
            uint64_t v166 = v143;
            char v167 = sub_1DA98BFF8();
            uint64_t v168 = *(void (**)(char *, uint64_t))(v163 + 8);
            uint64_t v169 = v165;
            uint64_t v141 = v164;
            uint64_t v107 = v163;
            v168(v169, v135);
            sub_1DA7A1AE0((uint64_t)v280, &qword_1EA8E6878);
            sub_1DA7A1AE0((uint64_t)v281, &qword_1EA8E6878);
            v168((char *)v166, v311);
            uint64_t v135 = v311;
            sub_1DA7A1AE0(v109, &qword_1EA8E6878);
            uint64_t v142 = v278;
            sub_1DA926C54(v313, v278, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
            if (v167) {
              goto LABEL_37;
            }
LABEL_32:
            uint64_t v144 = v283;
            sub_1DA98A6D8();
            uint64_t v145 = *v141;
            uint64_t v146 = v282;
            (*(void (**)(char *, uint64_t, uint64_t))(v107 + 104))(v282, v145, v135);
            sub_1DA921830(&qword_1EBE59FF8, MEMORY[0x1E4F46C88]);
            sub_1DA98C248();
            sub_1DA98C248();
            uint64_t v147 = v324;
            uint64_t v148 = *(void *)v341;
            uint64_t v149 = *(void (**)(char *, uint64_t))(v107 + 8);
            uint64_t v150 = v146;
            uint64_t v141 = (unsigned int *)MEMORY[0x1E4F46C80];
            v149(v150, v311);
            v149(v144, v311);
            uint64_t v151 = v313;
            sub_1DA926CBC(v142, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
            BOOL v152 = v147 == v148;
            uint64_t v135 = v311;
            if (v152)
            {
              uint64_t v154 = v304;
              uint64_t v153 = v305;
              unsigned char *v304 = 1;
              LODWORD(v281) = *MEMORY[0x1E4F46CD0];
              uint64_t v155 = v272;
              v272(v154);
              uint64_t v156 = (void (*)(void, void, void))v265;
              sub_1DA921BC8((uint64_t)v154, (void (*)(void, void, void))v265);
              uint64_t v157 = v274;
              ((void (*)(unsigned char *, uint64_t))v274)(v154, v153);
              uint64_t v158 = v301;
              uint64_t v159 = (unsigned int (*)(void, uint64_t, uint64_t))v268;
              if (((unsigned int (*)(void, uint64_t, uint64_t))v268)(v156, 1, v301) == 1)
              {
                sub_1DA7A1AE0((uint64_t)v156, &qword_1EA8E6820);
                id v308 = 0;
                uint64_t v160 = v310;
                uint64_t v161 = v302;
              }
              else
              {
                unint64_t v280 = *(char ***)(v302 + 32);
                ((void (*)(char *, void, uint64_t))v280)(v267, v156, v158);
                *uint64_t v154 = 2;
                ((void (*)(unsigned char *, void, uint64_t))v155)(v154, v281, v153);
                CGRect v172 = (void (*)(void, void, void))v260;
                sub_1DA921BC8((uint64_t)v154, (void (*)(void, void, void))v260);
                ((void (*)(unsigned char *, uint64_t))v157)(v154, v153);
                if (v159(v172, 1, v158) == 1)
                {
                  uint64_t v161 = v302;
                  (*(void (**)(char *, uint64_t))(v302 + 8))(v267, v158);
                  sub_1DA7A1AE0((uint64_t)v172, &qword_1EA8E6820);
                  id v308 = 0;
                  uint64_t v160 = v310;
                }
                else
                {
                  ((void (*)(char *, void, uint64_t))v280)(v261, v172, v158);
                  unint64_t v185 = (uint64_t *)(v151 + *(int *)(v310 + 44));
                  uint64_t v186 = v185[1];
                  uint64_t v309 = *v185;
                  swift_bridgeObjectRetain();
                  id v308 = (id)sub_1DA98BCC8();
                  sub_1DA98B3A8();
                  sub_1DA98A278();
                  uint64_t v187 = v330;
                  char v188 = BYTE8(v330);
                  uint64_t v189 = v331;
                  char v190 = BYTE8(v331);
                  uint64_t v191 = *((void *)&v332 + 1);
                  uint64_t v305 = v332;
                  uint64_t v192 = sub_1DA98BCC8();
                  sub_1DA98B3A8();
                  sub_1DA98A278();
                  char v323 = v188;
                  char v321 = v190;
                  char v319 = v341[8];
                  char v317 = v341[24];
                  char v315 = 0;
                  uint64_t v324 = v309;
                  uint64_t v325 = v186;
                  *(void *)uint64_t v326 = v308;
                  *(void *)&v326[8] = v187;
                  v326[16] = v188;
                  LODWORD(v327) = v322[0];
                  *(_DWORD *)((char *)&v327 + 3) = *(_DWORD *)((char *)v322 + 3);
                  *(void *)((char *)&v327 + 7) = v189;
                  HIBYTE(v327) = v190;
                  uint64_t v193 = v313;
                  LODWORD(v328[0]) = *(_DWORD *)v320;
                  *(_DWORD *)((char *)v328 + 3) = *(_DWORD *)&v320[3];
                  *(void *)((char *)v328 + 7) = v305;
                  *(void *)((char *)v328 + 15) = v191;
                  *(void *)((char *)&v328[1] + 7) = v192;
                  *(void *)((char *)&v328[1] + 15) = *(void *)v341;
                  BYTE7(v328[2]) = v341[8];
                  *(_DWORD *)((char *)&v328[2] + 11) = *(_DWORD *)&v318[3];
                  DWORD2(v328[2]) = *(_DWORD *)v318;
                  *(void *)((char *)&v328[2] + 15) = *(void *)&v341[16];
                  BYTE7(v328[3]) = v341[24];
                  *(_DWORD *)((char *)&v328[3] + 11) = *(_DWORD *)&v316[3];
                  DWORD2(v328[3]) = *(_DWORD *)v316;
                  *(_OWORD *)((char *)&v328[3] + 15) = *(_OWORD *)&v341[32];
                  *(_OWORD *)((char *)&v328[4] + 15) = xmmword_1DA998E00;
                  *(void *)((char *)&v328[5] + 15) = 0x4018000000000000;
                  *(void *)((char *)&v328[6] + 7) = 0x403827EF9DB22D0FLL;
                  HIBYTE(v328[6]) = 0;
                  *(_DWORD *)&v329[3] = *(_DWORD *)&v314[3];
                  *(_DWORD *)v329 = *(_DWORD *)v314;
                  *(void *)&v329[7] = 0;
                  *(void *)&v329[15] = 0;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E68A0);
                  sub_1DA7A0410(&qword_1EA8E68A8, &qword_1EA8E68A0);
                  uint64_t v194 = (void *)sub_1DA98B348();
                  unint64_t v195 = v194;
                  uint64_t v196 = *(void **)(v193 + 16);
                  if (v196)
                  {
                    type metadata accessor for TintedWidgetViewModel();
                    swift_allocObject();
                    swift_beginAccess();
                    v342 = v196;
                    sub_1DA86F3F4();
                    id v197 = v196;
                    sub_1DA98A088();
                    swift_endAccess();
                    sub_1DA921830((unint64_t *)&qword_1EBE63C38, (void (*)(uint64_t))type metadata accessor for TintedWidgetViewModel);
                    swift_retain_n();
                    swift_retain();
                    uint64_t v324 = sub_1DA98A318();
                    uint64_t v325 = v198;
                    *(void *)uint64_t v326 = v195;
                    *(void *)&v326[8] = v195;
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E62A8);
                    sub_1DA7A0410(&qword_1EA8E62B0, &qword_1EA8E62A8);
                    unint64_t v199 = (void *)sub_1DA98B348();
                    swift_release();
                    swift_release();

                    id v308 = v199;
                  }
                  else
                  {
                    id v308 = v194;
                  }
                  uint64_t v200 = v301;
                  uint64_t v161 = v302;
                  uint64_t v201 = *(void (**)(char *, uint64_t))(v302 + 8);
                  v201(v261, v301);
                  v201(v267, v200);
                  uint64_t v160 = v310;
                }
              }
              uint64_t v135 = v311;
              uint64_t v141 = (unsigned int *)MEMORY[0x1E4F46C80];
LABEL_49:
              uint64_t v202 = v283;
              sub_1DA98A6D8();
              uint64_t v203 = *v141;
              uint64_t v204 = v286;
              uint64_t v205 = v282;
              (*(void (**)(char *, uint64_t, uint64_t))(v286 + 104))(v282, v203, v135);
              sub_1DA921830(&qword_1EBE59FF8, MEMORY[0x1E4F46C88]);
              uint64_t v206 = v135;
              sub_1DA98C248();
              sub_1DA98C248();
              uint64_t v207 = v324;
              uint64_t v208 = v342;
              unint64_t v209 = *(void (**)(char *, uint64_t))(v204 + 8);
              v209(v205, v206);
              v209(v202, v206);
              if ((void *)v207 != v208)
              {
                sub_1DA7A1AE0((uint64_t)v285, &qword_1EA8E6820);
                id v110 = v284;

                char v118 = v312;
                uint64_t v116 = v160;
                goto LABEL_60;
              }
              char v210 = (void (*)(void, void, void))v285;
              uint64_t v211 = v270;
              sub_1DA7A1F58((uint64_t)v285, v270, &qword_1EA8E6820);
              uint64_t v212 = v301;
              uint64_t v116 = v160;
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v268)(v211, 1, v301) == 1)
              {
                sub_1DA7A1AE0((uint64_t)v210, &qword_1EA8E6820);
                id v110 = v284;

                uint64_t v213 = v211;
                uint64_t v214 = &qword_1EA8E6820;
              }
              else
              {
                uint64_t v215 = v264;
                sub_1DA98BCE8();
                (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v211, v212);
                uint64_t v216 = sub_1DA98BC88();
                uint64_t v217 = *(void *)(v216 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v217 + 48))(v215, 1, v216) == 1)
                {
                  sub_1DA7A1AE0((uint64_t)v210, &qword_1EA8E6820);
                  id v110 = v284;

                  uint64_t v214 = &qword_1EA8E67C8;
                }
                else
                {
                  uint64_t v218 = v215;
                  uint64_t v215 = v259;
                  sub_1DA98BC68();
                  (*(void (**)(char *, uint64_t))(v217 + 8))(v218, v216);
                  uint64_t v219 = sub_1DA98B8F8();
                  uint64_t v220 = *(void *)(v219 - 8);
                  int v221 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v220 + 48))(v215, 1, v219);
                  id v110 = v284;
                  if (v221 != 1)
                  {
                    uint64_t v258 = sub_1DA98B8E8();

                    sub_1DA7A1AE0((uint64_t)v210, &qword_1EA8E6820);
                    (*(void (**)(char *, uint64_t))(v220 + 8))(v215, v219);
                    if (v258)
                    {

                      id v110 = (id)v258;
                    }
                    goto LABEL_59;
                  }
                  sub_1DA7A1AE0((uint64_t)v210, &qword_1EA8E6820);

                  uint64_t v214 = &qword_1EA8E6868;
                }
                uint64_t v213 = (uint64_t)v215;
              }
              sub_1DA7A1AE0(v213, v214);
LABEL_59:
              char v118 = v312;
LABEL_60:
              id v117 = v308;
              (*(void (**)(char *, uint64_t))(v300 + 8))(v306, v307);
              if (!v117) {
                goto LABEL_62;
              }
              goto LABEL_61;
            }
LABEL_38:
            uint64_t v171 = (uint64_t)v304;
            uint64_t v170 = v305;
            ((void (*)(unsigned char *, void, uint64_t))v272)(v304, v266, v305);
            id v308 = (id)sub_1DA921894(v171);
            ((void (*)(uint64_t, uint64_t))v274)(v171, v170);
            uint64_t v160 = v310;
            uint64_t v161 = v302;
            goto LABEL_49;
          }
          sub_1DA7A1AE0((uint64_t)v280, &qword_1EA8E6878);
          sub_1DA7A1AE0((uint64_t)v281, &qword_1EA8E6878);
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v143, v135);
        }
        sub_1DA7A1AE0(v109, &qword_1EA8E6870);
        uint64_t v142 = v278;
        sub_1DA926C54(v313, v278, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
        goto LABEL_32;
      }
      sub_1DA7A1AE0(v108, &qword_1EA8E67C8);
    }
    uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56);
    uint64_t v123 = (uint64_t)v281;
    uint64_t v124 = (uint64_t)v281;
    uint64_t v125 = 1;
    goto LABEL_26;
  }
  uint64_t v78 = v274;
  v74(v274, (uint64_t)v75, v76);
  (*(void (**)(char *, uint64_t))(v55 + 96))(v78, v76);
  uint64_t v79 = sub_1DA98BBB8();
  uint64_t v80 = *(void *)(v79 - 8);
  int v81 = (*(uint64_t (**)(char *, uint64_t))(v80 + 88))(v78, v79);
  if (v81 == *MEMORY[0x1E4F46E00])
  {
    id v284 = objc_msgSend(v284, sel_blackColor);

    uint64_t v83 = v304;
    uint64_t v82 = v305;
    unsigned char *v304 = 1;
    uint64_t v84 = *MEMORY[0x1E4F46CD0];
    uint64_t v85 = v309;
    uint64_t v86 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v309 + 104);
    v86(v83, v84, v82);
    unint64_t v87 = (void (*)(void, void, void))v272;
    sub_1DA921BC8((uint64_t)v83, (void (*)(void, void, void))v272);
    uint64_t v88 = *(void (**)(unsigned char *, uint64_t))(v85 + 8);
    v88(v83, v82);
    *uint64_t v83 = 2;
    v86(v83, v84, v82);
    uint64_t v89 = v302;
    uint64_t v90 = (void (*)(void, void, void))v271;
    sub_1DA921BC8((uint64_t)v83, (void (*)(void, void, void))v271);
    v88(v83, v82);
    uint64_t v91 = (unsigned int (*)(void, void, void))v268;
    sub_1DA7A1F58((uint64_t)v87, (uint64_t)v268, &qword_1EA8E6820);
    uint64_t v92 = *(unsigned int (**)(void, uint64_t, uint64_t))(v89 + 48);
    uint64_t v93 = v301;
    if (v92(v91, 1, v301) == 1)
    {
      sub_1DA7A1AE0((uint64_t)v90, &qword_1EA8E6820);
      sub_1DA7A1AE0((uint64_t)v87, &qword_1EA8E6820);
      uint64_t v94 = v300;
LABEL_21:
      sub_1DA7A1AE0((uint64_t)v91, &qword_1EA8E6820);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v306, v307);
      char v118 = v312;
      id v110 = v284;
LABEL_62:
      if (qword_1EBE62C50 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v273, (uint64_t)qword_1EBE6F300);
      unint64_t v225 = sub_1DA989F18();
      os_log_type_t v226 = sub_1DA98C518();
      BOOL v227 = os_log_type_enabled(v225, v226);
      uint64_t v224 = v287;
      if (v227)
      {
        uint64_t v228 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v228 = 0;
        _os_log_impl(&dword_1DA795000, v225, v226, "No view found in activity preview view collection: showing empty view.", v228, 2u);
        uint64_t v229 = v228;
        char v118 = v312;
        MEMORY[0x1E0178DA0](v229, -1, -1);
      }

      (*(void (**)(char *, void, uint64_t))(v224 + 104))(v118, *MEMORY[0x1E4F3C5C0], v303);
      id v117 = (id)sub_1DA98B348();
      uint64_t v222 = 0xEF295954504D4528;
      uint64_t v223 = 0x2057454956455250;
      uint64_t v116 = v310;
      goto LABEL_67;
    }
    uint64_t v126 = v89;
    uint64_t v127 = *(void (**)(char *, unsigned int (*)(void, void, void), uint64_t))(v89 + 32);
    uint64_t v128 = (uint64_t)v266;
    v127(v266, v91, v93);
    uint64_t v91 = (unsigned int (*)(void, void, void))v262;
    sub_1DA7A1F58((uint64_t)v90, (uint64_t)v262, &qword_1EA8E6820);
    unsigned int v129 = v92(v91, 1, v93);
    uint64_t v130 = v126;
    uint64_t v94 = v300;
    if (v129 == 1)
    {
      sub_1DA7A1AE0((uint64_t)v90, &qword_1EA8E6820);
      sub_1DA7A1AE0((uint64_t)v272, &qword_1EA8E6820);
      (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v128, v93);
      goto LABEL_21;
    }
    uint64_t v173 = (uint64_t)v263;
    v127(v263, v91, v93);
    uint64_t v174 = v313;
    double v175 = *(double *)(v313 + *(int *)(v310 + 40));
    uint64_t v176 = sub_1DA98A898();
    sub_1DA924CB0(v128, v173, (uint64_t)&v330, v175);
    *(_OWORD *)&v341[71] = v334;
    *(_OWORD *)&v341[55] = v333;
    *(_OWORD *)&v341[119] = v337;
    *(_OWORD *)&v341[135] = v338;
    *(_OWORD *)&v341[151] = v339;
    v341[167] = v340;
    *(_OWORD *)&v341[87] = v335;
    *(_OWORD *)&v341[103] = v336;
    *(_OWORD *)&v341[7] = v330;
    *(_OWORD *)&v341[23] = v331;
    *(_OWORD *)&v341[39] = v332;
    v328[5] = *(_OWORD *)&v341[112];
    v328[6] = *(_OWORD *)&v341[128];
    *(_OWORD *)v329 = *(_OWORD *)&v341[144];
    v328[1] = *(_OWORD *)&v341[48];
    v328[2] = *(_OWORD *)&v341[64];
    v328[3] = *(_OWORD *)&v341[80];
    v328[4] = *(_OWORD *)&v341[96];
    *(_OWORD *)&v326[1] = *(_OWORD *)v341;
    long long v327 = *(_OWORD *)&v341[16];
    LOBYTE(v322[0]) = 0;
    uint64_t v324 = v176;
    uint64_t v325 = 0;
    v326[0] = 0;
    *(void *)&v329[16] = *(void *)&v341[160];
    v328[0] = *(_OWORD *)&v341[32];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6890);
    sub_1DA7A0410(&qword_1EA8E6898, &qword_1EA8E6890);
    uint64_t v177 = sub_1DA98B348();
    id v178 = *(void **)(v174 + 16);
    if (v178)
    {
      type metadata accessor for TintedWidgetViewModel();
      swift_allocObject();
      swift_beginAccess();
      v342 = v178;
      sub_1DA86F3F4();
      id v179 = v178;
      sub_1DA98A088();
      swift_endAccess();
      sub_1DA921830((unint64_t *)&qword_1EBE63C38, (void (*)(uint64_t))type metadata accessor for TintedWidgetViewModel);
      swift_retain_n();
      swift_retain();
      uint64_t v324 = sub_1DA98A318();
      uint64_t v325 = v180;
      *(void *)uint64_t v326 = v177;
      *(void *)&v326[8] = v177;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E62A8);
      sub_1DA7A0410(&qword_1EA8E62B0, &qword_1EA8E62A8);
      uint64_t v181 = sub_1DA98B348();
      swift_release();
      swift_release();

      uint64_t v177 = v181;
    }
    id v110 = v284;
    uint64_t v182 = v307;
    sub_1DA7A1AE0((uint64_t)v271, &qword_1EA8E6820);
    sub_1DA7A1AE0((uint64_t)v272, &qword_1EA8E6820);
    uint64_t v183 = v301;
    uint64_t v184 = *(void (**)(char *, uint64_t))(v302 + 8);
    v184(v263, v301);
    v184(v266, v183);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v306, v182);
    uint64_t v116 = v310;
    id v117 = (id)v177;
LABEL_61:
    sub_1DA98A448();
    uint64_t v222 = 0xE700000000000000;
    uint64_t v223 = 0x57454956455250;
    uint64_t v224 = v287;
LABEL_67:
    swift_retain();
    int v230 = sub_1DA98ADA8();
    uint64_t v231 = sub_1DA98B3A8();
    id v308 = v117;
    uint64_t v232 = (uint64_t)v289;
    uint64_t *v289 = v231;
    *(void *)(v232 + 8) = v233;
    uint64_t v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6288);
    sub_1DA86DF20((uint64_t)v117, v230, v223, v222, (void *)(v232 + *(int *)(v234 + 44)));
    swift_release();
    swift_bridgeObjectRelease();
    id v235 = v110;
    uint64_t v236 = MEMORY[0x1E01763D0]();
    LOBYTE(v230) = sub_1DA98ADA8();
    uint64_t v237 = v292;
    sub_1DA7A1F58(v232, v292, &qword_1EA8E6270);
    uint64_t v238 = v237 + *(int *)(v288 + 36);
    *(void *)uint64_t v238 = v236;
    *(unsigned char *)(v238 + 8) = v230;
    sub_1DA7A1AE0(v232, &qword_1EA8E6270);
    unint64_t v239 = (uint64_t *)(v313 + *(int *)(v116 + 48));
    uint64_t v240 = *v239;
    uint64_t v241 = v239[1];
    uint64_t v324 = v240;
    uint64_t v325 = v241;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6880);
    sub_1DA98B278();
    unint64_t v242 = v342;
    uint64_t v243 = v294;
    uint64_t v244 = &v294[*(int *)(v291 + 20)];
    uint64_t v245 = *MEMORY[0x1E4F3D4A0];
    uint64_t v246 = sub_1DA98A938();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v246 - 8) + 104))(v244, v245, v246);
    void *v243 = v242;
    v243[1] = v242;
    uint64_t v247 = (uint64_t)v295;
    uint64_t v248 = (uint64_t)&v295[*(int *)(v290 + 36)];
    uint64_t v249 = (uint64_t (*)(void))MEMORY[0x1E4F3CDB8];
    sub_1DA926C54((uint64_t)v243, v248, MEMORY[0x1E4F3CDB8]);
    *(unsigned char *)(v248 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE636A8) + 36)) = 0;
    sub_1DA7A1F58(v237, v247, &qword_1EA8E6278);
    sub_1DA926CBC((uint64_t)v243, v249);
    sub_1DA7A1AE0(v237, &qword_1EA8E6278);
    uint64_t KeyPath = swift_getKeyPath();
    unint64_t v251 = v298;
    uint64_t v252 = v303;
    (*(void (**)(char *, char *, uint64_t))(v224 + 16))((char *)v298 + *(int *)(v297 + 28), v312, v303);
    *unint64_t v251 = KeyPath;
    uint64_t v253 = v296;
    sub_1DA7A1F58(v247, v296, &qword_1EA8E6858);
    sub_1DA7A1F58((uint64_t)v251, v253 + *(int *)(v293 + 36), &qword_1EBE5ABA0);
    swift_retain();
    sub_1DA7A1AE0((uint64_t)v251, &qword_1EBE5ABA0);
    swift_release();

    swift_release();
    sub_1DA7A1AE0(v247, &qword_1EA8E6858);
    uint64_t v254 = swift_getKeyPath();
    uint64_t v255 = v299;
    sub_1DA7A1F58(v253, v299, &qword_1EA8E6860);
    uint64_t v256 = v255 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6888) + 36);
    *(void *)uint64_t v256 = v254;
    *(unsigned char *)(v256 + 8) = 1;
    sub_1DA7A1AE0(v253, &qword_1EA8E6860);
    return (*(uint64_t (**)(char *, uint64_t))(v224 + 8))(v312, v252);
  }
  if (v81 == *MEMORY[0x1E4F46E08])
  {
    id v110 = objc_msgSend(v284, sel_blackColor);

    uint64_t v112 = (uint64_t)v304;
    uint64_t v111 = v305;
    unsigned char *v304 = 3;
    uint64_t v113 = v309;
    (*(void (**)(uint64_t, void, uint64_t))(v309 + 104))(v112, *MEMORY[0x1E4F46CD0], v111);
    uint64_t v114 = sub_1DA921894(v112);
    uint64_t v115 = v112;
    uint64_t v116 = v310;
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v115, v111);
    id v117 = (id)v114;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v75, v76);
    char v118 = v312;
    if (!v114) {
      goto LABEL_62;
    }
    goto LABEL_61;
  }
  if (v81 == *MEMORY[0x1E4F46E10])
  {
    id v110 = objc_msgSend(v284, sel_blackColor);

    uint64_t v132 = (uint64_t)v304;
    uint64_t v131 = v305;
    unsigned char *v304 = 0;
    uint64_t v133 = v309;
    (*(void (**)(uint64_t, void, uint64_t))(v309 + 104))(v132, *MEMORY[0x1E4F46CD0], v131);
    uint64_t v134 = sub_1DA921894(v132);
    (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v132, v131);
    id v117 = (id)v134;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v75, v76);
    char v118 = v312;
    uint64_t v116 = v310;
    if (!v134) {
      goto LABEL_62;
    }
    goto LABEL_61;
  }
  (*(void (**)(char *, uint64_t))(v80 + 8))(v274, v79);
LABEL_71:
  uint64_t result = sub_1DA98CBB8();
  __break(1u);
  return result;
}

__n128 sub_1DA924CB0@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v6 = sub_1DA98B928();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v32[-v11];
  type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(0);
  sub_1DA98A6D8();
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F46C80], v6);
  sub_1DA921830(&qword_1EBE59FF8, MEMORY[0x1E4F46C88]);
  sub_1DA98C248();
  sub_1DA98C248();
  uint64_t v13 = v89;
  uint64_t v14 = v55;
  uint64_t v15 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v15(v9, v6);
  v15(v12, v6);
  if (v13 == v14)
  {
    uint64_t v16 = sub_1DA98A898();
    uint64_t v17 = sub_1DA98BCC8();
    uint64_t v18 = sub_1DA98BCC8();
    uint64_t v55 = v16;
    double v56 = 0.0;
    char v57 = 1;
    uint64_t v58 = 0;
    LOBYTE(v59) = 1;
    uint64_t v60 = v17;
    uint64_t v61 = v18;
    uint64_t v62 = 0;
    LOBYTE(v63) = 1;
    sub_1DA926D38((uint64_t)&v55);
    sub_1DA7BA440((uint64_t)&v55, (uint64_t)v46, &qword_1EA8E68B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E68C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E68C8);
    sub_1DA7A0410(&qword_1EA8E68D0, &qword_1EA8E68C0);
    sub_1DA7A0410(&qword_1EA8E68D8, &qword_1EA8E68C8);
    sub_1DA98AA68();
  }
  else
  {
    uint64_t v42 = sub_1DA98A898();
    uint64_t v44 = sub_1DA98BCC8();
    uint64_t v43 = sub_1DA98BCC8();
    uint64_t v45 = sub_1DA98B1C8();
    if (qword_1EA8E5538 != -1) {
      swift_once();
    }
    sub_1DA98B3A8();
    sub_1DA98A418();
    char v19 = v76;
    uint64_t v40 = v77;
    uint64_t v41 = v75;
    char v20 = v78;
    uint64_t v38 = v81;
    uint64_t v39 = v79;
    char v21 = v82;
    char v22 = v84;
    uint64_t v36 = v85;
    uint64_t v37 = v83;
    char v23 = v86;
    uint64_t v34 = v88;
    uint64_t v35 = v87;
    char v54 = 0;
    char v53 = v76;
    char v52 = v78;
    unsigned __int8 v51 = v80;
    char v50 = v82;
    char v49 = v84;
    char v48 = v86;
    int v33 = v80;
    uint64_t v24 = v44;
    swift_retain_n();
    uint64_t v25 = v43;
    swift_retain_n();
    uint64_t v26 = v45;
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v55 = v42;
    double v56 = a4;
    char v57 = 0;
    uint64_t v58 = v24;
    uint64_t v59 = v25;
    uint64_t v60 = v26;
    uint64_t v61 = v41;
    LOBYTE(v62) = v19;
    uint64_t v63 = v40;
    char v64 = v20;
    uint64_t v65 = v39;
    char v66 = v33;
    uint64_t v67 = v38;
    char v68 = v21;
    uint64_t v69 = v37;
    char v70 = v22;
    uint64_t v71 = v36;
    char v72 = v23;
    uint64_t v73 = v35;
    uint64_t v74 = v34;
    sub_1DA926D2C((uint64_t)&v55);
    sub_1DA7BA440((uint64_t)&v55, (uint64_t)&v89, &qword_1EA8E68B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E68C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E68C8);
    sub_1DA7A0410(&qword_1EA8E68D0, &qword_1EA8E68C0);
    sub_1DA7A0410(&qword_1EA8E68D8, &qword_1EA8E68C8);
    sub_1DA98AA68();
    swift_release();
    swift_release();
    swift_release();
    long long v97 = v46[8];
    long long v98 = v46[9];
    char v99 = v47;
    long long v93 = v46[4];
    long long v94 = v46[5];
    long long v95 = v46[6];
    long long v96 = v46[7];
    long long v89 = v46[0];
    long long v90 = v46[1];
    long long v91 = v46[2];
    __n128 v92 = (__n128)v46[3];
  }
  long long v27 = v98;
  *(_OWORD *)(a3 + 128) = v97;
  *(_OWORD *)(a3 + 144) = v27;
  *(unsigned char *)(a3 + 160) = v99;
  long long v28 = v94;
  *(_OWORD *)(a3 + 64) = v93;
  *(_OWORD *)(a3 + 80) = v28;
  long long v29 = v96;
  *(_OWORD *)(a3 + 96) = v95;
  *(_OWORD *)(a3 + 112) = v29;
  long long v30 = v90;
  *(_OWORD *)a3 = v89;
  *(_OWORD *)(a3 + 16) = v30;
  __n128 result = v92;
  *(_OWORD *)(a3 + 32) = v91;
  *(__n128 *)(a3 + 48) = result;
  return result;
}

id sub_1DA9252C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DA98B9A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = &v0[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize];
  swift_beginAccess();
  if (*v6 != 1) {
    goto LABEL_7;
  }
  sub_1DA920178((uint64_t)v5);
  sub_1DA98B998();
  CGRectGetWidth(v14);
  sub_1DA98B998();
  CGRectGetHeight(v15);
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v7 = &v1[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming];
  swift_beginAccess();
  if (*v7 == 1)
  {
    id result = objc_msgSend(v1, sel_view);
    if (!result) {
      goto LABEL_9;
    }
    uint64_t v9 = result;
    objc_msgSend(result, sel_frame);
    objc_msgSend(v9, sel_setFrame_);
  }
  id result = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController], sel_view);
  if (result)
  {
    uint64_t v10 = result;
    objc_msgSend(result, sel_frame);
    objc_msgSend(v10, sel_setFrame_);

LABEL_7:
    uint64_t v11 = (objc_class *)type metadata accessor for ActivityPreviewHostingViewController(0);
    v13.receiver = v1;
    v13.super_class = v11;
    return objc_msgSendSuper2(&v13, sel_viewWillLayoutSubviews);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DA92551C()
{
  sub_1DA926CBC(v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_autoupdatingPreviewView, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_environment;
  uint64_t v2 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewKind;
  uint64_t v4 = sub_1DA98BBC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  return swift_release();
}

id ActivityPreviewHostingViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityPreviewHostingViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DA925768@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA98A0C8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA9257EC()
{
  return sub_1DA98A0D8();
}

uint64_t type metadata accessor for ActivityPreviewHostingViewController(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EA8E6828);
}

__n128 sub_1DA925884@<Q0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize);
  swift_beginAccess();
  __n128 result = *v3;
  *a2 = *v3;
  return result;
}

uint64_t sub_1DA9258D8(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize);
  uint64_t result = swift_beginAccess();
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

double sub_1DA925930@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (double *)(*a1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

uint64_t sub_1DA925984(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_1DA9259DC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_isLuminanceReduced);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1DA925A30(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_isLuminanceReduced);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_1DA925A80@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_appName);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA925ADC()
{
  return type metadata accessor for ActivityPreviewHostingViewController(0);
}

uint64_t sub_1DA925AE4()
{
  uint64_t result = type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DA98A888();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1DA98BBC8();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t method lookup function for ActivityPreviewHostingViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ActivityPreviewHostingViewController);
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.islandSize.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.islandSize.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.islandSize.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x258))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.apertureTopEdgeMetric.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.apertureTopEdgeMetric.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x268))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.apertureTopEdgeMetric.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.widgetSize.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.widgetLocation.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.isLuminanceReduced.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.isLuminanceReduced.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.isLuminanceReduced.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.activityFamily.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.appName.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2C0))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.appName.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.appName.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.__allocating_init(viewCollections:currentStateIndex:widgetLocation:environment:viewKind:apertureTopEdgeMetric:islandSize:renderBoxRendersAsynchronously:appName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v8 + 728))(a1, a2, a3, a4, a5, a6, a7, a8 & 1);
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.updateCurrentState(to:disableAnimations:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.numberOfStates.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x300))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.currentStateIndex.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x308))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.leadingCompactMetrics.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x318))();
}

uint64_t sub_1DA9260E4()
{
  return type metadata accessor for ActivityPreviewHostingViewController.StateController(0);
}

uint64_t *sub_1DA9260EC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v9 = (void *)a2[2];
    uint64_t v8 = a2[3];
    a1[2] = (uint64_t)v9;
    a1[3] = v8;
    uint64_t v10 = a3[8];
    long long v29 = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    uint64_t v12 = sub_1DA98A888();
    objc_super v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    id v14 = v9;
    swift_bridgeObjectRetain();
    v13(v29, v11, v12);
    uint64_t v15 = a3[9];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_1DA98BBC8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = a3[11];
    *(_OWORD *)((char *)v4 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
    char v20 = (uint64_t *)((char *)v4 + v19);
    char v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *char v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[12];
    uint64_t v24 = (uint64_t *)((char *)v4 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DA92628C(uint64_t a1, uint64_t a2)
{
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t v7 = sub_1DA98BBC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_1DA92637C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v8 = (void *)a2[2];
  uint64_t v7 = a2[3];
  a1[2] = v8;
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v9 = a3[8];
  uint64_t v27 = (char *)a1 + v9;
  uint64_t v10 = (char *)a2 + v9;
  uint64_t v11 = sub_1DA98A888();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  id v13 = v8;
  swift_bridgeObjectRetain();
  v12(v27, v10, v11);
  uint64_t v14 = a3[9];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1DA98BBC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  uint64_t v19 = (void *)((char *)a1 + v18);
  char v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[12];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_1DA9264D0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a1[2];
  uint64_t v7 = (void *)a2[2];
  a1[2] = v7;
  id v8 = v7;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[8];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1DA98A888();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1DA98BBC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[12];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DA926664(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1DA98BBC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

void *sub_1DA926768(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[8];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1DA98A888();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1DA98BBC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[12];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_release();
  return a1;
}

uint64_t sub_1DA9268AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA9268C0);
}

uint64_t sub_1DA9268C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DA98A888();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1DA98BBC8();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DA9269EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA926A00);
}

uint64_t sub_1DA926A00(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1DA98A888();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1DA98BBC8();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1DA926B2C()
{
  uint64_t result = sub_1DA98A888();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DA98BBC8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DA926C38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA926C54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA926CBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DA926D2C(uint64_t result)
{
  *(unsigned char *)(result + 160) = 1;
  return result;
}

uint64_t sub_1DA926D38(uint64_t result)
{
  *(unsigned char *)(result + 160) = 0;
  return result;
}

unint64_t sub_1DA926D44()
{
  unint64_t result = qword_1EA8E68F0;
  if (!qword_1EA8E68F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E6888);
    sub_1DA926DE4();
    sub_1DA7A0410(&qword_1EBE61D68, &qword_1EBE61D70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E68F0);
  }
  return result;
}

unint64_t sub_1DA926DE4()
{
  unint64_t result = qword_1EA8E68F8;
  if (!qword_1EA8E68F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E6860);
    sub_1DA926E84();
    sub_1DA7A0410(&qword_1EBE5AB98, &qword_1EBE5ABA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E68F8);
  }
  return result;
}

unint64_t sub_1DA926E84()
{
  unint64_t result = qword_1EA8E6900;
  if (!qword_1EA8E6900)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E6858);
    sub_1DA86F6E8();
    sub_1DA7A0410(&qword_1EBE636A0, &qword_1EBE636A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6900);
  }
  return result;
}

void *BlockAssertion.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = (_DWORD *)swift_slowAlloc();
  *uint64_t v6 = 0;
  *(void *)(v5 + 16) = v6;
  v4[2] = v5;
  v4[3] = a1;
  v4[4] = a2;
  sub_1DA7AD81C(0);
  return v4;
}

uint64_t Assertion.mergingLifetimes(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  double v10 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, v12, a2, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = a2;
  *((void *)v14 + 3) = a3;
  *((void *)v14 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v14[v13], v11, a2);
  uint64_t v15 = type metadata accessor for BlockAssertion();
  uint64_t v16 = (void *)swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v17 = swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v18 = (_DWORD *)swift_slowAlloc();
  *uint64_t v18 = 0;
  *(void *)(v17 + 16) = v18;
  void v16[2] = v17;
  v16[3] = sub_1DA927358;
  v16[4] = v14;
  uint64_t result = sub_1DA7AD81C(0);
  a4[3] = v15;
  a4[4] = &protocol witness table for BlockAssertion;
  *a4 = v16;
  return result;
}

uint64_t sub_1DA927148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v7 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1DA7A1A44(v7, (uint64_t)v11);
      uint64_t v8 = v12;
      uint64_t v9 = v13;
      __swift_project_boxed_opaque_existential_0(v11, v12);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
}

void *BlockAssertion.init(_:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for UnfairLock();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = (_DWORD *)swift_slowAlloc();
  *uint64_t v6 = 0;
  *(void *)(v5 + 16) = v6;
  v2[2] = v5;
  v2[3] = a1;
  v2[4] = a2;
  sub_1DA7AD81C(0);
  return v2;
}

uint64_t sub_1DA927294()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1DA927358()
{
  return sub_1DA927148(v0[4], (uint64_t)v0+ ((*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80)), v0[2], v0[3]);
}

uint64_t type metadata accessor for BlockAssertion()
{
  return self;
}

Swift::Void __swiftcall BlockAssertion.invalidate()()
{
  uint64_t v1 = v0[2];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  uint64_t v2 = (void (*)(uint64_t))v0[3];
  v0[3] = 0;
  v0[4] = 0;
  sub_1DA7AE2F8((uint64_t)v2);
  sub_1DA7AD81C((uint64_t)v2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  if (v2)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    sub_1DA7AD81C((uint64_t)v2);
    sub_1DA7AD81C((uint64_t)v2);
  }
}

uint64_t BlockAssertion.deinit()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 24);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    sub_1DA7AD81C((uint64_t)v1);
  }
  swift_release();
  sub_1DA7AD81C(*(void *)(v0 + 24));
  return v0;
}

uint64_t BlockAssertion.__deallocating_deinit()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 24);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    sub_1DA7AD81C((uint64_t)v1);
  }
  swift_release();
  sub_1DA7AD81C(*(void *)(v0 + 24));

  return swift_deallocClassInstance();
}

void sub_1DA927544()
{
}

uint64_t dispatch thunk of Assertion.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for BlockAssertion(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlockAssertion);
}

uint64_t dispatch thunk of BlockAssertion.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1DA9275A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_1DA98CDF8();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    uint64_t v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  uint64_t v9 = (void *)sub_1DA9892C8();

  id v10 = objc_msgSend(v9, sel_debugDescription);
  uint64_t v11 = sub_1DA98C038();

  return v11;
}

uint64_t sub_1DA927728()
{
  sub_1DA927BC0();
  uint64_t result = sub_1DA98C818();
  qword_1EBE6F358 = result;
  return result;
}

uint64_t sub_1DA927790()
{
  sub_1DA927BC0();
  uint64_t result = sub_1DA98C818();
  qword_1EBE6F360 = result;
  return result;
}

uint64_t sub_1DA9277F4()
{
  sub_1DA927BC0();
  uint64_t result = sub_1DA98C818();
  qword_1EA8ED7D0 = result;
  return result;
}

uint64_t sub_1DA927854(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F448);
}

uint64_t sub_1DA92787C(uint64_t a1)
{
  return sub_1DA92793C(a1, qword_1EBE6F318, &qword_1EBE62C98, (id *)&qword_1EBE6F360);
}

uint64_t sub_1DA9278A8(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F188);
}

uint64_t sub_1DA9278C0(uint64_t a1)
{
  return sub_1DA92793C(a1, qword_1EBE6F2E8, &qword_1EBE62D00, (id *)&qword_1EBE6F358);
}

uint64_t sub_1DA9278EC(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F0F0);
}

uint64_t sub_1DA927910(uint64_t a1)
{
  return sub_1DA92793C(a1, qword_1EA8ED7D8, qword_1EA8E5540, (id *)&qword_1EA8ED7D0);
}

uint64_t sub_1DA92793C(uint64_t a1, uint64_t *a2, void *a3, id *a4)
{
  uint64_t v7 = sub_1DA989F38();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  id v8 = *a4;
  return sub_1DA989F48();
}

uint64_t sub_1DA9279C8(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F090);
}

uint64_t sub_1DA9279EC(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F150);
}

uint64_t sub_1DA927A10(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F138);
}

uint64_t sub_1DA927A34(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F300);
}

uint64_t sub_1DA927A50(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F0A8);
}

uint64_t sub_1DA927A70(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F1F8);
}

uint64_t sub_1DA927A94(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F478);
}

uint64_t sub_1DA927AC0(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F258);
}

uint64_t sub_1DA927AEC(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F168);
}

uint64_t sub_1DA927B0C(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EA8ED7F0);
}

uint64_t sub_1DA927B2C(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F1E0);
}

uint64_t sub_1DA927B54(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EA8ED808);
}

uint64_t sub_1DA927B74(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EA8ED820);
}

uint64_t sub_1DA927BA0(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EA8ED838);
}

unint64_t sub_1DA927BC0()
{
  unint64_t result = qword_1EBE62B60;
  if (!qword_1EBE62B60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE62B60);
  }
  return result;
}

uint64_t sub_1DA927C00(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F0D8);
}

uint64_t sub_1DA927C24(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F270);
}

uint64_t sub_1DA927C40(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F240);
}

uint64_t sub_1DA927C68(uint64_t a1)
{
  return sub_1DA8E4874(a1, qword_1EBE6F288);
}

void sub_1DA927C90(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = (void *)sub_1DA9892C8();
  if (a2)
  {
    id v5 = v4;
    swift_bridgeObjectRetain_n();
    id v27 = v5;
    uint64_t v6 = sub_1DA989F18();
    os_log_type_t v7 = sub_1DA98C528();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v28 = v9;
      *(_DWORD *)uint64_t v8 = 136446978;
      swift_bridgeObjectRetain();
      sub_1DA8C5E00(a1, a2, &v28);
      sub_1DA98C858();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2082;
      id v10 = objc_msgSend(v27, sel_domain);
      uint64_t v11 = sub_1DA98C038();
      unint64_t v13 = v12;

      sub_1DA8C5E00(v11, v13, &v28);
      sub_1DA98C858();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 22) = 2048;
      objc_msgSend(v27, sel_code);

      sub_1DA98C858();
      *(_WORD *)(v8 + 32) = 2082;
      id v14 = objc_msgSend(v27, sel_debugDescription);
      uint64_t v15 = sub_1DA98C038();
      unint64_t v17 = v16;

      sub_1DA8C5E00(v15, v17, &v28);
      sub_1DA98C858();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA795000, v6, v7, "%{public}s: %{public}s (%ld) %{public}s", (uint8_t *)v8, 0x2Au);
LABEL_6:
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v9, -1, -1);
      MEMORY[0x1E0178DA0](v8, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    id v27 = v4;
    uint64_t v6 = sub_1DA989F18();
    os_log_type_t v18 = sub_1DA98C528();
    if (os_log_type_enabled(v6, v18))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v28 = v9;
      *(_DWORD *)uint64_t v8 = 136446722;
      id v19 = objc_msgSend(v27, sel_domain);
      uint64_t v20 = sub_1DA98C038();
      unint64_t v22 = v21;

      sub_1DA8C5E00(v20, v22, &v28);
      sub_1DA98C858();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2048;
      objc_msgSend(v27, sel_code);

      sub_1DA98C858();
      *(_WORD *)(v8 + 22) = 2082;
      id v23 = objc_msgSend(v27, sel_debugDescription);
      uint64_t v24 = sub_1DA98C038();
      unint64_t v26 = v25;

      sub_1DA8C5E00(v24, v26, &v28);
      sub_1DA98C858();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA795000, v6, v18, "%{public}s (%ld) %{public}s", (uint8_t *)v8, 0x20u);
      goto LABEL_6;
    }
  }
}

void TimelineKey.init(widget:)(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_extensionIdentity);
  id v5 = objc_msgSend(a1, sel_kind);
  uint64_t v6 = sub_1DA98C038();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(a1, sel_intentReference);
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v8;
  a2[3] = v9;
}

id TimelineKey.extensionIdentity.getter()
{
  return *v0;
}

uint64_t TimelineKey.extensionBundleIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + *MEMORY[0x1E4F58B80];
  swift_beginAccess();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TimelineKey.containerBundleIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + *MEMORY[0x1E4F58B78];
  swift_beginAccess();
  return sub_1DA8EB260(v3, a1);
}

uint64_t TimelineKey.kind.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void *TimelineKey.intentReference.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t TimelineKey.init(extensionIdentity:kind:intentReference:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t TimelineKey.init(widgetEntryKey:)@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v4 = *a1;
  id v5 = objc_msgSend(v4, sel_extensionIdentity);
  id v6 = objc_msgSend(v4, sel_kind);
  uint64_t v7 = sub_1DA98C038();
  uint64_t v9 = v8;

  id v10 = objc_msgSend(v4, sel_intentReference);
  uint64_t result = sub_1DA81BAB4((uint64_t)a1);
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v10;
  return result;
}

uint64_t TimelineKey.matches(personality:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v23 - v8;
  uint64_t v10 = v1[1];
  uint64_t v11 = v1[2];
  uint64_t v12 = *v1 + *MEMORY[0x1E4F58B80];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v12, v3);
  id v13 = objc_msgSend(a1, sel_extensionBundleIdentifier);
  sub_1DA98C038();

  sub_1DA9899B8();
  sub_1DA928714();
  sub_1DA98C248();
  sub_1DA98C248();
  if (v23[3] == v23[1] && v23[4] == v23[2])
  {
    swift_bridgeObjectRelease_n();
    id v14 = *(void (**)(char *, uint64_t))(v4 + 8);
    v14(v6, v3);
    v14(v9, v3);
  }
  else
  {
    char v15 = sub_1DA98CE58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
    v16(v6, v3);
    v16(v9, v3);
    char v17 = 0;
    if ((v15 & 1) == 0) {
      return v17 & 1;
    }
  }
  id v18 = objc_msgSend(a1, sel_kind);
  uint64_t v19 = sub_1DA98C038();
  uint64_t v21 = v20;

  if (v10 == v19 && v11 == v21) {
    char v17 = 1;
  }
  else {
    char v17 = sub_1DA98CE58();
  }
  swift_bridgeObjectRelease();
  return v17 & 1;
}

unint64_t sub_1DA928714()
{
  unint64_t result = qword_1EBE5A118;
  if (!qword_1EBE5A118)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE66CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE5A118);
  }
  return result;
}

uint64_t TimelineKey.matches(widget:)(void *a1)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = (void *)v1[3];
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
  id v6 = objc_msgSend(a1, sel_extensionIdentity);
  char v7 = sub_1DA98C7A8();

  if (v7)
  {
    id v8 = objc_msgSend(a1, sel_kind);
    uint64_t v9 = sub_1DA98C038();
    uint64_t v11 = v10;

    if (v3 == v9 && v4 == v11)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = sub_1DA98CE58();
      swift_bridgeObjectRelease();
      char v14 = 0;
      if ((v13 & 1) == 0) {
        return v14 & 1;
      }
    }
    id v15 = v5;
    id v16 = objc_msgSend(a1, sel_intentReference);
    id v17 = v16;
    if (v5)
    {
      if (!v16)
      {
        char v14 = 0;
        goto LABEL_17;
      }
      sub_1DA7A1A08(0, &qword_1EBE5A6B0);
      id v18 = v15;
      char v14 = sub_1DA98C7A8();
    }
    else
    {
      if (!v16)
      {
        char v14 = 1;
        return v14 & 1;
      }
      char v14 = 0;
    }
    id v15 = v17;
LABEL_17:

    return v14 & 1;
  }
  char v14 = 0;
  return v14 & 1;
}

void TimelineKey.hash(into:)()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = *(id *)v0;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1DA98CF38();
    id v3 = v1;
    sub_1DA98C7B8();
  }
  else
  {
    sub_1DA98CF38();
  }
}

uint64_t TimelineKey.hashValue.getter()
{
  uint64_t v1 = *(void **)v0;
  id v2 = *(void **)(v0 + 24);
  sub_1DA98CF18();
  id v3 = v1;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  sub_1DA98CF38();
  if (v2)
  {
    id v4 = v2;
    sub_1DA98C7B8();
  }
  return sub_1DA98CF68();
}

void sub_1DA928A9C()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = *(id *)v0;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1DA98CF38();
    id v3 = v1;
    sub_1DA98C7B8();
  }
  else
  {
    sub_1DA98CF38();
  }
}

uint64_t sub_1DA928B70()
{
  uint64_t v1 = *(void **)v0;
  id v2 = *(void **)(v0 + 24);
  sub_1DA98CF18();
  id v3 = v1;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  sub_1DA98CF38();
  if (v2)
  {
    id v4 = v2;
    sub_1DA98C7B8();
  }
  return sub_1DA98CF68();
}

uint64_t TimelineKey.description.getter()
{
  uint64_t v1 = *(void **)v0;
  id v2 = *(void **)(v0 + 24);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v3, sel_stableHash);
    sub_1DA98CDD8();
    sub_1DA98C148();

    swift_bridgeObjectRelease();
  }
  id v4 = v1;
  id v5 = objc_msgSend(v4, sel_description);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return 91;
}

BOOL _s9ChronoKit11TimelineKeyV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  unint64_t v4 = a1[3];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
  if ((sub_1DA98C7A8() & 1) == 0) {
    return 0;
  }
  BOOL v8 = v2 == v5 && v3 == v6;
  if (v8 || (v9 = sub_1DA98CE58(), BOOL result = 0, (v9 & 1) != 0))
  {
    BOOL result = (v4 | v7) == 0;
    if (v4)
    {
      if (v7)
      {
        sub_1DA7A1A08(0, &qword_1EBE5A6B0);
        id v11 = (id)v7;
        id v12 = (id)v4;
        char v13 = sub_1DA98C7A8();

        return v13 & 1;
      }
    }
  }
  return result;
}

unint64_t sub_1DA928E8C()
{
  unint64_t result = qword_1EBE591D8;
  if (!qword_1EBE591D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE591D8);
  }
  return result;
}

void destroy for TimelineKey(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for TimelineKey(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  id v7 = v5;
  return a1;
}

uint64_t assignWithCopy for TimelineKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a1 + 24);
  BOOL v8 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for TimelineKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for TimelineKey()
{
  return &type metadata for TimelineKey;
}

uint64_t DescriptorCollection.descriptors.getter()
{
  swift_getKeyPath();
  sub_1DA98C708();
  sub_1DA98C378();
  sub_1DA92A4D8();
  sub_1DA98BF68();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v0 = sub_1DA98C228();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DescriptorCollection.descriptors<A>(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))(*(void *)(v3 + 16));
}

uint64_t DescriptorCollection.count.getter()
{
  DescriptorCollection.descriptors.getter();
  uint64_t v0 = MEMORY[0x1E01774C0]();
  swift_bridgeObjectRelease();
  return v0;
}

id WidgetDescriptorPredicate.widget.getter()
{
  return *v0;
}

void WidgetDescriptorPredicate.widget.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*WidgetDescriptorPredicate.widget.modify())()
{
  return CGSizeMake;
}

uint64_t sub_1DA929270@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = WidgetDescriptorPredicate.evaluate(with:)();
  *a1 = result;
  return result;
}

uint64_t (*ControlDescriptorPredicate.control.modify())()
{
  return CGSizeMake;
}

uint64_t _s9ChronoKit25WidgetDescriptorPredicateV8evaluate4withSo09CHSWidgetD0CSgSDySo20CHSExtensionIdentityCSayAGGG_tF_0(uint64_t a1)
{
  id v3 = *v1;
  id v4 = objc_msgSend(*v1, sel_extensionIdentity);
  id v5 = v4;
  if (*(void *)(a1 + 16) && (unint64_t v6 = sub_1DA7FE920((uint64_t)v4), (v7 & 1) != 0))
  {
    unint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain();

    id v5 = v3;
    uint64_t v9 = sub_1DA92BD00(v8, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

uint64_t (*IdentityDescriptorPredicate.identity.modify())()
{
  return CGSizeMake;
}

void *IdentityDescriptorPredicate.evaluate(with:)(uint64_t a1)
{
  return sub_1DA929474(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DA970A94, &qword_1EBE63368);
}

void *DescriptorCollection.__allocating_init(descriptorsByExtensionIdentity:)(uint64_t a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = type metadata accessor for DefaultFeatureFlagEvaluator();
  uint64_t v4 = swift_allocObject();
  v2[6] = v3;
  v2[7] = &off_1F34DD4B0;
  v2[2] = a1;
  v2[3] = v4;
  return v2;
}

uint64_t sub_1DA929414@<X0>(void *a1@<X8>)
{
  return sub_1DA92954C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DA970A94, &qword_1EBE63368, a1);
}

uint64_t (*IdentityControlDescriptorPredicate.identity.modify())()
{
  return CGSizeMake;
}

void *IdentityControlDescriptorPredicate.evaluate(with:)(uint64_t a1)
{
  return sub_1DA929474(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DA970AA0, &qword_1EBE59F68);
}

void *sub_1DA929474(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  id v6 = *v3;
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DA92C1D4(v7, v6, a2);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = type metadata accessor for DefaultFeatureFlagEvaluator();
  uint64_t v11 = swift_allocObject();
  v9[6] = v10;
  v9[7] = &off_1F34DD4B0;
  unint64_t v9[2] = v8;
  v9[3] = v11;
  return v9;
}

uint64_t sub_1DA92952C@<X0>(void *a1@<X8>)
{
  return sub_1DA92954C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DA970AA0, &qword_1EBE59F68, a1);
}

uint64_t sub_1DA92954C@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t *a2@<X4>, void *a3@<X8>)
{
  id v7 = *v3;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1DA92C1D4(v8, v7, a1);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = type metadata accessor for DefaultFeatureFlagEvaluator();
  uint64_t result = swift_allocObject();
  v10[6] = v11;
  v10[7] = &off_1F34DD4B0;
  v10[2] = v9;
  void v10[3] = result;
  *a3 = v10;
  return result;
}

uint64_t ContainerKindDescriptorPredicate.containerBundleIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ContainerKindDescriptorPredicate.containerBundleIdentifier.setter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ContainerKindDescriptorPredicate.containerBundleIdentifier.modify())()
{
  return CGSizeMake;
}

uint64_t ContainerKindDescriptorPredicate.kind.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ContainerKindDescriptorPredicate() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContainerKindDescriptorPredicate.kind.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + *(int *)(type metadata accessor for ContainerKindDescriptorPredicate() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

double (*ContainerKindDescriptorPredicate.kind.modify())(void, void, void, void)
{
  return CGSizeMake;
}

id ContainerKindDescriptorPredicate.evaluate(with:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v63 = type metadata accessor for ContainerKindDescriptorPredicate();
  MEMORY[0x1F4188790](v63);
  uint64_t v74 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v62 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59770);
  MEMORY[0x1F4188790](v70);
  uint64_t v76 = (uint64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0F0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v55 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v75 = (uint64_t)&v55 - v16;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v56 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v57 = (unint64_t)(v18 + 63) >> 6;
  char v68 = (void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v69 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v67 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v61 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  char v64 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v58 = a1;
  id result = (id)swift_bridgeObjectRetain();
  int64_t v22 = 0;
  uint64_t v65 = v11;
  char v66 = v14;
  while (1)
  {
    if (v20)
    {
      unint64_t v23 = __clz(__rbit64(v20));
      uint64_t v24 = (v20 - 1) & v20;
      unint64_t v25 = v23 | (v22 << 6);
    }
    else
    {
      int64_t v26 = v22 + 1;
      if (__OFADD__(v22, 1)) {
        goto LABEL_47;
      }
      if (v26 >= v57) {
        goto LABEL_45;
      }
      unint64_t v27 = *(void *)(v56 + 8 * v26);
      ++v22;
      if (!v27)
      {
        int64_t v22 = v26 + 1;
        if (v26 + 1 >= v57) {
          goto LABEL_45;
        }
        unint64_t v27 = *(void *)(v56 + 8 * v22);
        if (!v27)
        {
          int64_t v22 = v26 + 2;
          if (v26 + 2 >= v57) {
            goto LABEL_45;
          }
          unint64_t v27 = *(void *)(v56 + 8 * v22);
          if (!v27)
          {
            int64_t v28 = v26 + 3;
            if (v28 >= v57) {
              goto LABEL_45;
            }
            unint64_t v27 = *(void *)(v56 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                int64_t v22 = v28 + 1;
                if (__OFADD__(v28, 1)) {
                  goto LABEL_48;
                }
                if (v22 >= v57) {
                  break;
                }
                unint64_t v27 = *(void *)(v56 + 8 * v22);
                ++v28;
                if (v27) {
                  goto LABEL_20;
                }
              }
LABEL_45:
              swift_release();
              return 0;
            }
            int64_t v22 = v28;
          }
        }
      }
LABEL_20:
      uint64_t v24 = (v27 - 1) & v27;
      unint64_t v25 = __clz(__rbit64(v27)) + (v22 << 6);
    }
    int64_t v60 = v22;
    unint64_t v29 = *(void *)(*(void *)(v58 + 56) + 8 * v25);
    unint64_t v59 = v24;
    if (v29 >> 62) {
      break;
    }
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v30) {
      goto LABEL_23;
    }
LABEL_4:
    id result = (id)swift_bridgeObjectRelease_n();
    unint64_t v20 = v59;
    int64_t v22 = v60;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_1DA98CBD8();
  swift_bridgeObjectRelease();
  if (!v30) {
    goto LABEL_4;
  }
LABEL_23:
  unint64_t v72 = v29;
  unint64_t v73 = v29 & 0xC000000000000001;
  uint64_t v31 = 4;
  uint64_t v71 = v30;
  while (1)
  {
    id result = v73 ? (id)MEMORY[0x1E0177C00](v31 - 4, v29) : *(id *)(v29 + 8 * v31);
    int v33 = result;
    uint64_t v34 = v31 - 3;
    if (__OFADD__(v31 - 4, 1)) {
      break;
    }
    uint64_t v35 = (char *)objc_msgSend(result, sel_extensionIdentity);
    uint64_t v36 = &v35[*MEMORY[0x1E4F58B78]];
    swift_beginAccess();
    uint64_t v37 = (uint64_t)v36;
    uint64_t v38 = v75;
    sub_1DA8EB260(v37, v75);

    (*v69)(v14, v2, v5);
    (*v68)(v14, 0, 1, v5);
    uint64_t v39 = v76;
    uint64_t v40 = v76 + *(int *)(v70 + 48);
    sub_1DA8EB260(v38, v76);
    sub_1DA8EB260((uint64_t)v14, v40);
    uint64_t v41 = *v67;
    if ((*v67)(v39, 1, v5) == 1)
    {
      if (v41(v40, 1, v5) != 1) {
        goto LABEL_35;
      }
      sub_1DA7A1AE0(v76, &qword_1EBE5A0F0);
      sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE5A0F0);
      sub_1DA7A1AE0(v75, &qword_1EBE5A0F0);
      sub_1DA92C3D0(v2, v74);
    }
    else
    {
      uint64_t v42 = (uint64_t)v65;
      sub_1DA8EB260(v76, (uint64_t)v65);
      if (v41(v40, 1, v5) == 1)
      {
        (*v64)(v42, v5);
        char v14 = v66;
LABEL_35:
        sub_1DA7A1AE0(v76, &qword_1EBE59770);
        sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE5A0F0);
        sub_1DA7A1AE0(v75, &qword_1EBE5A0F0);
        sub_1DA92C3D0(v2, v74);
LABEL_36:
        sub_1DA92C434(v74);
        goto LABEL_25;
      }
      uint64_t v43 = v62;
      (*v61)(v62, v40, v5);
      sub_1DA92C490();
      char v44 = sub_1DA98BFF8();
      uint64_t v45 = *v64;
      (*v64)(v42, v5);
      uint64_t v46 = v43;
      uint64_t v47 = v74;
      v45((uint64_t)v46, v5);
      sub_1DA7A1AE0(v76, &qword_1EBE5A0F0);
      char v14 = v66;
      sub_1DA7A1AE0((uint64_t)v66, &qword_1EBE5A0F0);
      sub_1DA7A1AE0(v75, &qword_1EBE5A0F0);
      sub_1DA92C3D0(v2, v47);
      if ((v44 & 1) == 0) {
        goto LABEL_36;
      }
    }
    uint64_t v48 = v74;
    uint64_t v49 = v2;
    id v50 = objc_msgSend(v33, sel_kind);
    uint64_t v51 = sub_1DA98C038();
    uint64_t v53 = v52;

    char v54 = (void *)(v48 + *(int *)(v63 + 20));
    if (v51 == *v54 && v53 == v54[1])
    {
      swift_bridgeObjectRelease();
      sub_1DA92C434(v48);
LABEL_43:
      swift_release();
      swift_bridgeObjectRelease_n();
      return v33;
    }
    char v32 = sub_1DA98CE58();
    swift_bridgeObjectRelease();
    sub_1DA92C434(v48);
    uint64_t v2 = v49;
    char v14 = v66;
    if (v32) {
      goto LABEL_43;
    }
LABEL_25:

    ++v31;
    unint64_t v29 = v72;
    if (v34 == v71) {
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

id sub_1DA929F90@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = ContainerKindDescriptorPredicate.evaluate(with:)(a1);
  *a2 = result;
  return result;
}

id static DescriptorPredicate<>.identityWithControls(_:)@<X0>(id a1@<X0>, id *a2@<X8>)
{
  *a2 = a1;
  return a1;
}

uint64_t static DescriptorPredicate<>.container(_:kind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a4, a1, v8);
  uint64_t v9 = (void *)(a4 + *(int *)(type metadata accessor for ContainerKindDescriptorPredicate() + 20));
  void *v9 = a2;
  v9[1] = a3;

  return swift_bridgeObjectRetain();
}

uint64_t DescriptorCollectionFilter.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t DescriptorCollectionFilter.init(rawValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  a2[1] = 0;
  return result;
}

double static DescriptorCollectionFilter.excludeInternal.getter@<D0>(_OWORD *a1@<X8>)
{
  *(void *)&double result = 1;
  *a1 = xmmword_1DA999160;
  return result;
}

double static DescriptorCollectionFilter.remoteSupportedOnly.getter@<D0>(_OWORD *a1@<X8>)
{
  *(void *)&double result = 2;
  *a1 = xmmword_1DA999170;
  return result;
}

double static DescriptorCollectionFilter.excludeDisabled.getter@<D0>(_OWORD *a1@<X8>)
{
  *(void *)&double result = 4;
  *a1 = xmmword_1DA999180;
  return result;
}

uint64_t DescriptorCollectionFilter.enabledDescriptorsByFeatureFlag.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DescriptorCollectionFilter.enabledDescriptorsByFeatureFlag.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DescriptorCollectionFilter.enabledDescriptorsByFeatureFlag.modify())()
{
  return CGSizeMake;
}

void *sub_1DA92A0F0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  a2[1] = 0;
  return result;
}

void sub_1DA92A0FC(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_1DA92A104@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *a1;
  a2[1] = 0;
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA92A14C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *a1;
  a2[1] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA92A160@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *a1;
  a2[1] = 0;
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

BOOL sub_1DA92A1A8(void *a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v6 = *v2;
  uint64_t v7 = *v2 & *a2;
  if (v7 == *a2)
  {
    uint64_t v8 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6 | v5;
    v2[1] = 0;
    uint64_t v8 = v4;
  }
  *a1 = v5;
  a1[1] = v8;
  swift_bridgeObjectRelease();
  return v7 != v5;
}

uint64_t *sub_1DA92A234@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *result;
  uint64_t v5 = *v2;
  uint64_t v6 = *v2 & *result;
  if (v6)
  {
    uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    *uint64_t v2 = v5 & ~v4;
    v2[1] = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  *a2 = v6;
  a2[1] = v7;
  return result;
}

uint64_t sub_1DA92A294@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *v2;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = v5 | v4;
  v2[1] = 0;
  *a2 = v5 & v4;
  a2[1] = (v5 & v4) == 0;
  return result;
}

uint64_t sub_1DA92A2EC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *v1;
  swift_bridgeObjectRelease();
  *uint64_t v1 = v3 | v2;
  v1[1] = 0;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA92A33C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *v1;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v3 & v2;
  v1[1] = 0;
  return result;
}

uint64_t sub_1DA92A374(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *v1;
  swift_bridgeObjectRelease();
  *uint64_t v1 = v3 ^ v2;
  v1[1] = 0;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA92A3C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *v2;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 & ~v4;
  a2[1] = 0;
  return result;
}

uint64_t sub_1DA92A400(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *v1;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v3 & ~v2;
  v1[1] = 0;
  return result;
}

uint64_t DescriptorCollection.descriptorsByExtensionIdentity.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1DA92A444(id *a1)
{
  id v1 = *a1;
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_bridgeObjectRelease();
}

void sub_1DA92A4BC(id *a1)
{
}

unint64_t sub_1DA92A4D8()
{
  unint64_t result = qword_1EBE63FF0;
  if (!qword_1EBE63FF0)
  {
    sub_1DA98C708();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63FF0);
  }
  return result;
}

void DescriptorCollection.isEmpty.getter()
{
  sub_1DA98C708();
  sub_1DA98C378();
  sub_1DA92A4D8();

  JUMPOUT(0x1E01770C0);
}

uint64_t DescriptorCollection.allExtensionIdentities.getter()
{
  return sub_1DA98C438();
}

void *DescriptorCollection.init(descriptorsByExtensionIdentity:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DefaultFeatureFlagEvaluator();
  uint64_t v4 = swift_allocObject();
  v1[6] = v3;
  v1[7] = &off_1F34DD4B0;
  v1[2] = a1;
  v1[3] = v4;
  return v1;
}

void *DescriptorCollection.filter(_:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(v1 + 16);
  if (*a1)
  {
    MEMORY[0x1F4188790](a1);
    sub_1DA98C708();
    sub_1DA98C378();
    sub_1DA92A4D8();
    uint64_t v3 = sub_1DA98BEB8();
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  if ((v2 & 2) != 0)
  {
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A788);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DA994650;
    sub_1DA9899A8();
    sub_1DA9899A8();
    sub_1DA8823B0(v4);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v5 = swift_deallocClassInstance();
    MEMORY[0x1F4188790](v5);
    sub_1DA98C708();
    sub_1DA98C378();
    sub_1DA92A4D8();
    uint64_t v3 = sub_1DA98BF08();
    swift_bridgeObjectRelease();
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    sub_1DA98C708();
    sub_1DA98C378();
    sub_1DA92A4D8();
    uint64_t v6 = sub_1DA98BEB8();
    swift_bridgeObjectRelease();
    uint64_t v3 = v6;
  }
  return DescriptorCollection.__allocating_init(descriptorsByExtensionIdentity:)(v3);
}

uint64_t sub_1DA92A9E8@<X0>(uint64_t *a1@<X8>)
{
  sub_1DA98C378();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v2 = sub_1DA98CAA8();
  swift_getWitnessTable();
  uint64_t result = sub_1DA98C4A8();
  if (result)
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v2 = 0;
  }
  *a1 = v2;
  return result;
}

BOOL sub_1DA92AAD8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1 + *MEMORY[0x1E4F58B80];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  LOBYTE(a3) = sub_1DA8551C4((uint64_t)v8, a3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (a3 & 1) == 0;
}

uint64_t sub_1DA92AC10@<X0>(uint64_t *a1@<X8>)
{
  sub_1DA98C378();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v2 = sub_1DA98CAA8();
  swift_getWitnessTable();
  uint64_t result = sub_1DA98C4A8();
  if (result)
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v2 = 0;
  }
  *a1 = v2;
  return result;
}

void sub_1DA92AD10(void **a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = (char **)sub_1DA989F38();
  uint64_t v5 = (uint64_t)*(v4 - 1);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  if (!objc_msgSend(v9, sel_isEnabled, v6)) {
    return;
  }
  id v10 = objc_msgSend(v9, sel_requiredFeatureFlags);
  if (!v10) {
    return;
  }
  uint64_t v11 = v10;
  sub_1DA7A1A08(0, (unint64_t *)&unk_1EA8E6908);
  unint64_t v12 = sub_1DA98C288();

  if (!(v12 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_5;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_20:
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1DA98CBD8();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v47 = v8;
  uint64_t v48 = v5;
  uint64_t v46 = v4;
  unint64_t v49 = v2;
  char v14 = self;
  unint64_t v2 = v12 & 0xC000000000000001;
  uint64_t v5 = 4;
  uint64_t v4 = &selRef_alpha;
  while (1)
  {
    if (v2) {
      uint64_t v15 = (char *)MEMORY[0x1E0177C00](v5 - 4, v12);
    }
    else {
      uint64_t v15 = (char *)*(id *)(v12 + 8 * v5);
    }
    uint64_t v8 = v15;
    uint64_t v16 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_20;
    }
    if ((objc_msgSend(v14, sel_isFeatureFlagEnabled_, v15) & 1) == 0) {
      break;
    }

    ++v5;
    if (v16 == v13)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1EBE59778 != -1) {
    swift_once();
  }
  uint64_t v17 = (uint64_t)v46;
  uint64_t v18 = __swift_project_value_buffer((uint64_t)v46, (uint64_t)qword_1EBE6F138);
  unint64_t v20 = v47;
  uint64_t v19 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v18, v17);
  uint64_t v21 = v8;
  id v22 = v9;
  unint64_t v23 = v21;
  id v24 = v22;
  unint64_t v25 = sub_1DA989F18();
  int v26 = sub_1DA98C548();
  if (os_log_type_enabled(v25, (os_log_type_t)v26))
  {
    int v44 = v26;
    os_log_t v45 = v25;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v27 = 136315650;
    id v28 = objc_msgSend(v24, sel_succinctDescription);
    if (v28)
    {
      unint64_t v29 = v28;
      uint64_t v30 = sub_1DA98C038();
      unint64_t v32 = v31;

      uint64_t v50 = sub_1DA8C5E00(v30, v32, &v51);
      sub_1DA98C858();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      id v33 = objc_msgSend(v23, sel_domain);
      uint64_t v34 = sub_1DA98C038();
      unint64_t v36 = v35;

      uint64_t v50 = sub_1DA8C5E00(v34, v36, &v51);
      sub_1DA98C858();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2080;
      id v37 = objc_msgSend(v23, sel_featureName);
      uint64_t v38 = sub_1DA98C038();
      unint64_t v40 = v39;

      uint64_t v50 = sub_1DA8C5E00(v38, v40, &v51);
      sub_1DA98C858();

      swift_bridgeObjectRelease();
      os_log_t v41 = v45;
      _os_log_impl(&dword_1DA795000, v45, (os_log_type_t)v44, "filtering out %s due to feature flag: %s:%s", (uint8_t *)v27, 0x20u);
      uint64_t v42 = v43;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v42, -1, -1);
      MEMORY[0x1E0178DA0](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v17);
    }
    else
    {

      __break(1u);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v17);
  }
}

void *DescriptorCollection.filter(_:)()
{
  sub_1DA98C708();
  sub_1DA98C378();
  sub_1DA92A4D8();
  uint64_t v16 = sub_1DA98BE48();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v14 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t i = v5 & v3;
  int64_t v15 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (i) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v8++, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v8 >= v15) {
    goto LABEL_25;
  }
  uint64_t v10 = *(void *)(v14 + 8 * v8);
  if (v10) {
    goto LABEL_15;
  }
  int64_t v11 = v8 + 1;
  if (v8 + 1 >= v15)
  {
LABEL_25:
    swift_release();
    return DescriptorCollection.__allocating_init(descriptorsByExtensionIdentity:)(v16);
  }
  uint64_t v10 = *(void *)(v14 + 8 * v11);
  if (!v10)
  {
    int64_t v11 = v8 + 2;
    if (v8 + 2 < v15)
    {
      uint64_t v10 = *(void *)(v14 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      while (1)
      {
        int64_t v8 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          break;
        }
        if (v8 >= v15) {
          goto LABEL_25;
        }
        uint64_t v10 = *(void *)(v14 + 8 * v8);
        ++v11;
        if (v10) {
          goto LABEL_15;
        }
      }
LABEL_27:
      __break(1u);
      return result;
    }
    goto LABEL_25;
  }
LABEL_14:
  int64_t v8 = v11;
LABEL_15:
  for (uint64_t i = (v10 - 1) & v10; ; i &= i - 1)
  {
    MEMORY[0x1F4188790](result);
    id v13 = v12;
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_1DA98CAA8();
    if (v1) {
      break;
    }
    swift_getWitnessTable();
    if (sub_1DA98C4A8())
    {

      uint64_t result = (void *)swift_bridgeObjectRelease();
      if (!i) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_1DA98BF68();
      uint64_t result = (void *)sub_1DA98BF98();
      if (!i) {
        goto LABEL_7;
      }
    }
LABEL_6:
    ;
  }
  swift_release();

  return (void *)swift_bridgeObjectRelease();
}

void *DescriptorCollection.filterIdentities(_:)(uint64_t (*a1)(id))
{
  sub_1DA98C708();
  sub_1DA98C378();
  sub_1DA92A4D8();
  uint64_t v19 = sub_1DA98BE48();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v3 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (v7) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v10++, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v10 >= v8) {
    goto LABEL_25;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v10);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v8)
  {
LABEL_25:
    swift_release();
    return DescriptorCollection.__allocating_init(descriptorsByExtensionIdentity:)(v19);
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (!v14)
  {
    int64_t v15 = v10 + 2;
    if (v10 + 2 < v8)
    {
      unint64_t v14 = *(void *)(v4 + 8 * v15);
      if (v14) {
        goto LABEL_14;
      }
      while (1)
      {
        int64_t v10 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (v10 >= v8) {
          goto LABEL_25;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        ++v15;
        if (v14) {
          goto LABEL_15;
        }
      }
LABEL_27:
      __break(1u);
      return result;
    }
    goto LABEL_25;
  }
LABEL_14:
  int64_t v10 = v15;
LABEL_15:
  unint64_t v7 = (v14 - 1) & v14;
  for (unint64_t i = __clz(__rbit64(v14)) + (v10 << 6); ; unint64_t i = v11 | (v10 << 6))
  {
    id v16 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    swift_bridgeObjectRetain();
    char v17 = a1(v16);
    if (v2) {
      break;
    }
    if (v17)
    {
      sub_1DA98BF68();
      uint64_t result = (void *)sub_1DA98BF98();
      if (!v7) {
        goto LABEL_7;
      }
    }
    else
    {

      uint64_t result = (void *)swift_bridgeObjectRelease();
      if (!v7) {
        goto LABEL_7;
      }
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
  }
  swift_release();

  swift_bridgeObjectRelease();
  return (void *)swift_bridgeObjectRelease();
}

uint64_t DescriptorCollection.mapDescriptors<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  v14[1] = DescriptorCollection.descriptors.getter();
  v13[2] = *(void *)(v7 + 80);
  void v13[3] = a3;
  v13[4] = a1;
  v13[5] = a2;
  uint64_t v8 = sub_1DA98C378();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_1DA8334D4((void (*)(char *, char *))sub_1DA92C574, (uint64_t)v13, v8, a3, v9, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)v14);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t DescriptorCollection.compactMapDescriptors<A>(_:)()
{
  DescriptorCollection.descriptors.getter();
  sub_1DA98C378();
  swift_getWitnessTable();
  uint64_t v0 = sub_1DA98C1C8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DescriptorCollection.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t DescriptorCollection.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t DescriptorCollection.makeIterator()()
{
  return DescriptorCollection.descriptors.getter();
}

uint64_t sub_1DA92BA00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = DescriptorCollection.makeIterator()();
  uint64_t result = swift_release();
  *a1 = v2;
  a1[1] = 0;
  return result;
}

uint64_t sub_1DA92BA40()
{
  uint64_t v0 = sub_1DA92BB44();
  swift_release();
  return v0;
}

void *DescriptorCollection<>.descriptor(matching:)(void *a1)
{
  sub_1DA7A1A08(0, &qword_1EBE5A018);
  swift_getKeyPath();
  swift_retain();
  uint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_1DA92BB48(v2);
  swift_bridgeObjectRelease();
  swift_release_n();
  id v4 = a1;
  uint64_t v5 = sub_1DA92BEC4(v3, v4);
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1DA92BB48(uint64_t a1)
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v6) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v8);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    id v11 = *(id *)(*(void *)(a1 + 48) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();

    uint64_t result = sub_1DA884808(v15);
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  unint64_t v13 = *(void *)(v2 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DA92BD00(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1DA98CBD8();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v6 = (id)MEMORY[0x1E0177C00](i - 4, a1);
          uint64_t v7 = i - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v6 = *(id *)(a1 + 8 * i);
          uint64_t v7 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        unint64_t v20 = v6;
        id v8 = objc_msgSend(v6, sel_kind);
        uint64_t v9 = sub_1DA98C038();
        uint64_t v11 = v10;

        id v12 = objc_msgSend(a2, sel_kind);
        uint64_t v13 = sub_1DA98C038();
        uint64_t v15 = v14;

        if (v9 == v13 && v11 == v15)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          uint64_t v3 = (uint64_t)v20;
          swift_bridgeObjectRelease();
          return v3;
        }
        char v17 = sub_1DA98CE58();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_17;
        }

        if (v7 == v3)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1DA92BEC4(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1DA98CBD8())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E0177C00](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      if (objc_msgSend(a2, sel_matches_, v6))
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1DA92BFD0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v22 = result;
  int64_t v6 = 0;
  uint64_t v24 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v10) {
      return a5(v22, a2, v23, a3);
    }
    unint64_t v17 = *(void *)(v24 + 8 * v16);
    ++v6;
    if (!v17)
    {
      int64_t v6 = v16 + 1;
      if (v16 + 1 >= v10) {
        return a5(v22, a2, v23, a3);
      }
      unint64_t v17 = *(void *)(v24 + 8 * v6);
      if (!v17)
      {
        int64_t v6 = v16 + 2;
        if (v16 + 2 >= v10) {
          return a5(v22, a2, v23, a3);
        }
        unint64_t v17 = *(void *)(v24 + 8 * v6);
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v6 << 6);
LABEL_5:
    uint64_t v13 = *(void **)(*(void *)(a3 + 48) + 8 * v12);
    sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B30);
    id v14 = v13;
    swift_bridgeObjectRetain();
    char v15 = sub_1DA98C7A8();

    uint64_t result = swift_bridgeObjectRelease();
    if (v15)
    {
      *(void *)(v22 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        return a5(v22, a2, v23, a3);
      }
    }
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v10) {
    return a5(v22, a2, v23, a3);
  }
  unint64_t v17 = *(void *)(v24 + 8 * v18);
  if (v17)
  {
    int64_t v6 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v6 >= v10) {
      return a5(v22, a2, v23, a3);
    }
    unint64_t v17 = *(void *)(v24 + 8 * v6);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1DA92C1D4(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  v17[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  int64_t v10 = (void *)isStackAllocationSafe;
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    unint64_t v11 = (char *)v17 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v11, 8 * v8);
    id v12 = v10;
    uint64_t v13 = sub_1DA92BFD0((uint64_t)v11, v8, a1, (uint64_t)v12, a3);

    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    id v14 = (void *)swift_slowAlloc();
    bzero(v14, 8 * v8);
    id v15 = v10;
    uint64_t v13 = sub_1DA92BFD0((uint64_t)v14, v8, a1, (uint64_t)v15, a3);

    MEMORY[0x1E0178DA0](v14, -1, -1);
  }
  return v13;
}

uint64_t type metadata accessor for ContainerKindDescriptorPredicate()
{
  uint64_t result = qword_1EBE5ABB8;
  if (!qword_1EBE5ABB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DA92C3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContainerKindDescriptorPredicate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA92C434(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContainerKindDescriptorPredicate();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DA92C490()
{
  unint64_t result = qword_1EBE5A0E0;
  if (!qword_1EBE5A0E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE5A0E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE5A0E0);
  }
  return result;
}

uint64_t sub_1DA92C4EC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA92AC10(a1);
}

BOOL sub_1DA92C508(void *a1, uint64_t a2)
{
  return sub_1DA92AAD8(a1, a2, *(void *)(v2 + 24));
}

uint64_t sub_1DA92C528@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA92A9E8(a1);
}

uint64_t sub_1DA92C544(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 24))(*a1) & 1;
}

uint64_t sub_1DA92C574(void *a1, void *a2)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 32))(*a1);
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t sub_1DA92C5B0(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 32))(*a1);
}

unint64_t sub_1DA92C5E0()
{
  unint64_t result = qword_1EBE59F80;
  if (!qword_1EBE59F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59F80);
  }
  return result;
}

unint64_t sub_1DA92C638()
{
  unint64_t result = qword_1EBE59F88;
  if (!qword_1EBE59F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59F88);
  }
  return result;
}

unint64_t sub_1DA92C690()
{
  unint64_t result = qword_1EBE59F78;
  if (!qword_1EBE59F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59F78);
  }
  return result;
}

unint64_t sub_1DA92C6E8()
{
  unint64_t result = qword_1EBE59F90;
  if (!qword_1EBE59F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59F90);
  }
  return result;
}

uint64_t sub_1DA92C73C()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of DescriptorPredicate.evaluate(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for WidgetDescriptorPredicate()
{
  return &type metadata for WidgetDescriptorPredicate;
}

ValueMetadata *type metadata accessor for ControlDescriptorPredicate()
{
  return &type metadata for ControlDescriptorPredicate;
}

ValueMetadata *type metadata accessor for IdentityDescriptorPredicate()
{
  return &type metadata for IdentityDescriptorPredicate;
}

ValueMetadata *type metadata accessor for IdentityControlDescriptorPredicate()
{
  return &type metadata for IdentityControlDescriptorPredicate;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContainerKindDescriptorPredicate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (uint64_t *)((char *)a1 + v8);
    int64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ContainerKindDescriptorPredicate(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContainerKindDescriptorPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContainerKindDescriptorPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ContainerKindDescriptorPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ContainerKindDescriptorPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerKindDescriptorPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA92CB54);
}

uint64_t sub_1DA92CB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ContainerKindDescriptorPredicate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA92CC30);
}

uint64_t sub_1DA92CC30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_1DA92CCF4()
{
  sub_1DA92CD88();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1DA92CD88()
{
  if (!qword_1EBE5ABB0)
  {
    unint64_t v0 = sub_1DA9899E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBE5ABB0);
    }
  }
}

void *assignWithCopy for DescriptorCollectionFilter(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DescriptorCollectionFilter(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DescriptorCollectionFilter()
{
  return &type metadata for DescriptorCollectionFilter;
}

uint64_t sub_1DA92CE68()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DescriptorCollection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for DescriptorCollection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DescriptorCollection);
}

uint64_t dispatch thunk of DescriptorCollection.__allocating_init(descriptorsByExtensionIdentity:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1DA92CEFC(id *a1)
{
  return objc_msgSend(*a1, sel_isInternal) ^ 1;
}

uint64_t sub_1DA92CF34(void **a1)
{
  sub_1DA92AD10(a1);
  return v1 & 1;
}

uint64_t sub_1DA92CF7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1DA92D004(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1DA98B9E8();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = *a2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v8, v4);
  return swift_endAccess();
}

uint64_t sub_1DA92D120@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DA92D1A4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1DA92D230())()
{
  return j__swift_endAccess;
}

uint64_t WidgetEntry.key.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA81BA50(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, a1);
}

uint64_t WidgetEntry.entrySupportsRendering.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_entrySupportsRendering);
}

uint64_t sub_1DA92D2B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA92DB9C(&OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_cachedViewableEntry, (uint64_t *)&unk_1EBE62A20, a1);
}

void sub_1DA92D2C4(uint64_t a1)
{
  uint64_t v3 = sub_1DA989638();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE61CC8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v36 - v14;
  MEMORY[0x1F4188790](v16);
  int64_t v18 = (char *)&v36 - v17;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock)
                                                       + 16));
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_shouldSilencePublisher) & 1) == 0)
  {
    uint64_t v38 = v6;
    unint64_t v39 = v12;
    uint64_t v41 = v1;
    uint64_t v19 = (void *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry);
    swift_beginAccess();
    uint64_t v20 = v19[3];
    unint64_t v40 = v19;
    if (v20)
    {
      uint64_t v37 = v4;
      uint64_t v21 = __swift_project_boxed_opaque_existential_0(v19, v20);
      uint64_t v36 = (uint64_t)&v36;
      uint64_t v22 = *(void *)(v20 - 8);
      double v23 = MEMORY[0x1F4188790](v21);
      unint64_t v25 = (char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v22 + 16))(v25, v23);
      uint64_t v4 = v37;
      sub_1DA98B908();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v20);
      int v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v26(v18, 0, 1, v3);
    }
    else
    {
      int v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v26(v18, 1, 1, v3);
    }
    sub_1DA7A1F58(a1, (uint64_t)v42, &qword_1EBE62A10);
    if (v43)
    {
      __swift_project_boxed_opaque_existential_0(v42, v43);
      sub_1DA98B908();
      v26(v15, 0, 1, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    }
    else
    {
      sub_1DA7A1AE0((uint64_t)v42, &qword_1EBE62A10);
      v26(v15, 1, 1, v3);
    }
    uint64_t v27 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_1DA7A1F58((uint64_t)v18, (uint64_t)v9, &qword_1EBE61CC0);
    sub_1DA7A1F58((uint64_t)v15, v27, &qword_1EBE61CC0);
    id v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (v28((uint64_t)v9, 1, v3) == 1)
    {
      sub_1DA7A1AE0((uint64_t)v15, &qword_1EBE61CC0);
      sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE61CC0);
      if (v28(v27, 1, v3) == 1)
      {
        unint64_t v29 = &qword_1EBE61CC0;
        uint64_t v30 = v9;
LABEL_16:
        sub_1DA7A1AE0((uint64_t)v30, v29);
        return;
      }
    }
    else
    {
      uint64_t v31 = (uint64_t)v39;
      sub_1DA7A1F58((uint64_t)v9, (uint64_t)v39, &qword_1EBE61CC0);
      if (v28(v27, 1, v3) != 1)
      {
        uint64_t v32 = v31;
        id v33 = v38;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v38, v27, v3);
        sub_1DA931A94((unint64_t *)&qword_1EBE61CB0, MEMORY[0x1E4F27928]);
        char v34 = sub_1DA98BFF8();
        unint64_t v35 = *(void (**)(char *, uint64_t))(v4 + 8);
        v35(v33, v3);
        sub_1DA7A1AE0((uint64_t)v15, &qword_1EBE61CC0);
        sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE61CC0);
        v35((char *)v32, v3);
        sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE61CC0);
        if (v34) {
          return;
        }
        goto LABEL_15;
      }
      sub_1DA7A1AE0((uint64_t)v15, &qword_1EBE61CC0);
      sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE61CC0);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v31, v3);
    }
    sub_1DA7A1AE0((uint64_t)v9, (uint64_t *)&unk_1EBE61CC8);
LABEL_15:
    sub_1DA7A1F58((uint64_t)v40, (uint64_t)v42, &qword_1EBE62A10);
    sub_1DA989FE8();
    uint64_t v30 = v42;
    unint64_t v29 = &qword_1EBE62A10;
    goto LABEL_16;
  }
}

uint64_t sub_1DA92D8B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA92DB9C(&OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry, &qword_1EBE62A10, a1);
}

uint64_t sub_1DA92D8CC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA7A1F58(a1, (uint64_t)v8, &qword_1EBE62A10);
  uint64_t v5 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry;
  swift_beginAccess();
  sub_1DA7A1F58(v5, (uint64_t)v7, &qword_1EBE62A10);
  swift_beginAccess();
  sub_1DA8A4C80((uint64_t)v8, v5, &qword_1EBE62A10);
  swift_endAccess();
  sub_1DA92D2C4((uint64_t)v7);
  sub_1DA7A1AE0((uint64_t)v8, &qword_1EBE62A10);
  sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE62A10);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return sub_1DA7A1AE0(a1, &qword_1EBE62A10);
}

uint64_t sub_1DA92D9D4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__environmentProvider);
  a1[3] = type metadata accessor for DescriptorMixedEnvironmentProviderAdapter();
  a1[4] = &off_1F34D69E8;
  *a1 = v3;

  return swift_retain();
}

uint64_t sub_1DA92DA2C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
  swift_beginAccess();
  sub_1DA8A4C80(a1, v3, &qword_1EBE62A38);
  swift_endAccess();
  sub_1DA7A1F58(v3, (uint64_t)v7, &qword_1EBE62A38);
  uint64_t v4 = v8;
  sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE62A38);
  if (v4)
  {
    uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError);
    void *v5 = 0;
    v5[1] = 0;
    swift_bridgeObjectRelease();
  }
  return sub_1DA7A1AE0(a1, &qword_1EBE62A38);
}

uint64_t sub_1DA92DAE8@<X0>(uint64_t *a1@<X0>, void *a2@<X3>, uint64_t *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(*a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  uint64_t v10 = v7 + *a2;
  swift_beginAccess();
  sub_1DA7A1F58(v10, a4, a3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  return swift_release();
}

uint64_t sub_1DA92DB88@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA92DB9C(&OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content, &qword_1EBE62A38, a1);
}

uint64_t sub_1DA92DB9C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v8 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  uint64_t v9 = v3 + *a1;
  swift_beginAccess();
  sub_1DA7A1F58(v9, a3, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  return swift_release();
}

uint64_t sub_1DA92DC38(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA92DD08(v1, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
  sub_1DA7A0410((unint64_t *)&unk_1EBE66AC0, &qword_1EBE66AE0);
  sub_1DA98A078();
  return sub_1DA7A1AE0(a1, &qword_1EBE62A38);
}

uint64_t sub_1DA92DD08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE62A20);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_entrySupportsRendering) == 1)
  {
    uint64_t v11 = a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
    swift_beginAccess();
    sub_1DA7A1F58(v11, (uint64_t)&v26, &qword_1EBE62A38);
    uint64_t v12 = *((void *)&v27 + 1);
    sub_1DA7A1AE0((uint64_t)&v26, &qword_1EBE62A38);
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock)
                                                         + 16));
    uint64_t v13 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_shouldSilencePublisher;
    int v14 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_shouldSilencePublisher);
    uint64_t v29 = v12;
    if (v14 == 1)
    {
      sub_1DA7A1F58(a2, (uint64_t)&v26, &qword_1EBE62A38);
      sub_1DA92DA2C((uint64_t)&v26);
      uint64_t v15 = sub_1DA98BB28();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
      uint64_t v16 = a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_cachedViewableEntry;
      swift_beginAccess();
      sub_1DA82636C((uint64_t)v10, v16, (uint64_t *)&unk_1EBE62A20);
      swift_endAccess();
      uint64_t v28 = 0;
      long long v26 = 0u;
      long long v27 = 0u;
      uint64_t v17 = a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry;
      swift_beginAccess();
      sub_1DA7A1F58(v17, (uint64_t)v24, &qword_1EBE62A10);
      swift_beginAccess();
      sub_1DA8A4C80((uint64_t)&v26, v17, &qword_1EBE62A10);
      swift_endAccess();
      sub_1DA92D2C4((uint64_t)v24);
      sub_1DA7A1AE0((uint64_t)&v26, &qword_1EBE62A10);
      sub_1DA7A1AE0((uint64_t)v24, &qword_1EBE62A10);
    }
    else
    {
      *(unsigned char *)(a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_shouldSilencePublisher) = 1;
      sub_1DA7A1F58(a2, (uint64_t)&v26, &qword_1EBE62A38);
      sub_1DA92DA2C((uint64_t)&v26);
      uint64_t v18 = sub_1DA98BB28();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
      uint64_t v19 = a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_cachedViewableEntry;
      swift_beginAccess();
      sub_1DA82636C((uint64_t)v10, v19, (uint64_t *)&unk_1EBE62A20);
      swift_endAccess();
      uint64_t v28 = 0;
      long long v26 = 0u;
      long long v27 = 0u;
      uint64_t v20 = a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry;
      swift_beginAccess();
      sub_1DA7A1F58(v20, (uint64_t)v24, &qword_1EBE62A10);
      swift_beginAccess();
      sub_1DA8A4C80((uint64_t)&v26, v20, &qword_1EBE62A10);
      swift_endAccess();
      sub_1DA92D2C4((uint64_t)v24);
      sub_1DA7A1AE0((uint64_t)&v26, &qword_1EBE62A10);
      sub_1DA7A1AE0((uint64_t)v24, &qword_1EBE62A10);
      *(unsigned char *)(a1 + v13) = 0;
    }
    uint64_t v21 = *(void *)(a2 + 24);
    sub_1DA989628();
    sub_1DA930434((uint64_t)v7, (uint64_t)&v26);
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t result = sub_1DA7A1AE0((uint64_t)&v26, &qword_1EBE62A10);
    if (v29)
    {
      if (!v21)
      {
        uint64_t v28 = 0;
        long long v26 = 0u;
        long long v27 = 0u;
        sub_1DA989FE8();
        return sub_1DA7A1AE0((uint64_t)&v26, &qword_1EBE62A10);
      }
    }
  }
  else
  {
    sub_1DA7A1F58(a2, (uint64_t)v24, &qword_1EBE62A38);
    if (v25)
    {
      __swift_project_boxed_opaque_existential_0(v24, v25);
      sub_1DA98BB78();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    }
    else
    {
      sub_1DA7A1AE0((uint64_t)v24, &qword_1EBE62A38);
      long long v26 = 0u;
      long long v27 = 0u;
      uint64_t v28 = 0;
    }
    return sub_1DA92DA2C((uint64_t)&v26);
  }
  return result;
}

void (*sub_1DA92E20C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x78uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v3[13] = v1;
  v3[14] = v4;
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
  swift_beginAccess();
  sub_1DA7A1F58(v6, (uint64_t)v3, &qword_1EBE62A38);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  return sub_1DA92E2D4;
}

void sub_1DA92E2D4(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    uint64_t v4 = v2[13];
    uint64_t v3 = v2[14];
    sub_1DA7A1F58(*a1, (uint64_t)(v2 + 5), &qword_1EBE62A38);
    uint64_t v5 = *(os_unfair_lock_s **)(v3 + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    sub_1DA92DD08(v4, (uint64_t)(v2 + 5));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
    sub_1DA7A0410((unint64_t *)&unk_1EBE66AC0, &qword_1EBE66AE0);
    sub_1DA98A078();
    sub_1DA7A1AE0((uint64_t)(v2 + 5), &qword_1EBE62A38);
  }
  else
  {
    uint64_t v7 = v2[13];
    uint64_t v6 = v2[14];
    uint64_t v8 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v8);
    sub_1DA92DD08(v7, (uint64_t)v2);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
    sub_1DA7A0410((unint64_t *)&unk_1EBE66AC0, &qword_1EBE66AE0);
    sub_1DA98A078();
  }
  sub_1DA7A1AE0((uint64_t)v2, &qword_1EBE62A38);

  free(v2);
}

uint64_t sub_1DA92E470@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadErrorDate;
  swift_beginAccess();
  sub_1DA7A1F58(v6, a2, &qword_1EBE61CC0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_1DA92E508(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A1F58(a1, (uint64_t)v4, &qword_1EBE61CC0);
  return sub_1DA92E5B4((uint64_t)v4);
}

uint64_t sub_1DA92E5A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA92DB9C(&OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadErrorDate, &qword_1EBE61CC0, a1);
}

uint64_t sub_1DA92E5B4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  sub_1DA7A1F58(a1, (uint64_t)v8, &qword_1EBE61CC0);
  sub_1DA7BA440((uint64_t)v8, (uint64_t)v5, &qword_1EBE61CC0);
  uint64_t v11 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadErrorDate;
  swift_beginAccess();
  sub_1DA82636C((uint64_t)v5, v11, &qword_1EBE61CC0);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  return sub_1DA7A1AE0(a1, &qword_1EBE61CC0);
}

void (*sub_1DA92E6F4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0) - 8) + 64);
  v3[4] = malloc(v4);
  uint64_t v5 = malloc(v4);
  v3[5] = v5;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  uint64_t v8 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadErrorDate;
  swift_beginAccess();
  sub_1DA7A1F58(v8, (uint64_t)v5, &qword_1EBE61CC0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  return sub_1DA92E7FC;
}

void sub_1DA92E7FC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  size_t v4 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    sub_1DA7A1F58(*(void *)(*(void *)a1 + 40), (uint64_t)v3, &qword_1EBE61CC0);
    sub_1DA92E5B4((uint64_t)v3);
    sub_1DA7A1AE0((uint64_t)v4, &qword_1EBE61CC0);
  }
  else
  {
    sub_1DA92E5B4(*(void *)(*(void *)a1 + 40));
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t sub_1DA92E894(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1DA931978(v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA92E8E8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
  swift_beginAccess();
  sub_1DA7A1F58(v3, (uint64_t)v7, &qword_1EBE62A38);
  uint64_t v4 = v8;
  sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE62A38);
  uint64_t v5 = 0;
  if (!v4)
  {
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError);
    swift_bridgeObjectRetain();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v5;
}

uint64_t sub_1DA92E9C0(uint64_t a1, uint64_t a2)
{
  sub_1DA931978(a1, a2);

  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1DA92E9F8(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = sub_1DA92E8E8();
  a1[1] = v3;
  return sub_1DA92EA40;
}

uint64_t sub_1DA92EA40(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v6 = *(os_unfair_lock_s **)(v5 + 16);
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock(v6);
    uint64_t v7 = (void *)(v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError);
    *uint64_t v7 = v4;
    v7[1] = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(v6);
    uint64_t v8 = (void *)(v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError);
    *uint64_t v8 = v4;
    v8[1] = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA92EB38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1DA930434(a1, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));

  return swift_release();
}

uint64_t WidgetEntry.objectWillChange.getter()
{
  return swift_retain();
}

uint64_t WidgetEntry.contentDidChangePublisher.getter()
{
  return swift_retain();
}

uint64_t WidgetEntry.descriptorDidChangePublisher.getter()
{
  return swift_retain();
}

void *sub_1DA92EBE4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor);
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 16);
  id v5 = v3;
  os_unfair_lock_unlock(v4);
  swift_release();
  return v3;
}

char *WidgetEntry.__allocating_init(key:protectionType:environmentProvider:observer:entrySupportsRendering:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  id v11 = objc_allocWithZone(v5);
  return WidgetEntry.init(key:protectionType:environmentProvider:observer:entrySupportsRendering:)(a1, a2, a3, a4, a5);
}

char *WidgetEntry.init(key:protectionType:environmentProvider:observer:entrySupportsRendering:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v65 = a5;
  char v66 = (void *)a4;
  uint64_t v67 = a2;
  uint64_t v63 = (void **)a1;
  uint64_t v64 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE62B30);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CE0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  uint64_t v62 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock;
  type metadata accessor for UnfairLock();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v5;
  uint64_t v16 = (_DWORD *)swift_slowAlloc();
  *uint64_t v16 = 0;
  *(void *)(v14 + 16) = v16;
  *(void *)&v5[v13] = v14;
  uint64_t v17 = &v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_cachedViewableEntry];
  uint64_t v18 = sub_1DA98BB28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  sub_1DA989528();
  v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_shouldSilencePublisher] = 0;
  uint64_t v19 = &v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry];
  *(_OWORD *)uint64_t v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  *((void *)v19 + 4) = 0;
  uint64_t v20 = (uint64_t)&v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content];
  *(void *)(v20 + 32) = 0;
  *(_OWORD *)uint64_t v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  uint64_t v21 = &v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadErrorDate];
  uint64_t v22 = sub_1DA989638();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  double v23 = &v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError];
  int64_t v60 = &v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError];
  *(void *)double v23 = 0;
  *((void *)v23 + 1) = 0;
  uint64_t v24 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__objectWillChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61D20);
  swift_allocObject();
  uint64_t v25 = sub_1DA98A008();
  *(void *)&v15[v24] = v25;
  uint64_t v26 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__contentDidChangePublisher;
  uint64_t v57 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__contentDidChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
  swift_allocObject();
  *(void *)&v15[v26] = sub_1DA98A008();
  uint64_t v27 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__descriptorDidChangePublisher;
  uint64_t v58 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__descriptorDidChangePublisher;
  swift_allocObject();
  *(void *)&v15[v27] = sub_1DA98A008();
  uint64_t v59 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor;
  *(void *)&v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor] = 0;
  *(void *)&v70[0] = v25;
  uint64_t v28 = self;
  swift_retain();
  id v69 = objc_msgSend(v28, sel_mainRunLoop);
  uint64_t v29 = sub_1DA98C7C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v8, 1, 1, v29);
  sub_1DA7A1A08(0, (unint64_t *)&unk_1EBE62B50);
  sub_1DA7A0410(&qword_1EBE61D18, &qword_1EBE61D20);
  sub_1DA931A0C();
  sub_1DA98A158();
  sub_1DA7A1AE0((uint64_t)v8, (uint64_t *)&unk_1EBE62B30);

  swift_release();
  sub_1DA7A0410(&qword_1EBE61CD8, &qword_1EBE61CE0);
  uint64_t v30 = v61;
  uint64_t v31 = sub_1DA98A0F8();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v12, v30);
  *(void *)&v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_objectWillChange] = v31;
  *(void *)&v70[0] = *(void *)&v15[v57];
  sub_1DA7A0410((unint64_t *)&unk_1EBE66AD0, &qword_1EBE66AE0);
  *(void *)&v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_contentDidChangePublisher] = sub_1DA98A0F8();
  *(void *)&v70[0] = *(void *)&v15[v58];
  *(void *)&v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorDidChangePublisher] = sub_1DA98A0F8();
  uint64_t v32 = (id *)&v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key];
  id v33 = v63;
  sub_1DA81BA50((uint64_t)v63, (uint64_t)&v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key]);
  char v34 = &v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType];
  uint64_t v62 = sub_1DA98B9E8();
  uint64_t v35 = *(void *)(v62 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v34, v67, v62);
  uint64_t v71 = 0;
  memset(v70, 0, sizeof(v70));
  swift_beginAccess();
  sub_1DA82636C((uint64_t)v70, v20, &qword_1EBE62A38);
  swift_endAccess();
  *(_OWORD *)int64_t v60 = xmmword_1DA9995B0;
  swift_bridgeObjectRelease();
  uint64_t v36 = v66;
  sub_1DA7A1A44((uint64_t)v66, (uint64_t)&v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver]);
  uint64_t v37 = v36[4];
  __swift_project_boxed_opaque_existential_0(v36, v36[3]);
  uint64_t v38 = *(uint64_t (**)(void))(v37 + 8);
  id v39 = *v32;
  unint64_t v40 = (void *)v38();

  uint64_t v41 = *(void **)&v15[v59];
  *(void *)&v15[v59] = v40;
  id v42 = v40;

  uint64_t v43 = v64;
  sub_1DA7A1A44(v64, (uint64_t)v70);
  uint64_t v44 = (uint64_t)v33;
  os_log_t v45 = *v33;
  id v46 = v42;
  id v47 = objc_msgSend(v45, sel__loggingIdentifierWithoutMetrics);
  uint64_t v48 = sub_1DA98C038();
  uint64_t v50 = v49;

  type metadata accessor for DescriptorMixedEnvironmentProviderAdapter();
  swift_allocObject();
  *(void *)&v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__environmentProvider] = sub_1DA84F1E4((uint64_t)v70, v40, v48, v50);
  v15[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_entrySupportsRendering] = v65;

  uint64_t v51 = (objc_class *)type metadata accessor for WidgetEntry(0);
  v68.receiver = v15;
  v68.super_class = v51;
  uint64_t v52 = (char *)objc_msgSendSuper2(&v68, sel_init);
  uint64_t v53 = *(void *)&v52[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver + 32];
  __swift_project_boxed_opaque_existential_0(&v52[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver], *(void *)&v52[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver + 24]);
  char v54 = *(void (**)(void))(v53 + 16);
  uint64_t v55 = v52;
  v54();

  __swift_destroy_boxed_opaque_existential_1(v43);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v67, v62);
  sub_1DA932AB4(v44, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  return v55;
}

uint64_t sub_1DA92F408()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver + 24);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver + 32);
  __swift_project_boxed_opaque_existential_0((void *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 24))(v0, v1, v2);
}

uint64_t sub_1DA92F4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  sub_1DA92F59C(v4, a2, a1, a3, a4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));

  return swift_release();
}

uint64_t sub_1DA92F59C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v69 = a4;
  uint64_t v70 = a3;
  uint64_t v71 = a2;
  uint64_t v62 = sub_1DA98B5F8();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v59 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1DA98B648();
  uint64_t v58 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v57 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE62A20);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v56 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  objc_super v68 = (char *)&v54 - v13;
  uint64_t v65 = sub_1DA98BB28();
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v55 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v63 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = sub_1DA989638();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  double v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v54 - v25;
  uint64_t v27 = a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
  swift_beginAccess();
  sub_1DA7A1F58(v27, (uint64_t)&v72, &qword_1EBE62A38);
  if (!v73)
  {
    sub_1DA7A1AE0((uint64_t)&v72, &qword_1EBE62A38);
    uint64_t v36 = *(void *)(a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError + 8);
    *(void *)a5 = *(void *)(a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError);
    *((void *)a5 + 1) = v36;
    type metadata accessor for WidgetEntry.WidgetEntryError(0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE62BD8);
    swift_storeEnumTagMultiPayload();
    return swift_bridgeObjectRetain();
  }
  uint64_t v81 = a1;
  uint64_t v67 = a5;
  uint64_t v66 = v5;
  sub_1DA7A19A4(&v72, (uint64_t)&v79);
  uint64_t v28 = v71;
  sub_1DA7A1F58(v71, (uint64_t)v19, &qword_1EBE61CC0);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v29((uint64_t)v19, 1, v20) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v19, v20);
    sub_1DA930D18((uint64_t)&v72);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
    if (v73 == 1)
    {
      sub_1DA7A1AE0((uint64_t)&v72, &qword_1EBE632C0);
      long long v75 = 0u;
      long long v76 = 0u;
      uint64_t v77 = 0;
    }
    else
    {
      sub_1DA7BA440((uint64_t)&v72, (uint64_t)&v75, &qword_1EBE62A10);
      sub_1DA7A1AE0((uint64_t)&v74, &qword_1EBE62A10);
    }
    uint64_t v30 = v81;
    if (*((void *)&v76 + 1)) {
      goto LABEL_4;
    }
LABEL_11:
    sub_1DA7A1AE0((uint64_t)&v75, &qword_1EBE62A10);
    if (v29(v28, 1, v20) == 1)
    {
      uint64_t v37 = v30 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_configuredDate;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v67, v37, v20);
    }
    else
    {
      uint64_t v49 = v63;
      sub_1DA7A1F58(v28, v63, &qword_1EBE61CC0);
      uint64_t result = v29(v49, 1, v20);
      if (result == 1)
      {
        __break(1u);
        return result;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v67, v49, v20);
    }
    type metadata accessor for WidgetEntry.WidgetEntryError(0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE62BD8);
    swift_storeEnumTagMultiPayload();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
  }
  sub_1DA7A1AE0((uint64_t)v19, &qword_1EBE61CC0);
  uint64_t v30 = v81;
  uint64_t v31 = v81 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry;
  swift_beginAccess();
  sub_1DA7A1F58(v31, (uint64_t)&v75, &qword_1EBE62A10);
  if (!*((void *)&v76 + 1)) {
    goto LABEL_11;
  }
LABEL_4:
  uint64_t v71 = v21;
  sub_1DA7A19A4(&v75, (uint64_t)v78);
  __swift_project_boxed_opaque_existential_0(&v79, v80);
  __swift_project_boxed_opaque_existential_0(v78, v78[3]);
  sub_1DA98B908();
  uint64_t v32 = (uint64_t)v68;
  uint64_t v33 = v66;
  sub_1DA98BB58();
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v71 + 8))(v23, v20);
    uint64_t v34 = (uint64_t)v67;
    sub_1DA7A1A44((uint64_t)v78, (uint64_t)v67);
    *(void *)(v34 + 40) = v33;
    type metadata accessor for WidgetEntry.WidgetEntryError(0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE62BD8);
    swift_storeEnumTagMultiPayload();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v71 + 8))(v23, v20);
    uint64_t v38 = v64;
    uint64_t v39 = v65;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v32, 1, v65) == 1)
    {
      sub_1DA7A1AE0(v32, (uint64_t *)&unk_1EBE62A20);
      uint64_t v40 = (uint64_t)v67;
      sub_1DA7A1A44((uint64_t)v78, (uint64_t)v67);
      __swift_project_boxed_opaque_existential_0(&v79, v80);
      uint64_t v41 = v57;
      sub_1DA98BB38();
      uint64_t v42 = v61;
      uint64_t v43 = v59;
      uint64_t v44 = v62;
      (*(void (**)(char *, void, uint64_t))(v61 + 104))(v59, *MEMORY[0x1E4F46A78], v62);
      uint64_t v45 = sub_1DA98B598();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v60);
      *(void *)&long long v75 = v45;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
      sub_1DA7A0410((unint64_t *)&qword_1EBE62A48, &qword_1EBE62A40);
      uint64_t v46 = sub_1DA98BFC8();
      uint64_t v48 = v47;
      swift_bridgeObjectRelease();
      *(void *)(v40 + 40) = v46;
      *(void *)(v40 + 48) = v48;
      type metadata accessor for WidgetEntry.WidgetEntryError(0);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 32);
      uint64_t v51 = v55;
      v50(v55, v32, v39);
      uint64_t v52 = (uint64_t)v56;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v56, v51, v39);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v52, 0, 1, v39);
      uint64_t v53 = v81 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_cachedViewableEntry;
      swift_beginAccess();
      sub_1DA82636C(v52, v53, (uint64_t *)&unk_1EBE62A20);
      swift_endAccess();
      v50(v67, (uint64_t)v51, v39);
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE62BD8);
    swift_storeEnumTagMultiPayload();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
  }
}

uint64_t sub_1DA930054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1DA989638();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  sub_1DA7A1F58(a1, (uint64_t)v7, &qword_1EBE61CC0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v7, &qword_1EBE61CC0);
    uint64_t v14 = v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry;
    swift_beginAccess();
    sub_1DA7A1F58(v14, a2, &qword_1EBE62A10);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_1DA930D18((uint64_t)v16);
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    if (v17 == 1)
    {
      sub_1DA7A1AE0((uint64_t)v16, &qword_1EBE632C0);
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
    else
    {
      sub_1DA7BA440((uint64_t)v16, a2, &qword_1EBE62A10);
      sub_1DA7A1AE0((uint64_t)&v18, &qword_1EBE62A10);
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  return swift_release();
}

uint64_t sub_1DA9302B0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor;
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor);
  if (a1)
  {
    if (!v7)
    {
LABEL_6:
      *(void *)(v2 + v6) = a1;
      id v11 = a1;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
      swift_release();
      id v12 = v11;
      sub_1DA84FD20(a1);

      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
      sub_1DA7A0410((unint64_t *)&unk_1EBE66AC0, &qword_1EBE66AE0);
      return sub_1DA98A078();
    }
    sub_1DA7A1A08(0, &qword_1EBE64D48);
    id v8 = v7;
    id v9 = a1;
    char v10 = sub_1DA98C7A8();

    if ((v10 & 1) == 0)
    {
      uint64_t v7 = *(void **)(v2 + v6);
      goto LABEL_6;
    }
  }
  else if (v7)
  {
    goto LABEL_6;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));

  return swift_release();
}

uint64_t sub_1DA930434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = sub_1DA989E78();
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v48 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DA989638();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v52 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE61CC8);
  MEMORY[0x1F4188790](v53);
  char v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v51 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v43 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v43 - v17;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock)
                                                       + 16));
  sub_1DA930D18((uint64_t)v55);
  if (v56 == 1)
  {
    uint64_t result = sub_1DA7A1AE0((uint64_t)v55, &qword_1EBE632C0);
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  uint64_t v45 = a1;
  sub_1DA7BA440((uint64_t)v55, (uint64_t)v59, &qword_1EBE62A10);
  sub_1DA7BA440((uint64_t)&v57, (uint64_t)v58, &qword_1EBE62A10);
  sub_1DA7A1F58((uint64_t)v59, (uint64_t)v55, &qword_1EBE62A10);
  uint64_t v47 = v7;
  if (v56)
  {
    __swift_project_boxed_opaque_existential_0(v55, v56);
    sub_1DA98B908();
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v20(v18, 0, 1, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  }
  else
  {
    sub_1DA7A1AE0((uint64_t)v55, &qword_1EBE62A10);
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v20(v18, 1, 1, v6);
  }
  uint64_t v46 = v2;
  uint64_t v21 = v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry;
  swift_beginAccess();
  uint64_t v44 = v21;
  sub_1DA7A1F58(v21, (uint64_t)v55, &qword_1EBE62A10);
  uint64_t v22 = v56;
  if (v56)
  {
    double v23 = __swift_project_boxed_opaque_existential_0(v55, v56);
    v43[1] = v43;
    uint64_t v24 = a2;
    uint64_t v25 = *(void *)(v22 - 8);
    double v26 = MEMORY[0x1F4188790](v23);
    uint64_t v28 = (char *)v43 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v25 + 16))(v28, v26);
    sub_1DA7A1AE0((uint64_t)v55, &qword_1EBE62A10);
    sub_1DA98B908();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v22);
    a2 = v24;
    uint64_t v29 = v47;
    v20(v15, 0, 1, v6);
  }
  else
  {
    sub_1DA7A1AE0((uint64_t)v55, &qword_1EBE62A10);
    uint64_t v29 = v47;
    v20(v15, 1, 1, v6);
  }
  uint64_t v30 = (uint64_t)&v10[*(int *)(v53 + 48)];
  sub_1DA7A1F58((uint64_t)v18, (uint64_t)v10, &qword_1EBE61CC0);
  sub_1DA7A1F58((uint64_t)v15, v30, &qword_1EBE61CC0);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (v31((uint64_t)v10, 1, v6) != 1)
  {
    uint64_t v32 = (uint64_t)v51;
    sub_1DA7A1F58((uint64_t)v10, (uint64_t)v51, &qword_1EBE61CC0);
    if (v31(v30, 1, v6) != 1)
    {
      uint64_t v35 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v52, v30, v6);
      sub_1DA931A94((unint64_t *)&qword_1EBE61CB0, MEMORY[0x1E4F27928]);
      char v36 = sub_1DA98BFF8();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v29 + 8);
      v37(v35, v6);
      sub_1DA7A1AE0((uint64_t)v15, &qword_1EBE61CC0);
      sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE61CC0);
      v37(v51, v6);
      sub_1DA7A1AE0((uint64_t)v10, &qword_1EBE61CC0);
      uint64_t v33 = v46;
      uint64_t v34 = v45;
      if (v36) {
        goto LABEL_17;
      }
LABEL_16:
      sub_1DA98C6C8();
      sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE62B60);
      uint64_t v38 = (void *)sub_1DA98C808();
      uint64_t v39 = v48;
      sub_1DA989E68();
      sub_1DA989E38();

      (*(void (**)(char *, uint64_t))(v49 + 8))(v39, v50);
      sub_1DA7A1F58((uint64_t)v59, (uint64_t)v55, &qword_1EBE62A10);
      uint64_t v40 = v44;
      sub_1DA7A1F58(v44, (uint64_t)v54, &qword_1EBE62A10);
      swift_beginAccess();
      sub_1DA8A4C80((uint64_t)v55, v40, &qword_1EBE62A10);
      swift_endAccess();
      sub_1DA92D2C4((uint64_t)v54);
      sub_1DA7A1AE0((uint64_t)v55, &qword_1EBE62A10);
      sub_1DA7A1AE0((uint64_t)v54, &qword_1EBE62A10);
      uint64_t v41 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v52, v34, v6);
      uint64_t v42 = v33 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_configuredDate;
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 40))(v42, v41, v6);
      swift_endAccess();
      goto LABEL_17;
    }
    sub_1DA7A1AE0((uint64_t)v15, &qword_1EBE61CC0);
    sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE61CC0);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v6);
LABEL_14:
    sub_1DA7A1AE0((uint64_t)v10, (uint64_t *)&unk_1EBE61CC8);
    uint64_t v33 = v46;
    uint64_t v34 = v45;
    goto LABEL_16;
  }
  sub_1DA7A1AE0((uint64_t)v15, &qword_1EBE61CC0);
  sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE61CC0);
  if (v31(v30, 1, v6) != 1) {
    goto LABEL_14;
  }
  sub_1DA7A1AE0((uint64_t)v10, &qword_1EBE61CC0);
LABEL_17:
  sub_1DA7A1AE0((uint64_t)v59, &qword_1EBE62A10);
  return sub_1DA7BA440((uint64_t)v58, a2, &qword_1EBE62A10);
}

uint64_t sub_1DA930D18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DA989638();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock)
                                                       + 16));
  uint64_t v7 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
  swift_beginAccess();
  sub_1DA7A1F58(v7, (uint64_t)&v23, &qword_1EBE62A38);
  if (v24)
  {
    sub_1DA7A19A4(&v23, (uint64_t)v25);
    __swift_project_boxed_opaque_existential_0(v25, v26);
    sub_1DA98BB68();
    sub_1DA7BA440((uint64_t)v19, (uint64_t)v21, &qword_1EBE62A10);
    sub_1DA7A1F58((uint64_t)&v23, (uint64_t)v19, &qword_1EBE62A10);
    uint64_t v8 = v20;
    sub_1DA7A1AE0((uint64_t)v19, &qword_1EBE62A10);
    if (v8) {
      goto LABEL_6;
    }
    sub_1DA7A1F58((uint64_t)v21, (uint64_t)v19, &qword_1EBE62A10);
    uint64_t v9 = v20;
    sub_1DA7A1AE0((uint64_t)v19, &qword_1EBE62A10);
    if (!v9) {
      goto LABEL_6;
    }
    void v17[2] = v27;
    uint64_t result = (uint64_t)__swift_project_boxed_opaque_existential_0(v25, v26);
    uint64_t v11 = v22;
    if (v22)
    {
      uint64_t v12 = __swift_project_boxed_opaque_existential_0(v21, v22);
      v17[1] = v17;
      uint64_t v13 = *(void *)(v11 - 8);
      double v14 = MEMORY[0x1F4188790](v12);
      uint64_t v16 = (char *)v17 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v13 + 16))(v16, v14);
      sub_1DA98B908();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
      sub_1DA98BB68();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_1DA7A1AE0((uint64_t)&v23, &qword_1EBE62A10);
      sub_1DA7BA440((uint64_t)v19, (uint64_t)&v23, &qword_1EBE62A10);
      sub_1DA82636C((uint64_t)v18, (uint64_t)v21, &qword_1EBE62A10);
LABEL_6:
      sub_1DA7BA440((uint64_t)&v23, a1, &qword_1EBE62A10);
      sub_1DA7A1F58((uint64_t)v21, a1 + 40, &qword_1EBE62A10);
      sub_1DA7A1AE0((uint64_t)v21, &qword_1EBE62A10);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    }
    __break(1u);
  }
  else
  {
    uint64_t result = sub_1DA7A1AE0((uint64_t)&v23, &qword_1EBE62A38);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 1;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
  }
  return result;
}

id WidgetEntry.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void WidgetEntry.init()()
{
}

id WidgetEntry.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetEntry(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DA931358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
  swift_beginAccess();
  sub_1DA7A1F58(v6, a1, &qword_1EBE62A38);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_1DA9313F0(uint64_t a1)
{
  return sub_1DA92DC38(a1);
}

void (*sub_1DA931414(void *a1))(void *)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA92E20C(v2);
  return sub_1DA8DB0A4;
}

uint64_t sub_1DA931470@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadErrorDate;
  swift_beginAccess();
  sub_1DA7A1F58(v6, a1, &qword_1EBE61CC0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_1DA931508(uint64_t a1)
{
  return sub_1DA92E5B4(a1);
}

void (*sub_1DA93152C(void *a1))(void *)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DA92E6F4(v2);
  return sub_1DA8DB0A4;
}

uint64_t sub_1DA931588()
{
  return sub_1DA92E8E8();
}

uint64_t sub_1DA9315AC(uint64_t a1, uint64_t a2)
{
  sub_1DA931978(a1, a2);

  return swift_bridgeObjectRelease();
}

void (*sub_1DA9315E8(uint64_t **a1))(void *)
{
  objc_super v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1DA92E9F8(v2);
  return sub_1DA8DB0A4;
}

uint64_t sub_1DA931644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType;
  swift_beginAccess();
  uint64_t v4 = sub_1DA98B9E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DA9316CC()
{
  uint64_t v1 = *v0;
  objc_super v2 = (void *)(*v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_0(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v1, v3, v4);
}

unint64_t WidgetEntry.description.getter()
{
  uint64_t v1 = sub_1DA98B9E8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = 0;
  void v7[2] = 0xE000000000000000;
  sub_1DA98CA18();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xD000000000000011;
  unint64_t v9 = 0x80000001DA9A3B60;
  WidgetEntryKey.description.getter();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v5 = v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  sub_1DA931A94(&qword_1EBE58E60, MEMORY[0x1E4F46D40]);
  sub_1DA98CDD8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8;
}

uint64_t sub_1DA931978(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  uint64_t v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  uint64_t v7 = (void *)(v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError);
  *uint64_t v7 = a1;
  v7[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));

  return swift_release();
}

unint64_t sub_1DA931A0C()
{
  unint64_t result = qword_1EBE62B40;
  if (!qword_1EBE62B40)
  {
    sub_1DA7A1A08(255, (unint64_t *)&unk_1EBE62B50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE62B40);
  }
  return result;
}

uint64_t type metadata accessor for WidgetEntry(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE61FC0);
}

uint64_t sub_1DA931A94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA931ADC()
{
  return sub_1DA931A94(&qword_1EA8E6918, (void (*)(uint64_t))type metadata accessor for WidgetEntry.WidgetEntryError);
}

uint64_t type metadata accessor for WidgetEntry.WidgetEntryError(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE61F40);
}

uint64_t sub_1DA931B4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA92DAE8(a1, &OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry, &qword_1EBE62A10, a2);
}

uint64_t sub_1DA931B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, &qword_1EBE62A10, (uint64_t (*)(unsigned char *))sub_1DA92D8CC);
}

uint64_t sub_1DA931B94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA92DAE8(a1, &OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content, &qword_1EBE62A38, a2);
}

uint64_t sub_1DA931BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, &qword_1EBE62A38, (uint64_t (*)(unsigned char *))sub_1DA92DC38);
}

uint64_t keypath_set_2Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(unsigned char *))
{
  sub_1DA7A1F58(a1, (uint64_t)v8, a5);
  return a6(v8);
}

uint64_t sub_1DA931C2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA92E8E8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DA931C5C()
{
  return type metadata accessor for WidgetEntry(0);
}

void sub_1DA931C64()
{
  sub_1DA98B9E8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for WidgetEntryKey();
    if (v1 <= 0x3F)
    {
      sub_1DA93237C(319, &qword_1EBE62A30, MEMORY[0x1E4F46DE0]);
      if (v2 <= 0x3F)
      {
        sub_1DA989638();
        if (v3 <= 0x3F)
        {
          sub_1DA93237C(319, (unint64_t *)&qword_1EBE66CE0, MEMORY[0x1E4F27928]);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t method lookup function for WidgetEntry(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetEntry);
}

uint64_t dispatch thunk of WidgetEntry.protectionType.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of WidgetEntry.protectionType.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of WidgetEntry.protectionType.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of WidgetEntry.cachedViewableEntry.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of WidgetEntry.currentEntry.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of WidgetEntry.environmentProvider.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of WidgetEntry.content.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of WidgetEntry.content.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of WidgetEntry.content.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of WidgetEntry.contentLoadErrorDate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of WidgetEntry.contentLoadErrorDate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of WidgetEntry.contentLoadErrorDate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of WidgetEntry.contentLoadError.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x218))();
}

uint64_t dispatch thunk of WidgetEntry.contentLoadError.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x220))();
}

uint64_t dispatch thunk of WidgetEntry.contentLoadError.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x228))();
}

uint64_t dispatch thunk of WidgetEntry.advanceToEntry(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x230))();
}

uint64_t dispatch thunk of WidgetEntry.descriptor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of WidgetEntry.__allocating_init(key:protectionType:environmentProvider:observer:entrySupportsRendering:)()
{
  return (*(uint64_t (**)(void))(v0 + 600))();
}

uint64_t dispatch thunk of WidgetEntry.invalidate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of WidgetEntry.currentViewableEntry(with:overrideDate:ignoringEnvironmentKeys:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x268))();
}

uint64_t dispatch thunk of WidgetEntry.timelineEntry(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of WidgetEntry._updateDescriptor(descriptor:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x278))();
}

void sub_1DA93237C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DA98C838();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetEntry.WidgetEntryError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = v7 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = a2[3];
        if (v8)
        {
          uint64_t v9 = a2[4];
          *(void *)(a1 + 24) = v8;
          *(void *)(a1 + 32) = v9;
          (**(void (***)(uint64_t, uint64_t *))(v8 - 8))(a1, a2);
        }
        else
        {
          long long v13 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v13;
          *(void *)(a1 + 32) = a2[4];
        }
        double v14 = (void *)a2[5];
        id v15 = v14;
        *(void *)(a1 + 40) = v14;
        break;
      case 2u:
        uint64_t v10 = sub_1DA989638();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 3u:
        uint64_t v11 = a2[3];
        if (v11)
        {
          uint64_t v12 = a2[4];
          *(void *)(a1 + 24) = v11;
          *(void *)(a1 + 32) = v12;
          (**(void (***)(uint64_t, uint64_t *))(v11 - 8))(a1, a2);
        }
        else
        {
          long long v16 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v16;
          *(void *)(a1 + 32) = a2[4];
        }
        uint64_t v17 = a2[6];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = v17;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for WidgetEntry.WidgetEntryError(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      goto LABEL_12;
    case 1u:
      if (*(void *)(a1 + 24)) {
        __swift_destroy_boxed_opaque_existential_1(a1);
      }
      unint64_t v2 = *(void **)(a1 + 40);

      break;
    case 2u:
      uint64_t v3 = sub_1DA989638();
      unint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      break;
    case 3u:
      if (*(void *)(a1 + 24)) {
        __swift_destroy_boxed_opaque_existential_1(a1);
      }
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for WidgetEntry.WidgetEntryError(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = *(void *)(a2 + 24);
      if (v5)
      {
        uint64_t v6 = *(void *)(a2 + 32);
        *(void *)(a1 + 24) = v5;
        *(void *)(a1 + 32) = v6;
        (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      }
      else
      {
        long long v10 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
      }
      uint64_t v11 = *(void **)(a2 + 40);
      id v12 = v11;
      *(void *)(a1 + 40) = v11;
      break;
    case 2u:
      uint64_t v7 = sub_1DA989638();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      break;
    case 3u:
      uint64_t v8 = *(void *)(a2 + 24);
      if (v8)
      {
        uint64_t v9 = *(void *)(a2 + 32);
        *(void *)(a1 + 24) = v8;
        *(void *)(a1 + 32) = v9;
        (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
      }
      else
      {
        long long v13 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v13;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
      }
      uint64_t v14 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v14;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for WidgetEntry.WidgetEntryError(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_1DA932AB4(a1, type metadata accessor for WidgetEntry.WidgetEntryError);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v4 = *((void *)a2 + 3);
        if (v4)
        {
          *(void *)(a1 + 24) = v4;
          *(void *)(a1 + 32) = *((void *)a2 + 4);
          (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
        }
        else
        {
          long long v9 = *a2;
          long long v10 = a2[1];
          *(void *)(a1 + 32) = *((void *)a2 + 4);
          *(_OWORD *)a1 = v9;
          *(_OWORD *)(a1 + 16) = v10;
        }
        uint64_t v11 = (void *)*((void *)a2 + 5);
        id v12 = v11;
        *(void *)(a1 + 40) = v11;
        break;
      case 2u:
        uint64_t v5 = sub_1DA989638();
        (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        break;
      case 3u:
        uint64_t v6 = *((void *)a2 + 3);
        if (v6)
        {
          *(void *)(a1 + 24) = v6;
          *(void *)(a1 + 32) = *((void *)a2 + 4);
          (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
        }
        else
        {
          long long v7 = *a2;
          long long v8 = a2[1];
          *(void *)(a1 + 32) = *((void *)a2 + 4);
          *(_OWORD *)a1 = v7;
          *(_OWORD *)(a1 + 16) = v8;
        }
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        *(void *)(a1 + 48) = *((void *)a2 + 6);
        swift_bridgeObjectRetain();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DA932AB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeWithTake for WidgetEntry.WidgetEntryError(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_1DA989638();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for WidgetEntry.WidgetEntryError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DA932AB4((uint64_t)a1, type metadata accessor for WidgetEntry.WidgetEntryError);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_1DA989638();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DA932CA8()
{
  uint64_t result = sub_1DA989638();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t WidgetUpdateTimer.publisher.getter()
{
  return sub_1DA98A0F8();
}

uint64_t WidgetUpdateTimer.__allocating_init(quantum:queue:)(uint64_t a1, double a2)
{
  uint64_t v4 = swift_allocObject();
  WidgetUpdateTimer.init(quantum:queue:)(a1, a2);
  return v4;
}

uint64_t WidgetUpdateTimer.init(quantum:queue:)(uint64_t a1, double a2)
{
  uint64_t v5 = sub_1DA98C5F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DA98C598();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_1DA98B4A8();
  MEMORY[0x1F4188790](v10 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61D10);
  swift_allocObject();
  *(void *)(v2 + 16) = sub_1DA98A008();
  uint64_t result = sub_1DA989538();
  *(void *)(v2 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer__timer) = 0;
  if (a2 < 0.0 || (*(void *)&a2 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    __break(1u);
  }
  else
  {
    *(double *)(v2 + 24) = a2;
    v13[4] = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE65CB0);
    v13[2] = sub_1DA98CFF8();
    void v13[3] = a1;
    v13[1] = v12;
    sub_1DA98B498();
    v13[5] = MEMORY[0x1E4FBC860];
    sub_1DA935380((unint64_t *)&qword_1EBE65CA0, MEMORY[0x1E4FBCC10]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE65C80);
    sub_1DA7A0410((unint64_t *)&qword_1EBE65C88, &qword_1EBE65C80);
    sub_1DA98C918();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCC68], v5);
    *(void *)(v2 + 32) = sub_1DA98C638();
    return v2;
  }
  return result;
}

uint64_t WidgetUpdateTimer.debugDescription.getter()
{
  uint64_t v1 = sub_1DA989638();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = 0;
  v13[2] = 0xE000000000000000;
  sub_1DA98CA18();
  uint64_t v5 = sub_1DA98CFF8();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v14 = v5;
  uint64_t v15 = v7;
  sub_1DA98C148();
  uint64_t v8 = v0 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer_scheduledDate;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v8, v1);
  if (qword_1EBE63290 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EBE63318;
  uint64_t v10 = (void *)sub_1DA989568();
  id v11 = objc_msgSend(v9, sel_stringFromDate_, v10);

  sub_1DA98C038();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return v14;
}

uint64_t WidgetUpdateTimer.description.getter()
{
  return sub_1DA98CFF8();
}

uint64_t sub_1DA933398()
{
  uint64_t v1 = v0;
  uint64_t v37 = *v0;
  uint64_t v2 = sub_1DA98B428();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v41 = (void *)((char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = sub_1DA98B518();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v39 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1DA98B438();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v34 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1DA98B4A8();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DA98C658();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DA98B528();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x1F4188790](v12);
  long long v16 = (void *)((char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = (void *)v1[4];
  *long long v16 = v17;
  (*(void (**)(void *, void, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E4FBCBF0], v12, v14);
  id v18 = v17;
  LOBYTE(v17) = sub_1DA98B538();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v16, v12);
  if (v17)
  {
    uint64_t v20 = OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer__timer;
    if (*(void *)((char *)v1 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer__timer))
    {
      uint64_t v21 = *(void *)((char *)v1 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer__timer);
    }
    else
    {
      uint64_t v32 = v1[2];
      v31[1] = sub_1DA7A1A08(0, &qword_1EBE62AD8);
      aBlock[0] = MEMORY[0x1E4FBC860];
      sub_1DA935380(&qword_1EBE62AD0, MEMORY[0x1E4FBCC70]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A58);
      sub_1DA7A0410((unint64_t *)&unk_1EBE62A60, &qword_1EBE62A58);
      sub_1DA98C918();
      uint64_t v21 = sub_1DA98C668();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v23 = swift_allocObject();
      uint64_t v24 = v37;
      *(void *)(v23 + 16) = v32;
      *(void *)(v23 + 24) = v24;
      aBlock[4] = sub_1DA935400;
      aBlock[5] = v23;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1DA7A6EE0;
      aBlock[3] = &block_descriptor_8;
      uint64_t v25 = _Block_copy(aBlock);
      swift_retain();
      _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
      uint64_t v26 = v34;
      sub_1DA933D8C();
      sub_1DA98C678();
      _Block_release(v25);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v38);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v35);
      swift_release();
      uint64_t v27 = v39;
      sub_1DA98B4F8();
      uint64_t v28 = v41;
      void *v41 = 0;
      uint64_t v30 = v43;
      uint64_t v29 = v44;
      (*(void (**)(void *, void, uint64_t))(v43 + 104))(v28, *MEMORY[0x1E4FBCAA8], v44);
      MEMORY[0x1E01778E0](v27, v28, ObjectType, INFINITY);
      (*(void (**)(void *, uint64_t))(v30 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v42);
      sub_1DA98C698();
      *(void *)((char *)v1 + v20) = v21;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRetain();
    return v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA933A08(uint64_t a1)
{
  uint64_t v2 = sub_1DA989638();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - v7;
  sub_1DA989628();
  if (qword_1EBE62C50 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1DA989F38();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBE6F300);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  uint64_t v10 = sub_1DA989F18();
  int v11 = sub_1DA98C518();
  if (os_log_type_enabled(v10, (os_log_type_t)v11))
  {
    int v26 = v11;
    uint64_t v27 = a1;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v29 = v25;
    *(_DWORD *)uint64_t v12 = 136446466;
    uint64_t v13 = sub_1DA98CFF8();
    uint64_t v28 = sub_1DA8C5E00(v13, v14, &v29);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v24 = v12 + 14;
    if (qword_1EBE63290 != -1) {
      swift_once();
    }
    id v15 = (id)qword_1EBE63318;
    long long v16 = (void *)sub_1DA989568();
    id v17 = objc_msgSend(v15, sel_stringFromDate_, v16, v24);

    uint64_t v18 = sub_1DA98C038();
    unint64_t v20 = v19;

    uint64_t v28 = sub_1DA8C5E00(v18, v20, &v29);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v3 + 8);
    v21(v5, v2);
    _os_log_impl(&dword_1DA795000, v10, (os_log_type_t)v26, "%{public}s update: %s, privacy: .public)", (uint8_t *)v12, 0x16u);
    uint64_t v22 = v25;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v22, -1, -1);
    MEMORY[0x1E0178DA0](v12, -1, -1);
  }
  else
  {
    uint64_t v21 = *(void (**)(char *, uint64_t))(v3 + 8);
    v21(v5, v2);
  }
  sub_1DA989FE8();
  return ((uint64_t (*)(char *, uint64_t))v21)(v8, v2);
}

uint64_t sub_1DA933D8C()
{
  return sub_1DA98C918();
}

uint64_t sub_1DA933E68()
{
  sub_1DA9895D8();
  if (v0 > 9.22337204e18) {
    double v0 = 9.22337204e18;
  }
  if (v0 >= 9.22337204e18)
  {
    uint64_t v2 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    double v1 = floor(v0);
    if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    if (v1 <= -9.22337204e18)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    if (v1 >= 9.22337204e18)
    {
LABEL_20:
      __break(1u);
      return MEMORY[0x1F4186E78]();
    }
    uint64_t v2 = (uint64_t)v1;
  }
  double v3 = (v0 - (double)v2) * 1000000000.0;
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  return MEMORY[0x1F4186E78]();
}

void sub_1DA933F68(uint64_t *a1@<X8>)
{
  double v3 = *(double *)(v1 + 24);
  if (v3 >= 9.22337204e18)
  {
    uint64_t v4 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_6;
  }
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v4 = (uint64_t)v3;
LABEL_6:
  *a1 = v4;
  uint64_t v5 = *MEMORY[0x1E4FBCAE8];
  uint64_t v6 = sub_1DA98B428();
  uint64_t v7 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  v7(a1, v5, v6);
}

uint64_t sub_1DA93402C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1DA989638();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DA98B528();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (uint64_t *)((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = *(void **)(v2 + 32);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t, double))(v10 + 104))(v13, *MEMORY[0x1E4FBCBF0], v9, v11);
  id v15 = v14;
  LOBYTE(v14) = sub_1DA98B538();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v13, v9);
  if (v14)
  {
    long double v17 = *(double *)(v2 + 24);
    if (v17 > 0.0
      && (sub_1DA989538(),
          char v18 = sub_1DA989588(),
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5),
          (v18 & 1) != 0))
    {
      sub_1DA989508();
      fmod(v19, v17);
      return sub_1DA9894F8();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, a1, v5);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA934254(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v54 = *v1;
  uint64_t v4 = sub_1DA98B428();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v57 = (void *)((char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v58 = sub_1DA98B518();
  uint64_t v56 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v55 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA989638();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v50 - v12;
  uint64_t v14 = sub_1DA98B528();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = MEMORY[0x1F4188790](v14);
  char v18 = (uint64_t **)((char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  long double v19 = v2[4];
  *char v18 = v19;
  (*(void (**)(uint64_t **, void, uint64_t, double))(v15 + 104))(v18, *MEMORY[0x1E4FBCBF0], v14, v16);
  uint64_t v20 = v19;
  LOBYTE(v19) = sub_1DA98B538();
  uint64_t v22 = *(void (**)(uint64_t **, uint64_t))(v15 + 8);
  uint64_t v21 = (uint64_t (*)(char *, uint64_t))(v15 + 8);
  v22(v18, v14);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v23 = (char *)v2 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer_scheduledDate;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 24))(v23, a1, v7);
  swift_endAccess();
  sub_1DA989538();
  LOBYTE(v23) = sub_1DA989588();
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t result = v21(v13, v7);
  if (v23)
  {
    if (qword_1EBE62C50 == -1)
    {
LABEL_4:
      uint64_t v25 = sub_1DA989F38();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EBE6F300);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
      swift_retain_n();
      int v26 = sub_1DA989F18();
      int v27 = sub_1DA98C518();
      if (os_log_type_enabled(v26, (os_log_type_t)v27))
      {
        int v52 = v27;
        os_log_t v53 = v26;
        uint64_t v28 = swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        v62[0] = v51;
        *(_DWORD *)uint64_t v28 = 136446466;
        uint64_t v29 = sub_1DA98CFF8();
        uint64_t v61 = sub_1DA8C5E00(v29, v30, v62);
        uint64_t v54 = v62;
        sub_1DA98C858();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2080;
        v50[1] = v28 + 14;
        if (qword_1EBE63290 != -1) {
          swift_once();
        }
        id v31 = (id)qword_1EBE63318;
        uint64_t v32 = (void *)sub_1DA989568();
        id v33 = objc_msgSend(v31, sel_stringFromDate_, v32);

        uint64_t v34 = sub_1DA98C038();
        unint64_t v36 = v35;

        uint64_t v61 = sub_1DA8C5E00(v34, v36, v62);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        v21(v10, v7);
        int v26 = v53;
        _os_log_impl(&dword_1DA795000, v53, (os_log_type_t)v52, "%{public}s next update: %s, privacy: .public)", (uint8_t *)v28, 0x16u);
        uint64_t v37 = v51;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v37, -1, -1);
        MEMORY[0x1E0178DA0](v28, -1, -1);
      }
      else
      {
        swift_release_n();
        v21(v10, v7);
      }

      uint64_t v47 = v55;
      sub_1DA933E68();
      sub_1DA933398();
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v49 = v57;
      sub_1DA933F68(v57);
      MEMORY[0x1E01778E0](v47, v49, ObjectType, INFINITY);
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t *, uint64_t))(v59 + 8))(v49, v60);
      return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v47, v58);
    }
LABEL_19:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v38 = OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer__timer;
  if (*(uint64_t **)((char *)v2 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer__timer))
  {
    uint64_t v39 = qword_1EBE62C50;
    swift_unknownObjectRetain();
    if (v39 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_1DA989F38();
    __swift_project_value_buffer(v40, (uint64_t)qword_1EBE6F300);
    swift_retain_n();
    uint64_t v41 = sub_1DA989F18();
    os_log_type_t v42 = sub_1DA98C518();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      v62[0] = v44;
      *(_DWORD *)uint64_t v43 = 136446210;
      uint64_t v45 = sub_1DA98CFF8();
      uint64_t v61 = sub_1DA8C5E00(v45, v46, v62);
      sub_1DA98C858();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA795000, v41, v42, "%{public}s canceled", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v44, -1, -1);
      MEMORY[0x1E0178DA0](v43, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    swift_getObjectType();
    sub_1DA98C688();
    swift_unknownObjectRelease();
    *(uint64_t **)((char *)v2 + v38) = 0;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t WidgetUpdateTimer.scheduleUpdate(on:)(uint64_t a1)
{
  uint64_t v3 = sub_1DA98B438();
  uint64_t v20 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DA98B4A8();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DA989638();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  double v12 = MEMORY[0x1F4188790](v9);
  v17[1] = *(void *)(v1 + 32);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v12);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_1DA934F90;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA7A6EE0;
  aBlock[3] = &block_descriptor_15;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1DA935380((unint64_t *)&qword_1EBE658C0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE65C60);
  sub_1DA7A0410((unint64_t *)&qword_1EBE65C70, (uint64_t *)&unk_1EBE65C60);
  sub_1DA98C918();
  MEMORY[0x1E01777D0](0, v8, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v19);
  return swift_release();
}

uint64_t sub_1DA934DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1DA989638();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA93402C(a2, (uint64_t)v6);
  sub_1DA934254((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DA934EC4()
{
  uint64_t v1 = sub_1DA989638();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1DA934F90()
{
  uint64_t v1 = *(void *)(sub_1DA989638() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1DA934DE8(v2, v3);
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t WidgetUpdateTimer.deinit()
{
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer_scheduledDate;
  uint64_t v2 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t WidgetUpdateTimer.__deallocating_deinit()
{
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer_scheduledDate;
  uint64_t v2 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA935150()
{
  return WidgetUpdateTimer.description.getter();
}

uint64_t sub_1DA935174()
{
  return WidgetUpdateTimer.debugDescription.getter();
}

uint64_t sub_1DA935198()
{
  return sub_1DA98A0F8();
}

uint64_t sub_1DA935218(uint64_t a1)
{
  return WidgetUpdateTimer.scheduleUpdate(on:)(a1);
}

uint64_t sub_1DA93523C()
{
  return type metadata accessor for WidgetUpdateTimer();
}

uint64_t type metadata accessor for WidgetUpdateTimer()
{
  uint64_t result = qword_1EBE62040;
  if (!qword_1EBE62040) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DA935290()
{
  uint64_t result = sub_1DA989638();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for WidgetUpdateTimer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetUpdateTimer);
}

uint64_t dispatch thunk of WidgetUpdateTimer.__allocating_init(quantum:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1DA935380(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA9353C8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DA935400()
{
  return sub_1DA933A08(*(void *)(v0 + 16));
}

uint64_t ReloadTaskPair.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t ReloadTaskPair.__allocating_init(currentTask:queuedTask:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t ReloadTaskPair.init(currentTask:queuedTask:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  swift_release();
  return v2;
}

uint64_t sub_1DA9354B8()
{
  if (!*(void *)(v0 + 16)) {
    return 0x6B736174206F6E3CLL;
  }
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    swift_retain();
    sub_1DA98CA18();
    sub_1DA98C148();
    type metadata accessor for ReloadTask();
    swift_getWitnessTable();
    sub_1DA98CE18();
    sub_1DA98C148();
    sub_1DA98CE18();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1DA98C148();
    type metadata accessor for ReloadTask();
    swift_getWitnessTable();
    sub_1DA98CE18();
  }
  swift_release();
  return 0;
}

uint64_t sub_1DA9356AC()
{
  if (*(void *)(v0 + 16))
  {
    swift_retain();
    sub_1DA851550();
    swift_release();
  }
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    sub_1DA851550();
    swift_release();
  }
  *(void *)(v0 + 16) = 0;
  swift_release();
  *(void *)(v0 + 24) = 0;

  return swift_release();
}

uint64_t ReloadTaskPair.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t ReloadTaskPair.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA9357B0()
{
  return sub_1DA9354B8();
}

uint64_t sub_1DA9357D4()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1DA9357DC()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_1DA9357E4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ReloadTaskPair()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for ReloadTaskPair(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ReloadTaskPair);
}

uint64_t dispatch thunk of ReloadTaskPair.__allocating_init(currentTask:queuedTask:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of ReloadTaskPair.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t sub_1DA935890(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1DA7F7A64(0, v1, 0);
    uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8) - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      swift_getKeyPath();
      swift_getAtKeyPath();
      swift_release();
      uint64_t v2 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA7F7A64(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v2 = v13;
      }
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1DA7F7A64(v7 > 1, v8 + 1, 1);
        uint64_t v2 = v13;
      }
      *(void *)(v2 + 16) = v8 + 1;
      uint64_t v9 = v2 + 16 * v8;
      *(void *)(v9 + 32) = v11;
      *(void *)(v9 + 40) = v12;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DA935A10(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1DA98CE58();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1DA98CE58() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_1DA935AD8(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA935B38(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1DA98CBD8())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)MEMORY[0x1E0177C00](0, a2);
LABEL_5:
      int v6 = v5;
      sub_1DA98C708();
      char v7 = sub_1DA98C7A8();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_1DA98C7A8();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      MEMORY[0x1E0177C00](v9, a2);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_1DA98C7A8();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1DA935CB0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1DA98CE58(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1DA98CE58() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1DA935D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  MEMORY[0x1F4188790](v4);
  v8.n128_f64[0] = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      char v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v13 = v6 + 16;
      id v31 = v7;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v33 = v13;
      uint64_t v29 = v15;
      unint64_t v30 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v16 = v11 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        uint64_t v19 = v10;
        uint64_t v20 = v10;
        uint64_t v21 = v32;
        ((void (*)(char *, unint64_t, uint64_t, __n128))v32)(v19, a1 + v12, v4, v8);
        uint64_t v22 = a2;
        v21(v17, a2 + v12, v4);
        uint64_t v10 = v20;
        sub_1DA7A0410((unint64_t *)&qword_1EBE5A0E0, &qword_1EBE5A0E8);
        char v23 = sub_1DA98BFF8();
        uint64_t v24 = *v30;
        (*v30)(v17, v4);
        v24(v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v12 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

id sub_1DA935F90(unint64_t a1, uint64_t a2)
{
  return sub_1DA935FB8(a1, a2, (uint64_t)&qword_1EBE64D48);
}

id sub_1DA935FA4(unint64_t a1, uint64_t a2)
{
  return sub_1DA935FB8(a1, a2, (uint64_t)&qword_1EBE5A018);
}

id sub_1DA935FB8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1DA98CBD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1DA98CBD8();
    swift_bridgeObjectRelease();
    if (v7 == v28) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v7) = 0;
    return (id)(v7 & 1);
  }
  if (v7 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v7) {
    goto LABEL_38;
  }
  uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 < 0) {
    uint64_t v8 = v5;
  }
  if (!v6) {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v11;
  }
  if (v8 == v10)
  {
LABEL_38:
    LOBYTE(v7) = 1;
    return (id)(v7 & 1);
  }
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v29 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v5 + 32); ; id result = (id)MEMORY[0x1E0177C00](0, v5))
  {
    uint64_t v13 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v14 = (id)MEMORY[0x1E0177C00](0, a2);
LABEL_22:
    uint64_t v15 = v14;
    sub_1DA7A1A08(0, (unint64_t *)a3);
    a3 = sub_1DA98C7A8();

    if ((a3 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v16 = v7 - 1;
    if (v7 == 1) {
      return (id)(v7 & 1);
    }
    if (((a2 | v5) & 0xC000000000000001) != 0)
    {
      uint64_t v17 = 0;
      unint64_t v18 = v7 - 2;
      while (v16 != v17)
      {
        unint64_t v7 = v17 + 1;
        if (v29) {
          id v19 = (id)MEMORY[0x1E0177C00](v17 + 1, v5);
        }
        else {
          id v19 = *(id *)(v5 + 40 + 8 * v17);
        }
        a3 = (uint64_t)v19;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x1E0177C00](v17 + 1, a2);
        }
        else
        {
          if (v7 >= *(void *)(v9 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v17);
        }
        uint64_t v21 = v20;
        unint64_t v7 = sub_1DA98C7A8();

        if ((v7 & 1) != 0 && v18 != v17++) {
          continue;
        }
        return (id)(v7 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v9 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      a3 = v23 - 1;
      uint64_t v24 = (void **)(v5 + 40);
      uint64_t v9 = a2 + 40;
      while (v16)
      {
        if (!a3) {
          goto LABEL_53;
        }
        BOOL v26 = *v24++;
        uint64_t v25 = v26;
        int v27 = *(void **)v9;
        v9 += 8;
        a2 = v25;
        uint64_t v5 = v27;
        unint64_t v7 = sub_1DA98C7A8();

        if (v7)
        {
          --a3;
          if (--v16) {
            continue;
          }
        }
        return (id)(v7 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v9 + 16))
  {
    id v14 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id sub_1DA9362A4(unint64_t a1, uint64_t a2)
{
  return sub_1DA935FB8(a1, a2, (uint64_t)&qword_1EBE5A6D8);
}

unint64_t sub_1DA9362B8(uint64_t a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000024;
      break;
    case 3:
      unint64_t result = 0xD000000000000023;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000027;
      break;
    case 6:
      return result;
    default:
      unint64_t result = 0xD00000000000002BLL;
      break;
  }
  return result;
}

unint64_t sub_1DA93637C()
{
  return sub_1DA9362B8(*v0);
}

uint64_t sub_1DA936384()
{
  type metadata accessor for NominatedContainerPermissions();
  swift_initStackObject();
  uint64_t v0 = *(void *)(sub_1DA801320() + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  qword_1EBE59298 = v0;
  return result;
}

uint64_t sub_1DA9363E0@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t result = sub_1DA9899C8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DA936418()
{
  return sub_1DA9899D8();
}

uint64_t sub_1DA936468(char **a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v287 = &v255[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v280 = &v255[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v279 = sub_1DA989638();
  uint64_t v278 = *(void *)(v279 - 8);
  MEMORY[0x1F4188790](v279);
  uint64_t v286 = &v255[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1DA989698();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v292 = &v255[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for WidgetExtensionInfo();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v283 = &v255[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0F0);
  MEMORY[0x1F4188790](v15 - 8);
  v282 = &v255[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  MEMORY[0x1F4188790](v17 - 8);
  v281 = &v255[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v296 = *(void *)(v19 - 8);
  uint64_t v297 = v19;
  MEMORY[0x1F4188790](v19);
  ObjCClassFromMetadata = &v255[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v21 - 8);
  id v284 = &v255[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v23);
  v285 = &v255[-v24];
  MEMORY[0x1F4188790](v25);
  int v27 = &v255[-v26];
  uint64_t v28 = sub_1DA989478();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v299 = (uint64_t *)v28;
  uint64_t v300 = v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v291 = &v255[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v31);
  uint64_t v290 = &v255[-v32];
  MEMORY[0x1F4188790](v33);
  v289 = &v255[-v34];
  MEMORY[0x1F4188790](v35);
  uint64_t v288 = &v255[-v36];
  MEMORY[0x1F4188790](v37);
  v294 = &v255[-v38];
  MEMORY[0x1F4188790](v39);
  uint64_t v293 = &v255[-v40];
  MEMORY[0x1F4188790](v41);
  uint64_t v43 = &v255[-v42];
  MEMORY[0x1F4188790](v44);
  uint64_t v295 = &v255[-v45];
  uint64_t v46 = OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeLock;
  type metadata accessor for UnfairLock();
  uint64_t v47 = swift_allocObject();
  uint64_t v48 = (_DWORD *)swift_slowAlloc();
  _DWORD *v48 = 0;
  *(void *)(v4 + v46) = v47;
  *(void *)(v47 + 16) = v48;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateInitial) = 1;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateRequired) = 1;
  id v49 = objc_msgSend(a1, sel_identifier);
  if (!v49)
  {
    __break(1u);
    goto LABEL_207;
  }
  uint64_t v50 = v49;
  sub_1DA98C038();

  id v51 = objc_allocWithZone(MEMORY[0x1E4F223A0]);
  id v52 = sub_1DA865E90();
  if (v2)
  {
    os_log_t v53 = (void *)sub_1DA9892C8();
    id v54 = objc_msgSend(v53, sel_domain);
    uint64_t v55 = sub_1DA98C038();
    uint64_t v57 = v56;

    if (v55 == sub_1DA98C038() && v57 == v58)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v80 = sub_1DA98CE58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v80 & 1) == 0)
      {
LABEL_17:
        sub_1DA93B894();
        swift_allocError();
        *uint64_t v81 = v2;
        id v82 = v2;
        swift_willThrow();

        goto LABEL_21;
      }
    }
    if (objc_msgSend(v53, sel_code) != (id)4099) {
      goto LABEL_17;
    }
LABEL_207:
    if (qword_1EBE58FE8 == -1) {
      goto LABEL_208;
    }
    goto LABEL_213;
  }
  uint64_t v277 = v4;
  id v59 = v52;
  id v60 = objc_msgSend(v59, sel_dataContainerURL);
  if (!v60)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t *))(v300 + 56))(v27, 1, 1, v299);
    goto LABEL_19;
  }
  uint64_t v61 = v60;
  sub_1DA989438();

  uint64_t v62 = v300;
  uint64_t v63 = *(void (**)(unsigned char *, unsigned char *, uint64_t *))(v300 + 32);
  uint64_t v64 = v43;
  uint64_t v65 = v299;
  v63(v27, v64, v299);
  uint64_t v66 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t *))(v62 + 56);
  uint64_t v274 = v62 + 56;
  uint64_t v273 = v66;
  v66(v27, 0, 1, v65);
  objc_super v68 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t *))(v62 + 48);
  id v67 = (id)(v62 + 48);
  uint64_t v275 = v68;
  if (v68(v27, 1, v65) == 1)
  {
LABEL_19:

    sub_1DA7A1AE0((uint64_t)v27, (uint64_t *)&unk_1EBE66AB0);
    sub_1DA93B894();
    swift_allocError();
    *uint64_t v83 = 2;
    swift_willThrow();

    goto LABEL_20;
  }
  v63(v295, v27, v65);
  id v69 = objc_msgSend(v59, sel_containingBundleRecord);
  if (!v69)
  {
    if (qword_1EBE58FE8 != -1) {
      goto LABEL_205;
    }
    goto LABEL_24;
  }
  id v70 = v69;
  while (1)
  {
    id v71 = objc_msgSend(v70, sel_bundleIdentifier);
    uint64_t v4 = v277;
    if (!v71)
    {

      sub_1DA93B894();
      swift_allocError();
      *long long v97 = 4;
      swift_willThrow();

      goto LABEL_59;
    }
    long long v72 = v71;
    id v269 = v67;
    unint64_t v263 = (unsigned char *)sub_1DA98C038();
    uint64_t v267 = v73;

    *(void *)(v4 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension) = a1;
    uint64_t v270 = a1;
    id v74 = objc_msgSend(v59, sel_URL);
    sub_1DA989438();

    id v75 = objc_msgSend(v70, sel_URL);
    sub_1DA989438();

    CFURLRef v76 = (const __CFURL *)sub_1DA9893A8();
    uint64_t v77 = CFBundleCreate(0, v76);

    id v276 = v59;
    id v265 = v70;
    if (v77)
    {
      CFArrayRef v78 = CFBundleCopyBundleLocalizations(v77);
      if (v78 && (CFArrayRef v79 = v78, v306 = 0, sub_1DA98C278(), v79, v306))
      {
        uint64_t v261 = v306;
      }
      else
      {
        id v98 = objc_msgSend(self, sel_mainBundle);
        id v99 = objc_msgSend(v98, sel_localizations);

        uint64_t v261 = sub_1DA98C288();
        swift_bridgeObjectRelease();
      }
      uint64_t v100 = v277;
      int v101 = v77;
      uint64_t v102 = (__CFString *)sub_1DA98C008();
      CFTypeRef v103 = (id)CFBundleGetValueForInfoDictionaryKey(v101, v102);

      if (v103 && (uint64_t v306 = (uint64_t)v103, swift_dynamicCast())) {
        int v260 = v304;
      }
      else {
        int v260 = 0;
      }
      if (qword_1EBE592A8 != -1) {
        swift_once();
      }
      uint64_t v104 = (void *)qword_1EBE59298;
      swift_bridgeObjectRetain();
      id v105 = objc_msgSend(v270, sel_identifier);
      if (!v105) {
        goto LABEL_212;
      }
      unsigned int v106 = v105;
      uint64_t v107 = sub_1DA98C038();
      uint64_t v109 = v108;

      LOBYTE(v106) = sub_1DA935A10(v107, v109, v104);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v106)
      {
        id v110 = v101;
        uint64_t v111 = (__CFString *)sub_1DA98C008();
        CFTypeRef v112 = (id)CFBundleGetValueForInfoDictionaryKey(v110, v111);

        uint64_t v113 = MEMORY[0x1E4FBC860];
        uint64_t v264 = 0;
        if (v112)
        {
          uint64_t v306 = (uint64_t)v112;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
          int v114 = swift_dynamicCast();
          uint64_t v115 = ObjCClassFromMetadata;
          uint64_t v116 = v114 ? (void *)v304 : (void *)MEMORY[0x1E4FBC860];
        }
        else
        {
          uint64_t v116 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v115 = ObjCClassFromMetadata;
        }
        int64_t v145 = v116[2];
        if (v145)
        {
          ObjCClassFromMetadata = v110;
          uint64_t v306 = v113;
          sub_1DA7F7AE0(0, v145, 0);
          uint64_t v146 = v306;
          uint64_t v301 = v116;
          uint64_t v147 = v116 + 5;
          do
          {
            swift_bridgeObjectRetain();
            sub_1DA9899B8();
            uint64_t v306 = v146;
            uint64_t v148 = v115;
            unint64_t v150 = *(void *)(v146 + 16);
            unint64_t v149 = *(void *)(v146 + 24);
            if (v150 >= v149 >> 1)
            {
              sub_1DA7F7AE0(v149 > 1, v150 + 1, 1);
              uint64_t v146 = v306;
            }
            v147 += 2;
            *(void *)(v146 + 16) = v150 + 1;
            (*(void (**)(unint64_t, unsigned char *, uint64_t))(v296 + 32))(v146+ ((*(unsigned __int8 *)(v296 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v296 + 80))+ *(void *)(v296 + 72) * v150, v148, v297);
            --v145;
            uint64_t v115 = v148;
          }
          while (v145);
          swift_bridgeObjectRelease();
          id v110 = (__CFBundle *)ObjCClassFromMetadata;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v146 = MEMORY[0x1E4FBC860];
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A780);
        uint64_t v151 = swift_allocObject();
        *(_OWORD *)(v151 + 16) = xmmword_1DA994650;
        sub_1DA9899A8();
        sub_1DA9899A8();
        BOOL v152 = v264;
        uint64_t v262 = sub_1DA93BB94(v146, v151);
        uint64_t v3 = v152;

        swift_bridgeObjectRelease();
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v100 = v277;
      }
      else
      {

        uint64_t v262 = MEMORY[0x1E4FBC860];
      }
      id v59 = v276;
      id v70 = v265;
    }
    else
    {
      id v117 = objc_msgSend(self, sel_mainBundle);
      id v118 = objc_msgSend(v117, sel_localizations);

      uint64_t v261 = sub_1DA98C288();
      int v260 = 0;
      uint64_t v262 = MEMORY[0x1E4FBC860];
      uint64_t v100 = v277;
    }
    unsigned int v256 = objc_msgSend(v70, sel_developerType);
    id v153 = objc_msgSend(v59, sel_entitlements);
    uint64_t v154 = (void *)sub_1DA98C008();
    uint64_t v298 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE62B28);
    ObjCClassFromMetadata = (unsigned char *)swift_getObjCClassFromMetadata();
    id v155 = objc_msgSend(v153, sel_objectForKey_ofClass_, v154);

    if (v155)
    {
      sub_1DA98C8C8();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v304 = 0u;
      long long v305 = 0u;
    }
    sub_1DA7BA440((uint64_t)&v304, (uint64_t)&v306, &qword_1EBE66B48);
    if (v307)
    {
      if (swift_dynamicCast())
      {
        int v259 = v302;
        goto LABEL_82;
      }
    }
    else
    {
      sub_1DA7A1AE0((uint64_t)&v306, &qword_1EBE66B48);
    }
    int v259 = 0;
LABEL_82:
    id v156 = objc_msgSend(v59, sel_entitlements);
    uint64_t v157 = (void *)sub_1DA98C008();
    sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B38);
    uint64_t v268 = swift_getObjCClassFromMetadata();
    id v158 = objc_msgSend(v156, sel_objectForKey_ofClass_, v157);

    if (v158)
    {
      sub_1DA98C8C8();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v304 = 0u;
      long long v305 = 0u;
    }
    sub_1DA7BA440((uint64_t)&v304, (uint64_t)&v306, &qword_1EBE66B48);
    if (v307)
    {
      if (swift_dynamicCast())
      {
        uint64_t v258 = v302;
        uint64_t v257 = v303;
        goto LABEL_90;
      }
    }
    else
    {
      sub_1DA7A1AE0((uint64_t)&v306, &qword_1EBE66B48);
    }
    uint64_t v258 = 0;
    uint64_t v257 = 0;
LABEL_90:
    id v159 = objc_msgSend(v59, sel_entitlements);
    uint64_t v160 = (void *)sub_1DA98C008();
    id v161 = objc_msgSend(v159, sel_objectForKey_ofClass_, v160, v268);

    if (v161)
    {
      sub_1DA98C8C8();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v304 = 0u;
      long long v305 = 0u;
    }
    sub_1DA7BA440((uint64_t)&v304, (uint64_t)&v306, &qword_1EBE66B48);
    if (v307)
    {
      type metadata accessor for FileProtectionType(0);
      int v162 = swift_dynamicCast();
      uint64_t v163 = (void *)v302;
      if (!v162) {
        uint64_t v163 = 0;
      }
      id v266 = v163;
    }
    else
    {
      sub_1DA7A1AE0((uint64_t)&v306, &qword_1EBE66B48);
      id v266 = 0;
    }
    uint64_t v164 = (unsigned char *)sub_1DA881DD4((uint64_t)&unk_1F34D5EA8);
    swift_arrayDestroy();
    a1 = &selRef_alpha;
    id v165 = objc_msgSend(v59, sel_infoDictionary);
    uint64_t v301 = v164;
    uint64_t v166 = (void *)sub_1DA98C3D8();
    id v272 = objc_msgSend(v165, sel_objectsForKeys_, v166);

    id v67 = objc_msgSend(v59, sel_infoDictionary);
    char v167 = (void *)sub_1DA98C008();
    id v168 = objc_msgSend(v67, sel_objectForKey_ofClass_, v167, ObjCClassFromMetadata);

    if (v168)
    {
      sub_1DA98C8C8();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v304 = 0u;
      long long v305 = 0u;
    }
    sub_1DA7BA440((uint64_t)&v304, (uint64_t)&v306, &qword_1EBE66B48);
    uint64_t v264 = v3;
    if (!v307)
    {
      sub_1DA7A1AE0((uint64_t)&v306, &qword_1EBE66B48);
LABEL_105:
      char v169 = 0;
      goto LABEL_106;
    }
    if (!swift_dynamicCast()) {
      goto LABEL_105;
    }
    char v169 = v302;
LABEL_106:
    id v170 = v272;
    LODWORD(v271) = 0;
    uint64_t v171 = 0;
    *(unsigned char *)(v100 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_disablesImplicitDescriptorDiscovery) = v169;
    CGRect v172 = v301 + 56;
    uint64_t v173 = 1 << v301[32];
    uint64_t v174 = -1;
    if (v173 < 64) {
      uint64_t v174 = ~(-1 << v173);
    }
    uint64_t v175 = v174 & *((void *)v301 + 7);
    uint64_t v3 = (void *)((unint64_t)(v173 + 63) >> 6);
    uint64_t v65 = &qword_1EBE66B48;
    id v59 = (id)(MEMORY[0x1E4FBC840] + 8);
    while (v175)
    {
      v175 &= v175 - 1;
LABEL_123:
      swift_bridgeObjectRetain();
      a1 = (char **)sub_1DA98C008();
      swift_bridgeObjectRelease();
      id v67 = objc_msgSend(v170, sel_objectForKey_ofClass_, a1, ObjCClassFromMetadata);

      if (v67)
      {
        sub_1DA98C8C8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v304 = 0u;
        long long v305 = 0u;
      }
      sub_1DA7BA440((uint64_t)&v304, (uint64_t)&v306, &qword_1EBE66B48);
      if (v307)
      {
        if (swift_dynamicCast())
        {
          id v67 = (id)v302;
          a1 = (char **)sub_1DA98C788();
          int v179 = sub_1DA98C7A8();

          LODWORD(v271) = v179 | v271;
          id v170 = v272;
        }
      }
      else
      {
        sub_1DA7A1AE0((uint64_t)&v306, &qword_1EBE66B48);
      }
    }
    if (__OFADD__(v171++, 1))
    {
      __break(1u);
      goto LABEL_204;
    }
    if (v171 >= (uint64_t)v3) {
      goto LABEL_133;
    }
    uint64_t v177 = *(void *)&v172[8 * v171];
    if (v177) {
      goto LABEL_122;
    }
    uint64_t v178 = v171 + 1;
    if (v171 + 1 >= (uint64_t)v3) {
      goto LABEL_133;
    }
    uint64_t v177 = *(void *)&v172[8 * v178];
    if (v177) {
      goto LABEL_121;
    }
    uint64_t v178 = v171 + 2;
    if (v171 + 2 >= (uint64_t)v3) {
      goto LABEL_133;
    }
    uint64_t v177 = *(void *)&v172[8 * v178];
    if (v177)
    {
LABEL_121:
      uint64_t v171 = v178;
LABEL_122:
      uint64_t v175 = (v177 - 1) & v177;
      goto LABEL_123;
    }
    uint64_t v178 = v171 + 3;
    if (v171 + 3 >= (uint64_t)v3)
    {
LABEL_133:
      uint64_t v180 = v285;
      uint64_t v181 = v284;
      swift_release();
      id v182 = objc_msgSend(v276, sel_infoDictionary);
      uint64_t v183 = (void *)sub_1DA98C008();
      id v184 = objc_msgSend(v182, sel_objectForKey_ofClass_, v183, v268);

      if (v184)
      {
        sub_1DA98C8C8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v304 = 0u;
        long long v305 = 0u;
      }
      sub_1DA7BA440((uint64_t)&v304, (uint64_t)&v306, &qword_1EBE66B48);
      if (v307)
      {
        int v185 = swift_dynamicCast();
        uint64_t v186 = (unsigned char *)v302;
        if (!v185) {
          uint64_t v186 = 0;
        }
        uint64_t v301 = v186;
        if (v185) {
          uint64_t v187 = v303;
        }
        else {
          uint64_t v187 = 0;
        }
        uint64_t v298 = v187;
      }
      else
      {
        sub_1DA7A1AE0((uint64_t)&v306, &qword_1EBE66B48);
        uint64_t v301 = 0;
        uint64_t v298 = 0;
      }
      id v188 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F58D28]), sel_init);
      id v189 = objc_msgSend(v276, sel_entitlements);
      char v190 = (void *)sub_1DA98C008();
      id v191 = objc_msgSend(v189, sel_objectForKey_ofClass_, v190, ObjCClassFromMetadata);

      if (v191)
      {
        sub_1DA98C8C8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v304 = 0u;
        long long v305 = 0u;
      }
      sub_1DA7BA440((uint64_t)&v304, (uint64_t)&v306, &qword_1EBE66B48);
      if (v307)
      {
        if (swift_dynamicCast())
        {
          uint64_t v192 = v302;
          goto LABEL_152;
        }
      }
      else
      {
        sub_1DA7A1AE0((uint64_t)&v306, &qword_1EBE66B48);
      }
      uint64_t v192 = 0;
LABEL_152:
      objc_msgSend(v188, sel_setCanOpenSystemURLs_, v192);
      id v193 = objc_msgSend(v276, sel_entitlements);
      uint64_t v194 = (void *)sub_1DA98C008();
      id v195 = objc_msgSend(v193, sel_objectForKey_ofClass_, v194, ObjCClassFromMetadata);

      if (v195)
      {
        sub_1DA98C8C8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v304 = 0u;
        long long v305 = 0u;
      }
      sub_1DA7BA440((uint64_t)&v304, (uint64_t)&v306, &qword_1EBE66B48);
      if (v307)
      {
        if (swift_dynamicCast())
        {
          uint64_t v196 = v302;
          goto LABEL_160;
        }
      }
      else
      {
        sub_1DA7A1AE0((uint64_t)&v306, &qword_1EBE66B48);
      }
      uint64_t v196 = 0;
LABEL_160:
      objc_msgSend(v188, sel_setUsesEventService_, v196);
      id v197 = objc_msgSend(v276, sel_entitlements);
      uint64_t v198 = (void *)sub_1DA98C008();
      id v199 = objc_msgSend(v197, sel_objectForKey_ofClass_, v198, ObjCClassFromMetadata);

      if (v199)
      {
        sub_1DA98C8C8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v304 = 0u;
        long long v305 = 0u;
      }
      sub_1DA7BA440((uint64_t)&v304, (uint64_t)&v306, &qword_1EBE66B48);
      if (v307)
      {
        if (swift_dynamicCast())
        {
          uint64_t v200 = v302;
          goto LABEL_168;
        }
      }
      else
      {
        sub_1DA7A1AE0((uint64_t)&v306, &qword_1EBE66B48);
      }
      uint64_t v200 = 0;
LABEL_168:
      objc_msgSend(v188, sel_setCanKeepAlive_, v200);
      id v201 = objc_msgSend(v276, sel_entitlements);
      uint64_t v202 = (void *)sub_1DA98C008();
      id v203 = objc_msgSend(v201, sel_objectForKey_ofClass_, v202, ObjCClassFromMetadata);

      if (v203)
      {
        sub_1DA98C8C8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v304 = 0u;
        long long v305 = 0u;
      }
      sub_1DA7BA440((uint64_t)&v304, (uint64_t)&v306, &qword_1EBE66B48);
      if (v307)
      {
        if (swift_dynamicCast())
        {
          uint64_t v204 = v302;
          goto LABEL_176;
        }
      }
      else
      {
        sub_1DA7A1AE0((uint64_t)&v306, &qword_1EBE66B48);
      }
      uint64_t v204 = 0;
LABEL_176:
      uint64_t v205 = v188;
      objc_msgSend(v188, sel_setInvalidatesOnStorefrontChange_, v204);
      id v206 = objc_msgSend(v270, sel_identifier);
      if (!v206)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_212:
        __break(1u);
LABEL_213:
        swift_once();
LABEL_208:
        uint64_t v250 = sub_1DA989F38();
        __swift_project_value_buffer(v250, (uint64_t)qword_1EBE6F090);
        unint64_t v251 = sub_1DA989F18();
        os_log_type_t v252 = sub_1DA98C528();
        if (os_log_type_enabled(v251, v252))
        {
          uint64_t v253 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v253 = 0;
          _os_log_impl(&dword_1DA795000, v251, v252, "Received connection invalidated from LSD.  We must be shutting down... exiting.", v253, 2u);
          MEMORY[0x1E0178DA0](v253, -1, -1);
        }

        exit(0);
      }
      uint64_t v207 = v206;
      sub_1DA98C708();
      sub_1DA98C038();

      sub_1DA9899B8();
      swift_bridgeObjectRetain();
      uint64_t v208 = v282;
      sub_1DA9899B8();
      uint64_t v209 = 1;
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v296 + 56))(v208, 0, 1, v297);
      ObjCClassFromMetadata = (unsigned char *)sub_1DA98C6E8();
      id v210 = v276;
      uint64_t v211 = sub_1DA98C558();
      uint64_t v296 = v212;
      uint64_t v297 = v211;

      id v213 = objc_msgSend(v210, sel_localizedName);
      v285 = (unsigned char *)sub_1DA98C038();
      id v284 = v214;

      id v215 = objc_msgSend(v210, sel_uniqueIdentifier);
      sub_1DA989678();

      id v216 = objc_msgSend(v210, sel_executableURL);
      if (v216)
      {
        uint64_t v217 = v216;
        sub_1DA989438();

        uint64_t v209 = 0;
      }
      uint64_t v218 = v280;
      uint64_t v219 = v278;
      uint64_t v220 = v209;
      int v221 = v299;
      v273(v181, v220, 1, v299);
      sub_1DA7BA440((uint64_t)v181, (uint64_t)v180, (uint64_t *)&unk_1EBE66AB0);
      if (v275(v180, 1, v221) == 1)
      {
        sub_1DA7A1AE0((uint64_t)v180, (uint64_t *)&unk_1EBE66AB0);
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v219 + 56))(v218, 1, 1, v279);
        goto LABEL_182;
      }
      URL.lastModifiedDate.getter((uint64_t)v218);
      (*(void (**)(unsigned char *, uint64_t *))(v300 + 8))(v180, v221);
      uint64_t v222 = v279;
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v219 + 48))(v218, 1, v279) == 1)
      {
LABEL_182:
        sub_1DA9895C8();
        sub_1DA7A1AE0((uint64_t)v218, &qword_1EBE61CC0);
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v219 + 32))(v286, v218, v222);
      }
      uint64_t v223 = *(void (**)(unsigned char *, unsigned char *, uint64_t *))(v300 + 16);
      v223(v288, v293, v221);
      v223(v289, v295, v221);
      sub_1DA9893F8();
      if (v266)
      {
        id v224 = v266;
        sub_1DA98B9F8();
      }
      else
      {
        uint64_t v225 = sub_1DA98B9E8();
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v225 - 8) + 56))(v287, 1, 1, v225);
      }
      uint64_t v226 = v298;
      v223(v291, v294, v221);
      if (v226)
      {
        swift_bridgeObjectRelease();
        uint64_t v227 = v226;
      }
      else
      {
        uint64_t v301 = v263;
        uint64_t v227 = v267;
      }
      unsigned int v228 = v256;
      id v229 = v265;
      id v230 = objc_msgSend(v265, sel_localizedName);
      uint64_t v298 = sub_1DA98C038();
      v282 = v231;

      id v232 = v229;
      v281 = (unsigned char *)sub_1DA98C558();
      unint64_t v280 = v233;

      id v234 = objc_msgSend(v210, sel_SDKVersion);
      if (v234)
      {
        id v235 = v234;
        uint64_t v236 = sub_1DA98C038();
        uint64_t v238 = v237;
      }
      else
      {
        uint64_t v236 = sub_1DA98C038();
        uint64_t v238 = v239;
      }
      LODWORD(v279) = v228 == 1;
      objc_msgSend(v210, sel_platform);

      uint64_t v240 = CHSPlatformFromDYLDPlatform();
      if (objc_msgSend(v232, sel_developerType) == 1) {
        char v241 = 0;
      }
      else {
        char v241 = v259;
      }
      objc_msgSend(v205, sel_copy);
      sub_1DA98C8C8();
      swift_unknownObjectRelease();
      sub_1DA7A1A08(0, &qword_1EBE5A6D0);
      int v242 = swift_dynamicCast();
      uint64_t v243 = v304;
      if (!v242) {
        uint64_t v243 = 0;
      }
      uint64_t v254 = v240;
      uint64_t v244 = v283;
      WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)((uint64_t)ObjCClassFromMetadata, v297, v296, (uint64_t)v285, (uint64_t)v284, (uint64_t)v292, (uint64_t)v286, v279, v283, (uint64_t)v288, (uint64_t)v289, (uint64_t)v290, (uint64_t)v287, v271 & 1, (uint64_t)v291, (uint64_t)v301, v227, v298, (uint64_t)v282,
        (uint64_t)v281,
        (uint64_t)v280,
        v236,
        v238,
        v254,
        0,
        0,
        v258,
        v257,
        v241,
        v261,
        v260,
        v262,
        v243);

      uint64_t v245 = v299;
      uint64_t v246 = *(void (**)(unsigned char *, uint64_t *))(v300 + 8);
      v246(v294, v299);
      v246(v293, v245);

      v246(v295, v245);
      uint64_t v4 = v277;
      sub_1DA93C034((uint64_t)v244, v277 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info);
      return v4;
    }
    uint64_t v177 = *(void *)&v172[8 * v178];
    if (v177) {
      goto LABEL_121;
    }
    while (1)
    {
      uint64_t v171 = v178 + 1;
      if (__OFADD__(v178, 1)) {
        break;
      }
      if (v171 >= (uint64_t)v3) {
        goto LABEL_133;
      }
      uint64_t v177 = *(void *)&v172[8 * v171];
      ++v178;
      if (v177) {
        goto LABEL_122;
      }
    }
LABEL_204:
    __break(1u);
LABEL_205:
    swift_once();
LABEL_24:
    id v269 = v67;
    uint64_t v85 = sub_1DA989F38();
    uint64_t v86 = __swift_project_value_buffer(v85, (uint64_t)qword_1EBE6F090);
    uint64_t v87 = v59;
    uint64_t v298 = v86;
    uint64_t v88 = sub_1DA989F18();
    int v89 = sub_1DA98C548();
    BOOL v90 = os_log_type_enabled(v88, (os_log_type_t)v89);
    uint64_t v4 = v277;
    uint64_t v301 = v87;
    if (v90)
    {
      LODWORD(v272) = v89;
      id v276 = v59;
      long long v91 = (uint8_t *)swift_slowAlloc();
      uint64_t v271 = swift_slowAlloc();
      uint64_t v306 = v271;
      *(_DWORD *)long long v91 = 136446210;
      id v92 = objc_msgSend(v87, sel_bundleIdentifier);
      if (v92)
      {
        long long v93 = v92;
        uint64_t v94 = sub_1DA98C038();
        unint64_t v96 = v95;
      }
      else
      {
        uint64_t v94 = 7104878;
        unint64_t v96 = 0xE300000000000000;
      }
      *(void *)&long long v304 = sub_1DA8C5E00(v94, v96, &v306);
      sub_1DA98C858();
      uint64_t v87 = v301;

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA795000, v88, (os_log_type_t)v272, "No direct container found for extension: %{public}s - looking for effective container bundle identifier.", v91, 0xCu);
      uint64_t v119 = v271;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v119, -1, -1);
      MEMORY[0x1E0178DA0](v91, -1, -1);

      uint64_t v65 = v299;
      id v59 = v276;
    }
    else
    {
    }
    id v120 = objc_msgSend(v87, sel_entitlements);
    int v121 = (void *)sub_1DA98C008();
    sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE66B38);
    id v122 = objc_msgSend(v120, sel_objectForKey_ofClass_, v121, swift_getObjCClassFromMetadata());

    if (v122)
    {
      sub_1DA98C8C8();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v304 = 0u;
      long long v305 = 0u;
    }
    sub_1DA7BA440((uint64_t)&v304, (uint64_t)&v306, &qword_1EBE66B48);
    id v123 = v301;
    if (!v307)
    {

      sub_1DA7A1AE0((uint64_t)&v306, &qword_1EBE66B48);
      goto LABEL_56;
    }
    if ((swift_dynamicCast() & 1) == 0)
    {

      uint64_t v4 = v277;
LABEL_56:
      uint64_t v132 = sub_1DA989F18();
      os_log_type_t v133 = sub_1DA98C548();
      if (os_log_type_enabled(v132, v133))
      {
        uint64_t v134 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v134 = 0;
        _os_log_impl(&dword_1DA795000, v132, v133, "No effective container bundle identifier found.", v134, 2u);
        MEMORY[0x1E0178DA0](v134, -1, -1);
      }

      sub_1DA93B894();
      swift_allocError();
      *uint64_t v135 = 3;
      swift_willThrow();

LABEL_59:
      (*(void (**)(unsigned char *, uint64_t *))(v300 + 8))(v295, v65);
      goto LABEL_21;
    }
    uint64_t v124 = v302;
    uint64_t v125 = v303;
    id v126 = objc_allocWithZone(MEMORY[0x1E4F223C8]);
    id v127 = sub_1DA93B7B8(v124, v125, 0);
    if (v3) {
      break;
    }
    id v70 = v127;
    uint64_t v136 = sub_1DA989F18();
    int v137 = sub_1DA98C548();
    if (os_log_type_enabled(v136, (os_log_type_t)v137))
    {
      LODWORD(v301) = v137;
      id v276 = v59;
      uint64_t v138 = v70;
      os_log_type_t v139 = (uint8_t *)swift_slowAlloc();
      uint64_t v298 = swift_slowAlloc();
      uint64_t v306 = v298;
      *(_DWORD *)os_log_type_t v139 = 136446210;
      id v265 = v138;
      id v140 = objc_msgSend(v138, sel_bundleIdentifier);
      if (v140)
      {
        uint64_t v141 = v140;
        uint64_t v142 = sub_1DA98C038();
        unint64_t v144 = v143;
      }
      else
      {
        uint64_t v142 = 7104878;
        unint64_t v144 = 0xE300000000000000;
      }
      *(void *)&long long v304 = sub_1DA8C5E00(v142, v144, &v306);
      sub_1DA98C858();
      id v247 = v265;

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA795000, v136, (os_log_type_t)v301, "Found effective container bundle identifier: %{public}s", v139, 0xCu);
      uint64_t v248 = v298;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v248, -1, -1);
      uint64_t v249 = v139;
      id v70 = v247;
      MEMORY[0x1E0178DA0](v249, -1, -1);

      uint64_t v65 = v299;
      id v59 = v276;
    }
    else
    {
    }
    id v67 = v269;
  }

  uint64_t v128 = sub_1DA989F18();
  os_log_type_t v129 = sub_1DA98C548();
  if (os_log_type_enabled(v128, v129))
  {
    uint64_t v130 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v130 = 0;
    _os_log_impl(&dword_1DA795000, v128, v129, "No effective container bundle identifier found.", v130, 2u);
    MEMORY[0x1E0178DA0](v130, -1, -1);
  }

  sub_1DA93B894();
  swift_allocError();
  *uint64_t v131 = 3;
  swift_willThrow();

  (*(void (**)(unsigned char *, uint64_t *))(v300 + 8))(v295, v65);
LABEL_20:
  uint64_t v4 = v277;
LABEL_21:
  swift_release();
  type metadata accessor for WidgetExtension();
  swift_deallocPartialClassInstance();
  return v4;
}

uint64_t sub_1DA938DA8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeLock);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1DA9399C0(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  sub_1DA98B808();
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension);
  v9[3] = sub_1DA7A1A08(0, &qword_1EBE58ED0);
  v9[0] = v5;
  id v6 = v5;
  uint64_t v7 = MEMORY[0x1E0176990](v9, a1, 0, 0);
  sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE66B48);
  return v7;
}

uint64_t sub_1DA938E80()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeLock);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1DA9399C0(v0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  sub_1DA98B808();
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension);
  v6[3] = sub_1DA7A1A08(0, &qword_1EBE58ED0);
  v6[0] = v3;
  id v4 = v3;
  sub_1DA98B7F8();
  return sub_1DA7A1AE0((uint64_t)v6, &qword_1EBE66B48);
}

void sub_1DA938F6C()
{
  uint64_t v1 = v0;
  v44[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1DA989F38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBE58FE8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBE6F090);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_retain_n();
  uint64_t v7 = sub_1DA989F18();
  os_log_type_t v8 = sub_1DA98C548();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v41 = v6;
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    v44[0] = v40;
    *(_DWORD *)uint64_t v9 = 136315138;
    id v10 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension], sel_identifier);
    uint64_t v42 = v1;
    if (!v10)
    {
      swift_release();
      __break(1u);
      return;
    }
    uint64_t v11 = v10;
    uint64_t v12 = sub_1DA98C038();
    unint64_t v14 = v13;

    uint64_t v43 = sub_1DA8C5E00(v12, v14, (uint64_t *)v44);
    sub_1DA98C858();
    uint64_t v1 = v42;
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v7, v8, "Killing %s.", v9, 0xCu);
    uint64_t v15 = v40;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v15, -1, -1);
    MEMORY[0x1E0178DA0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v16 = objc_msgSend(self, sel_defaultManager);
  if (!v16) {
    __break(1u);
  }
  uint64_t v17 = v16;
  uint64_t v18 = (id *)&v1[OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info];
  type metadata accessor for WidgetExtensionInfo();
  uint64_t v19 = (void *)sub_1DA9893A8();
  v44[0] = 0;
  unsigned int v20 = objc_msgSend(v17, sel_terminatePlugInAtURL_withError_, v19, v44);

  id v21 = v44[0];
  if (v20)
  {
    id v22 = v21;
  }
  else
  {
    uint64_t v42 = (char *)v44[0];
    id v23 = v44[0];
    uint64_t v24 = (void *)sub_1DA9892D8();

    swift_willThrow();
    swift_retain();
    id v25 = v24;
    swift_retain();
    id v26 = v24;
    int v27 = sub_1DA989F18();
    os_log_type_t v28 = sub_1DA98C548();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = (void *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      uint64_t v42 = v1;
      uint64_t v32 = v31;
      v44[0] = v31;
      *(_DWORD *)uint64_t v29 = 136315394;
      id v33 = objc_msgSend(*v18, sel_tokenString);
      uint64_t v34 = sub_1DA98C038();
      unint64_t v36 = v35;

      uint64_t v43 = sub_1DA8C5E00(v34, v36, (uint64_t *)v44);
      sub_1DA98C858();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2112;
      id v37 = v24;
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v43 = v38;
      sub_1DA98C858();
      *uint64_t v30 = v38;

      _os_log_impl(&dword_1DA795000, v27, v28, "Error terminating plugin %s: %@", (uint8_t *)v29, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v30, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v32, -1, -1);
      MEMORY[0x1E0178DA0](v29, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1DA93954C()
{
  uint64_t v1 = sub_1DA989698();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (id *)(v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info);
  type metadata accessor for WidgetExtensionInfo();
  sub_1DA93C0D4(&qword_1EA8E5958, MEMORY[0x1E4F27990]);
  sub_1DA98BFB8();
  id v6 = objc_msgSend(*v5, sel_tokenString);
  sub_1DA98C038();

  sub_1DA98C108();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  sub_1DA989638();
  sub_1DA93C0D4(&qword_1EBE63390, MEMORY[0x1E4F27928]);
  sub_1DA98BFB8();
  id v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v9[1]
                                                             + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension), sel_uuid));
  sub_1DA989678();

  sub_1DA98BFB8();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1DA939798(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DA989698();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A1A44(a1, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E48);
  type metadata accessor for WidgetExtension();
  if (!swift_dynamicCast()) {
    goto LABEL_7;
  }
  uint64_t v16 = v17;
  type metadata accessor for WidgetExtensionInfo();
  id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension), sel_uuid));
  sub_1DA989678();

  LOBYTE(v8) = sub_1DA989668();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  if ((v8 & 1) == 0
    || (uint64_t v10 = v16 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info, (sub_1DA989668() & 1) == 0)
    || (id v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v16
                                                                    + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension), sel_uuid)),
        sub_1DA989678(),
        v11,
        char v12 = sub_1DA989668(),
        v9(v7, v4),
        (v12 & 1) == 0))
  {
    swift_release();
LABEL_7:
    char v13 = 0;
    return v13 & 1;
  }
  char v13 = WidgetExtensionInfo.matches(_:)(v10);
  swift_release();
  return v13 & 1;
}

void sub_1DA9399C0(uint64_t a1)
{
  uint64_t v3 = sub_1DA989F38();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v86 - v7;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateRequired) != 1) {
    return;
  }
  uint64_t v92 = v6;
  *(unsigned char *)(a1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateRequired) = 0;
  LODWORD(v87) = *(unsigned __int8 *)(a1
                                    + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateInitial);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateInitial) = 0;
  if (qword_1EBE595F8 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBE6F0F0);
  swift_retain_n();
  uint64_t v9 = sub_1DA989F18();
  os_log_type_t v10 = sub_1DA98C518();
  BOOL v11 = os_log_type_enabled(v9, v10);
  char v12 = &unk_1EBE6F000;
  uint64_t v97 = v1;
  uint64_t v98 = v3;
  uint64_t v99 = v4;
  uint64_t v94 = v8;
  if (v11)
  {
    char v13 = (uint8_t *)swift_slowAlloc();
    unint64_t v96 = (void *)swift_slowAlloc();
    v101[0] = (uint64_t)v96;
    *(_DWORD *)char v13 = 136315138;
    id v95 = v13 + 4;
    id v14 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info), sel_tokenString);
    uint64_t v15 = a1;
    uint64_t v16 = sub_1DA98C038();
    unint64_t v18 = v17;

    uint64_t v19 = v16;
    a1 = v15;
    uint64_t v102 = sub_1DA8C5E00(v19, v18, v101);
    sub_1DA98C858();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v9, v10, "[%s] Begin fetching preferred languages", v13, 0xCu);
    unsigned int v20 = v96;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v20, -1, -1);
    id v21 = v13;
    char v12 = (void *)&unk_1EBE6F000;
    MEMORY[0x1E0178DA0](v21, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v22 = *(char **)(a1 + v12[48]);
  id v23 = &v22[*MEMORY[0x1E4F58B78]];
  swift_beginAccess();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v25 = *(void *)(v24 - 8);
  id v26 = *(unsigned int (**)(NSObject *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v27 = v25 + 48;
  if (v26(v23, 1, v24) == 1)
  {
    __break(1u);
    goto LABEL_45;
  }
  os_log_type_t v28 = self;
  os_log_t v91 = v23;
  sub_1DA9899C8();
  swift_endAccess();
  uint64_t v29 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v28, sel_preferredLanguagesForContainerBundleIdentifier_, v29);

  int v89 = v26;
  uint64_t v90 = v24;
  if (v30) {
    uint64_t v31 = (void *)sub_1DA98C288();
  }
  else {
    uint64_t v31 = 0;
  }
  uint64_t v88 = v27;
  swift_retain_n();
  uint64_t v32 = sub_1DA989F18();
  os_log_type_t v33 = sub_1DA98C518();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v100 = a1;
  id v95 = v30;
  unint64_t v96 = v31;
  if (v34)
  {
    unint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v101[0] = v36;
    *(_DWORD *)unint64_t v35 = 136315138;
    id v37 = objc_msgSend(v22, sel_tokenString);
    uint64_t v38 = sub_1DA98C038();
    unint64_t v40 = v39;

    uint64_t v102 = sub_1DA8C5E00(v38, v40, v101);
    sub_1DA98C858();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v32, v33, "[%s] End fetching preferred languages", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v36, -1, -1);
    uint64_t v41 = v35;
    a1 = v100;
    MEMORY[0x1E0178DA0](v41, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v43 = v98;
  uint64_t v42 = v99;
  id v93 = *(id *)(a1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension);
  id v44 = objc_msgSend(v93, sel_preferredLanguages);
  if (v44)
  {
    uint64_t v45 = v44;
    uint64_t v46 = (void *)sub_1DA98C288();

    uint64_t v47 = v96;
    if (v96)
    {
      if (v46)
      {
        char v48 = sub_1DA935CB0(v96, v46);
        swift_bridgeObjectRelease();
        if (v48)
        {
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
      }
      goto LABEL_20;
    }
    if (v46)
    {
      swift_bridgeObjectRelease();
      char v49 = 1;
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v47 = v96;
    if (v96)
    {
LABEL_20:
      char v49 = 0;
LABEL_23:
      if (qword_1EBE58FE8 != -1) {
        swift_once();
      }
      uint64_t v50 = __swift_project_value_buffer(v43, (uint64_t)qword_1EBE6F090);
      id v51 = v94;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v94, v50, v43);
      swift_bridgeObjectRetain();
      swift_retain_n();
      id v52 = sub_1DA989F18();
      int v53 = sub_1DA98C548();
      if (!os_log_type_enabled(v52, (os_log_type_t)v53))
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v51, v43);
        id v72 = v93;
LABEL_41:
        id v85 = v95;
        objc_msgSend(v72, sel_setPreferredLanguages_, v95);

        return;
      }
      LODWORD(v92) = v53;
      uint64_t v54 = swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      uint64_t v102 = v87;
      *(_DWORD *)uint64_t v54 = 136315650;
      os_log_t v55 = v91;
      swift_beginAccess();
      if (v89(v55, 1, v90) != 1)
      {
        uint64_t v56 = sub_1DA9899C8();
        unint64_t v58 = v57;
        swift_endAccess();
        v101[0] = sub_1DA8C5E00(v56, v58, &v102);
        sub_1DA98C858();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v54 + 12) = 2080;
        if (v49)
        {
          unint64_t v59 = 0xE300000000000000;
          uint64_t v60 = 7104878;
        }
        else
        {
          v101[0] = (uint64_t)v47;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
          sub_1DA7A0410((unint64_t *)&qword_1EBE62A48, &qword_1EBE62A40);
          uint64_t v60 = sub_1DA98BFC8();
          unint64_t v59 = v73;
          swift_bridgeObjectRelease();
        }
        os_log_t v91 = v52;
        v101[0] = sub_1DA8C5E00(v60, v59, &v102);
        sub_1DA98C858();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v54 + 22) = 2080;
        id v72 = v93;
        id v74 = objc_msgSend(v93, sel_preferredLanguages);
        if (v74)
        {
          id v75 = v74;
          uint64_t v76 = sub_1DA98C288();

          v101[0] = v76;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
          sub_1DA7A0410((unint64_t *)&qword_1EBE62A48, &qword_1EBE62A40);
          uint64_t v77 = sub_1DA98BFC8();
          unint64_t v79 = v78;
          swift_bridgeObjectRelease();
          uint64_t v80 = v98;
          uint64_t v81 = v99;
          id v82 = v94;
        }
        else
        {
          unint64_t v79 = 0xE300000000000000;
          uint64_t v80 = v98;
          uint64_t v81 = v99;
          id v82 = v94;
          uint64_t v77 = 7104878;
        }
        v101[0] = sub_1DA8C5E00(v77, v79, &v102);
        sub_1DA98C858();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_log_t v83 = v91;
        _os_log_impl(&dword_1DA795000, v91, (os_log_type_t)v92, "Changing NSExtension's preferred app override languages in container (%s) changed to: %s from: %s", (uint8_t *)v54, 0x20u);
        uint64_t v84 = v87;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v84, -1, -1);
        MEMORY[0x1E0178DA0](v54, -1, -1);

        (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v80);
        goto LABEL_41;
      }
LABEL_45:
      swift_bridgeObjectRelease();
      swift_release_n();
      __break(1u);
LABEL_46:
      swift_release();
      __break(1u);
      return;
    }
  }
LABEL_29:

  uint64_t v61 = v92;
  if ((v87 & 1) == 0)
  {
    if (qword_1EBE58FE8 != -1) {
      swift_once();
    }
    uint64_t v62 = __swift_project_value_buffer(v43, (uint64_t)qword_1EBE6F090);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v61, v62, v43);
    swift_retain_n();
    uint64_t v63 = v61;
    uint64_t v64 = sub_1DA989F18();
    os_log_type_t v65 = sub_1DA98C548();
    if (!os_log_type_enabled(v64, v65))
    {

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v63, v43);
      return;
    }
    uint64_t v66 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v102 = v67;
    *(_DWORD *)uint64_t v66 = 136315138;
    os_log_t v68 = v91;
    swift_beginAccess();
    if (v89(v68, 1, v90) != 1)
    {
      uint64_t v69 = sub_1DA9899C8();
      unint64_t v71 = v70;
      swift_endAccess();
      v101[0] = sub_1DA8C5E00(v69, v71, &v102);
      sub_1DA98C858();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA795000, v64, v65, "No change to preferred app overrides for (%s).", v66, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v67, -1, -1);
      MEMORY[0x1E0178DA0](v66, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v92, v43);
      return;
    }
    goto LABEL_46;
  }
}

uint64_t sub_1DA93A604()
{
  sub_1DA83C6FC(v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info);

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA93A688()
{
  return type metadata accessor for WidgetExtension();
}

uint64_t type metadata accessor for WidgetExtension()
{
  uint64_t result = qword_1EBE58AB8;
  if (!qword_1EBE58AB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DA93A6DC()
{
  uint64_t result = type metadata accessor for WidgetExtensionInfo();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetExtensionError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFF9 && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483641);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 5;
  if (v5 >= 7) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WidgetExtensionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF9)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483641;
    if (a3 >= 0x7FFFFFF9) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF9) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 6;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetExtensionError()
{
  return &type metadata for WidgetExtensionError;
}

uint64_t sub_1DA93A85C()
{
  return sub_1DA93C0D4((unint64_t *)&qword_1EBE63FF0, MEMORY[0x1E4F58B88]);
}

uint64_t sub_1DA93A8A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA83C698(*v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info, a1);
}

uint64_t sub_1DA93A8BC()
{
  id v1 = objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info), sel_tokenString);
  uint64_t v2 = sub_1DA98C038();

  return v2;
}

uint64_t sub_1DA93A920()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DA93A960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 28);
  uint64_t v5 = sub_1DA989698();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t sub_1DA93A9E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 32);
  uint64_t v5 = sub_1DA989638();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t sub_1DA93AA70()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 36));
}

uint64_t sub_1DA93AAAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 40);
  uint64_t v5 = sub_1DA989478();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t sub_1DA93AB34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 44);
  uint64_t v5 = sub_1DA989478();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t sub_1DA93ABBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 48);
  uint64_t v5 = sub_1DA989478();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t sub_1DA93AC44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v4 = type metadata accessor for WidgetExtensionInfo();
  return sub_1DA7A1F58(v3 + *(int *)(v4 + 52), a1, &qword_1EBE66AF0);
}

uint64_t sub_1DA93AC94()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 56));
}

uint64_t sub_1DA93ACD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 60);
  uint64_t v5 = sub_1DA989478();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t sub_1DA93AD58()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info) + *MEMORY[0x1E4F58B78];
  swift_beginAccess();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = sub_1DA9899C8();
    swift_endAccess();
    return v4;
  }
  return result;
}

uint64_t sub_1DA93AE20()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 72));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DA93AE70()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 64));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DA93AEC0()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 76));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DA93AF10()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  return *(void *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 80));
}

uint64_t sub_1DA93AF4C()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 84));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DA93AF9C()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 88));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DA93AFEC()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 92));
}

uint64_t sub_1DA93B028()
{
  type metadata accessor for WidgetExtensionInfo();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA93B074()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 100));
}

uint64_t sub_1DA93B0B0()
{
  type metadata accessor for WidgetExtensionInfo();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1DA935890(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void *sub_1DA93B120()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v2 = *(void **)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 108));
  id v3 = v2;
  return v2;
}

uint64_t sub_1DA93B164()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_disablesImplicitDescriptorDiscovery);
}

uint64_t sub_1DA93B178(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1DA98BA48();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = sub_1DA98BC08();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  os_log_type_t v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DA7A1F58(a2, (uint64_t)v14, &qword_1EBE59980);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F46D98], v3);
  sub_1DA98BBE8();
  sub_1DA98BBF8();
  sub_1DA98BBD8();
  uint64_t v11 = sub_1DA938DA8((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

uint64_t sub_1DA93B340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a4;
  uint64_t v5 = sub_1DA98BA48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = sub_1DA98BC08();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DA7A1F58(a2, (uint64_t)v15, &qword_1EBE59980);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F46D98], v5);
  sub_1DA98BBE8();
  sub_1DA98BBF8();
  sub_1DA98BBD8();
  sub_1DA938E80();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1DA93B510(uint64_t a1)
{
  return sub_1DA938DA8(a1);
}

uint64_t sub_1DA93B534()
{
  return sub_1DA938E80();
}

void sub_1DA93B558()
{
}

uint64_t sub_1DA93B57C(uint64_t a1)
{
  return sub_1DA939798(a1) & 1;
}

uint64_t sub_1DA93B5A4(uint64_t *a1, uint64_t *a2)
{
  return sub_1DA93B8E8(*a1, *a2);
}

uint64_t sub_1DA93B5B0()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA93B5F4()
{
  return sub_1DA93954C();
}

uint64_t sub_1DA93B618()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA93B658(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return Extension.description.getter(a1, WitnessTable);
}

id sub_1DA93B6AC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(*v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info);
  *a1 = v2;
  return v2;
}

uint64_t sub_1DA93B6C4()
{
  return sub_1DA93C0D4(&qword_1EBE5A370, (void (*)(uint64_t))type metadata accessor for WidgetExtension);
}

uint64_t sub_1DA93B70C(void *a1)
{
  a1[1] = sub_1DA93C0D4(&qword_1EBE58AA8, (void (*)(uint64_t))type metadata accessor for WidgetExtension);
  a1[2] = sub_1DA93C0D4(&qword_1EBE5A370, (void (*)(uint64_t))type metadata accessor for WidgetExtension);
  uint64_t result = sub_1DA93C0D4(&qword_1EBE5A378, (void (*)(uint64_t))type metadata accessor for WidgetExtension);
  a1[3] = result;
  return result;
}

id sub_1DA93B7B8(uint64_t a1, uint64_t a2, char a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1DA9892D8();

    swift_willThrow();
  }
  return v6;
}

unint64_t sub_1DA93B894()
{
  unint64_t result = qword_1EBE5A9C8;
  if (!qword_1EBE5A9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE5A9C8);
  }
  return result;
}

uint64_t sub_1DA93B8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989698();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  uint64_t v12 = a1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  type metadata accessor for WidgetExtensionInfo();
  uint64_t v13 = a2 + v11;
  if ((sub_1DA989668() & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v32 = a2;
  os_log_type_t v33 = v7;
  uint64_t v34 = v5;
  uint64_t v35 = v4;
  id v14 = objc_msgSend(*(id *)v12, sel_tokenString);
  uint64_t v15 = sub_1DA98C038();
  uint64_t v17 = v16;

  id v18 = objc_msgSend(*(id *)v13, sel_tokenString);
  uint64_t v19 = sub_1DA98C038();
  uint64_t v21 = v20;

  if (v15 == v19 && v17 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v23 = sub_1DA98CE58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v24 = 0;
    if ((v23 & 1) == 0) {
      return v24 & 1;
    }
  }
  if (*(void *)(v12 + 8) == *(void *)(v13 + 8) && *(void *)(v12 + 16) == *(void *)(v13 + 16)
    || (char v24 = 0, (sub_1DA98CE58() & 1) != 0))
  {
    if (sub_1DA9895E8())
    {
      id v25 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                                  + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension), sel_uuid));
      sub_1DA989678();

      id v26 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v32
                                                                  + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension), sel_uuid));
      uint64_t v27 = v33;
      sub_1DA989678();

      char v24 = sub_1DA989668();
      os_log_type_t v28 = *(void (**)(char *, uint64_t))(v34 + 8);
      uint64_t v29 = v27;
      uint64_t v30 = v35;
      v28(v29, v35);
      v28(v10, v30);
      return v24 & 1;
    }
LABEL_14:
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_1DA93BB94(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v54 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v42 - v9;
  v13.n128_f64[0] = MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v42 - v12;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v60 = MEMORY[0x1E4FBC860];
  uint64_t v50 = *(void *)(a1 + 16);
  if (!v50) {
    return result;
  }
  uint64_t v42 = v2;
  uint64_t v16 = 0;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  uint64_t v17 = v6 + 16;
  id v18 = v19;
  unint64_t v20 = (*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64);
  uint64_t v21 = *(void *)(v17 + 56);
  uint64_t v49 = a1 + v20;
  unint64_t v58 = (void (**)(char *, uint64_t))(v17 - 8);
  uint64_t v59 = v21;
  unint64_t v46 = v20;
  uint64_t v47 = a2 + v20;
  uint64_t v45 = a2 + v20 + v21;
  int v53 = (void (**)(char *, char *, uint64_t))(v17 + 16);
  uint64_t v44 = a2 + v20 + 2 * v21;
  uint64_t v52 = MEMORY[0x1E4FBC860];
  uint64_t v22 = a2;
  uint64_t v56 = v19;
  uint64_t v57 = v17;
  os_log_t v55 = v10;
  uint64_t v43 = a2;
  char v48 = (char *)&v42 - v12;
  v19(v14, a1 + v20, v5, v13);
  while (1)
  {
    uint64_t v24 = *(void *)(v22 + 16);
    if (v24) {
      break;
    }
LABEL_11:
    uint64_t v30 = v22;
    uint64_t v31 = *v53;
    (*v53)(v54, v14, v5);
    uint64_t v32 = v52;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1DA7F7AE0(0, *(void *)(v32 + 16) + 1, 1);
    }
    uint64_t v33 = v60;
    unint64_t v35 = *(void *)(v60 + 16);
    unint64_t v34 = *(void *)(v60 + 24);
    if (v35 >= v34 >> 1)
    {
      sub_1DA7F7AE0(v34 > 1, v35 + 1, 1);
      uint64_t v33 = v60;
    }
    *(void *)(v33 + 16) = v35 + 1;
    uint64_t v52 = v33;
    v31((char *)(v33 + v46 + v35 * v59), v54, v5);
    uint64_t v10 = v55;
    uint64_t v22 = v30;
LABEL_5:
    if (++v16 == v50) {
      return v60;
    }
    v18(v14, v49 + v59 * v16, v5, v23);
  }
  ((void (*)(char *, uint64_t, uint64_t))v18)(v10, v47, v5);
  uint64_t v25 = sub_1DA7A0410((unint64_t *)&qword_1EBE5A0E0, &qword_1EBE5A0E8);
  swift_bridgeObjectRetain();
  id v26 = v14;
  uint64_t v27 = v22;
  char v28 = sub_1DA98BFF8();
  uint64_t v29 = *v58;
  (*v58)(v10, v5);
  if (v28)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = v27;
    id v14 = v26;
LABEL_4:
    v29(v14, v5);
    id v18 = v56;
    goto LABEL_5;
  }
  uint64_t v51 = v25;
  if (v24 == 1)
  {
LABEL_10:
    uint64_t v22 = v27;
    swift_bridgeObjectRelease();
    id v18 = v56;
    id v14 = v26;
    goto LABEL_11;
  }
  ((void (*)(char *, uint64_t, uint64_t))v56)(v10, v45, v5);
  char v36 = sub_1DA98BFF8();
  v29(v10, v5);
  if (v36)
  {
    uint64_t v22 = v27;
    swift_bridgeObjectRelease();
    id v14 = v26;
    goto LABEL_4;
  }
  if (v24 == 2) {
    goto LABEL_10;
  }
  uint64_t v37 = v44;
  uint64_t v38 = 2;
  while (1)
  {
    unint64_t v39 = v55;
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v56)(v55, v37, v5);
    uint64_t v40 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    char v41 = sub_1DA98BFF8();
    v29(v39, v5);
    if (v41)
    {
      uint64_t v22 = v43;
      swift_bridgeObjectRelease();
      uint64_t v10 = v55;
      id v14 = v48;
      goto LABEL_4;
    }
    ++v38;
    v37 += v59;
    if (v40 == v24)
    {
      uint64_t v22 = v43;
      swift_bridgeObjectRelease();
      id v14 = v48;
      id v18 = v56;
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA93C034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetExtensionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA93C098@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t result = sub_1DA9899C8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DA93C0D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PowerlogUpdateIdentity.init(widget:identifier:location:suggestionIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7 = *a4;
  char v8 = *((unsigned char *)a4 + 8);
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a5;
  *(void *)(a7 + 32) = a6;
  *(void *)(a7 + 40) = v7;
  *(unsigned char *)(a7 + 48) = v8;
  return result;
}

uint64_t PowerlogControlUpdateIdentity.init(control:identifier:location:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = *a4;
  char v6 = *((unsigned char *)a4 + 8);
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = v5;
  *(unsigned char *)(a5 + 32) = v6;
  return result;
}

ChronoKit::PowerlogUpdateCost_optional __swiftcall PowerlogUpdateCost.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1DA98CC58();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t PowerlogUpdateCost.rawValue.getter()
{
  if (*v0) {
    return 1701147238;
  }
  else {
    return 0x6465746567647562;
  }
}

uint64_t sub_1DA93C1E8()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA93C264()
{
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA93C2CC()
{
  return sub_1DA98CF68();
}

ChronoKit::PowerlogUpdateCost_optional sub_1DA93C344(Swift::String *a1)
{
  return PowerlogUpdateCost.init(rawValue:)(*a1);
}

void sub_1DA93C350(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701147238;
  if (!*v1) {
    uint64_t v2 = 0x6465746567647562;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DA93C388(char *a1, char *a2)
{
  return sub_1DA8727B0(*a1, *a2);
}

ChronoKit::PowerlogWakeReason_optional __swiftcall PowerlogWakeReason.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DA98CC58();
  result.value = swift_bridgeObjectRelease();
  char v5 = 14;
  if (v3 < 0xE) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t PowerlogWakeReason.rawValue.getter()
{
  unint64_t result = 0x746C7561666564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656C617473;
      break;
    case 2:
      unint64_t result = 0x6765726F46707061;
      break;
    case 3:
      unint64_t result = 0x6973736553707061;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x6C616E7265747865;
      break;
    case 7:
      unint64_t result = 0x65526D6574737973;
      break;
    case 8:
      unint64_t result = 0x746F687370616E73;
      break;
    case 9:
      unint64_t result = 0x6775626564;
      break;
    case 0xA:
      unint64_t result = 0x6D706F6C65766564;
      break;
    case 0xB:
      unint64_t result = 0x7463617265746E69;
      break;
    case 0xC:
      unint64_t result = 0x65737561706E75;
      break;
    case 0xD:
      unint64_t result = 0x726568746FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DA93C5B8()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA93C620()
{
  PowerlogWakeReason.rawValue.getter();
  sub_1DA98C108();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA93C684()
{
  return sub_1DA98CF68();
}

ChronoKit::PowerlogWakeReason_optional sub_1DA93C6E8(Swift::String *a1)
{
  return PowerlogWakeReason.init(rawValue:)(*a1);
}

unint64_t sub_1DA93C6F4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PowerlogWakeReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DA93C71C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DA872850(*a1, *a2);
}

id PowerlogUpdateIdentity.widget.getter()
{
  return *v0;
}

uint64_t PowerlogUpdateIdentity.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PowerlogUpdateIdentity.suggestionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void PowerlogUpdateIdentity.location.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 40);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PowerlogUpdateIdentity.init(widget:identifier:location:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = *a4;
  char v6 = *((unsigned char *)a4 + 8);
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = 0;
  *(void *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = v5;
  *(unsigned char *)(a5 + 48) = v6;
  return result;
}

uint64_t PowerlogUpdateIdentity.description.getter()
{
  uint64_t v1 = *v0;
  sub_1DA98CA18();
  sub_1DA98C148();
  id v2 = objc_msgSend(v1, sel_description);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  PowerlogWidgetLocation.description.getter();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return 0;
}

uint64_t PowerlogUpdateIdentity.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 32);
  char v2 = *(unsigned char *)(v0 + 48);
  id v3 = *(id *)v0;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1DA98CF38();
    swift_bridgeObjectRetain();
    sub_1DA98C108();
    swift_bridgeObjectRelease();
    if (v2) {
      return sub_1DA98CF28();
    }
  }
  else
  {
    sub_1DA98CF38();
    if (v2) {
      return sub_1DA98CF28();
    }
  }
  sub_1DA98CF28();
  return sub_1DA98CF28();
}

uint64_t PowerlogUpdateIdentity.hashValue.getter()
{
  return sub_1DA98CF68();
}

void sub_1DA93CAE8(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 40);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1DA93CB00()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA93CB70()
{
  return sub_1DA98CF68();
}

id PowerlogControlUpdateIdentity.control.getter()
{
  return *v0;
}

uint64_t PowerlogControlUpdateIdentity.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void PowerlogControlUpdateIdentity.location.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PowerlogControlUpdateIdentity.description.getter()
{
  uint64_t v1 = *v0;
  sub_1DA98CA18();
  sub_1DA98C148();
  id v2 = objc_msgSend(v1, sel_description);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  PowerlogWidgetLocation.description.getter();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return 0;
}

uint64_t PowerlogControlUpdateIdentity.hash(into:)()
{
  char v1 = *(unsigned char *)(v0 + 32);
  id v2 = *(id *)v0;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0) {
    sub_1DA98CF28();
  }
  return sub_1DA98CF28();
}

uint64_t PowerlogControlUpdateIdentity.hashValue.getter()
{
  char v1 = *(void **)v0;
  char v2 = *(unsigned char *)(v0 + 32);
  sub_1DA98CF18();
  id v3 = v1;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0) {
    sub_1DA98CF28();
  }
  sub_1DA98CF28();
  return sub_1DA98CF68();
}

uint64_t sub_1DA93CEEC()
{
  char v1 = *(void **)v0;
  char v2 = *(unsigned char *)(v0 + 32);
  sub_1DA98CF18();
  id v3 = v1;
  sub_1DA98C7B8();

  swift_bridgeObjectRetain();
  sub_1DA98C108();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0) {
    sub_1DA98CF28();
  }
  sub_1DA98CF28();
  return sub_1DA98CF68();
}

BOOL _s9ChronoKit22PowerlogUpdateIdentityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v18 = *(void *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 48);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 16);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  int v9 = *(unsigned __int8 *)(a2 + 48);
  sub_1DA7ECAA0();
  if ((sub_1DA98C7A8() & 1) == 0) {
    return 0;
  }
  if (v2 != v5 || v19 != v16)
  {
    char v10 = sub_1DA98CE58();
    BOOL result = 0;
    if ((v10 & 1) == 0) {
      return result;
    }
  }
  if (!v17)
  {
    if (!v8) {
      goto LABEL_14;
    }
    return 0;
  }
  if (!v8) {
    return 0;
  }
  if (v18 == v6 && v17 == v8 || (v12 = sub_1DA98CE58(), BOOL result = 0, (v12 & 1) != 0))
  {
LABEL_14:
    if (v4)
    {
      uint64_t v13 = qword_1DA999E50[v3];
      if (!v9)
      {
        uint64_t v14 = 3;
        return v13 == v14;
      }
      uint64_t v14 = v7;
    }
    else
    {
      uint64_t v14 = v7;
      if ((v9 & 1) == 0) {
        return v3 == v7;
      }
      uint64_t v13 = 3;
    }
    switch(v14)
    {
      case 3:
        uint64_t v14 = 4;
        break;
      case 4:
        uint64_t v14 = 5;
        break;
      case 5:
        uint64_t v14 = 6;
        break;
      case 6:
        uint64_t v14 = 7;
        break;
      case 7:
        uint64_t v14 = 8;
        break;
      default:
        return v13 == v14;
    }
    return v13 == v14;
  }
  return result;
}

BOOL _s9ChronoKit29PowerlogControlUpdateIdentityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  int v9 = *(unsigned __int8 *)(a2 + 32);
  sub_1DA7ECAA0();
  if ((sub_1DA98C7A8() & 1) == 0) {
    return 0;
  }
  BOOL v10 = v2 == v6 && v3 == v8;
  if (v10 || (v11 = sub_1DA98CE58(), BOOL result = 0, (v11 & 1) != 0))
  {
    if (v5)
    {
      uint64_t v13 = qword_1DA999E50[v4];
      if (!v9)
      {
        uint64_t v7 = 3;
        return v13 == v7;
      }
    }
    else
    {
      if ((v9 & 1) == 0) {
        return v4 == v7;
      }
      uint64_t v13 = 3;
    }
    switch(v7)
    {
      case 3:
        uint64_t v7 = 4;
        break;
      case 4:
        uint64_t v7 = 5;
        break;
      case 5:
        uint64_t v7 = 6;
        break;
      case 6:
        uint64_t v7 = 7;
        break;
      case 7:
        uint64_t v7 = 8;
        break;
      default:
        return v13 == v7;
    }
    return v13 == v7;
  }
  return result;
}

unint64_t sub_1DA93D2B8()
{
  unint64_t result = qword_1EA8E6980;
  if (!qword_1EA8E6980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6980);
  }
  return result;
}

unint64_t sub_1DA93D310()
{
  unint64_t result = qword_1EA8E6988;
  if (!qword_1EA8E6988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6988);
  }
  return result;
}

unint64_t sub_1DA93D364(uint64_t a1)
{
  unint64_t result = sub_1DA93D38C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DA93D38C()
{
  unint64_t result = qword_1EBE64F60;
  if (!qword_1EBE64F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE64F60);
  }
  return result;
}

unint64_t sub_1DA93D3E4()
{
  unint64_t result = qword_1EBE64F68;
  if (!qword_1EBE64F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE64F68);
  }
  return result;
}

unint64_t sub_1DA93D438(uint64_t a1)
{
  unint64_t result = sub_1DA93D460();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DA93D460()
{
  unint64_t result = qword_1EBE5AAA8;
  if (!qword_1EBE5AAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE5AAA8);
  }
  return result;
}

unint64_t sub_1DA93D4B8()
{
  unint64_t result = qword_1EBE5AAB0;
  if (!qword_1EBE5AAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE5AAB0);
  }
  return result;
}

uint64_t dispatch thunk of PowerlogUpdateServicing.timelineUpdated(for:hostIdentity:cost:reason:remainingBudget:executionTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of PowerlogUpdateServicing.flush()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

unsigned char *storeEnumTagSinglePayload for PowerlogUpdateCost(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA93D600);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogUpdateCost()
{
  return &type metadata for PowerlogUpdateCost;
}

uint64_t getEnumTagSinglePayload for PowerlogWakeReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PowerlogWakeReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA93D794);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogWakeReason()
{
  return &type metadata for PowerlogWakeReason;
}

uint64_t initializeWithCopy for PowerlogUpdateIdentity(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PowerlogUpdateIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v7;
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PowerlogUpdateIdentity(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PowerlogUpdateIdentity(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PowerlogUpdateIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogUpdateIdentity()
{
  return &type metadata for PowerlogUpdateIdentity;
}

uint64_t initializeWithCopy for PowerlogControlUpdateIdentity(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PowerlogControlUpdateIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PowerlogControlUpdateIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PowerlogControlUpdateIdentity(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PowerlogControlUpdateIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogControlUpdateIdentity()
{
  return &type metadata for PowerlogControlUpdateIdentity;
}

uint64_t sub_1DA93DBB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1DA7F7C90(0, v6, 0);
    uint64_t v8 = a1 + 32;
    do
    {
      sub_1DA800210(v8, (uint64_t)v13);
      swift_dynamicCast();
      uint64_t v7 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA7F7C90(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v14;
      }
      unint64_t v10 = *(void *)(v7 + 16);
      unint64_t v9 = *(void *)(v7 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1DA7F7C90(v9 > 1, v10 + 1, 1);
        uint64_t v7 = v14;
      }
      *(void *)(v7 + 16) = v10 + 1;
      sub_1DA942C10((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v10, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
      v8 += 32;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void *sub_1DA93DD74()
{
  char v1 = v0;
  uint64_t v2 = sub_1DA98C598();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = sub_1DA98C5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA98B4A8();
  MEMORY[0x1F4188790](v7 - 8);
  sub_1DA7A6D9C();
  sub_1DA98B488();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC68], v3);
  v14[1] = MEMORY[0x1E4FBC860];
  sub_1DA94285C((unint64_t *)&qword_1EBE65CA0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE65C80);
  sub_1DA7A6E24((unint64_t *)&qword_1EBE65C88, &qword_1EBE65C80);
  sub_1DA98C918();
  v0[2] = sub_1DA98C638();
  type metadata accessor for UnfairLock();
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = (_DWORD *)swift_slowAlloc();
  _DWORD *v9 = 0;
  *(void *)(v8 + 16) = v9;
  uint64_t v10 = MEMORY[0x1E4FBC868];
  v1[3] = v8;
  v1[4] = v10;
  v1[5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA70]), sel_init);
  char v11 = (char *)v1 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_prewarmRequest;
  uint64_t v12 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *((unsigned char *)v1 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_processQueueEnqueued) = 0;
  return v1;
}

uint64_t sub_1DA93E064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v44 = a2;
  uint64_t v54 = a1;
  uint64_t v5 = sub_1DA98B648();
  uint64_t v53 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v52 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1DA98A888();
  uint64_t v7 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  unint64_t v46 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v45 = (char *)&v39 - v10;
  uint64_t v51 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
  MEMORY[0x1F4188790](v51);
  uint64_t v50 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v58 = (char *)&v39 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DA989638();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  os_log_t v55 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v39 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v39 - v24;
  sub_1DA7A1F58(v54, (uint64_t)v16, &qword_1EBE61CC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1) {
    return sub_1DA7A1AE0((uint64_t)v16, &qword_1EBE61CC0);
  }
  uint64_t v40 = v18;
  uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  uint64_t v41 = v18 + 32;
  uint64_t v42 = v27;
  uint64_t v43 = v25;
  v27((uint64_t)v25, v16, v17);
  sub_1DA7A1A44(v44, (uint64_t)v57);
  char v28 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v28(v22, v25, v17);
  uint64_t v54 = v4;
  uint64_t v44 = v5;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v30 = v45;
  uint64_t v31 = v47;
  v29(v45, v48, v47);
  v29(v58, (uint64_t)v30, v31);
  sub_1DA7A1A44((uint64_t)v57, (uint64_t)v56);
  v28(v55, v22, v17);
  v29(v46, (uint64_t)v30, v31);
  uint64_t v32 = v52;
  sub_1DA98B618();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v30, v31);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v40 + 8);
  v33(v22, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  uint64_t v34 = (uint64_t)v58;
  uint64_t v35 = (uint64_t)&v58[*(int *)(v51 + 20)];
  sub_1DA7A19A4(v56, v35);
  uint64_t v36 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v42(v35 + *(int *)(v36 + 20), v55, v17);
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v35 + *(int *)(v36 + 24), v32, v44);
  uint64_t v37 = *(void **)(v49 + 40);
  sub_1DA942B48(v34, v50, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
  id v38 = v37;
  objc_msgSend(v38, sel_addObject_, sub_1DA98CEA8());

  swift_unknownObjectRelease();
  sub_1DA93E5F8();
  sub_1DA942BB0(v34, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
  return ((uint64_t (*)(char *, uint64_t))v33)(v43, v17);
}

void sub_1DA93E5F8()
{
  uint64_t v1 = sub_1DA98B438();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DA98B4A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v0 + 24) + 16));
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_processQueueEnqueued) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_processQueueEnqueued) = 1;
    v12[1] = *(void *)(v0 + 16);
    uint64_t v9 = swift_allocObject();
    uint64_t v13 = v5;
    uint64_t v10 = v9;
    swift_weakInit();
    aBlock[4] = sub_1DA942D18;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DA7A6EE0;
    aBlock[3] = &block_descriptor_16;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1DA94285C((unint64_t *)&qword_1EBE658C0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE65C60);
    sub_1DA7A6E24((unint64_t *)&qword_1EBE65C70, (uint64_t *)&unk_1EBE65C60);
    sub_1DA98C918();
    MEMORY[0x1E01777D0](0, v8, v4, v11);
    _Block_release(v11);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v13);
    swift_release();
    swift_release();
  }
}

uint64_t sub_1DA93E8E0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DA93E938();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA93E938()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v53 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE62A20);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v52 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v59 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE638A8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v49 - v12;
  uint64_t v14 = sub_1DA98B528();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (uint64_t *)((char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v60 = v0;
  uint64_t v19 = *(void **)(v0 + 16);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t, double))(v15 + 104))(v18, *MEMORY[0x1E4FBCBF0], v14, v16);
  id v20 = v19;
  LOBYTE(v19) = sub_1DA98B538();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v15 + 8))(v18, v14);
  if (v19)
  {
    uint64_t v22 = v60;
    uint64_t v23 = *(void *)(v60 + 24);
    uint64_t v24 = *(os_unfair_lock_s **)(v23 + 16);
    swift_retain();
    os_unfair_lock_lock(v24);
    *(unsigned char *)(v22 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_processQueueEnqueued) = 0;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 16));
    swift_release();
    uint64_t v25 = 0;
    uint64_t v54 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v50 = v13;
    uint64_t v51 = v5;
    while (1)
    {
      id v26 = *(os_unfair_lock_s **)(v23 + 16);
      swift_retain();
      os_unfair_lock_lock(v26);
      uint64_t v27 = (uint64_t)objc_msgSend(*(id *)(v60 + 40), sel_count);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 16));
      uint64_t result = swift_release();
      if (v27 < 1) {
        break;
      }
      char v28 = *(os_unfair_lock_s **)(v23 + 16);
      swift_retain();
      os_unfair_lock_lock(v28);
      sub_1DA93EEFC(v60, (uint64_t)v13);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 16));
      swift_release();
      sub_1DA7A1F58((uint64_t)v13, (uint64_t)v10, &qword_1EBE638A8);
      if ((*v54)(v10, 1, v5) == 1)
      {
        sub_1DA7A1AE0((uint64_t)v13, &qword_1EBE638A8);
        return sub_1DA7A1AE0((uint64_t)v10, &qword_1EBE638A8);
      }
      unint64_t v58 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest;
      uint64_t v29 = v59;
      sub_1DA942C10((uint64_t)v10, v59, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
      uint64_t v30 = (void *)(v29 + *(int *)(v5 + 20));
      uint64_t v31 = v30[3];
      uint64_t v32 = v30[4];
      __swift_project_boxed_opaque_existential_0(v30, v31);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v32 + 24))(v61, v31, v32);
      uint64_t v33 = v63;
      uint64_t v56 = v62;
      uint64_t v57 = v25;
      os_log_t v55 = __swift_project_boxed_opaque_existential_0(v61, v62);
      uint64_t v34 = v30[3];
      uint64_t v35 = v30[4];
      __swift_project_boxed_opaque_existential_0(v30, v34);
      uint64_t v36 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
      uint64_t v37 = (char *)v30 + *(int *)(type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0) + 20);
      uint64_t v38 = sub_1DA989638();
      uint64_t v39 = *(void *)(v38 - 8);
      uint64_t v40 = v10;
      uint64_t v41 = v53;
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v53, v37, v38);
      uint64_t v42 = v60;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v38);
      uint64_t v13 = v50;
      uint64_t v43 = (uint64_t)v52;
      uint64_t v44 = v59;
      (*(void (**)(void *, char *, uint64_t, uint64_t, uint64_t))(v33 + 8))(v36, v41, v59, v56, v33);

      uint64_t v45 = (uint64_t)v41;
      uint64_t v10 = v40;
      sub_1DA7A1AE0(v45, &qword_1EBE61CC0);
      unint64_t v46 = *(os_unfair_lock_s **)(v23 + 16);
      swift_retain();
      os_unfair_lock_lock(v46);
      uint64_t v47 = v42;
      uint64_t v25 = v57;
      sub_1DA93F108(v47, v43);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 16));
      swift_release();
      sub_1DA7A1AE0((uint64_t)v13, &qword_1EBE638A8);
      uint64_t v48 = v43;
      uint64_t v5 = v51;
      sub_1DA7A1AE0(v48, (uint64_t *)&unk_1EBE62A20);
      sub_1DA942BB0(v44, v58);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA93EEFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE638A8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v16 - v9;
  if (objc_msgSend(*(id *)(a1 + 40), sel_firstObject, v8))
  {
    sub_1DA98C8C8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_1DA7BA440((uint64_t)v16, (uint64_t)v17, &qword_1EBE66B48);
  if (v18)
  {
    uint64_t v11 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
    int v12 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, v12 ^ 1u, 1, v11);
  }
  else
  {
    sub_1DA7A1AE0((uint64_t)v17, &qword_1EBE66B48);
    uint64_t v13 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  sub_1DA7BA440((uint64_t)v10, (uint64_t)v6, &qword_1EBE638A8);
  uint64_t v14 = a1 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_prewarmRequest;
  swift_beginAccess();
  sub_1DA942C78((uint64_t)v6, v14);
  swift_endAccess();
  return sub_1DA7A1F58(v14, a2, &qword_1EBE638A8);
}

uint64_t sub_1DA93F108(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE62A20);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v30 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE638A8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v32 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v29 - v11;
  uint64_t v13 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  double v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v29 - v18;
  uint64_t v20 = a1;
  uint64_t v21 = a1 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_prewarmRequest;
  swift_beginAccess();
  sub_1DA7A1F58(v21, (uint64_t)v12, &qword_1EBE638A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_1DA7A1AE0((uint64_t)v12, &qword_1EBE638A8);
  }
  uint64_t v29 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest;
  sub_1DA942C10((uint64_t)v12, (uint64_t)v19, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
  uint64_t v23 = v7;
  sub_1DA942B48((uint64_t)&v19[*(int *)(v13 + 20)], (uint64_t)v7, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  uint64_t v24 = v30;
  sub_1DA7A1F58(v31, v30, (uint64_t *)&unk_1EBE62A20);
  swift_beginAccess();
  sub_1DA86F7AC(v24, v23);
  swift_endAccess();
  uint64_t v25 = *(void **)(v20 + 40);
  id v26 = v29;
  sub_1DA942B48((uint64_t)v19, (uint64_t)v16, v29);
  id v27 = v25;
  objc_msgSend(v27, sel_removeObject_, sub_1DA98CEA8());

  swift_unknownObjectRelease();
  sub_1DA942BB0((uint64_t)v19, v26);
  uint64_t v28 = (uint64_t)v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v32, 1, 1, v13);
  swift_beginAccess();
  sub_1DA942C78(v28, v21);
  return swift_endAccess();
}

uint64_t sub_1DA93F49C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v51)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  os_unfair_lock_s *v63;
  void *v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  char *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void v81[3];
  uint64_t v82;
  uint64_t v83;

  unint64_t v79 = a1;
  uint64_t v80 = a3;
  uint64_t v77 = a4;
  unint64_t v73 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  unint64_t v78 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  unint64_t v70 = (uint64_t (**)(char *, uint64_t, uint64_t))((char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  unint64_t v71 = (uint64_t)&v66 - v8;
  MEMORY[0x1F4188790](v9);
  id v72 = (char *)&v66 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE62A20);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v69 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v75 = (char *)&v66 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v66 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v66 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61D50);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63890);
  MEMORY[0x1F4188790](v24 - 8);
  id v26 = (char *)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v66 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v66 - v31;
  uint64_t v33 = sub_1DA98A888();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  id v74 = a2;
  v35(v23, a2, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v23, 0, 1, v33);
  sub_1DA93FF1C(v79, v80, (uint64_t)v23, (uint64_t)v32);
  sub_1DA7A1AE0((uint64_t)v23, &qword_1EBE61D50);
  uint64_t v36 = *(void *)(v4 + 24);
  uint64_t v37 = *(os_unfair_lock_s **)(v36 + 16);
  swift_retain();
  os_unfair_lock_lock(v37);
  uint64_t v76 = v4;
  sub_1DA93FBD0((uint64_t)v32, v4, (uint64_t)v20);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v36 + 16));
  swift_release();
  sub_1DA7A1F58((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1EBE62A20);
  uint64_t v38 = sub_1DA98BB28();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v17, 1, v38) == 1)
  {
    uint64_t v40 = v72;
    uint64_t v67 = v26;
    os_log_t v68 = v20;
    sub_1DA7A1AE0((uint64_t)v17, (uint64_t *)&unk_1EBE62A20);
    sub_1DA7A1F58((uint64_t)v32, (uint64_t)v29, &qword_1EBE63890);
    uint64_t v41 = v78 + 48;
    uint64_t v42 = v73;
    uint64_t v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 48);
    int v43 = v66(v29, 1, v73);
    uint64_t v44 = v76;
    uint64_t v45 = v79;
    if (v43 == 1)
    {
      sub_1DA7A1AE0((uint64_t)v29, &qword_1EBE63890);
    }
    else
    {
      sub_1DA942C10((uint64_t)v29, (uint64_t)v40, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      uint64_t v48 = *(os_unfair_lock_s **)(v36 + 16);
      swift_retain();
      os_unfair_lock_lock(v48);
      sub_1DA9405B4(v44, v40);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v36 + 16));
      swift_release();
      sub_1DA942BB0((uint64_t)v40, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    }
    uint64_t v49 = v45[3];
    uint64_t v50 = v45[4];
    __swift_project_boxed_opaque_existential_0(v45, v49);
    uint64_t v51 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v50 + 24);
    unint64_t v78 = v41;
    v51(v81, v49, v50);
    uint64_t v52 = v82;
    uint64_t v53 = v83;
    __swift_project_boxed_opaque_existential_0(v81, v82);
    uint64_t v54 = v42;
    uint64_t v56 = v45[3];
    os_log_t v55 = v45[4];
    __swift_project_boxed_opaque_existential_0(v45, v56);
    uint64_t v57 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v56, v55);
    unint64_t v58 = (uint64_t)v75;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8))(v57, v80, v74, v52, v53);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    uint64_t v59 = (uint64_t)v67;
    sub_1DA7A1F58((uint64_t)v32, (uint64_t)v67, &qword_1EBE63890);
    uint64_t v60 = v66((char *)v59, 1, v54);
    uint64_t v61 = v77;
    if (v60 == 1)
    {
      sub_1DA7A1AE0((uint64_t)v68, (uint64_t *)&unk_1EBE62A20);
      sub_1DA7A1AE0((uint64_t)v32, &qword_1EBE63890);
    }
    else
    {
      uint64_t v62 = v71;
      sub_1DA942C10(v59, v71, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      uint64_t v63 = *(os_unfair_lock_s **)(v36 + 16);
      swift_retain();
      os_unfair_lock_lock(v63);
      uint64_t v64 = v70;
      sub_1DA942B48(v62, (uint64_t)v70, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      os_log_type_t v65 = v69;
      sub_1DA7A1F58(v58, v69, (uint64_t *)&unk_1EBE62A20);
      swift_beginAccess();
      sub_1DA86F7AC(v65, v64);
      swift_endAccess();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v36 + 16));
      swift_release();
      sub_1DA7A1AE0((uint64_t)v68, (uint64_t *)&unk_1EBE62A20);
      sub_1DA942BB0(v62, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      uint64_t v59 = (uint64_t)v32;
    }
    sub_1DA7A1AE0(v59, &qword_1EBE63890);
    return sub_1DA7BA440(v58, v61, (uint64_t *)&unk_1EBE62A20);
  }
  else
  {
    sub_1DA7A1AE0((uint64_t)v20, (uint64_t *)&unk_1EBE62A20);
    sub_1DA7A1AE0((uint64_t)v32, &qword_1EBE63890);
    uint64_t v46 = v77;
    (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v77, v17, v38);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v46, 0, 1, v38);
  }
}

uint64_t sub_1DA93FBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63890);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA7A1F58(a1, (uint64_t)v8, &qword_1EBE63890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v8, &qword_1EBE63890);
    uint64_t v13 = sub_1DA98BB28();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
  else
  {
    sub_1DA942C10((uint64_t)v8, (uint64_t)v12, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    swift_beginAccess();
    uint64_t v15 = *(void *)(a2 + 32);
    if (*(void *)(v15 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_1DA7FE118(v12);
      if (v17)
      {
        unint64_t v18 = v16;
        uint64_t v19 = *(void *)(v15 + 56);
        uint64_t v20 = sub_1DA98BB28();
        uint64_t v21 = *(void *)(v20 - 8);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(a3, v19 + *(void *)(v21 + 72) * v18, v20);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v20);
      }
      else
      {
        uint64_t v23 = sub_1DA98BB28();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a3, 1, 1, v23);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = sub_1DA98BB28();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 1, 1, v22);
    }
    return sub_1DA942BB0((uint64_t)v12, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  }
}

uint64_t sub_1DA93FF1C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v44 = a3;
  uint64_t v47 = a4;
  uint64_t v43 = sub_1DA98B648();
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v41 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61D50);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1DA98A888();
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v39 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v38 = (char *)&v37 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DA989638();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v37 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v37 - v20;
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  uint64_t v40 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v22);
  uint64_t v24 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
  uint64_t v25 = *(void *)&v24[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  id v26 = *(os_unfair_lock_s **)(v25 + 16);
  swift_retain();
  os_unfair_lock_lock(v26);
  sub_1DA7A1F58(a2, (uint64_t)v15, &qword_1EBE61CC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v15, &qword_1EBE61CC0);
    uint64_t v27 = (uint64_t)&v24[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry];
    swift_beginAccess();
    sub_1DA7A1F58(v27, (uint64_t)&v51, &qword_1EBE62A10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v15, v16);
    sub_1DA930D18((uint64_t)&v48);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
    if (v49 == 1)
    {
      sub_1DA7A1AE0((uint64_t)&v48, &qword_1EBE632C0);
      long long v51 = 0u;
      long long v52 = 0u;
      uint64_t v53 = 0;
    }
    else
    {
      sub_1DA7BA440((uint64_t)&v48, (uint64_t)&v51, &qword_1EBE62A10);
      sub_1DA7A1AE0((uint64_t)&v50, &qword_1EBE62A10);
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v25 + 16));

  swift_release();
  if (!*((void *)&v52 + 1))
  {
    sub_1DA7A1AE0((uint64_t)&v51, &qword_1EBE62A10);
    goto LABEL_10;
  }
  sub_1DA7A19A4(&v51, (uint64_t)v54);
  sub_1DA7A1F58(v44, (uint64_t)v9, &qword_1EBE61D50);
  uint64_t v28 = v45;
  uint64_t v29 = v46;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v9, 1, v46) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE61D50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
LABEL_10:
    uint64_t v30 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v47, 1, 1, v30);
  }
  uint64_t v32 = v38;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v38, v9, v29);
  sub_1DA7A1A44((uint64_t)v40, (uint64_t)&v48);
  __swift_project_boxed_opaque_existential_0(v54, v54[3]);
  uint64_t v33 = v37;
  sub_1DA98B908();
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v39, v32, v29);
  uint64_t v34 = v41;
  sub_1DA98B618();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v29);
  uint64_t v35 = v47;
  sub_1DA7A19A4(&v48, v47);
  uint64_t v36 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v35 + *(int *)(v36 + 20), v33, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v35 + *(int *)(v36 + 24), v34, v43);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
}

uint64_t sub_1DA9405B4(uint64_t a1, void *a2)
{
  uint64_t v53 = a2;
  uint64_t v45 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  MEMORY[0x1F4188790](v45);
  uint64_t v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v42 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v52 = (uint64_t)v42 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v42 - v12;
  uint64_t v54 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
  uint64_t v14 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v43 = (uint64_t)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v42 - v18;
  uint64_t v44 = a1;
  id v20 = objc_msgSend(*(id *)(a1 + 40), sel_array, v17);
  uint64_t v21 = sub_1DA98C288();

  uint64_t v22 = sub_1DA93DBB0(v21);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v24 = *(unsigned __int8 *)(v14 + 80);
    v42[1] = v22;
    uint64_t v25 = v22 + ((v24 + 32) & ~v24);
    uint64_t v48 = *(void *)(v14 + 72);
    uint64_t v49 = v13;
    uint64_t v46 = v19;
    uint64_t v47 = v2;
    uint64_t v50 = v8;
    long long v51 = v5;
    do
    {
      sub_1DA942B48(v25, (uint64_t)v19, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
      uint64_t v28 = &v19[*(int *)(v54 + 20)];
      uint64_t v29 = *((void *)v28 + 3);
      uint64_t v30 = *((void *)v28 + 4);
      __swift_project_boxed_opaque_existential_0(v28, v29);
      (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v30 + 16))((char *)&v55 + 1, v29, v30);
      int v31 = BYTE1(v55);
      uint64_t v32 = v53;
      uint64_t v34 = v53[3];
      uint64_t v33 = v53[4];
      __swift_project_boxed_opaque_existential_0(v53, v34);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v33 + 16))(&v55, v34, v33);
      LODWORD(v34) = v55;
      uint64_t v35 = (uint64_t)v49;
      sub_1DA942B48((uint64_t)v28, (uint64_t)v49, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      uint64_t v36 = v52;
      sub_1DA942B48((uint64_t)v32, v52, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      if (v31 == v34)
      {
        char v37 = sub_1DA98B608();
        sub_1DA942BB0(v36, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        sub_1DA942BB0(v35, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        uint64_t v26 = (uint64_t)v50;
        sub_1DA942B48((uint64_t)v28, (uint64_t)v50, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        uint64_t v27 = (uint64_t)v51;
        sub_1DA942B48((uint64_t)v32, (uint64_t)v51, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        if (v37)
        {
          char v38 = sub_1DA9895E8();
          sub_1DA942BB0(v27, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
          sub_1DA942BB0(v26, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
          uint64_t v19 = v46;
          if (v38)
          {
            uint64_t v39 = *(void **)(v44 + 40);
            sub_1DA942B48((uint64_t)v46, v43, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
            id v40 = v39;
            objc_msgSend(v40, sel_removeObject_, sub_1DA98CEA8());

            swift_unknownObjectRelease();
          }
          goto LABEL_5;
        }
      }
      else
      {
        sub_1DA942BB0(v36, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        sub_1DA942BB0(v35, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        uint64_t v26 = (uint64_t)v50;
        sub_1DA942B48((uint64_t)v28, (uint64_t)v50, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        uint64_t v27 = (uint64_t)v51;
        sub_1DA942B48((uint64_t)v32, (uint64_t)v51, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      }
      sub_1DA942BB0(v27, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      sub_1DA942BB0(v26, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      uint64_t v19 = v46;
LABEL_5:
      sub_1DA942BB0((uint64_t)v19, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
      v25 += v48;
      --v23;
    }
    while (v23);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA940A94()
{
  swift_release();
  swift_bridgeObjectRelease();

  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_prewarmRequest, &qword_1EBE638A8);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA940B20()
{
  return type metadata accessor for LiveWidgetEntryViewableEntryCache(0);
}

uint64_t type metadata accessor for LiveWidgetEntryViewableEntryCache(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE638B8);
}

void sub_1DA940B48()
{
  sub_1DA940C0C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1DA940C0C()
{
  if (!qword_1EBE638B0)
  {
    type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(255);
    unint64_t v0 = sub_1DA98C838();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBE638B0);
    }
  }
}

uint64_t type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE63898);
}

void *sub_1DA940C84(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1DA989638();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1DA98B648();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t sub_1DA940DDC(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_1DA98B648();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_1DA940E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DA98B648();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t *sub_1DA940F98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1DA98B648();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_1DA941068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DA98B648();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_1DA941144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DA98B648();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1DA941224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA941238);
}

uint64_t sub_1DA941238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DA989638();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1DA98B648();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DA941364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA941378);
}

uint64_t sub_1DA941378(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1DA989638();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1DA98B648();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE63880);
}

uint64_t sub_1DA9414C4()
{
  uint64_t result = sub_1DA989638();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DA98B648();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_1DA941598(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DA98A888();
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    long long v11 = *(_OWORD *)(v10 + 24);
    *(_OWORD *)&a1[v8 + 24] = v11;
    (**(void (***)(char *, char *))(v11 - 8))(&a1[v8], v10);
    uint64_t v12 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
    uint64_t v13 = *(int *)(v12 + 20);
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    uint64_t v16 = sub_1DA989638();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = *(int *)(v12 + 24);
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    uint64_t v20 = sub_1DA98B648();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t sub_1DA941758(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  __swift_destroy_boxed_opaque_existential_1(v5);
  uint64_t v6 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  uint64_t v7 = v5 + *(int *)(v6 + 20);
  uint64_t v8 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v5 + *(int *)(v6 + 24);
  uint64_t v10 = sub_1DA98B648();
  long long v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t sub_1DA941864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + v7, v9);
  uint64_t v11 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  uint64_t v19 = sub_1DA98B648();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

uint64_t sub_1DA9419D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + v7), v9);
  uint64_t v10 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (char *)v9 + v11;
  uint64_t v14 = sub_1DA989638();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v8 + v15;
  uint64_t v17 = (char *)v9 + v15;
  uint64_t v18 = sub_1DA98B648();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t sub_1DA941B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(a2 + v7 + 32);
  uint64_t v11 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  uint64_t v19 = sub_1DA98B648();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t sub_1DA941C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  __swift_destroy_boxed_opaque_existential_1(a1 + v7);
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1DA989638();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  uint64_t v19 = sub_1DA98B648();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t sub_1DA941D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA941D7C);
}

uint64_t sub_1DA941D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA98A888();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DA941E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA941E88);
}

uint64_t sub_1DA941E88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DA98A888();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1DA941F8C()
{
  uint64_t result = sub_1DA98A888();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DA942054(uint64_t a1)
{
  sub_1DA98CF18();
  uint64_t v3 = (void *)(v1 + *(int *)(a1 + 20));
  type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  sub_1DA989638();
  sub_1DA94285C(&qword_1EBE63390, MEMORY[0x1E4F27928]);
  sub_1DA98BFB8();
  sub_1DA98B648();
  sub_1DA94285C(&qword_1EBE63FC0, MEMORY[0x1E4F46A80]);
  sub_1DA98BFB8();
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_0(v3, v4);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 16))(&v7, v4, v5);
  sub_1DA98CF28();
  return sub_1DA98CF68();
}

uint64_t sub_1DA94219C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a2 + 20));
  type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  sub_1DA989638();
  sub_1DA94285C(&qword_1EBE63390, MEMORY[0x1E4F27928]);
  sub_1DA98BFB8();
  sub_1DA98B648();
  sub_1DA94285C(&qword_1EBE63FC0, MEMORY[0x1E4F46A80]);
  sub_1DA98BFB8();
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_0(v3, v4);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 16))(&v7, v4, v5);
  return sub_1DA98CF28();
}

uint64_t sub_1DA9422D8(uint64_t a1, uint64_t a2)
{
  sub_1DA98CF18();
  uint64_t v4 = (void *)(v2 + *(int *)(a2 + 20));
  type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  sub_1DA989638();
  sub_1DA94285C(&qword_1EBE63390, MEMORY[0x1E4F27928]);
  sub_1DA98BFB8();
  sub_1DA98B648();
  sub_1DA94285C(&qword_1EBE63FC0, MEMORY[0x1E4F46A80]);
  sub_1DA98BFB8();
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_0(v4, v5);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 16))(&v8, v5, v6);
  sub_1DA98CF28();
  return sub_1DA98CF68();
}

uint64_t sub_1DA94241C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA9428A4((void *)(a1 + *(int *)(a3 + 20)), (void *)(a2 + *(int *)(a3 + 20)));
}

uint64_t sub_1DA94242C()
{
  return sub_1DA94285C((unint64_t *)&unk_1EA8E6990, (void (*)(uint64_t))type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
}

uint64_t sub_1DA942474()
{
  sub_1DA98CF18();
  sub_1DA989638();
  sub_1DA94285C(&qword_1EBE63390, MEMORY[0x1E4F27928]);
  sub_1DA98BFB8();
  sub_1DA98B648();
  sub_1DA94285C(&qword_1EBE63FC0, MEMORY[0x1E4F46A80]);
  sub_1DA98BFB8();
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_0(v0, v1);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v2 + 16))(&v4, v1, v2);
  sub_1DA98CF28();
  return sub_1DA98CF68();
}

uint64_t sub_1DA9425AC()
{
  sub_1DA989638();
  sub_1DA94285C(&qword_1EBE63390, MEMORY[0x1E4F27928]);
  sub_1DA98BFB8();
  sub_1DA98B648();
  sub_1DA94285C(&qword_1EBE63FC0, MEMORY[0x1E4F46A80]);
  sub_1DA98BFB8();
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_0(v0, v1);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v2 + 16))(&v4, v1, v2);
  return sub_1DA98CF28();
}

uint64_t sub_1DA9426DC()
{
  sub_1DA98CF18();
  sub_1DA989638();
  sub_1DA94285C(&qword_1EBE63390, MEMORY[0x1E4F27928]);
  sub_1DA98BFB8();
  sub_1DA98B648();
  sub_1DA94285C(&qword_1EBE63FC0, MEMORY[0x1E4F46A80]);
  sub_1DA98BFB8();
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_0(v0, v1);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v2 + 16))(&v4, v1, v2);
  sub_1DA98CF28();
  return sub_1DA98CF68();
}

uint64_t sub_1DA942814()
{
  return sub_1DA94285C(&qword_1EBE63878, (void (*)(uint64_t))type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
}

uint64_t sub_1DA94285C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA9428A4(void *a1, void *a2)
{
  uint64_t v23 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  MEMORY[0x1F4188790](v23);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v23 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v15);
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v16 + 16))((char *)&v24 + 1, v15, v16);
  int v17 = BYTE1(v24);
  uint64_t v18 = a2[3];
  uint64_t v19 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v18);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 16))(&v24, v18, v19);
  LODWORD(v18) = v24;
  sub_1DA942B48((uint64_t)a1, (uint64_t)v14, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  sub_1DA942B48((uint64_t)a2, (uint64_t)v11, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  if (v17 != v18)
  {
    sub_1DA942BB0((uint64_t)v11, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    sub_1DA942BB0((uint64_t)v14, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    sub_1DA942B48((uint64_t)a1, (uint64_t)v8, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    sub_1DA942B48((uint64_t)a2, (uint64_t)v5, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    goto LABEL_5;
  }
  char v20 = sub_1DA98B608();
  sub_1DA942BB0((uint64_t)v11, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  sub_1DA942BB0((uint64_t)v14, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  sub_1DA942B48((uint64_t)a1, (uint64_t)v8, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  sub_1DA942B48((uint64_t)a2, (uint64_t)v5, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  if ((v20 & 1) == 0)
  {
LABEL_5:
    char v21 = 0;
    goto LABEL_6;
  }
  char v21 = sub_1DA9895E8();
LABEL_6:
  sub_1DA942BB0((uint64_t)v5, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  sub_1DA942BB0((uint64_t)v8, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  return v21 & 1;
}

uint64_t sub_1DA942B48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA942BB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DA942C10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA942C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE638A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA942CE0()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA942D18()
{
  return sub_1DA93E8E0();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t InteractionAuthenticationPolicy.init(actionPolicy:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1DA98BC98();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(a1, v4);
  if (result == *MEMORY[0x1E4F46E78]) {
    goto LABEL_7;
  }
  if (result != *MEMORY[0x1E4F46E70])
  {
    if (result == *MEMORY[0x1E4F46E68])
    {
      char v7 = 1;
      goto LABEL_8;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
LABEL_7:
    char v7 = 0;
    goto LABEL_8;
  }
  char v7 = 2;
LABEL_8:
  *a2 = v7;
  return result;
}

BOOL static InteractionSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t InteractionSource.hash(into:)()
{
  return sub_1DA98CF28();
}

uint64_t sub_1DA942E80()
{
  uint64_t v0 = sub_1DA989F38();
  __swift_allocate_value_buffer(v0, qword_1EA8E69A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA8E69A0);
  return sub_1DA989F28();
}

unint64_t sub_1DA942F00(id a1, char a2)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a2)
  {
    case 1:
      unint64_t v11 = 0;
      id v8 = a1;
      sub_1DA98CA18();
      sub_1DA98C148();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
      sub_1DA98CB58();
      id v6 = a1;
      unsigned __int8 v7 = 1;
      goto LABEL_5;
    case 2:
      id v9 = a1;
      sub_1DA98CA18();
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xD00000000000001CLL;
      id v10 = objc_msgSend(v9, sel_description);
      sub_1DA98C038();

      sub_1DA98C148();
      swift_bridgeObjectRelease();
      id v6 = a1;
      unsigned __int8 v7 = 2;
      goto LABEL_5;
    case 3:
      return result;
    default:
      id v4 = a1;
      sub_1DA98CA18();
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xD000000000000012;
      id v5 = objc_msgSend(v4, sel_description);
      sub_1DA98C038();

      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      id v6 = a1;
      unsigned __int8 v7 = 0;
LABEL_5:
      sub_1DA94437C(v6, v7);
      return v11;
  }
}

unint64_t sub_1DA943140()
{
  return sub_1DA942F00(*(id *)v0, *(unsigned char *)(v0 + 8));
}

void *InteractiveWidgetActionRunner.__allocating_init(extensionIdentity:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  void v6[4] = a1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  id v8 = (objc_class *)type metadata accessor for InteractiveWidgetActionRunner.Delegate();
  id v9 = (char *)objc_allocWithZone(v8);
  id v10 = (void (**)(void *))&v9[OBJC_IVAR____TtCC9ChronoKit29InteractiveWidgetActionRunnerP33_1C4DBC0C4C60E41750913BD55B2D37FB8Delegate_completion];
  *id v10 = sub_1DA9433B8;
  v10[1] = (void (*)(void *))v7;
  v12.receiver = v9;
  v12.super_class = v8;
  swift_retain();
  void v6[5] = objc_msgSendSuper2(&v12, sel_init);
  v6[6] = a2;
  v6[7] = a3;
  return v6;
}

void *InteractiveWidgetActionRunner.init(extensionIdentity:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3[2] = 0;
  v3[3] = 0;
  v3[4] = a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = (objc_class *)type metadata accessor for InteractiveWidgetActionRunner.Delegate();
  id v8 = (char *)objc_allocWithZone(v7);
  id v9 = (void (**)(void *))&v8[OBJC_IVAR____TtCC9ChronoKit29InteractiveWidgetActionRunnerP33_1C4DBC0C4C60E41750913BD55B2D37FB8Delegate_completion];
  char *v9 = sub_1DA944514;
  v9[1] = (void (*)(void *))v6;
  v11.receiver = v8;
  v11.super_class = v7;
  swift_retain();
  v3[5] = objc_msgSendSuper2(&v11, sel_init);
  v3[6] = a2;
  v3[7] = a3;
  return v3;
}

void sub_1DA9432E0(void *a1, void (*a2)(void *))
{
  if (a1)
  {
    sub_1DA943F50();
    id v4 = (void *)swift_allocError();
    *(void *)uint64_t v5 = a1;
    *(unsigned char *)(v5 + 8) = 1;
  }
  else
  {
    id v4 = 0;
  }
  id v6 = a1;
  id v7 = a1;
  a2(v4);
}

uint64_t sub_1DA943380()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1DA9433B8(void *a1)
{
  sub_1DA9432E0(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t type metadata accessor for InteractiveWidgetActionRunner.Delegate()
{
  return self;
}

void sub_1DA9433E4(void *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  id v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0F0);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v15 = *a2;
  uint64_t v16 = *a3;
  self;
  uint64_t v17 = swift_dynamicCastObjCClass();
  if (!v17)
  {
    uint64_t v24 = (void (*)(void *))v4[6];
    sub_1DA943F50();
    uint64_t v25 = (void *)swift_allocError();
    *(void *)uint64_t v26 = a1;
    *(unsigned char *)(v26 + 8) = 0;
    id v27 = a1;
    swift_retain();
    v24(v25);

    goto LABEL_5;
  }
  uint64_t v18 = (void *)v17;
  uint64_t v19 = (void *)v4[4];
  id v20 = a1;
  if (objc_msgSend(v19, sel_isRemote))
  {
    char v21 = (void (*)(void *))v4[6];
    sub_1DA943F50();
    uint64_t v22 = (void *)swift_allocError();
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 3;
    swift_retain();
    v21(v22);

LABEL_5:
    swift_release();
    return;
  }
  uint64_t v28 = v4[4] + *MEMORY[0x1E4F58B78];
  swift_beginAccess();
  sub_1DA8EB260(v28, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DA943FA4((uint64_t)v10);
    uint64_t v29 = (void (*)(void *))v4[6];
    uint64_t v30 = (void *)v4[4];
    sub_1DA943F50();
    int v31 = (void *)swift_allocError();
    *(void *)uint64_t v32 = v30;
    *(unsigned char *)(v32 + 8) = 2;
    swift_retain();
    id v33 = v30;
    v29(v31);

    swift_release();
    if (qword_1EA8E5590 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1DA989F38();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EA8E69A0);
    id v35 = v20;
    swift_retain_n();
    id v36 = v35;
    char v37 = sub_1DA989F18();
    os_log_type_t v38 = sub_1DA98C528();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      id v40 = (void *)swift_slowAlloc();
      id v87 = (id)swift_slowAlloc();
      v88[0] = (uint64_t)v87;
      *(_DWORD *)uint64_t v39 = 136446466;
      id v41 = objc_msgSend(v18, sel_identifier);
      uint64_t v42 = sub_1DA98C038();
      unint64_t v44 = v43;

      uint64_t v89 = sub_1DA8C5E00(v42, v44, v88);
      sub_1DA98C858();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2114;
      uint64_t v45 = (void *)v4[4];
      uint64_t v89 = (uint64_t)v45;
      id v46 = v45;
      sub_1DA98C858();
      void *v40 = v45;
      swift_release_n();
      _os_log_impl(&dword_1DA795000, v37, v38, "Unable to execute LNAction %{public}s for invalid identity: %{public}@", (uint8_t *)v39, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v40, -1, -1);
      id v47 = v87;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v47, -1, -1);
      MEMORY[0x1E0178DA0](v39, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    uint64_t v48 = 9;
    if (v15 < 2) {
      uint64_t v48 = 2;
    }
    uint64_t v84 = v48;
    if (qword_1EA8E5590 != -1) {
      swift_once();
    }
    uint64_t v85 = v16;
    uint64_t v86 = v12;
    uint64_t v49 = sub_1DA989F38();
    __swift_project_value_buffer(v49, (uint64_t)qword_1EA8E69A0);
    id v50 = v20;
    swift_retain_n();
    id v51 = v50;
    uint64_t v52 = sub_1DA989F18();
    int v53 = sub_1DA98C518();
    BOOL v54 = os_log_type_enabled(v52, (os_log_type_t)v53);
    id v87 = v51;
    if (v54)
    {
      int v81 = v53;
      os_log_t v83 = v52;
      uint64_t v55 = swift_slowAlloc();
      uint64_t v80 = (void *)swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      v88[0] = v82;
      *(_DWORD *)uint64_t v55 = 136315906;
      v79[1] = v55 + 4;
      id v56 = objc_msgSend(v18, sel_identifier);
      uint64_t v57 = sub_1DA98C038();
      unint64_t v59 = v58;

      uint64_t v89 = sub_1DA8C5E00(v57, v59, v88);
      v79[2] = &v90;
      sub_1DA98C858();

      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2080;
      id v60 = objc_msgSend(v18, sel_mangledTypeName);
      if (v60)
      {
        uint64_t v61 = v60;
        uint64_t v62 = sub_1DA98C038();
        unint64_t v64 = v63;
      }
      else
      {
        unint64_t v64 = 0xE200000000000000;
        uint64_t v62 = 11565;
      }
      uint64_t v89 = sub_1DA8C5E00(v62, v64, v88);
      sub_1DA98C858();
      id v65 = v87;

      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 22) = 2112;
      uint64_t v66 = (void *)v4[4];
      uint64_t v89 = (uint64_t)v66;
      id v67 = v66;
      sub_1DA98C858();
      os_log_t v68 = v80;
      *uint64_t v80 = v66;
      swift_release_n();
      *(_WORD *)(v55 + 32) = 2080;
      LOBYTE(v89) = v15;
      uint64_t v69 = sub_1DA98C0A8();
      uint64_t v89 = sub_1DA8C5E00(v69, v70, v88);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      os_log_t v71 = v83;
      _os_log_impl(&dword_1DA795000, v83, (os_log_type_t)v81, "Started executing LNAction %s(%s) in %@ from %s.", (uint8_t *)v55, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v68, -1, -1);
      uint64_t v72 = v82;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v72, -1, -1);
      MEMORY[0x1E0178DA0](v55, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_1DA9899C8();
    unint64_t v73 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    id v74 = (void *)v4[4];
    swift_beginAccess();
    id v75 = v74;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    sub_1DA9899C8();
    uint64_t v76 = (void *)sub_1DA98C008();
    swift_endAccess();
    swift_bridgeObjectRelease();

    swift_beginAccess();
    if (v4[3])
    {
      swift_bridgeObjectRetain();
      uint64_t v77 = (void *)sub_1DA98C008();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v77 = 0;
    }
    id v78 = objc_msgSend(self, sel_newClientWithLinkAction_appBundleIdentifier_extensionBundleIdentifier_runSource_launchOriginOverride_authenticationPolicy_, v18, v73, v76, v84, v77, v85);

    objc_msgSend(v78, sel_setDelegate_, v4[5]);
    objc_msgSend(v78, sel_start);

    (*(void (**)(char *, uint64_t))(v86 + 8))(v14, v11);
  }
}

id sub_1DA943E7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractiveWidgetActionRunner.Delegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t InteractiveWidgetActionRunner.deinit()
{
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t InteractiveWidgetActionRunner.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocClassInstance();
}

unint64_t sub_1DA943F50()
{
  unint64_t result = qword_1EA8E69C0;
  if (!qword_1EA8E69C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E69C0);
  }
  return result;
}

uint64_t sub_1DA943FA4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DA944008()
{
  unint64_t result = qword_1EA8E69C8;
  if (!qword_1EA8E69C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E69C8);
  }
  return result;
}

unint64_t sub_1DA944060()
{
  unint64_t result = qword_1EA8E69D0;
  if (!qword_1EA8E69D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E69D0);
  }
  return result;
}

uint64_t sub_1DA9440B4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for InteractionAuthenticationPolicy()
{
  return &type metadata for InteractionAuthenticationPolicy;
}

unsigned char *_s9ChronoKit31InteractionAuthenticationPolicyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA9441E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractionSource()
{
  return &type metadata for InteractionSource;
}

uint64_t type metadata accessor for InteractiveWidgetActionRunner()
{
  return self;
}

uint64_t method lookup function for InteractiveWidgetActionRunner(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractiveWidgetActionRunner);
}

uint64_t dispatch thunk of InteractiveWidgetActionRunner.launchOriginOverride.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of InteractiveWidgetActionRunner.launchOriginOverride.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of InteractiveWidgetActionRunner.launchOriginOverride.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of InteractiveWidgetActionRunner.__allocating_init(extensionIdentity:completion:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of InteractiveWidgetActionRunner.start(lnAction:source:authenticationPolicy:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t initializeBufferWithCopyOfBuffer for InteractiveWidgetActionRunner.Errors(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1DA944348(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1DA944348(id result, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return result;
  }
  return result;
}

void destroy for InteractiveWidgetActionRunner.Errors(uint64_t a1)
{
}

void sub_1DA94437C(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
}
  }

uint64_t assignWithCopy for InteractiveWidgetActionRunner.Errors(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1DA944348(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1DA94437C(v5, v6);
  return a1;
}

uint64_t assignWithTake for InteractiveWidgetActionRunner.Errors(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1DA94437C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractiveWidgetActionRunner.Errors(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractiveWidgetActionRunner.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DA9444C0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1DA9444D8(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for InteractiveWidgetActionRunner.Errors()
{
  return &type metadata for InteractiveWidgetActionRunner.Errors;
}

uint64_t sub_1DA944518(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1DA7F7A64(0, v1, 0);
    uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8) - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      swift_getKeyPath();
      swift_getAtKeyPath();
      swift_release();
      uint64_t v2 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA7F7A64(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v2 = v13;
      }
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1DA7F7A64(v7 > 1, v8 + 1, 1);
        uint64_t v2 = v13;
      }
      *(void *)(v2 + 16) = v8 + 1;
      uint64_t v9 = v2 + 16 * v8;
      *(void *)(v9 + 32) = v11;
      *(void *)(v9 + 40) = v12;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DA944698()
{
  uint64_t v1 = sub_1DA989638();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_1DA98CA18();
  sub_1DA98C148();
  sub_1DA98C148();
  sub_1DA98C148();
  uint64_t v5 = (id *)(v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20));
  id v6 = *v5;
  id v7 = objc_msgSend(v6, sel_description);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v8 = type metadata accessor for WidgetExtensionInfo();
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, (char *)v5 + *(int *)(v8 + 32), v1);
  if (qword_1EBE63290 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EBE63318;
  id v10 = (void *)sub_1DA989568();
  id v11 = objc_msgSend(v9, sel_stringFromDate_, v10);

  sub_1DA98C038();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return v13[0];
}

uint64_t RemoteWidgetExtension.session.getter()
{
  return swift_retain();
}

uint64_t RemoteWidgetExtension.info.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RemoteWidgetExtension();
  return sub_1DA948358(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for WidgetExtensionInfo);
}

uint64_t type metadata accessor for RemoteWidgetExtension()
{
  uint64_t result = qword_1EBE5A4C8;
  if (!qword_1EBE5A4C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RemoteWidgetExtension.identifier.getter()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + *(int *)(type metadata accessor for RemoteWidgetExtension()
                                                                      + 20)), sel_tokenString));
  uint64_t v2 = sub_1DA98C038();

  return v2;
}

uint64_t RemoteWidgetExtension.version.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20) + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RemoteWidgetExtension.isInternal.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 36));
}

uint64_t RemoteWidgetExtension.isDevelopmentExtension.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 92));
}

uint64_t RemoteWidgetExtension.pluginUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 28);
  uint64_t v5 = sub_1DA989698();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t RemoteWidgetExtension.lastModifiedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 32);
  uint64_t v5 = sub_1DA989638();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t RemoteWidgetExtension.bundleURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 40);
  uint64_t v5 = sub_1DA989478();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t RemoteWidgetExtension.containerBundleURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 60);
  uint64_t v5 = sub_1DA989478();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t RemoteWidgetExtension.containerBundleVersion.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 72));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RemoteWidgetExtension.containerBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20)) + *MEMORY[0x1E4F58B78];
  swift_beginAccess();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = sub_1DA9899C8();
    swift_endAccess();
    return v4;
  }
  return result;
}

uint64_t RemoteWidgetExtension.effectiveContainerBundleIdentifier.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 64));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RemoteWidgetExtension.sdkVersion.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 76));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RemoteWidgetExtension.watchKitExtensionIdentifier.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 84));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RemoteWidgetExtension.pushEnvironment.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 88));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RemoteWidgetExtension.dataContainerURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 44);
  uint64_t v5 = sub_1DA989478();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t RemoteWidgetExtension.systemDataContainerURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 48);
  uint64_t v5 = sub_1DA989478();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t RemoteWidgetExtension.wantsLocation.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 56));
}

uint64_t RemoteWidgetExtension.availableLocalizations.getter()
{
  type metadata accessor for RemoteWidgetExtension();
  type metadata accessor for WidgetExtensionInfo();

  return swift_bridgeObjectRetain();
}

uint64_t RemoteWidgetExtension.allowsMixedLocalizations.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 100));
}

void *RemoteWidgetExtension.entitlements.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  uint64_t v2 = *(void **)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 108));
  id v3 = v2;
  return v2;
}

uint64_t RemoteWidgetExtension.platform.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  return *(void *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 80));
}

uint64_t RemoteWidgetExtension.requestedDataProtection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DA98B9E8();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t RemoteWidgetExtension.nominatedContainingBundleIdentifiers.getter()
{
  type metadata accessor for RemoteWidgetExtension();
  type metadata accessor for WidgetExtensionInfo();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1DA944518(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t RemoteWidgetExtension.init(info:session:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for RemoteWidgetExtension();
  uint64_t result = sub_1DA948420(a1, (uint64_t)a3 + *(int *)(v6 + 20), (uint64_t (*)(void))type metadata accessor for WidgetExtensionInfo);
  *a3 = a2;
  return result;
}

uint64_t sub_1DA9453E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA948358(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for WidgetExtensionInfo);
}

uint64_t sub_1DA94541C(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(v1 + *(int *)(a1 + 20)), sel_tokenString);
  uint64_t v3 = sub_1DA98C038();

  return v3;
}

uint64_t sub_1DA945478(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 20) + 8);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DA9454B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 28);
  uint64_t v6 = sub_1DA989698();
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v7(a2, v5, v6);
}

uint64_t sub_1DA945530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 32);
  uint64_t v6 = sub_1DA989638();
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v7(a2, v5, v6);
}

uint64_t sub_1DA9455B0(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  return *(unsigned __int8 *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 36));
}

uint64_t sub_1DA9455E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 40);
  uint64_t v6 = sub_1DA989478();
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v7(a2, v5, v6);
}

uint64_t sub_1DA945664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 44);
  uint64_t v6 = sub_1DA989478();
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v7(a2, v5, v6);
}

uint64_t sub_1DA9456E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 48);
  uint64_t v6 = sub_1DA989478();
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v7(a2, v5, v6);
}

uint64_t sub_1DA945764@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DA98B9E8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_1DA9457D0(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  return *(unsigned __int8 *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 56));
}

uint64_t sub_1DA945804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 60);
  uint64_t v6 = sub_1DA989478();
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v7(a2, v5, v6);
}

uint64_t sub_1DA945884(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 20)) + *MEMORY[0x1E4F58B78];
  swift_beginAccess();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = sub_1DA9899C8();
    swift_endAccess();
    return v5;
  }
  return result;
}

uint64_t sub_1DA945944(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  uint64_t v3 = *(void *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 72));
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1DA94598C(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  uint64_t v3 = *(void *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 64));
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1DA9459D4(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  uint64_t v3 = *(void *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 76));
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1DA945A1C(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  return *(void *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 80));
}

uint64_t sub_1DA945A50(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  uint64_t v3 = *(void *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 84));
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1DA945A98(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  uint64_t v3 = *(void *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 88));
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1DA945AE0(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  return *(unsigned __int8 *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 92));
}

uint64_t sub_1DA945B14()
{
  type metadata accessor for WidgetExtensionInfo();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA945B58(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  return *(unsigned __int8 *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 100));
}

uint64_t sub_1DA945B8C()
{
  type metadata accessor for WidgetExtensionInfo();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1DA944518(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void *sub_1DA945BF4(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  uint64_t v3 = *(void **)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 108));
  id v4 = v3;
  return v3;
}

uint64_t sub_1DA945C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA98BA48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v8 = sub_1DA98BC08();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DA945FA8(a2, (uint64_t)v16);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F46D98], v4);
  sub_1DA98BBE8();
  sub_1DA98BBF8();
  sub_1DA98BBD8();
  uint64_t v12 = *v2;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_retain();
  v13(v11, v8);
  return v12;
}

uint64_t RemoteWidgetExtension.makeSession(requiresUserInteractivePriority:suspensionObserver:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA98BA48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v8 = sub_1DA98BC08();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DA945FA8(a2, (uint64_t)v16);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F46D98], v4);
  sub_1DA98BBE8();
  sub_1DA98BBF8();
  sub_1DA98BBD8();
  uint64_t v12 = *v2;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_retain();
  v13(v11, v8);
  return v12;
}

uint64_t sub_1DA945FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA946010(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v14 = a3;
  uint64_t v5 = sub_1DA98BA48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = sub_1DA98BC08();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DA945FA8(a2, (uint64_t)v15);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F46D98], v5);
  sub_1DA98BBE8();
  sub_1DA98BBF8();
  sub_1DA98BBD8();
  v14(*v3);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t RemoteWidgetExtension.makeSessionAsync(requiresUserInteractivePriority:suspensionObserver:completion:)(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v14 = a3;
  uint64_t v5 = sub_1DA98BA48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = sub_1DA98BC08();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DA945FA8(a2, (uint64_t)v15);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F46D98], v5);
  sub_1DA98BBE8();
  sub_1DA98BBF8();
  sub_1DA98BBD8();
  v14(*v3);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1DA9463A0()
{
  return swift_retain();
}

uint64_t RemoteWidgetExtension.makeSession(options:)()
{
  return swift_retain();
}

uint64_t sub_1DA9463B0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2(*v2);
}

uint64_t RemoteWidgetExtension.makeSessionAsync(options:completion:)(uint64_t a1, uint64_t (*a2)(void))
{
  return a2(*v2);
}

uint64_t sub_1DA94640C(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = __swift_project_boxed_opaque_existential_0(a1, v2);

  return sub_1DA9466E4((uint64_t)v4, v1, v2, v3);
}

uint64_t RemoteWidgetExtension.matches(_:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = __swift_project_boxed_opaque_existential_0(a1, v2);

  return sub_1DA9466E4((uint64_t)v4, v1, v2, v3);
}

uint64_t sub_1DA9464AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6A58);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for RemoteWidgetExtension();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  void v17[3] = v10;
  v17[4] = sub_1DA948310(&qword_1EA8E61D8, (void (*)(uint64_t))type metadata accessor for RemoteWidgetExtension);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  sub_1DA948358(a2, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for RemoteWidgetExtension);
  sub_1DA7A1A44((uint64_t)v17, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E48);
  int v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  if (v12)
  {
    v13(v5, 0, 1, v6);
    sub_1DA948420((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RemoteWidgetExtension);
    char v14 = WidgetExtensionInfo.matches(_:)((uint64_t)&v9[*(int *)(v6 + 20)]);
    sub_1DA948488((uint64_t)v9);
  }
  else
  {
    v13(v5, 1, 1, v6);
    sub_1DA9483C0((uint64_t)v5);
    char v14 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v14 & 1;
}

id sub_1DA9466D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(v2 + *(int *)(a1 + 20));
  *a2 = v3;
  return v3;
}

uint64_t sub_1DA9466E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6A58);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for RemoteWidgetExtension();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  void v20[3] = a3;
  v20[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  sub_1DA7A1A44((uint64_t)v20, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E48);
  int v15 = swift_dynamicCast();
  uint64_t v16 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v15)
  {
    v16(v9, 0, 1, v10);
    sub_1DA948420((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for RemoteWidgetExtension);
    char v17 = WidgetExtensionInfo.matches(_:)((uint64_t)&v13[*(int *)(v10 + 20)]);
    sub_1DA948488((uint64_t)v13);
  }
  else
  {
    v16(v9, 1, 1, v10);
    sub_1DA9483C0((uint64_t)v9);
    char v17 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return v17 & 1;
}

uint64_t sub_1DA9468F4(void *a1)
{
  a1[1] = sub_1DA948310(&qword_1EA8E6A40, (void (*)(uint64_t))type metadata accessor for RemoteWidgetExtension);
  a1[2] = sub_1DA948310(&qword_1EA8E6A48, (void (*)(uint64_t))type metadata accessor for RemoteWidgetExtension);
  uint64_t result = sub_1DA948310(&qword_1EA8E6A50, (void (*)(uint64_t))type metadata accessor for RemoteWidgetExtension);
  a1[3] = result;
  return result;
}

uint64_t sub_1DA9469A0()
{
  return sub_1DA948310((unint64_t *)&qword_1EBE63FF0, MEMORY[0x1E4F58B88]);
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteWidgetExtension(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v31 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (uint64_t *)((char *)a1 + v5);
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    uint64_t v9 = *(void **)((char *)a2 + v5);
    uint64_t v8 = *(uint64_t *)((char *)a2 + v5 + 8);
    *uint64_t v6 = v9;
    v6[1] = v8;
    uint64_t v10 = v7[3];
    v6[2] = v7[2];
    v6[3] = v10;
    void v6[4] = v7[4];
    uint64_t v11 = (int *)type metadata accessor for WidgetExtensionInfo();
    uint64_t v12 = v11[7];
    id v60 = (char *)v7 + v12;
    uint64_t v61 = (char *)v6 + v12;
    uint64_t v13 = sub_1DA989698();
    char v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_retain();
    id v15 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v61, v60, v13);
    uint64_t v16 = v11[8];
    char v17 = (char *)v6 + v16;
    uint64_t v18 = (char *)v7 + v16;
    uint64_t v19 = sub_1DA989638();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    *((unsigned char *)v6 + v11[9]) = *((unsigned char *)v7 + v11[9]);
    uint64_t v20 = v11[10];
    char v21 = (char *)v6 + v20;
    uint64_t v22 = (char *)v7 + v20;
    uint64_t v23 = sub_1DA989478();
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    v24(v21, v22, v23);
    v24((char *)v6 + v11[11], (char *)v7 + v11[11], v23);
    v24((char *)v6 + v11[12], (char *)v7 + v11[12], v23);
    uint64_t v25 = v11[13];
    uint64_t v26 = (char *)v6 + v25;
    id v27 = (char *)v7 + v25;
    uint64_t v28 = sub_1DA98B9E8();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    *((unsigned char *)v6 + v11[14]) = *((unsigned char *)v7 + v11[14]);
    v24((char *)v6 + v11[15], (char *)v7 + v11[15], v23);
    uint64_t v32 = v11[16];
    id v33 = (void *)((char *)v6 + v32);
    uint64_t v34 = (void *)((char *)v7 + v32);
    uint64_t v35 = v34[1];
    *id v33 = *v34;
    v33[1] = v35;
    uint64_t v36 = v11[17];
    char v37 = (void *)((char *)v6 + v36);
    os_log_type_t v38 = (void *)((char *)v7 + v36);
    uint64_t v39 = v38[1];
    void *v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = v11[18];
    id v41 = (void *)((char *)v6 + v40);
    uint64_t v42 = (void *)((char *)v7 + v40);
    uint64_t v43 = v42[1];
    void *v41 = *v42;
    v41[1] = v43;
    uint64_t v44 = v11[19];
    uint64_t v45 = (void *)((char *)v6 + v44);
    id v46 = (void *)((char *)v7 + v44);
    uint64_t v47 = v46[1];
    void *v45 = *v46;
    v45[1] = v47;
    *(void *)((char *)v6 + v11[20]) = *(void *)((char *)v7 + v11[20]);
    uint64_t v48 = v11[21];
    uint64_t v49 = (void *)((char *)v6 + v48);
    id v50 = (void *)((char *)v7 + v48);
    uint64_t v51 = v50[1];
    *uint64_t v49 = *v50;
    v49[1] = v51;
    uint64_t v52 = v11[22];
    int v53 = (void *)((char *)v6 + v52);
    BOOL v54 = (void *)((char *)v7 + v52);
    uint64_t v55 = v54[1];
    *int v53 = *v54;
    v53[1] = v55;
    *((unsigned char *)v6 + v11[23]) = *((unsigned char *)v7 + v11[23]);
    *(void *)((char *)v6 + v11[24]) = *(void *)((char *)v7 + v11[24]);
    *((unsigned char *)v6 + v11[25]) = *((unsigned char *)v7 + v11[25]);
    *(void *)((char *)v6 + v11[26]) = *(void *)((char *)v7 + v11[26]);
    uint64_t v56 = v11[27];
    uint64_t v57 = *(void **)((char *)v7 + v56);
    *(void *)((char *)v6 + v56) = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v58 = v57;
    return a1;
  }
  return (uint64_t *)v31;
}

void destroy for RemoteWidgetExtension(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = (id *)(a1 + *(int *)(a2 + 20));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for WidgetExtensionInfo();
  uint64_t v6 = (char *)v4 + v5[7];
  uint64_t v7 = sub_1DA989698();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = (char *)v4 + v5[8];
  uint64_t v9 = sub_1DA989638();
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = (char *)v4 + v5[10];
  uint64_t v11 = sub_1DA989478();
  uint64_t v12 = *(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  v12((char *)v4 + v5[11], v11);
  v12((char *)v4 + v5[12], v11);
  uint64_t v13 = (char *)v4 + v5[13];
  uint64_t v14 = sub_1DA98B9E8();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  }
  v12((char *)v4 + v5[15], v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(id *)((char *)v4 + v5[27]);
}

void *initializeWithCopy for RemoteWidgetExtension(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (void *)((char *)a1 + v3);
  uint64_t v5 = (void *)((char *)a2 + v3);
  uint64_t v7 = *(void **)((char *)a2 + v3);
  uint64_t v6 = *(void *)((char *)a2 + v3 + 8);
  *uint64_t v4 = v7;
  v4[1] = v6;
  uint64_t v8 = v5[3];
  v4[2] = v5[2];
  v4[3] = v8;
  v4[4] = v5[4];
  uint64_t v9 = (int *)type metadata accessor for WidgetExtensionInfo();
  uint64_t v10 = v9[7];
  uint64_t v57 = (char *)v5 + v10;
  id v58 = (char *)v4 + v10;
  uint64_t v11 = sub_1DA989698();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  id v13 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v58, v57, v11);
  uint64_t v14 = v9[8];
  uint64_t v15 = (char *)v4 + v14;
  uint64_t v16 = (char *)v5 + v14;
  uint64_t v17 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  *((unsigned char *)v4 + v9[9]) = *((unsigned char *)v5 + v9[9]);
  uint64_t v18 = v9[10];
  uint64_t v19 = (char *)v4 + v18;
  uint64_t v20 = (char *)v5 + v18;
  uint64_t v21 = sub_1DA989478();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
  v22(v19, v20, v21);
  v22((char *)v4 + v9[11], (char *)v5 + v9[11], v21);
  v22((char *)v4 + v9[12], (char *)v5 + v9[12], v21);
  uint64_t v23 = v9[13];
  uint64_t v24 = (char *)v4 + v23;
  uint64_t v25 = (char *)v5 + v23;
  uint64_t v26 = sub_1DA98B9E8();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  *((unsigned char *)v4 + v9[14]) = *((unsigned char *)v5 + v9[14]);
  v22((char *)v4 + v9[15], (char *)v5 + v9[15], v21);
  uint64_t v29 = v9[16];
  uint64_t v30 = (void *)((char *)v4 + v29);
  uint64_t v31 = (void *)((char *)v5 + v29);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  uint64_t v33 = v9[17];
  uint64_t v34 = (void *)((char *)v4 + v33);
  uint64_t v35 = (void *)((char *)v5 + v33);
  uint64_t v36 = v35[1];
  void *v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = v9[18];
  os_log_type_t v38 = (void *)((char *)v4 + v37);
  uint64_t v39 = (void *)((char *)v5 + v37);
  uint64_t v40 = v39[1];
  *os_log_type_t v38 = *v39;
  v38[1] = v40;
  uint64_t v41 = v9[19];
  uint64_t v42 = (void *)((char *)v4 + v41);
  uint64_t v43 = (void *)((char *)v5 + v41);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  *(void *)((char *)v4 + v9[20]) = *(void *)((char *)v5 + v9[20]);
  uint64_t v45 = v9[21];
  id v46 = (void *)((char *)v4 + v45);
  uint64_t v47 = (void *)((char *)v5 + v45);
  uint64_t v48 = v47[1];
  *id v46 = *v47;
  v46[1] = v48;
  uint64_t v49 = v9[22];
  id v50 = (void *)((char *)v4 + v49);
  uint64_t v51 = (void *)((char *)v5 + v49);
  uint64_t v52 = v51[1];
  *id v50 = *v51;
  v50[1] = v52;
  *((unsigned char *)v4 + v9[23]) = *((unsigned char *)v5 + v9[23]);
  *(void *)((char *)v4 + v9[24]) = *(void *)((char *)v5 + v9[24]);
  *((unsigned char *)v4 + v9[25]) = *((unsigned char *)v5 + v9[25]);
  *(void *)((char *)v4 + v9[26]) = *(void *)((char *)v5 + v9[26]);
  uint64_t v53 = v9[27];
  BOOL v54 = *(void **)((char *)v5 + v53);
  *(void *)((char *)v4 + v53) = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v55 = v54;
  return a1;
}

void *assignWithCopy for RemoteWidgetExtension(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  id v60 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = *(void **)((char *)a2 + v6);
  uint64_t v10 = *(void **)v7;
  *(void *)uint64_t v7 = v9;
  id v11 = v9;

  *((void *)v7 + 1) = v8[1];
  *((void *)v7 + 2) = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 3) = v8[3];
  *((void *)v7 + 4) = v8[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for WidgetExtensionInfo();
  uint64_t v13 = v12[7];
  uint64_t v14 = &v7[v13];
  uint64_t v15 = (char *)v8 + v13;
  uint64_t v16 = sub_1DA989698();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = v12[8];
  uint64_t v18 = &v7[v17];
  uint64_t v19 = (char *)v8 + v17;
  uint64_t v20 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  v7[v12[9]] = *((unsigned char *)v8 + v12[9]);
  uint64_t v21 = v12[10];
  uint64_t v22 = &v7[v21];
  uint64_t v23 = (char *)v8 + v21;
  uint64_t v24 = sub_1DA989478();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24);
  v25(v22, v23, v24);
  v25(&v7[v12[11]], (char *)v8 + v12[11], v24);
  unint64_t v59 = v25;
  v25(&v7[v12[12]], (char *)v8 + v12[12], v24);
  uint64_t v26 = v12[13];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = (char *)v8 + v26;
  uint64_t v29 = sub_1DA98B9E8();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  id v58 = v27;
  LODWORD(v27) = v31(v27, 1, v29);
  int v32 = v31(v28, 1, v29);
  if (v27)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v58, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v58, 0, 1, v29);
      goto LABEL_9;
    }
    size_t v33 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0) - 8) + 64);
    uint64_t v34 = v58;
  }
  else
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v58, v28, v29);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v58, v29);
    size_t v33 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0) - 8) + 64);
    uint64_t v34 = v58;
  }
  memcpy(v34, v28, v33);
LABEL_9:
  v7[v12[14]] = *((unsigned char *)v8 + v12[14]);
  v59(&v7[v12[15]], (char *)v8 + v12[15], v24);
  uint64_t v35 = v12[16];
  uint64_t v36 = &v7[v35];
  uint64_t v37 = (void *)((char *)v8 + v35);
  *(void *)uint64_t v36 = *v37;
  *((void *)v36 + 1) = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = v12[17];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = (void *)((char *)v8 + v38);
  *(void *)uint64_t v39 = *v40;
  *((void *)v39 + 1) = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v12[18];
  uint64_t v42 = &v7[v41];
  uint64_t v43 = (void *)((char *)v8 + v41);
  *(void *)uint64_t v42 = *v43;
  *((void *)v42 + 1) = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v12[19];
  uint64_t v45 = &v7[v44];
  id v46 = (void *)((char *)v8 + v44);
  *(void *)uint64_t v45 = *v46;
  *((void *)v45 + 1) = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v12[20]] = *(void *)((char *)v8 + v12[20]);
  uint64_t v47 = v12[21];
  uint64_t v48 = &v7[v47];
  uint64_t v49 = (void *)((char *)v8 + v47);
  *(void *)uint64_t v48 = *v49;
  *((void *)v48 + 1) = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v50 = v12[22];
  uint64_t v51 = &v7[v50];
  uint64_t v52 = (void *)((char *)v8 + v50);
  *(void *)uint64_t v51 = *v52;
  *((void *)v51 + 1) = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v12[23]] = *((unsigned char *)v8 + v12[23]);
  *(void *)&v7[v12[24]] = *(void *)((char *)v8 + v12[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v12[25]] = *((unsigned char *)v8 + v12[25]);
  *(void *)&v7[v12[26]] = *(void *)((char *)v8 + v12[26]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = v12[27];
  BOOL v54 = *(void **)&v7[v53];
  id v55 = *(void **)((char *)v8 + v53);
  *(void *)&v7[v53] = v55;
  id v56 = v55;

  return v60;
}

void *initializeWithTake for RemoteWidgetExtension(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  *(void *)uint64_t v4 = *(void *)((char *)a2 + v3);
  *(_OWORD *)(v4 + 8) = *(_OWORD *)((char *)a2 + v3 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)((char *)a2 + v3 + 24);
  uint64_t v6 = (int *)type metadata accessor for WidgetExtensionInfo();
  uint64_t v7 = v6[7];
  uint64_t v8 = &v4[v7];
  uint64_t v9 = &v5[v7];
  uint64_t v10 = sub_1DA989698();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = v6[8];
  uint64_t v12 = &v4[v11];
  uint64_t v13 = &v5[v11];
  uint64_t v14 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  v4[v6[9]] = v5[v6[9]];
  uint64_t v15 = v6[10];
  uint64_t v16 = &v4[v15];
  uint64_t v17 = &v5[v15];
  uint64_t v18 = sub_1DA989478();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v19(&v4[v6[11]], &v5[v6[11]], v18);
  v19(&v4[v6[12]], &v5[v6[12]], v18);
  uint64_t v20 = v6[13];
  uint64_t v21 = &v4[v20];
  uint64_t v22 = &v5[v20];
  uint64_t v23 = sub_1DA98B9E8();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v4[v6[14]] = v5[v6[14]];
  v19(&v4[v6[15]], &v5[v6[15]], v18);
  *(_OWORD *)&v4[v6[16]] = *(_OWORD *)&v5[v6[16]];
  *(_OWORD *)&v4[v6[17]] = *(_OWORD *)&v5[v6[17]];
  *(_OWORD *)&v4[v6[18]] = *(_OWORD *)&v5[v6[18]];
  *(_OWORD *)&v4[v6[19]] = *(_OWORD *)&v5[v6[19]];
  *(void *)&v4[v6[20]] = *(void *)&v5[v6[20]];
  *(_OWORD *)&v4[v6[21]] = *(_OWORD *)&v5[v6[21]];
  *(_OWORD *)&v4[v6[22]] = *(_OWORD *)&v5[v6[22]];
  v4[v6[23]] = v5[v6[23]];
  *(void *)&v4[v6[24]] = *(void *)&v5[v6[24]];
  v4[v6[25]] = v5[v6[25]];
  *(void *)&v4[v6[26]] = *(void *)&v5[v6[26]];
  *(void *)&v4[v6[27]] = *(void *)&v5[v6[27]];
  return a1;
}

void *assignWithTake for RemoteWidgetExtension(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v70 = a1;
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = *(void **)((char *)a1 + v6);
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);

  uint64_t v10 = v8[2];
  v7[1] = v8[1];
  void v7[2] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v8[4];
  v7[3] = v8[3];
  void v7[4] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for WidgetExtensionInfo();
  uint64_t v13 = v12[7];
  uint64_t v14 = (char *)v7 + v13;
  uint64_t v15 = (char *)v8 + v13;
  uint64_t v16 = sub_1DA989698();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v12[8];
  uint64_t v18 = (char *)v7 + v17;
  uint64_t v19 = (char *)v8 + v17;
  uint64_t v20 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  *((unsigned char *)v7 + v12[9]) = *((unsigned char *)v8 + v12[9]);
  uint64_t v21 = v12[10];
  uint64_t v22 = (char *)v7 + v21;
  uint64_t v23 = (char *)v8 + v21;
  uint64_t v24 = sub_1DA989478();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40);
  v25(v22, v23, v24);
  v25((char *)v7 + v12[11], (char *)v8 + v12[11], v24);
  uint64_t v69 = v25;
  v25((char *)v7 + v12[12], (char *)v8 + v12[12], v24);
  uint64_t v26 = v12[13];
  uint64_t v27 = (char *)v7 + v26;
  uint64_t v28 = (char *)v8 + v26;
  uint64_t v29 = sub_1DA98B9E8();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  os_log_t v68 = v27;
  LODWORD(v27) = v31(v27, 1, v29);
  int v32 = v31(v28, 1, v29);
  if (v27)
  {
    if (!v32)
    {
      (*(void (**)(void *, char *, uint64_t))(v30 + 32))(v68, v28, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v68, 0, 1, v29);
      goto LABEL_9;
    }
    size_t v33 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0) - 8) + 64);
    uint64_t v34 = v68;
  }
  else
  {
    if (!v32)
    {
      (*(void (**)(void *, char *, uint64_t))(v30 + 40))(v68, v28, v29);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v30 + 8))(v68, v29);
    size_t v33 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AF0) - 8) + 64);
    uint64_t v34 = v68;
  }
  memcpy(v34, v28, v33);
LABEL_9:
  *((unsigned char *)v7 + v12[14]) = *((unsigned char *)v8 + v12[14]);
  v69((char *)v7 + v12[15], (char *)v8 + v12[15], v24);
  uint64_t v35 = v12[16];
  uint64_t v36 = (void *)((char *)v7 + v35);
  uint64_t v37 = (void *)((char *)v8 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  void *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = v12[17];
  uint64_t v41 = (void *)((char *)v7 + v40);
  uint64_t v42 = (void *)((char *)v8 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  void *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = v12[18];
  id v46 = (void *)((char *)v7 + v45);
  uint64_t v47 = (void *)((char *)v8 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  *id v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = v12[19];
  uint64_t v51 = (void *)((char *)v7 + v50);
  uint64_t v52 = (void *)((char *)v8 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *uint64_t v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v12[20]) = *(void *)((char *)v8 + v12[20]);
  uint64_t v55 = v12[21];
  id v56 = (void *)((char *)v7 + v55);
  uint64_t v57 = (void *)((char *)v8 + v55);
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  *id v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  uint64_t v60 = v12[22];
  uint64_t v61 = (void *)((char *)v7 + v60);
  uint64_t v62 = (void *)((char *)v8 + v60);
  uint64_t v64 = *v62;
  uint64_t v63 = v62[1];
  void *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  *((unsigned char *)v7 + v12[23]) = *((unsigned char *)v8 + v12[23]);
  *(void *)((char *)v7 + v12[24]) = *(void *)((char *)v8 + v12[24]);
  swift_bridgeObjectRelease();
  *((unsigned char *)v7 + v12[25]) = *((unsigned char *)v8 + v12[25]);
  *(void *)((char *)v7 + v12[26]) = *(void *)((char *)v8 + v12[26]);
  swift_bridgeObjectRelease();
  uint64_t v65 = v12[27];
  uint64_t v66 = *(void **)((char *)v7 + v65);
  *(void *)((char *)v7 + v65) = *(void *)((char *)v8 + v65);

  return v70;
}

uint64_t getEnumTagSinglePayload for RemoteWidgetExtension(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA948108);
}

uint64_t sub_1DA948108(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for WidgetExtensionInfo();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RemoteWidgetExtension(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA9481CC);
}

void *sub_1DA9481CC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for WidgetExtensionInfo();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DA948274()
{
  uint64_t result = type metadata accessor for WidgetExtensionInfo();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DA948310(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA948358(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA9483C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6A58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA948420(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA948488(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoteWidgetExtension();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA9484EC()
{
  unint64_t v2 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](88);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (swift_weakLoadStrong())
  {
    uint64_t v3 = sub_1DA7BEF9C(v2);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      uint64_t v5 = v3;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_retain();
      unint64_t v6 = sub_1DA94B9C8(v5, v0);
      swift_bridgeObjectRelease();
      swift_release();
      return v6;
    }
  }
  else
  {
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA9489AC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v138 = type metadata accessor for Budget();
  MEMORY[0x1F4188790](v138);
  int v137 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v140 = (uint64_t)&v126 - v7;
  uint64_t v8 = sub_1DA989638();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v136 = (char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  os_log_type_t v139 = (char *)&v126 - v12;
  uint64_t v13 = *a1;
  uint64_t v14 = sub_1DA98CA38();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v13 + 16);
  if (!v17) {
    goto LABEL_22;
  }
  uint64_t v18 = v14;
  uint64_t v134 = v9;
  uint64_t v135 = v8;
  uint64_t v141 = v2;
  uint64_t v142 = a2;
  uint64_t v19 = (char *)(v13 + 64);
  while (1)
  {
    uint64_t v20 = *((void *)v19 - 2);
    unint64_t v21 = *((void *)v19 - 1);
    char v22 = *v19;
    BOOL v23 = *((void *)v19 - 4) == v18 && *((void *)v19 - 3) == v16;
    if (v23 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v19 += 40;
    if (!--v17) {
      goto LABEL_70;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v20, v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1DA8F6590(v20, v21, v22);
  uint64_t v26 = v25;
  sub_1DA79EB2C(v20, v21, v22);
  a2 = v142;
  if (!v26) {
    goto LABEL_71;
  }
  uint64_t v27 = sub_1DA98CA38();
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v13 + 16);
  if (!v30) {
    goto LABEL_21;
  }
  uint64_t v31 = v27;
  uint64_t v132 = v24;
  uint64_t v133 = v26;
  int v32 = (char *)(v13 + 64);
  while (1)
  {
    uint64_t v33 = *((void *)v32 - 2);
    unint64_t v34 = *((void *)v32 - 1);
    char v35 = *v32;
    BOOL v36 = *((void *)v32 - 4) == v31 && *((void *)v32 - 3) == v29;
    if (v36 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v32 += 40;
    if (!--v30) {
      goto LABEL_52;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v33, v34, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_1DA8F6584(v33, v34, v35);
  char v39 = v38;
  sub_1DA79EB2C(v33, v34, v35);
  if (v39) {
    goto LABEL_70;
  }
  uint64_t v40 = sub_1DA98CA38();
  uint64_t v42 = v41;
  uint64_t v43 = *(void *)(v13 + 16);
  if (!v43) {
    goto LABEL_52;
  }
  uint64_t v44 = v40;
  uint64_t v131 = v37;
  uint64_t v45 = (char *)(v13 + 64);
  while (1)
  {
    uint64_t v46 = *((void *)v45 - 2);
    unint64_t v47 = *((void *)v45 - 1);
    char v48 = *v45;
    BOOL v49 = *((void *)v45 - 4) == v44 && *((void *)v45 - 3) == v42;
    if (v49 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v45 += 40;
    if (!--v43) {
      goto LABEL_52;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v46, v47, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v50 = sub_1DA8F6584(v46, v47, v48);
  char v52 = v51;
  sub_1DA79EB2C(v46, v47, v48);
  if (v52) {
    goto LABEL_70;
  }
  uint64_t v53 = sub_1DA98CA38();
  uint64_t v55 = v54;
  uint64_t v56 = *(void *)(v13 + 16);
  if (!v56) {
    goto LABEL_52;
  }
  uint64_t v57 = v53;
  uint64_t v130 = v50;
  uint64_t v58 = (char *)(v13 + 64);
  while (1)
  {
    uint64_t v59 = *((void *)v58 - 2);
    unint64_t v60 = *((void *)v58 - 1);
    char v61 = *v58;
    BOOL v62 = *((void *)v58 - 4) == v57 && *((void *)v58 - 3) == v55;
    if (v62 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v58 += 40;
    if (!--v56) {
      goto LABEL_52;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v59, v60, v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA8F66E8(v59, v60, v61);
  char v64 = v63;
  sub_1DA79EB2C(v59, v60, v61);
  if (v64) {
    goto LABEL_70;
  }
  uint64_t v65 = sub_1DA98CA38();
  uint64_t v67 = v66;
  uint64_t v68 = *(void *)(v13 + 16);
  if (!v68)
  {
LABEL_52:
    swift_bridgeObjectRelease();
    goto LABEL_70;
  }
  uint64_t v69 = v65;
  unint64_t v70 = (char *)(v13 + 64);
  while (1)
  {
    uint64_t v71 = *((void *)v70 - 2);
    unint64_t v72 = *((void *)v70 - 1);
    char v73 = *v70;
    BOOL v74 = *((void *)v70 - 4) == v69 && *((void *)v70 - 3) == v67;
    if (v74 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v70 += 40;
    if (!--v68) {
      goto LABEL_52;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v71, v72, v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v75 = sub_1DA8F6584(v71, v72, v73);
  char v77 = v76;
  sub_1DA79EB2C(v71, v72, v73);
  a2 = v142;
  if (v77)
  {
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_71:
    uint64_t v112 = type metadata accessor for PushSubscription();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(a2, 1, 1, v112);
  }
  uint64_t v78 = sub_1DA98CA38();
  uint64_t v80 = v79;
  uint64_t v81 = *(void *)(v13 + 16);
  if (!v81)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v82 = v78;
  uint64_t v129 = v75;
  os_log_t v83 = (char *)(v13 + 64);
  while (1)
  {
    uint64_t v84 = *((void *)v83 - 2);
    unint64_t v85 = *((void *)v83 - 1);
    char v86 = *v83;
    BOOL v87 = *((void *)v83 - 4) == v82 && *((void *)v83 - 3) == v80;
    if (v87 || (sub_1DA98CE58() & 1) != 0) {
      break;
    }
    v83 += 40;
    if (!--v81) {
      goto LABEL_52;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DA7A1AA8(v84, v85, v86);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v88 = sub_1DA8F6590(v84, v85, v86);
  uint64_t v90 = v89;
  sub_1DA79EB2C(v84, v85, v86);
  if (!v90)
  {
LABEL_70:
    swift_bridgeObjectRelease();
    a2 = v142;
    goto LABEL_71;
  }
  uint64_t v127 = v88;
  uint64_t v128 = v90;
  uint64_t result = sub_1DA98C178();
  uint64_t v93 = v134;
  uint64_t v92 = v135;
  uint64_t v94 = v129;
  if (result)
  {
    uint64_t v95 = sub_1DA98C118();
    uint64_t v96 = sub_1DA80BF94(v95);
    uint64_t v98 = v97;
    uint64_t v100 = v99;
    uint64_t v102 = v101;
    swift_bridgeObjectRelease();
    uint64_t v132 = MEMORY[0x1E0177290](v96, v98, v100, v102);
    uint64_t v133 = v103;
    swift_bridgeObjectRelease();
    uint64_t v104 = v139;
    sub_1DA9894F8();
    LOBYTE(v98) = v94 != 0;
    id v105 = v136;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v136, v104, v92);
    unsigned int v106 = v137;
    sub_1DA989528();
    uint64_t v107 = (int *)v138;
    uint64_t v108 = *(int *)(v138 + 20);
    *(void *)&v106[v108] = 0;
    (*(void (**)(char *, char *, uint64_t))(v93 + 40))(v106, v105, v92);
    *(void *)&v106[v108] = v130;
    v106[v107[6]] = v98;
    *(void *)&v106[v107[7]] = 0;
    *(void *)&v106[v107[8]] = 0;
    uint64_t v109 = (uint64_t)v106;
    uint64_t v110 = v140;
    sub_1DA94D19C(v109, v140, (uint64_t (*)(void))type metadata accessor for Budget);
    if (v131)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DA94D204(v110);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v104, v92);
LABEL_69:
      uint64_t v111 = type metadata accessor for PushSubscription();
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v142, 1, 1, v111);
    }
    uint64_t v113 = v133;
    id v114 = sub_1DA94B170(v13);
    if (!v114)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DA94D204(v140);
      (*(void (**)(char *, uint64_t))(v134 + 8))(v139, v135);
      goto LABEL_69;
    }
    uint64_t v115 = v114;
    uint64_t v116 = type metadata accessor for PushSubscription();
    id v117 = v142;
    uint64_t v118 = v140;
    sub_1DA7EB970(v140, (uint64_t)v142 + *(int *)(v116 + 24));
    id v119 = objc_msgSend(v115, sel_extensionIdentity);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    uint64_t v120 = sub_1DA9899C8();
    uint64_t v122 = v121;
    swift_endAccess();

    uint64_t v143 = v120;
    uint64_t v144 = v122;
    sub_1DA98C148();
    id v123 = objc_msgSend(v115, sel_kind);
    sub_1DA98C038();

    sub_1DA98C148();
    swift_bridgeObjectRelease();
    uint64_t v124 = v144;
    v117[2] = v143;
    v117[3] = v124;
    uint64_t v125 = v127;
    v117[4] = (uint64_t)v115;
    v117[5] = v125;
    v117[6] = v128;
    *id v117 = v132;
    v117[1] = v113;
    sub_1DA94D204(v118);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v139, v135);
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v117, 0, 1, v116);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DA9493D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_19;
  }
  uint64_t v5 = Strong;
  uint64_t v6 = *(void *)(Strong + 24);
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  uint64_t v8 = *(void *)(v5 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  swift_release();
  if (!v8)
  {
    __break(1u);
LABEL_19:
    sub_1DA98CBB8();
    __break(1u);
    return;
  }
  uint64_t v9 = a1 + *(int *)(type metadata accessor for PushSubscription() + 24);
  sub_1DA989508();
  double v11 = v10;
  uint64_t v12 = type metadata accessor for Budget();
  uint64_t v136 = *(void *)(v9 + *(int *)(v12 + 20));
  uint64_t v137 = *(unsigned __int8 *)(v9 + *(int *)(v12 + 24));
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v15 = *(void **)(a1 + 32);
  uint64_t v131 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  swift_bridgeObjectRetain();
  id v17 = v15;
  swift_bridgeObjectRetain();
  id v18 = objc_msgSend(v17, sel_intentReference);
  if (v18)
  {
    uint64_t v19 = v18;
    sub_1DA989BE8();
    id v20 = v19;
    uint64_t v21 = sub_1DA989BD8();
    if (v2)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v129 = v21;
    uint64_t v130 = 0;
    unint64_t v128 = v22;

    id v141 = objc_msgSend(v20, sel_stableHash);
    uint64_t v134 = sub_1DA98CDD8();
    uint64_t v135 = v23;
  }
  else
  {
    uint64_t v129 = 0;
    uint64_t v130 = v2;
    unint64_t v128 = 0xF000000000000000;
    uint64_t v134 = 0;
    uint64_t v135 = 0xE000000000000000;
  }
  id v24 = objc_msgSend(v17, sel_extensionIdentity);
  id v25 = objc_msgSend(v24, sel_tokenString);

  uint64_t v132 = sub_1DA98C038();
  uint64_t v27 = v26;

  id v28 = objc_msgSend(v17, sel_kind);
  uint64_t v133 = sub_1DA98C038();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v141 = 0;
  uint64_t v142 = 0xE000000000000000;
  unint64_t v31 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](275);
  v145[0] = 0;
  v145[1] = 0xE000000000000000;
  unint64_t v146 = v31;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v32 = sub_1DA79EBAC(v14, v13);
  unint64_t v34 = v33;
  char v36 = v35;
  sub_1DA8E40CC(v32, v33, v35);
  sub_1DA79EB2C(v32, v34, v36);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v37 = sub_1DA79EBAC(v131, v16);
  unint64_t v39 = v38;
  LOBYTE(v32) = v40;
  sub_1DA8E40CC(v37, v38, v40);
  sub_1DA79EB2C(v37, v39, v32);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v41 = *(void *)(a1 + 8);
  id v141 = *(id *)a1;
  uint64_t v142 = v41;
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_1DA79EBAC((uint64_t)v141, v142);
  unint64_t v44 = v43;
  LOBYTE(v32) = v45;
  sub_1DA8E40CC(v42, v43, v45);
  sub_1DA79EB2C(v42, v44, v32);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v46 = sub_1DA7A0B60(v11);
  unint64_t v48 = v47;
  LOBYTE(v44) = v49;
  sub_1DA8E40CC(v46, v47, v49);
  sub_1DA79EB2C(v46, v48, v44);
  sub_1DA98C148();
  uint64_t v50 = sub_1DA79E944(v136);
  unint64_t v52 = v51;
  LOBYTE(v44) = v53;
  sub_1DA8E40CC(v50, v51, v53);
  sub_1DA79EB2C(v50, v52, v44);
  sub_1DA98C148();
  uint64_t v54 = sub_1DA79E944(v137);
  unint64_t v56 = v55;
  LOBYTE(v44) = v57;
  sub_1DA8E40CC(v54, v55, v57);
  sub_1DA79EB2C(v54, v56, v44);
  sub_1DA98C148();
  uint64_t v58 = sub_1DA79E944(0);
  unint64_t v60 = v59;
  LOBYTE(v44) = v61;
  sub_1DA8E40CC(v58, v59, v61);
  sub_1DA79EB2C(v58, v60, v44);
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v62 = sub_1DA79EBAC(v132, v27);
  unint64_t v64 = v63;
  LOBYTE(v44) = v65;
  sub_1DA8E40CC(v62, v63, v65);
  sub_1DA79EB2C(v62, v64, v44);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v66 = sub_1DA79EBAC(v133, v30);
  unint64_t v68 = v67;
  LOBYTE(v44) = v69;
  sub_1DA8E40CC(v66, v67, v69);
  sub_1DA79EB2C(v66, v68, v44);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v70 = sub_1DA79EBAC(v134, v135);
  unint64_t v72 = v71;
  LOBYTE(v44) = v73;
  sub_1DA8E40CC(v70, v71, v73);
  sub_1DA79EB2C(v70, v72, v44);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  BOOL v74 = &off_1F34D9D00;
  if (v128 >> 60 == 15)
  {
    id v75 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
    uint64_t v76 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
    uint64_t v143 = v76;
    uint64_t v144 = &off_1F34D9D00;
    id v141 = v75;
    uint64_t v77 = v129;
  }
  else
  {
    uint64_t v139 = MEMORY[0x1E4F277C0];
    uint64_t v140 = &off_1F34D5038;
    uint64_t v77 = v129;
    *(void *)&long long v138 = v129;
    *((void *)&v138 + 1) = v128;
    sub_1DA7A19A4(&v138, (uint64_t)&v141);
    uint64_t v76 = v143;
    BOOL v74 = v144;
  }
  uint64_t v78 = __swift_project_boxed_opaque_existential_0(&v141, v76);
  sub_1DA7A1B3C(v77, v128);
  sub_1DA8E42AC((uint64_t)v78, (uint64_t)v145, v76, (uint64_t)v74);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v141);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v79 = *(void *)(a1 + 40);
  uint64_t v80 = *(void *)(a1 + 48);
  swift_bridgeObjectRetain_n();
  uint64_t v81 = sub_1DA79EBAC(v79, v80);
  unint64_t v83 = v82;
  char v85 = v84;
  sub_1DA8E40CC(v81, v82, v84);
  sub_1DA79EB2C(v81, v83, v85);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v86 = *(void *)(a1 + 8);
  id v141 = *(id *)a1;
  uint64_t v142 = v86;
  swift_bridgeObjectRetain();
  sub_1DA98C148();
  uint64_t v88 = (uint64_t)v141;
  uint64_t v87 = v142;
  swift_bridgeObjectRetain();
  uint64_t v89 = sub_1DA79EBAC(v88, v87);
  unint64_t v91 = v90;
  char v93 = v92;
  sub_1DA8E40CC(v89, v90, v92);
  sub_1DA79EB2C(v89, v91, v93);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v94 = sub_1DA7A0B60(v11);
  unint64_t v96 = v95;
  LOBYTE(v91) = v97;
  sub_1DA8E40CC(v94, v95, v97);
  sub_1DA79EB2C(v94, v96, v91);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v98 = sub_1DA79E944(v136);
  unint64_t v100 = v99;
  LOBYTE(v91) = v101;
  sub_1DA8E40CC(v98, v99, v101);
  sub_1DA79EB2C(v98, v100, v91);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v102 = sub_1DA79E944(v137);
  unint64_t v104 = v103;
  LOBYTE(v91) = v105;
  sub_1DA8E40CC(v102, v103, v105);
  sub_1DA79EB2C(v102, v104, v91);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v106 = sub_1DA79E944(0);
  unint64_t v108 = v107;
  LOBYTE(v91) = v109;
  sub_1DA8E40CC(v106, v107, v109);
  sub_1DA79EB2C(v106, v108, v91);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  uint64_t v110 = sub_1DA79EBAC(v132, v27);
  unint64_t v112 = v111;
  LOBYTE(v91) = v113;
  sub_1DA8E40CC(v110, v111, v113);
  sub_1DA79EB2C(v110, v112, v91);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  uint64_t v114 = sub_1DA79EBAC(v133, v30);
  unint64_t v116 = v115;
  LOBYTE(v91) = v117;
  sub_1DA8E40CC(v114, v115, v117);
  sub_1DA79EB2C(v114, v116, v91);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain();
  uint64_t v118 = sub_1DA79EBAC(v134, v135);
  unint64_t v120 = v119;
  LOBYTE(v91) = v121;
  sub_1DA8E40CC(v118, v119, v121);
  sub_1DA79EB2C(v118, v120, v91);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (v128 >> 60 == 15)
  {
    id v122 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
    uint64_t v123 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
    uint64_t v124 = &off_1F34D9D00;
    uint64_t v143 = v123;
    uint64_t v144 = &off_1F34D9D00;
    id v141 = v122;
  }
  else
  {
    uint64_t v139 = MEMORY[0x1E4F277C0];
    uint64_t v140 = &off_1F34D5038;
    *(void *)&long long v138 = v77;
    *((void *)&v138 + 1) = v128;
    sub_1DA7A19A4(&v138, (uint64_t)&v141);
    uint64_t v123 = v143;
    uint64_t v124 = v144;
  }
  uint64_t v125 = v77;
  uint64_t v126 = __swift_project_boxed_opaque_existential_0(&v141, v123);
  sub_1DA7A1B3C(v77, v128);
  sub_1DA8E42AC((uint64_t)v126, (uint64_t)v145, v123, (uint64_t)v124);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v141);
  uint64_t v127 = v146;
  if (!swift_weakLoadStrong()) {
    goto LABEL_19;
  }
  sub_1DA7BEF9C(v127);
  if (!v130) {
    swift_bridgeObjectRelease();
  }
  sub_1DA7A1ACC(v125, v128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_1DA94A3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v7 = Strong;
  uint64_t v8 = *(void *)(Strong + 24);
  uint64_t v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  uint64_t v10 = *(void *)(v7 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  swift_release();
  swift_release();
  if (!v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v11 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](24);
  uint64_t v18 = v11;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1DA79EBAC(a1, a2);
  unint64_t v14 = v13;
  char v16 = v15;
  sub_1DA8E40CC(v12, v13, v15);
  sub_1DA79EB2C(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA94A63C()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](40);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (swift_weakLoadStrong())
  {
    uint64_t v2 = sub_1DA7BEF9C(v1);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      uint64_t v3 = v2;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v1 = sub_1DA94C120(v3);
      swift_bridgeObjectRelease();
    }
    return v1;
  }
  else
  {
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA94A8EC(uint64_t *a1)
{
  unint64_t v3 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](35);
  uint64_t v18 = v3;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  sub_1DA79ED98(*a1, v5);
  sub_1DA79ED98(v4, v5);
  uint64_t v6 = sub_1DA79EB98(v4, v5);
  unint64_t v8 = v7;
  char v10 = v9;
  sub_1DA8E40CC(v6, v7, v9);
  sub_1DA79EB2C(v6, v8, v10);
  sub_1DA79DA70(v4, v5);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v11 = a1[2];
  uint64_t v12 = a1[3];
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1DA79EBAC(v11, v12);
  unint64_t v15 = v14;
  LOBYTE(v6) = v16;
  sub_1DA8E40CC(v13, v14, v16);
  sub_1DA79EB2C(v13, v15, v6);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (swift_weakLoadStrong())
  {
    sub_1DA7BEF9C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (!v1) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA94ABC4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](31);
  uint64_t v17 = v5;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
  uint64_t v7 = sub_1DA7A0D48((uint64_t)v6);
  unint64_t v9 = v8;
  char v11 = v10;
  sub_1DA8E40CC(v7, v8, v10);
  sub_1DA79EB2C(v7, v9, v11);

  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1DA79EBAC(a1, a2);
  unint64_t v14 = v13;
  LOBYTE(v7) = v15;
  sub_1DA8E40CC(v12, v13, v15);
  sub_1DA79EB2C(v12, v14, v7);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (swift_weakLoadStrong())
  {
    sub_1DA7BEF9C(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (!v2) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA94AE88(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](31);
  uint64_t v17 = v5;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
  uint64_t v7 = sub_1DA7A0D48((uint64_t)v6);
  unint64_t v9 = v8;
  char v11 = v10;
  sub_1DA8E40CC(v7, v8, v10);
  sub_1DA79EB2C(v7, v9, v11);

  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1DA79EBAC(a1, a2);
  unint64_t v14 = v13;
  LOBYTE(v7) = v15;
  sub_1DA8E40CC(v12, v13, v15);
  sub_1DA79EB2C(v12, v14, v7);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (swift_weakLoadStrong())
  {
    sub_1DA7BEF9C(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (!v2) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

uint64_t ChronoMetadataStore.MutablePushTokenStore.deinit()
{
  swift_weakDestroy();
  return v0;
}

id sub_1DA94B170(uint64_t a1)
{
  uint64_t v2 = sub_1DA98CA38();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v6 = v2;
    uint64_t v7 = (char *)(a1 + 64);
    uint64_t v8 = *(void *)(a1 + 16);
    while (1)
    {
      uint64_t v9 = *((void *)v7 - 2);
      unint64_t v10 = *((void *)v7 - 1);
      char v11 = *v7;
      BOOL v12 = *((void *)v7 - 4) == v6 && *((void *)v7 - 3) == v4;
      if (v12 || (sub_1DA98CE58() & 1) != 0) {
        break;
      }
      v7 += 40;
      if (!--v8) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRetain();
    sub_1DA7A1AA8(v9, v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1DA8F6590(v9, v10, v11);
    uint64_t v21 = v20;
    sub_1DA79EB2C(v9, v10, v11);
    if (v21)
    {
      uint64_t v58 = v21;
      uint64_t v59 = v5;
      uint64_t v57 = v19;
      uint64_t v22 = sub_1DA98CA38();
      uint64_t v24 = v23;
      uint64_t v25 = 0;
      uint64_t v26 = (char *)(a1 + 64);
      while (1)
      {
        uint64_t v27 = v25 + 1;
        if (__OFADD__(v25, 1))
        {
          __break(1u);
          goto LABEL_48;
        }
        uint64_t v28 = *((void *)v26 - 2);
        unint64_t v29 = *((void *)v26 - 1);
        char v30 = *v26;
        BOOL v31 = *((void *)v26 - 4) == v22 && *((void *)v26 - 3) == v24;
        if (v31 || (sub_1DA98CE58() & 1) != 0) {
          break;
        }
        v26 += 40;
        ++v25;
        if (v27 == v59)
        {
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRetain();
      sub_1DA7A1AA8(v28, v29, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DA8F6590(v28, v29, v30);
      uint64_t v33 = v32;
      sub_1DA79EB2C(v28, v29, v30);
      if (!v33) {
        goto LABEL_9;
      }
      sub_1DA98C708();
      unint64_t v34 = v58;
      swift_bridgeObjectRetain();
      uint64_t v35 = v57;
      uint64_t v36 = sub_1DA98C6D8();
      if (v36)
      {
        unint64_t v56 = (void *)v36;
        uint64_t v37 = sub_1DA98CA38();
        uint64_t v39 = v38;
        uint64_t v40 = 0;
        unint64_t v34 = (unsigned __int8 *)(a1 + 64);
        while (1)
        {
          uint64_t v41 = v40 + 1;
          if (__OFADD__(v40, 1)) {
            break;
          }
          uint64_t v42 = *((void *)v34 - 2);
          unint64_t v43 = *((void *)v34 - 1);
          uint64_t v35 = *v34;
          BOOL v44 = *((void *)v34 - 4) == v37 && *((void *)v34 - 3) == v39;
          if (v44 || (sub_1DA98CE58() & 1) != 0)
          {
            swift_bridgeObjectRetain();
            sub_1DA7A1AA8(v42, v43, v35);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1DA8F6418(v42, v43, v35, &v60);
            sub_1DA79EB2C(v42, v43, v35);
            unint64_t v47 = *((void *)&v60 + 1);
            uint64_t v45 = v60;
            if (*((void *)&v60 + 1) >> 60 == 15)
            {
              uint64_t v46 = 0;
LABEL_43:
              char v53 = v56;
            }
            else
            {
              sub_1DA989BE8();
              sub_1DA7A1A08(0, &qword_1EBE5A6B0);
              sub_1DA79ED98(v45, v47);
              uint64_t v46 = (void *)sub_1DA989BC8();
              sub_1DA7A1ACC(v45, v47);
              char v53 = v56;
            }
            swift_bridgeObjectRelease();
            id v54 = objc_allocWithZone(MEMORY[0x1E4F58C80]);
            unint64_t v55 = (void *)sub_1DA98C008();
            swift_bridgeObjectRelease();
            id v17 = objc_msgSend(v54, sel_initWithExtensionIdentity_kind_intentReference_, v53, v55, v46);

            sub_1DA7A1ACC(v45, v47);
            return v17;
          }
          v34 += 40;
          ++v40;
          if (v41 == v59)
          {
            swift_bridgeObjectRelease();
            uint64_t v45 = 0;
            uint64_t v46 = 0;
            unint64_t v47 = 0xF000000000000000;
            goto LABEL_43;
          }
        }
        __break(1u);
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_1EBE59148 == -1) {
          goto LABEL_39;
        }
      }
      swift_once();
LABEL_39:
      uint64_t v48 = sub_1DA989F38();
      __swift_project_value_buffer(v48, (uint64_t)qword_1EBE6F0A8);
      swift_bridgeObjectRetain();
      char v49 = sub_1DA989F18();
      os_log_type_t v50 = sub_1DA98C528();
      if (os_log_type_enabled(v49, v50))
      {
        unint64_t v51 = (uint8_t *)swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        *(void *)&long long v60 = v52;
        *(_DWORD *)unint64_t v51 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v61 = sub_1DA8C5E00(v35, (unint64_t)v34, (uint64_t *)&v60);
        sub_1DA98C858();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DA795000, v49, v50, "Encountered malformed subscription extension, %s.", v51, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v52, -1, -1);
        MEMORY[0x1E0178DA0](v51, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
  }
  if (qword_1EBE59148 != -1) {
LABEL_48:
  }
    swift_once();
  uint64_t v13 = sub_1DA989F38();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EBE6F0A8);
  unint64_t v14 = sub_1DA989F18();
  os_log_type_t v15 = sub_1DA98C528();
  if (os_log_type_enabled(v14, v15))
  {
    char v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v16 = 0;
    _os_log_impl(&dword_1DA795000, v14, v15, "Encountered malformed result for control identity in push subscription.", v16, 2u);
    MEMORY[0x1E0178DA0](v16, -1, -1);
  }

  return 0;
}

unint64_t sub_1DA94B9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EE8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for PushSubscription();
  MEMORY[0x1F4188790](v23);
  uint64_t v22 = (uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v19 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v20 = v9;
  uint64_t v13 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  unint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v21 = a1;
  do
  {
    uint64_t v25 = *(void *)(a1 + 8 * v14 + 32);
    swift_bridgeObjectRetain();
    sub_1DA9489AC(&v25, v6);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    if ((*v13)(v6, 1, v23) == 1)
    {
      sub_1DA7A1AE0((uint64_t)v6, &qword_1EBE59EE8);
    }
    else
    {
      sub_1DA94D19C((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PushSubscription);
      sub_1DA94D19C((uint64_t)v11, v22, (uint64_t (*)(void))type metadata accessor for PushSubscription);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_1DA7CB3E0(0, *(void *)(v15 + 16) + 1, 1, v15);
      }
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      if (v17 >= v16 >> 1) {
        unint64_t v15 = sub_1DA7CB3E0(v16 > 1, v17 + 1, 1, v15);
      }
      *(void *)(v15 + 16) = v17 + 1;
      sub_1DA94D19C(v22, v15+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v17, (uint64_t (*)(void))type metadata accessor for PushSubscription);
      a1 = v21;
    }
    ++v14;
  }
  while (v12 != v14);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1DA94BCAC()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](277);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DA94C120(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v108 = (uint64_t)v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v101 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59FF0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for PushToken();
  MEMORY[0x1F4188790](v122);
  uint64_t v120 = (uint64_t)v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v115 = (uint64_t)v101 - v15;
  uint64_t v121 = *(void *)(a1 + 16);
  if (!v121) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v104 = v14;
  uint64_t v119 = a1 + 32;
  uint64_t v118 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v114 = v13;
  char v117 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v109 = a1;
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  unint64_t v17 = MEMORY[0x1E4FBC860];
  unint64_t v103 = "controlIdentity: ";
  unint64_t v105 = 0x80000001DA99DCD0;
  long long v106 = xmmword_1DA993170;
  unint64_t v107 = v6;
  unint64_t v116 = v9;
  do
  {
    uint64_t v18 = *(void *)(v119 + 8 * v16);
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1DA98CA38();
    uint64_t v20 = v18;
    uint64_t v22 = v21;
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v126 = v20;
    if (!v23) {
      goto LABEL_14;
    }
    uint64_t v24 = v19;
    unint64_t v124 = v17;
    uint64_t v125 = v16;
    uint64_t v25 = (unsigned __int8 *)(v20 + 64);
    uint64_t v123 = (char *)(v20 + 64);
    uint64_t v132 = v23;
    uint64_t v26 = v23;
    while (1)
    {
      uint64_t v27 = *((void *)v25 - 2);
      unint64_t v28 = *((void *)v25 - 1);
      uint64_t v29 = *v25;
      BOOL v30 = *((void *)v25 - 4) == v24 && *((void *)v25 - 3) == v22;
      if (v30 || (sub_1DA98CE58() & 1) != 0) {
        break;
      }
      v25 += 40;
      if (!--v26) {
        goto LABEL_33;
      }
    }
    swift_bridgeObjectRetain();
    sub_1DA7A1AA8(v27, v28, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v125;
    switch(v29)
    {
      case 1:
        uint64_t v131 = &off_1F34D99D0;
        uint64_t v31 = MEMORY[0x1E4FBB3D0];
        goto LABEL_18;
      case 2:
        uint64_t v130 = MEMORY[0x1E4FBB1A0];
        uint64_t v131 = &off_1F34D99C8;
        *(void *)&long long v129 = v27;
        *((void *)&v129 + 1) = v28;
        swift_bridgeObjectRetain();
        break;
      case 3:
        uint64_t v130 = MEMORY[0x1E4F277C0];
        uint64_t v131 = &off_1F34D5038;
        *(void *)&long long v129 = v27;
        *((void *)&v129 + 1) = v28;
        sub_1DA79ED98(v27, v28);
        break;
      case 4:
        id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
        uint64_t v130 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
        uint64_t v131 = &off_1F34D9D00;
        *(void *)&long long v129 = v32;
        break;
      default:
        uint64_t v131 = &off_1F34D9D78;
        uint64_t v31 = MEMORY[0x1E4FBC1C8];
LABEL_18:
        uint64_t v130 = v31;
        *(void *)&long long v129 = v27;
        break;
    }
    uint64_t v9 = v116;
    unint64_t v17 = v124;
    sub_1DA7A19A4(&v129, (uint64_t)v128);
    uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      long long v127 = 0uLL;
      sub_1DA79EB2C(v27, v28, v29);
      goto LABEL_36;
    }
    uint64_t v33 = *((void *)&v127 + 1);
    uint64_t v111 = v127;
    sub_1DA79EB2C(v27, v28, v29);
    uint64_t v112 = v33;
    if (!v33) {
      goto LABEL_36;
    }
    uint64_t v34 = sub_1DA98CA38();
    uint64_t v36 = v35;
    uint64_t v37 = 0;
    uint64_t v38 = v123;
    while (1)
    {
      uint64_t v39 = v37 + 1;
      if (__OFADD__(v37, 1))
      {
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
        goto LABEL_93;
      }
      uint64_t v41 = *((void *)v38 - 2);
      unint64_t v40 = *((void *)v38 - 1);
      uint64_t v42 = *v38;
      BOOL v43 = *((void *)v38 - 4) == v34 && *((void *)v38 - 3) == v36;
      if (v43 || (sub_1DA98CE58() & 1) != 0) {
        break;
      }
      v38 += 40;
      ++v37;
      if (v39 == v132) {
        goto LABEL_32;
      }
    }
    swift_bridgeObjectRetain();
    sub_1DA7A1AA8(v41, v40, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v116;
    unint64_t v17 = v124;
    uint64_t v16 = v125;
    switch(v42)
    {
      case 1:
        uint64_t v131 = &off_1F34D99D0;
        uint64_t v50 = MEMORY[0x1E4FBB3D0];
        goto LABEL_46;
      case 2:
        uint64_t v130 = MEMORY[0x1E4FBB1A0];
        uint64_t v131 = &off_1F34D99C8;
        *(void *)&long long v129 = v41;
        *((void *)&v129 + 1) = v40;
        swift_bridgeObjectRetain();
        break;
      case 3:
        uint64_t v130 = MEMORY[0x1E4F277C0];
        uint64_t v131 = &off_1F34D5038;
        *(void *)&long long v129 = v41;
        *((void *)&v129 + 1) = v40;
        sub_1DA79ED98(v41, v40);
        break;
      case 4:
        id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
        uint64_t v130 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
        uint64_t v131 = &off_1F34D9D00;
        *(void *)&long long v129 = v51;
        break;
      default:
        uint64_t v131 = &off_1F34D9D78;
        uint64_t v50 = MEMORY[0x1E4FBC1C8];
LABEL_46:
        uint64_t v130 = v50;
        *(void *)&long long v129 = v41;
        break;
    }
    sub_1DA7A19A4(&v129, (uint64_t)v128);
    if ((swift_dynamicCast() & 1) == 0)
    {
      long long v127 = 0uLL;
      sub_1DA79EB2C(v41, v40, v42);
      goto LABEL_14;
    }
    long long v52 = v127;
    sub_1DA79EB2C(v41, v40, v42);
    uint64_t v110 = *((void *)&v52 + 1);
    if (!*((void *)&v52 + 1)) {
      goto LABEL_14;
    }
    uint64_t v102 = v52;
    uint64_t v53 = sub_1DA98CA38();
    uint64_t v55 = v54;
    uint64_t v56 = 0;
    uint64_t v57 = v123;
    uint64_t v58 = v54;
    while (1)
    {
      uint64_t v59 = v56 + 1;
      if (__OFADD__(v56, 1)) {
        goto LABEL_91;
      }
      uint64_t v60 = *((void *)v57 - 2);
      unint64_t v61 = *((void *)v57 - 1);
      char v62 = *v57;
      BOOL v63 = *((void *)v57 - 4) == v53 && *((void *)v57 - 3) == v55;
      if (v63 || (sub_1DA98CE58() & 1) != 0) {
        break;
      }
      v57 += 40;
      ++v56;
      uint64_t v55 = v58;
      if (v59 == v132)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
    swift_bridgeObjectRetain();
    sub_1DA7A1AA8(v60, v61, v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v64 = sub_1DA8F6590(v60, v61, v62);
    uint64_t v66 = v65;
    sub_1DA79EB2C(v60, v61, v62);
    if (!v66)
    {
LABEL_32:
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      uint64_t v44 = 1;
      uint64_t v9 = v116;
LABEL_34:
      unint64_t v17 = v124;
      uint64_t v16 = v125;
      goto LABEL_37;
    }
    v101[0] = v64;
    v101[1] = v66;
    uint64_t v67 = sub_1DA98CA38();
    uint64_t v69 = v68;
    uint64_t v70 = 0;
    uint64_t v16 = v125;
    while (2)
    {
      uint64_t v71 = v70 + 1;
      if (__OFADD__(v70, 1)) {
        goto LABEL_92;
      }
      uint64_t v73 = *((void *)v123 - 2);
      unint64_t v72 = *((void *)v123 - 1);
      uint64_t v74 = *v123;
      BOOL v75 = *((void *)v123 - 4) == v67 && *((void *)v123 - 3) == v69;
      if (v75 || (sub_1DA98CE58() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v73, v72, v74);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v76 = (uint64_t)v107;
        uint64_t v9 = v116;
        unint64_t v17 = v124;
        switch(v74)
        {
          case 1:
            uint64_t v131 = &off_1F34D99D0;
            uint64_t v77 = MEMORY[0x1E4FBB3D0];
            goto LABEL_77;
          case 2:
            uint64_t v130 = MEMORY[0x1E4FBB1A0];
            uint64_t v131 = &off_1F34D99C8;
            *(void *)&long long v129 = v73;
            *((void *)&v129 + 1) = v72;
            swift_bridgeObjectRetain();
            break;
          case 3:
            uint64_t v130 = MEMORY[0x1E4F277C0];
            uint64_t v131 = &off_1F34D5038;
            *(void *)&long long v129 = v73;
            *((void *)&v129 + 1) = v72;
            sub_1DA79ED98(v73, v72);
            break;
          case 4:
            id v78 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
            uint64_t v130 = sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE58F20);
            uint64_t v131 = &off_1F34D9D00;
            *(void *)&long long v129 = v78;
            break;
          default:
            uint64_t v131 = &off_1F34D9D78;
            uint64_t v77 = MEMORY[0x1E4FBC1C8];
LABEL_77:
            uint64_t v130 = v77;
            *(void *)&long long v129 = v73;
            break;
        }
        sub_1DA7A19A4(&v129, (uint64_t)v128);
        if (swift_dynamicCast())
        {
          long long v79 = v127;
          sub_1DA79EB2C(v73, v72, v74);
          if (*((void *)&v79 + 1) >> 60 != 15)
          {
            uint64_t v123 = (char *)*((void *)&v79 + 1);
            uint64_t v132 = v79;
            uint64_t v80 = sub_1DA989638();
            uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56);
            v81(v76, 1, 1, v80);
            if (sub_1DA98C178())
            {
              uint64_t v82 = sub_1DA98C118();
              uint64_t v83 = sub_1DA80BF94(v82);
              uint64_t v85 = v84;
              uint64_t v87 = v86;
              uint64_t v89 = v88;
              swift_bridgeObjectRelease();
              uint64_t v90 = MEMORY[0x1E0177290](v83, v85, v87, v89);
              uint64_t v92 = v91;
              swift_bridgeObjectRelease();
              uint64_t v93 = v108;
              sub_1DA85A178(v76, v108);
              uint64_t v94 = v104;
              uint64_t v95 = (uint64_t)v104 + *(int *)(v122 + 32);
              v81(v95, 1, 1, v80);
              uint64_t v96 = v112;
              v94[2] = v111;
              v94[3] = v96;
              uint64_t v97 = v110;
              v94[4] = v102;
              v94[5] = v97;
              v94[6] = v90;
              v94[7] = v92;
              uint64_t v98 = v123;
              *uint64_t v94 = v132;
              v94[1] = v98;
              sub_1DA7A1AE0(v95, &qword_1EBE61CC0);
              sub_1DA8DBCFC(v93, v95);
              uint64_t v9 = v116;
              sub_1DA94D19C((uint64_t)v94, (uint64_t)v116, (uint64_t (*)(void))type metadata accessor for PushToken);
              sub_1DA7A1AE0(v76, &qword_1EBE61CC0);
              uint64_t v44 = 0;
              goto LABEL_34;
            }
LABEL_93:
            __break(1u);
            JUMPOUT(0x1DA94CEE8);
          }
        }
        else
        {
          long long v127 = v106;
          sub_1DA79EB2C(v73, v72, v74);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_14:
        swift_bridgeObjectRelease();
LABEL_36:
        uint64_t v44 = 1;
        goto LABEL_37;
      }
      v123 += 40;
      ++v70;
      if (v71 != v132) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = 1;
    uint64_t v9 = v116;
    unint64_t v17 = v124;
LABEL_37:
    uint64_t v45 = v122;
    (*v118)(v9, v44, 1, v122);
    swift_bridgeObjectRelease();
    if ((*v117)(v9, 1, v45) == 1)
    {
      sub_1DA7A1AE0((uint64_t)v9, &qword_1EBE59FF0);
    }
    else
    {
      uint64_t v46 = v115;
      sub_1DA94D19C((uint64_t)v9, v115, (uint64_t (*)(void))type metadata accessor for PushToken);
      sub_1DA94D19C(v46, v120, (uint64_t (*)(void))type metadata accessor for PushToken);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_1DA7CB414(0, *(void *)(v17 + 16) + 1, 1, v17);
      }
      unint64_t v48 = *(void *)(v17 + 16);
      unint64_t v47 = *(void *)(v17 + 24);
      uint64_t v49 = v114;
      if (v48 >= v47 >> 1)
      {
        uint64_t v99 = sub_1DA7CB414(v47 > 1, v48 + 1, 1, v17);
        uint64_t v49 = v114;
        unint64_t v17 = v99;
      }
      *(void *)(v17 + 16) = v48 + 1;
      sub_1DA94D19C(v120, v17+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v48, (uint64_t (*)(void))type metadata accessor for PushToken);
    }
    ++v16;
  }
  while (v16 != v121);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t type metadata accessor for ChronoMetadataStore.PushSubscriptionStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.PushSubscriptionStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.PushSubscriptionStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.PushSubscriptionStore.pushSubscriptions()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutablePushSubcriptionStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.MutablePushSubcriptionStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutablePushSubcriptionStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePushSubcriptionStore.update(subscription:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePushSubcriptionStore.remove(subscriptionIdentifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t type metadata accessor for ChronoMetadataStore.PushTokenStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.PushTokenStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.PushTokenStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.PushTokenStore.pushTokens()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutablePushTokenStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.MutablePushTokenStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutablePushTokenStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePushTokenStore.update(token:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePushTokenStore.remove(subscriptionIdentifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePushTokenStore.remove(environmentName:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_1DA94D19C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA94D204(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Budget();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DuetWidgetViewEntry.identity.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v4 = (void *)v1[4];
  uint64_t v3 = v1[5];
  uint64_t v5 = v1[6];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  id v6 = v4;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA94D2C4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v29 - v9;
  BSDispatchQueueAssertMain();
  sub_1DA989628();
  uint64_t v39 = v0;
  uint64_t v11 = v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
  swift_beginAccess();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v7, v11, v4);
  char v13 = sub_1DA989578();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v5 + 8);
  v38(v7, v4);
  if (v13)
  {
    v12(v3, (uint64_t)v10, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    uint64_t v14 = v39 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
    swift_beginAccess();
    sub_1DA85A1E0((uint64_t)v3, v14);
    swift_endAccess();
    return ((uint64_t (*)(char *, uint64_t))v38)(v10, v4);
  }
  else
  {
    uint64_t v37 = v12;
    if (qword_1EBE59698 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1DA989F38();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBE6F188);
    swift_retain();
    unint64_t v17 = sub_1DA989F18();
    os_log_type_t v18 = sub_1DA98C508();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v36 = v17;
      uint64_t v20 = swift_slowAlloc();
      int v33 = v19;
      uint64_t v21 = (uint8_t *)v20;
      uint64_t v34 = swift_slowAlloc();
      v41[0] = v34;
      uint64_t v35 = v3;
      uint64_t v22 = v39;
      id v32 = v21;
      *(_DWORD *)uint64_t v21 = 136446210;
      unint64_t v23 = *(void *)(v22 + 48);
      uint64_t v30 = *(void *)(v22 + 40);
      uint64_t v31 = v21 + 4;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1DA8C5E00(v30, v23, v41);
      uint64_t v3 = v35;
      sub_1DA98C858();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v24 = v32;
      _os_log_impl(&dword_1DA795000, v36, (os_log_type_t)v33, "End view date < start view date for: %{public}s", v32, 0xCu);
      uint64_t v25 = v34;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v25, -1, -1);
      MEMORY[0x1E0178DA0](v24, -1, -1);
    }
    else
    {

      swift_release();
    }
    v37(v7, v11, v4);
    sub_1DA989558();
    uint64_t v26 = v7;
    uint64_t v27 = (uint64_t (*)(char *, uint64_t))v38;
    v38(v26, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    uint64_t v28 = v39 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
    swift_beginAccess();
    sub_1DA85A1E0((uint64_t)v3, v28);
    swift_endAccess();
    return v27(v10, v4);
  }
}

uint64_t sub_1DA94D728()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1DA989638();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void **)(v0 + 32);
  swift_bridgeObjectRetain();
  id v10 = v9;
  swift_bridgeObjectRetain_n();
  sub_1DA98C108();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v11 = v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
  sub_1DA950E18(&qword_1EBE63390, MEMORY[0x1E4F27928]);
  sub_1DA98BFB8();
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
  v12(v8, v5);
  sub_1DA98BFB8();
  uint64_t v13 = v1 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
  swift_beginAccess();
  sub_1DA85A178(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_1DA98CF38();
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
  sub_1DA98CF38();
  sub_1DA98BFB8();
  return ((uint64_t (*)(unsigned char *, uint64_t))v12)(v8, v5);
}

uint64_t DuetWidgetViewEntry.deinit()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v2 = v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
  uint64_t v3 = sub_1DA989638();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_staleContentDate, v3);
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate, &qword_1EBE61CC0);
  return v0;
}

uint64_t DuetWidgetViewEntry.__deallocating_deinit()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v2 = v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
  uint64_t v3 = sub_1DA989638();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_staleContentDate, v3);
  sub_1DA7A1AE0(v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate, &qword_1EBE61CC0);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA94DBC4()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA94DC04()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA94DC48()
{
  return sub_1DA94D728();
}

uint64_t sub_1DA94DC6C()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA94DCAC(uint64_t *a1, uint64_t *a2)
{
  return _s9ChronoKit19DuetWidgetViewEntryC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1DA94DCB8@<X0>(char *a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  BOOL v63 = a2;
  unint64_t v61 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA989638();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v58 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v59 = (char *)&v55 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v55 - v13;
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v55 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v55 - v19;
  uint64_t v21 = &a1[OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate];
  swift_beginAccess();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v64 = v20;
  uint64_t v57 = v21;
  v22(v20, v21, v7);
  uint64_t v23 = (uint64_t)&a1[OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate];
  swift_beginAccess();
  sub_1DA85A178(v23, (uint64_t)v6);
  uint64_t v24 = v63;
  char v62 = v22;
  BOOL v63 = (char *)(v8 + 16);
  v22(v14, v24, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v25(v17, v14, v7);
    sub_1DA7A1AE0((uint64_t)v6, &qword_1EBE61CC0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v25(v17, v6, v7);
  }
  sub_1DA950E18((unint64_t *)&qword_1EBE61CA8, MEMORY[0x1E4F27928]);
  uint64_t v26 = v64;
  if (sub_1DA98BFE8()) {
    uint64_t v27 = v17;
  }
  else {
    uint64_t v27 = v26;
  }
  uint64_t v28 = v59;
  v62(v59, v27, v7);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v8 + 8);
  v56(v17, v7);
  uint64_t v60 = v8 + 8;
  v25(v17, v28, v7);
  uint64_t v59 = a1;
  uint64_t v55 = (void *)*((void *)a1 + 4);
  uint64_t v29 = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v30 = objc_msgSend(v29, sel_extensionBundleIdentifier);
  sub_1DA98C038();
  uint64_t v31 = v17;

  id v32 = objc_allocWithZone(MEMORY[0x1E4F5FA80]);
  int v33 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  uint64_t v35 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  uint64_t v36 = (void *)sub_1DA989568();
  uint64_t v37 = v31;
  uint64_t v38 = (void *)sub_1DA989568();
  uint64_t v39 = v32;
  uint64_t v40 = v55;
  id v41 = objc_msgSend(v39, sel_initWithViewID_budgetID_extensionBundleID_from_to_, v33, v34, v35, v36, v38);

  id v42 = objc_msgSend(v40, sel_container);
  if (v42)
  {
    BOOL v43 = v42;
    id v44 = objc_msgSend(v42, sel_isStack);
  }
  else
  {
    id v44 = 0;
  }
  objc_msgSend(v41, sel_setInStack_, v44);
  uint64_t v45 = v58;
  v62(v58, v57, v7);
  sub_1DA989548();
  double v47 = v46;
  unint64_t v48 = v56;
  v56(v45, v7);
  objc_msgSend(v41, sel_setTimeUntilContentExpiration_, v47);
  id v49 = objc_msgSend(v40, sel_container);
  if (v49)
  {
    uint64_t v50 = v49;
    if (objc_msgSend(v49, sel_location) == (id)2) {
      id v51 = (id)*MEMORY[0x1E4F5FB70];
    }
    else {
      id v51 = objc_msgSend(v50, sel_page);
    }
    objc_msgSend(v41, sel_setPageID_, v51);
  }
  uint64_t v52 = sub_1DA7A1A08(0, &qword_1EBE596C0);
  uint64_t v53 = v61;
  void v61[3] = v52;
  *uint64_t v53 = v41;
  v48(v37, v7);
  return ((uint64_t (*)(char *, uint64_t))v48)(v64, v7);
}

void sub_1DA94E2A8(uint64_t a1)
{
  if (sub_1DA85BE78(a1))
  {
    id v1 = objc_msgSend(self, sel_sharedScheduler);
    sub_1DA7A1A08(0, &qword_1EBE596C0);
    id v2 = (id)sub_1DA98C268();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_recordWidgetViews_, v2);
  }
}

uint64_t sub_1DA94E368()
{
  uint64_t v11 = type metadata accessor for _DuetWidgetViewProvider();
  uint64_t v12 = &off_1F34D7BC8;
  v10[0] = swift_allocObject();
  type metadata accessor for DuetWidgetViewRecorder();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  double v2 = MEMORY[0x1F4188790](v1);
  uint64_t v4 = (void *)((char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v5 + 16))(v4, v2);
  uint64_t v6 = *v4;
  swift_retain();
  uint64_t v7 = sub_1DA950518(v6, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  uint64_t result = swift_release();
  qword_1EBE59D00 = v7;
  return result;
}

uint64_t static DuetWidgetViewRecorder.shared.getter()
{
  if (qword_1EBE59D08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static DuetWidgetViewRecorder.shared.setter(uint64_t a1)
{
  if (qword_1EBE59D08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EBE59D00 = a1;
  return swift_release();
}

uint64_t (*static DuetWidgetViewRecorder.shared.modify())()
{
  if (qword_1EBE59D08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

id *DuetWidgetViewRecorder.deinit()
{
  id v1 = v0[11];
  if (v1) {
    objc_msgSend(v1, sel_invalidate);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t DuetWidgetViewRecorder.__deallocating_deinit()
{
  id v1 = v0[11];
  if (v1) {
    objc_msgSend(v1, sel_invalidate);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void *sub_1DA94E6F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1DA989638();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = (void *)a1[2];
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  BSDispatchQueueAssertMain();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  type metadata accessor for DuetWidgetViewEntry();
  uint64_t v15 = (void *)swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))((uint64_t)v15 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate, 1, 1, v6);
  void v15[2] = v11;
  v15[3] = v10;
  v15[4] = v12;
  v15[5] = v13;
  void v15[6] = v14;
  swift_bridgeObjectRetain();
  id v16 = v12;
  swift_bridgeObjectRetain();
  sub_1DA989628();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v15 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_staleContentDate, v9, v6);
  type metadata accessor for DuetWidgetViewRecorder.Record();
  swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_beginAccess();
  uint64_t v17 = swift_retain();
  MEMORY[0x1E0177400](v17);
  if (*(void *)((*(void *)(v3 + 72) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v3 + 72) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1DA98C2D8();
  sub_1DA98C308();
  sub_1DA98C2A8();
  swift_endAccess();
  if (!*(void *)(v3 + 88)) {
    sub_1DA950210();
  }
  swift_release();
  return v15;
}

void sub_1DA94E938(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssertMain();
  uint64_t v7 = a1 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
  swift_beginAccess();
  sub_1DA85A178(v7, (uint64_t)v6);
  uint64_t v8 = sub_1DA989638();
  LODWORD(v7) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8);
  sub_1DA7A1AE0((uint64_t)v6, &qword_1EBE61CC0);
  if (v7 != 1) {
    return;
  }
  sub_1DA94D2C4();
  uint64_t v9 = (void *)(v1 + 80);
  swift_beginAccess();
  uint64_t v10 = swift_retain();
  MEMORY[0x1E0177400](v10);
  if (*(void *)((*(void *)(v1 + 80) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 80) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1DA98C2D8();
  sub_1DA98C308();
  sub_1DA98C2A8();
  swift_endAccess();
  if (qword_1EBE59698 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1DA989F38();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EBE6F188);
  swift_retain();
  uint64_t v12 = sub_1DA989F18();
  os_log_type_t v13 = sub_1DA98C548();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v22[0] = v2;
    uint64_t v16 = v15;
    v23[0] = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    uint64_t v18 = *(void *)(a1 + 40);
    unint64_t v17 = *(void *)(a1 + 48);
    swift_bridgeObjectRetain();
    v22[1] = sub_1DA8C5E00(v18, v17, v23);
    sub_1DA98C858();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v12, v13, "Recorded duet widget view for: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v16;
    uint64_t v20 = v22[0];
    MEMORY[0x1E0178DA0](v19, -1, -1);
    MEMORY[0x1E0178DA0](v14, -1, -1);

    if (!*(void *)(v20 + 88)) {
      goto LABEL_10;
    }
  }
  else
  {

    swift_release();
    if (!*(void *)(v2 + 88)) {
LABEL_10:
    }
      sub_1DA950210();
  }
  if (*v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1DA98CBD8();
    swift_bridgeObjectRelease();
    if (v21 < 24) {
      return;
    }
  }
  else if (*(uint64_t *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) < 24)
  {
    return;
  }
  sub_1DA94ECC4(0xD000000000000012, 0x80000001DA9A4760);
}

uint64_t sub_1DA94ECC4(uint64_t a1, unint64_t a2)
{
  unint64_t v70 = a2;
  uint64_t v65 = a1;
  uint64_t v3 = sub_1DA98B438();
  uint64_t v69 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DA98B4A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1DA98B448();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v66 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v11 - 8);
  os_log_type_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1DA989638();
  uint64_t v71 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v74 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  long long v79 = (char *)&v59 - v16;
  BSDispatchQueueAssertMain();
  objc_msgSend(*(id *)(v2 + 88), sel_invalidate);
  unint64_t v17 = *(void **)(v2 + 88);
  *(void *)(v2 + 88) = 0;

  uint64_t v18 = (uint64_t *)(v2 + 72);
  uint64_t result = swift_beginAccess();
  uint64_t v77 = (void *)v2;
  unint64_t v20 = *(void *)(v2 + 72);
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_1DA98CBD8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v57) {
      return result;
    }
  }
  else if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  unint64_t v61 = v9;
  uint64_t v62 = v7;
  BOOL v63 = v5;
  uint64_t v64 = v6;
  uint64_t v89 = MEMORY[0x1E4FBC860];
  uint64_t v90 = (void *)MEMORY[0x1E4FBC860];
  sub_1DA989628();
  uint64_t v21 = *v18;
  if ((unint64_t)*v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DA98CBD8();
    uint64_t v22 = result;
  }
  else
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v23 = v75;
  if (!v22)
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x1E4FBC860];
LABEL_28:
    uint64_t v36 = v77;
    v77[9] = v35;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v36[10] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    unint64_t v37 = v36[9];
    uint64_t v38 = v64;
    unint64_t v39 = v70;
    if (v37 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_1DA98CBD8();
      swift_bridgeObjectRelease();
      if (!v58) {
        goto LABEL_31;
      }
    }
    else if (!*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_31:
      if (qword_1EBE59698 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1DA989F38();
      __swift_project_value_buffer(v40, (uint64_t)qword_1EBE6F188);
      id v41 = v90;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v42 = sub_1DA989F18();
      os_log_type_t v43 = sub_1DA98C548();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        *(void *)&long long aBlock = v45;
        *(_DWORD *)uint64_t v44 = 134349314;
        uint64_t v46 = v41[2];
        swift_bridgeObjectRelease();
        uint64_t v88 = v46;
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v88 = sub_1DA8C5E00(v65, v39, (uint64_t *)&aBlock);
        sub_1DA98C858();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DA795000, v42, v43, "View recorder flushing %{public}ld entries for reason: %s", (uint8_t *)v44, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v45, -1, -1);
        MEMORY[0x1E0178DA0](v44, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      if (v90[2])
      {
        double v47 = v77;
        sub_1DA94F8EC();
        sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE65CB0);
        uint64_t v48 = v67;
        id v49 = v66;
        uint64_t v50 = v68;
        (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, *MEMORY[0x1E4FBCB48], v68);
        id v51 = (void *)sub_1DA98C648();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
        uint64_t v52 = v90;
        uint64_t v53 = swift_allocObject();
        *(void *)(v53 + 16) = v47;
        *(void *)(v53 + 24) = v52;
        uint64_t v86 = sub_1DA950E08;
        uint64_t v87 = v53;
        *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
        *((void *)&aBlock + 1) = 1107296256;
        uint64_t v84 = sub_1DA7A6EE0;
        uint64_t v85 = &block_descriptor_53_0;
        uint64_t v54 = _Block_copy(&aBlock);
        swift_retain();
        uint64_t v55 = v61;
        _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
        uint64_t v82 = MEMORY[0x1E4FBC860];
        sub_1DA950E18((unint64_t *)&qword_1EBE658C0, MEMORY[0x1E4FBCB00]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE65C60);
        sub_1DA7ABDB4();
        uint64_t v56 = v63;
        sub_1DA98C918();
        MEMORY[0x1E01777D0](0, v55, v56, v54);
        _Block_release(v54);

        (*(void (**)(char *, uint64_t))(v69 + 8))(v56, v3);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v55, v38);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v79, v75);
        return swift_release();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v71 + 8))(v79, v75);
        return swift_bridgeObjectRelease();
      }
    }
    sub_1DA950210();
    goto LABEL_31;
  }
  if (v22 >= 1)
  {
    uint64_t v60 = v3;
    uint64_t v24 = 0;
    uint64_t v76 = v77 + 4;
    unint64_t v78 = v21 & 0xC000000000000001;
    uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
    uint64_t v73 = (void (**)(char *, char *, uint64_t))(v71 + 16);
    unint64_t v72 = (void (**)(char *, char *, uint64_t))(v71 + 40);
    while (1)
    {
      if (v78) {
        MEMORY[0x1E0177C00](v24, v21);
      }
      else {
        swift_retain();
      }
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v27 = (char *)Strong;
        __swift_project_boxed_opaque_existential_0(v76, v77[7]);
        sub_1DA94DCB8(v27, v79, &v80);
        if (v81)
        {
          sub_1DA7A1930(&v80, &aBlock);
          sub_1DA800210((uint64_t)&aBlock, (uint64_t)&v80);
          uint64_t v28 = v90;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v28 = sub_1DA7CB448(0, v28[2] + 1, 1, v28);
          }
          unint64_t v30 = v28[2];
          unint64_t v29 = v28[3];
          if (v30 >= v29 >> 1) {
            uint64_t v28 = sub_1DA7CB448((void *)(v29 > 1), v30 + 1, 1, v28);
          }
          v28[2] = v30 + 1;
          sub_1DA7A1930(&v80, &v28[4 * v30 + 4]);
          uint64_t v90 = v28;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
          uint64_t v23 = v75;
        }
        else
        {
          sub_1DA7A1AE0((uint64_t)&v80, &qword_1EBE66B48);
        }
        uint64_t v31 = (uint64_t)&v27[OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate];
        swift_beginAccess();
        sub_1DA85A178(v31, (uint64_t)v13);
        if ((*v25)(v13, 1, v23) != 1)
        {
          swift_release();
          swift_release();
          sub_1DA7A1AE0((uint64_t)v13, &qword_1EBE61CC0);
          goto LABEL_9;
        }
        sub_1DA7A1AE0((uint64_t)v13, &qword_1EBE61CC0);
        id v32 = v74;
        (*v73)(v74, v79, v23);
        int v33 = &v27[OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate];
        swift_beginAccess();
        (*v72)(v33, v32, v23);
        swift_endAccess();
        uint64_t v34 = swift_retain();
        MEMORY[0x1E0177400](v34);
        if (*(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DA98C2D8();
        }
        sub_1DA98C308();
        sub_1DA98C2A8();
        swift_release();
      }
      swift_release();
LABEL_9:
      if (v22 == ++v24)
      {
        swift_bridgeObjectRelease();
        uint64_t v35 = v89;
        uint64_t v3 = v60;
        goto LABEL_28;
      }
    }
  }
  __break(1u);
  return result;
}

void sub_1DA94F8A0(uint64_t a1, uint64_t a2)
{
}

void sub_1DA94F8EC()
{
  uint64_t v1 = v0;
  sub_1DA94FD90();
  if (*(void *)(v0 + 104))
  {
    objc_msgSend(*(id *)(v0 + 96), sel_invalidate);
    uint64_t v2 = *(void **)(v0 + 96);
    *(void *)(v0 + 96) = 0;

    sub_1DA98CA18();
    swift_bridgeObjectRelease();
    uint64_t v12 = 0x705B746567726154;
    unint64_t v13 = 0xEB000000003D6469;
    id v3 = *(id *)(v0 + 112);
    id v4 = objc_msgSend(v3, sel_description, 0x705B746567726154, 0xEB000000003D6469);
    sub_1DA98C038();

    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    id v5 = objc_allocWithZone(MEMORY[0x1E4F4F6F0]);
    uint64_t v6 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v5, sel_initWithIdentifier_, v6);

    sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE65CB0);
    uint64_t v8 = (void *)sub_1DA98C608();
    uint64_t v9 = swift_allocObject();
    swift_weakInit();
    uint64_t v16 = sub_1DA950DA8;
    uint64_t v17 = v9;
    uint64_t v12 = MEMORY[0x1E4F143A8];
    unint64_t v13 = 1107296256;
    uint64_t v14 = sub_1DA7C2930;
    uint64_t v15 = &block_descriptor_17;
    uint64_t v10 = _Block_copy(&v12);
    swift_release();
    objc_msgSend(v7, sel_scheduleWithFireInterval_leewayInterval_queue_handler_, v8, v10, 10.0, 1.0);
    _Block_release(v10);

    uint64_t v11 = *(void **)(v1 + 96);
    *(void *)(v1 + 96) = v7;
  }
}

void sub_1DA94FB2C(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    if (qword_1EBE59698 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1DA989F38();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBE6F188);
    swift_retain_n();
    id v5 = sub_1DA989F18();
    os_log_type_t v6 = sub_1DA98C548();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)id v7 = 138543362;
      uint64_t v16 = *(void **)(v3 + 112);
      id v9 = v16;
      sub_1DA98C858();
      *uint64_t v8 = v16;
      swift_release_n();
      _os_log_impl(&dword_1DA795000, v5, v6, "Flush timer for target=%{public}@ expired.", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v8, -1, -1);
      MEMORY[0x1E0178DA0](v7, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    objc_msgSend(a1, sel_invalidate, v16);
    uint64_t v10 = *(void **)(v3 + 96);
    if (v10
      && (sub_1DA7A1A08(0, &qword_1EBE596C8),
          id v11 = a1,
          id v12 = v10,
          char v13 = sub_1DA98C7A8(),
          v11,
          v12,
          (v13 & 1) != 0))
    {
      objc_msgSend(*(id *)(v3 + 104), sel_invalidate);
      uint64_t v14 = *(void **)(v3 + 104);
      *(void *)(v3 + 104) = 0;

      uint64_t v15 = *(void **)(v3 + 96);
      *(void *)(v3 + 96) = 0;
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

void sub_1DA94FD90()
{
  v32[1] = *(id *)MEMORY[0x1E4F143B8];
  if (!*(void *)(v0 + 104))
  {
    uint64_t v1 = v0;
    uint64_t v2 = (void *)sub_1DA98C008();
    uint64_t v3 = (void *)sub_1DA98C008();
    id v4 = objc_msgSend(self, sel_attributeWithDomain_name_, v2, v3);

    id v5 = *(void **)(v1 + 112);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE64040);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1DA99A3F0;
    *(void *)(v6 + 32) = v4;
    sub_1DA98C2A8();
    id v7 = objc_allocWithZone(MEMORY[0x1E4F96318]);
    id v8 = v5;
    id v9 = v4;
    uint64_t v10 = (void *)sub_1DA98C008();
    sub_1DA7A1A08(0, &qword_1EBE59D88);
    id v11 = (void *)sub_1DA98C268();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v7, sel_initWithExplanation_target_attributes_, v10, v8, v11);

    v32[0] = 0;
    unsigned int v13 = objc_msgSend(v12, sel_acquireWithError_, v32);
    id v14 = v32[0];
    if (v13)
    {
      uint64_t v15 = *(void **)(v1 + 104);
      *(void *)(v1 + 104) = v12;
      id v16 = v14;
      id v17 = v12;

      if (qword_1EBE59698 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1DA989F38();
      __swift_project_value_buffer(v18, (uint64_t)qword_1EBE6F188);
      uint64_t v19 = sub_1DA989F18();
      os_log_type_t v20 = sub_1DA98C548();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl(&dword_1DA795000, v19, v20, "Acquired runtime assertion for DuetWidgetViewRecorder.flushIfNecessary", v21, 2u);
        MEMORY[0x1E0178DA0](v21, -1, -1);

LABEL_14:
        return;
      }
    }
    else
    {
      id v22 = v32[0];
      uint64_t v23 = (void *)sub_1DA9892D8();

      swift_willThrow();
      if (qword_1EBE59698 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_1DA989F38();
      __swift_project_value_buffer(v24, (uint64_t)qword_1EBE6F188);
      id v25 = v23;
      id v26 = v23;
      uint64_t v19 = sub_1DA989F18();
      os_log_type_t v27 = sub_1DA98C528();
      if (!os_log_type_enabled(v19, v27))
      {

        goto LABEL_14;
      }
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      unint64_t v29 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 138543362;
      id v30 = v23;
      uint64_t v31 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v32[0] = v31;
      sub_1DA98C858();
      *unint64_t v29 = v31;

      _os_log_impl(&dword_1DA795000, v19, v27, "Unable to acquire runtime assertion for WidgetArchiver.unarchive - error: %{public}@", v28, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v29, -1, -1);
      MEMORY[0x1E0178DA0](v28, -1, -1);
    }
    uint64_t v19 = v9;
    goto LABEL_14;
  }
}

void sub_1DA950210()
{
  uint64_t v1 = v0;
  BSDispatchQueueAssertMain();
  objc_msgSend(*(id *)(v0 + 88), sel_invalidate);
  id v2 = objc_allocWithZone(MEMORY[0x1E4F4F6F0]);
  uint64_t v3 = (void *)sub_1DA98C008();
  id v4 = objc_msgSend(v2, sel_initWithIdentifier_, v3);

  id v5 = *(void **)(v1 + 88);
  *(void *)(v1 + 88) = v4;

  uint64_t v6 = *(void **)(v1 + 88);
  if (v6)
  {
    double v7 = *(double *)(v1 + 16);
    sub_1DA7A1A08(0, (unint64_t *)&qword_1EBE65CB0);
    id v8 = v6;
    id v9 = (void *)sub_1DA98C608();
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    v12[4] = sub_1DA950E10;
    v12[5] = v10;
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 1107296256;
    void v12[2] = sub_1DA7C2930;
    v12[3] = &block_descriptor_57;
    id v11 = _Block_copy(v12);
    swift_release();
    objc_msgSend(v8, sel_scheduleWithFireInterval_leewayInterval_queue_handler_, v9, v11, v7, 0.0);
    _Block_release(v11);
  }
}

uint64_t sub_1DA9503AC()
{
  if (qword_1EBE59698 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DA989F38();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE6F188);
  uint64_t v1 = sub_1DA989F18();
  os_log_type_t v2 = sub_1DA98C548();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1DA795000, v1, v2, "View recorder flush timer fired.", v3, 2u);
    MEMORY[0x1E0178DA0](v3, -1, -1);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DA94ECC4(0x72656D6954, 0xE500000000000000);
    return swift_release();
  }
  return result;
}

void sub_1DA9504D0(uint64_t a1)
{
}

void *sub_1DA9504F4(uint64_t *a1, uint64_t a2)
{
  return sub_1DA94E6F8(a1, a2);
}

uint64_t sub_1DA950518(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = type metadata accessor for _DuetWidgetViewProvider();
  uint64_t v10 = &off_1F34D7BC8;
  *(void *)&long long v8 = a1;
  *(_OWORD *)(a2 + 16) = xmmword_1DA99A400;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(a2 + 72) = MEMORY[0x1E4FBC860];
  *(void *)(a2 + 80) = v4;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 88) = 0;
  id v5 = objc_msgSend(self, sel_currentProcess);
  id v6 = [v5 pid];

  *(void *)(a2 + 112) = objc_msgSend(self, sel_targetWithPid_, v6);
  sub_1DA7A19A4(&v8, a2 + 32);
  return a2;
}

uint64_t _s9ChronoKit19DuetWidgetViewEntryC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE61CC8);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61CC0);
  MEMORY[0x1F4188790](v6 - 8);
  long long v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v34 - v10;
  uint64_t v12 = sub_1DA989638();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v34 - v17;
  if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48)
    || (char v19 = 0, (sub_1DA98CE58() & 1) != 0))
  {
    uint64_t v35 = v4;
    uint64_t v36 = v11;
    uint64_t v34 = v8;
    uint64_t v20 = a1 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
    swift_beginAccess();
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v21(v18, v20, v12);
    uint64_t v22 = a2 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
    swift_beginAccess();
    v21(v15, v22, v12);
    LOBYTE(v22) = sub_1DA9895E8();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v13 + 8);
    v23(v15, v12);
    v23(v18, v12);
    if (v22 & 1) != 0 && (sub_1DA9895E8())
    {
      uint64_t v24 = a1 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
      swift_beginAccess();
      uint64_t v25 = (uint64_t)v36;
      sub_1DA85A178(v24, (uint64_t)v36);
      uint64_t v26 = a2 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
      swift_beginAccess();
      uint64_t v27 = v37;
      uint64_t v28 = v37 + *(int *)(v35 + 48);
      sub_1DA85A178(v25, v37);
      sub_1DA85A178(v26, v28);
      unint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
      if (v29(v27, 1, v12) == 1)
      {
        sub_1DA7A1AE0(v25, &qword_1EBE61CC0);
        int v30 = v29(v28, 1, v12);
        if (v30 == 1) {
          uint64_t v31 = &qword_1EBE61CC0;
        }
        else {
          uint64_t v31 = (uint64_t *)&unk_1EBE61CC8;
        }
        if (v30 == 1) {
          char v19 = -1;
        }
        else {
          char v19 = 0;
        }
      }
      else
      {
        uint64_t v32 = (uint64_t)v34;
        sub_1DA85A178(v27, (uint64_t)v34);
        if (v29(v28, 1, v12) == 1)
        {
          char v19 = 0;
          uint64_t v31 = (uint64_t *)&unk_1EBE61CC8;
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v18, v28, v12);
          sub_1DA950E18((unint64_t *)&qword_1EBE61CB0, MEMORY[0x1E4F27928]);
          char v19 = sub_1DA98BFF8();
          v23(v18, v12);
          uint64_t v31 = &qword_1EBE61CC0;
        }
        sub_1DA7A1AE0((uint64_t)v36, &qword_1EBE61CC0);
        v23((char *)v32, v12);
      }
      sub_1DA7A1AE0(v27, v31);
    }
    else
    {
      char v19 = 0;
    }
  }
  return v19 & 1;
}

uint64_t type metadata accessor for DuetWidgetViewEntry()
{
  uint64_t result = qword_1EBE596A8;
  if (!qword_1EBE596A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for DuetWidgetViewRecorder.Record()
{
  return self;
}

uint64_t sub_1DA950AE0()
{
  return sub_1DA950E18(&qword_1EA8E6A60, (void (*)(uint64_t))type metadata accessor for DuetWidgetViewEntry);
}

uint64_t sub_1DA950B28()
{
  return type metadata accessor for DuetWidgetViewEntry();
}

void sub_1DA950B30()
{
  sub_1DA989638();
  if (v0 <= 0x3F)
  {
    sub_1DA85A9C4();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for DuetWidgetViewEntry(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DuetWidgetViewEntry);
}

uint64_t dispatch thunk of DuetWidgetViewEntry.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DuetWidgetViewEntry.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t sub_1DA950C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1DA950C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for _DuetWidgetViewProvider()
{
  return self;
}

uint64_t dispatch thunk of DuetWidgetViewRecording.record(entry:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of DuetWidgetViewRecording.createEntry(identity:staleContentDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t type metadata accessor for DuetWidgetViewRecorder()
{
  return self;
}

uint64_t method lookup function for DuetWidgetViewRecorder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DuetWidgetViewRecorder);
}

uint64_t dispatch thunk of DuetWidgetViewRecorder.createEntry(identity:staleContentDate:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DuetWidgetViewRecorder.record(entry:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t sub_1DA950D70()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1DA950DA8(void *a1)
{
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t sub_1DA950DC8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1DA950E08()
{
  sub_1DA94F8A0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DA950E10()
{
  return sub_1DA9503AC();
}

uint64_t sub_1DA950E18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA950E70()
{
  uint64_t v0 = sub_1DA989F38();
  __swift_allocate_value_buffer(v0, qword_1EBE62DD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE62DD0);
  return sub_1DA989F28();
}

uint64_t KeepAliveTransaction.__allocating_init(reason:)(uint64_t a1, unint64_t a2)
{
  return KeepAliveTransaction.init(reason:)(a1, a2);
}

uint64_t KeepAliveTransaction.init(reason:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1EBE62DC0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1DA989F38();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBE62DD0);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1DA989F18();
  os_log_type_t v8 = sub_1DA98C548();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v13 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1DA8C5E00(a1, a2, &v13);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v7, v8, "Added: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v10, -1, -1);
    MEMORY[0x1E0178DA0](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1DA98C0D8();
  swift_bridgeObjectRelease();
  uint64_t v11 = os_transaction_create();
  uint64_t result = swift_release();
  if (v11)
  {
    *(void *)(v3 + 16) = v11;
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static KeepAliveTransaction.with<A>(reason:_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for KeepAliveTransaction();
  swift_initStackObject();
  swift_bridgeObjectRetain();
  uint64_t v15 = KeepAliveTransaction.init(reason:)(a1, a2);
  void v13[2] = a5;
  void v13[3] = a3;
  void v13[4] = a4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE631A8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BC0);
  sub_1DA951228((uint64_t)&v15, (uint64_t)sub_1DA9515CC, (uint64_t)v13, v10, v11, a5, MEMORY[0x1E4FBC0F0], (uint64_t)&v14);
  return swift_release();
}

uint64_t sub_1DA951228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v14(v13);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v13, a5);
  }
  return result;
}

uint64_t KeepAliveTransaction.deinit()
{
  uint64_t v1 = v0;
  if (os_transaction_get_description())
  {
    uint64_t v2 = sub_1DA98C158();
    unint64_t v4 = v3;
    if (qword_1EBE62DC0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1DA989F38();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EBE62DD0);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DA989F18();
    os_log_type_t v7 = sub_1DA98C548();
    if (!os_log_type_enabled(v6, v7))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v15 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_1DA8C5E00(v2, v4, &v15);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA795000, v6, v7, "Removed: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v9, -1, -1);
    uint64_t v10 = v8;
  }
  else
  {
    if (qword_1EBE62DC0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1DA989F38();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBE62DD0);
    uint64_t v6 = sub_1DA989F18();
    os_log_type_t v12 = sub_1DA98C548();
    if (!os_log_type_enabled(v6, v12)) {
      goto LABEL_11;
    }
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1DA795000, v6, v12, "Removed: Transaction with no description", v13, 2u);
    uint64_t v10 = v13;
  }
  MEMORY[0x1E0178DA0](v10, -1, -1);
LABEL_11:

LABEL_13:
  swift_unknownObjectRelease();
  return v1;
}

uint64_t KeepAliveTransaction.__deallocating_deinit()
{
  KeepAliveTransaction.deinit();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KeepAliveTransaction()
{
  return self;
}

uint64_t sub_1DA9515CC(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 24))();
  if (v2) {
    *a1 = v2;
  }
  return result;
}

uint64_t method lookup function for KeepAliveTransaction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for KeepAliveTransaction);
}

uint64_t dispatch thunk of KeepAliveTransaction.__allocating_init(reason:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

id sub_1DA951630(void *a1)
{
  v13[10] = *(id *)MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62BB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA990050;
  unint64_t v4 = (void *)*MEMORY[0x1E4F28370];
  *(void *)(inited + 32) = *MEMORY[0x1E4F28370];
  type metadata accessor for FileProtectionType(0);
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 40) = a1;
  id v6 = v4;
  id v7 = a1;
  sub_1DA79C6E0(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_1DA952324((unint64_t *)&unk_1EBE62AA0, type metadata accessor for FileAttributeKey);
  uint64_t v8 = (void *)sub_1DA98BE68();
  swift_bridgeObjectRelease();
  sub_1DA989458();
  uint64_t v9 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  v13[0] = 0;
  unsigned int v10 = objc_msgSend(v1, sel_setAttributes_ofItemAtPath_error_, v8, v9, v13);

  if (v10) {
    return v13[0];
  }
  id v12 = v13[0];
  sub_1DA9892D8();

  swift_willThrow();
  return (id)swift_willThrow();
}

id sub_1DA9517E0(uint64_t a1)
{
  uint64_t v2 = v1;
  v16[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1DA989478();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA989458();
  uint64_t v8 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  unsigned int v9 = objc_msgSend(v1, sel_fileExistsAtPath_, v8);

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (!v9) {
    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1DA989458();
  unsigned int v10 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  unsigned __int8 v11 = objc_msgSend(v2, sel_isDeletableFileAtPath_, v10);

  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v11)
  {
    uint64_t v13 = (void *)sub_1DA9893A8();
    v16[0] = 0;
    unsigned int v14 = objc_msgSend(v2, sel_removeItemAtURL_error_, v13, v16);

    if (v14)
    {
      return v16[0];
    }
    else
    {
      id v15 = v16[0];
      sub_1DA9892D8();

      return (id)swift_willThrow();
    }
  }
  return result;
}

void sub_1DA9519FC()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1DA9893A8();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 99, 1, v1, 0, v6);

  id v3 = v6[0];
  if (v2)
  {
    sub_1DA989438();
    id v4 = v3;
  }
  else
  {
    id v5 = v6[0];
    sub_1DA9892D8();

    swift_willThrow();
  }
}

id sub_1DA951AF0(uint64_t a1, SEL *a2)
{
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  id v4 = (void *)sub_1DA9893A8();
  v13[0] = 0;
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), *a2, v4, v13);

  id v6 = v13[0];
  if (v5)
  {
    uint64_t v7 = sub_1DA989478();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    id v9 = v6;
    v8(a1, v7);
  }
  else
  {
    id v10 = v13[0];
    sub_1DA9892D8();

    swift_willThrow();
    uint64_t v11 = sub_1DA989478();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

void sub_1DA951C48(uint64_t a1, void *a2)
{
  id v3 = v2;
  uint64_t v5 = sub_1DA9890B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA989458();
  id v9 = (void *)sub_1DA98C008();
  swift_bridgeObjectRelease();
  if (a2)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_1DA952324((unint64_t *)&unk_1EBE62AA0, type metadata accessor for FileAttributeKey);
    a2 = (void *)sub_1DA98BE68();
  }
  unsigned __int8 v10 = objc_msgSend(v3, sel_createFileAtPath_contents_attributes_, v9, 0, a2);

  if ((v10 & 1) == 0)
  {
    MEMORY[0x1E0175110]();
    uint64_t v11 = sub_1DA989F58();
    if ((v11 & 0x100000000) != 0) {
      int v12 = 45;
    }
    else {
      int v12 = v11;
    }
    void v13[3] = v12;
    sub_1DA7D2218(MEMORY[0x1E4FBC860]);
    sub_1DA952324(&qword_1EBE59120, MEMORY[0x1E4F26C30]);
    sub_1DA9892B8();
    sub_1DA9890A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_willThrow();
  }
}

void sub_1DA951E5C()
{
}

id sub_1DA951E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA951EC0(a1, a2, a3, (SEL *)&selRef_fileHandleForReadingFromURL_error_);
}

id sub_1DA951EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA951EC0(a1, a2, a3, (SEL *)&selRef_fileHandleForWritingToURL_error_);
}

id sub_1DA951EC0(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6 = sub_1DA989478();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA952730();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  return sub_1DA951AF0((uint64_t)v9, a4);
}

id sub_1DA951FB8(void *a1)
{
  return sub_1DA95236C(a1);
}

id sub_1DA951FD0(uint64_t a1)
{
  return sub_1DA9517E0(a1);
}

uint64_t sub_1DA951FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1DA952410(a1, a2, a3, a4, a5, a6, a7);
}

id sub_1DA95200C(void *a1)
{
  return sub_1DA951630(a1);
}

void sub_1DA952030(uint64_t a1, void *a2)
{
}

id sub_1DA952054()
{
  return sub_1DA952240();
}

uint64_t sub_1DA952078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1DA9520A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1DA9520C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1DA9520F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1DA952118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1DA952140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 48))(a1);
}

uint64_t sub_1DA952178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 56))();
}

uint64_t sub_1DA9521A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_1DA9521C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1DA9521F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_1DA952218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

id sub_1DA952240()
{
  uint64_t v1 = v0;
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  id v2 = (void *)sub_1DA9893A8();
  id v3 = (void *)sub_1DA9893A8();
  v6[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_moveItemAtURL_toURL_error_, v2, v3, v6);

  if (v1) {
    return v6[0];
  }
  id v5 = v6[0];
  sub_1DA9892D8();

  return (id)swift_willThrow();
}

uint64_t sub_1DA952324(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1DA95236C(void *a1)
{
  v3[1] = *(id *)MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (objc_msgSend(a1, sel_closeAndReturnError_, v3)) {
    return v3[0];
  }
  id v2 = v3[0];
  sub_1DA9892D8();

  return (id)swift_willThrow();
}

uint64_t sub_1DA952410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a4;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = a1;
  v24[1] = a6;
  v24[2] = a7;
  uint64_t v8 = sub_1DA989928();
  uint64_t v25 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v10 = (char *)v24 - v9;
  uint64_t v11 = sub_1DA98C838();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unsigned int v14 = (char *)v24 - v13;
  uint64_t v15 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v20 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)v24 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v14, v26, v11, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return sub_1DA989348();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v14, a5);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v22, a5);
    sub_1DA989908();
    swift_getWitnessTable();
    sub_1DA989328();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v22, a5);
  }
}

unint64_t sub_1DA952730()
{
  unint64_t result = qword_1EBE58ED8;
  if (!qword_1EBE58ED8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE58ED8);
  }
  return result;
}

void *ControlsCacheURLProvider.__allocating_init(subdirectory:)(uint64_t a1, uint64_t a2)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = 0x632D6F6E6F726863;
  result[5] = 0xEF736C6F72746E6FLL;
  return result;
}

void *ControlsCacheURLProvider.init(subdirectory:)(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = 0x632D6F6E6F726863;
  v2[5] = 0xEF736C6F72746E6FLL;
  return v2;
}

unint64_t sub_1DA952804(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1DA9892E8();
  uint64_t v69 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  unint64_t v70 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DA989478();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v67 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v56 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v66 = (char *)&v56 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  double v18 = MEMORY[0x1F4188790](v17);
  uint64_t v68 = (char *)&v56 - v19;
  uint64_t v71 = v7;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v20 = v7 + 16;
  uint64_t v21 = v22;
  ((void (*)(char *, uint64_t, uint64_t, double))v22)(v16, a1, v6, v18);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1DA9893B8();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void **)(a1 + *(int *)(type metadata accessor for ControlCacheKey() + 20));
  if (v23)
  {
    id v24 = v23;
    sub_1DA8EE354();
    sub_1DA9893B8();

    swift_bridgeObjectRelease();
    uint64_t v25 = v71;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
    uint64_t v27 = v68;
    v26(v68, v16, v6);
    uint64_t v28 = (uint64_t)v66;
    sub_1DA95301C(a1, (uint64_t)v66);
    unint64_t v29 = sub_1DA7CA740(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v31 = *(void *)(v29 + 16);
    unint64_t v30 = *(void *)(v29 + 24);
    if (v31 >= v30 >> 1) {
      unint64_t v29 = sub_1DA7CA740(v30 > 1, v31 + 1, 1, v29);
    }
    *(void *)(v29 + 16) = v31 + 1;
    v26((char *)(v29+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v31), (char *)v28, v6);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v6);
    return v29;
  }
  uint64_t v59 = v20;
  uint64_t v66 = v11;
  uint64_t v32 = v71;
  int v33 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
  uint64_t v34 = v68;
  uint64_t v65 = v71 + 32;
  uint64_t v64 = v33;
  v33(v68, v16, v6);
  id v35 = objc_msgSend(self, sel_defaultManager);
  uint64_t v36 = (void *)sub_1DA98C4F8();

  uint64_t v37 = v32;
  if (!v36)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v6);
    return MEMORY[0x1E4FBC860];
  }
  id v38 = v36;
  unint64_t v39 = v70;
  sub_1DA98C4E8();
  id v57 = v38;

  swift_beginAccess();
  unint64_t v40 = sub_1DA8EDFD8();
  sub_1DA98C848();
  if (v76)
  {
    id v41 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
    id v42 = (unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    unint64_t v61 = (void (**)(uint64_t, uint64_t))(v37 + 8);
    unint64_t v63 = MEMORY[0x1E4FBC860];
    uint64_t v43 = v69;
    uint64_t v58 = v21;
    uint64_t v62 = v42;
    uint64_t v60 = MEMORY[0x1E4FBC840] + 8;
    while (1)
    {
      sub_1DA7A1930(&v75, v74);
      sub_1DA800210((uint64_t)v74, (uint64_t)v73);
      int v44 = swift_dynamicCast();
      uint64_t v45 = *v41;
      if (v44)
      {
        v45(v4, 0, 1, v6);
        if ((*v42)(v4, 1, v6) != 1)
        {
          unint64_t v46 = v40;
          uint64_t v47 = (uint64_t)v66;
          v64(v66, v4, v6);
          sub_1DA989458();
          swift_bridgeObjectRetain();
          char v48 = sub_1DA98C178();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v48)
          {
            v58(v67, v47, v6);
            unint64_t v49 = v63;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v39 = v70;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              unint64_t v49 = sub_1DA7CA740(0, *(void *)(v49 + 16) + 1, 1, v49);
            }
            unint64_t v52 = *(void *)(v49 + 16);
            unint64_t v51 = *(void *)(v49 + 24);
            if (v52 >= v51 >> 1) {
              unint64_t v49 = sub_1DA7CA740(v51 > 1, v52 + 1, 1, v49);
            }
            *(void *)(v49 + 16) = v52 + 1;
            uint64_t v53 = v71;
            unint64_t v54 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
            unint64_t v63 = v49;
            v64((char *)(v49 + v54 + *(void *)(v71 + 72) * v52), v67, v6);
            (*(void (**)(char *, uint64_t))(v53 + 8))(v66, v6);
            uint64_t v43 = v69;
            unint64_t v40 = v46;
            id v42 = v62;
          }
          else
          {
            (*v61)(v47, v6);
            uint64_t v43 = v69;
            unint64_t v39 = v70;
            id v42 = v62;
          }
          goto LABEL_10;
        }
      }
      else
      {
        v45(v4, 1, 1, v6);
      }
      sub_1DA802060((uint64_t)v4);
LABEL_10:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
      sub_1DA98C848();
      if (!v76) {
        goto LABEL_22;
      }
    }
  }
  unint64_t v63 = MEMORY[0x1E4FBC860];
  uint64_t v43 = v69;
LABEL_22:
  (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v72);

  (*(void (**)(char *, uint64_t))(v71 + 8))(v68, v6);
  return v63;
}

uint64_t sub_1DA95301C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DA989478();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, a1, v4, v9);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1DA9893B8();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void **)(a1 + *(int *)(type metadata accessor for ControlCacheKey() + 20));
  if (v12)
  {
    id v13 = v12;
    sub_1DA8EE354();
    sub_1DA9893B8();

    swift_bridgeObjectRelease();
    id v24 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v24(v11, v7, v4);
    id v14 = v13;
    id v15 = objc_msgSend(v14, sel_intentReference);
    uint64_t v25 = a2;
    if (v15)
    {
      uint64_t v16 = v15;
      id v17 = objc_msgSend(v15, sel_stableHash);

      uint64_t v26 = (uint64_t)v17;
      sub_1DA98CDD8();
    }
    id v20 = objc_msgSend(v14, sel_kind);
    uint64_t v21 = sub_1DA98C038();
    uint64_t v23 = v22;

    uint64_t v26 = v21;
    uint64_t v27 = v23;
    sub_1DA98C148();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA9893C8();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1DA9893D8();
    swift_bridgeObjectRelease();

    return ((uint64_t (*)(uint64_t, char *, uint64_t))v24)(v25, v11, v4);
  }
  else
  {
    double v18 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v18(v11, v7, v4);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(a2, v11, v4);
  }
}

uint64_t ControlsCacheURLProvider.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ControlsCacheURLProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_1DA953384(uint64_t a1)
{
  return sub_1DA952804(a1);
}

uint64_t sub_1DA9533A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA95301C(a1, a2);
}

uint64_t sub_1DA9533CC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA95341C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ControlsCacheURLProvider()
{
  return self;
}

uint64_t method lookup function for ControlsCacheURLProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ControlsCacheURLProvider);
}

uint64_t dispatch thunk of ControlsCacheURLProvider.subdirectory.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.subdirectory.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.subdirectory.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.fileExtension.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.fileExtension.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.fileExtension.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.__allocating_init(subdirectory:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.urls(matching:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.url(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t static WidgetCacheKey.allWidgetsAndMetrics(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  uint64_t result = type metadata accessor for WidgetCacheKey();
  uint64_t v6 = *(int *)(result + 24);
  *(void *)(a2 + *(int *)(result + 20)) = 0;
  *(void *)(a2 + v6) = 0;
  return result;
}

uint64_t type metadata accessor for WidgetCacheKey()
{
  uint64_t result = qword_1EBE61FD0;
  if (!qword_1EBE61FD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id static WidgetCacheKey.allMetrics(of:for:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a3, a2, v5);
  uint64_t v6 = type metadata accessor for WidgetCacheKey();
  uint64_t v7 = *(int *)(v6 + 24);
  *(void *)(a3 + *(int *)(v6 + 20)) = a1;
  *(void *)(a3 + v7) = 0;

  return a1;
}

uint64_t WidgetCacheKey.init(baseURL:entryKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void **)(a2 + 8);
  id v7 = *(id *)a2;
  id v8 = v6;
  sub_1DA953C2C(a2, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
  uint64_t v9 = type metadata accessor for WidgetCacheKey();
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = *(int *)(v9 + 24);
  uint64_t v12 = sub_1DA989478();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a3, a1, v12);
  *(void *)(a3 + v10) = v7;
  *(void *)(a3 + v11) = v8;
  return result;
}

uint64_t WidgetCacheKey.init(baseURL:widget:metrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for WidgetCacheKey();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = *(int *)(v8 + 24);
  uint64_t v11 = sub_1DA989478();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(a4, a1, v11);
  *(void *)(a4 + v9) = a2;
  *(void *)(a4 + v10) = a3;
  return result;
}

void *WidgetCacheKey.widget.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for WidgetCacheKey() + 20));
  id v2 = v1;
  return v1;
}

void *WidgetCacheKey.metrics.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for WidgetCacheKey() + 24));
  id v2 = v1;
  return v1;
}

void *WidgetCacheKey.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WidgetCacheKey();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = *(void *)(v1 + v6);
  sub_1DA7FBA78(v1, (uint64_t)v4);
  if (v7)
  {
    uint64_t v8 = *(void *)&v4[*(int *)(v2 + 24)];
    sub_1DA953C2C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WidgetCacheKey);
    if (v8)
    {
      uint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
      sub_1DA98CA18();
      swift_bridgeObjectRelease();
      uint64_t v15 = 0x3A4C525565736162;
      unint64_t v16 = 0xE900000000000020;
      sub_1DA989478();
      sub_1DA9540A0(qword_1EBE62D08, MEMORY[0x1E4F276F0]);
      sub_1DA98CDD8();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      uint64_t result = *(void **)(v1 + v6);
      if (result)
      {
        id v10 = objc_msgSend(result, sel_extensionIdentity);
        id v11 = objc_msgSend(v10, sel_description);
        sub_1DA98C038();

        sub_1DA98C148();
        swift_bridgeObjectRelease();
        sub_1DA98C148();
        return (void *)v15;
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    sub_1DA953C2C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WidgetCacheKey);
  }
  uint64_t v12 = *(void **)(v1 + v6);
  if (v12)
  {
    uint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_1DA98CA18();
    swift_bridgeObjectRelease();
    uint64_t v15 = 0x3A4C525565736162;
    unint64_t v16 = 0xE900000000000020;
    sub_1DA989478();
    sub_1DA9540A0(qword_1EBE62D08, MEMORY[0x1E4F276F0]);
    sub_1DA98CDD8();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    id v13 = objc_msgSend(v12, sel_extensionIdentity);
    id v14 = objc_msgSend(v13, sel_description);
    sub_1DA98C038();

    sub_1DA98C148();
    swift_bridgeObjectRelease();
    return (void *)v15;
  }
  return (void *)sub_1DA989368();
}

uint64_t sub_1DA953C2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void WidgetCacheKey.hash(into:)()
{
  uint64_t v1 = v0;
  sub_1DA989478();
  sub_1DA9540A0(&qword_1EBE58900, MEMORY[0x1E4F276F0]);
  sub_1DA98BFB8();
  uint64_t v2 = type metadata accessor for WidgetCacheKey();
  uint64_t v3 = *(void **)(v0 + *(int *)(v2 + 20));
  sub_1DA98CF38();
  if (v3)
  {
    id v4 = v3;
    sub_1DA98C7B8();
  }
  uint64_t v5 = *(void **)(v1 + *(int *)(v2 + 24));
  if (v5)
  {
    sub_1DA98CF38();
    id v6 = v5;
    sub_1DA98C7B8();
  }
  else
  {
    sub_1DA98CF38();
  }
}

uint64_t WidgetCacheKey.hashValue.getter()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA953E0C()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA953E50()
{
  return sub_1DA98CF68();
}

uint64_t sub_1DA953E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void **)(a2 + 8);
  id v9 = *(id *)a2;
  id v10 = v8;
  sub_1DA953C2C(a2, (uint64_t (*)(void))type metadata accessor for WidgetEntryKey);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v13 = sub_1DA989478();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a4, a1, v13);
  *(void *)(a4 + v12) = v9;
  *(void *)(a4 + v11) = v10;
  return result;
}

uint64_t _s9ChronoKit14WidgetCacheKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x1E01745D0]() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for WidgetCacheKey();
  uint64_t v5 = *(int *)(v4 + 20);
  id v6 = *(void **)(a1 + v5);
  uint64_t v7 = *(void **)(a2 + v5);
  if (v6)
  {
    if (!v7) {
      return 0;
    }
    sub_1DA7A1A08(0, &qword_1EBE657B0);
    id v8 = v7;
    id v9 = v6;
    char v10 = sub_1DA98C7A8();

    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  uint64_t v11 = *(int *)(v4 + 24);
  uint64_t v12 = *(void **)(a1 + v11);
  uint64_t v13 = *(void **)(a2 + v11);
  if (v12)
  {
    if (v13)
    {
      sub_1DA7A1A08(0, &qword_1EBE5AB78);
      id v14 = v13;
      id v15 = v12;
      char v16 = sub_1DA98C7A8();

      if (v16) {
        return 1;
      }
    }
  }
  else if (!v13)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1DA954058()
{
  return sub_1DA9540A0(&qword_1EBE5A920, (void (*)(uint64_t))type metadata accessor for WidgetCacheKey);
}

uint64_t sub_1DA9540A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetCacheKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DA989478();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    char v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    uint64_t v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    id v12 = v10;
    id v13 = v11;
  }
  return a1;
}

void destroy for WidgetCacheKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  int v5 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t initializeWithCopy for WidgetCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  char v10 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v10;
  id v11 = v9;
  id v12 = v10;
  return a1;
}

uint64_t assignWithCopy for WidgetCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  id v10 = v9;

  uint64_t v11 = *(int *)(a3 + 24);
  id v12 = *(void **)(a1 + v11);
  id v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  id v14 = v13;

  return a1;
}

uint64_t initializeWithTake for WidgetCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for WidgetCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = *(int *)(a3 + 24);
  id v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA9544A0);
}

uint64_t sub_1DA9544A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA989478();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetCacheKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA954580);
}

uint64_t sub_1DA954580(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DA989478();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t sub_1DA95463C()
{
  uint64_t result = sub_1DA989478();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of EnvironmentProviding.environmentValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EnvironmentProviding.environmentDidChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1DA9546FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DA954728(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1DA954790(a1);
  return v2;
}

void *sub_1DA954768()
{
  uint64_t result = (void *)sub_1DA79C810((uint64_t)&unk_1F34D8BB0);
  off_1EBE5A548 = result;
  return result;
}

uint64_t sub_1DA954790(uint64_t a1)
{
  uint64_t v3 = qword_1EBE5A2B0;
  type metadata accessor for ReloadHistory.ReloadHistoryRecord();
  sub_1DA98C378();
  *(void *)(v1 + v3) = sub_1DA98BE48();
  uint64_t v4 = v1 + qword_1EBE5A2B8;
  uint64_t v5 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(v4, a1, v5);
  return v1;
}

uint64_t sub_1DA954884@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *a1;
  uint64_t v5 = type metadata accessor for ReloadHistory.ReloadHistoryRecord();
  _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5) == 1)
  {
    uint64_t v7 = sub_1DA98C838();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + *(int *)(v5 + 48));
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  }
  if (v9 == -1) {
    __break(1u);
  }
  else {
    *(void *)((char *)a3 + *(int *)(v5 + 48)) = v9 + 1;
  }
  return result;
}

unint64_t sub_1DA9549B0(uint64_t a1, unint64_t *a2)
{
  uint64_t v5 = *(char **)(*(void *)v2 + 80);
  uint64_t v6 = *(void *)(*(void *)v2 + 96);
  uint64_t v73 = *(void *)(*(void *)v2 + 88);
  uint64_t v76 = v6;
  uint64_t v7 = type metadata accessor for ReloadHistory.ReloadHistoryRecord();
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v62 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v63 = (uint64_t *)((char *)&v59 - v10);
  uint64_t v64 = v11;
  uint64_t v12 = sub_1DA98C838();
  uint64_t v71 = *(void *)(v12 - 8);
  uint64_t v72 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  unint64_t v70 = (char *)&v59 - v17;
  uint64_t v18 = *((void *)v5 - 1);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v74 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v59 - v21;
  unint64_t v23 = *a2;
  if (*a2 >> 61 == 3) {
    unint64_t v23 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  }
  uint64_t v75 = v2;
  id v24 = *(void (**)(char *, uint64_t, char *))(v18 + 16);
  v24((char *)&v59 - v21, a1, v5);
  sub_1DA7A19BC(v23);
  sub_1DA7A19BC(v23);
  sub_1DA7A19BC(v23);
  uint64_t v25 = sub_1DA989F18();
  os_log_type_t v26 = sub_1DA98C548();
  int v27 = v26;
  BOOL v28 = os_log_type_enabled(v25, v26);
  uint64_t v69 = a1;
  uint64_t v66 = v18 + 16;
  uint64_t v67 = v15;
  uint64_t v65 = v24;
  if (v28)
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    v80[0] = v61;
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v59 = v29 + 4;
    int v60 = v27;
    unint64_t v30 = v74;
    v24(v74, (uint64_t)v22, v5);
    unint64_t v31 = *(void (**)(char *, char *))(v18 + 8);
    v31(v22, v5);
    uint64_t v32 = sub_1DA98CDD8();
    unint64_t v34 = v33;
    v31(v30, v5);
    v78[0] = sub_1DA8C5E00(v32, v34, v80);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    v78[0] = v23;
    unint64_t v35 = ReloadConfiguration.ReloadReason.description.getter();
    v78[0] = sub_1DA8C5E00(v35, v36, v80);
    a1 = v69;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA7E8048(v23);
    sub_1DA7E8048(v23);
    _os_log_impl(&dword_1DA795000, v25, (os_log_type_t)v60, "record reload: %s = %s", (uint8_t *)v29, 0x16u);
    uint64_t v37 = v61;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v37, -1, -1);
    MEMORY[0x1E0178DA0](v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, char *))(v18 + 8))(v22, v5);

    sub_1DA7E8048(v23);
    sub_1DA7E8048(v23);
  }
  uint64_t v38 = v76;
  uint64_t v39 = v64;
  unint64_t v40 = v63;
  id v41 = (uint64_t *)(v75 + qword_1EBE5A2B0);
  swift_beginAccess();
  uint64_t v42 = *v41;
  uint64_t v43 = sub_1DA98C378();
  swift_bridgeObjectRetain();
  uint64_t v64 = v43;
  MEMORY[0x1E0177130](v78, a1, v42, v5, v43, v38);
  swift_bridgeObjectRelease();
  if (v78[0])
  {
    unint64_t v63 = &v59;
    uint64_t v79 = v78[0];
    MEMORY[0x1F4188790](v78[0]);
    uint64_t v44 = v39;
    uint64_t v45 = v73;
    *(&v59 - 4) = (uint64_t)v5;
    *(&v59 - 3) = v45;
    *(&v59 - 2) = v38;
    *(&v59 - 1) = v23;
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    unint64_t v46 = v70;
    sub_1DA98C1F8();
    swift_bridgeObjectRelease();
    v78[0] = v23;
    uint64_t v47 = (uint64_t)v67;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v67, v46, v72);
    sub_1DA7A19BC(v23);
    uint64_t v67 = v5;
    sub_1DA954884(v78, v47, v40);
    uint64_t v48 = v68;
    unint64_t v49 = v62;
    (*(void (**)(char *, uint64_t *, uint64_t))(v68 + 16))(v62, v40, v39);
    sub_1DA98C338();
    uint64_t v50 = swift_bridgeObjectRetain();
    uint64_t v51 = MEMORY[0x1E01774C0](v50, v39);
    swift_bridgeObjectRelease();
    if (v51 >= 3)
    {
      sub_1DA98C348();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v44);
    }
    v65(v74, v69, v67);
    uint64_t v77 = v79;
    swift_beginAccess();
    sub_1DA98BF68();
    sub_1DA98BF98();
    swift_endAccess();
    sub_1DA7E8048(v23);
    (*(void (**)(uint64_t *, uint64_t))(v48 + 8))(v40, v44);
    return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v70, v72);
  }
  else
  {
    v65(v74, a1, v5);
    sub_1DA98CDE8();
    uint64_t v53 = v68;
    swift_allocObject();
    uint64_t v54 = sub_1DA98C2B8();
    uint64_t v55 = v39;
    id v57 = v56;
    v78[0] = v23;
    uint64_t v58 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v67, 1, 1, v55);
    sub_1DA7A19BC(v23);
    sub_1DA954884(v78, v58, v57);
    uint64_t v79 = v54;
    swift_beginAccess();
    sub_1DA98BF68();
    sub_1DA98BF98();
    swift_endAccess();
    return sub_1DA7E8048(v23);
  }
}

uint64_t type metadata accessor for ReloadHistory.ReloadHistoryRecord()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DA955280(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v15[-1] - v6;
  uint64_t v8 = (uint64_t *)((char *)v1 + qword_1EBE5A2B0);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = *(void *)(v3 + 88);
  uint64_t v11 = *(void *)(v3 + 96);
  type metadata accessor for ReloadHistory.ReloadHistoryRecord();
  uint64_t v12 = sub_1DA98C378();
  swift_bridgeObjectRetain();
  MEMORY[0x1E0177130](v15, a1, v9, v4, v12, v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (v15[0])
  {
    uint64_t v14 = (uint64_t)&v14;
    uint64_t v16 = v15[0];
    MEMORY[0x1F4188790](result);
    *(&v14 - 4) = v4;
    *(&v14 - 3) = v10;
    *(&v14 - 2) = v11;
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1DA98C4C8();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v15[3] = v16;
    swift_beginAccess();
    sub_1DA98BF68();
    sub_1DA98BF98();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1DA955508@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = (void *)*v3;
  uint64_t v8 = sub_1DA989638();
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v40 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v7[10];
  uint64_t v11 = v7[11];
  uint64_t v12 = v7[12];
  uint64_t v13 = type metadata accessor for ReloadHistory.ReloadHistoryRecord();
  uint64_t v14 = sub_1DA98C838();
  uint64_t v41 = *(void *)(v14 - 8);
  uint64_t v42 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v44 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v43 = (char *)&v36 - v18;
  unint64_t v19 = *a2;
  if (*a2 >> 61 == 3) {
    unint64_t v19 = *(void *)((v19 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  }
  uint64_t v20 = (void *)((char *)v3 + qword_1EBE5A2B0);
  swift_beginAccess();
  uint64_t v21 = *v20;
  swift_bridgeObjectRetain();
  sub_1DA7A19BC(v19);
  uint64_t v22 = sub_1DA98C378();
  MEMORY[0x1E0177130](&v47, a1, v21, v10, v22, v12);
  swift_bridgeObjectRelease();
  uint64_t v23 = v47;
  if (!v47) {
    goto LABEL_12;
  }
  if (qword_1EBE5A558 != -1) {
    swift_once();
  }
  id v24 = off_1EBE5A548;
  if (!*((void *)off_1EBE5A548 + 2))
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    sub_1DA7E8048(v19);
    uint64_t v30 = 1;
    goto LABEL_13;
  }
  sub_1DA7A19BC(v19);
  unint64_t v25 = sub_1DA7FE27C(v19);
  if ((v26 & 1) == 0)
  {
    sub_1DA7E8048(v19);
    goto LABEL_11;
  }
  uint64_t v39 = a3;
  uint64_t v27 = v24[7] + 24 * v25;
  long double v36 = *(long double *)v27;
  int v37 = *(unsigned __int8 *)(v27 + 16);
  unint64_t v28 = sub_1DA7E8048(v19);
  uint64_t v38 = &v36;
  uint64_t v47 = v23;
  MEMORY[0x1F4188790](v28);
  *((void *)&v36 - 4) = v10;
  *((void *)&v36 - 3) = v11;
  *((void *)&v36 - 2) = v12;
  *((void *)&v36 - 1) = v19;
  swift_getWitnessTable();
  sub_1DA98C1F8();
  swift_bridgeObjectRelease();
  uint64_t v29 = v44;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v17, 1, v13) == 1)
  {
    sub_1DA7E8048(v19);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v42);
    uint64_t v30 = 1;
    a3 = v39;
LABEL_13:
    uint64_t v32 = v45;
    uint64_t v31 = v46;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(a3, v30, 1, v31);
  }
  unint64_t v34 = v43;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v43, v17, v13);
  a3 = v39;
  if (v37)
  {
    uint64_t v32 = v45;
    uint64_t v31 = v46;
    unint64_t v35 = v40;
    if (v37 != 1) {
      pow(v36, (double)*(unint64_t *)&v34[*(int *)(v13 + 48)]);
    }
  }
  else
  {
    uint64_t v32 = v45;
    uint64_t v31 = v46;
    unint64_t v35 = v40;
  }
  _s9ChronoKit27RemoteActivityArchiveBudgetV08activityF2ID0gF4Type14windowDuration07maximumK00lF9PerWindow9startDate09remainingF0AC10Foundation4UUIDV_AA0cdefI0OS2dSiAK0P0VSiSgtcfcfA4__0();
  sub_1DA989558();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
  sub_1DA7E8048(v19);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v13);
  uint64_t v30 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(a3, v30, 1, v31);
}

uint64_t sub_1DA955A10()
{
  return swift_endAccess();
}

uint64_t sub_1DA955AE4(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(unsigned char *))(v2 + 16))(&v4[-v1]);
  uint64_t v5 = 0;
  swift_beginAccess();
  type metadata accessor for ReloadHistory.ReloadHistoryRecord();
  sub_1DA98C378();
  sub_1DA98BF68();
  sub_1DA98BF98();
  return swift_endAccess();
}

uint64_t ReloadHistory.deinit()
{
  uint64_t v1 = v0 + qword_1EBE5A2B8;
  uint64_t v2 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ReloadHistory.__deallocating_deinit()
{
  ReloadHistory.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA955D18(unint64_t *a1)
{
  return sub_1DA955D80(a1) & 1;
}

uint64_t sub_1DA955D34(unint64_t *a1)
{
  unint64_t v3 = *a1;
  unint64_t v2 = 0xA000000000000000;
  return static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v3, &v2) & 1;
}

uint64_t sub_1DA955D80(unint64_t *a1)
{
  unint64_t v2 = *(void *)(v1 + 40);
  unint64_t v5 = *a1;
  unint64_t v4 = v2;
  return static ReloadConfiguration.ReloadReason.== infix(_:_:)(&v5, &v4) & 1;
}

uint64_t type metadata accessor for _ReloadHistoryConfiguration()
{
  return self;
}

uint64_t sub_1DA955DF0()
{
  uint64_t result = sub_1DA989F38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ReloadHistory()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ReloadHistory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ReloadHistory);
}

uint64_t dispatch thunk of ReloadHistory.recordReload(for:reason:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ReloadHistory.clearEnvironmentMismatchHistoryIfNecessary(key:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ReloadHistory.reloadLoopBackOffDate(key:reason:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ReloadHistory.removeAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of ReloadHistory.remove(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t sub_1DA955F70()
{
  uint64_t result = sub_1DA989638();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t *sub_1DA956014(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = *a2;
    sub_1DA7A19BC(*a2);
    *a1 = v7;
    uint64_t v8 = *(int *)(a3 + 44);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DA989638();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(unint64_t *)((char *)a1 + *(int *)(a3 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(a3 + 48));
  }
  return a1;
}

uint64_t sub_1DA956104(unint64_t *a1, uint64_t a2)
{
  sub_1DA7E8048(*a1);
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_1DA989638();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

unint64_t *sub_1DA95617C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  sub_1DA7A19BC(*a2);
  *a1 = v6;
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(unint64_t *)((char *)a1 + *(int *)(a3 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(a3 + 48));
  return a1;
}

unint64_t *sub_1DA95621C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  sub_1DA7A19BC(*a2);
  unint64_t v7 = *a1;
  *a1 = v6;
  sub_1DA7E8048(v7);
  uint64_t v8 = *(int *)(a3 + 44);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  *(unint64_t *)((char *)a1 + *(int *)(a3 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(a3 + 48));
  return a1;
}

void *sub_1DA9562C4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 44);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 48)) = *(void *)((char *)a2 + *(int *)(a3 + 48));
  return a1;
}

unint64_t *sub_1DA95635C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6 = *a1;
  *a1 = *a2;
  sub_1DA7E8048(v6);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DA989638();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unint64_t *)((char *)a1 + *(int *)(a3 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t sub_1DA9563FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA956410);
}

uint64_t sub_1DA956410(void *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 122)
  {
    int v4 = ((*a1 >> 57) >> 4) | (8 * ((*a1 >> 57) & 8 | *a1 & 7));
    unsigned int v5 = v4 ^ 0x7E;
    unsigned int v6 = 128 - v4;
    if (v5 >= 0x7A) {
      return 0;
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v10 = sub_1DA989638();
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = (char *)a1 + *(int *)(a3 + 44);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DA9564D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA9564E8);
}

unint64_t *sub_1DA9564E8(unint64_t *result, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v5 = result;
  if (a3 == 122)
  {
    uint64_t v6 = (-(int)a2 >> 3) & 0xF | (16 * (-(int)a2 & 0x7F));
    *uint64_t result = (v6 | (v6 << 57)) & 0xF000000000000007;
  }
  else
  {
    uint64_t v8 = sub_1DA989638();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)v5 + *(int *)(a4 + 44);
    return (unint64_t *)v9(v11, a2, a2, v10);
  }
  return result;
}

uint64_t RBImageSnapshotter.RBImageOptions.init(colorMode:scale:format:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_DWORD *)a4 = a1;
  *(unsigned char *)(a4 + 4) = BYTE4(a1) & 1;
  *(_DWORD *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 12) = BYTE4(a2) & 1;
  uint64_t v5 = a4 + *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  uint64_t v6 = sub_1DA9898F8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a3, v6);
}

uint64_t type metadata accessor for RBImageSnapshotter.RBImageOptions(uint64_t a1)
{
  return sub_1DA7A88D4(a1, qword_1EBE63190);
}

unint64_t RBImageSnapshotter.RBImageOptions.colorMode.getter()
{
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t RBImageSnapshotter.RBImageOptions.colorMode.setter(uint64_t result)
{
  *(_DWORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*RBImageSnapshotter.RBImageOptions.colorMode.modify())()
{
  return CGSizeMake;
}

unint64_t RBImageSnapshotter.RBImageOptions.scale.getter()
{
  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t RBImageSnapshotter.RBImageOptions.scale.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  *(unsigned char *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*RBImageSnapshotter.RBImageOptions.scale.modify())()
{
  return CGSizeMake;
}

uint64_t RBImageSnapshotter.RBImageOptions.format.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  uint64_t v4 = sub_1DA9898F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RBImageSnapshotter.RBImageOptions.format.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  uint64_t v4 = sub_1DA9898F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

double (*RBImageSnapshotter.RBImageOptions.format.modify())(void, void, void, void)
{
  return CGSizeMake;
}

uint64_t sub_1DA956828()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC868];
  if ((v0[1] & 1) == 0)
  {
    uint64_t v3 = *v0;
    uint64_t v4 = (void *)*MEMORY[0x1E4F96048];
    id v5 = objc_allocWithZone(NSNumber);
    id v6 = v4;
    id v7 = objc_msgSend(v5, sel_initWithInt_, v3);
    unint64_t v19 = sub_1DA8E38F8();
    *(void *)&long long v18 = v7;
    sub_1DA7A1930(&v18, v17);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1DA9168E0(v17, v6, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  if ((v1[3] & 1) == 0)
  {
    unsigned int v9 = v1[2];
    uint64_t v10 = (void *)*MEMORY[0x1E4F96050];
    id v11 = objc_allocWithZone(NSNumber);
    id v12 = v10;
    LODWORD(v13) = v9;
    id v14 = objc_msgSend(v11, sel_initWithFloat_, v13);
    unint64_t v19 = sub_1DA8E38F8();
    *(void *)&long long v18 = v14;
    sub_1DA7A1930(&v18, v17);
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DA9168E0(v17, v12, v15);

    swift_bridgeObjectRelease();
  }
  return v2;
}

void sub_1DA956998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a3;
  uint64_t v27 = a2;
  uint64_t v7 = sub_1DA989478();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = type metadata accessor for RBImageSnapshotter(0);
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v26 + 64);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = *(void **)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62E40) + 44));
  objc_msgSend(v13, sel_size);
  double v15 = v14;
  double v17 = v16;
  sub_1DA956828();
  type metadata accessor for RBLayerCopyImageKey(0);
  sub_1DA957DCC((unint64_t *)&unk_1EBE62AE0, type metadata accessor for RBLayerCopyImageKey);
  long long v18 = (void *)sub_1DA98BE68();
  swift_bridgeObjectRelease();
  sub_1DA957D64(v5, (uint64_t)v12, type metadata accessor for RBImageSnapshotter);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v7);
  unint64_t v19 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v20 = (v11 + *(unsigned __int8 *)(v8 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = swift_allocObject();
  sub_1DA957B90((uint64_t)v12, v21 + v19);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v21 + v20, (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v22 = (void *)(v21 + ((v9 + v20 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v23 = v29;
  void *v22 = v28;
  v22[1] = v23;
  aBlock[4] = sub_1DA957BF4;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA9570D0;
  aBlock[3] = &block_descriptor_18;
  id v24 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_copyImageInRect_options_completionQueue_handler_, v18, v30, v24, 0.0, 0.0, v15, v17);
  _Block_release(v24);
}

void sub_1DA956CE4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  uint64_t v7 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = &v17[-v9];
  if (a1)
  {
    sub_1DA957D64(a2, (uint64_t)&v17[-v9], type metadata accessor for RBImageSnapshotter.RBImageOptions);
    uint64_t v11 = &v10[*(int *)(v7 + 24)];
    id v12 = a1;
    sub_1DA956EB0(v12);
    uint64_t v16 = sub_1DA9898F8();
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v16 - 8) + 8))(v11, v16);
    a4(0);
  }
  else
  {
    sub_1DA957D10();
    double v13 = (void *)swift_allocError();
    *double v14 = 0;
    v14[1] = 0;
    swift_willThrow();
    id v15 = v13;
    a4(v13);
  }
}

void sub_1DA956EB0(CGImage *a1)
{
  CFURLRef v2 = (const __CFURL *)sub_1DA9893A8();
  uint64_t v3 = CGDataConsumerCreateWithURL(v2);

  if (v3)
  {
    sub_1DA9898E8();
    uint64_t v4 = (__CFString *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    uint64_t v5 = CGImageDestinationCreateWithDataConsumer(v3, v4, 1uLL, 0);

    if (v5)
    {
      if (sub_1DA9898B8())
      {
        type metadata accessor for CFString(0);
        sub_1DA957DCC((unint64_t *)&qword_1EBE65C98, type metadata accessor for CFString);
        CFDictionaryRef v6 = (const __CFDictionary *)sub_1DA98BE68();
        swift_bridgeObjectRelease();
      }
      else
      {
        CFDictionaryRef v6 = 0;
      }
      CGImageDestinationAddImage(v5, a1, v6);

      if (!CGImageDestinationFinalize(v5))
      {
        sub_1DA957D10();
        swift_allocError();
        _OWORD *v9 = xmmword_1DA99A890;
        swift_willThrow();
      }
    }
    else
    {
      sub_1DA957D10();
      swift_allocError();
      *uint64_t v8 = 0xD000000000000023;
      v8[1] = 0x80000001DA9A4AA0;
      swift_willThrow();
    }
  }
  else
  {
    sub_1DA957D10();
    swift_allocError();
    *uint64_t v7 = 0xD00000000000001FLL;
    v7[1] = 0x80000001DA9A4A80;
    swift_willThrow();
  }
}

void sub_1DA9570D0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1DA95713C()
{
  uint64_t v1 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  uint64_t v2 = v1 - 8;
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA957D64(v0, (uint64_t)v4, type metadata accessor for RBImageSnapshotter.RBImageOptions);
  uint64_t v5 = &v4[*(int *)(v2 + 32)];
  uint64_t v6 = sub_1DA9898E8();
  uint64_t v7 = sub_1DA9898F8();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  return v6;
}

uint64_t initializeBufferWithCopyOfBuffer for RBImageSnapshotter(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
    uint64_t v6 = *(int *)(v4 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1DA9898F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RBImageSnapshotter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA957328);
}

uint64_t sub_1DA957328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RBImageSnapshotter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA9573A8);
}

uint64_t sub_1DA9573A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RBImageSnapshotter(uint64_t a1)
{
  return sub_1DA7A88D4(a1, (uint64_t *)&unk_1EBE63B08);
}

uint64_t sub_1DA957438()
{
  uint64_t result = type metadata accessor for RBImageSnapshotter.RBImageOptions(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for RBImageSnapshotter.RBImageOptions(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_1DA9898F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for RBImageSnapshotter.RBImageOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_1DA9898F8();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t initializeWithCopy for RBImageSnapshotter.RBImageOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DA9898F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for RBImageSnapshotter.RBImageOptions(uint64_t a1, int *a2, uint64_t a3)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  int v5 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = (uint64_t)a2 + v6;
  uint64_t v9 = sub_1DA9898F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for RBImageSnapshotter.RBImageOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DA9898F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for RBImageSnapshotter.RBImageOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DA9898F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for RBImageSnapshotter.RBImageOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA957874);
}

uint64_t sub_1DA957874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_1DA9898F8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for RBImageSnapshotter.RBImageOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA9578F8);
}

uint64_t sub_1DA9578F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_1DA9898F8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_1DA95796C()
{
  uint64_t result = sub_1DA9898F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DA957A04()
{
  uint64_t v1 = *(void *)(type metadata accessor for RBImageSnapshotter(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_1DA989478();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v9 = v2 | v7 | 7;
  unint64_t v10 = ((*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v11 = v0 + *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24) + v3;
  uint64_t v12 = sub_1DA9898F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  swift_release();

  return MEMORY[0x1F4186498](v0, v10, v9);
}

uint64_t sub_1DA957B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RBImageSnapshotter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DA957BF4(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for RBImageSnapshotter(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1DA989478() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void (**)(void *))(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1DA956CE4(a1, v1 + v4, v1 + v7, v8);
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

unint64_t sub_1DA957D10()
{
  unint64_t result = qword_1EBE62E70[0];
  if (!qword_1EBE62E70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBE62E70);
  }
  return result;
}

uint64_t sub_1DA957D64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA957DCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RBImageSnapshotter.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RBImageSnapshotter.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RBImageSnapshotter.Error()
{
  return &type metadata for RBImageSnapshotter.Error;
}

uint64_t WatchExpandedJindoView.init(appName:leadingView:trailingView:spacing:smartStackPlatterPadding:smartStackPlatterPaddingOutset:titleHeight:launchRequestHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, uint64_t a13, uint64_t a14)
{
  uint64_t v22 = (int *)type metadata accessor for WatchExpandedJindoView();
  uint64_t v23 = &a9[v22[18]];
  id v24 = &a9[v22[19]];
  *(void *)a9 = a1;
  *((void *)a9 + 1) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(&a9[v22[13]], a3, a13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32))(&a9[v22[14]], a4, a14);
  *(double *)&a9[v22[15]] = a10;
  *(double *)&a9[v22[16]] = a11;
  *(double *)&a9[v22[17]] = a12;
  *(void *)uint64_t v23 = a5;
  v23[8] = a6 & 1;
  *(void *)id v24 = a7;
  *((void *)v24 + 1) = a8;
  return result;
}

uint64_t type metadata accessor for WatchExpandedJindoView()
{
  return swift_getGenericMetadata();
}

__n128 sub_1DA958048@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1DA98C538();
    uint64_t v23 = (void *)sub_1DA98AD78();
    sub_1DA989E18();
  }
  sub_1DA98A418();
  sub_1DA7A1F58(v13, a9, &qword_1EA8E6B18);
  id v24 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B20) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  *id v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  v24[2] = v28;
  void v24[3] = v29;
  return result;
}

uint64_t sub_1DA958208()
{
  if (*(void *)(v0 + 8))
  {
    sub_1DA98A3F8();
    sub_1DA7CB898();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE630C8);
    sub_1DA7A0410(&qword_1EBE630D0, &qword_1EBE630C8);
    return sub_1DA98C918();
  }
  else
  {
    return sub_1DA98A3D8();
  }
}

uint64_t WatchExpandedJindoView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA8E6A68);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v23 = *(void *)(a1 + 24);
  swift_getTupleTypeMetadata3();
  sub_1DA98B3F8();
  swift_getWitnessTable();
  sub_1DA98B2A8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E5A88);
  sub_1DA98A388();
  sub_1DA98A388();
  swift_getTupleTypeMetadata2();
  sub_1DA98B3F8();
  swift_getWitnessTable();
  uint64_t v4 = sub_1DA98B318();
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = sub_1DA98A388();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v26 = v3;
  uint64_t v27 = v23;
  long long v28 = *(_OWORD *)(a1 + 32);
  uint64_t v14 = v24;
  uint64_t v29 = v24;
  sub_1DA98A9B8();
  sub_1DA98B308();
  id v15 = (uint64_t *)(v14 + *(int *)(a1 + 76));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DA8A4F6C(v16, v17, v4);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  unint64_t v19 = sub_1DA7D4070();
  uint64_t v30 = WitnessTable;
  unint64_t v31 = v19;
  swift_getWitnessTable();
  sub_1DA875B4C(v10);
  unint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v10, v7);
  sub_1DA875B4C(v13);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
}

uint64_t sub_1DA958660@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v140 = a4;
  uint64_t v136 = a6;
  uint64_t v138 = a2;
  uint64_t v139 = a3;
  swift_getTupleTypeMetadata3();
  uint64_t v126 = sub_1DA98B3F8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_1DA98B2A8();
  uint64_t v127 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v124 = (char *)&v100 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E5A88);
  uint64_t v129 = v8;
  uint64_t v10 = sub_1DA98A388();
  uint64_t v130 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v128 = (char *)&v100 - v11;
  uint64_t v131 = v12;
  uint64_t v135 = sub_1DA98A388();
  uint64_t v132 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  uint64_t v134 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v133 = (char *)&v100 - v15;
  uint64_t v121 = sub_1DA98A368();
  uint64_t v120 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  uint64_t v119 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE637D8);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v118 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1DA98A3F8();
  uint64_t v19 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v21 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6AF0);
  uint64_t v22 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v24 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6AF8);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B00);
  uint64_t v107 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  uint64_t v29 = (char *)&v100 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B08);
  uint64_t v115 = *(void *)(v117 - 8);
  MEMORY[0x1F4188790](v117);
  unint64_t v104 = (char *)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B10);
  uint64_t v113 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v109 = (char *)&v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B18);
  MEMORY[0x1F4188790](v106);
  unint64_t v33 = (char *)&v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B20);
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v112 = (uint64_t)&v100 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B28);
  MEMORY[0x1F4188790](v108);
  uint64_t v111 = (uint64_t)&v100 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(qword_1EA8E6A68);
  MEMORY[0x1F4188790](v137);
  uint64_t v123 = (uint64_t)&v100 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  uint64_t v110 = (uint64_t)&v100 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v122 = (uint64_t)&v100 - v41;
  if (a1[1])
  {
    uint64_t v42 = *a1;
    unint64_t v43 = a1[1];
  }
  else
  {
    unint64_t v43 = 0xEB00000000726564;
    uint64_t v42 = 0x6C6F686563616C70;
  }
  uint64_t v151 = v42;
  uint64_t v152 = v43;
  char v153 = 0;
  uint64_t v154 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  uint64_t v147 = v138;
  uint64_t v148 = v139;
  uint64_t v149 = v140;
  uint64_t v150 = a5;
  uint64_t v101 = type metadata accessor for WatchExpandedJindoView();
  uint64_t v105 = a5;
  uint64_t v44 = a1;
  sub_1DA958208();
  sub_1DA98B168();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v102);
  sub_1DA7DF368(v151, v152, v153);
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_1DA98ADE8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v47 = v103;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v27, v24, v103);
  uint64_t v48 = (uint64_t *)&v27[*(int *)(v25 + 36)];
  uint64_t *v48 = KeyPath;
  v48[1] = v45;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v47);
  sub_1DA98AE48();
  unint64_t v49 = sub_1DA95AAFC();
  sub_1DA98B008();
  sub_1DA7A1AE0((uint64_t)v27, &qword_1EA8E6AF8);
  uint64_t v50 = *MEMORY[0x1E4F3E090];
  uint64_t v51 = sub_1DA98AE28();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = (uint64_t)v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 104))(v118, v50, v51);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v53, 0, 1, v51);
  uint64_t v151 = v25;
  uint64_t v152 = v49;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v55 = v104;
  uint64_t v56 = v114;
  sub_1DA98AFF8();
  sub_1DA7A1AE0(v53, &qword_1EBE637D8);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v29, v56);
  uint64_t v57 = v120;
  uint64_t v58 = v119;
  uint64_t v59 = v121;
  (*(void (**)(char *, void, uint64_t))(v120 + 104))(v119, *MEMORY[0x1E4F3CB80], v121);
  uint64_t v151 = v56;
  uint64_t v152 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  int v60 = v109;
  uint64_t v61 = v117;
  sub_1DA98B098();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v55, v61);
  LODWORD(v50) = sub_1DA98AAC8();
  uint64_t v62 = v113;
  uint64_t v63 = v116;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v33, v60, v116);
  *(_DWORD *)&v33[*(int *)(v106 + 36)] = v50;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v63);
  uint64_t v64 = (double *)((char *)v44 + *(int *)(v101 + 72));
  char v65 = *((unsigned char *)v64 + 8);
  if (v65) {
    double v66 = 0.0;
  }
  else {
    double v66 = *v64;
  }
  sub_1DA98B3B8();
  double v99 = v66;
  uint64_t v67 = v112;
  sub_1DA958048(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v112, 0.0, 1, v99, v65);
  sub_1DA7A1AE0((uint64_t)v33, &qword_1EA8E6B18);
  uint64_t v68 = v111;
  sub_1DA7A1F58(v67, v111, &qword_1EA8E6B20);
  *(void *)(v68 + *(int *)(v108 + 36)) = 0x3FE0000000000000;
  sub_1DA7A1AE0(v67, &qword_1EA8E6B20);
  char v69 = sub_1DA98AD98();
  sub_1DA98A1E8();
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v78 = v110;
  sub_1DA7A1F58(v68, v110, &qword_1EA8E6B28);
  uint64_t v79 = v78 + *(int *)(v137 + 36);
  *(unsigned char *)uint64_t v79 = v69;
  *(void *)(v79 + 8) = v71;
  *(void *)(v79 + 16) = v73;
  *(void *)(v79 + 24) = v75;
  *(void *)(v79 + 32) = v77;
  *(unsigned char *)(v79 + 40) = 0;
  sub_1DA7A1AE0(v68, &qword_1EA8E6B28);
  uint64_t v80 = v122;
  uint64_t v81 = sub_1DA95ABCC(v78, v122);
  MEMORY[0x1F4188790](v81);
  sub_1DA98A898();
  uint64_t v82 = v124;
  sub_1DA98B298();
  uint64_t v83 = v129;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v85 = v128;
  sub_1DA98B088();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v82, v83);
  sub_1DA98AD98();
  uint64_t v86 = sub_1DA7A0410((unint64_t *)&qword_1EA8E5A90, &qword_1EA8E5A88);
  uint64_t v145 = v84;
  uint64_t v146 = v86;
  uint64_t v87 = v131;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v89 = (uint64_t)v134;
  sub_1DA98B148();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v85, v87);
  uint64_t v143 = v88;
  uint64_t v144 = MEMORY[0x1E4F3CAA8];
  uint64_t v90 = v135;
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v92 = v133;
  sub_1DA875B4C(v89);
  uint64_t v93 = v132;
  uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v132 + 8);
  v94(v89, v90);
  uint64_t v95 = v80;
  uint64_t v96 = v80;
  uint64_t v97 = v123;
  sub_1DA7A1F58(v96, v123, qword_1EA8E6A68);
  uint64_t v151 = v97;
  (*(void (**)(uint64_t, char *, uint64_t))(v93 + 16))(v89, v92, v90);
  uint64_t v152 = v89;
  uint64_t v147 = v137;
  uint64_t v148 = v90;
  uint64_t v141 = sub_1DA95AD30(&qword_1EA8E6B38, qword_1EA8E6A68, (void (*)(void))sub_1DA95AC64);
  uint64_t v142 = v91;
  sub_1DA97619C((uint64_t)&v151, 2uLL, (uint64_t)&v147);
  v94((uint64_t)v92, v90);
  sub_1DA7A1AE0(v95, qword_1EA8E6A68);
  v94(v89, v90);
  return sub_1DA7A1AE0(v97, qword_1EA8E6A68);
}

uint64_t sub_1DA959660()
{
  return sub_1DA95AC4C((uint64_t (*)(void, void, void, void, void))sub_1DA958660);
}

uint64_t sub_1DA959678()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA9596BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v38 = a5;
  uint64_t v37 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v36 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v45 = v21;
  uint64_t v46 = v22;
  uint64_t v35 = v23;
  uint64_t v47 = v23;
  uint64_t v48 = v24;
  uint64_t v25 = (int *)type metadata accessor for WatchExpandedJindoView();
  sub_1DA875B4C(a1 + v25[13]);
  uint64_t v26 = v25[14];
  uint64_t v27 = *(void *)(a1 + v25[15]);
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a4;
  sub_1DA875B4C(v28);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v20, a2);
  uint64_t v43 = v27;
  char v44 = 0;
  uint64_t v45 = v17;
  uint64_t v46 = &v43;
  uint64_t v31 = v36;
  uint64_t v30 = v37;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v36, v12, a3);
  uint64_t v47 = v31;
  v42[0] = a2;
  v42[1] = MEMORY[0x1E4F3EDA0];
  void v42[2] = a3;
  uint64_t v39 = v35;
  uint64_t v40 = MEMORY[0x1E4F3ED90];
  uint64_t v41 = v29;
  sub_1DA97619C((uint64_t)&v45, 3uLL, (uint64_t)v42);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v30 + 8);
  v32(v12, a3);
  unint64_t v33 = *(void (**)(char *, uint64_t))(v14 + 8);
  v33(v20, a2);
  v32(v31, a3);
  return ((uint64_t (*)(char *, uint64_t))v33)(v17, a2);
}

uint64_t sub_1DA959978()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DA959A70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v4 - 8);
  unint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = *(void *)(v9 + 64) + 7;
  if ((v10 | v7) > 7
    || ((*(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || ((((((((v12 + ((v8 + v10 + ((v7 + 16) & ~v7)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 31) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v16 = v15 + (((v10 | v7) & 0xF8 ^ 0x1F8) & ((v10 | v7) + 16));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v10;
    uint64_t v18 = a2[1];
    *a1 = *a2;
    a1[1] = v18;
    uint64_t v35 = a1;
    uint64_t v19 = ((unint64_t)a1 + v7 + 16) & ~v7;
    uint64_t v20 = ((unint64_t)a2 + v7 + 16) & ~v7;
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v21(v19, v20, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))((v19 + v11) & v17, (v20 + v11) & v17, v5);
    uint64_t v22 = (void *)((v12 + ((v19 + v11) & v17)) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = (void *)((v12 + ((v20 + v11) & v17)) & 0xFFFFFFFFFFFFFFF8);
    void *v22 = *v23;
    uint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v24 = *v25;
    uint64_t v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v27 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v26 = *v27;
    unint64_t v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = ((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v30 = *(void *)v29;
    *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
    *(void *)unint64_t v28 = v30;
    unint64_t v31 = ((unint64_t)v26 + 31) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = ((unint64_t)v27 + 31) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v32 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v31 = *(_OWORD *)v32;
    }
    else
    {
      uint64_t v33 = *(void *)(v32 + 8);
      *(void *)unint64_t v31 = *(void *)v32;
      *(void *)(v31 + 8) = v33;
      swift_retain();
    }
    return v35;
  }
  return (uint64_t *)v16;
}

uint64_t sub_1DA959CD8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = *(void *)(v5 + 56);
  uint64_t v8 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v9 = v8 + 8;
  unint64_t v10 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t))(v8 + 8))(v10);
  if (*(void *)((((((((*(void *)(v9 + 56) + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 31) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
  {
    return swift_release();
  }
  return result;
}

void *sub_1DA959DEC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v8 = *(void *)(v6 - 8) + 16;
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  swift_bridgeObjectRetain();
  v7(v10, v11, v6);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v13 = v12 + 16;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = *(void *)(v8 + 48) + v14;
  uint64_t v16 = (v15 + v10) & ~v14;
  uint64_t v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v16, v17);
  uint64_t v18 = *(void *)(v13 + 48) + 7;
  uint64_t v19 = (void *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v20;
  uint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v24;
  unint64_t v25 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(void *)unint64_t v25 = v27;
  unint64_t v28 = ((unint64_t)v23 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = ((unint64_t)v24 + 31) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v29 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
  }
  else
  {
    uint64_t v30 = *(void *)(v29 + 8);
    *(void *)unint64_t v28 = *(void *)v29;
    *(void *)(v28 + 8) = v30;
    swift_retain();
  }
  return a1;
}

void *sub_1DA959F68(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v13 = v12 + 24;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = v11 + v14;
  uint64_t v16 = (v15 + v9) & ~v14;
  uint64_t v17 = (v15 + v10) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v16, v17);
  uint64_t v18 = *(void *)(v13 + 40) + 7;
  uint64_t v19 = (void *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v20;
  uint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v24;
  unint64_t v25 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(void *)unint64_t v25 = v27;
  unint64_t v28 = (void *)(((unint64_t)v23 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (unint64_t *)(((unint64_t)v24 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v30 = *v29;
  if (*v28 < 0xFFFFFFFFuLL)
  {
    if (v30 >= 0xFFFFFFFF)
    {
      unint64_t v32 = v29[1];
      *unint64_t v28 = v30;
      v28[1] = v32;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
    return a1;
  }
  if (v30 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v31 = v29[1];
  *unint64_t v28 = v30;
  v28[1] = v31;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1DA95A130(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v8, v9);
  uint64_t v10 = *(void *)(v6 + 32);
  uint64_t v11 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v12 = v11 + 32;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = (v14 + v8) & ~v13;
  uint64_t v16 = (v14 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v15, v16);
  uint64_t v17 = *(void *)(v12 + 32) + 7;
  uint64_t v18 = (void *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  uint64_t v20 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  uint64_t v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v22 = *v23;
  unint64_t v24 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(void *)unint64_t v24 = v26;
  unint64_t v27 = ((unint64_t)v22 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (uint64_t *)(((unint64_t)v23 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = *v28;
  if ((unint64_t)*v28 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v27 = *(_OWORD *)v28;
  }
  else
  {
    uint64_t v30 = v28[1];
    *(void *)unint64_t v27 = v29;
    *(void *)(v27 + 8) = v30;
  }
  return a1;
}

void *sub_1DA95A298(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v17, v18);
  uint64_t v19 = *(void *)(v14 + 24) + 7;
  uint64_t v20 = (void *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  uint64_t v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v22 = *v23;
  unint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v24 = *v25;
  unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(void *)unint64_t v26 = v28;
  uint64_t v29 = (void *)(((unint64_t)v24 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (unint64_t *)(((unint64_t)v25 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v31 = *v30;
  if (*v29 < 0xFFFFFFFFuLL)
  {
    if (v31 >= 0xFFFFFFFF)
    {
      unint64_t v33 = v30[1];
      *uint64_t v29 = v31;
      v29[1] = v33;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    return a1;
  }
  if (v31 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v32 = v30[1];
  *uint64_t v29 = v31;
  v29[1] = v32;
  swift_release();
  return a1;
}

uint64_t sub_1DA95A444(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = *(void *)(v4 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  if (v5 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v4 + 84);
  }
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  if (v13 < a2)
  {
    unint64_t v14 = ((((((((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + v11 + ((v9 + 16) & ~v9)) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 31) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = a2 - v13 + 1;
    }
    if (v15 >= 0x10000) {
      unsigned int v16 = 4;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v15 < 0x100) {
      unsigned int v16 = 1;
    }
    if (v15 >= 2) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    switch(v17)
    {
      case 1:
        int v18 = *((unsigned __int8 *)a1 + v14);
        if (!*((unsigned char *)a1 + v14)) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v18 = *(unsigned __int16 *)((char *)a1 + v14);
        if (*(_WORD *)((char *)a1 + v14)) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DA95A664);
      case 4:
        int v18 = *(int *)((char *)a1 + v14);
        if (!v18) {
          break;
        }
LABEL_25:
        int v20 = v18 - 1;
        if ((v14 & 0xFFFFFFF8) != 0)
        {
          int v20 = 0;
          int v21 = *a1;
        }
        else
        {
          int v21 = 0;
        }
        return v13 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  if (v12 > 0x7FFFFFFE)
  {
    uint64_t v23 = ((unint64_t)a1 + v9 + 16) & ~v9;
    if (v5 == v13) {
      return (*(uint64_t (**)(uint64_t))(v4 + 48))(v23);
    }
    else {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))((v23 + v10 + v11) & ~v11, v8, v6);
    }
  }
  else
  {
    unint64_t v22 = *((void *)a1 + 1);
    if (v22 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    if ((v22 + 1) >= 2) {
      return v22;
    }
    else {
      return 0;
    }
  }
}

void sub_1DA95A678(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  else {
    unsigned int v14 = v13;
  }
  size_t v15 = ((((((((*(void *)(*(void *)(v8 - 8) + 64) + ((v11 + v12 + ((v10 + 16) & ~v10)) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 31) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v14 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v14;
    if (a2 <= v14)
    {
LABEL_20:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            if (v13 > 0x7FFFFFFE)
            {
              unint64_t v23 = (unint64_t)&a1[v10 + 16] & ~v10;
              if (v7 == v14)
              {
                unint64_t v24 = *(void (**)(unint64_t))(v6 + 56);
                v24(v23);
              }
              else
              {
                unint64_t v25 = (v23 + v11 + v12) & ~v12;
                unint64_t v26 = *(void (**)(unint64_t))(v9 + 56);
                v26(v25);
              }
            }
            else if (a2 > 0x7FFFFFFE)
            {
              *(void *)a1 = 0;
              *((void *)a1 + 1) = 0;
              *(_DWORD *)a1 = a2 - 0x7FFFFFFF;
            }
            else
            {
              *((void *)a1 + 1) = a2;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v14;
    if (((((((((*(_DWORD *)(*(void *)(v8 - 8) + 64)
               + ((v11 + v12 + ((v10 + 16) & ~v10)) & ~v12)
               + 7) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 31) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v17 = v16 + 1;
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v14;
    if (a2 <= v14) {
      goto LABEL_20;
    }
  }
  if (((((((((*(_DWORD *)(*(void *)(v8 - 8) + 64)
             + ((v11 + v12 + ((v10 + 16) & ~v10)) & ~v12)
             + 7) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 31) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v21 = v20;
  else {
    int v21 = 1;
  }
  if (((((((((*(_DWORD *)(*(void *)(v8 - 8) + 64)
             + ((v11 + v12 + ((v10 + 16) & ~v10)) & ~v12)
             + 7) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 31) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    unsigned int v22 = ~v14 + a2;
    bzero(a1, v15);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x1DA95A950);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_1DA95A978()
{
  return swift_getWitnessTable();
}

unint64_t sub_1DA95AAFC()
{
  unint64_t result = qword_1EA8E6B30;
  if (!qword_1EA8E6B30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E6AF8);
    swift_getOpaqueTypeConformance2();
    sub_1DA7A0410(&qword_1EBE63780, &qword_1EBE63788);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6B30);
  }
  return result;
}

uint64_t sub_1DA95ABCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EA8E6A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA95AC34()
{
  return sub_1DA95AC4C((uint64_t (*)(void, void, void, void, void))sub_1DA9596BC);
}

uint64_t sub_1DA95AC4C(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

unint64_t sub_1DA95AC64()
{
  unint64_t result = qword_1EA8E6B40;
  if (!qword_1EA8E6B40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E6B28);
    sub_1DA95AD30(&qword_1EA8E6B48, &qword_1EA8E6B20, (void (*)(void))sub_1DA95ADAC);
    sub_1DA7A0410((unint64_t *)&qword_1EA8E5A90, &qword_1EA8E5A88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6B40);
  }
  return result;
}

uint64_t sub_1DA95AD30(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DA95ADAC()
{
  unint64_t result = qword_1EA8E6B50;
  if (!qword_1EA8E6B50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E6B18);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E6B08);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E6B00);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E6AF8);
    sub_1DA95AAFC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1DA7A0410(&qword_1EA8E6B58, &qword_1EA8E6B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6B50);
  }
  return result;
}

uint64_t ReloadTaskPairResolver.__allocating_init(taskPair:allowDebounce:logger:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + qword_1EBE59370) = a1;
  *(unsigned char *)(v6 + qword_1EBE59378) = a2;
  uint64_t v7 = v6 + qword_1EBE59380;
  uint64_t v8 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a3, v8);
  return v6;
}

uint64_t ReloadTaskPairResolver.init(taskPair:allowDebounce:logger:)(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v3 + qword_1EBE59370) = a1;
  *(unsigned char *)(v3 + qword_1EBE59378) = a2;
  uint64_t v5 = v3 + qword_1EBE59380;
  uint64_t v6 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a3, v6);
  return v3;
}

uint64_t sub_1DA95B024(uint64_t a1, uint64_t a2, unint64_t a3, NSObject *a4, char *a5)
{
  char v10 = *a5;
  if (sub_1DA95C53C(a3, a2, &v10))
  {
    return sub_1DA95B120(a1, a2, a3, (uint64_t)a4);
  }
  else if (sub_1DA95C730())
  {
    return sub_1DA95B908(a1, a2, a3, (uint64_t)a4);
  }
  else
  {
    sub_1DA95C908(a1, a3, a4);
    return swift_retain();
  }
}

uint64_t sub_1DA95B120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v91 = a4;
  uint64_t v86 = a2;
  uint64_t v8 = (void *)*v4;
  uint64_t v85 = sub_1DA989F38();
  uint64_t v9 = *(void *)(v85 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v85);
  uint64_t v84 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v8[10];
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v10);
  uint64_t v80 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v83 = (char *)&v68 - v17;
  MEMORY[0x1F4188790](v16);
  int v19 = (char *)&v68 - v18;
  uint64_t v20 = type metadata accessor for ReloadConfiguration(0);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v79 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  unint64_t v24 = (char *)&v68 - v23;
  uint64_t v25 = v8[11];
  uint64_t v26 = v8[12];
  uint64_t v27 = v8[13];
  uint64_t v28 = v8[14];
  uint64_t v29 = v8[15];
  uint64_t v30 = v8[16];
  uint64_t v31 = v8[17];
  uint64_t v93 = v12;
  uint64_t v94 = v25;
  uint64_t v76 = v25;
  uint64_t v75 = v26;
  uint64_t v95 = v26;
  uint64_t v96 = v27;
  uint64_t v90 = v27;
  uint64_t v74 = v28;
  uint64_t v97 = v28;
  uint64_t v98 = v29;
  uint64_t v73 = v29;
  uint64_t v72 = v30;
  uint64_t v99 = v30;
  uint64_t v100 = v31;
  uint64_t v71 = v31;
  type metadata accessor for ReloadTaskPair();
  uint64_t v78 = ReloadTaskPair.__allocating_init()();
  uint64_t v32 = sub_1DA9357D4();
  uint64_t v81 = v9;
  uint64_t v87 = v24;
  uint64_t v88 = a1;
  uint64_t v77 = v13;
  if (v32)
  {
    uint64_t v82 = a3;
    unint64_t v33 = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v89 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v89(v19, a1, v12);
    swift_retain();
    uint64_t v34 = sub_1DA989F18();
    os_log_type_t v35 = sub_1DA98C548();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      unint64_t v70 = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v37 = v36;
      uint64_t v38 = swift_slowAlloc();
      uint64_t v69 = v38;
      *(_DWORD *)uint64_t v37 = 134349314;
      uint64_t v92 = v91;
      uint64_t v93 = v38;
      sub_1DA98C858();
      *(_WORD *)(v37 + 12) = 2082;
      uint64_t v68 = v37 + 14;
      uint64_t v39 = sub_1DA98CDD8();
      uint64_t v92 = sub_1DA8C5E00(v39, v40, &v93);
      sub_1DA98C858();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
      _os_log_impl(&dword_1DA795000, v34, v35, "Task [%{public}llu] %{public}s Replacing all tasks", (uint8_t *)v37, 0x16u);
      uint64_t v41 = v69;
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v41, -1, -1);
      uint64_t v42 = v37;
      unint64_t v33 = v70;
      MEMORY[0x1E0178DA0](v42, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
    }
    unint64_t v24 = v87;
    sub_1DA7E658C(v82, (uint64_t)v87);
    swift_release();
    a1 = v88;
    uint64_t v43 = v89;
  }
  else
  {
    sub_1DA8EFBB0(a3, (uint64_t)v24);
    uint64_t v44 = v13 + 16;
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    unint64_t v33 = v44 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v45 = (uint64_t)v5 + qword_1EBE59380;
  uint64_t v46 = v83;
  v43(v83, a1, v12);
  uint64_t v47 = sub_1DA989F18();
  os_log_type_t v48 = sub_1DA98C548();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v82 = v45;
  if (v49)
  {
    uint64_t v50 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 134349314;
    uint64_t v92 = v91;
    uint64_t v93 = v51;
    uint64_t v89 = v43;
    sub_1DA98C858();
    *(_WORD *)(v50 + 12) = 2082;
    unint64_t v70 = v33;
    uint64_t v52 = v90;
    uint64_t v53 = sub_1DA98CDD8();
    uint64_t v92 = sub_1DA8C5E00(v53, v54, &v93);
    uint64_t v43 = v89;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v46, v12);
    _os_log_impl(&dword_1DA795000, v47, v48, "Task [%{public}llu] %{public}s Dispatching new task", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    uint64_t v55 = v51;
    a1 = v88;
    MEMORY[0x1E0178DA0](v55, -1, -1);
    uint64_t v56 = v50;
    unint64_t v24 = v87;
    MEMORY[0x1E0178DA0](v56, -1, -1);

    uint64_t v57 = v52;
    uint64_t v59 = (uint64_t)v80;
    uint64_t v58 = v81;
    uint64_t v60 = (uint64_t)v79;
    uint64_t v61 = v78;
    uint64_t v62 = v76;
    uint64_t v63 = v75;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v77 + 8))(v46, v12);
    uint64_t v59 = (uint64_t)v80;
    uint64_t v58 = v81;
    uint64_t v60 = (uint64_t)v79;
    uint64_t v61 = v78;
    uint64_t v62 = v76;
    uint64_t v63 = v75;
    uint64_t v57 = v90;
  }
  uint64_t v93 = v12;
  uint64_t v94 = v62;
  uint64_t v95 = v63;
  uint64_t v96 = v57;
  uint64_t v97 = v74;
  uint64_t v98 = v73;
  uint64_t v99 = v72;
  uint64_t v100 = v71;
  type metadata accessor for ReloadTask();
  v43((char *)v59, a1, v12);
  sub_1DA8EFBB0((uint64_t)v24, v60);
  uint64_t v64 = (uint64_t)v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v84, v82, v85);
  uint64_t v65 = v86;
  swift_bridgeObjectRetain();
  ReloadTask.__allocating_init(identifier:key:variantKeys:configuration:logger:)(v91, v59, v65, v60, v64);
  uint64_t v66 = swift_retain();
  sub_1DA824298(v66);
  swift_release();
  sub_1DA8518DC((uint64_t)v24);
  return v61;
}

uint64_t sub_1DA95B908(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v134 = a1;
  uint64_t v135 = a4;
  uint64_t v129 = a2;
  uint64_t v7 = (void *)*v4;
  uint64_t v8 = sub_1DA989F38();
  uint64_t v130 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = v7[10];
  os_log_t v132 = *(os_log_t *)(v136 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  unint64_t v128 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v110 - v15);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v131 = (char *)&v110 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v110 - v19;
  uint64_t v21 = type metadata accessor for ReloadConfiguration(0);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  unint64_t v24 = (char *)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v27 = (char *)&v110 - v26;
  unint64_t v28 = a3;
  uint64_t v140 = *(void **)(a3 + *(int *)(v25 + 32));
  uint64_t v138 = 0xA000000000000030;
  char v29 = static ReloadConfiguration.ReloadReason.== infix(_:_:)((unint64_t *)&v140, (unint64_t *)&v138);
  uint64_t v133 = v5;
  if ((v29 & 1) == 0)
  {
    uint64_t v45 = v135;
    unint64_t v115 = v28;
    uint64_t v113 = v16;
    uint64_t v114 = (uint64_t)v20;
    os_log_t v46 = v132;
    uint64_t v125 = v24;
    uint64_t v116 = v27;
    uint64_t v126 = v11;
    uint64_t v127 = v8;
    uint64_t v47 = v7[11];
    uint64_t v48 = v7[12];
    uint64_t v50 = (char *)v7[13];
    uint64_t v49 = v7[14];
    uint64_t v51 = v7[15];
    uint64_t v52 = v7[16];
    uint64_t v53 = v7[17];
    uint64_t v140 = (void *)v136;
    uint64_t v141 = v47;
    uint64_t v142 = v48;
    uint64_t v143 = v50;
    uint64_t v120 = v49;
    uint64_t v144 = v49;
    uint64_t v145 = v51;
    uint64_t v119 = v51;
    uint64_t v118 = v52;
    uint64_t v146 = v52;
    uint64_t v147 = v53;
    type metadata accessor for ReloadTaskPair();
    uint64_t v54 = ReloadTaskPair.__allocating_init()();
    uint64_t v55 = *(void *)((char *)v5 + qword_1EBE59370);
    uint64_t v56 = sub_1DA9357DC();
    uint64_t v124 = v54;
    uint64_t v123 = v55;
    uint64_t v122 = v47;
    uint64_t v121 = v48;
    unint64_t v128 = v50;
    uint64_t v117 = v53;
    if (v56)
    {
      uint64_t v57 = v45;
      swift_retain();
      uint64_t v58 = (uint64_t)v116;
      sub_1DA7E658C(v115, (uint64_t)v116);
      os_log_t v59 = v46;
      Class isa = (void (*)(uint64_t, uint64_t, uint64_t))v46[2].isa;
      unint64_t v115 = (unint64_t)&v46[2] & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v61 = v114;
      isa(v114, v134, v136);
      swift_retain_n();
      uint64_t v62 = sub_1DA989F18();
      os_log_type_t v63 = sub_1DA98C548();
      int v64 = v63;
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v65 = swift_slowAlloc();
        LODWORD(v111) = v64;
        uint64_t v66 = v65;
        uint64_t v112 = (uint64_t *)swift_slowAlloc();
        uint64_t v140 = v112;
        *(_DWORD *)uint64_t v66 = 134349826;
        uint64_t v138 = v57;
        sub_1DA98C858();
        *(_WORD *)(v66 + 12) = 2082;
        uint64_t v110 = v66 + 14;
        uint64_t v67 = v131;
        uint64_t v68 = (void (*)(char *, uint64_t, uint64_t))isa;
        uint64_t v113 = isa;
        uint64_t v69 = v136;
        v68(v131, v61, v136);
        unint64_t v70 = (void (*)(uint64_t, uint64_t))v59[1].isa;
        v70(v61, v69);
        os_log_t v132 = v62;
        uint64_t v71 = sub_1DA98CDD8();
        unint64_t v73 = v72;
        v70((uint64_t)v67, v69);
        uint64_t v138 = sub_1DA8C5E00(v71, v73, (uint64_t *)&v140);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        *(_WORD *)(v66 + 22) = 2082;
        uint64_t v74 = sub_1DA850510();
        uint64_t v138 = sub_1DA8C5E00(v74, v75, (uint64_t *)&v140);
        sub_1DA98C858();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v66 + 32) = 2082;
        swift_beginAccess();
        uint64_t v76 = ReloadConfiguration.description.getter();
        uint64_t v137 = sub_1DA8C5E00(v76, v77, (uint64_t *)&v140);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        os_log_t v78 = v132;
        _os_log_impl(&dword_1DA795000, v132, (os_log_type_t)v111, "Task [%{public}llu] %{public}s Replacing queued task %{public}s with new configuration %{public}s", (uint8_t *)v66, 0x2Au);
        uint64_t v79 = v112;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v79, -1, -1);
        uint64_t v80 = (uint64_t)v67;
        MEMORY[0x1E0178DA0](v66, -1, -1);
        swift_release();

        uint64_t v81 = v128;
        uint64_t v82 = v129;
        uint64_t v83 = v113;
LABEL_11:
        uint64_t v102 = v127;
        uint64_t v103 = (uint64_t)v126;
        uint64_t v104 = v130;
        uint64_t v105 = (uint64_t)v125;
LABEL_15:
        uint64_t v106 = v136;
        uint64_t v140 = (void *)v136;
        uint64_t v141 = v122;
        uint64_t v142 = v121;
        uint64_t v143 = v81;
        uint64_t v144 = v120;
        uint64_t v145 = v119;
        uint64_t v146 = v118;
        uint64_t v147 = v117;
        type metadata accessor for ReloadTask();
        v83(v80, v134, v106);
        swift_beginAccess();
        sub_1DA8EFBB0(v58, v105);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 16))(v103, (uint64_t)v133 + qword_1EBE59380, v102);
        swift_bridgeObjectRetain();
        ReloadTask.__allocating_init(identifier:key:variantKeys:configuration:logger:)(v135, v80, v82, v105, v103);
        uint64_t v107 = swift_retain();
        uint64_t v84 = v124;
        sub_1DA8AA278(v107);
        sub_1DA9357D4();
        uint64_t v108 = swift_retain();
        sub_1DA824298(v108);
        swift_release();
        sub_1DA8518DC(v58);
        return v84;
      }
      ((void (*)(uint64_t, uint64_t))v46[1].isa)(v61, v136);
      swift_release_n();

      uint64_t v80 = (uint64_t)v131;
      uint64_t v82 = v129;
      uint64_t v83 = isa;
    }
    else
    {
      uint64_t v85 = v45;
      uint64_t v58 = (uint64_t)v116;
      sub_1DA8EFBB0(v115, (uint64_t)v116);
      os_log_t v86 = v46;
      unint64_t v87 = (unint64_t)&v46[2];
      uint64_t v83 = (void (*)(uint64_t, uint64_t, uint64_t))v46[2].isa;
      unint64_t v115 = v87 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v88 = (char *)v113;
      v83((uint64_t)v113, v134, v136);
      uint64_t v89 = sub_1DA989F18();
      os_log_type_t v90 = sub_1DA98C548();
      if (os_log_type_enabled(v89, v90))
      {
        uint64_t v91 = swift_slowAlloc();
        uint64_t v114 = swift_slowAlloc();
        uint64_t v140 = (void *)v114;
        *(_DWORD *)uint64_t v91 = 134349570;
        uint64_t v138 = v85;
        uint64_t v112 = &v139;
        sub_1DA98C858();
        *(_WORD *)(v91 + 12) = 2082;
        uint64_t v111 = v91 + 14;
        uint64_t v92 = v131;
        uint64_t v93 = v136;
        v83((uint64_t)v131, (uint64_t)v88, v136);
        uint64_t v94 = (void (*)(char *, uint64_t))v86[1].isa;
        v94(v88, v93);
        os_log_t v132 = v89;
        uint64_t v95 = sub_1DA98CDD8();
        unint64_t v97 = v96;
        v94(v92, v93);
        uint64_t v138 = sub_1DA8C5E00(v95, v97, (uint64_t *)&v140);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        *(_WORD *)(v91 + 22) = 2082;
        swift_beginAccess();
        uint64_t v98 = ReloadConfiguration.description.getter();
        uint64_t v137 = sub_1DA8C5E00(v98, v99, (uint64_t *)&v140);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        os_log_t v100 = v132;
        _os_log_impl(&dword_1DA795000, v132, v90, "Task [%{public}llu] %{public}s Added queued task with configuration %{public}s", (uint8_t *)v91, 0x20u);
        uint64_t v101 = v114;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v101, -1, -1);
        uint64_t v80 = (uint64_t)v92;
        MEMORY[0x1E0178DA0](v91, -1, -1);

        uint64_t v81 = v128;
        uint64_t v82 = v129;
        goto LABEL_11;
      }
      ((void (*)(char *, uint64_t))v86[1].isa)(v88, v136);

      uint64_t v80 = (uint64_t)v131;
      uint64_t v82 = v129;
    }
    uint64_t v102 = v127;
    uint64_t v103 = (uint64_t)v126;
    uint64_t v104 = v130;
    uint64_t v105 = (uint64_t)v125;
    uint64_t v81 = v128;
    goto LABEL_15;
  }
  uint64_t v30 = v135;
  os_log_t v31 = v132;
  Class v32 = v132[2].isa;
  unint64_t v33 = v128;
  ((void (*)(char *, uint64_t, uint64_t))v32)(v128, v134, v136);
  uint64_t v34 = sub_1DA989F18();
  os_log_type_t v35 = sub_1DA98C548();
  int v36 = v35;
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v134 = swift_slowAlloc();
    uint64_t v140 = (void *)v134;
    *(_DWORD *)uint64_t v37 = 134349314;
    uint64_t v138 = v30;
    sub_1DA98C858();
    *(_WORD *)(v37 + 12) = 2082;
    uint64_t v130 = v37 + 14;
    LODWORD(v135) = v36;
    uint64_t v38 = v131;
    uint64_t v39 = v136;
    ((void (*)(char *, char *, uint64_t))v32)(v131, v33, v136);
    unint64_t v40 = (void (*)(char *, uint64_t))v31[1].isa;
    v40(v33, v39);
    uint64_t v41 = sub_1DA98CDD8();
    unint64_t v43 = v42;
    v40(v38, v39);
    uint64_t v138 = sub_1DA8C5E00(v41, v43, (uint64_t *)&v140);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v34, (os_log_type_t)v135, "Task [%{public}llu] %{public}s Rejecting attempt to queue an .initial reload", (uint8_t *)v37, 0x16u);
    uint64_t v44 = v134;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v44, -1, -1);
    MEMORY[0x1E0178DA0](v37, -1, -1);
  }
  else
  {
    ((void (*)(char *, uint64_t))v31[1].isa)(v33, v136);
  }

  uint64_t v84 = *(void *)((char *)v133 + qword_1EBE59370);
  swift_retain();
  return v84;
}

uint64_t sub_1DA95C53C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = type metadata accessor for ReloadConfiguration(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a3 == 3)
  {
    char v8 = 0;
    return v8 & 1;
  }
  uint64_t v9 = sub_1DA9357D4();
  if (!v9)
  {
    sub_1DA8EFBB0(a1, (uint64_t)v7);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(v9 + *(void *)(*(void *)v9 + 168) + *(int *)(v5 + 24));
  sub_1DA8EFBB0(a1, (uint64_t)v7);
  if (v10 >> 61 != 3)
  {
LABEL_8:
    sub_1DA8518DC((uint64_t)v7);
    goto LABEL_9;
  }
  unint64_t v11 = *(void *)&v7[*(int *)(v5 + 24)];
  sub_1DA8518DC((uint64_t)v7);
  if (v11 >> 61 == 3) {
    goto LABEL_12;
  }
LABEL_9:
  if (!sub_1DA9357D4())
  {
LABEL_12:
    char v8 = 1;
    return v8 & 1;
  }
  uint64_t result = sub_1DA9357D4();
  if (result)
  {
    if (sub_1DA7E6E44(result + *(void *)(*(void *)result + 168))) {
      goto LABEL_12;
    }
    uint64_t result = sub_1DA9357D4();
    if (result)
    {
      swift_bridgeObjectRetain();
      char v13 = sub_1DA98C408();
      swift_bridgeObjectRelease();
      char v8 = v13 ^ 1;
      return v8 & 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA95C730()
{
  if (!sub_1DA9357DC()) {
    goto LABEL_4;
  }
  uint64_t result = sub_1DA9357DC();
  if (result)
  {
    if (sub_1DA7E6E44(result + *(void *)(*(void *)result + 168)))
    {
LABEL_4:
      char v1 = 1;
      return v1 & 1;
    }
    uint64_t result = sub_1DA9357DC();
    if (result)
    {
      swift_bridgeObjectRetain();
      char v2 = sub_1DA98C408();
      swift_bridgeObjectRelease();
      char v1 = v2 ^ 1;
      return v1 & 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ReloadTaskPairResolver.deinit()
{
  uint64_t v1 = v0 + qword_1EBE59380;
  uint64_t v2 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t ReloadTaskPairResolver.__deallocating_deinit()
{
  ReloadTaskPairResolver.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA95C908(uint64_t a1, uint64_t a2, NSObject *a3)
{
  os_log_t v44 = a3;
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v4 = *v3;
  uint64_t v5 = *v3;
  uint64_t v6 = type metadata accessor for ReloadConfiguration(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v4 + 80);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v7);
  unint64_t v43 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  uint64_t v16 = *(uint64_t *)((char *)v3 + qword_1EBE59370);
  if (sub_1DA9357D4())
  {
    uint64_t v49 = 0;
    *(void *)&long long v50 = 0xE000000000000000;
    swift_retain();
    sub_1DA98CA18();
    swift_bridgeObjectRelease();
    uint64_t v49 = 0x3A746E6572727543;
    *(void *)&long long v50 = 0xEF5B206B73617420;
    sub_1DA850510();
    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
    sub_1DA98C148();
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v48 = v16;
  uint64_t v17 = sub_1DA9357DC();
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v49 = 0;
    *(void *)&long long v50 = 0xE000000000000000;
    swift_retain();
    sub_1DA98CA18();
    os_log_t v55 = (os_log_t)v49;
    uint64_t v56 = v50;
    sub_1DA98C148();
    uint64_t v19 = *(void *)(v5 + 136);
    uint64_t v49 = v10;
    long long v50 = *(_OWORD *)(v5 + 88);
    long long v51 = *(_OWORD *)(v5 + 104);
    long long v52 = *(_OWORD *)(v5 + 120);
    uint64_t v53 = v19;
    uint64_t v54 = v18;
    type metadata accessor for ReloadTask();
    swift_getWitnessTable();
    sub_1DA98CE18();
    sub_1DA98C148();
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v45 = v5;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v21 = v15;
  v20(v15, v46, v10);
  uint64_t v22 = (uint64_t)v9;
  sub_1DA8EFBB0(v47, (uint64_t)v9);
  uint64_t v24 = v57;
  unint64_t v23 = v58;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1DA989F18();
  os_log_type_t v26 = sub_1DA98C548();
  int v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v42 = v24;
    uint64_t v29 = v28;
    uint64_t v47 = swift_slowAlloc();
    uint64_t v49 = v47;
    *(_DWORD *)uint64_t v29 = 134349826;
    os_log_t v55 = v44;
    LODWORD(v46) = v27;
    sub_1DA98C858();
    *(_WORD *)(v29 + 12) = 2082;
    uint64_t v41 = v22;
    os_log_t v44 = v25;
    uint64_t v30 = v43;
    v20(v43, (uint64_t)v21, v10);
    os_log_t v31 = *(void (**)(char *, uint64_t))(v11 + 8);
    v31(v21, v10);
    uint64_t v32 = sub_1DA98CDD8();
    unint64_t v34 = v33;
    v31(v30, v10);
    os_log_t v55 = (os_log_t)sub_1DA8C5E00(v32, v34, &v49);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 2082;
    uint64_t v35 = v41;
    uint64_t v36 = ReloadConfiguration.description.getter();
    os_log_t v55 = (os_log_t)sub_1DA8C5E00(v36, v37, &v49);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA8518DC(v35);
    *(_WORD *)(v29 + 32) = 2082;
    swift_bridgeObjectRetain();
    os_log_t v55 = (os_log_t)sub_1DA8C5E00(v42, v23, &v49);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    os_log_t v38 = v44;
    _os_log_impl(&dword_1DA795000, v44, (os_log_type_t)v46, "Task [%{public}llu] %{public}s Ignoring low-priority task with configuration: %{public}s; %{public}s",
      (uint8_t *)v29,
      0x2Au);
    uint64_t v39 = v47;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v39, -1, -1);
    MEMORY[0x1E0178DA0](v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, v10);

    sub_1DA8518DC(v22);
    swift_bridgeObjectRelease_n();
  }
  return v48;
}

uint64_t sub_1DA95CE9C()
{
  uint64_t result = sub_1DA989F38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ReloadTaskPairResolver()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for ReloadTaskPairResolver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ReloadTaskPairResolver);
}

uint64_t dispatch thunk of ReloadTaskPairResolver.__allocating_init(taskPair:allowDebounce:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of ReloadTaskPairResolver.taskPair(for:variantKeys:configuration:taskIdentifier:state:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_1DA95CFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v21 = a6;
  uint64_t v20 = a7;
  uint64_t v12 = sub_1DA98A888();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = ((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(os_unfair_lock_s **)(v16 + 16);
  swift_retain();
  os_unfair_lock_lock(v17);
  uint64_t v18 = a1 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  swift_beginAccess();
  (*(void (**)(NSObject *, uint64_t, uint64_t))(v13 + 16))(v15, v18, v12);
  sub_1DA8EA4C8(v15, a2, a3, a4, a5, v21);
  swift_beginAccess();
  (*(void (**)(uint64_t, NSObject *, uint64_t))(v13 + 24))(v18, v15, v12);
  swift_endAccess();
  (*(void (**)(NSObject *, uint64_t))(v13 + 8))(v15, v12);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
  swift_release();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
  sub_1DA7A0410((unint64_t *)&unk_1EBE66AC0, &qword_1EBE66AE0);
  sub_1DA98A078();
  swift_release();
  swift_release();
  return sub_1DA872360(a3, a4, a5);
}

uint64_t sub_1DA95D1D0()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  uint64_t v2 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA95D280()
{
  return type metadata accessor for EnvironmentProvider();
}

uint64_t type metadata accessor for EnvironmentProvider()
{
  uint64_t result = qword_1EBE62060;
  if (!qword_1EBE62060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DA95D2D4()
{
  uint64_t result = sub_1DA98A888();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DA95D374@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = v3 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  swift_beginAccess();
  uint64_t v7 = sub_1DA98A888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v6, v7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_1DA95D42C()
{
  return sub_1DA98A0F8();
}

uint64_t sub_1DA95D4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA98A3F8();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1DA98A888();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1;
  v16[0] = a1;
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(os_unfair_lock_s **)(v10 + 16);
  swift_retain();
  os_unfair_lock_lock(v11);
  uint64_t v12 = v9 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  uint64_t v13 = *(void *)(a2
                  + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider
                  + 24);
  uint64_t v14 = *(void *)(a2
                  + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider
                  + 32);
  __swift_project_boxed_opaque_existential_0((void *)(a2 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider), v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1DA7CB898();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE630C8);
  sub_1DA7A0410(&qword_1EBE630D0, &qword_1EBE630C8);
  sub_1DA98C918();
  sub_1DA98A508();
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 24))(v12, v8, v5);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  swift_release();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
  sub_1DA7A0410((unint64_t *)&unk_1EBE66AC0, &qword_1EBE66AE0);
  sub_1DA98A078();
  return swift_release();
}

uint64_t sub_1DA95D75C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA98A888();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v16[-v9];
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v12);
  uint64_t v13 = a1 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v10, v13, v4);
  sub_1DA84F724(a2, (uint64_t)v7);
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 24))(v13, v7, v4);
  swift_endAccess();
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  v14(v10, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  swift_release();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66AE0);
  sub_1DA7A0410((unint64_t *)&unk_1EBE66AC0, &qword_1EBE66AE0);
  sub_1DA98A078();
  return swift_release();
}

uint64_t dispatch thunk of ClientExtensionInfoInterface.extensionInfo(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1DA95D998()
{
  uint64_t v44 = type metadata accessor for RemoteActivityArchiveBudget();
  MEMORY[0x1F4188790](v44);
  uint64_t v43 = (uint64_t)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v39 - v4;
  *(void *)&long long v52 = 0;
  *((void *)&v52 + 1) = 0xE000000000000000;
  unint64_t v6 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](28);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v7 = *((void *)&v52 + 1);
  uint64_t v8 = v52;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_47;
  }
  uint64_t v10 = Strong;
  uint64_t v11 = sub_1DA7BEF9C(v6);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v8 = v11;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void *)(v8 + 16);
    if (v42)
    {
      uint64_t v12 = *(void *)(v8 + 32);
      uint64_t v40 = v8 + 32;
      v39[1] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1DA98CA38();
      uint64_t v55 = v14;
      uint64_t v49 = *(void *)(v12 + 16);
      if (!v49) {
        goto LABEL_46;
      }
      uint64_t v7 = v13;
      uint64_t v47 = 0;
      uint64_t v41 = v5;
      uint64_t v45 = 1;
      uint64_t v46 = MEMORY[0x1E4FBC868];
      while (1)
      {
        uint64_t v15 = 0;
        uint64_t v48 = v12;
        uint64_t v16 = (unsigned __int8 *)(v12 + 64);
        unint64_t v1 = (char *)(v12 + 64);
        while (1)
        {
          uint64_t v17 = v15 + 1;
          if (__OFADD__(v15, 1))
          {
            __break(1u);
LABEL_45:
            swift_bridgeObjectRelease();
            goto LABEL_46;
          }
          uint64_t v8 = *((void *)v1 - 2);
          unint64_t v18 = *((void *)v1 - 1);
          char v19 = *v1;
          BOOL v20 = *((void *)v1 - 4) == v7 && *((void *)v1 - 3) == v55;
          if (v20 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v1 += 40;
          ++v15;
          if (v17 == v49) {
            goto LABEL_46;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v8, v18, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = sub_1DA8F6590(v8, v18, v19);
        uint64_t v22 = v21;
        sub_1DA79EB2C(v8, v18, v19);
        if (!v22) {
          goto LABEL_47;
        }
        uint64_t v23 = sub_1DA98CA38();
        uint64_t v25 = v24;
        uint64_t v26 = *(void *)(v48 + 16);
        if (!v26) {
          goto LABEL_45;
        }
        uint64_t v27 = v23;
        uint64_t v55 = v7;
        while (1)
        {
          uint64_t v7 = *((void *)v16 - 2);
          uint64_t v8 = *((void *)v16 - 1);
          unint64_t v1 = (char *)*v16;
          BOOL v28 = *((void *)v16 - 4) == v27 && *((void *)v16 - 3) == v25;
          if (v28 || (sub_1DA98CE58() & 1) != 0) {
            break;
          }
          v16 += 40;
          if (!--v26) {
            goto LABEL_45;
          }
        }
        swift_bridgeObjectRetain();
        sub_1DA7A1AA8(v7, v8, (char)v1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        switch((unint64_t)v1)
        {
          case 1uLL:
            uint64_t v54 = &off_1F34D99D0;
            unint64_t v29 = MEMORY[0x1E4FBB3D0];
            goto LABEL_32;
          case 2uLL:
            unint64_t v53 = MEMORY[0x1E4FBB1A0];
            uint64_t v54 = &off_1F34D99C8;
            *(void *)&long long v52 = v7;
            *((void *)&v52 + 1) = v8;
            swift_bridgeObjectRetain();
            break;
          case 3uLL:
            unint64_t v53 = MEMORY[0x1E4F277C0];
            uint64_t v54 = &off_1F34D5038;
            *(void *)&long long v52 = v7;
            *((void *)&v52 + 1) = v8;
            sub_1DA79ED98(v7, v8);
            break;
          case 4uLL:
            id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
            unint64_t v53 = sub_1DA82FC9C();
            uint64_t v54 = &off_1F34D9D00;
            *(void *)&long long v52 = v30;
            break;
          default:
            uint64_t v54 = &off_1F34D9D78;
            unint64_t v29 = MEMORY[0x1E4FBC1C8];
LABEL_32:
            unint64_t v53 = v29;
            *(void *)&long long v52 = v7;
            break;
        }
        sub_1DA7A19A4(&v52, (uint64_t)v51);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE589D0);
        if (!swift_dynamicCast()) {
          goto LABEL_48;
        }
        long long v31 = v50;
        sub_1DA79EB2C(v7, v8, (char)v1);
        if (*((void *)&v31 + 1) >> 60 == 15)
        {
          while (1)
          {
LABEL_46:
            swift_bridgeObjectRelease();
LABEL_47:
            sub_1DA98CBB8();
            __break(1u);
LABEL_48:
            long long v50 = xmmword_1DA993170;
            sub_1DA79EB2C(v7, v8, (char)v1);
          }
        }
        sub_1DA9890E8();
        swift_allocObject();
        sub_1DA9890D8();
        sub_1DA95E7B0(&qword_1EA8E59C0);
        uint64_t v32 = (uint64_t)v41;
        uint64_t v33 = v47;
        sub_1DA9890C8();
        uint64_t v10 = v46;
        LOBYTE(v1) = v48;
        if (v33)
        {
          swift_release();
          sub_1DA7A1ACC(v31, *((unint64_t *)&v31 + 1));
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v10;
        }
        uint64_t v8 = v43;
        sub_1DA7B271C(v32, v43);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v52 = v10;
        sub_1DA9179A8(v8, v55, v22, isUniquelyReferenced_nonNull_native);
        uint64_t v10 = v52;
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DA7A1ACC(v31, *((unint64_t *)&v31 + 1));
        sub_1DA7B2780(v32);
        swift_bridgeObjectRelease();
        if (v45 == v42) {
          break;
        }
        uint64_t v46 = v10;
        uint64_t v47 = 0;
        uint64_t v35 = v45 + 1;
        uint64_t v12 = *(void *)(v40 + 8 * v45);
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_1DA98CA38();
        uint64_t v55 = v36;
        uint64_t v37 = *(void *)(v12 + 16);
        uint64_t v45 = v35;
        uint64_t v49 = v37;
        if (!v37) {
          goto LABEL_46;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = MEMORY[0x1E4FBC868];
    }
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t ChronoMetadataStore.RemoteActivityArchiveBudgetStore.deinit()
{
  swift_weakDestroy();
  return v0;
}

uint64_t sub_1DA95E17C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    uint64_t v6 = *(void *)(Strong + 24);
    uint64_t v7 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v7);
    uint64_t v8 = *(void *)(v5 + 64);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    swift_release();
    if (v8)
    {
      sub_1DA989118();
      swift_allocObject();
      sub_1DA989108();
      uint64_t v9 = type metadata accessor for RemoteActivityArchiveBudget();
      sub_1DA95E7B0(&qword_1EA8E59C8);
      uint64_t v10 = sub_1DA9890F8();
      if (v2) {
        return swift_release();
      }
      uint64_t v12 = v10;
      unint64_t v13 = v11;
      unint64_t v14 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
      MEMORY[0x1E01772A0](83);
      uint64_t v28 = v14;
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA98CA38();
      sub_1DA98C148();
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      uint64_t v15 = (uint64_t *)(a1 + *(int *)(v9 + 24));
      uint64_t v16 = *v15;
      uint64_t v17 = v15[1];
      swift_bridgeObjectRetain_n();
      uint64_t v18 = sub_1DA79EBAC(v16, v17);
      unint64_t v20 = v19;
      char v22 = v21;
      sub_1DA8E40CC(v18, v19, v21);
      sub_1DA79EB2C(v18, v20, v22);
      swift_bridgeObjectRelease();
      sub_1DA98C148();
      sub_1DA79ED98(v12, v13);
      sub_1DA79ED98(v12, v13);
      uint64_t v23 = sub_1DA79EB98(v12, v13);
      unint64_t v25 = v24;
      LOBYTE(v18) = v26;
      sub_1DA8E40CC(v23, v24, v26);
      sub_1DA79EB2C(v23, v25, v18);
      sub_1DA79DA70(v12, v13);
      sub_1DA98C148();
      if (swift_weakLoadStrong())
      {
        sub_1DA7BEF9C(v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1DA79DA70(v12, v13);
        return swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
  uint64_t result = sub_1DA98CBB8();
  __break(1u);
  return result;
}

uint64_t sub_1DA95E544(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v7 = Strong;
  uint64_t v8 = *(void *)(Strong + 24);
  uint64_t v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  uint64_t v10 = *(void *)(v7 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  swift_release();
  swift_release();
  if (!v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v11 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](24);
  uint64_t v18 = v11;
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1DA79EBAC(a1, a2);
  unint64_t v14 = v13;
  char v16 = v15;
  sub_1DA8E40CC(v12, v13, v15);
  sub_1DA79EB2C(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
    return result;
  }
  sub_1DA7BEF9C(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA95E7B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RemoteActivityArchiveBudget();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ChronoMetadataStore.RemoteActivityArchiveBudgetStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.RemoteActivityArchiveBudgetStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.RemoteActivityArchiveBudgetStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.RemoteActivityArchiveBudgetStore.allBudgets()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableRemoteActivityArchiveBudgetStore()
{
  return self;
}

uint64_t method lookup function for ChronoMetadataStore.MutableRemoteActivityArchiveBudgetStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChronoMetadataStore.MutableRemoteActivityArchiveBudgetStore);
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableRemoteActivityArchiveBudgetStore.update(budget:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableRemoteActivityArchiveBudgetStore.delete(budgetID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1DA95E914()
{
  unint64_t v1 = sub_1DA79C348(MEMORY[0x1E4FBC860]);
  MEMORY[0x1E01772A0](69);
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA98CA38();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  sub_1DA7BEF9C(v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t RelevanceCacheManagerProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t RelevanceCacheManagerProvider.init()()
{
  return v0;
}

uint64_t sub_1DA95EAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DA7A1A44(a1, (uint64_t)v14);
  sub_1DA7A1A44(a2, (uint64_t)v13);
  sub_1DA7C788C(a3, (uint64_t)v9);
  type metadata accessor for RelevanceCacheManager();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = RelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)((uint64_t)v14, (uint64_t)v13, (uint64_t)v9);
  if (!v3)
  {
    uint64_t v10 = v11;
    sub_1DA95EBD4();
  }
  return v10;
}

unint64_t sub_1DA95EBD4()
{
  unint64_t result = qword_1EBE5A9D8;
  if (!qword_1EBE5A9D8)
  {
    type metadata accessor for RelevanceCacheManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE5A9D8);
  }
  return result;
}

uint64_t RelevanceCacheManagerProvider.deinit()
{
  return v0;
}

uint64_t RelevanceCacheManagerProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of RelevanceCacheManagerProviding.newRelevanceCacheManager(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for RelevanceCacheManagerProvider()
{
  return self;
}

uint64_t method lookup function for RelevanceCacheManagerProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RelevanceCacheManagerProvider);
}

uint64_t dispatch thunk of RelevanceCacheManagerProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of RelevanceCacheManagerProvider.newRelevanceCacheManager(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of RelevanceCacheManaging.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of RelevanceCacheManaging.archiveFilePromise(relevanceKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of RelevanceCacheManaging.ingestFetchResult(for:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of RelevanceCacheManaging.rebuildCache()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of RelevanceCacheManaging.remove(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of RelevanceCacheManaging.removeAll(keeping:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1DA95EDE4()
{
  return *(void *)(v0 + 16);
}

uint64_t MockRelevanceCacheManager.__allocating_init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:beforeFirstUnlock:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = swift_allocObject();
  MockRelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:beforeFirstUnlock:)(a1, a2, a3, a4);
  return v8;
}

uint64_t MockRelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:beforeFirstUnlock:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v25 = a3;
  uint64_t v8 = sub_1DA989078();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1DA989098();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v13 - 8);
  char v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    sub_1DA989018();
    sub_1DA7D2218(MEMORY[0x1E4FBC860]);
    sub_1DA9604B4(&qword_1EBE61C88, 255, MEMORY[0x1E4F26C20]);
    sub_1DA9892B8();
    sub_1DA988FE8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_willThrow();
    uint64_t v16 = v25;
  }
  else
  {
    *(unsigned char *)(v4 + 24) = 0;
    sub_1DA7A1A44(a1, (uint64_t)v24);
    sub_1DA7A1A44(a2, (uint64_t)v23);
    uint64_t v17 = v25;
    sub_1DA7C788C(v25, (uint64_t)v15);
    type metadata accessor for RelevanceCacheManager();
    swift_allocObject();
    uint64_t v18 = v22[1];
    uint64_t v19 = RelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)((uint64_t)v24, (uint64_t)v23, (uint64_t)v15);
    if (!v18)
    {
      uint64_t v20 = v19;
      sub_1DA802060(v17);
      __swift_destroy_boxed_opaque_existential_1(a2);
      __swift_destroy_boxed_opaque_existential_1(a1);
      *(void *)(v4 + 16) = v20;
      return v4;
    }
    uint64_t v16 = v17;
  }
  sub_1DA802060(v16);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  type metadata accessor for MockRelevanceCacheManager();
  swift_deallocPartialClassInstance();
  return v4;
}

uint64_t type metadata accessor for MockRelevanceCacheManager()
{
  return self;
}

uint64_t MockRelevanceCacheManager.__allocating_init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA96024C(a1, a2, a3);
}

uint64_t sub_1DA95F15C(void *a1)
{
  return sub_1DA80389C(a1);
}

uint64_t sub_1DA95F180(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v2 = sub_1DA989A68();
    sub_1DA9604B4(&qword_1EA8E6B68, 255, MEMORY[0x1E4F58A68]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, *MEMORY[0x1E4F58A60], v2);
    return swift_willThrow();
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    void v7[2] = v5;
    v7[3] = v6;
    return sub_1DA95F4D8((uint64_t)sub_1DA96040C, (uint64_t)v7, (uint64_t)"ChronoKit/MockRelevanceCacheManager.swift", 41, 2, 57, (uint64_t)&unk_1F34DD420, (uint64_t)sub_1DA9606E8, sub_1DA960114);
  }
}

uint64_t sub_1DA95F2F4(uint64_t a1, uint64_t a2)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1DA960784;
  *(void *)(v7 + 24) = v6;
  swift_retain();
  v10[0] = v2;
  sub_1DA9607E4(v10);
  if (v3)
  {
    swift_release();
    return swift_release();
  }
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_1DA98CA18();
    sub_1DA98C148();
    void v10[3] = v2;
    type metadata accessor for RelevanceCacheManager();
    sub_1DA98CB58();
    sub_1DA98C148();
    uint64_t result = sub_1DA98CBB8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA95F4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = v9;
  if (swift_task_isCurrentExecutor())
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a1;
    *(void *)(v15 + 24) = a2;
    uint64_t v16 = a9(a8, v15, v12);
    if (v10)
    {
      swift_release();
      return v16;
    }
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return v16;
    }
    __break(1u);
  }
  sub_1DA98CA18();
  sub_1DA98C148();
  type metadata accessor for RelevanceCacheManager();
  sub_1DA98CB58();
  sub_1DA98C148();
  uint64_t result = sub_1DA98CBB8();
  __break(1u);
  return result;
}

uint64_t sub_1DA95F684()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0) {
    return sub_1DA95F2F4((uint64_t)sub_1DA95F788, 0);
  }
  uint64_t v1 = sub_1DA989A68();
  sub_1DA9604B4(&qword_1EA8E6B68, 255, MEMORY[0x1E4F58A68]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v1 - 8) + 104))(v2, *MEMORY[0x1E4F58A60], v1);
  return swift_willThrow();
}

uint64_t sub_1DA95F788()
{
  return sub_1DA805D5C();
}

uint64_t sub_1DA95F7AC(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v2 = sub_1DA989A68();
    sub_1DA9604B4(&qword_1EA8E6B68, 255, MEMORY[0x1E4F58A68]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, *MEMORY[0x1E4F58A60], v2);
    return swift_willThrow();
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    id v6[2] = v5;
    return sub_1DA95F2F4((uint64_t)sub_1DA960424, (uint64_t)v6);
  }
}

void sub_1DA95F8E4(uint64_t a1, void *a2)
{
  uint64_t v2 = OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache;
  if (*(void *)(a1 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache))
  {
    swift_retain();
    uint64_t v5 = sub_1DA989948();
    swift_release();
    id v6 = a2;
    sub_1DA8084A0(v5, v6);

    if (*(void *)(a1 + v2))
    {
      MEMORY[0x1F4188790](v7);
      swift_retain();
      sub_1DA989938();
      swift_release();
      swift_release();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1DA95F9E4(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v2 = sub_1DA989A68();
    sub_1DA9604B4(&qword_1EA8E6B68, 255, MEMORY[0x1E4F58A68]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, *MEMORY[0x1E4F58A60], v2);
    return swift_willThrow();
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    id v6[2] = v5;
    return sub_1DA95F4D8((uint64_t)sub_1DA960440, (uint64_t)v6, (uint64_t)"ChronoKit/MockRelevanceCacheManager.swift", 41, 2, 87, (uint64_t)&unk_1F34DD380, (uint64_t)sub_1DA9606E8, sub_1DA9601B0);
  }
}

uint64_t sub_1DA95FB54@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache;
  if (!*(void *)(result + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = result;
  swift_retain();
  uint64_t v8 = sub_1DA989948();
  swift_release();
  swift_bridgeObjectRetain();
  sub_1DA808C80(v8, a2);
  uint64_t v10 = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (!*(void *)(v7 + v5))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  MEMORY[0x1F4188790](result);
  swift_retain();
  sub_1DA989938();
  if (v3)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    swift_release();
    uint64_t v11 = sub_1DA8078C0(v10);
    uint64_t result = swift_release();
    *a3 = v11;
  }
  return result;
}

uint64_t MockRelevanceCacheManager.deinit()
{
  swift_release();
  return v0;
}

uint64_t MockRelevanceCacheManager.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA95FCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA96024C(a1, a2, a3);
}

uint64_t sub_1DA95FD08(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    uint64_t v2 = sub_1DA989A68();
    sub_1DA9604B4(&qword_1EA8E6B68, 255, MEMORY[0x1E4F58A68]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, *MEMORY[0x1E4F58A60], v2);
    return swift_willThrow();
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    void v7[2] = v5;
    v7[3] = v6;
    return sub_1DA95F4D8((uint64_t)sub_1DA96040C, (uint64_t)v7, (uint64_t)"ChronoKit/MockRelevanceCacheManager.swift", 41, 2, 57, (uint64_t)&unk_1F34DD420, (uint64_t)sub_1DA9606E8, sub_1DA960114);
  }
}

uint64_t sub_1DA95FE80()
{
  if (*(unsigned char *)(v0 + 24) != 1) {
    return sub_1DA95F2F4((uint64_t)sub_1DA95F788, 0);
  }
  uint64_t v1 = sub_1DA989A68();
  sub_1DA9604B4(&qword_1EA8E6B68, 255, MEMORY[0x1E4F58A68]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v1 - 8) + 104))(v2, *MEMORY[0x1E4F58A60], v1);
  return swift_willThrow();
}

uint64_t sub_1DA95FF88(uint64_t a1)
{
  return sub_1DA95F7AC(a1);
}

uint64_t sub_1DA95FFA0(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    uint64_t v2 = sub_1DA989A68();
    sub_1DA9604B4(&qword_1EA8E6B68, 255, MEMORY[0x1E4F58A68]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, *MEMORY[0x1E4F58A60], v2);
    return swift_willThrow();
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    id v6[2] = v5;
    return sub_1DA95F4D8((uint64_t)sub_1DA960828, (uint64_t)v6, (uint64_t)"ChronoKit/MockRelevanceCacheManager.swift", 41, 2, 87, (uint64_t)&unk_1F34DD380, (uint64_t)sub_1DA9606E8, sub_1DA9601B0);
  }
}

uint64_t sub_1DA960114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  swift_retain();
  uint64_t v9 = a3;
  sub_1DA96072C(&v9, &v10);
  uint64_t result = swift_release();
  if (!v3) {
    return v10;
  }
  return result;
}

uint64_t sub_1DA9601B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  swift_retain();
  uint64_t v9 = a3;
  sub_1DA96072C(&v9, &v10);
  uint64_t result = swift_release();
  if (!v3) {
    return v10;
  }
  return result;
}

uint64_t sub_1DA96024C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v17[-v11];
  sub_1DA7A1A44(a1, (uint64_t)v20);
  sub_1DA7A1A44(a2, (uint64_t)v19);
  sub_1DA7C788C(a3, (uint64_t)v12);
  type metadata accessor for MockRelevanceCacheManager();
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 24) = 0;
  sub_1DA7A1A44((uint64_t)v20, (uint64_t)v18);
  sub_1DA7A1A44((uint64_t)v19, (uint64_t)v17);
  sub_1DA7C788C((uint64_t)v12, (uint64_t)v9);
  type metadata accessor for RelevanceCacheManager();
  swift_allocObject();
  uint64_t v14 = RelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)((uint64_t)v18, (uint64_t)v17, (uint64_t)v9);
  if (v3)
  {
    sub_1DA802060((uint64_t)v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v15 = v14;
    sub_1DA802060((uint64_t)v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    *(void *)(v13 + 16) = v15;
  }
  sub_1DA802060(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v13;
}

void sub_1DA96040C(uint64_t a1@<X0>, void *a2@<X8>)
{
}

void sub_1DA960424(uint64_t a1)
{
  sub_1DA95F8E4(a1, *(void **)(v1 + 16));
}

uint64_t sub_1DA960440@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DA95FB54(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1DA96045C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1DA9604B4(&qword_1EA8E6B70, a2, (void (*)(uint64_t))type metadata accessor for MockRelevanceCacheManager);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DA9604B4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for MockRelevanceCacheManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MockRelevanceCacheManager);
}

uint64_t dispatch thunk of MockRelevanceCacheManager.unownedExecutor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.__allocating_init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:beforeFirstUnlock:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.archiveFilePromise(relevanceKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.ingestFetchResult(for:at:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.rebuildCache()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.remove(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.removeAll(keeping:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

void sub_1DA960678(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v6[2] = a1;
  long long v7 = *(_OWORD *)(v2 + 16);
  sub_1DA8051A8((void (*)(void *__return_ptr))sub_1DA807578, (uint64_t)v6);
  if (!v3) {
    *a2 = v5;
  }
}

uint64_t sub_1DA9606D8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_1DA9606E8@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

void *sub_1DA96072C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, void))(v2 + 16))(&v6, *a1);
  if (!v3) {
    *a2 = v6;
  }
  return result;
}

uint64_t sub_1DA960774()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DA960784()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DA9607AC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DA9607E4(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1DA960810()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DA960828@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DA960440(a1, a2);
}

uint64_t static LocaleChangeCoordinator.localeDidChangePublisher.getter()
{
  if (qword_1EBE59408 != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A260);
  sub_1DA7A0410(&qword_1EBE5A258, &qword_1EBE5A260);
  return sub_1DA98A0F8();
}

void sub_1DA9608F0()
{
  type metadata accessor for _PerAppLanguageOverrideObserver();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A250);
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1DA98A008();
  uint64_t v1 = self;
  v3[4] = sub_1DA962F5C;
  v3[5] = v0;
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 1107296256;
  id v3[2] = sub_1DA960B14;
  v3[3] = &block_descriptor_31_1;
  uint64_t v2 = _Block_copy(v3);
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_subscribeToAppLanguageChanges_, v2);
  _Block_release(v2);
  off_1EBE59640 = (_UNKNOWN *)v0;
}

uint64_t sub_1DA960A04()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DA9899B8();
  sub_1DA989FE8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DA960B14(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = sub_1DA98C038();
  uint64_t v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA960B80()
{
  objc_msgSend(self, sel_unsubscribeFromAppLanguageChanges);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA960BD0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A260);
  swift_allocObject();
  uint64_t result = sub_1DA98A008();
  qword_1EBE5A4D8 = result;
  return result;
}

uint64_t LocaleChangeCoordinator.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  LocaleChangeCoordinator.init(with:)(a1);
  return v2;
}

uint64_t LocaleChangeCoordinator.init(with:)(uint64_t a1)
{
  uint64_t v55 = a1;
  uint64_t v2 = sub_1DA98C718();
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v47 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58950);
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  MEMORY[0x1F4188790](v4);
  long long v50 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A90);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v46 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1DA98C5E8();
  uint64_t v45 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v44 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A1F8);
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v41 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DA98C598();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_1DA98C5F8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DA98B4A8();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v53 = v1;
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC870];
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  id v16 = objc_msgSend(self, sel_preferredLanguages);
  uint64_t v17 = sub_1DA98C288();

  *(void *)(v1 + 80) = v17;
  sub_1DA7A1A44(v55, (uint64_t)v57);
  swift_beginAccess();
  sub_1DA961618((uint64_t)v57, v1 + 32);
  swift_endAccess();
  unint64_t v18 = sub_1DA7A6D9C();
  sub_1DA98B478();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCC68], v11);
  v57[0] = (id)MEMORY[0x1E4FBC860];
  sub_1DA962F14((unint64_t *)&qword_1EBE65CA0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE65C80);
  sub_1DA7A0410((unint64_t *)&qword_1EBE65C88, &qword_1EBE65C80);
  sub_1DA98C918();
  *(void *)(v1 + 24) = sub_1DA98C638();
  if (qword_1EBE59650 != -1) {
    swift_once();
  }
  v57[0] = *((id *)off_1EBE59640 + 2);
  swift_retain();
  uint64_t v19 = v44;
  sub_1DA98C5D8();
  uint64_t v20 = v53;
  id v56 = *(id *)(v53 + 24);
  id v21 = v56;
  uint64_t v22 = sub_1DA98C5B8();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v40 = v23 + 56;
  uint64_t v24 = (uint64_t)v46;
  v39(v46, 1, 1, v22);
  id v25 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A250);
  sub_1DA7A0410(&qword_1EBE5A248, &qword_1EBE5A250);
  v38[3] = sub_1DA962F14((unint64_t *)&qword_1EBE62A98, (void (*)(uint64_t))sub_1DA7A6D9C);
  char v26 = v41;
  sub_1DA98A168();
  sub_1DA7A1AE0(v24, &qword_1EBE62A90);

  v38[1] = v18;
  uint64_t v45 = *(void *)(v45 + 8);
  ((void (*)(char *, uint64_t))v45)(v19, v54);
  swift_release();
  swift_allocObject();
  uint64_t v27 = v20;
  swift_weakInit();
  v38[2] = MEMORY[0x1E4F1AA58];
  sub_1DA7A0410(&qword_1EBE5A1F0, &qword_1EBE5A1F8);
  uint64_t v28 = v43;
  sub_1DA98A1A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v28);
  swift_beginAccess();
  sub_1DA989F98();
  swift_endAccess();
  swift_release();
  id v29 = objc_msgSend(self, sel_defaultCenter);
  id v30 = v47;
  sub_1DA98C728();

  sub_1DA98C5D8();
  v57[0] = *(id *)(v27 + 24);
  id v31 = v57[0];
  v39((char *)v24, 1, 1, v22);
  sub_1DA962F14((unint64_t *)&qword_1EBE62B08, MEMORY[0x1E4F27FC8]);
  id v32 = v31;
  uint64_t v33 = v49;
  unint64_t v34 = v50;
  sub_1DA98A168();
  sub_1DA7A1AE0(v24, &qword_1EBE62A90);

  ((void (*)(char *, uint64_t))v45)(v19, v54);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v30, v33);
  swift_allocObject();
  uint64_t v35 = v27;
  swift_weakInit();
  sub_1DA7A0410(&qword_1EBE58948, &qword_1EBE58950);
  uint64_t v36 = v52;
  sub_1DA98A1A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v36);
  swift_beginAccess();
  sub_1DA989F98();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v55);
  return v35;
}

uint64_t sub_1DA961618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA961680()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA9616B8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DA9619A4(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA961718(uint64_t a1)
{
  return sub_1DA9616B8(a1);
}

uint64_t sub_1DA961720()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = *(void **)(Strong + 80);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    uint64_t v1 = 0;
  }
  id v2 = objc_msgSend(self, sel_preferredLanguages);
  uint64_t v3 = (void *)sub_1DA98C288();

  if (!v1)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    type metadata accessor for KeepAliveTransaction();
    swift_initStackObject();
    KeepAliveTransaction.init(reason:)(0x6843656C61636F6CLL, 0xEC00000065676E61);
    swift_release();
    if (qword_1EBE62C40 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1DA989F38();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBE6F2E8);
    uint64_t v7 = sub_1DA989F18();
    os_log_type_t v8 = sub_1DA98C548();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1DA795000, v7, v8, "Locale preferred languages changed - exiting.", v9, 2u);
      MEMORY[0x1E0178DA0](v9, -1, -1);
    }

    exit(0);
  }
  char v4 = sub_1DA935CB0(v1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    goto LABEL_10;
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DA961F3C(0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA961920()
{
  return sub_1DA961720();
}

uint64_t static LocaleChangeCoordinator._simulateLocaleChangesForExtensions(_:)()
{
  if (qword_1EBE59408 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1DA989FE8();
  return swift_release();
}

uint64_t sub_1DA9619A4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1DA962E54(v1 + 32, (uint64_t)v53);
  if (!v54) {
    return sub_1DA7A1AE0((uint64_t)v53, &qword_1EBE588E0);
  }
  v41[2] = v1;
  sub_1DA7A1A44((uint64_t)v53, (uint64_t)v50);
  sub_1DA7A1AE0((uint64_t)v53, &qword_1EBE588E0);
  uint64_t v7 = v51;
  uint64_t v8 = v52;
  __swift_project_boxed_opaque_existential_0(v50, v51);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, v7, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  uint64_t v49 = MEMORY[0x1E4FBC860];
  uint64_t v11 = *(void *)(v9 + 16);
  if (v11)
  {
    v41[1] = v9;
    uint64_t v12 = v9 + 32;
    uint64_t v13 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v47 = (void (**)(char *, uint64_t))(v4 + 8);
    *(void *)&long long v10 = 138543618;
    long long v42 = v10;
    uint64_t v41[3] = MEMORY[0x1E4FBC840] + 8;
    do
    {
      sub_1DA7A1A44(v12, (uint64_t)v53);
      uint64_t v14 = v54;
      uint64_t v15 = v55;
      __swift_project_boxed_opaque_existential_0(v53, v54);
      (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15);
      MEMORY[0x1E0177400]();
      if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1DA98C2D8();
      }
      sub_1DA98C308();
      sub_1DA98C2A8();
      if (qword_1EBE62C40 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1DA989F38();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EBE6F2E8);
      sub_1DA7A1A44((uint64_t)v53, (uint64_t)v50);
      (*v13)(v6, a1, v3);
      uint64_t v17 = sub_1DA989F18();
      os_log_type_t v18 = sub_1DA98C548();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v46 = v11;
        uint64_t v20 = v19;
        uint64_t v43 = (void *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v48 = v45;
        *(_DWORD *)uint64_t v20 = v42;
        uint64_t v21 = v12;
        uint64_t v22 = v13;
        uint64_t v23 = v6;
        uint64_t v24 = v3;
        uint64_t v25 = a1;
        uint64_t v26 = v51;
        uint64_t v27 = v52;
        __swift_project_boxed_opaque_existential_0(v50, v51);
        uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 40);
        os_log_t v44 = v17;
        uint64_t v29 = v27;
        a1 = v25;
        uint64_t v3 = v24;
        uint64_t v6 = v23;
        uint64_t v13 = v22;
        uint64_t v12 = v21;
        uint64_t v30 = v28(v26, v29);
        *(void *)(v20 + 4) = v30;
        id v31 = v43;
        *uint64_t v43 = v30;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
        *(_WORD *)(v20 + 12) = 2082;
        sub_1DA7A0410(&qword_1EA8E6B78, &qword_1EBE5A0E8);
        uint64_t v32 = sub_1DA98CDD8();
        *(void *)(v20 + 14) = sub_1DA8C5E00(v32, v33, &v48);
        swift_bridgeObjectRelease();
        (*v47)(v6, v3);
        uint64_t v17 = v44;
        _os_log_impl(&dword_1DA795000, v44, v18, "[Locale] Per app language change detected for extension: %{public}@ (container: %{public}s).", (uint8_t *)v20, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v31, -1, -1);
        uint64_t v34 = v45;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v34, -1, -1);
        uint64_t v35 = v20;
        uint64_t v11 = v46;
        MEMORY[0x1E0178DA0](v35, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
        (*v47)(v6, v3);
      }

      sub_1DA7A1A44((uint64_t)v53, (uint64_t)v50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E48);
      type metadata accessor for WidgetExtension();
      if (swift_dynamicCast())
      {
        uint64_t v36 = v48;
        uint64_t v37 = *(void *)(v48 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeLock);
        os_log_t v38 = *(os_unfair_lock_s **)(v37 + 16);
        swift_retain();
        os_unfair_lock_lock(v38);
        *(unsigned char *)(v36 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateRequired) = 1;
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 16));
        swift_release();
        swift_release();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
      v12 += 40;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v39 = v49;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v39 = MEMORY[0x1E4FBC860];
  }
  sub_1DA961F3C(v39);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA961F3C(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1DA98B438();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v97 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DA98B4A8();
  uint64_t v96 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v95 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1DA98B428();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v92 = (NSObject **)((char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1DA98B4E8();
  MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = *(void *)(v3 + 72);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v85 = v16;
  os_log_t v86 = (char *)&v79 - v14;
  uint64_t v87 = v15;
  uint64_t v88 = v13;
  uint64_t v89 = v8;
  uint64_t v90 = v6;
  *(void *)(v3 + 72) = v19;
  if (qword_1EBE62C40 != -1) {
LABEL_46:
  }
    swift_once();
  uint64_t v20 = sub_1DA989F38();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EBE6F2E8);
  swift_bridgeObjectRetain_n();
  id v84 = (id)v21;
  uint64_t v22 = sub_1DA989F18();
  int v23 = sub_1DA98C548();
  BOOL v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
  uint64_t v91 = v5;
  if (!v24)
  {

    swift_bridgeObjectRelease_n();
    if (a1) {
      goto LABEL_18;
    }
LABEL_41:
    swift_beginAccess();
    sub_1DA962E54(v3 + 32, (uint64_t)aBlock);
    uint64_t v53 = v105;
    if (v105)
    {
      uint64_t v54 = v106;
      uint64_t v55 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v105);
      uint64_t v56 = *(v53 - 1);
      double v57 = MEMORY[0x1F4188790](v55);
      os_log_t v59 = (char *)&v79 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v56 + 16))(v59, v57);
      sub_1DA7A1AE0((uint64_t)aBlock, &qword_1EBE588E0);
      uint64_t v41 = (void *)(*((uint64_t (**)(void *, uint64_t (*)()))v54 + 2))(v53, v54);
      (*(void (**)(char *, void *))(v56 + 8))(v59, v53);
      uint64_t v48 = v41[2];
      if (!v48) {
        return swift_bridgeObjectRelease();
      }
      goto LABEL_53;
    }
    sub_1DA7A1AE0((uint64_t)aBlock, &qword_1EBE588E0);
LABEL_52:
    uint64_t v41 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v48 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v48) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_53;
  }
  id v2 = (uint8_t *)swift_slowAlloc();
  uint64_t v25 = swift_slowAlloc();
  aBlock[0] = v25;
  *(_DWORD *)id v2 = 136446210;
  uint64_t v82 = v25;
  if (!a1)
  {
    unint64_t v49 = 0xEE00736E6F69736ELL;
    uint64_t v50 = 0x65747865206C6C61;
    goto LABEL_40;
  }
  uint64_t v83 = v3;
  if ((unint64_t)a1 >> 62) {
    goto LABEL_59;
  }
  uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v81 = v2;
    int v80 = v23;
    if (v26)
    {
      uint64_t v79 = v22;
      *(void *)&long long v101 = MEMORY[0x1E4FBC860];
      uint64_t result = sub_1DA7F7A64(0, v26 & ~(v26 >> 63), 0);
      if (v26 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v28 = 0;
      uint64_t v29 = v101;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v30 = (id)MEMORY[0x1E0177C00](v28, a1);
        }
        else {
          id v30 = *(id *)(a1 + 8 * v28 + 32);
        }
        id v31 = v30;
        id v32 = objc_msgSend(v30, sel_description);
        uint64_t v33 = sub_1DA98C038();
        uint64_t v35 = v34;

        *(void *)&long long v101 = v29;
        unint64_t v37 = *(void *)(v29 + 16);
        unint64_t v36 = *(void *)(v29 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_1DA7F7A64(v36 > 1, v37 + 1, 1);
          uint64_t v29 = v101;
        }
        ++v28;
        *(void *)(v29 + 16) = v37 + 1;
        uint64_t v38 = v29 + 16 * v37;
        *(void *)(v38 + 32) = v33;
        *(void *)(v38 + 40) = v35;
      }
      while (v26 != v28);
      swift_bridgeObjectRelease();
      uint64_t v22 = v79;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = MEMORY[0x1E4FBC860];
    }
    *(void *)&long long v101 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE62A40);
    sub_1DA7A0410((unint64_t *)&qword_1EBE62A48, &qword_1EBE62A40);
    uint64_t v50 = sub_1DA98BFC8();
    unint64_t v49 = v51;
    swift_bridgeObjectRelease();
    uint64_t v3 = v83;
    id v2 = v81;
    int v23 = v80;
LABEL_40:
    *(void *)&long long v101 = sub_1DA8C5E00(v50, v49, aBlock);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v22, (os_log_type_t)v23, "[Locale] Locale changed detected for %{public}s!  Killing...", v2, 0xCu);
    uint64_t v52 = v82;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v52, -1, -1);
    MEMORY[0x1E0178DA0](v2, -1, -1);

    if (!a1) {
      goto LABEL_41;
    }
LABEL_18:
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0) {
        uint64_t v22 = (a1 & 0xFFFFFFFFFFFFFF8);
      }
      else {
        uint64_t v22 = a1;
      }
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1DA98CBD8();
      if (!v39)
      {
LABEL_51:
        swift_bridgeObjectRelease();
        goto LABEL_52;
      }
    }
    else
    {
      uint64_t v39 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v39) {
        goto LABEL_51;
      }
    }
    if (v39 >= 1) {
      break;
    }
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1DA98CBD8();
  }
  uint64_t v83 = v3;
  swift_beginAccess();
  uint64_t v40 = 0;
  uint64_t v41 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v42 = (id)MEMORY[0x1E0177C00](v40, a1);
    }
    else {
      id v42 = *(id *)(a1 + 8 * v40 + 32);
    }
    uint64_t v43 = v42;
    sub_1DA962E54(v3 + 32, (uint64_t)aBlock);
    if (!v105)
    {
      sub_1DA7A1AE0((uint64_t)aBlock, &qword_1EBE588E0);
      long long v101 = 0u;
      long long v102 = 0u;
      uint64_t v103 = 0;
LABEL_23:

      sub_1DA7A1AE0((uint64_t)&v101, &qword_1EBE58E50);
      goto LABEL_24;
    }
    sub_1DA7A1A44((uint64_t)aBlock, (uint64_t)v98);
    sub_1DA7A1AE0((uint64_t)aBlock, &qword_1EBE588E0);
    uint64_t v44 = v99;
    uint64_t v45 = v100;
    __swift_project_boxed_opaque_existential_0(v98, v99);
    ExtensionManaging.extension(for:)((uint64_t)v43, v44, v45);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
    if (!*((void *)&v102 + 1)) {
      goto LABEL_23;
    }
    sub_1DA7A19A4(&v101, (uint64_t)aBlock);
    sub_1DA7A1A44((uint64_t)aBlock, (uint64_t)&v101);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v41 = sub_1DA7CA994(0, v41[2] + 1, 1, v41);
    }
    unint64_t v47 = v41[2];
    unint64_t v46 = v41[3];
    if (v47 >= v46 >> 1) {
      uint64_t v41 = sub_1DA7CA994((void *)(v46 > 1), v47 + 1, 1, v41);
    }
    v41[2] = v47 + 1;
    sub_1DA7A19A4(&v101, (uint64_t)&v41[5 * v47 + 4]);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
LABEL_24:
    ++v40;
  }
  while (v39 != v40);
  swift_bridgeObjectRelease();
  uint64_t v3 = v83;
  uint64_t v48 = v41[2];
  if (!v48) {
    return swift_bridgeObjectRelease();
  }
LABEL_53:
  uint64_t v60 = (uint64_t)(v41 + 4);
  swift_bridgeObjectRetain();
  do
  {
    sub_1DA7A1A44(v60, (uint64_t)aBlock);
    uint64_t v61 = v105;
    uint64_t v62 = v106;
    __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v105);
    (*((void (**)(void *, uint64_t (*)()))v62 + 37))(v61, v62);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    v60 += 40;
    --v48;
  }
  while (v48);
  swift_bridgeObjectRelease_n();
  os_log_type_t v63 = sub_1DA989F18();
  os_log_type_t v64 = sub_1DA98C548();
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v65 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v65 = 0;
    _os_log_impl(&dword_1DA795000, v63, v64, "[Locale] Terminations completed!", v65, 2u);
    MEMORY[0x1E0178DA0](v65, -1, -1);
  }

  id v84 = *(id *)(v3 + 24);
  uint64_t v66 = v85;
  sub_1DA98B4C8();
  uint64_t v67 = v92;
  *uint64_t v92 = 2;
  uint64_t v68 = v93;
  uint64_t v69 = v94;
  (*(void (**)(void *, void, uint64_t))(v93 + 104))(v67, *MEMORY[0x1E4FBCAE8], v94);
  unint64_t v70 = v86;
  sub_1DA98B4D8();
  (*(void (**)(void *, uint64_t))(v68 + 8))(v67, v69);
  uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
  uint64_t v72 = v88;
  v71(v66, v88);
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = a1;
  uint64_t v106 = sub_1DA962EF4;
  uint64_t v107 = v73;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1DA7A6EE0;
  uint64_t v105 = &block_descriptor_19;
  uint64_t v74 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  unint64_t v75 = v95;
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  v98[0] = MEMORY[0x1E4FBC860];
  sub_1DA962F14((unint64_t *)&qword_1EBE658C0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE65C60);
  sub_1DA7A0410((unint64_t *)&qword_1EBE65C70, (uint64_t *)&unk_1EBE65C60);
  uint64_t v76 = v97;
  uint64_t v77 = v91;
  sub_1DA98C918();
  os_log_t v78 = v84;
  MEMORY[0x1E0177750](v70, v75, v76, v74);
  _Block_release(v74);

  (*(void (**)(char *, uint64_t))(v90 + 8))(v76, v77);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v75, v89);
  v71((uint64_t)v70, v72);
  return swift_release();
}

uint64_t sub_1DA962C10()
{
  if (qword_1EBE62C40 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DA989F38();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE6F2E8);
  uint64_t v1 = sub_1DA989F18();
  os_log_type_t v2 = sub_1DA98C548();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1DA795000, v1, v2, "[Locale] Notifying internally...", v3, 2u);
    MEMORY[0x1E0178DA0](v3, -1, -1);
  }

  if (qword_1EBE59408 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1DA989FE8();
  return swift_release();
}

uint64_t LocaleChangeCoordinator.deinit()
{
  swift_bridgeObjectRelease();

  sub_1DA7A1AE0(v0 + 32, &qword_1EBE588E0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LocaleChangeCoordinator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  sub_1DA7A1AE0(v0 + 32, &qword_1EBE588E0);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _PerAppLanguageOverrideObserver()
{
  return self;
}

uint64_t type metadata accessor for LocaleChangeCoordinator()
{
  return self;
}

uint64_t method lookup function for LocaleChangeCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LocaleChangeCoordinator);
}

uint64_t dispatch thunk of LocaleChangeCoordinator.__allocating_init(with:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t sub_1DA962E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE588E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA962EBC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DA962EF4()
{
  return sub_1DA962C10();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t sub_1DA962F14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA962F5C()
{
  return sub_1DA960A04();
}

uint64_t WidgetViewClippingModifier.init(metrics:clip:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = a2;
  return result;
}

uint64_t WidgetViewClippingModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1DA98A408();
  uint64_t v6 = v5 - 8;
  double v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (double *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)v2;
  int v11 = *(unsigned __int8 *)(v2 + 8);
  objc_msgSend(v10, sel__effectiveCornerRadius, v7);
  if (v11) {
    double v13 = v12;
  }
  else {
    double v13 = 0.0;
  }
  uint64_t v14 = (char *)v9 + *(int *)(v6 + 28);
  uint64_t v15 = *MEMORY[0x1E4F3D4A0];
  uint64_t v16 = sub_1DA98A938();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  double *v9 = v13;
  v9[1] = v13;
  uint64_t v17 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59C20) + 36);
  sub_1DA86F47C((uint64_t)v9, v17);
  *(unsigned char *)(v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE636A8) + 36)) = 0;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a2, a1, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59C38);
  sub_1DA98B7C8();
  uint64_t v19 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59C50) + 36);
  sub_1DA86F47C((uint64_t)v9, v19);
  *(_WORD *)(v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61D48) + 36)) = 256;
  return sub_1DA86F4E0((uint64_t)v9);
}

uint64_t sub_1DA963150()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA96316C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1DA98A408();
  uint64_t v6 = v5 - 8;
  double v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (double *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)v2;
  int v11 = *(unsigned __int8 *)(v2 + 8);
  objc_msgSend(v10, sel__effectiveCornerRadius, v7);
  if (v11) {
    double v13 = v12;
  }
  else {
    double v13 = 0.0;
  }
  uint64_t v14 = (char *)v9 + *(int *)(v6 + 28);
  uint64_t v15 = *MEMORY[0x1E4F3D4A0];
  uint64_t v16 = sub_1DA98A938();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  double *v9 = v13;
  v9[1] = v13;
  uint64_t v17 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59C20) + 36);
  sub_1DA86F47C((uint64_t)v9, v17);
  *(unsigned char *)(v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE636A8) + 36)) = 0;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a2, a1, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59C38);
  sub_1DA98B7C8();
  uint64_t v19 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59C50) + 36);
  sub_1DA86F47C((uint64_t)v9, v19);
  *(_WORD *)(v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE61D48) + 36)) = 256;
  return sub_1DA86F4E0((uint64_t)v9);
}

uint64_t assignWithCopy for WidgetViewClippingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for WidgetViewClippingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetViewClippingModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetViewClippingModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetViewClippingModifier()
{
  return &type metadata for WidgetViewClippingModifier;
}

unint64_t sub_1DA96346C()
{
  unint64_t result = qword_1EBE59C48;
  if (!qword_1EBE59C48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE59C50);
    sub_1DA96350C();
    sub_1DA7A0410(&qword_1EBE61D40, &qword_1EBE61D48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59C48);
  }
  return result;
}

unint64_t sub_1DA96350C()
{
  unint64_t result = qword_1EBE59C30;
  if (!qword_1EBE59C30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE59C38);
    sub_1DA963588();
    sub_1DA96364C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59C30);
  }
  return result;
}

unint64_t sub_1DA963588()
{
  unint64_t result = qword_1EBE59C18;
  if (!qword_1EBE59C18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE59C20);
    sub_1DA7A0410(&qword_1EBE59CA8, &qword_1EBE59CB0);
    sub_1DA7A0410(&qword_1EBE636A0, &qword_1EBE636A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59C18);
  }
  return result;
}

unint64_t sub_1DA96364C()
{
  unint64_t result = qword_1EBE59D80;
  if (!qword_1EBE59D80)
  {
    sub_1DA98B7D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE59D80);
  }
  return result;
}

uint64_t Extension.bundleStub.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WidgetExtensionInfo();
  double v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (id *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t, uint64_t, double))(a2 + 32))(a1, a2, v8);
  id v11 = *v10;
  sub_1DA83C6FC((uint64_t)v10);
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 88))(a1, a2);
  uint64_t v12 = sub_1DA989478();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 0, 1, v12);
  return sub_1DA98B888();
}

id Extension.id.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetExtensionInfo();
  double v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (id *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t, uint64_t, double))(a2 + 32))(a1, a2, v5);
  id v8 = *v7;
  sub_1DA83C6FC((uint64_t)v7);
  return v8;
}

uint64_t Extension.localizedDisplayName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetExtensionInfo();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (id *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - v9;
  id v11 = *(void (**)(uint64_t, uint64_t, double))(a2 + 32);
  v11(a1, a2, v8);
  uint64_t v12 = *((void *)v10 + 3);
  uint64_t v13 = *((void *)v10 + 4);
  swift_bridgeObjectRetain();
  sub_1DA83C6FC((uint64_t)v10);
  if (!v13)
  {
    ((void (*)(uint64_t, uint64_t))v11)(a1, a2);
    id v14 = *v6;
    sub_1DA83C6FC((uint64_t)v6);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    uint64_t v12 = sub_1DA9899C8();
    swift_endAccess();
  }
  return v12;
}

uint64_t Extension.containerBundleLocalizedDisplayName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetExtensionInfo();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (id *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v9 = MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v20 - v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, double))(a2 + 32);
  v12(a1, a2, v9);
  uint64_t v13 = (uint64_t *)&v11[*(int *)(v5 + 76)];
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  swift_bridgeObjectRetain();
  sub_1DA83C6FC((uint64_t)v11);
  if (!v14)
  {
    ((void (*)(uint64_t, uint64_t))v12)(a1, a2);
    uint64_t v16 = (char *)*v7;
    sub_1DA83C6FC((uint64_t)v7);
    uint64_t v17 = &v16[*MEMORY[0x1E4F58B78]];
    swift_beginAccess();
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
    {
      swift_endAccess();
      uint64_t v15 = 0x6E776F6E6B6E55;
    }
    else
    {
      uint64_t v15 = sub_1DA9899C8();
      swift_endAccess();
    }
  }
  return v15;
}

uint64_t Extension.hasEventServiceEntitlement.getter()
{
  return 0;
}

uint64_t Extension.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_1DA98CA18();
  sub_1DA98C148();
  sub_1DA98CFF8();
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  id v9 = objc_msgSend(v8, sel_description);
  sub_1DA98C038();

  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  (*(void (**)(uint64_t, uint64_t))(a2 + 152))(a1, a2);
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  if (qword_1EBE63290 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBE63318;
  id v11 = (void *)sub_1DA989568();
  id v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

  sub_1DA98C038();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  (*(void (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return v14[0];
}

id sub_1DA963FFC(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_1DA964008(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  if (*(void *)(v2 + 32))
  {
    uint64_t v3 = *(void *)(v2 + 24);
  }
  else
  {
    uint64_t v4 = *(void **)v2;
    swift_beginAccess();
    id v5 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    uint64_t v3 = sub_1DA9899C8();
    swift_endAccess();
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1DA9640B4(uint64_t a1)
{
  uint64_t v2 = (void **)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = (uint64_t *)((char *)v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 68));
  if (v3[1])
  {
    uint64_t v4 = *v3;
  }
  else
  {
    id v5 = *v2;
    uint64_t v6 = (char *)*v2 + *MEMORY[0x1E4F58B78];
    swift_beginAccess();
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_endAccess();
      uint64_t v4 = 0x6E776F6E6B6E55;
    }
    else
    {
      id v8 = v5;
      uint64_t v4 = sub_1DA9899C8();
      swift_endAccess();
    }
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t Extension.disablesImplicitDescriptorDiscovery.getter()
{
  return 0;
}

uint64_t static Extension.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  v9[3] = a3;
  v9[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  LOBYTE(v4) = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 304))(v9, a3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v4 & 1;
}

uint64_t dispatch thunk of Extension.info.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Extension.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Extension.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Extension.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of Extension.pluginUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Extension.lastModifiedDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Extension.isInternal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of Extension.bundleURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of Extension.dataContainerURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of Extension.systemDataContainerURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of Extension.requestedDataProtection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Extension.localizedDisplayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of Extension.wantsLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of Extension.containerBundleURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of Extension.containerBundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of Extension.containerBundleVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of Extension.containerBundleLocalizedDisplayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of Extension.effectiveContainerBundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of Extension.sdkVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of Extension.platform.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of Extension.watchKitExtensionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of Extension.pushEnvironment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of Extension.isDevelopmentExtension.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of Extension.availableLocalizations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of Extension.allowsMixedLocalizations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of Extension.nominatedContainingBundleIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of Extension.hasEventServiceEntitlement.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of Extension.entitlements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of Extension.disablesImplicitDescriptorDiscovery.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of Extension.makeSession(requiresUserInteractivePriority:suspensionObserver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 264))();
}

uint64_t dispatch thunk of Extension.makeSessionAsync(requiresUserInteractivePriority:suspensionObserver:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 272))();
}

uint64_t dispatch thunk of Extension.makeSession(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 280))();
}

uint64_t dispatch thunk of Extension.makeSessionAsync(options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 288))();
}

uint64_t dispatch thunk of Extension.terminate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of Extension.matches(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 304))();
}

uint64_t sub_1DA964540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for DefaultFeatureFlagEvaluator()
{
  return self;
}

void *sub_1DA964578(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1DA98CBD8())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E0177C00](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      id v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1DA9646A0(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t), uint64_t a5)
{
  void (*v49)(uint64_t *__return_ptr, uint64_t);
  uint64_t v50;
  unsigned int (**v51)(char *, uint64_t, uint64_t);
  void (**v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;

  unint64_t v49 = a4;
  double v57 = a2;
  uint64_t v9 = type metadata accessor for ExtensionMetadata();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v48 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v50 = (uint64_t)&v40 - v16;
  uint64_t v17 = *(void *)(a3 + 64);
  uint64_t v46 = v10;
  uint64_t v47 = a3 + 64;
  uint64_t v18 = -1;
  uint64_t v19 = -1 << *(unsigned char *)(a3 + 32);
  uint64_t v45 = ~v19;
  if (-v19 < 64) {
    uint64_t v18 = ~(-1 << -(char)v19);
  }
  uint64_t v20 = v18 & v17;
  unint64_t v51 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  int64_t v44 = (unint64_t)(63 - v19) >> 6;
  int64_t v41 = v44 - 1;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v55 = v14;
  uint64_t v56 = 0;
  uint64_t v53 = a3;
  uint64_t v54 = a5;
  uint64_t v43 = v9;
  while (2)
  {
    unint64_t v23 = v20;
    if (!v20) {
      goto LABEL_21;
    }
LABEL_54:
    uint64_t v20 = (v23 - 1) & v23;
    unint64_t v30 = __clz(__rbit64(v23)) | (v56 << 6);
LABEL_55:
    uint64_t v33 = v50;
    sub_1DA972C4C(*(void *)(a3 + 56) + *(void *)(v46 + 72) * v30, v50);
    uint64_t v32 = 0;
LABEL_56:
    (*v52)(v33, v32, 1, v9);
    sub_1DA7BA440(v33, (uint64_t)v14, (uint64_t *)&unk_1EBE595D8);
    if ((*v51)(v14, 1, v9) == 1)
    {
      sub_1DA8092D8();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v35 = (uint64_t)v14;
    uint64_t v36 = v48;
    sub_1DA9738F4(v35, v48, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
    v49(&v58, v36);
    uint64_t v37 = v58;
    uint64_t v38 = v36;
    uint64_t v14 = v55;
    sub_1DA9711B0(v38);
    swift_bridgeObjectRelease();
    unint64_t v39 = v37;
    if (!v37) {
      continue;
    }
    break;
  }
  unint64_t v21 = 0;
  if (v37 >= 0) {
    uint64_t v22 = v37 & 0xFFFFFFFFFFFFFF8;
  }
  else {
    uint64_t v22 = v37;
  }
  uint64_t v42 = v22;
  while (1)
  {
    unint64_t v23 = v20;
    if (v39 >> 62) {
      break;
    }
    if (v21 == *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_20;
    }
LABEL_10:
    if ((v39 & 0xC000000000000001) != 0)
    {
      id v24 = (id)MEMORY[0x1E0177C00](v21, v39);
    }
    else
    {
      if (v21 >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      id v24 = *(id *)(v39 + 8 * v21 + 32);
    }
    uint64_t v25 = v24;
    if (__OFADD__(v21, 1)) {
      goto LABEL_63;
    }
    uint64_t v58 = (uint64_t)v24;
    char v26 = a1(&v58);
    if (v5)
    {

      sub_1DA8092D8();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    if (v26)
    {
      sub_1DA8092D8();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }

    ++v21;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1DA98CBD8();
  swift_bridgeObjectRelease();
  if (v21 != v27) {
    goto LABEL_10;
  }
LABEL_20:
  a3 = v53;
  uint64_t v9 = v43;
  uint64_t v14 = v55;
  if (v20) {
    goto LABEL_54;
  }
LABEL_21:
  int64_t v28 = v56 + 1;
  if (__OFADD__(v56, 1))
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (v28 >= v44) {
    goto LABEL_34;
  }
  unint64_t v29 = *(void *)(v47 + 8 * v28);
  if (v29) {
    goto LABEL_24;
  }
  int64_t v31 = v56 + 2;
  if (v56 + 2 >= v44)
  {
    uint64_t v20 = 0;
    uint64_t v32 = 1;
LABEL_29:
    uint64_t v56 = v28;
    goto LABEL_35;
  }
  unint64_t v29 = *(void *)(v47 + 8 * v31);
  if (v29) {
    goto LABEL_27;
  }
  if (v56 + 3 >= v44)
  {
    v56 += 2;
LABEL_34:
    uint64_t v20 = 0;
    uint64_t v32 = 1;
LABEL_35:
    uint64_t v33 = v50;
    goto LABEL_56;
  }
  unint64_t v29 = *(void *)(v47 + 8 * (v56 + 3));
  if (v29)
  {
    int64_t v28 = v56 + 3;
    goto LABEL_24;
  }
  if (v56 + 4 >= v44)
  {
    uint64_t v20 = 0;
    uint64_t v32 = 1;
    v56 += 3;
    goto LABEL_35;
  }
  unint64_t v29 = *(void *)(v47 + 8 * (v56 + 4));
  if (v29)
  {
    int64_t v28 = v56 + 4;
    goto LABEL_24;
  }
  int64_t v31 = v56 + 5;
  if (v56 + 5 >= v44)
  {
    v56 += 4;
    goto LABEL_34;
  }
  unint64_t v29 = *(void *)(v47 + 8 * v31);
  if (v29)
  {
LABEL_27:
    int64_t v28 = v31;
    goto LABEL_24;
  }
  int64_t v34 = v56 + 6;
  if (v56 + 6 >= v44)
  {
    uint64_t v20 = 0;
    uint64_t v32 = 1;
    v56 += 5;
    uint64_t v14 = v55;
    goto LABEL_35;
  }
  unint64_t v29 = *(void *)(v47 + 8 * v34);
  if (v29)
  {
    int64_t v28 = v56 + 6;
    uint64_t v14 = v55;
LABEL_24:
    uint64_t v20 = (v29 - 1) & v29;
    unint64_t v30 = __clz(__rbit64(v29)) + (v28 << 6);
    uint64_t v56 = v28;
    goto LABEL_55;
  }
  uint64_t v14 = v55;
  while (1)
  {
    int64_t v28 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v28 >= v44)
    {
      uint64_t v20 = 0;
      uint64_t v32 = 1;
      int64_t v28 = v41;
      goto LABEL_29;
    }
    unint64_t v29 = *(void *)(v47 + 8 * v28);
    ++v34;
    if (v29) {
      goto LABEL_24;
    }
  }
LABEL_65:
  __break(1u);
}

void sub_1DA964C44(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3, void (*a4)(unint64_t *__return_ptr, char *), uint64_t a5)
{
  void (*v49)(unint64_t *__return_ptr, char *);
  unsigned int (**v50)(char *, uint64_t, uint64_t);
  void (**v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  uint64_t v56;

  uint64_t v53 = a5;
  unint64_t v49 = a4;
  int64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v52 = type metadata accessor for ExtensionMetadata();
  uint64_t v6 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  id v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13.n128_f64[0] = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v39 - v14;
  unint64_t v16 = 0;
  unint64_t v17 = 0;
  int64_t v18 = 0;
  uint64_t v56 = MEMORY[0x1E4FBC860];
  uint64_t v47 = v6;
  uint64_t v48 = a3;
  uint64_t v21 = *(void *)(a3 + 64);
  uint64_t v20 = a3 + 64;
  uint64_t v19 = v21;
  uint64_t v22 = -1;
  uint64_t v23 = -1 << *(unsigned char *)(v20 - 32);
  uint64_t v43 = ~v23;
  if (-v23 < 64) {
    uint64_t v22 = ~(-1 << -(char)v23);
  }
  unint64_t v24 = v22 & v19;
  uint64_t v50 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  unint64_t v51 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v45 = v20;
  int64_t v46 = (unint64_t)(63 - v23) >> 6;
  int64_t v40 = v46 - 1;
  while (1)
  {
    while (v16)
    {
      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_1DA98CBD8();
        swift_bridgeObjectRelease();
        if (v17 == v33) {
          break;
        }
      }
      else if (v17 == *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        break;
      }
      if ((v16 & 0xC000000000000001) != 0)
      {
        id v34 = (id)MEMORY[0x1E0177C00](v17, v16, v13);
      }
      else
      {
        if ((v17 & 0x8000000000000000) != 0) {
          goto LABEL_53;
        }
        if (v17 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_54;
        }
        id v34 = *(id *)(v16 + 8 * v17 + 32);
      }
      uint64_t v35 = v34;
      if (__OFADD__(v17++, 1)) {
        goto LABEL_55;
      }
      uint64_t v55 = v34;
      uint64_t v37 = v44;
      char v38 = v41(&v55);
      uint64_t v44 = v37;
      if (v37)
      {

        sub_1DA8092D8();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return;
      }
      if (v38)
      {
        sub_1DA98CAB8();
        v39[1] = *(void *)(v56 + 16);
        sub_1DA98CAF8();
        sub_1DA98CB08();
        sub_1DA98CAC8();
      }
      else
      {
      }
    }
    if (v24)
    {
      unint64_t v25 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      unint64_t v26 = v25 | (v18 << 6);
LABEL_9:
      sub_1DA972C4C(*(void *)(v48 + 56) + *(void *)(v47 + 72) * v26, (uint64_t)v15);
      uint64_t v27 = 0;
      goto LABEL_27;
    }
    int64_t v28 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    if (v28 >= v46) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v45 + 8 * v28);
    if (v29) {
      goto LABEL_13;
    }
    v18 += 2;
    if (v28 + 1 >= v46)
    {
      unint64_t v24 = 0;
      uint64_t v27 = 1;
      int64_t v18 = v28;
      goto LABEL_27;
    }
    unint64_t v29 = *(void *)(v45 + 8 * v18);
    if (v29) {
      goto LABEL_16;
    }
    int64_t v30 = v28 + 2;
    if (v28 + 2 >= v46)
    {
LABEL_26:
      unint64_t v24 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    unint64_t v29 = *(void *)(v45 + 8 * v30);
    if (v29) {
      goto LABEL_20;
    }
    int64_t v18 = v28 + 3;
    if (v28 + 3 >= v46)
    {
      unint64_t v24 = 0;
      uint64_t v27 = 1;
      int64_t v18 = v28 + 2;
      goto LABEL_27;
    }
    unint64_t v29 = *(void *)(v45 + 8 * v18);
    if (v29)
    {
LABEL_16:
      int64_t v28 = v18;
LABEL_13:
      unint64_t v24 = (v29 - 1) & v29;
      unint64_t v26 = __clz(__rbit64(v29)) + (v28 << 6);
      int64_t v18 = v28;
      goto LABEL_9;
    }
    if (v28 + 4 >= v46) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v45 + 8 * (v28 + 4));
    if (v29)
    {
      v28 += 4;
      goto LABEL_13;
    }
    int64_t v30 = v28 + 5;
    if (v28 + 5 < v46) {
      break;
    }
    unint64_t v24 = 0;
    uint64_t v27 = 1;
    int64_t v18 = v28 + 4;
LABEL_27:
    uint64_t v31 = v52;
    (*v51)(v15, v27, 1, v52);
    sub_1DA7BA440((uint64_t)v15, (uint64_t)v11, (uint64_t *)&unk_1EBE595D8);
    if ((*v50)(v11, 1, v31) == 1)
    {
      sub_1DA8092D8();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    sub_1DA9738F4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
    v49(&v54, v8);
    unint64_t v32 = v54;
    sub_1DA9711B0((uint64_t)v8);
    swift_bridgeObjectRelease();
    unint64_t v17 = 0;
    unint64_t v16 = v32;
  }
  unint64_t v29 = *(void *)(v45 + 8 * v30);
  if (v29)
  {
LABEL_20:
    int64_t v28 = v30;
    goto LABEL_13;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v46)
    {
      unint64_t v24 = 0;
      uint64_t v27 = 1;
      int64_t v18 = v40;
      goto LABEL_27;
    }
    unint64_t v29 = *(void *)(v45 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_13;
    }
  }
LABEL_56:
  __break(1u);
}

uint64_t CHSBaseDescriptor.matches(localeData:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (a2 >> 60 == 15)
  {
    id v4 = objc_msgSend(v2, sel_localeToken);
    if (!v4) {
      return 1;
    }
    uint64_t v5 = v4;
    uint64_t v6 = sub_1DA9894E8();
    unint64_t v8 = v7;

    sub_1DA79DA70(v6, v8);
  }
  else
  {
    sub_1DA79ED98(a1, a2);
    sub_1DA79ED98(a1, a2);
    id v11 = objc_msgSend(v3, sel_localeToken);
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = sub_1DA9894E8();
      unint64_t v15 = v14;

      sub_1DA7A1B3C(a1, a2);
      sub_1DA79ED98(v13, v15);
      LOBYTE(v12) = sub_1DA816D7C(v13, v15, a1, a2);
      sub_1DA7A1ACC(a1, a2);
      sub_1DA79DA70(v13, v15);
      sub_1DA79DA70(v13, v15);
      sub_1DA7A1ACC(a1, a2);
      sub_1DA7A1ACC(a1, a2);
      return v12 & 1;
    }
    sub_1DA7A1ACC(0, 0xF000000000000000);
    sub_1DA7A1ACC(a1, a2);
    sub_1DA7A1ACC(a1, a2);
  }
  return 0;
}

uint64_t CHSBaseDescriptor.matches(locale:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = objc_msgSend(v3, sel_localeToken);
  if (v6)
  {
    unint64_t v7 = v6;
    uint64_t v8 = sub_1DA9894E8();
    unint64_t v10 = v9;

    if (a2 >> 60 != 15)
    {
      sub_1DA7A1B3C(a1, a2);
      sub_1DA79ED98(v8, v10);
      char v11 = sub_1DA816D7C(v8, v10, a1, a2);
      sub_1DA7A1ACC(a1, a2);
      sub_1DA79DA70(v8, v10);
      sub_1DA79DA70(v8, v10);
      return v11 & 1;
    }
  }
  else
  {
    if (a2 >> 60 == 15) {
      return 1;
    }
    uint64_t v8 = 0;
    unint64_t v10 = 0xF000000000000000;
  }
  sub_1DA7A1B3C(a1, a2);
  sub_1DA7A1ACC(v8, v10);
  sub_1DA7A1ACC(a1, a2);
  return 0;
}

uint64_t sub_1DA9653F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DA989638();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = (*(uint64_t (**)(uint64_t, uint64_t, double))(a2 + 152))(a1, a2, v6);
  v14[1] = v9;
  sub_1DA98C148();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  if (qword_1EBE64608 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBE64600;
  char v11 = (void *)sub_1DA989568();
  id v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

  sub_1DA98C038();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_1DA98C148();
  swift_bridgeObjectRelease();
  sub_1DA98C148();
  return v14[0];
}

uint64_t WidgetDescriptorCache.__allocating_init(backingStore:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  WidgetDescriptorCache.init(backingStore:)(a1);
  return v2;
}

void *WidgetDescriptorCache.init(backingStore:)(uint64_t a1)
{
  v1[3] = 0;
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59E28);
  swift_allocObject();
  v1[5] = sub_1DA98A008();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A718);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(void *)(v3 + 16) = MEMORY[0x1E4FBC868];
  v1[8] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A720);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = MEMORY[0x1E4FBC870];
  v1[9] = v4;
  v1[4] = a1;
  v1[6] = sub_1DA965728;
  v1[7] = 0;
  return v1;
}

uint64_t sub_1DA965728@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A780);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DA990050;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v7 + v6, a1, v4);
  uint64_t v8 = _sSo8NSLocaleC9ChronoKitE18currentLocaleToken3forSDy0B8Services15TypedIdentifierVyAF0J4TypeO6BundleO9ContainerOGAC0eF10DescriptorVGSayAOG_tFZ_0(v7);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1DA845BF8(a1, v8, a2);

  return swift_bridgeObjectRelease();
}

uint64_t WidgetDescriptorCache.deinit()
{
  sub_1DA9710BC(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t WidgetDescriptorCache.__deallocating_deinit()
{
  sub_1DA9710BC(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t WidgetDescriptorCache.descriptorUpdatePublisher.getter()
{
  return sub_1DA98A0F8();
}

void *WidgetDescriptorCache.widgetDescriptors.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA965A40((uint64_t *)(v1 + 16), &v7);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v7;
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63368);
  uint64_t v3 = (void *)swift_allocObject();
  uint64_t v4 = type metadata accessor for DefaultFeatureFlagEvaluator();
  uint64_t v5 = swift_allocObject();
  void v3[6] = v4;
  v3[7] = &off_1F34DD4B0;
  id v3[2] = v2;
  v3[3] = v5;
  return v3;
}

uint64_t sub_1DA965A40@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DA96EF64(*a1);
  *a2 = result;
  return result;
}

uint64_t WidgetDescriptorCache.allDescriptors.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA965AE0((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1DA965AE0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = sub_1DA96F1F0(*a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59F70);
  uint64_t v4 = (void *)swift_allocObject();
  uint64_t v5 = type metadata accessor for DefaultFeatureFlagEvaluator();
  uint64_t result = swift_allocObject();
  v4[6] = v5;
  v4[7] = &off_1F34DD4B0;
  v4[2] = v3;
  v4[3] = result;
  *a2 = v4;
  return result;
}

unint64_t WidgetDescriptorCache.allDescriptors(extensionIdentity:)()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA9710E4((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  unint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1DA965BE4@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v6 = (int *)type metadata accessor for ExtensionMetadata();
  uint64_t v7 = *((void *)v6 - 1);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  double v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  if (*(void *)(v14 + 16))
  {
    id v15 = a2;
    unint64_t v16 = sub_1DA7FE920((uint64_t)v15);
    if (v17)
    {
      sub_1DA972C4C(*(void *)(v14 + 56) + *(void *)(v7 + 72) * v16, (uint64_t)v13);
      (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(v13, 0, 1, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, int *))(v7 + 56))(v13, 1, 1, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *, double))(v7 + 56))(v13, 1, 1, v6, v11);
  }
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(v13, 1, v6))
  {
    uint64_t result = sub_1DA7A1AE0((uint64_t)v13, (uint64_t *)&unk_1EBE595D8);
    unint64_t v19 = 0;
  }
  else
  {
    sub_1DA972C4C((uint64_t)v13, (uint64_t)v9);
    sub_1DA7A1AE0((uint64_t)v13, (uint64_t *)&unk_1EBE595D8);
    unint64_t v20 = *(void *)&v9[v6[6]];
    if (v20 >> 62)
    {
      sub_1DA84FE28();
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1DA98CBC8();
      swift_bridgeObjectRelease();
      unint64_t v20 = v24;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DA98CE78();
      sub_1DA84FE28();
    }
    unint64_t v21 = *(void *)&v9[v6[7]];
    if (v21 >> 62)
    {
      sub_1DA84FE28();
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1DA98CBC8();
      swift_bridgeObjectRelease();
      unint64_t v21 = v25;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DA98CE78();
      sub_1DA84FE28();
    }
    unint64_t v28 = v20;
    sub_1DA8847D8(v21);
    unint64_t v22 = v28;
    unint64_t v23 = *(void *)&v9[v6[9]];
    if (v23 >> 62)
    {
      sub_1DA84FE28();
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1DA98CBC8();
      swift_bridgeObjectRelease();
      unint64_t v23 = v26;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DA98CE78();
      sub_1DA84FE28();
    }
    unint64_t v28 = v22;
    sub_1DA8847D8(v23);
    unint64_t v19 = v28;
    uint64_t result = sub_1DA9711B0((uint64_t)v9);
  }
  *a3 = v19;
  return result;
}

uint64_t WidgetDescriptorCache.controlDescriptorsByExtensionIdentity.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA97397C((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t WidgetDescriptorCache.controlDescriptors(containedBy:)()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA971100((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1DA966034@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for ExtensionMetadata() + 28));

  return swift_bridgeObjectRetain();
}

void *WidgetDescriptorCache.controlDescriptors.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA966134((uint64_t *)(v1 + 16), &v7);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v7;
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59F68);
  uint64_t v3 = (void *)swift_allocObject();
  uint64_t v4 = type metadata accessor for DefaultFeatureFlagEvaluator();
  uint64_t v5 = swift_allocObject();
  void v3[6] = v4;
  v3[7] = &off_1F34DD4B0;
  id v3[2] = v2;
  v3[3] = v5;
  return v3;
}

uint64_t sub_1DA966134@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DA96F5E0(*a1);
  *a2 = result;
  return result;
}

uint64_t WidgetDescriptorCache.activityDescriptorsByExtensionIdentity.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA9661D4((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1DA9661D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DA96F86C(*a1);
  *a2 = result;
  return result;
}

void WidgetDescriptorCache.activityDescriptor(targeting:)(void **a1)
{
  uint64_t v28 = sub_1DA9897A8();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v25 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - v9;
  double v11 = *a1;
  uint64_t v12 = *(void *)(v1 + 64);
  uint64_t v27 = *a1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 24));
  sub_1DA971140((uint64_t *)(v12 + 16), (uint64_t)v10);
  if (v2)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 24));
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 24));
    swift_release();
    sub_1DA7A1F58((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_1EBE595D8);
    uint64_t v13 = type metadata accessor for ExtensionMetadata();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v7, 1, v13) == 1)
    {
      sub_1DA7A1AE0((uint64_t)v7, (uint64_t *)&unk_1EBE595D8);
      sub_1DA97115C();
      swift_allocError();
      *(void *)uint64_t v14 = v11;
      *(unsigned char *)(v14 + 8) = 0;
      id v15 = v11;
      swift_willThrow();
      sub_1DA7A1AE0((uint64_t)v10, (uint64_t *)&unk_1EBE595D8);
    }
    else
    {
      unint64_t v16 = *(void *)&v7[*(int *)(v13 + 36)];
      swift_bridgeObjectRetain();
      sub_1DA9711B0((uint64_t)v7);
      uint64_t v17 = type metadata accessor for ActivityKey(0);
      unint64_t v19 = v25;
      uint64_t v18 = v26;
      uint64_t v20 = v28;
      uint64_t v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 16))(v25, (char *)a1 + *(int *)(v17 + 20), v28);
      MEMORY[0x1F4188790](v21);
      *(&v25 - 2) = v19;
      unint64_t v22 = sub_1DA964578((uint64_t (*)(id *))sub_1DA97120C, (uint64_t)(&v25 - 4), v16);
      swift_bridgeObjectRelease();
      if (!v22)
      {
        sub_1DA97115C();
        swift_allocError();
        *(void *)uint64_t v23 = v11;
        *(unsigned char *)(v23 + 8) = 1;
        id v24 = v11;
        swift_willThrow();
      }
      sub_1DA7A1AE0((uint64_t)v10, (uint64_t *)&unk_1EBE595D8);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v20);
    }
  }
}

void sub_1DA966580(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  if (*(void *)(*a1 + 16))
  {
    id v5 = a2;
    unint64_t v6 = sub_1DA7FE920((uint64_t)v5);
    if (v7)
    {
      unint64_t v8 = v6;
      uint64_t v9 = *(void *)(v4 + 56);
      uint64_t v10 = type metadata accessor for ExtensionMetadata();
      uint64_t v11 = *(void *)(v10 - 8);
      sub_1DA972C4C(v9 + *(void *)(v11 + 72) * v8, a3);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ExtensionMetadata();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 1, 1, v13);
    }
  }
  else
  {
    uint64_t v12 = type metadata accessor for ExtensionMetadata();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a3, 1, 1, v12);
  }
}

id sub_1DA9666EC(id *a1)
{
  uint64_t v2 = sub_1DA9897A8();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(*a1, sel_activityAttributesType, v4);
  if (result)
  {
    unint64_t v8 = result;
    sub_1DA97388C(qword_1EBE596D0, MEMORY[0x1E4F17CC8]);
    sub_1DA989878();

    char v9 = sub_1DA989798();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return (id)(v9 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void CHSSessionPlatterDescriptor.activityAttributes.getter()
{
  id v1 = objc_msgSend(v0, sel_activityAttributesType);
  if (v1)
  {
    sub_1DA9897A8();
    sub_1DA97388C(qword_1EBE596D0, MEMORY[0x1E4F17CC8]);
    sub_1DA989878();
  }
  else
  {
    __break(1u);
  }
}

uint64_t WidgetDescriptorCache.activityDescriptors(containedBy:)()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA97122C((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1DA966970(id *a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int64_t v30 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59770);
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0F0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v30 - v13;
  double v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v30 - v17;
  id v19 = objc_msgSend(*a1, sel_extensionIdentity, v16);
  uint64_t v20 = (uint64_t)v19 + *MEMORY[0x1E4F58B78];
  swift_beginAccess();
  sub_1DA7A1F58(v20, (uint64_t)v18, &qword_1EBE5A0F0);

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v14, v32, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
  uint64_t v21 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_1DA7A1F58((uint64_t)v18, (uint64_t)v9, &qword_1EBE5A0F0);
  sub_1DA7A1F58((uint64_t)v14, v21, &qword_1EBE5A0F0);
  unint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v22((uint64_t)v9, 1, v3) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE5A0F0);
    sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE5A0F0);
    int v23 = v22(v21, 1, v3);
    if (v23 == 1) {
      id v24 = &qword_1EBE5A0F0;
    }
    else {
      id v24 = &qword_1EBE59770;
    }
    if (v23 == 1) {
      char v25 = -1;
    }
    else {
      char v25 = 0;
    }
  }
  else
  {
    uint64_t v26 = v31;
    sub_1DA7A1F58((uint64_t)v9, v31, &qword_1EBE5A0F0);
    if (v22(v21, 1, v3) == 1)
    {
      sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE5A0F0);
      sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE5A0F0);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v26, v3);
      char v25 = 0;
      id v24 = &qword_1EBE59770;
    }
    else
    {
      uint64_t v27 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v30, v21, v3);
      sub_1DA7A0410((unint64_t *)&qword_1EBE5A0E0, &qword_1EBE5A0E8);
      char v25 = sub_1DA98BFF8();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v4 + 8);
      v28(v27, v3);
      id v24 = &qword_1EBE5A0F0;
      sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE5A0F0);
      sub_1DA7A1AE0((uint64_t)v18, &qword_1EBE5A0F0);
      v28((char *)v26, v3);
    }
  }
  sub_1DA7A1AE0((uint64_t)v9, v24);
  return v25 & 1;
}

uint64_t WidgetDescriptorCache.activityDescriptor(for:containedBy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1DA966E18((uint64_t *)(v5 + 16), a1, a2, &v8);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  uint64_t v6 = v8;
  swift_release();
  return v6;
}

uint64_t sub_1DA966E18@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  unint64_t v39 = a4;
  uint64_t v36 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DA9897A8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBE5A1D8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1DA989F38();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBE6F168);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v38 = a2;
  v15(v13, a2, v10);
  double v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v37 = a3;
  v16(v9, a3, v6);
  uint64_t v17 = sub_1DA989F18();
  os_log_type_t v18 = sub_1DA98C518();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v41 = v35;
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v32 = v20 + 4;
    sub_1DA97388C(&qword_1EBE59DD0, MEMORY[0x1E4F17CC8]);
    os_log_t v34 = v17;
    uint64_t v21 = sub_1DA98CDD8();
    uint64_t v40 = sub_1DA8C5E00(v21, v22, &v41);
    int v33 = v19;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(_WORD *)(v20 + 12) = 2082;
    sub_1DA7A0410(&qword_1EA8E6B78, &qword_1EBE5A0E8);
    uint64_t v23 = sub_1DA98CDD8();
    uint64_t v40 = sub_1DA8C5E00(v23, v24, &v41);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v17 = v34;
    _os_log_impl(&dword_1DA795000, v34, (os_log_type_t)v33, "Descriptor Searching for %{public}s from \"%{public}s\"", (uint8_t *)v20, 0x16u);
    uint64_t v25 = v35;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v25, -1, -1);
    MEMORY[0x1E0178DA0](v20, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  uint64_t v26 = *v36;
  MEMORY[0x1F4188790](v27);
  uint64_t v28 = v38;
  *(&v32 - 2) = v37;
  *(&v32 - 1) = v28;
  swift_bridgeObjectRetain();
  sub_1DA9646A0((uint64_t (*)(uint64_t *))sub_1DA97386C, (uint64_t)(&v32 - 4), v26, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1DA96696C, 0);
  uint64_t v30 = v29;
  uint64_t result = swift_bridgeObjectRelease();
  void *v39 = v30;
  return result;
}

uint64_t sub_1DA9672A0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for ExtensionMetadata() + 36));

  return swift_bridgeObjectRetain();
}

id sub_1DA9672E8(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a2;
  uint64_t v37 = a3;
  uint64_t v38 = sub_1DA9897A8();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v35 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  os_log_t v34 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59770);
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0F0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v41 = (uint64_t)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  double v16 = (char *)&v33 - v15;
  double v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v33 - v19;
  id v39 = *a1;
  id v21 = objc_msgSend(v39, sel_extensionIdentity, v18);
  uint64_t v22 = (uint64_t)v21 + *MEMORY[0x1E4F58B78];
  swift_beginAccess();
  sub_1DA7A1F58(v22, (uint64_t)v20, &qword_1EBE5A0F0);

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v16, v40, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
  uint64_t v23 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_1DA7A1F58((uint64_t)v20, (uint64_t)v11, &qword_1EBE5A0F0);
  sub_1DA7A1F58((uint64_t)v16, v23, &qword_1EBE5A0F0);
  unint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v24((uint64_t)v11, 1, v5) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v16, &qword_1EBE5A0F0);
    sub_1DA7A1AE0((uint64_t)v20, &qword_1EBE5A0F0);
    if (v24(v23, 1, v5) == 1)
    {
      sub_1DA7A1AE0((uint64_t)v11, &qword_1EBE5A0F0);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_1DA7A1F58((uint64_t)v11, v41, &qword_1EBE5A0F0);
  if (v24(v23, 1, v5) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v16, &qword_1EBE5A0F0);
    sub_1DA7A1AE0((uint64_t)v20, &qword_1EBE5A0F0);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v41, v5);
LABEL_6:
    sub_1DA7A1AE0((uint64_t)v11, &qword_1EBE59770);
LABEL_7:
    char v25 = 0;
    return (id)(v25 & 1);
  }
  uint64_t v26 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v34, v23, v5);
  sub_1DA7A0410((unint64_t *)&qword_1EBE5A0E0, &qword_1EBE5A0E8);
  uint64_t v27 = v41;
  LODWORD(v40) = sub_1DA98BFF8();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v6 + 8);
  v28(v26, v5);
  sub_1DA7A1AE0((uint64_t)v16, &qword_1EBE5A0F0);
  sub_1DA7A1AE0((uint64_t)v20, &qword_1EBE5A0F0);
  v28((char *)v27, v5);
  sub_1DA7A1AE0((uint64_t)v11, &qword_1EBE5A0F0);
  if ((v40 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_9:
  id result = objc_msgSend(v39, sel_activityAttributesType);
  if (result)
  {
    uint64_t v30 = result;
    sub_1DA97388C(qword_1EBE596D0, MEMORY[0x1E4F17CC8]);
    uint64_t v31 = v35;
    uint64_t v32 = v38;
    sub_1DA989878();

    char v25 = sub_1DA989798();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v32);
    return (id)(v25 & 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA967838()
{
  return sub_1DA98A0F8();
}

void *sub_1DA9678B8()
{
  return WidgetDescriptorCache.widgetDescriptors.getter();
}

uint64_t sub_1DA9678DC(uint64_t a1, uint64_t a2)
{
  return WidgetDescriptorCache.initialize(with:)(a1, a2);
}

uint64_t WidgetDescriptorCache.initialize(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ExtensionMetadata();
  uint64_t v105 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v107 = (uint64_t)v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v113 = (uint64_t)v100 - v8;
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v9 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  uint64_t v108 = (char *)v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v100 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v110 = (char *)v100 - v15;
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  uint64_t v106 = v2;
  uint64_t v16 = sub_1DA969C6C();
  swift_unknownObjectRetain();
  uint64_t v17 = 0;
  double v18 = sub_1DA971478(v16, a1, a2);
  swift_unknownObjectRelease();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v20 = (unint64_t *)sub_1DA79D4E8(MEMORY[0x1E4FBC860]);
  uint64_t v21 = v18[2];
  uint64_t v111 = v9;
  if (!v21)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v43 = swift_bridgeObjectRetain();
    uint64_t v44 = sub_1DA97164C(v43, (uint64_t)v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1DA97189C(v16, (uint64_t)v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v115 = (void (**)(char *, char *, uint64_t))v19;
    uint64_t v116 = v45;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1DA9712D4(v44, a1, a2, v20, (unint64_t *)&v115);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    id v47 = sub_1DA97259C(v46);
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1DA971AF0(v46, (uint64_t)v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA8849F4((uint64_t)v47);
    uint64_t v112 = v115;
    swift_bridgeObjectRetain();
    uint64_t v13 = (char *)sub_1DA79D308(v19);
    uint64_t v49 = *(void *)(v48 + 16);
    if (v49)
    {
      uint64_t v109 = (void (**)(char *, uint64_t))v48;
      uint64_t v110 = (char *)v17;
      uint64_t v50 = v48 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
      uint64_t v51 = *(void *)(v105 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        if (!v20[2]) {
          goto LABEL_51;
        }
        unint64_t v52 = sub_1DA7FE778(v50);
        if ((v53 & 1) == 0) {
          goto LABEL_52;
        }
        sub_1DA7A1A44(v20[7] + 40 * v52, (uint64_t)&v117);
        uint64_t v54 = v118;
        uint64_t v55 = v119;
        __swift_project_boxed_opaque_existential_0(&v117, v118);
        uint64_t v56 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v55 + 40))(v54, v55);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
        sub_1DA972C4C(v50, v113);
        id v57 = v56;
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v117 = v13;
        unint64_t v60 = sub_1DA7FE920((uint64_t)v57);
        uint64_t v61 = *((void *)v13 + 2);
        BOOL v62 = (v59 & 1) == 0;
        uint64_t v63 = v61 + v62;
        if (__OFADD__(v61, v62)) {
          goto LABEL_53;
        }
        char v64 = v59;
        if (*((void *)v13 + 3) >= v63)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v13 = (char *)v117;
            if ((v59 & 1) == 0) {
              goto LABEL_30;
            }
          }
          else
          {
            sub_1DA91B9AC();
            uint64_t v13 = (char *)v117;
            if ((v64 & 1) == 0) {
              goto LABEL_30;
            }
          }
        }
        else
        {
          sub_1DA912584(v63, isUniquelyReferenced_nonNull_native);
          unint64_t v65 = sub_1DA7FE920((uint64_t)v57);
          if ((v64 & 1) != (v66 & 1)) {
            goto LABEL_58;
          }
          unint64_t v60 = v65;
          uint64_t v13 = (char *)v117;
          if ((v64 & 1) == 0)
          {
LABEL_30:
            *(void *)&v13[8 * (v60 >> 6) + 64] |= 1 << v60;
            *(void *)(*((void *)v13 + 6) + 8 * v60) = v57;
            sub_1DA9738F4(v113, *((void *)v13 + 7) + v60 * v51, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
            uint64_t v67 = *((void *)v13 + 2);
            BOOL v41 = __OFADD__(v67, 1);
            uint64_t v68 = v67 + 1;
            if (v41) {
              goto LABEL_55;
            }
            *((void *)v13 + 2) = v68;
            id v69 = v57;
            goto LABEL_20;
          }
        }
        sub_1DA972F04(v113, *((void *)v13 + 7) + v60 * v51);
LABEL_20:

        swift_bridgeObjectRelease();
        v50 += v51;
        if (!--v49)
        {
          swift_bridgeObjectRelease();
          uint64_t v17 = (uint64_t)v110;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v70 = v106;
    uint64_t v71 = *(void *)(v106 + 64);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v71 + 24));
    sub_1DA96A4D4((void *)(v71 + 16), (uint64_t)v13);
    uint64_t v113 = v17;
    os_unfair_lock_unlock((os_unfair_lock_t)(v71 + 24));
    swift_release();
    uint64_t v72 = (uint64_t)v112;
    swift_bridgeObjectRetain();
    sub_1DA972CCC(v70, v72, (void (*)(unint64_t, unint64_t, uint64_t, uint64_t))sub_1DA91C390);
    swift_bridgeObjectRelease_n();
    if (!*(void *)(v116 + 16))
    {
      swift_bridgeObjectRelease();
LABEL_49:
      unint64_t v97 = sub_1DA807C28((uint64_t)v13);
      swift_bridgeObjectRelease();
      uint64_t v98 = sub_1DA8831FC((uint64_t)&unk_1F34D7670);
      swift_arrayDestroy();
      *(void *)&long long v117 = v97;
      *((void *)&v117 + 1) = v98;
      sub_1DA989FE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (qword_1EBE59148 == -1)
    {
LABEL_37:
      uint64_t v73 = sub_1DA989F38();
      __swift_project_value_buffer(v73, (uint64_t)qword_1EBE6F0A8);
      uint64_t v74 = sub_1DA989F18();
      os_log_type_t v75 = sub_1DA98C548();
      BOOL v76 = os_log_type_enabled(v74, v75);
      uint64_t v77 = v114;
      if (v76)
      {
        os_log_t v78 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_t v78 = 0;
        _os_log_impl(&dword_1DA795000, v74, v75, "Clearing abandoned extensions...", v78, 2u);
        MEMORY[0x1E0178DA0](v78, -1, -1);
      }

      uint64_t v79 = (void (**)(char *, char *, uint64_t))v116;
      int64_t v80 = *(void *)(v116 + 16);
      uint64_t v81 = MEMORY[0x1E4FBC860];
      if (v80)
      {
        *(void *)&long long v117 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1DA7F7B8C(0, v80, 0);
        uint64_t v82 = *(unsigned __int8 *)(v105 + 80);
        uint64_t v112 = v79;
        uint64_t v83 = (uint64_t)v79 + ((v82 + 32) & ~v82);
        uint64_t v84 = *(void *)(v105 + 72);
        uint64_t v85 = (void (**)(char *, uint64_t, uint64_t))(v111 + 16);
        uint64_t v81 = v117;
        os_log_t v86 = v108;
        do
        {
          uint64_t v87 = v107;
          sub_1DA972C4C(v83, v107);
          (*v85)(v86, v87, v77);
          sub_1DA9711B0(v87);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DA7F7B8C(0, *(void *)(v81 + 16) + 1, 1);
            uint64_t v81 = v117;
          }
          unint64_t v89 = *(void *)(v81 + 16);
          unint64_t v88 = *(void *)(v81 + 24);
          uint64_t v90 = v108;
          if (v89 >= v88 >> 1)
          {
            sub_1DA7F7B8C(v88 > 1, v89 + 1, 1);
            uint64_t v90 = v108;
            uint64_t v81 = v117;
          }
          *(void *)(v81 + 16) = v89 + 1;
          unint64_t v91 = v81
              + ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80))
              + *(void *)(v111 + 72) * v89;
          os_log_t v86 = v90;
          uint64_t v77 = v114;
          (*(void (**)(unint64_t, char *, uint64_t))(v111 + 32))(v91, v90, v114);
          v83 += v84;
          --v80;
        }
        while (v80);
        swift_bridgeObjectRelease();
      }
      uint64_t v92 = swift_bridgeObjectRelease();
      uint64_t v93 = v106;
      uint64_t v94 = *(os_unfair_lock_s **)(v106 + 72);
      MEMORY[0x1F4188790](v92);
      v100[-2] = v81;
      swift_retain();
      os_unfair_lock_lock(v94 + 6);
      sub_1DA972CB0((uint64_t)&v94[4]);
      os_unfair_lock_unlock(v94 + 6);
      swift_release();
      swift_bridgeObjectRetain();
      sub_1DA972CCC(v93, v81, (void (*)(unint64_t, unint64_t, uint64_t, uint64_t))sub_1DA91C188);
      uint64_t v95 = swift_bridgeObjectRelease();
      uint64_t v96 = *(void *)(v93 + 64);
      MEMORY[0x1F4188790](v95);
      v100[-2] = v81;
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v96 + 24));
      sub_1DA972EE8((uint64_t *)(v96 + 16));
      os_unfair_lock_unlock((os_unfair_lock_t)(v96 + 24));
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_49;
    }
LABEL_56:
    swift_once();
    goto LABEL_37;
  }
  uint64_t v101 = 0;
  uint64_t v102 = v16;
  uint64_t v103 = a2;
  uint64_t v104 = a1;
  uint64_t v22 = v18 + 4;
  uint64_t v112 = (void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v109 = (void (**)(char *, uint64_t))(v9 + 8);
  v100[1] = v18;
  swift_bridgeObjectRetain();
  uint64_t v23 = v114;
  unint64_t v24 = v110;
  while (1)
  {
    uint64_t v27 = v22[3];
    uint64_t v28 = v22[4];
    __swift_project_boxed_opaque_existential_0(v22, v27);
    uint64_t v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 40))(v27, v28);
    sub_1DA98C6F8();

    uint64_t v30 = *v112;
    (*v112)(v13, v24, v23);
    sub_1DA7A1A44((uint64_t)v22, (uint64_t)&v117);
    int v31 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v116 = (uint64_t)v20;
    unint64_t v33 = sub_1DA7FE778((uint64_t)v13);
    unint64_t v34 = v20[2];
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    char v37 = v32;
    if ((uint64_t)v20[3] < v36) {
      break;
    }
    if (v31)
    {
      uint64_t v20 = (unint64_t *)v116;
      if ((v32 & 1) == 0) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_1DA91A030();
      uint64_t v20 = (unint64_t *)v116;
      if ((v37 & 1) == 0)
      {
LABEL_12:
        v20[(v33 >> 6) + 8] |= 1 << v33;
        v30((char *)(v20[6] + *(void *)(v111 + 72) * v33), v13, v114);
        sub_1DA7A19A4(&v117, v20[7] + 40 * v33);
        unint64_t v40 = v20[2];
        BOOL v41 = __OFADD__(v40, 1);
        unint64_t v42 = v40 + 1;
        if (v41) {
          goto LABEL_54;
        }
        void v20[2] = v42;
        goto LABEL_4;
      }
    }
LABEL_3:
    uint64_t v25 = v20[7] + 40 * v33;
    __swift_destroy_boxed_opaque_existential_1(v25);
    sub_1DA7A19A4(&v117, v25);
LABEL_4:
    swift_bridgeObjectRelease();
    uint64_t v26 = *v109;
    uint64_t v23 = v114;
    (*v109)(v13, v114);
    unint64_t v24 = v110;
    v26(v110, v23);
    v22 += 5;
    if (!--v21)
    {
      swift_bridgeObjectRelease();
      a2 = v103;
      a1 = v104;
      uint64_t v19 = MEMORY[0x1E4FBC860];
      uint64_t v16 = v102;
      uint64_t v17 = v101;
      goto LABEL_17;
    }
  }
  sub_1DA90FE14(v36, v31);
  unint64_t v38 = sub_1DA7FE778((uint64_t)v13);
  if ((v37 & 1) == (v39 & 1))
  {
    unint64_t v33 = v38;
    uint64_t v20 = (unint64_t *)v116;
    if ((v37 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_3;
  }
  sub_1DA98CEC8();
  __break(1u);
LABEL_58:
  sub_1DA98C708();
  uint64_t result = sub_1DA98CEC8();
  __break(1u);
  return result;
}

uint64_t sub_1DA968484(uint64_t a1, long long *a2, void (*a3)(uint64_t), uint64_t a4)
{
  return WidgetDescriptorCache.populate(for:reason:completion:)(a1, a2, a3, a4);
}

uint64_t WidgetDescriptorCache.populate(for:reason:completion:)(uint64_t result, long long *a2, void (*a3)(uint64_t), uint64_t a4)
{
  if (*(void *)(result + 16))
  {
    long long v30 = *a2;
    uint64_t v36 = MEMORY[0x1E4FBC868];
    Class isa = v4[8].isa;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)isa + 6);
    swift_retain();
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = sub_1DA971EF4(v8, (uint64_t *)isa + 2, &v36, v4);
    swift_release();
    os_unfair_lock_unlock((os_unfair_lock_t)isa + 6);
    swift_release();
    if (*(void *)(v9 + 16))
    {
      if (qword_1EBE5A1C0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1DA989F38();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EBE6F1F8);
      swift_bridgeObjectRetain_n();
      uint64_t v11 = sub_1DA989F18();
      os_log_type_t v12 = sub_1DA98C548();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v29 = a3;
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v35 = v28;
        *(_DWORD *)uint64_t v13 = 136446210;
        uint64_t v14 = *(void *)(v9 + 16);
        uint64_t v15 = MEMORY[0x1E4FBC860];
        if (v14)
        {
          uint64_t v27 = a4;
          uint64_t v34 = MEMORY[0x1E4FBC860];
          sub_1DA98CAE8();
          uint64_t v16 = v9 + 32;
          do
          {
            sub_1DA7A1A44(v16, (uint64_t)v31);
            uint64_t v17 = v32;
            uint64_t v18 = v33;
            __swift_project_boxed_opaque_existential_0(v31, v32);
            (*(void (**)(uint64_t, uint64_t))(v18 + 40))(v17, v18);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
            sub_1DA98CAB8();
            sub_1DA98CAF8();
            sub_1DA98CB08();
            sub_1DA98CAC8();
            v16 += 40;
            --v14;
          }
          while (v14);
          uint64_t v15 = v34;
          a4 = v27;
        }
        uint64_t v19 = sub_1DA98C708();
        uint64_t v20 = MEMORY[0x1E0177440](v15, v19);
        unint64_t v22 = v21;
        swift_bridgeObjectRelease();
        v31[0] = sub_1DA8C5E00(v20, v22, &v35);
        sub_1DA98C858();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DA795000, v11, v12, "Refetching descriptors due to mismatching versions or locales: %{public}s", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v28, -1, -1);
        MEMORY[0x1E0178DA0](v13, -1, -1);

        a3 = v29;
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      *(_OWORD *)int v31 = v30;
      sub_1DA96CF24(v9, v31, a3, a4);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_1EBE59148 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1DA989F38();
      __swift_project_value_buffer(v23, (uint64_t)qword_1EBE6F0A8);
      unint64_t v24 = sub_1DA989F18();
      os_log_type_t v25 = sub_1DA98C548();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_1DA795000, v24, v25, "No updates required - descriptors are up to date", v26, 2u);
        MEMORY[0x1E0178DA0](v26, -1, -1);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1DA9688B0(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall WidgetDescriptorCache.refetch(for:)(Swift::OpaquePointer a1)
{
  if (*((void *)a1._rawValue + 2))
  {
    uint64_t v2 = v1;
    if (qword_1EBE59148 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1DA989F38();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBE6F0A8);
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_1DA989F18();
    os_log_type_t v6 = sub_1DA98C548();
    uint64_t v35 = v2;
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      *(void *)&long long v36 = v8;
      *(_DWORD *)uint64_t v7 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58E48);
      uint64_t v10 = MEMORY[0x1E0177440](a1._rawValue, v9);
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
      uint64_t v13 = v10;
      uint64_t v2 = v35;
      sub_1DA8C5E00(v13, v12, (uint64_t *)&v36);
      sub_1DA98C858();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA795000, v5, v6, "Refetching extensions: %{public}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0178DA0](v8, -1, -1);
      MEMORY[0x1E0178DA0](v7, -1, -1);
    }
    else
    {

      uint64_t v14 = swift_bridgeObjectRelease_n();
    }
    uint64_t v15 = *(void *)(v2 + 72);
    MEMORY[0x1F4188790](v14);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v15 + 24));
    sub_1DA972F68((uint64_t *)(v15 + 16), (uint64_t *)&v36);
    os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 24));
    uint64_t v16 = v36;
    swift_release();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = v16 + 32;
      uint64_t v19 = v2 + 16;
      swift_bridgeObjectRetain();
      do
      {
        sub_1DA7A1A44(v18, (uint64_t)&v36);
        uint64_t v20 = sub_1DA989F18();
        os_log_type_t v21 = sub_1DA98C548();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = swift_slowAlloc();
          uint64_t v23 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v22 = 138543362;
          uint64_t v25 = v37;
          uint64_t v24 = v38;
          __swift_project_boxed_opaque_existential_0(&v36, v37);
          uint64_t v26 = v25;
          uint64_t v2 = v35;
          uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 40))(v26, v24);
          *(void *)(v22 + 4) = v27;
          *uint64_t v23 = v27;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
          _os_log_impl(&dword_1DA795000, v20, v21, "Requesting descriptor fetch for %{public}@", (uint8_t *)v22, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v23, -1, -1);
          MEMORY[0x1E0178DA0](v22, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
        }

        if (MEMORY[0x1E0178E80](v19))
        {
          uint64_t v28 = *(void *)(v2 + 24);
          uint64_t ObjectType = swift_getObjectType();
          sub_1DA7A1A44(v18, (uint64_t)&v36);
          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = v2;
          sub_1DA7A19A4(&v36, v30 + 24);
          *(_OWORD *)(v30 + 64) = xmmword_1DA99AED0;
          *(void *)(v30 + 80) = 0;
          *(void *)(v30 + 88) = 0;
          int v31 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v28 + 24);
          swift_retain();
          v31(v18, sub_1DA972F88, v30, ObjectType, v28);
          swift_release();
          swift_unknownObjectRelease();
        }
        v18 += 40;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = sub_1DA989F18();
      os_log_type_t v33 = sub_1DA98C548();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl(&dword_1DA795000, v32, v33, "No descriptors to load because they were filtered.", v34, 2u);
        MEMORY[0x1E0178DA0](v34, -1, -1);
      }
    }
  }
}

BOOL sub_1DA968DBC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA9739DC((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  BOOL v2 = v4;
  swift_release();
  return v2;
}

BOOL WidgetDescriptorCache.hasAnyVersionCached(extension:)()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA972F8C((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  BOOL v2 = v4;
  swift_release();
  return v2;
}

void sub_1DA968EB0(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall WidgetDescriptorCache.clear(for:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  os_log_type_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *((void *)a1._rawValue + 2);
  if (v7)
  {
    uint64_t v25 = v1;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v29 = MEMORY[0x1E4FBC860];
    uint64_t v9 = (char *)a1._rawValue + 32;
    v24[1] = a1._rawValue;
    swift_bridgeObjectRetain();
    do
    {
      sub_1DA7A1A44((uint64_t)v9, (uint64_t)v26);
      uint64_t v10 = v27;
      uint64_t v11 = v28;
      __swift_project_boxed_opaque_existential_0(v26, v27);
      (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
      MEMORY[0x1E0177400]();
      if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1DA98C2D8();
      }
      sub_1DA98C308();
      sub_1DA98C2A8();
      uint64_t v12 = v27;
      uint64_t v13 = v28;
      __swift_project_boxed_opaque_existential_0(v26, v27);
      uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
      sub_1DA98C6F8();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1DA7CB58C(0, *(void *)(v8 + 16) + 1, 1, v8);
      }
      unint64_t v16 = *(void *)(v8 + 16);
      unint64_t v15 = *(void *)(v8 + 24);
      if (v16 >= v15 >> 1) {
        uint64_t v8 = sub_1DA7CB58C(v15 > 1, v16 + 1, 1, v8);
      }
      *(void *)(v8 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v16, v6, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      v9 += 40;
      --v7;
    }
    while (v7);
    uint64_t v17 = swift_bridgeObjectRelease();
    uint64_t v18 = v25;
    uint64_t v19 = *(os_unfair_lock_s **)(v25 + 72);
    MEMORY[0x1F4188790](v17);
    v24[-2] = v8;
    swift_retain();
    os_unfair_lock_lock(v19 + 6);
    sub_1DA973994((uint64_t)&v19[4]);
    os_unfair_lock_unlock(v19 + 6);
    swift_release();
    swift_bridgeObjectRetain();
    sub_1DA972CCC(v18, v8, (void (*)(unint64_t, unint64_t, uint64_t, uint64_t))sub_1DA91C188);
    uint64_t v20 = swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)(v18 + 64);
    MEMORY[0x1F4188790](v20);
    v24[-2] = v8;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_1DA9739AC((uint64_t *)(v21 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v22 = v29;
    uint64_t v23 = sub_1DA8831FC((uint64_t)&unk_1F34D76A0);
    swift_arrayDestroy();
    v26[0] = v22;
    v26[1] = v23;
    sub_1DA989FE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DA969284(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  return WidgetDescriptorCache.fillCache(for:descriptors:controlDescriptors:activityDescriptors:reason:)(a1, a2, a3, a4, a5);
}

uint64_t WidgetDescriptorCache.fillCache(for:descriptors:controlDescriptors:activityDescriptors:reason:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  unint64_t v53 = a4;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v7 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for ExtensionMetadata();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a5;
  unint64_t v48 = a5[1];
  uint64_t v49 = v13;
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F6C8]), sel_init);
  unint64_t v15 = v14;
  if (v14)
  {
    id v16 = objc_msgSend(v14, sel_stringRepresentation);

    unint64_t v15 = (void *)sub_1DA98C038();
    unint64_t v18 = v17;
  }
  else
  {
    unint64_t v18 = 0xE000000000000000;
  }
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v19);
  uint64_t v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
  sub_1DA98C6F8();

  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v22);
  uint64_t v24 = sub_1DA9653F8(v22, v23);
  uint64_t v26 = v25;
  uint64_t v27 = &v12[v10[8]];
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v9, v50);
  uint64_t v28 = (uint64_t *)&v12[v10[5]];
  *uint64_t v28 = v24;
  v28[1] = v26;
  *(void *)uint64_t v27 = v15;
  *((void *)v27 + 1) = v18;
  uint64_t v29 = v52;
  *(void *)&v12[v10[6]] = v51;
  uint64_t v30 = v10[9];
  *(void *)&v12[v10[7]] = v29;
  unint64_t v31 = v53;
  *(void *)&v12[v30] = v53;
  uint64_t v32 = qword_1EBE5A1D8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1DA989F38();
  __swift_project_value_buffer(v33, (uint64_t)qword_1EBE6F168);
  swift_bridgeObjectRetain_n();
  uint64_t v34 = sub_1DA989F18();
  os_log_type_t v35 = sub_1DA98C548();
  BOOL v36 = os_log_type_enabled(v34, v35);
  uint64_t v37 = v54;
  if (v36)
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 134217984;
    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1DA98CBD8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v39 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v55[0] = v39;
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v34, v35, "Filling descriptor cache with %ld activity descriptors", v38, 0xCu);
    MEMORY[0x1E0178DA0](v38, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v40 = *(void *)(v37 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v40 + 24));
  sub_1DA96DAC4((uint64_t *)(v40 + 16), a1, (uint64_t)v12, v37, v55);
  os_unfair_lock_unlock((os_unfair_lock_t)(v40 + 24));
  unint64_t v41 = v55[0];
  swift_release();
  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1DA98CBD8();
    swift_bridgeObjectRelease();
    if (!v47) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A048);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DA990050;
    unint64_t v44 = v48;
    uint64_t v43 = v49;
    *(void *)(inited + 32) = v49;
    *(void *)(inited + 40) = v44;
    sub_1DA8835DC(v43, v44);
    uint64_t v45 = sub_1DA8831FC(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    v55[0] = v41;
    v55[1] = v45;
    sub_1DA989FE8();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return sub_1DA9711B0((uint64_t)v12);
}

void *sub_1DA969760()
{
  return WidgetDescriptorCache.controlDescriptors.getter();
}

uint64_t sub_1DA969784()
{
  return WidgetDescriptorCache.controlDescriptors(containedBy:)();
}

uint64_t sub_1DA9697A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA97397C((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1DA969820()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA9661D4((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

void sub_1DA969898(void **a1)
{
}

uint64_t sub_1DA9698BC()
{
  return WidgetDescriptorCache.activityDescriptors(containedBy:)();
}

uint64_t sub_1DA9698E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1DA966E18((uint64_t *)(v5 + 16), a1, a2, &v8);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  uint64_t v6 = v8;
  swift_release();
  return v6;
}

uint64_t sub_1DA96996C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA965AE0((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

unint64_t sub_1DA9699E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1DA9739C4((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  unint64_t v2 = v4;
  swift_release();
  return v2;
}

unint64_t DescriptorMatchError.failureReason.getter()
{
  uint64_t v1 = *(void **)v0;
  if (*(unsigned char *)(v0 + 8))
  {
    unint64_t v7 = 0;
    id v2 = v1;
    sub_1DA98CA18();
    sub_1DA98C148();
    id v3 = objc_msgSend(v2, sel_description);
    sub_1DA98C038();

    sub_1DA98C148();
    swift_bridgeObjectRelease();
    sub_1DA98C148();
  }
  else
  {
    id v4 = v1;
    sub_1DA98CA18();
    swift_bridgeObjectRelease();
    unint64_t v7 = 0xD00000000000002DLL;
    id v5 = objc_msgSend(v4, sel_description);
    sub_1DA98C038();

    sub_1DA98C148();
    swift_bridgeObjectRelease();
  }

  return v7;
}

unint64_t DescriptorMatchError.recoverySuggestion.getter()
{
  if (*(unsigned char *)(v0 + 8)) {
    return 0xD000000000000060;
  }
  else {
    return 0xD000000000000049;
  }
}

unint64_t sub_1DA969C2C()
{
  if (*(unsigned char *)(v0 + 8)) {
    return 0xD000000000000060;
  }
  else {
    return 0xD000000000000049;
  }
}

uint64_t sub_1DA969C6C()
{
  if (!*(void *)(v0 + 32)) {
    return MEMORY[0x1E4FBC860];
  }
  swift_retain();
  uint64_t v1 = sub_1DA8FB340();
  swift_release();
  return v1;
}

uint64_t sub_1DA969E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, unint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v7 = v6;
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v12 = type metadata accessor for ExtensionMetadata();
  uint64_t v13 = *(char **)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v62 - v17;
  uint64_t v83 = MEMORY[0x1E4FBC860];
  uint64_t v20 = *(int *)(v19 + 24);
  uint64_t v81 = a1;
  unint64_t v21 = *(void *)(a1 + v20);
  if (v21 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1DA98CBD8();
    if (v22) {
      goto LABEL_3;
    }
LABEL_38:
    swift_bridgeObjectRelease();
LABEL_39:
    swift_bridgeObjectRelease();
    return sub_1DA972C4C(v81, a6);
  }
  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v22) {
    goto LABEL_38;
  }
LABEL_3:
  uint64_t v67 = (int *)v12;
  uint64_t v68 = v15;
  uint64_t v70 = v13;
  uint64_t v71 = a6;
  id v69 = a5;
  uint64_t v72 = v7;
  uint64_t ObjectType = swift_getObjectType();
  int v24 = 0;
  unint64_t v15 = 0;
  a6 = v80 + 8;
  BOOL v76 = *(uint64_t (**)(char *, uint64_t *, uint64_t, uint64_t))(v80 + 8);
  uint64_t v77 = ObjectType;
  unint64_t v78 = v21 & 0xC000000000000001;
  uint64_t v75 = v21 & 0xFFFFFFFFFFFFFF8;
  *(void *)&long long v25 = 136446210;
  long long v66 = v25;
  uint64_t v65 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v74 = v18;
LABEL_4:
  int v73 = v24;
  unint64_t v7 = v15;
  do
  {
    if (v78)
    {
      uint64_t v26 = (char *)MEMORY[0x1E0177C00](v7, v21);
    }
    else
    {
      if ((unint64_t)v7 >= *(void *)(v75 + 16)) {
        goto LABEL_36;
      }
      uint64_t v26 = (char *)*(id *)(v21 + 8 * (void)v7 + 32);
    }
    unint64_t v18 = v26;
    unint64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (!a4[2]) {
      goto LABEL_34;
    }
    a5 = a4;
    unint64_t v27 = sub_1DA7FE778(v81);
    if ((v28 & 1) == 0) {
      goto LABEL_35;
    }
    sub_1DA7A1A44(a4[7] + 40 * v27, (uint64_t)v82);
    uint64_t v29 = (void *)v76(v18, v82, v77, v80);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    if (v29)
    {
      if (qword_1EBE59148 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1DA989F38();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EBE6F0A8);
      uint64_t v31 = (uint64_t)v74;
      sub_1DA972C4C(v81, (uint64_t)v74);
      uint64_t v32 = sub_1DA989F18();
      os_log_type_t v33 = sub_1DA98C548();
      int v73 = v33;
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v63 = swift_slowAlloc();
        v82[0] = v63;
        *(_DWORD *)uint64_t v34 = v66;
        char v64 = v32;
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
        sub_1DA7A0410((unint64_t *)&unk_1EBE5A180, &qword_1EBE5A190);
        uint64_t v35 = sub_1DA98CDD8();
        *(void *)(v34 + 4) = sub_1DA8C5E00(v35, v36, v82);
        swift_bridgeObjectRelease();
        sub_1DA9711B0((uint64_t)v74);
        uint64_t v37 = v34;
        _os_log_impl(&dword_1DA795000, v64, (os_log_type_t)v73, "Initialization: Migrated cached descriptors for extension %{public}s", (uint8_t *)v34, 0xCu);
        uint64_t v38 = v63;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v38, -1, -1);
        MEMORY[0x1E0178DA0](v37, -1, -1);
      }
      else
      {
        sub_1DA9711B0(v31);
      }
      uint64_t v13 = v29;
      a5 = (unint64_t *)&v83;
      MEMORY[0x1E0177400]();
      if (*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1DA98C2D8();
      }
      sub_1DA98C308();
      sub_1DA98C2A8();

      int v24 = 1;
      if (v15 == (char *)v22)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      goto LABEL_4;
    }
    uint64_t v13 = v18;
    a5 = (unint64_t *)&v83;
    MEMORY[0x1E0177400]();
    unint64_t v18 = *(char **)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v18 >= *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1DA98C2D8();
    }
    sub_1DA98C308();
    sub_1DA98C2A8();

    ++v7;
  }
  while (v15 != (char *)v22);
  swift_bridgeObjectRelease();
  if ((v73 & 1) == 0)
  {
    a6 = v71;
    goto LABEL_39;
  }
LABEL_27:
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v40 = v71;
  uint64_t v41 = v81;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v71, v81, v39);
  unint64_t v42 = v67;
  uint64_t v43 = v67[5];
  uint64_t v44 = *(void *)(v41 + v43);
  uint64_t v45 = *(void *)(v41 + v43 + 8);
  uint64_t v46 = v67[8];
  uint64_t v47 = *(void *)(v41 + v46);
  uint64_t v48 = *(void *)(v41 + v46 + 8);
  uint64_t v49 = v83;
  uint64_t v50 = *(void *)(v41 + v67[7]);
  uint64_t v51 = *(void *)(v41 + v67[9]);
  uint64_t v52 = (void *)(v40 + v46);
  unint64_t v53 = (void *)(v40 + v43);
  *unint64_t v53 = v44;
  v53[1] = v45;
  void *v52 = v47;
  v52[1] = v48;
  *(void *)(v40 + v42[6]) = v49;
  *(void *)(v40 + v42[9]) = v51;
  *(void *)(v40 + v42[7]) = v50;
  uint64_t v54 = (uint64_t)v68;
  sub_1DA972C4C(v40, (uint64_t)v68);
  uint64_t v55 = v69;
  unint64_t v56 = *v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v55 = v56;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v56 = sub_1DA7CB558(0, *(void *)(v56 + 16) + 1, 1, v56);
    *uint64_t v55 = v56;
  }
  uint64_t v58 = v70;
  unint64_t v60 = *(void *)(v56 + 16);
  unint64_t v59 = *(void *)(v56 + 24);
  if (v60 >= v59 >> 1)
  {
    unint64_t v56 = sub_1DA7CB558(v59 > 1, v60 + 1, 1, v56);
    *uint64_t v55 = v56;
  }
  *(void *)(v56 + 16) = v60 + 1;
  return sub_1DA9738F4(v54, v56+ ((v58[80] + 32) & ~(unint64_t)v58[80])+ *((void *)v58 + 9) * v60, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
}

void sub_1DA96A4D4(void *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *a1 = a2;
  uint64_t v4 = qword_1EBE5A1C0;
  swift_bridgeObjectRetain_n();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1DA989F38();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBE6F1F8);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1DA989F18();
  os_log_type_t v7 = sub_1DA98C548();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v13 = v9;
    *(_DWORD *)uint64_t v8 = 134349314;
    sub_1DA98C858();
    *(_WORD *)(v8 + 12) = 2082;
    sub_1DA98C708();
    type metadata accessor for ExtensionMetadata();
    sub_1DA97388C((unint64_t *)&qword_1EBE63FF0, MEMORY[0x1E4F58B88]);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DA98BED8();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_1DA8C5E00(v10, v12, &v13);
    sub_1DA98C858();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA795000, v6, v7, "Initialization: Descriptors loaded from cache (%{public}ld) %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v9, -1, -1);
    MEMORY[0x1E0178DA0](v8, -1, -1);
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1DA96A74C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ExtensionMetadata();
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (void *)((char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void *)(a2 + 16);
  if (v11)
  {
    uint64_t v12 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v13 = a2;
    uint64_t v14 = (void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v15 = *(void *)(v8 + 72);
    v16[1] = v13;
    swift_bridgeObjectRetain();
    do
    {
      sub_1DA972C4C(v12, (uint64_t)v10);
      sub_1DA972C4C((uint64_t)v10, (uint64_t)v6);
      (*v14)(v6, 0, 1, v7);
      sub_1DA8FE910((uint64_t)v6, v10);
      sub_1DA7A1AE0((uint64_t)v6, (uint64_t *)&unk_1EBE595D8);
      sub_1DA9711B0((uint64_t)v10);
      if (v2) {
        break;
      }
      v12 += v15;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DA96A908(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 32);
  if (v2)
  {
    id v3 = (void (*)(uint64_t))result;
    uint64_t v4 = *(void **)(v2 + 16);
    type metadata accessor for ChronoMetadataStore.MutableStore();
    swift_allocObject();
    uint64_t v5 = sub_1DA91BE30();
    uint64_t v6 = *(void *)(v2 + 128);
    uint64_t v7 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v7);
    swift_retain();
    sub_1DA7C5B90(0xD000000000000015, 0x80000001DA9A50B0, v4, (uint64_t)v5, v3);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    sub_1DA8FB09C();
    return swift_release();
  }
  return result;
}

uint64_t WidgetDescriptorCacheUpdate.init(extensionIdentities:reasons:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1DA96AB80(void *a1, uint64_t *a2, uint64_t *a3, NSObject *a4)
{
  void (*isa)(long long *__return_ptr, char *);
  void *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  char *v81;
  long long v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  BOOL v97;
  id v98;
  BOOL v99;
  id v100;
  unint64_t v101;
  id v102;
  void *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  size_t v126;
  int v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  size_t v131;
  int v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  size_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  size_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  int64_t v148;
  uint64_t v149;
  size_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  size_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  NSObject *v161;
  os_log_type_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  id v174;
  void *v175;
  uint64_t v176;
  uint64_t v178;
  unint64_t v179;
  void *v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  id v184;
  void *v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  NSObject *v193;
  os_log_type_t v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t (*v201)(uint64_t, uint64_t);
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  NSObject *v209;
  uint64_t v210;
  char *v211;
  unint64_t v212;
  uint64_t v213;
  id v214;
  void *v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  NSObject *v219;
  NSObject *v220;
  os_log_type_t v221;
  int v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t (*v227)(uint64_t, uint64_t);
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  NSObject *v233;
  id v234;
  os_log_t v235;
  char *v236;
  void *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  char *v247;
  NSObject *v248;
  BOOL v249;
  uint64_t v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void *v254;
  uint64_t v255;
  NSObject *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t *v260;
  NSObject *v261;
  void *v262;
  uint64_t v263;
  void *v264;
  uint64_t __s2;
  __int16 v266;
  char v267;
  char v268;
  char v269;
  char v270;
  uint64_t v271;
  uint64_t v272;
  long long __s1;
  void *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;

  unint64_t v5 = v4;
  unsigned int v256 = a4;
  int v260 = a3;
  uint64_t v277 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t v258 = *(void *)(v8 - 8);
  int v259 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v257 = (char *)&v241 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v241 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ExtensionMetadata();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v255 = (uint64_t)&v241 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  os_log_t v18 = (os_log_t)((char *)&v241 - v17);
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  uint64_t v262 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v19);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
  uint64_t v22 = (void *)v21;
  uint64_t v23 = *a2;
  if (*(void *)(*a2 + 16) && (unint64_t v24 = sub_1DA7FE920(v21), (v25 & 1) != 0))
  {
    sub_1DA972C4C(*(void *)(v23 + 56) + *(void *)(v14 + 72) * v24, (uint64_t)v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  }

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v12, (uint64_t *)&unk_1EBE595D8);
    if (qword_1EBE59148 != -1) {
      goto LABEL_211;
    }
    goto LABEL_7;
  }
  sub_1DA9738F4((uint64_t)v12, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
  id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F6C8]), sel_init);
  uint64_t v261 = v18;
  if (!v35)
  {
    if (qword_1EBE59148 == -1) {
      goto LABEL_21;
    }
    goto LABEL_216;
  }
  unint64_t v36 = v35;
  if (*(Class *)((char *)&v18[1].isa + *(int *)(v13 + 32))
    && (id v37 = objc_allocWithZone(MEMORY[0x1E4F4F6C8]),
        swift_bridgeObjectRetain(),
        uint64_t v38 = (void *)sub_1DA98C008(),
        swift_bridgeObjectRelease(),
        id v39 = objc_msgSend(v37, sel_initWithString_, v38),
        v38,
        v39))
  {
    unsigned __int8 v40 = objc_msgSend(v39, sel_isBefore_withPrecision_, v36, 1);

    if ((v40 & 1) == 0)
    {
      char v41 = 0;
      goto LABEL_25;
    }
  }
  else
  {
  }
  if (qword_1EBE59148 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_1DA989F38();
  __swift_project_value_buffer(v42, (uint64_t)qword_1EBE6F0A8);
  sub_1DA7A1A44((uint64_t)v262, (uint64_t)&__s1);
  uint64_t v43 = sub_1DA989F18();
  os_log_type_t v44 = sub_1DA98C548();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v254 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 138543362;
    uint64_t v253 = (uint64_t)(v45 + 4);
    uint64_t v46 = v275;
    uint64_t v47 = v276;
    __swift_project_boxed_opaque_existential_0(&__s1, v275);
    uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t))(v47 + 40);
    uint64_t v49 = v47;
    unint64_t v5 = v4;
    uint64_t v50 = v48(v46, v49);
    __s2 = v50;
    sub_1DA98C858();
    uint64_t v51 = v254;
    *uint64_t v254 = v50;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s1);
    _os_log_impl(&dword_1DA795000, v43, v44, "Refetching descriptors due to OS version change for %{public}@", v45, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
    char v41 = 1;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v51, -1, -1);
    uint64_t v52 = v45;
    os_log_t v18 = v261;
    MEMORY[0x1E0178DA0](v52, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s1);

    char v41 = 1;
  }
LABEL_25:
  while (2)
  {
    id v57 = (uint64_t *)((char *)v18 + *(int *)(v13 + 20));
    uint64_t v59 = *v57;
    uint64_t v58 = v57[1];
    uint64_t v60 = v262[3];
    uint64_t v61 = v262[4];
    __swift_project_boxed_opaque_existential_0(v262, v60);
    swift_bridgeObjectRetain();
    if (v59 == sub_1DA9653F8(v60, v61) && v58 == v62)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v63 = sub_1DA98CE58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v63 & 1) == 0)
      {
        uint64_t v157 = v13;
        if (qword_1EBE59148 != -1) {
          swift_once();
        }
        id v158 = sub_1DA989F38();
        __swift_project_value_buffer(v158, (uint64_t)qword_1EBE6F0A8);
        id v159 = v255;
        sub_1DA972C4C((uint64_t)v18, v255);
        uint64_t v160 = v262;
        sub_1DA7A1A44((uint64_t)v262, (uint64_t)&__s1);
        sub_1DA7A1A44((uint64_t)v160, (uint64_t)&__s2);
        id v161 = sub_1DA989F18();
        int v162 = sub_1DA98C548();
        if (os_log_type_enabled(v161, v162))
        {
          uint64_t v163 = swift_slowAlloc();
          int v260 = (uint64_t *)swift_slowAlloc();
          uint64_t v262 = (void *)swift_slowAlloc();
          uint64_t v264 = v262;
          *(_DWORD *)uint64_t v163 = 136446722;
          uint64_t v164 = (uint64_t *)(v159 + *(int *)(v157 + 20));
          id v165 = *v164;
          uint64_t v166 = v164[1];
          swift_bridgeObjectRetain();
          unint64_t v263 = sub_1DA8C5E00(v165, v166, (uint64_t *)&v264);
          sub_1DA98C858();
          swift_bridgeObjectRelease();
          sub_1DA9711B0(v159);
          *(_WORD *)(v163 + 12) = 2082;
          char v167 = v275;
          id v168 = v276;
          __swift_project_boxed_opaque_existential_0(&__s1, v275);
          char v169 = sub_1DA9653F8(v167, v168);
          unint64_t v263 = sub_1DA8C5E00(v169, v170, (uint64_t *)&v264);
          sub_1DA98C858();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s1);
          *(_WORD *)(v163 + 22) = 2114;
          CGRect v172 = v271;
          uint64_t v171 = v272;
          __swift_project_boxed_opaque_existential_0(&__s2, v271);
          os_log_t v18 = v261;
          uint64_t v173 = (*(uint64_t (**)(uint64_t, uint64_t))(v171 + 40))(v172, v171);
          unint64_t v263 = v173;
          sub_1DA98C858();
          uint64_t v174 = v260;
          *int v260 = v173;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s2);
          _os_log_impl(&dword_1DA795000, v161, v162, "Refetching descriptors due to extension version change, from %{public}s to %{public}s for %{public}@", (uint8_t *)v163, 0x20u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v174, -1, -1);
          uint64_t v175 = v262;
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v175, -1, -1);
          MEMORY[0x1E0178DA0](v163, -1, -1);
        }
        else
        {
          sub_1DA9711B0(v159);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s1);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s2);
        }

LABEL_175:
        sub_1DA9711B0((uint64_t)v18);
        return 1;
      }
    }
    if (v41) {
      goto LABEL_175;
    }
    uint64_t v255 = v13;
    uint64_t v64 = v262[3];
    uint64_t v65 = v262[4];
    __swift_project_boxed_opaque_existential_0(v262, v64);
    uint64_t v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 144))(v64, v65);
    uint64_t v68 = *v260;
    if (!*(void *)(*v260 + 16) || (unint64_t v69 = sub_1DA7FDF54(v66, v67), (v70 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      unint64_t v72 = 0;
      uint64_t v73 = 0;
LABEL_35:
      uint64_t v254 = (void *)v72;
      Class isa = (void (*)(long long *__return_ptr, char *))v256[6].isa;
      BOOL v76 = v262;
      uint64_t v77 = v262[3];
      unint64_t v78 = v262[4];
      __swift_project_boxed_opaque_existential_0(v262, v77);
      uint64_t v79 = v5;
      uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v78 + 144);
      swift_retain();
      v80(v77, v78);
      unint64_t v5 = v79;
      uint64_t v81 = v257;
      sub_1DA9899B8();
      isa(&__s1, v81);
      os_log_t v18 = v261;
      swift_release();
      (*(void (**)(char *, uint64_t))(v258 + 8))(v81, v259);
      uint64_t v82 = __s1;
      uint64_t v83 = v274;
      sub_1DA872360(v73, (unint64_t)v254, 0);
      uint64_t v84 = v76[3];
      uint64_t v85 = v76[4];
      __swift_project_boxed_opaque_existential_0(v76, v84);
      os_log_t v86 = (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 144))(v84, v85);
      unint64_t v88 = v87;
      sub_1DA8EB2D8(v82, *((unint64_t *)&v82 + 1), (uint64_t)v83);
      uint64_t v254 = v83;
      sub_1DA87043C(v82, *((uint64_t *)&v82 + 1), (uint64_t)v83, v86, v88);
      unint64_t v72 = *((void *)&v82 + 1);
      uint64_t v73 = v82;
      goto LABEL_36;
    }
    uint64_t v71 = (uint64_t *)(*(void *)(v68 + 56) + 24 * v69);
    uint64_t v73 = *v71;
    unint64_t v72 = v71[1];
    uint64_t v74 = (void *)v71[2];
    sub_1DA79ED98(*v71, v72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v254 = v74;
    if (!v74) {
      goto LABEL_35;
    }
LABEL_36:
    unint64_t v89 = v255;
    uint64_t v90 = *(unint64_t *)((char *)&v18->isa + *(int *)(v255 + 24));
    if (v90 >> 62)
    {
      sub_1DA84FE28();
      swift_bridgeObjectRetain();
      uint64_t v238 = sub_1DA98CBC8();
      swift_bridgeObjectRelease();
      uint64_t v90 = v238;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DA98CE78();
      sub_1DA84FE28();
    }
    os_log_type_t v252 = *(int *)(v89 + 28);
    unint64_t v91 = *(unint64_t *)((char *)&v18->isa + v252);
    if (v91 >> 62)
    {
      sub_1DA84FE28();
      swift_bridgeObjectRetain();
      uint64_t v239 = sub_1DA98CBC8();
      swift_bridgeObjectRelease();
      unint64_t v91 = v239;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DA98CE78();
      sub_1DA84FE28();
    }
    *(void *)&__s1 = v90;
    sub_1DA8847D8(v91);
    uint64_t v92 = __s1;
    uint64_t v93 = *(unint64_t *)((char *)&v18->isa + *(int *)(v89 + 36));
    if (v93 >> 62)
    {
      sub_1DA84FE28();
      swift_bridgeObjectRetain();
      uint64_t v240 = sub_1DA98CBC8();
      swift_bridgeObjectRelease();
      uint64_t v93 = v240;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DA98CE78();
      sub_1DA84FE28();
    }
    uint64_t v94 = (uint64_t)v254;
    *(void *)&__s1 = v92;
    sub_1DA8847D8(v93);
    uint64_t v95 = __s1;
    if ((unint64_t)__s1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_1DA98CBD8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v96 = *(NSObject **)((__s1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v251 = v5;
    if (!v96)
    {
LABEL_172:
      swift_bridgeObjectRelease();
      uint64_t v176 = 0;
      goto LABEL_192;
    }
    int v259 = v95 & 0xC000000000000001;
    uint64_t v257 = (char *)(v72 >> 62);
    uint64_t v246 = HIDWORD(v73);
    unint64_t v97 = __OFSUB__(HIDWORD(v73), v73);
    uint64_t v249 = v97;
    uint64_t v248 = (HIDWORD(v73) - (int)v73);
    unsigned int v256 = BYTE6(v72);
    uint64_t v253 = v72 & 0x3FFFFFFFFFFFFFFFLL;
    uint64_t v250 = (int)v73;
    uint64_t v245 = v73 >> 32;
    uint64_t v244 = (v73 >> 32) - (int)v73;
    unint64_t v5 = 4;
    uint64_t v255 = v95;
    uint64_t v258 = (uint64_t)v96;
LABEL_51:
    if (v259) {
      uint64_t v100 = (id)MEMORY[0x1E0177C00](v5 - 4, v95);
    }
    else {
      uint64_t v100 = *(id *)(v95 + 8 * v5);
    }
    uint64_t v101 = (unint64_t)v100;
    os_log_t v18 = (os_log_t)(v5 - 3);
    if (__OFADD__(v5 - 4, 1))
    {
LABEL_210:
      __break(1u);
LABEL_211:
      swift_once();
LABEL_7:
      uint64_t v26 = sub_1DA989F38();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EBE6F0A8);
      sub_1DA7A1A44((uint64_t)v262, (uint64_t)&__s1);
      unint64_t v27 = sub_1DA989F18();
      os_log_type_t v28 = sub_1DA98C548();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v30 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 138543362;
        uint64_t v262 = (void *)(v29 + 4);
        uint64_t v31 = v275;
        uint64_t v32 = v276;
        __swift_project_boxed_opaque_existential_0(&__s1, v275);
        uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 40))(v31, v32);
        __s2 = v33;
        sub_1DA98C858();
        *uint64_t v30 = v33;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s1);
        _os_log_impl(&dword_1DA795000, v27, v28, "No metadata for %{public}@", (uint8_t *)v29, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
        uint64_t v34 = 1;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v30, -1, -1);
        MEMORY[0x1E0178DA0](v29, -1, -1);

        return v34;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s1);

      return 1;
    }
    if (!v94)
    {
      uint64_t v98 = objc_msgSend(v100, sel_localeToken);
      if (!v98) {
        goto LABEL_50;
      }
      uint64_t v180 = v98;
      uint64_t v181 = sub_1DA9894E8();
      uint64_t v183 = v182;

      uint64_t v178 = v181;
      int v179 = v183;
LABEL_181:
      sub_1DA79DA70(v178, v179);
LABEL_182:
      int v259 = 7104878;
      swift_bridgeObjectRelease();
      id v184 = objc_msgSend((id)v101, sel_localeToken);
      if (v184)
      {
        int v185 = v184;
        uint64_t v186 = sub_1DA9894E8();
        id v188 = v187;

        uint64_t v258 = sub_1DA9894D8();
        unint64_t v5 = v189;
        sub_1DA79DA70(v186, v188);
        if (v94) {
          goto LABEL_184;
        }
LABEL_186:
        uint64_t v105 = 0xE300000000000000;
      }
      else
      {
        unint64_t v5 = 0xE300000000000000;
        uint64_t v258 = 7104878;
        if (!v94) {
          goto LABEL_186;
        }
LABEL_184:
        sub_1DA79ED98(v73, v72);
        int v259 = sub_1DA9894D8();
        uint64_t v105 = v190;
        sub_1DA79DA70(v73, v72);
      }
      if (qword_1EBE59778 != -1) {
        goto LABEL_226;
      }
      goto LABEL_188;
    }
    sub_1DA79ED98(v73, v72);
    sub_1DA79ED98(v73, v72);
    sub_1DA79ED98(v73, v72);
    uint64_t v102 = objc_msgSend((id)v101, sel_localeToken);
    if (!v102)
    {
      sub_1DA7A1ACC(0, 0xF000000000000000);
      sub_1DA7A1ACC(v73, v72);
      sub_1DA79DA70(v73, v72);
      uint64_t v178 = v73;
      int v179 = v72;
      goto LABEL_181;
    }
    uint64_t v103 = v102;
    int v260 = (uint64_t *)v101;
    uint64_t v13 = sub_1DA9894E8();
    uint64_t v101 = v104;

    uint64_t v105 = 0;
    switch(v101 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v13), v13))
        {
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          __break(1u);
LABEL_215:
          __break(1u);
LABEL_216:
          swift_once();
LABEL_21:
          uint64_t v53 = sub_1DA989F38();
          __swift_project_value_buffer(v53, (uint64_t)qword_1EBE6F0A8);
          uint64_t v54 = sub_1DA989F18();
          os_log_type_t v55 = sub_1DA98C528();
          if (os_log_type_enabled(v54, v55))
          {
            unint64_t v56 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v56 = 0;
            _os_log_impl(&dword_1DA795000, v54, v55, "Failed to get build version", v56, 2u);
            MEMORY[0x1E0178DA0](v56, -1, -1);
          }

          char v41 = 0;
          continue;
        }
        uint64_t v105 = HIDWORD(v13) - (int)v13;
LABEL_62:
        sub_1DA79ED98(v13, v101);
LABEL_63:
        uint64_t v108 = v256;
        switch((int)v257)
        {
          case 1:
            uint64_t v108 = v248;
            if (v249) {
              goto LABEL_214;
            }
            goto LABEL_67;
          case 2:
            uint64_t v110 = *(void *)(v73 + 16);
            uint64_t v109 = *(void *)(v73 + 24);
            uint64_t v111 = __OFSUB__(v109, v110);
            uint64_t v108 = (v109 - v110);
            if (!v111) {
              goto LABEL_67;
            }
            goto LABEL_215;
          case 3:
            if (!v105) {
              goto LABEL_78;
            }
            goto LABEL_179;
          default:
LABEL_67:
            if (v105 != v108)
            {
LABEL_179:
              sub_1DA79DA70(v13, v101);
              sub_1DA79DA70(v13, v101);
              sub_1DA79DA70(v73, v72);
              sub_1DA79DA70(v73, v72);
              sub_1DA79DA70(v73, v72);
              uint64_t v101 = (unint64_t)v260;
              goto LABEL_182;
            }
            if (v105 < 1)
            {
LABEL_78:
              sub_1DA79DA70(v13, v101);
              sub_1DA79DA70(v13, v101);
              sub_1DA79DA70(v73, v72);
              sub_1DA79DA70(v73, v72);
              sub_1DA79DA70(v73, v72);
              uint64_t v101 = (unint64_t)v260;
              uint64_t v95 = v255;
              goto LABEL_50;
            }
            break;
        }
        switch(v101 >> 62)
        {
          case 1uLL:
            uint64_t v94 = (int)v13;
            if ((int)v13 <= v13 >> 32)
            {
              sub_1DA79ED98(v73, v72);
              uint64_t v116 = sub_1DA9891A8();
              if (v116)
              {
                long long v117 = v116;
                uint64_t v118 = sub_1DA9891D8();
                if (__OFSUB__((int)v13, v118)) {
                  goto LABEL_228;
                }
                id v247 = (char *)(v117 + (int)v13 - v118);
              }
              else
              {
                id v247 = 0;
              }
              uint64_t v94 = (uint64_t)v254;
              uint64_t v95 = v255;
              sub_1DA9891C8();
              if (v257)
              {
                if (v257 == 1)
                {
                  if (v245 < v250) {
                    goto LABEL_237;
                  }
                  swift_retain();
                  uint64_t v133 = (char *)sub_1DA9891A8();
                  if (v133)
                  {
                    uint64_t v134 = sub_1DA9891D8();
                    if (__OFSUB__(v250, v134)) {
                      goto LABEL_244;
                    }
                    v133 += v250 - v134;
                  }
                  uint64_t v135 = sub_1DA9891C8();
                  uint64_t v136 = v244;
                  if (v135 < v244) {
                    uint64_t v136 = v135;
                  }
                  if (!v247) {
                    goto LABEL_249;
                  }
                  if (!v133) {
                    goto LABEL_250;
                  }
                  os_log_t v132 = memcmp(v247, v133, v136);
                  sub_1DA79DA70(v73, v72);
                }
                else
                {
                  uint64_t v151 = *(void *)(v73 + 16);
                  uint64_t v243 = *(char **)(v73 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v152 = (char *)sub_1DA9891A8();
                  if (v152)
                  {
                    char v153 = sub_1DA9891D8();
                    if (__OFSUB__(v151, v153)) {
                      goto LABEL_243;
                    }
                    v152 += v151 - v153;
                  }
                  uint64_t v111 = __OFSUB__(v243, v151);
                  uint64_t v154 = &v243[-v151];
                  if (v111) {
                    goto LABEL_238;
                  }
                  id v155 = sub_1DA9891C8();
                  if (v155 >= (uint64_t)v154) {
                    id v156 = (size_t)v154;
                  }
                  else {
                    id v156 = v155;
                  }
                  if (!v247) {
                    goto LABEL_257;
                  }
                  uint64_t v95 = v255;
                  if (!v152) {
                    goto LABEL_258;
                  }
                  os_log_t v132 = memcmp(v247, v152, v156);
LABEL_163:
                  swift_release();
LABEL_164:
                  swift_release();
                }
                sub_1DA79DA70(v73, v72);
                sub_1DA79DA70(v13, v101);
                sub_1DA79DA70(v13, v101);
                sub_1DA79DA70(v73, v72);
                sub_1DA79DA70(v73, v72);
                sub_1DA79DA70(v73, v72);
                uint64_t v94 = (uint64_t)v254;
              }
              else
              {
                LOWORD(__s1) = v73;
                BYTE2(__s1) = BYTE2(v73);
                BYTE3(__s1) = BYTE3(v73);
                BYTE4(__s1) = v246;
                BYTE5(__s1) = BYTE5(v73);
                BYTE6(__s1) = BYTE6(v73);
                BYTE7(__s1) = HIBYTE(v73);
                WORD4(__s1) = v72;
                BYTE10(__s1) = BYTE2(v72);
                BYTE11(__s1) = BYTE3(v72);
                BYTE12(__s1) = BYTE4(v72);
                BYTE13(__s1) = BYTE5(v72);
                if (!v247) {
                  goto LABEL_256;
                }
                os_log_t v132 = memcmp(v247, &__s1, (size_t)v256);
LABEL_152:
                sub_1DA79DA70(v73, v72);
                sub_1DA79DA70(v13, v101);
                sub_1DA79DA70(v13, v101);
                sub_1DA79DA70(v73, v72);
                sub_1DA79DA70(v73, v72);
                sub_1DA79DA70(v73, v72);
              }
              uint64_t v101 = (unint64_t)v260;
              if (v132) {
                goto LABEL_182;
              }
LABEL_50:

              ++v5;
              uint64_t v99 = v18 == (os_log_t)v258;
              os_log_t v18 = v261;
              if (v99) {
                goto LABEL_172;
              }
              goto LABEL_51;
            }
            __break(1u);
LABEL_226:
            swift_once();
LABEL_188:
            id v191 = sub_1DA989F38();
            __swift_project_value_buffer(v191, (uint64_t)qword_1EBE6F138);
            uint64_t v192 = v262;
            sub_1DA7A1A44((uint64_t)v262, (uint64_t)&__s1);
            sub_1DA7A1A44((uint64_t)v192, (uint64_t)&__s2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v193 = sub_1DA989F18();
            uint64_t v194 = sub_1DA98C548();
            id v195 = v194;
            if (os_log_type_enabled(v193, v194))
            {
              uint64_t v196 = swift_slowAlloc();
              unsigned int v256 = v193;
              id v197 = v196;
              uint64_t v198 = (void *)swift_slowAlloc();
              uint64_t v253 = (uint64_t)v198;
              uint64_t v257 = (char *)swift_slowAlloc();
              uint64_t v264 = v257;
              *(_DWORD *)id v197 = 138544130;
              uint64_t v250 = v5;
              int v260 = (uint64_t *)v101;
              uint64_t v200 = v275;
              id v199 = v276;
              __swift_project_boxed_opaque_existential_0(&__s1, v275);
              id v201 = *(uint64_t (**)(uint64_t, uint64_t))(v199 + 40);
              LODWORD(v255) = v195;
              uint64_t v202 = v201(v200, v199);
              unint64_t v263 = v202;
              sub_1DA98C858();
              *uint64_t v198 = v202;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s1);
              *(_WORD *)(v197 + 12) = 2082;
              id v203 = v105;
              uint64_t v205 = v271;
              uint64_t v204 = v272;
              __swift_project_boxed_opaque_existential_0(&__s2, v271);
              id v206 = (*(uint64_t (**)(uint64_t, uint64_t))(v204 + 144))(v205, v204);
              unint64_t v263 = sub_1DA8C5E00(v206, v207, (uint64_t *)&v264);
              uint64_t v94 = (uint64_t)v254;
              sub_1DA98C858();
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s2);
              *(_WORD *)(v197 + 22) = 2082;
              uint64_t v208 = v250;
              swift_bridgeObjectRetain();
              unint64_t v263 = sub_1DA8C5E00(v258, v208, (uint64_t *)&v264);
              sub_1DA98C858();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v197 + 32) = 2082;
              swift_bridgeObjectRetain();
              unint64_t v263 = sub_1DA8C5E00(v259, v203, (uint64_t *)&v264);
              sub_1DA98C858();
              swift_bridgeObjectRelease_n();
              uint64_t v209 = v256;
              _os_log_impl(&dword_1DA795000, v256, (os_log_type_t)v255, "Reloading extension: %{public}@ on behalf of %{public}s because it contains descriptors (%{public}s) that do not match current locale token: %{public}s", (uint8_t *)v197, 0x2Au);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
              uint64_t v176 = 1;
              id v210 = v253;
              swift_arrayDestroy();
              MEMORY[0x1E0178DA0](v210, -1, -1);
              uint64_t v211 = v257;
              swift_arrayDestroy();
              MEMORY[0x1E0178DA0](v211, -1, -1);
              MEMORY[0x1E0178DA0](v197, -1, -1);
            }
            else
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s1);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s2);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();

              swift_bridgeObjectRelease();
              uint64_t v176 = 1;
            }
            os_log_t v18 = v261;
LABEL_192:
            uint64_t v212 = *(unint64_t *)((char *)&v18->isa + v252);
            if (v212 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v34 = sub_1DA98CBD8();
              if (v34) {
                goto LABEL_194;
              }
LABEL_222:
              swift_bridgeObjectRelease();
LABEL_223:
              sub_1DA9711B0((uint64_t)v18);
              sub_1DA872360(v73, v72, v94);
              if ((v176 & 1) == 0) {
                return v34;
              }
              return 1;
            }
            uint64_t v34 = *(void *)((v212 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (!v34) {
              goto LABEL_222;
            }
LABEL_194:
            int v260 = (uint64_t *)v176;
            id v213 = 4;
            while (1)
            {
              if ((v212 & 0xC000000000000001) != 0) {
                uint64_t v214 = (id)MEMORY[0x1E0177C00](v213 - 4, v212);
              }
              else {
                uint64_t v214 = *(id *)(v212 + 8 * v213);
              }
              id v215 = v214;
              id v216 = v213 - 3;
              if (__OFADD__(v213 - 4, 1))
              {
                __break(1u);
                goto LABEL_210;
              }
              if (objc_msgSend(v214, sel_controlVersion) != (id)1) {
                break;
              }

              ++v213;
              if (v216 == v34)
              {
                swift_bridgeObjectRelease();
                uint64_t v34 = 0;
LABEL_208:
                LOBYTE(v176) = (_BYTE)v260;
                os_log_t v18 = v261;
                uint64_t v94 = (uint64_t)v254;
                goto LABEL_223;
              }
            }
            swift_bridgeObjectRelease();
            if (qword_1EBE59778 != -1) {
              swift_once();
            }
            uint64_t v217 = sub_1DA989F38();
            __swift_project_value_buffer(v217, (uint64_t)qword_1EBE6F138);
            uint64_t v218 = v262;
            sub_1DA7A1A44((uint64_t)v262, (uint64_t)&__s1);
            sub_1DA7A1A44((uint64_t)v218, (uint64_t)&__s2);
            uint64_t v219 = v215;
            uint64_t v220 = sub_1DA989F18();
            int v221 = sub_1DA98C548();
            uint64_t v222 = v221;
            if (!os_log_type_enabled(v220, v221))
            {

              __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s2);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s1);

              uint64_t v34 = 1;
              goto LABEL_208;
            }
            uint64_t v223 = swift_slowAlloc();
            id v224 = (char *)swift_slowAlloc();
            uint64_t v257 = v224;
            uint64_t v262 = (void *)swift_slowAlloc();
            uint64_t v264 = v262;
            *(_DWORD *)uint64_t v223 = 138544130;
            unsigned int v256 = (v223 + 4);
            LODWORD(v259) = v222;
            uint64_t v226 = v275;
            uint64_t v225 = v276;
            __swift_project_boxed_opaque_existential_0(&__s1, v275);
            uint64_t v227 = *(uint64_t (**)(uint64_t, uint64_t))(v225 + 40);
            uint64_t v258 = (uint64_t)v220;
            unsigned int v228 = v227(v226, v225);
            unint64_t v263 = v228;
            sub_1DA98C858();
            *(void *)id v224 = v228;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s1);
            *(_WORD *)(v223 + 12) = 2082;
            unsigned int v256 = v219;
            id v230 = v271;
            id v229 = v272;
            __swift_project_boxed_opaque_existential_0(&__s2, v271);
            uint64_t v231 = (*(uint64_t (**)(uint64_t, uint64_t))(v229 + 144))(v230, v229);
            unint64_t v263 = sub_1DA8C5E00(v231, v232, (uint64_t *)&v264);
            sub_1DA98C858();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s2);
            *(_WORD *)(v223 + 22) = 2050;
            uint64_t v233 = v256;
            id v234 = [v256 controlVersion];

            unint64_t v263 = (uint64_t)v234;
            sub_1DA98C858();

            *(_WORD *)(v223 + 32) = 2050;
            uint64_t v34 = 1;
            unint64_t v263 = 1;
            sub_1DA98C858();
            id v235 = (os_log_t)v258;
            _os_log_impl(&dword_1DA795000, (os_log_t)v258, (os_log_type_t)v259, "Reloading extension: %{public}@ on behalf of %{public}s because it has out of date control descriptors (%{public}llu < %{public}llu)", (uint8_t *)v223, 0x2Au);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
            uint64_t v236 = v257;
            swift_arrayDestroy();
            MEMORY[0x1E0178DA0](v236, -1, -1);
            uint64_t v237 = v262;
            swift_arrayDestroy();
            MEMORY[0x1E0178DA0](v237, -1, -1);
            MEMORY[0x1E0178DA0](v223, -1, -1);

            sub_1DA9711B0((uint64_t)v261);
            sub_1DA872360(v73, v72, (uint64_t)v254);
            if (v260) {
              return 1;
            }
            return v34;
          case 2uLL:
            uint64_t v119 = *(void *)(v13 + 16);
            sub_1DA79ED98(v73, v72);
            swift_retain();
            swift_retain();
            uint64_t v120 = sub_1DA9891A8();
            id v247 = (char *)(v101 & 0x3FFFFFFFFFFFFFFFLL);
            if (v120)
            {
              uint64_t v121 = v120;
              uint64_t v122 = sub_1DA9891D8();
              if (__OFSUB__(v119, v122))
              {
                __break(1u);
LABEL_228:
                __break(1u);
LABEL_229:
                __break(1u);
LABEL_230:
                __break(1u);
LABEL_231:
                __break(1u);
LABEL_232:
                __break(1u);
LABEL_233:
                __break(1u);
LABEL_234:
                __break(1u);
LABEL_235:
                __break(1u);
LABEL_236:
                __break(1u);
LABEL_237:
                __break(1u);
LABEL_238:
                __break(1u);
LABEL_239:
                __break(1u);
LABEL_240:
                __break(1u);
LABEL_241:
                __break(1u);
LABEL_242:
                __break(1u);
LABEL_243:
                __break(1u);
LABEL_244:
                __break(1u);
              }
              uint64_t v243 = (char *)(v121 + v119 - v122);
            }
            else
            {
              uint64_t v243 = 0;
            }
            uint64_t v95 = v255;
            sub_1DA9891C8();
            uint64_t v94 = (uint64_t)v254;
            if (!v257)
            {
              LOWORD(__s1) = v73;
              BYTE2(__s1) = BYTE2(v73);
              BYTE3(__s1) = BYTE3(v73);
              BYTE4(__s1) = v246;
              BYTE5(__s1) = BYTE5(v73);
              BYTE6(__s1) = BYTE6(v73);
              BYTE7(__s1) = HIBYTE(v73);
              WORD4(__s1) = v72;
              BYTE10(__s1) = BYTE2(v72);
              BYTE11(__s1) = BYTE3(v72);
              BYTE12(__s1) = BYTE4(v72);
              BYTE13(__s1) = BYTE5(v72);
              if (!v243) {
                goto LABEL_253;
              }
              os_log_t v132 = memcmp(v243, &__s1, (size_t)v256);
              swift_release();
              swift_release();
              goto LABEL_152;
            }
            if (v257 == 1)
            {
              if (v245 < v250) {
                goto LABEL_231;
              }
              swift_retain();
              unint64_t v128 = (char *)sub_1DA9891A8();
              if (v128)
              {
                uint64_t v129 = sub_1DA9891D8();
                if (__OFSUB__(v250, v129)) {
                  goto LABEL_242;
                }
                v128 += v250 - v129;
              }
              uint64_t v130 = sub_1DA9891C8();
              uint64_t v131 = v244;
              if (v130 < v244) {
                uint64_t v131 = v130;
              }
              if (!v243) {
                goto LABEL_247;
              }
              if (!v128) {
                goto LABEL_248;
              }
              os_log_t v132 = memcmp(v243, v128, v131);
              sub_1DA79DA70(v73, v72);
              swift_release();
              goto LABEL_164;
            }
            uint64_t v145 = *(void *)(v73 + 16);
            int v242 = *(void *)(v73 + 24);
            swift_retain();
            swift_retain();
            uint64_t v146 = (char *)sub_1DA9891A8();
            if (v146)
            {
              uint64_t v147 = sub_1DA9891D8();
              if (__OFSUB__(v145, v147)) {
                goto LABEL_241;
              }
              v146 += v145 - v147;
            }
            uint64_t v111 = __OFSUB__(v242, v145);
            uint64_t v148 = v242 - v145;
            if (v111) {
              goto LABEL_236;
            }
            uint64_t v149 = sub_1DA9891C8();
            if (v149 >= v148) {
              uint64_t v150 = v148;
            }
            else {
              uint64_t v150 = v149;
            }
            if (!v243) {
              goto LABEL_254;
            }
            uint64_t v95 = v255;
            if (!v146) {
              goto LABEL_255;
            }
            os_log_t v132 = memcmp(v243, v146, v150);
            swift_release();
            swift_release();
            goto LABEL_163;
          case 3uLL:
            *(void *)((char *)&__s1 + 6) = 0;
            *(void *)&__s1 = 0;
            if (!v257) {
              goto LABEL_95;
            }
            if (v257 == 1)
            {
              if (v245 < v250) {
                goto LABEL_230;
              }
              sub_1DA79ED98(v73, v72);
              uint64_t v123 = sub_1DA9891A8();
              if (!v123) {
                goto LABEL_246;
              }
              uint64_t v113 = v123;
              uint64_t v124 = sub_1DA9891D8();
              unint64_t v115 = v250 - v124;
              if (__OFSUB__(v250, v124)) {
                goto LABEL_235;
              }
LABEL_91:
              uint64_t v125 = sub_1DA9891C8();
              if (v125 >= v244) {
                uint64_t v126 = v244;
              }
              else {
                uint64_t v126 = v125;
              }
              uint64_t v127 = memcmp(&__s1, (const void *)(v113 + v115), v126);
              sub_1DA79DA70(v73, v72);
              sub_1DA79DA70(v13, v101);
              sub_1DA79DA70(v13, v101);
              sub_1DA79DA70(v73, v72);
              sub_1DA79DA70(v73, v72);
              sub_1DA79DA70(v73, v72);
              uint64_t v94 = (uint64_t)v254;
LABEL_96:
              uint64_t v101 = (unint64_t)v260;
              uint64_t v95 = v255;
              if (v127) {
                goto LABEL_182;
              }
            }
            else
            {
              uint64_t v142 = *(void *)(v73 + 16);
              id v247 = *(char **)(v73 + 24);
              sub_1DA79ED98(v73, v72);
              swift_retain();
              swift_retain();
              uint64_t v138 = (char *)sub_1DA9891A8();
              if (v138)
              {
                uint64_t v143 = sub_1DA9891D8();
                if (__OFSUB__(v142, v143)) {
                  goto LABEL_240;
                }
                v138 += v142 - v143;
              }
              uint64_t v111 = __OFSUB__(v247, v142);
              uint64_t v140 = &v247[-v142];
              if (v111) {
                goto LABEL_233;
              }
              uint64_t v141 = sub_1DA9891C8();
              if (!v138) {
                goto LABEL_252;
              }
LABEL_133:
              if (v141 >= (uint64_t)v140) {
                uint64_t v144 = (size_t)v140;
              }
              else {
                uint64_t v144 = v141;
              }
              LODWORD(v247) = memcmp(&__s1, v138, v144);
              swift_release();
              swift_release();
              sub_1DA79DA70(v73, v72);
              sub_1DA79DA70(v13, v101);
              sub_1DA79DA70(v13, v101);
              sub_1DA79DA70(v73, v72);
              sub_1DA79DA70(v73, v72);
              sub_1DA79DA70(v73, v72);
              uint64_t v94 = (uint64_t)v254;
              uint64_t v101 = (unint64_t)v260;
              uint64_t v95 = v255;
              if (v247) {
                goto LABEL_182;
              }
            }
            goto LABEL_50;
          default:
            *(void *)&__s1 = v13;
            WORD4(__s1) = v101;
            BYTE10(__s1) = BYTE2(v101);
            BYTE11(__s1) = BYTE3(v101);
            BYTE12(__s1) = BYTE4(v101);
            BYTE13(__s1) = BYTE5(v101);
            if (!v257)
            {
LABEL_95:
              LOWORD(__s2) = v73;
              BYTE2(__s2) = BYTE2(v73);
              BYTE3(__s2) = BYTE3(v73);
              BYTE4(__s2) = v246;
              BYTE5(__s2) = BYTE5(v73);
              BYTE6(__s2) = BYTE6(v73);
              HIBYTE(__s2) = HIBYTE(v73);
              id v266 = v72;
              uint64_t v267 = BYTE2(v72);
              uint64_t v268 = BYTE3(v72);
              id v269 = BYTE4(v72);
              uint64_t v270 = BYTE5(v72);
              uint64_t v127 = memcmp(&__s1, &__s2, (size_t)v256);
              sub_1DA79DA70(v13, v101);
              sub_1DA79DA70(v13, v101);
              sub_1DA79DA70(v73, v72);
              sub_1DA79DA70(v73, v72);
              sub_1DA79DA70(v73, v72);
              goto LABEL_96;
            }
            if (v257 == 1)
            {
              if (v245 < v250) {
                goto LABEL_229;
              }
              sub_1DA79ED98(v73, v72);
              uint64_t v112 = sub_1DA9891A8();
              if (!v112)
              {
                sub_1DA9891C8();
                __break(1u);
LABEL_246:
                sub_1DA9891C8();
                __break(1u);
LABEL_247:
                __break(1u);
LABEL_248:
                __break(1u);
LABEL_249:
                __break(1u);
LABEL_250:
                __break(1u);
LABEL_251:
                __break(1u);
LABEL_252:
                __break(1u);
LABEL_253:
                __break(1u);
LABEL_254:
                __break(1u);
LABEL_255:
                __break(1u);
LABEL_256:
                __break(1u);
LABEL_257:
                __break(1u);
LABEL_258:
                __break(1u);
                JUMPOUT(0x1DA96CEF4);
              }
              uint64_t v113 = v112;
              uint64_t v114 = sub_1DA9891D8();
              unint64_t v115 = v250 - v114;
              if (__OFSUB__(v250, v114)) {
                goto LABEL_234;
              }
              goto LABEL_91;
            }
            uint64_t v137 = *(void *)(v73 + 16);
            id v247 = *(char **)(v73 + 24);
            sub_1DA79ED98(v73, v72);
            swift_retain();
            swift_retain();
            uint64_t v138 = (char *)sub_1DA9891A8();
            if (v138)
            {
              uint64_t v139 = sub_1DA9891D8();
              if (__OFSUB__(v137, v139)) {
                goto LABEL_239;
              }
              v138 += v137 - v139;
            }
            uint64_t v111 = __OFSUB__(v247, v137);
            uint64_t v140 = &v247[-v137];
            if (v111) {
              goto LABEL_232;
            }
            uint64_t v141 = sub_1DA9891C8();
            if (!v138) {
              goto LABEL_251;
            }
            goto LABEL_133;
        }
      case 2uLL:
        uint64_t v107 = *(void *)(v13 + 16);
        uint64_t v106 = *(void *)(v13 + 24);
        uint64_t v105 = v106 - v107;
        if (!__OFSUB__(v106, v107)) {
          goto LABEL_62;
        }
        goto LABEL_213;
      case 3uLL:
        goto LABEL_63;
      default:
        uint64_t v105 = BYTE6(v101);
        goto LABEL_63;
    }
  }
}

uint64_t sub_1DA96CF24(uint64_t result, uint64_t *a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v6 = result;
    unint64_t v26 = a2[1];
    uint64_t v27 = *a2;
    uint64_t v7 = *(void *)(v4 + 72);
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
    sub_1DA9739F4((uint64_t *)(v7 + 16), (uint64_t *)&v34);
    os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
    uint64_t v8 = v34;
    swift_release();
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = v8 + 32;
      uint64_t v11 = qword_1EBE59148;
      swift_bridgeObjectRetain();
      if (v11 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1DA989F38();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EBE6F0A8);
      while (1)
      {
        sub_1DA7A1A44(v10, (uint64_t)&v34);
        uint64_t v14 = sub_1DA989F18();
        os_log_type_t v15 = sub_1DA98C548();
        if (os_log_type_enabled(v14, v15))
        {
          uint64_t v16 = swift_slowAlloc();
          uint64_t v17 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v16 = 138543362;
          uint64_t v19 = v35;
          uint64_t v18 = v36;
          __swift_project_boxed_opaque_existential_0(&v34, v35);
          uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(v19, v18);
          *(void *)(v16 + 4) = v20;
          *uint64_t v17 = v20;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
          _os_log_impl(&dword_1DA795000, v14, v15, "Requesting descriptor fetch for %{public}@", (uint8_t *)v16, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v17, -1, -1);
          MEMORY[0x1E0178DA0](v16, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
        }

        if (MEMORY[0x1E0178E80](v28 + 16))
        {
          uint64_t v12 = *(void *)(v28 + 24);
          uint64_t ObjectType = swift_getObjectType();
          sub_1DA7A1A44(v10, (uint64_t)&v34);
          uint64_t v13 = (void *)swift_allocObject();
          id v13[2] = v28;
          sub_1DA7A19A4(&v34, (uint64_t)(v13 + 3));
          v13[8] = v27;
          v13[9] = v26;
          v13[10] = a3;
          id v13[11] = a4;
          uint64_t v30 = *(void (**)(uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 24);
          swift_retain();
          sub_1DA8835DC(v27, v26);
          sub_1DA7AE2F8((uint64_t)a3);
          v30(v10, sub_1DA972F88, v13, ObjectType, v12);
          swift_release();
          swift_unknownObjectRelease();
        }
        else if (a3)
        {
          a3(v10);
        }
        v10 += 40;
        if (!--v9) {
          break;
        }
        __swift_project_value_buffer(v29, (uint64_t)qword_1EBE6F0A8);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_1EBE59148 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1DA989F38();
      __swift_project_value_buffer(v21, (uint64_t)qword_1EBE6F0A8);
      uint64_t v22 = sub_1DA989F18();
      os_log_type_t v23 = sub_1DA98C548();
      if (os_log_type_enabled(v22, v23))
      {
        unint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v24 = 0;
        _os_log_impl(&dword_1DA795000, v22, v23, "No descriptors to load because they were filtered.", v24, 2u);
        MEMORY[0x1E0178DA0](v24, -1, -1);
      }

      uint64_t v25 = v6 + 32;
      swift_bridgeObjectRetain();
      do
      {
        if (a3) {
          a3(v25);
        }
        v25 += 40;
        --v5;
      }
      while (v5);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA96D394@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10);
  uint64_t v12 = (void *)v11;
  uint64_t v13 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v14 = sub_1DA7FE920(v11), (v15 & 1) != 0))
  {
    unint64_t v16 = v14;
    uint64_t v17 = *(void *)(v13 + 56);
    uint64_t v18 = type metadata accessor for ExtensionMetadata();
    uint64_t v19 = *(void *)(v18 - 8);
    sub_1DA972C4C(v17 + *(void *)(v19 + 72) * v16, (uint64_t)v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v8, 0, 1, v18);
  }
  else
  {
    uint64_t v18 = type metadata accessor for ExtensionMetadata();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
  }

  type metadata accessor for ExtensionMetadata();
  BOOL v20 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v8, 1, v18) != 1;
  uint64_t result = sub_1DA7A1AE0((uint64_t)v8, (uint64_t *)&unk_1EBE595D8);
  *a3 = v20;
  return result;
}

uint64_t sub_1DA96D5A0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v5 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1DA972094(v8, a1);
  swift_bridgeObjectRelease();
  int64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v19 = v2;
    uint64_t v21 = a1;
    uint64_t v22 = a2;
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1DA7F7B8C(0, v10, 0);
    uint64_t v20 = v9;
    uint64_t v12 = v9 + 32;
    uint64_t v11 = v27;
    do
    {
      sub_1DA7A1A44(v12, (uint64_t)v24);
      uint64_t v13 = v25;
      uint64_t v14 = v26;
      __swift_project_boxed_opaque_existential_0(v24, v25);
      char v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(v13, v14);
      sub_1DA98C6F8();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA7F7B8C(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v11 = v27;
      }
      unint64_t v17 = *(void *)(v11 + 16);
      unint64_t v16 = *(void *)(v11 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1DA7F7B8C(v16 > 1, v17 + 1, 1);
        uint64_t v11 = v27;
      }
      *(void *)(v11 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v17, v7, v23);
      v12 += 40;
      --v10;
    }
    while (v10);
    a2 = v22;
    uint64_t v9 = v20;
  }
  sub_1DA85AA1C(v11);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v9;
  return result;
}

uint64_t sub_1DA96D7E8(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void *), uint64_t a8)
{
  uint64_t v23 = a6;
  uint64_t v24 = a8;
  uint64_t v22 = a5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A1A0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = *(os_unfair_lock_s **)(a3 + 72);
  uint64_t v25 = a4;
  swift_retain();
  os_unfair_lock_lock(v15 + 6);
  sub_1DA9733E8((uint64_t)v14);
  os_unfair_lock_unlock(v15 + 6);
  swift_release();
  uint64_t result = sub_1DA7A1AE0((uint64_t)v14, &qword_1EBE5A1A0);
  if (a1)
  {
    id v17 = a1;
    uint64_t v18 = sub_1DA98BA88();
    uint64_t v19 = sub_1DA98BA98();
    unint64_t v20 = sub_1DA98BAA8();
    v26[0] = v22;
    v26[1] = v23;
    WidgetDescriptorCache.fillCache(for:descriptors:controlDescriptors:activityDescriptors:reason:)(a4, v18, v19, v20, v26);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (a7) {
    return a7(a4);
  }
  return result;
}

uint64_t sub_1DA96D964@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v8);
  int64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 40))(v8, v9);
  sub_1DA98C6F8();

  sub_1DA86723C((uint64_t)v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DA96DA9C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1DA96DAC4@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v75 = a3;
  uint64_t v70 = a4;
  uint64_t v74 = a5;
  uint64_t v7 = type metadata accessor for ExtensionMetadata();
  uint64_t v8 = *(void **)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v68 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v66 = (uint64_t)&v63 - v11;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A390);
  MEMORY[0x1F4188790](v73);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v69 = (uint64_t)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v65 = (uint64_t)&v63 - v17;
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)&v63 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v63 - v22;
  uint64_t v81 = MEMORY[0x1E4FBC860];
  uint64_t v24 = a2[3];
  uint64_t v25 = a2[4];
  unint64_t v72 = a2;
  __swift_project_boxed_opaque_existential_0(a2, v24);
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 40))(v24, v25);
  uint64_t v27 = (void *)v26;
  uint64_t v71 = a1;
  uint64_t v28 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v29 = sub_1DA7FE920(v26), (v30 & 1) != 0))
  {
    sub_1DA972C4C(*(void *)(v28 + 56) + v8[9] * v29, (uint64_t)v23);
    uint64_t v31 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v8[7];
    unint64_t v32 = (unint64_t)(v8 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v31(v23, 0, 1, v7);
  }
  else
  {
    uint64_t v31 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v8[7];
    unint64_t v32 = (unint64_t)(v8 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v31(v23, 1, 1, v7);
  }

  sub_1DA972C4C(v75, (uint64_t)v20);
  unint64_t v67 = v32;
  v31(v20, 0, 1, v7);
  uint64_t v33 = (uint64_t)&v13[*(int *)(v73 + 48)];
  sub_1DA7A1F58((uint64_t)v23, (uint64_t)v13, (uint64_t *)&unk_1EBE595D8);
  sub_1DA7A1F58((uint64_t)v20, v33, (uint64_t *)&unk_1EBE595D8);
  long long v34 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v8[6];
  if (v34((uint64_t)v13, 1, v7) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v20, (uint64_t *)&unk_1EBE595D8);
    sub_1DA7A1AE0((uint64_t)v23, (uint64_t *)&unk_1EBE595D8);
    if (v34(v33, 1, v7) == 1)
    {
      uint64_t result = sub_1DA7A1AE0((uint64_t)v13, (uint64_t *)&unk_1EBE595D8);
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v36 = v65;
    sub_1DA7A1F58((uint64_t)v13, v65, (uint64_t *)&unk_1EBE595D8);
    if (v34(v33, 1, v7) != 1)
    {
      uint64_t v60 = v36;
      uint64_t v61 = v66;
      sub_1DA9738F4(v33, v66, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
      char v62 = _s9ChronoKit17ExtensionMetadataV2eeoiySbAC_ACtFZ_0(v60, v61);
      sub_1DA9711B0(v61);
      sub_1DA7A1AE0((uint64_t)v20, (uint64_t *)&unk_1EBE595D8);
      sub_1DA7A1AE0((uint64_t)v23, (uint64_t *)&unk_1EBE595D8);
      sub_1DA9711B0(v60);
      uint64_t result = sub_1DA7A1AE0((uint64_t)v13, (uint64_t *)&unk_1EBE595D8);
      id v37 = v72;
      if (v62) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    sub_1DA7A1AE0((uint64_t)v20, (uint64_t *)&unk_1EBE595D8);
    sub_1DA7A1AE0((uint64_t)v23, (uint64_t *)&unk_1EBE595D8);
    sub_1DA9711B0(v36);
  }
  sub_1DA7A1AE0((uint64_t)v13, &qword_1EBE5A390);
  id v37 = v72;
LABEL_11:
  uint64_t v73 = (uint64_t)v31;
  if (qword_1EBE59148 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1DA989F38();
  __swift_project_value_buffer(v38, (uint64_t)qword_1EBE6F0A8);
  sub_1DA7A1A44((uint64_t)v37, (uint64_t)v78);
  uint64_t v39 = v68;
  sub_1DA972C4C(v75, v68);
  unsigned __int8 v40 = sub_1DA989F18();
  os_log_type_t v41 = sub_1DA98C548();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    unint64_t v72 = (void *)v7;
    uint64_t v43 = v42;
    uint64_t v64 = (void *)swift_slowAlloc();
    uint64_t v65 = swift_slowAlloc();
    uint64_t v77 = v65;
    *(_DWORD *)uint64_t v43 = 138543618;
    uint64_t v44 = v79;
    uint64_t v45 = v80;
    __swift_project_boxed_opaque_existential_0(v78, v79);
    uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 40))(v44, v45);
    uint64_t v76 = v46;
    sub_1DA98C858();
    uint64_t v47 = v64;
    *uint64_t v64 = v46;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
    *(_WORD *)(v43 + 12) = 2080;
    sub_1DA972C4C(v39, v66);
    uint64_t v48 = sub_1DA98C0B8();
    uint64_t v76 = sub_1DA8C5E00(v48, v49, &v77);
    sub_1DA98C858();
    swift_bridgeObjectRelease();
    sub_1DA9711B0(v39);
    _os_log_impl(&dword_1DA795000, v40, v41, "Updating descriptor cache for %{public}@ with %s.", (uint8_t *)v43, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v47, -1, -1);
    uint64_t v50 = v65;
    swift_arrayDestroy();
    MEMORY[0x1E0178DA0](v50, -1, -1);
    uint64_t v51 = v43;
    uint64_t v7 = (uint64_t)v72;
    MEMORY[0x1E0178DA0](v51, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
    sub_1DA9711B0(v39);
  }

  MEMORY[0x1F4188790](v52);
  uint64_t v53 = v75;
  *(&v63 - 2) = v75;
  sub_1DA96A908((uint64_t)sub_1DA9733CC);
  uint64_t v54 = v37[3];
  uint64_t v55 = v37[4];
  __swift_project_boxed_opaque_existential_0(v37, v54);
  unint64_t v56 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v55 + 40))(v54, v55);
  uint64_t v57 = v69;
  sub_1DA972C4C(v53, v69);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v73)(v57, 0, 1, v7);
  sub_1DA870280(v57, v56);
  uint64_t v58 = v37[3];
  uint64_t v59 = v37[4];
  __swift_project_boxed_opaque_existential_0(v37, v58);
  (*(void (**)(uint64_t, uint64_t))(v59 + 40))(v58, v59);
  MEMORY[0x1E0177400]();
  if (*(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1DA98C2D8();
  }
  sub_1DA98C308();
  uint64_t result = sub_1DA98C2A8();
LABEL_19:
  *uint64_t v74 = v81;
  return result;
}

uint64_t sub_1DA96E2B4(uint64_t a1, void *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA972C4C((uint64_t)a2, (uint64_t)v5);
  uint64_t v6 = type metadata accessor for ExtensionMetadata();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  sub_1DA8FE910((uint64_t)v5, a2);
  return sub_1DA7A1AE0((uint64_t)v5, (uint64_t *)&unk_1EBE595D8);
}

void sub_1DA96E3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A1A0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*(void *)a1 + 16))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    if (v7)
    {
      uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190) - 8);
      uint64_t v9 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      uint64_t v10 = *(void *)(v8 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1DA86723C(v9, (uint64_t)v6);
        sub_1DA7A1AE0((uint64_t)v6, &qword_1EBE5A1A0);
        v9 += v10;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1DA96E4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE595D8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v7 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (void *)((char *)v33 - v11);
  uint64_t v13 = *(void *)(a2 + 16);
  if (v13)
  {
    uint64_t v14 = *(void *)(a1 + 16);
    uint64_t v16 = *(void (**)(char *, void *, uint64_t))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unsigned __int8 v40 = v16;
    uint64_t v41 = v14;
    uint64_t v17 = (void *)(a2 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64)));
    uint64_t v35 = &v48;
    uint64_t v38 = *(void *)(v15 + 56);
    v33[0] = a2;
    swift_bridgeObjectRetain();
    *(void *)&long long v18 = 136446210;
    long long v34 = v18;
    v33[1] = MEMORY[0x1E4FBC840] + 8;
    uint64_t v36 = v6;
    uint64_t v42 = v12;
    uint64_t v43 = v15;
    uint64_t v39 = (void (**)(char *, uint64_t))(v15 - 8);
    do
    {
      uint64_t v44 = v13;
      uint64_t v19 = v40;
      v40((char *)v12, v17, v46);
      if (qword_1EBE59148 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_1DA989F38();
      __swift_project_value_buffer(v20, (uint64_t)qword_1EBE6F0A8);
      v19(v9, v12, v46);
      uint64_t v21 = sub_1DA989F18();
      uint64_t v22 = v9;
      os_log_type_t v23 = sub_1DA98C548();
      if (os_log_type_enabled(v21, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v49 = v37;
        uint64_t v25 = v46;
        *(_DWORD *)uint64_t v24 = v34;
        sub_1DA7A0410((unint64_t *)&unk_1EBE5A180, &qword_1EBE5A190);
        uint64_t v26 = sub_1DA98CDD8();
        uint64_t v47 = sub_1DA8C5E00(v26, v27, &v49);
        sub_1DA98C858();
        swift_bridgeObjectRelease();
        uint64_t v28 = *v39;
        (*v39)(v22, v25);
        _os_log_impl(&dword_1DA795000, v21, v23, "Clearing descriptor cache for %{public}s", v24, 0xCu);
        uint64_t v29 = v37;
        swift_arrayDestroy();
        MEMORY[0x1E0178DA0](v29, -1, -1);
        char v30 = v24;
        uint64_t v6 = v36;
        MEMORY[0x1E0178DA0](v30, -1, -1);
      }
      else
      {
        uint64_t v28 = *v39;
        (*v39)(v22, v46);
      }

      uint64_t v9 = v22;
      uint64_t v31 = type metadata accessor for ExtensionMetadata();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v6, 1, 1, v31);
      uint64_t v12 = v42;
      uint64_t v32 = v45;
      sub_1DA8FE910((uint64_t)v6, v42);
      sub_1DA7A1AE0((uint64_t)v6, (uint64_t *)&unk_1EBE595D8);
      v28((char *)v12, v46);
      uint64_t v45 = v32;
      if (v32) {
        break;
      }
      uint64_t v17 = (void *)((char *)v17 + v38);
      uint64_t v13 = v44 - 1;
    }
    while (v44 != 1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DA96E920(uint64_t *a1, uint64_t a2)
{
  id v6[2] = a2;
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1DA9736F4(v3, (uint64_t (*)(id))sub_1DA97347C, (uint64_t)v6);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v4;
  return result;
}

uint64_t sub_1DA96E99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v20 - v9;
  sub_1DA98C6F8();
  uint64_t v26 = *(void *)(a3 + 16);
  if (!v26)
  {
    uint64_t v13 = 1;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return v13;
  }
  unint64_t v21 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  v25(v7, a3 + v21, v4);
  sub_1DA7A0410(&qword_1EBE5A170, &qword_1EBE5A190);
  swift_bridgeObjectRetain();
  char v11 = sub_1DA98BFF8();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v22 = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v12(v7, v4);
  if (v11)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = 0;
LABEL_14:
    v12(v10, v4);
    return v13;
  }
  if (v26 == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = 1;
    goto LABEL_14;
  }
  os_log_type_t v23 = v12;
  uint64_t v24 = v10;
  uint64_t v14 = *(void *)(v5 + 72);
  v20[1] = a3;
  unint64_t v15 = a3 + v14 + v21;
  uint64_t v16 = 1;
  while (1)
  {
    uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v25)(v7, v15, v4);
    uint64_t v18 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    char v19 = sub_1DA98BFF8();
    v23(v7, v4);
    if (v19)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = 0;
      goto LABEL_13;
    }
    ++v16;
    v15 += v14;
    if (v18 == v26)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = 1;
LABEL_13:
      uint64_t v12 = v23;
      uint64_t v10 = v24;
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t WidgetDescriptorCacheUpdate.extensionIdentities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetDescriptorCacheUpdate.extensionIdentities.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*WidgetDescriptorCacheUpdate.extensionIdentities.modify())()
{
  return CGSizeMake;
}

uint64_t WidgetDescriptorCacheUpdate.reasons.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetDescriptorCacheUpdate.reasons.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*WidgetDescriptorCacheUpdate.reasons.modify())()
{
  return CGSizeMake;
}

uint64_t sub_1DA96ECF0@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1DA79ED98(a2, a3);
      uint64_t v10 = (char *)sub_1DA9891A8();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1DA9891D8();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1DA9891C8();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1DA96EF54);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1DA79DA70(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1DA9891A8();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1DA9891D8();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1DA9891C8();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1DA96EF64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExtensionMetadata();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A768);
  uint64_t result = sub_1DA98CBE8();
  uint64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v31 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = a1 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v27 = v9;
  int64_t v28 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    int64_t v20 = *(void **)(*(void *)(v31 + 48) + 8 * i);
    sub_1DA972C4C(*(void *)(v31 + 56) + *(void *)(v29 + 72) * i, (uint64_t)v4);
    uint64_t v21 = *(void *)&v4[*(int *)(v30 + 24)];
    id v22 = v20;
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DA9711B0((uint64_t)v4);
    *(void *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v6[6] + 8 * i) = v22;
    *(void *)(v6[7] + 8 * i) = v21;
    uint64_t v23 = v6[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    id v6[2] = v25;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_24;
    }
    if (v17 >= v28) {
      return (uint64_t)v6;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v28) {
        return (uint64_t)v6;
      }
      unint64_t v18 = *(void *)(v27 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v28) {
          return (uint64_t)v6;
        }
        unint64_t v18 = *(void *)(v27 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v28) {
    return (uint64_t)v6;
  }
  unint64_t v18 = *(void *)(v27 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v28) {
      return (uint64_t)v6;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DA96F1F0(uint64_t a1)
{
  uint64_t v39 = (int *)type metadata accessor for ExtensionMetadata();
  uint64_t v37 = *((void *)v39 - 1);
  MEMORY[0x1F4188790](v39);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59768);
  uint64_t result = sub_1DA98CBE8();
  uint64_t v5 = (void *)result;
  int64_t v6 = 0;
  uint64_t v38 = a1;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v8 = a1 + 64;
  uint64_t v7 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(v8 - 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v7;
  uint64_t v34 = v8;
  int64_t v35 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v36 = result + 64;
  if ((v11 & v7) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v13 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v6 << 6))
  {
    unint64_t v18 = *(void **)(*(void *)(v38 + 48) + 8 * i);
    sub_1DA972C4C(*(void *)(v38 + 56) + *(void *)(v37 + 72) * i, (uint64_t)v3);
    unint64_t v19 = *(void *)&v3[v39[6]];
    if (v19 >> 62)
    {
      sub_1DA84FE28();
      id v29 = v18;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1DA98CBC8();
      swift_bridgeObjectRelease();
      unint64_t v19 = v30;
    }
    else
    {
      id v20 = v18;
      swift_bridgeObjectRetain();
      sub_1DA98CE78();
      sub_1DA84FE28();
    }
    unint64_t v21 = *(void *)&v3[v39[7]];
    if (v21 >> 62)
    {
      sub_1DA84FE28();
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1DA98CBC8();
      swift_bridgeObjectRelease();
      unint64_t v21 = v31;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DA98CE78();
      sub_1DA84FE28();
    }
    unint64_t v40 = v19;
    sub_1DA8847D8(v21);
    unint64_t v22 = v40;
    unint64_t v23 = *(void *)&v3[v39[9]];
    if (v23 >> 62)
    {
      sub_1DA84FE28();
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1DA98CBC8();
      swift_bridgeObjectRelease();
      unint64_t v23 = v32;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DA98CE78();
      sub_1DA84FE28();
    }
    unint64_t v40 = v22;
    sub_1DA8847D8(v23);
    unint64_t v24 = v40;
    uint64_t result = sub_1DA9711B0((uint64_t)v3);
    *(void *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v25 = 8 * i;
    *(void *)(v5[6] + v25) = v18;
    *(void *)(v5[7] + v25) = v24;
    uint64_t v26 = v5[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v5[2] = v28;
    if (v12) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_33;
    }
    if (v15 >= v35) {
      return (uint64_t)v5;
    }
    unint64_t v16 = *(void *)(v34 + 8 * v15);
    ++v6;
    if (!v16)
    {
      int64_t v6 = v15 + 1;
      if (v15 + 1 >= v35) {
        return (uint64_t)v5;
      }
      unint64_t v16 = *(void *)(v34 + 8 * v6);
      if (!v16)
      {
        int64_t v6 = v15 + 2;
        if (v15 + 2 >= v35) {
          return (uint64_t)v5;
        }
        unint64_t v16 = *(void *)(v34 + 8 * v6);
        if (!v16) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v12 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v35) {
    return (uint64_t)v5;
  }
  unint64_t v16 = *(void *)(v34 + 8 * v17);
  if (v16)
  {
    int64_t v6 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v35) {
      return (uint64_t)v5;
    }
    unint64_t v16 = *(void *)(v34 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1DA96F5E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExtensionMetadata();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A040);
  uint64_t result = sub_1DA98CBE8();
  int64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v31 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = a1 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v27 = v9;
  int64_t v28 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    id v20 = *(void **)(*(void *)(v31 + 48) + 8 * i);
    sub_1DA972C4C(*(void *)(v31 + 56) + *(void *)(v29 + 72) * i, (uint64_t)v4);
    uint64_t v21 = *(void *)&v4[*(int *)(v30 + 28)];
    id v22 = v20;
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DA9711B0((uint64_t)v4);
    *(void *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v6[6] + 8 * i) = v22;
    *(void *)(v6[7] + 8 * i) = v21;
    uint64_t v23 = v6[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    id v6[2] = v25;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_24;
    }
    if (v17 >= v28) {
      return (uint64_t)v6;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v28) {
        return (uint64_t)v6;
      }
      unint64_t v18 = *(void *)(v27 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v28) {
          return (uint64_t)v6;
        }
        unint64_t v18 = *(void *)(v27 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v28) {
    return (uint64_t)v6;
  }
  unint64_t v18 = *(void *)(v27 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v28) {
      return (uint64_t)v6;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DA96F86C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExtensionMetadata();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A770);
  uint64_t result = sub_1DA98CBE8();
  int64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v31 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = a1 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v27 = v9;
  int64_t v28 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    id v20 = *(void **)(*(void *)(v31 + 48) + 8 * i);
    sub_1DA972C4C(*(void *)(v31 + 56) + *(void *)(v29 + 72) * i, (uint64_t)v4);
    uint64_t v21 = *(void *)&v4[*(int *)(v30 + 36)];
    id v22 = v20;
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DA9711B0((uint64_t)v4);
    *(void *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v6[6] + 8 * i) = v22;
    *(void *)(v6[7] + 8 * i) = v21;
    uint64_t v23 = v6[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    id v6[2] = v25;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_24;
    }
    if (v17 >= v28) {
      return (uint64_t)v6;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v28) {
        return (uint64_t)v6;
      }
      unint64_t v18 = *(void *)(v27 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v28) {
          return (uint64_t)v6;
        }
        unint64_t v18 = *(void *)(v27 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v28) {
    return (uint64_t)v6;
  }
  unint64_t v18 = *(void *)(v27 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v28) {
      return (uint64_t)v6;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1DA96FAF8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  int64_t v7 = (void *)(a7[6] + 16 * result);
  *int64_t v7 = a2;
  v7[1] = a3;
  uint64_t v8 = a7[7] + 24 * result;
  *(void *)uint64_t v8 = a4;
  *(void *)(v8 + 8) = a5;
  *(unsigned char *)(v8 + 16) = a6;
  uint64_t v9 = a7[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a7[2] = v11;
  }
  return result;
}

uint64_t sub_1DA96FB50(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  sub_1DA9738F4(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  uint64_t v10 = a4[7];
  uint64_t v11 = sub_1DA98BB28();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

_OWORD *sub_1DA96FC40(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  int64_t v6 = (void *)(a5[6] + 16 * a1);
  *int64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1DA7A1930(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_1DA96FCAC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1DA7A1930(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_1DA96FD14(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1DA96FE44(a1, a2, a3, a4, a5, MEMORY[0x1E4F27928]);
}

uint64_t sub_1DA96FD2C(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  sub_1DA7BA440(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, &qword_1EBE59EF8);
  uint64_t result = sub_1DA7A19A4(a3, a4[7] + 40 * a1);
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_1DA96FDE4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_1DA96FE2C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1DA96FE44(a1, a2, a3, a4, a5, MEMORY[0x1E4F17BF8]);
}

uint64_t sub_1DA96FE44(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(void))
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = (void *)(a5[6] + 16 * a1);
  void *v9 = a2;
  v9[1] = a3;
  uint64_t v10 = a5[7];
  uint64_t v11 = a6(0);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a4, v11);
  uint64_t v13 = a5[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a5[2] = v15;
  }
  return result;
}

uint64_t sub_1DA96FEF8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a6[6];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A0E8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  uint64_t v15 = (void *)(a6[7] + 24 * a1);
  *uint64_t v15 = a3;
  v15[1] = a4;
  void v15[2] = a5;
  uint64_t v16 = a6[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a6[2] = v18;
  }
  return result;
}

uint64_t sub_1DA96FFD0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1DA970240(a1, a2, a3, a4, &qword_1EBE66CF0, MEMORY[0x1E4F27990]);
}

uint64_t sub_1DA96FFF0(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_1DA7A19A4(a3, a4[7] + 40 * a1);
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1DA9700B8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for RemoteActivityArchiveBudget();
  uint64_t result = sub_1DA9738F4(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for RemoteActivityArchiveBudget);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_1DA970164(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1DA7A19A4(a3, a4[7] + 40 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_1DA9701D0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  BOOL v7 = (void *)(a6[7] + 16 * result);
  *BOOL v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

uint64_t sub_1DA970220(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1DA970240(a1, a2, a3, a4, &qword_1EBE66B90, MEMORY[0x1E4F27928]);
}

uint64_t sub_1DA970240(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v11 = a4[6];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11 + *(void *)(*(void *)(v12 - 8) + 72) * a1, a2, v12);
  uint64_t v13 = a4[7];
  uint64_t v14 = a6(0);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13 + *(void *)(*(void *)(v14 - 8) + 72) * a1, a3, v14);
  uint64_t v16 = a4[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a4[2] = v18;
  }
  return result;
}

uint64_t sub_1DA97033C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66B90);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1DA9703F8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1DA989698();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for RemoteActivitySubscription(0);
  uint64_t result = sub_1DA9738F4(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, type metadata accessor for RemoteActivitySubscription);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_1DA9704E8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1DA989CD8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = sub_1DA989C38();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_1DA9705DC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for ExtensionMetadata();
  uint64_t result = sub_1DA9738F4(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

unint64_t sub_1DA970684(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = (void *)(a7[6] + 16 * result);
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t v8 = (void *)(a7[7] + 24 * result);
  *uint64_t v8 = a4;
  v8[1] = a5;
  v8[2] = a6;
  uint64_t v9 = a7[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a7[2] = v11;
  }
  return result;
}

uint64_t sub_1DA9706D8(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_1DA989638();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v52 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v49 = (char *)&v43 - v12;
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  uint64_t v48 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE58F50);
  uint64_t result = sub_1DA98CC08();
  uint64_t v14 = result;
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  if (a2 < 1) {
    unint64_t v15 = 0;
  }
  else {
    unint64_t v15 = *a1;
  }
  uint64_t v16 = 0;
  uint64_t v46 = v50 + 32;
  uint64_t v47 = v50 + 16;
  uint64_t v17 = result + 64;
  uint64_t v18 = v48;
  uint64_t v45 = a4;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      uint64_t v51 = v16;
      unint64_t v20 = v19 | (v16 << 6);
    }
    else
    {
      uint64_t v21 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        goto LABEL_40;
      }
      if (v21 >= v44) {
        return v14;
      }
      unint64_t v22 = v43[v21];
      uint64_t v23 = v16 + 1;
      if (!v22)
      {
        uint64_t v23 = v16 + 2;
        if (v16 + 2 >= v44) {
          return v14;
        }
        unint64_t v22 = v43[v23];
        if (!v22)
        {
          uint64_t v23 = v16 + 3;
          if (v16 + 3 >= v44) {
            return v14;
          }
          unint64_t v22 = v43[v23];
          if (!v22)
          {
            uint64_t v24 = v16 + 4;
            if (v16 + 4 >= v44) {
              return v14;
            }
            unint64_t v22 = v43[v24];
            if (!v22)
            {
              while (1)
              {
                uint64_t v23 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v23 >= v44) {
                  return v14;
                }
                unint64_t v22 = v43[v23];
                ++v24;
                if (v22) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v23 = v16 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v15 = (v22 - 1) & v22;
      uint64_t v51 = v23;
      unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
    }
    uint64_t v25 = a4[7];
    uint64_t v26 = (uint64_t *)(a4[6] + 16 * v20);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    uint64_t v29 = v49;
    uint64_t v30 = v50;
    uint64_t v31 = *(void *)(v50 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v49, v25 + v31 * v20, v18);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v32(v52, v29, v18);
    sub_1DA98CF18();
    swift_bridgeObjectRetain();
    sub_1DA98C108();
    uint64_t result = sub_1DA98CF68();
    uint64_t v33 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v36 = __clz(__rbit64((-1 << v34) & ~*(void *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v18 = v48;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v33) >> 6;
      uint64_t v18 = v48;
      do
      {
        if (++v35 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v39 = v35 == v38;
        if (v35 == v38) {
          unint64_t v35 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v17 + 8 * v35);
      }
      while (v40 == -1);
      unint64_t v36 = __clz(__rbit64(~v40)) + (v35 << 6);
    }
    *(void *)(v17 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    uint64_t v41 = (void *)(*(void *)(v14 + 48) + 16 * v36);
    void *v41 = v27;
    v41[1] = v28;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v32)(*(void *)(v14 + 56) + v36 * v31, v52, v18);
    ++*(void *)(v14 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v45;
    uint64_t v16 = v51;
    if (!a3) {
      return v14;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DA970A94(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA970AAC(a1, a2, a3, a4, &qword_1EBE5A768);
}

uint64_t sub_1DA970AA0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA970AAC(a1, a2, a3, a4, &qword_1EBE5A040);
}

uint64_t sub_1DA970AAC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v5 = a4;
  uint64_t v6 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v5;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t result = sub_1DA98CC08();
  uint64_t v9 = result;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v31) {
        return v9;
      }
      unint64_t v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v31) {
          return v9;
        }
        unint64_t v16 = a1[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v31) {
            return v9;
          }
          unint64_t v16 = a1[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v31) {
              return v9;
            }
            unint64_t v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v31) {
                  return v9;
                }
                unint64_t v16 = a1[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + v18);
    id v20 = *(id *)(*(void *)(v5 + 48) + v18);
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DA98C798();
    uint64_t v21 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = 8 * v24;
    *(void *)(*(void *)(v9 + 48) + v29) = v20;
    *(void *)(*(void *)(v9 + 56) + v29) = v19;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v6--, 1)) {
      break;
    }
    if (!v6) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DA970D40(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v38 = a1;
  uint64_t v7 = type metadata accessor for ExtensionMetadata();
  uint64_t v40 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v39 = (uint64_t)&v37 - v11;
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A758);
  uint64_t result = sub_1DA98CC08();
  uint64_t v13 = result;
  uint64_t v37 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *v38;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 64;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_40;
      }
      if (v19 >= v37) {
        return v13;
      }
      unint64_t v20 = v38[v19];
      ++v15;
      if (!v20)
      {
        uint64_t v15 = v19 + 1;
        if (v19 + 1 >= v37) {
          return v13;
        }
        unint64_t v20 = v38[v15];
        if (!v20)
        {
          uint64_t v15 = v19 + 2;
          if (v19 + 2 >= v37) {
            return v13;
          }
          unint64_t v20 = v38[v15];
          if (!v20)
          {
            uint64_t v21 = v19 + 3;
            if (v21 >= v37) {
              return v13;
            }
            unint64_t v20 = v38[v21];
            if (!v20)
            {
              while (1)
              {
                uint64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v15 >= v37) {
                  return v13;
                }
                unint64_t v20 = v38[v15];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v21;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    }
    uint64_t v22 = a4[7];
    unint64_t v23 = a4;
    unint64_t v24 = *(void **)(a4[6] + 8 * v18);
    uint64_t v25 = v39;
    uint64_t v26 = *(void *)(v40 + 72);
    sub_1DA972C4C(v22 + v26 * v18, v39);
    sub_1DA9738F4(v25, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
    id v27 = v24;
    uint64_t result = sub_1DA98C798();
    uint64_t v28 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v16 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(void *)(v16 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    *(void *)(*(void *)(v13 + 48) + 8 * v31) = v27;
    uint64_t result = sub_1DA9738F4((uint64_t)v9, *(void *)(v13 + 56) + v31 * v26, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
    ++*(void *)(v13 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v23;
    if (!a3) {
      return v13;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DA9710BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DA9710E4@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1DA965BE4(a1, *(void **)(v2 + 16), a2);
}

void sub_1DA971100(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_1DA97126C(a1, sub_1DA9738D4, (void (*)(unint64_t *__return_ptr, char *))sub_1DA966034, a2);
}

void sub_1DA971140(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DA966580(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_1DA97115C()
{
  unint64_t result = qword_1EA8E6B80;
  if (!qword_1EA8E6B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E6B80);
  }
  return result;
}

uint64_t sub_1DA9711B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExtensionMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DA97120C(id *a1)
{
  return (unint64_t)sub_1DA9666EC(a1) & 1;
}

void sub_1DA97122C(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_1DA97126C(a1, sub_1DA973960, (void (*)(unint64_t *__return_ptr, char *))sub_1DA96696C, a2);
}

void sub_1DA97126C(uint64_t *a1@<X0>, uint64_t (*a2)(id *)@<X1>, void (*a3)(unint64_t *__return_ptr, char *)@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = *a1;
  v11[2] = v8;
  swift_bridgeObjectRetain();
  sub_1DA964C44(a2, (uint64_t)v11, v9, a3, 0);
  *a4 = v10;
}

uint64_t sub_1DA9712D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v22 = a4;
  unint64_t v23 = a5;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v8 = type metadata accessor for ExtensionMetadata();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1DA7F7BDC(0, v12, 0);
    uint64_t v13 = v24;
    unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = a1 + v14;
    uint64_t v16 = *(void *)(v9 + 72);
    while (1)
    {
      sub_1DA969E34(v15, v20, v21, v22, v23, (uint64_t)v11);
      if (v6) {
        break;
      }
      uint64_t v6 = 0;
      uint64_t v24 = v13;
      unint64_t v18 = *(void *)(v13 + 16);
      unint64_t v17 = *(void *)(v13 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1DA7F7BDC(v17 > 1, v18 + 1, 1);
        uint64_t v13 = v24;
      }
      *(void *)(v13 + 16) = v18 + 1;
      sub_1DA9738F4((uint64_t)v11, v13 + v14 + v18 * v16, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
      v15 += v16;
      if (!--v12) {
        return v13;
      }
    }
    swift_release();
  }
  return v13;
}

void *sub_1DA971478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v9)(long long *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  long long v16;
  uint64_t v17;
  long long v18[2];
  uint64_t ObjectType;

  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = *(void *)(type metadata accessor for ExtensionMetadata() - 8);
  uint64_t v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  swift_bridgeObjectRetain();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = v6;
  uint64_t v9 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(a3 + 16);
  uint64_t v10 = *(void *)(v8 + 72);
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v15 = a3;
  v9(&v16, v7, ObjectType, a3);
  while (1)
  {
    if (v17)
    {
      sub_1DA7A19A4(&v16, (uint64_t)v18);
      sub_1DA7A19A4(v18, (uint64_t)&v16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1DA7CA994(0, v11[2] + 1, 1, v11);
      }
      uint64_t v13 = v11[2];
      int64_t v12 = v11[3];
      if (v13 >= v12 >> 1) {
        uint64_t v11 = sub_1DA7CA994((void *)(v12 > 1), v13 + 1, 1, v11);
      }
      v11[2] = v13 + 1;
      sub_1DA7A19A4(&v16, (uint64_t)&v11[5 * v13 + 4]);
      a3 = v15;
    }
    else
    {
      sub_1DA7A1AE0((uint64_t)&v16, &qword_1EBE58E50);
    }
    v7 += v10;
    if (!--v3) {
      break;
    }
    v9(&v16, v7, ObjectType, a3);
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1DA97164C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ExtensionMetadata() - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v22 - v10;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = *(void *)(v9 + 72);
    v22[1] = v2;
    uint64_t v23 = (v14 + 32) & ~v14;
    uint64_t v16 = a1 + v23;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v24 = v7;
    do
    {
      sub_1DA972C4C(v16, (uint64_t)v11);
      if (*(void *)(a2 + 16) && (unint64_t v18 = sub_1DA7FE778((uint64_t)v11), (v19 & 1) != 0))
      {
        sub_1DA7A1A44(*(void *)(a2 + 56) + 40 * v18, (uint64_t)v25);
        sub_1DA7A1AE0((uint64_t)v25, &qword_1EBE58E50);
        sub_1DA9738F4((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1DA7F7BDC(0, *(void *)(v17 + 16) + 1, 1);
        }
        uint64_t v17 = v27;
        unint64_t v21 = *(void *)(v27 + 16);
        unint64_t v20 = *(void *)(v27 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1DA7F7BDC(v20 > 1, v21 + 1, 1);
          uint64_t v17 = v27;
        }
        *(void *)(v17 + 16) = v21 + 1;
        uint64_t v7 = v24;
        sub_1DA9738F4((uint64_t)v24, v17 + v23 + v21 * v15, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
      }
      else
      {
        uint64_t v26 = 0;
        memset(v25, 0, sizeof(v25));
        sub_1DA7A1AE0((uint64_t)v25, &qword_1EBE58E50);
        sub_1DA9711B0((uint64_t)v11);
      }
      v16 += v15;
      --v13;
    }
    while (v13);
    return v27;
  }
  return result;
}

uint64_t sub_1DA97189C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ExtensionMetadata() - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v26 = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    v21[1] = v2;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v23 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = a1 + v23;
    uint64_t v16 = MEMORY[0x1E4FBC860];
    uint64_t v22 = a2;
    do
    {
      sub_1DA972C4C(v15, (uint64_t)v11);
      if (*(void *)(a2 + 16) && (unint64_t v17 = sub_1DA7FE778((uint64_t)v11), (v18 & 1) != 0))
      {
        sub_1DA7A1A44(*(void *)(a2 + 56) + 40 * v17, (uint64_t)v24);
        sub_1DA7A1AE0((uint64_t)v24, &qword_1EBE58E50);
        sub_1DA9711B0((uint64_t)v11);
      }
      else
      {
        uint64_t v25 = 0;
        memset(v24, 0, sizeof(v24));
        sub_1DA7A1AE0((uint64_t)v24, &qword_1EBE58E50);
        sub_1DA9738F4((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1DA7F7BDC(0, *(void *)(v16 + 16) + 1, 1);
        }
        uint64_t v16 = v26;
        unint64_t v20 = *(void *)(v26 + 16);
        unint64_t v19 = *(void *)(v26 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1DA7F7BDC(v19 > 1, v20 + 1, 1);
          uint64_t v16 = v26;
        }
        *(void *)(v16 + 16) = v20 + 1;
        sub_1DA9738F4((uint64_t)v7, v16 + v23 + v20 * v14, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
        a2 = v22;
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v26;
  }
  return result;
}

uint64_t sub_1DA971AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (int *)type metadata accessor for ExtensionMetadata();
  MEMORY[0x1F4188790](v5);
  uint64_t v41 = (uint64_t)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v35 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v35 - v12;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v48 = MEMORY[0x1E4FBC860];
  uint64_t v40 = *(void *)(a1 + 16);
  if (v40)
  {
    v35[1] = v2;
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)(v11 + 72);
    unint64_t v38 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v39 = a1 + v38;
    uint64_t v37 = a2 + v38;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v36 = a2;
    while (1)
    {
      uint64_t v42 = v17;
      uint64_t v43 = v15;
      sub_1DA972C4C(v39 + v16 * v15, (uint64_t)v13);
      uint64_t v18 = *(void *)(a2 + 16);
      if (v18) {
        break;
      }
LABEL_30:
      sub_1DA9738F4((uint64_t)v13, v41, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
      uint64_t v32 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1DA7F7BDC(0, *(void *)(v32 + 16) + 1, 1);
      }
      uint64_t v17 = v48;
      unint64_t v34 = *(void *)(v48 + 16);
      unint64_t v33 = *(void *)(v48 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1DA7F7BDC(v33 > 1, v34 + 1, 1);
        uint64_t v17 = v48;
      }
      *(void *)(v17 + 16) = v34 + 1;
      sub_1DA9738F4(v41, v17 + v38 + v34 * v16, (uint64_t (*)(void))type metadata accessor for ExtensionMetadata);
LABEL_35:
      uint64_t v15 = v43 + 1;
      if (v43 + 1 == v40) {
        return v48;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v19 = v37;
    while (1)
    {
      sub_1DA972C4C(v19, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
      sub_1DA7A0410(&qword_1EBE5A178, &qword_1EBE5A190);
      sub_1DA98C248();
      sub_1DA98C248();
      if (v46 == v44 && v47 == v45)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v21 = sub_1DA98CE58();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0) {
          goto LABEL_6;
        }
      }
      uint64_t v22 = v5[5];
      uint64_t v23 = *(void *)&v9[v22];
      uint64_t v24 = *(void *)&v9[v22 + 8];
      uint64_t v25 = &v13[v22];
      BOOL v26 = v23 == *(void *)v25 && v24 == *((void *)v25 + 1);
      if (!v26 && (sub_1DA98CE58() & 1) == 0
        || (sub_1DA935F90(*(void *)&v9[v5[6]], *(void *)&v13[v5[6]]) & 1) == 0
        || (sub_1DA935FA4(*(void *)&v9[v5[7]], *(void *)&v13[v5[7]]) & 1) == 0)
      {
        goto LABEL_6;
      }
      uint64_t v27 = v5[8];
      uint64_t v28 = &v9[v27];
      uint64_t v29 = *(void *)&v9[v27 + 8];
      unint64_t v30 = &v13[v27];
      uint64_t v31 = *((void *)v30 + 1);
      if (v29)
      {
        if (!v31 || (*(void *)v28 != *(void *)v30 || v29 != v31) && (sub_1DA98CE58() & 1) == 0) {
          goto LABEL_6;
        }
      }
      else if (v31)
      {
        goto LABEL_6;
      }
      if (sub_1DA9362A4(*(void *)&v9[v5[9]], *(void *)&v13[v5[9]]))
      {
        sub_1DA9711B0((uint64_t)v9);
        a2 = v36;
        swift_bridgeObjectRelease();
        sub_1DA9711B0((uint64_t)v13);
        uint64_t v17 = v42;
        goto LABEL_35;
      }
LABEL_6:
      sub_1DA9711B0((uint64_t)v9);
      v19 += v16;
      if (!--v18)
      {
        a2 = v36;
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
  }
  return result;
}

uint64_t sub_1DA971EF4(uint64_t result, uint64_t *a2, uint64_t *a3, NSObject *a4)
{
  uint64_t v5 = result;
  uint64_t v6 = *(void *)(result + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v22 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    unint64_t v11 = 0;
    uint64_t v12 = result + 32;
    uint64_t v18 = v6;
    uint64_t v19 = result;
    while (v11 < *(void *)(v5 + 16))
    {
      sub_1DA7A1A44(v12, (uint64_t)v21);
      char v13 = sub_1DA96AB80(v21, a2, a3, a4);
      if (v4)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        swift_release();
        swift_bridgeObjectRelease();
        return v7;
      }
      if (v13)
      {
        uint64_t v14 = a3;
        uint64_t v15 = a4;
        sub_1DA7A19A4(v21, (uint64_t)v20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1DA7F7CCC(0, *(void *)(v7 + 16) + 1, 1);
        }
        uint64_t v7 = v22;
        unint64_t v17 = *(void *)(v22 + 16);
        unint64_t v16 = *(void *)(v22 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1DA7F7CCC(v16 > 1, v17 + 1, 1);
          uint64_t v7 = v22;
        }
        *(void *)(v7 + 16) = v17 + 1;
        uint64_t result = sub_1DA7A19A4(v20, v7 + 40 * v17 + 32);
        a4 = v15;
        a3 = v14;
        uint64_t v6 = v18;
        uint64_t v5 = v19;
      }
      else
      {
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      }
      ++v11;
      v12 += 40;
      if (v6 == v11)
      {
        uint64_t v7 = v22;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1DA972094(uint64_t a1, uint64_t *a2)
{
  uint64_t v43 = a2;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  MEMORY[0x1F4188790](v48);
  uint64_t v46 = &v38[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v50 = &v38[-v7];
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v57 = MEMORY[0x1E4FBC860];
  uint64_t v42 = *(void *)(a1 + 16);
  if (v42)
  {
    uint64_t v9 = 0;
    uint64_t v40 = v5;
    uint64_t v41 = a1 + 32;
    uint64_t v45 = v5 + 16;
    uint64_t v47 = (void (**)(unsigned char *, uint64_t))(v5 + 8);
    *(void *)&long long v6 = 138543362;
    long long v39 = v6;
    do
    {
      uint64_t v44 = v9;
      sub_1DA7A1A44(v41 + 40 * v9, (uint64_t)&v54);
      uint64_t v10 = *v43;
      uint64_t v11 = v55;
      uint64_t v12 = v56;
      __swift_project_boxed_opaque_existential_0(&v54, v55);
      char v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 40);
      swift_bridgeObjectRetain();
      uint64_t v14 = (void *)v13(v11, v12);
      sub_1DA98C6F8();

      uint64_t v49 = v10;
      if (*(void *)(v10 + 16)
        && (uint64_t v15 = v49,
            sub_1DA7A0410((unint64_t *)&unk_1EBE5A160, &qword_1EBE5A190),
            uint64_t v16 = sub_1DA98BFA8(),
            uint64_t v17 = -1 << *(unsigned char *)(v15 + 32),
            unint64_t v18 = v16 & ~v17,
            uint64_t v19 = v15 + 56,
            ((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) != 0))
      {
        uint64_t v20 = ~v17;
        uint64_t v21 = *(void *)(v40 + 72);
        uint64_t v22 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v40 + 16);
        while (1)
        {
          uint64_t v23 = v48;
          uint64_t v24 = v46;
          v22(v46, *(void *)(v49 + 48) + v21 * v18, v48);
          sub_1DA7A0410(&qword_1EBE5A170, &qword_1EBE5A190);
          char v25 = sub_1DA98BFF8();
          BOOL v26 = *v47;
          (*v47)(v24, v23);
          if (v25) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v20;
          if (((*(void *)(v19 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
            goto LABEL_11;
          }
        }
        swift_bridgeObjectRelease();
        v26(v50, v48);
        if (qword_1EBE59148 != -1) {
          swift_once();
        }
        uint64_t v30 = sub_1DA989F38();
        __swift_project_value_buffer(v30, (uint64_t)qword_1EBE6F0A8);
        sub_1DA7A1A44((uint64_t)&v54, (uint64_t)&v51);
        uint64_t v31 = sub_1DA989F18();
        os_log_type_t v32 = sub_1DA98C548();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = swift_slowAlloc();
          unint64_t v34 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v33 = v39;
          uint64_t v36 = v52;
          uint64_t v35 = v53;
          __swift_project_boxed_opaque_existential_0(&v51, v52);
          uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 40))(v36, v35);
          *(void *)(v33 + 4) = v37;
          void *v34 = v37;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
          _os_log_impl(&dword_1DA795000, v31, v32, "Pending descriptor fetch already exists for %{public}@", (uint8_t *)v33, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63260);
          swift_arrayDestroy();
          MEMORY[0x1E0178DA0](v34, -1, -1);
          MEMORY[0x1E0178DA0](v33, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
        }

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
      }
      else
      {
LABEL_11:
        swift_bridgeObjectRelease();
        (*v47)(v50, v48);
        sub_1DA7A19A4(&v54, (uint64_t)&v51);
        uint64_t v27 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DA7F7CCC(0, *(void *)(v27 + 16) + 1, 1);
          uint64_t v27 = v57;
        }
        unint64_t v29 = *(void *)(v27 + 16);
        unint64_t v28 = *(void *)(v27 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1DA7F7CCC(v28 > 1, v29 + 1, 1);
          uint64_t v27 = v57;
        }
        *(void *)(v27 + 16) = v29 + 1;
        sub_1DA7A19A4(&v51, v27 + 40 * v29 + 32);
      }
      uint64_t v9 = v44 + 1;
    }
    while (v44 + 1 != v42);
    return v57;
  }
  return result;
}

id sub_1DA97259C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A080);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for ExtensionMetadata();
  uint64_t v5 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  os_log_type_t v32 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v31 = (char *)v27 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v27 - v10;
  sub_1DA989288();
  swift_allocObject();
  uint64_t v12 = sub_1DA989278();
  uint64_t v36 = *(void *)(a1 + 16);
  if (!v36)
  {
    swift_release();
    return (id)MEMORY[0x1E4FBC860];
  }
  uint64_t v40 = v12;
  unint64_t v30 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v35 = a1 + v30;
  uint64_t v38 = *(void *)(v5 + 72);
  unint64_t v29 = &v44;
  v27[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  uint64_t v33 = MEMORY[0x1E4FBC860];
  *(void *)&long long v14 = 136380675;
  long long v28 = v14;
  v27[1] = MEMORY[0x1E4FBC840] + 8;
  unint64_t v34 = v11;
  while (1)
  {
    sub_1DA972C4C(v35 + v38 * v13, (uint64_t)v11);
    unint64_t v15 = *(void *)&v11[*(int *)(v37 + 36)];
    if (v15 >> 62) {
      break;
    }
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v39 = v13;
    if (v16) {
      goto LABEL_6;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v11 = v34;
    sub_1DA9711B0((uint64_t)v34);
    uint64_t v13 = v39 + 1;
    if (v39 + 1 == v36)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (id)v33;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1DA98CBD8();
  uint64_t v39 = v13;
  if (!v16) {
    goto LABEL_3;
  }
LABEL_6:
  uint64_t v17 = sub_1DA9897A8();
  uint64_t v42 = v17 - 8;
  unint64_t v43 = v15 & 0xC000000000000001;
  uint64_t v18 = 4;
  uint64_t v41 = v16;
  while (1)
  {
    uint64_t v19 = v18 - 4;
    if (!v43) {
      break;
    }
    id result = (id)MEMORY[0x1E0177C00](v18 - 4, v15);
    uint64_t v21 = v18 - 3;
    if (__OFADD__(v19, 1)) {
      goto LABEL_18;
    }
LABEL_12:
    uint64_t v22 = result;
    id v23 = objc_msgSend(result, sel_activityAttributesType);
    uint64_t v24 = sub_1DA9894E8();
    unint64_t v26 = v25;

    sub_1DA97388C(&qword_1EBE5A078, MEMORY[0x1E4F17CC8]);
    sub_1DA989268();
    sub_1DA79DA70(v24, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 0, 1, v17);

    sub_1DA7A1AE0((uint64_t)v4, &qword_1EBE5A080);
    ++v18;
    if (v21 == v41) {
      goto LABEL_3;
    }
  }
  id result = *(id *)(v15 + 8 * v18);
  uint64_t v21 = v18 - 3;
  if (!__OFADD__(v19, 1)) {
    goto LABEL_12;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1DA972C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExtensionMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DA972CB0(uint64_t a1)
{
  sub_1DA96E3B0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1DA972CCC(uint64_t result, uint64_t a2, void (*a3)(unint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(result + 32);
  if (v3)
  {
    swift_bridgeObjectRetain();
    a3(0xD000000000000015, 0x80000001DA9A50B0, v3, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DA972EE8(uint64_t *a1)
{
  return sub_1DA96E920(a1, *(void *)(v1 + 16));
}

uint64_t sub_1DA972F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExtensionMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA972F68@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DA96D5A0(a1, a2);
}

uint64_t sub_1DA972F8C@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1DA96D394(a1, *(void **)(v2 + 16), a2);
}

uint64_t dispatch thunk of WidgetDescriptorProvider.migrateCachedDescriptorIfNecessary(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of WidgetDescriptorProvider.fetchExtension(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of WidgetDescriptorProvider.loadDescriptors(from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.descriptorUpdatePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.widgetDescriptors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.initialize(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.populate(for:reason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.refetch(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.hasAnyVersionCached(extension:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.clear(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.fillCache(for:descriptors:controlDescriptors:activityDescriptors:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.controlDescriptors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.controlDescriptors(containedBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.controlDescriptorsByExtensionIdentity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.activityDescriptorsByExtensionIdentity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.activityDescriptor(targeting:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.activityDescriptors(containedBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.activityDescriptor(for:containedBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.allDescriptors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.allDescriptors(extensionIdentity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t type metadata accessor for WidgetDescriptorCache()
{
  return self;
}

uint64_t method lookup function for WidgetDescriptorCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetDescriptorCache);
}

uint64_t dispatch thunk of WidgetDescriptorCache.__allocating_init(backingStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t initializeBufferWithCopyOfBuffer for DescriptorMatchError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(id *)a2;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for DescriptorMatchError(id *a1)
{
}

uint64_t assignWithCopy for DescriptorMatchError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(id *)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for DescriptorMatchError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for DescriptorMatchError()
{
  return &type metadata for DescriptorMatchError;
}

uint64_t destroy for WidgetDescriptorCacheUpdate()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s9ChronoKit27WidgetDescriptorCacheUpdateVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WidgetDescriptorCacheUpdate(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for WidgetDescriptorCacheUpdate(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WidgetDescriptorCacheUpdate()
{
  return &type metadata for WidgetDescriptorCacheUpdate;
}

uint64_t sub_1DA9733CC(uint64_t a1)
{
  return sub_1DA96E2B4(a1, *(void **)(v1 + 16));
}

uint64_t sub_1DA9733E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA96D964(*(void **)(v1 + 16), a1);
}

uint64_t objectdestroyTm_2()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  if (*(void *)(v0 + 72) >= 6uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 80)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1DA973468(void *a1, uint64_t a2)
{
  return sub_1DA96D7E8(a1, a2, *(void *)(v2 + 16), (void *)(v2 + 24), *(void *)(v2 + 64), *(void *)(v2 + 72), *(uint64_t (**)(void *))(v2 + 80), *(void *)(v2 + 88));
}

uint64_t sub_1DA97347C(uint64_t a1, uint64_t a2)
{
  return sub_1DA96E99C(a1, a2, *(void *)(v2 + 16));
}

void sub_1DA973484(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id))
{
  uint64_t v23 = a2;
  long long v28 = a4;
  uint64_t v24 = a1;
  uint64_t v5 = type metadata accessor for ExtensionMetadata();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v25 = 0;
  uint64_t v26 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v27 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v19 >= v27) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v26 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v26 + 8 * v9);
      if (!v20)
      {
        int64_t v9 = v19 + 2;
        if (v19 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v26 + 8 * v9);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_5:
    uint64_t v16 = *(void **)(*(void *)(a3 + 48) + 8 * v15);
    sub_1DA972C4C(*(void *)(a3 + 56) + *(void *)(v6 + 72) * v15, (uint64_t)v8);
    id v17 = v16;
    char v18 = v28(v17);
    sub_1DA9711B0((uint64_t)v8);

    if (v18)
    {
      *(unint64_t *)((char *)v24 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v25++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1DA970D40(v24, v23, v25, (void *)a3);
        return;
      }
    }
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v27) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v26 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v27) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v26 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1DA9736F4(uint64_t isStackAllocationSafe, uint64_t (*a2)(id), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v14[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    sub_1DA973484((void *)((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    sub_1DA973484((unint64_t *)v11, v8, v6, a2);
    a3 = v12;
    MEMORY[0x1E0178DA0](v11, -1, -1);
  }
  return a3;
}

unint64_t sub_1DA97386C(id *a1)
{
  return (unint64_t)sub_1DA9672E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_1DA97388C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DA9738D4(id *a1)
{
  return sub_1DA966970(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1DA9738F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA973960(id *a1)
{
  return sub_1DA9738D4(a1) & 1;
}

uint64_t sub_1DA97397C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DA966134(a1, a2);
}

void sub_1DA973994(uint64_t a1)
{
}

uint64_t sub_1DA9739AC(uint64_t *a1)
{
  return sub_1DA972EE8(a1);
}

uint64_t sub_1DA9739C4@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1DA9710E4(a1, a2);
}

uint64_t sub_1DA9739DC@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1DA972F8C(a1, a2);
}

uint64_t sub_1DA9739F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DA972F68(a1, a2);
}

uint64_t sub_1DA973A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v34 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EC8);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59F60);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBE59E40);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v29 = v13;
  uint64_t v31 = sub_1DA989478();
  uint64_t v14 = *(void *)(v31 - 8);
  double v15 = MEMORY[0x1F4188790](v31);
  os_log_type_t v32 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(v14 + 16))(v15);
  uint64_t v17 = a2;
  uint64_t v30 = a2;
  sub_1DA84A838(a2, (uint64_t)v13, type metadata accessor for ActivityKey);
  uint64_t v18 = type metadata accessor for ActivityKey(0);
  int64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v13, 0, 1, v18);
  uint64_t v20 = v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8) + 68);
  long long v28 = v10;
  sub_1DA84A838(v20, (uint64_t)v10, type metadata accessor for ActivityVariantKey);
  uint64_t v21 = type metadata accessor for ActivityVariantKey(0);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v10, 0, 1, v21);
  uint64_t v23 = (uint64_t)&v7[*(int *)(v5 + 76)];
  v19((char *)v23, 1, 1, v18);
  uint64_t v24 = (uint64_t)&v7[*(int *)(v5 + 80)];
  v22((char *)v24, 1, 1, v21);
  uint64_t v25 = v31;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v7, v32, v31);
  sub_1DA82636C((uint64_t)v29, v23, qword_1EBE59E40);
  sub_1DA82636C((uint64_t)v28, v24, &qword_1EBE59F60);
  sub_1DA7BA440((uint64_t)v7, v34, &qword_1EBE59EC8);
  sub_1DA7A1AE0(v30, &qword_1EBE59EF8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v33, v25);
}

uint64_t ExtensionManager.systemDataURL(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_1DA989308();
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DA989478();
  uint64_t v45 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v42 = (char *)v40 - v10;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
  uint64_t v11 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  unint64_t v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE5A190);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *MEMORY[0x1E4F58B70];
  uint64_t v47 = a1;
  int64_t v19 = (uint64_t *)(a1 + v18);
  swift_beginAccess();
  uint64_t v20 = v19[1];
  if (v20)
  {
    uint64_t v21 = *v19;
    swift_bridgeObjectRetain();
    sub_1DA989A18();
    uint64_t v49 = v21;
    uint64_t v50 = v20;
    uint64_t v22 = *MEMORY[0x1E4F276A8];
    uint64_t v24 = v43;
    uint64_t v23 = v44;
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 104);
    v41(v5, v22, v44);
    v40[1] = sub_1DA7DF7A0();
    uint64_t v25 = v42;
    sub_1DA989468();
    uint64_t v43 = *(void *)(v24 + 8);
    ((void (*)(char *, uint64_t))v43)(v5, v23);
    swift_bridgeObjectRelease();
    uint64_t v26 = v45;
    v40[0] = *(void *)(v45 + 8);
    ((void (*)(char *, uint64_t))v40[0])(v8, v6);
    swift_beginAccess();
    uint64_t v27 = sub_1DA9899C8();
    uint64_t v29 = v28;
    swift_endAccess();
    uint64_t v49 = v27;
    uint64_t v50 = v29;
    v41(v5, *MEMORY[0x1E4F276C0], v23);
    uint64_t v30 = v48;
    sub_1DA989468();
    ((void (*)(char *, uint64_t))v43)(v5, v23);
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v40[0])(v25, v6);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v6);
  }
  else
  {
    os_log_type_t v32 = v41;
    uint64_t v33 = v46;
    uint64_t v44 = v6;
    sub_1DA98C6F8();
    sub_1DA989A98();
    if (v34)
    {
      uint64_t v35 = swift_bridgeObjectRelease();
      uint64_t v36 = *(void *)((char *)v32 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier);
      MEMORY[0x1F4188790](v35);
      v40[-2] = v17;
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v36 + 24));
      sub_1DA97433C((uint64_t *)(v36 + 16), (uint64_t)&v49);
      os_unfair_lock_unlock((os_unfair_lock_t)(v36 + 24));
      swift_release();
    }
    else
    {
      sub_1DA989AD8();
      sub_1DA85E6C8((uint64_t)v13, (uint64_t)&v49);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v33);
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v37 = v51;
    if (v51)
    {
      uint64_t v38 = v52;
      __swift_project_boxed_opaque_existential_0(&v49, v51);
      uint64_t v39 = v48;
      (*(void (**)(uint64_t, uint64_t))(v38 + 104))(v37, v38);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v39, 0, 1, v44);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    }
    else
    {
      sub_1DA7A1AE0((uint64_t)&v49, &qword_1EBE58E50);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v48, 1, 1, v44);
    }
  }
}

double sub_1DA97433C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA85DA38(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1DA974358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ExtensionManager.systemDataURL(for:)(a1, a2);
}

uint64_t sub_1DA97437C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v4 = sub_1DA989308();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1DA989478();
  uint64_t v8 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = (uint64_t *)(a1 + *MEMORY[0x1E4F58B70]);
  swift_beginAccess();
  uint64_t v15 = v14[1];
  if (v15)
  {
    uint64_t v16 = *v14;
    swift_bridgeObjectRetain();
    sub_1DA989A18();
    uint64_t v39 = v16;
    uint64_t v40 = v15;
    uint64_t v17 = *MEMORY[0x1E4F276A8];
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
    v36(v7, v17, v4);
    unint64_t v35 = sub_1DA7DF7A0();
    sub_1DA989468();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v5 + 8);
    v34(v7, v4);
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v18 = v10;
    uint64_t v19 = v37;
    v33(v18, v37);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    uint64_t v20 = sub_1DA9899C8();
    uint64_t v22 = v21;
    swift_endAccess();
    uint64_t v39 = v20;
    uint64_t v40 = v22;
    v36(v7, *MEMORY[0x1E4F276C0], v4);
    uint64_t v23 = v38;
    sub_1DA989468();
    v34(v7, v4);
    swift_bridgeObjectRelease();
    v33(v13, v19);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v23, 0, 1, v19);
  }
  else
  {
    uint64_t v25 = v8;
    uint64_t v26 = v37;
    uint64_t v27 = v2 + 2;
    uint64_t v29 = v2[5];
    uint64_t v28 = v2[6];
    __swift_project_boxed_opaque_existential_0(v27, v29);
    ExtensionManaging.extension(for:)(a1, v29, v28);
    uint64_t v30 = v41;
    if (v41)
    {
      uint64_t v31 = v42;
      __swift_project_boxed_opaque_existential_0(&v39, v41);
      uint64_t v32 = v38;
      (*(void (**)(uint64_t, uint64_t))(v31 + 104))(v30, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v32, 0, 1, v26);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
    }
    else
    {
      sub_1DA7A1AE0((uint64_t)&v39, &qword_1EBE58E50);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v38, 1, 1, v26);
    }
  }
}

uint64_t sub_1DA974774()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA9747AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA97437C(a1, a2);
}

uint64_t LSApplicationRecordSystemDataURLProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t LSApplicationRecordSystemDataURLProvider.init()()
{
  return v0;
}

uint64_t sub_1DA9747E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_1DA989308();
  uint64_t v45 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DA989478();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v41 - v17;
  uint64_t v19 = *MEMORY[0x1E4F58B70];
  uint64_t v47 = a1;
  uint64_t v20 = (uint64_t *)(a1 + v19);
  swift_beginAccess();
  uint64_t v21 = v20[1];
  if (v21)
  {
    uint64_t v22 = *v20;
    swift_bridgeObjectRetain();
    sub_1DA989A18();
    uint64_t v48 = v22;
    uint64_t v49 = v21;
    uint64_t v23 = *MEMORY[0x1E4F276A8];
    uint64_t v24 = v45;
    uint64_t v42 = v6;
    uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 104);
    v44(v5, v23, v3);
    unint64_t v43 = sub_1DA7DF7A0();
    sub_1DA989468();
    uint64_t v45 = *(void *)(v24 + 8);
    ((void (*)(char *, uint64_t))v45)(v5, v3);
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v7 + 8);
    v25(v9, v6);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    uint64_t v26 = sub_1DA9899C8();
    uint64_t v28 = v27;
    swift_endAccess();
    uint64_t v48 = v26;
    uint64_t v49 = v28;
    v44(v5, *MEMORY[0x1E4F276C0], v3);
    uint64_t v29 = v46;
    sub_1DA989468();
    ((void (*)(char *, uint64_t))v45)(v5, v3);
    swift_bridgeObjectRelease();
    uint64_t v30 = v42;
    v25(v12, v42);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v30);
  }
  else
  {
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE66CF0);
    sub_1DA9899C8();
    swift_endAccess();
    id v32 = objc_allocWithZone(MEMORY[0x1E4F223A0]);
    id v33 = sub_1DA865E90();
    uint64_t v34 = v33;
    if (v33)
    {
      id v35 = objc_msgSend(v33, sel_dataContainerURL);
      if (v35)
      {
        uint64_t v36 = v35;
        sub_1DA989438();

        uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        v37(v15, 0, 1, v6);
      }
      else
      {
        uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        v37(v15, 1, 1, v6);
      }
      sub_1DA7BA440((uint64_t)v15, (uint64_t)v18, (uint64_t *)&unk_1EBE66AB0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v18, 1, v6) == 1)
      {

        sub_1DA7A1AE0((uint64_t)v18, (uint64_t *)&unk_1EBE66AB0);
        uint64_t v38 = v46;
        uint64_t v39 = 1;
      }
      else
      {
        uint64_t v40 = v46;
        sub_1DA9893F8();

        (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
        uint64_t v38 = v40;
        uint64_t v39 = 0;
      }
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v37)(v38, v39, 1, v6);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v46, 1, 1, v6);
    }
  }
}

uint64_t LSApplicationRecordSystemDataURLProvider.deinit()
{
  return v0;
}

uint64_t LSApplicationRecordSystemDataURLProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DA974D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA9747E8(a1, a2);
}

uint64_t sub_1DA974D78()
{
  uint64_t v0 = sub_1DA975E88();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1DA974DB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA7A1A44(v1 + 32, a1);
}

void *ExtensionSystemDataCacheKeyProvider.__allocating_init(subsystemIdentifier:systemDataURLProvider:fileManager:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  sub_1DA7A19A4(a3, (uint64_t)(v8 + 4));
  v8[9] = a4;
  return v8;
}

void *ExtensionSystemDataCacheKeyProvider.init(subsystemIdentifier:systemDataURLProvider:fileManager:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a2;
  sub_1DA7A19A4(a3, (uint64_t)(v4 + 4));
  v4[9] = a4;
  return v4;
}

id sub_1DA974E5C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v17[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DA989478();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A1A44((uint64_t)(v0 + 4), (uint64_t)v17);
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_0(v17, v18);
  uint64_t v11 = (void *)(*(uint64_t (**)(void))(*(void *)(v1 + 96) + 16))(*(void *)(v1 + 80));
  (*(void (**)(void *, uint64_t, uint64_t))(v10 + 8))(v11, v9, v10);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v4, (uint64_t *)&unk_1EBE66AB0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    id v13 = (id)v0[9];
    sub_1DA989458();
    uint64_t v14 = (void *)sub_1DA98C008();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v13, sel_fileExistsAtPath_, v14);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v12;
}

uint64_t sub_1DA9750CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DA989478();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 104))(v8, v9);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1DA9893F8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_1DA975240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v28 = v4;
  uint64_t v29 = a2;
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DA989478();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v26 - v17;
  uint64_t v19 = *(uint64_t (**)(uint64_t, double))(*(void *)(v4 + 96) + 16);
  uint64_t v27 = a1;
  uint64_t v20 = (void *)v19(v5, v16);
  sub_1DA97523C();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v10, (uint64_t *)&unk_1EBE66AB0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v28 + 88) - 8) + 56))(v29, 1, 1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v10, v11);
    uint64_t v22 = v28;
    uint64_t v23 = *(void *)(v28 + 88);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v18, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v7, v27, v5);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 + 104) + 16);
    uint64_t v25 = v29;
    v24(v14, v7, v23);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v23 - 8) + 56))(v25, 0, 1);
  }
}

uint64_t ExtensionSystemDataCacheKeyProvider.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return v0;
}

uint64_t ExtensionSystemDataCacheKeyProvider.__deallocating_deinit()
{
  ExtensionSystemDataCacheKeyProvider.deinit();

  return swift_deallocClassInstance();
}

unint64_t sub_1DA975608()
{
  return (unint64_t)sub_1DA974E5C() & 1;
}

uint64_t sub_1DA975630()
{
  return sub_1DA97523C();
}

uint64_t sub_1DA975654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA975240(a1, a2);
}

uint64_t ExtensionSystemDataCacheKeyProvider.baseURLsForTargets(of:)(void *a1)
{
  uint64_t v2 = sub_1DA989478();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v12);
  uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
  sub_1DA9758A4((uint64_t)v14, (uint64_t)v11);

  sub_1DA7A1F58((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_1EBE66AB0);
  uint64_t v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1)
  {
    double v16 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v16(v5, v8, v2);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE58F80);
    unint64_t v17 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DA990050;
    v16((char *)(v15 + v17), v5, v2);
  }
  sub_1DA7A1AE0((uint64_t)v11, (uint64_t *)&unk_1EBE66AB0);
  return v15;
}

uint64_t sub_1DA9758A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1DA989308();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA7A1A44(v3 + 32, (uint64_t)v21);
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_0(v21, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(a1, v13, v14);
  uint64_t v15 = sub_1DA989478();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15) == 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    sub_1DA7A1AE0((uint64_t)v12, (uint64_t *)&unk_1EBE66AB0);
    uint64_t v17 = 1;
  }
  else
  {
    swift_beginAccess();
    uint64_t v18 = *(void *)(v3 + 24);
    v20[0] = *(void *)(v3 + 16);
    v20[1] = v18;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F276A8], v6);
    sub_1DA7DF7A0();
    swift_bridgeObjectRetain();
    sub_1DA989468();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    uint64_t v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, v17, 1, v15);
}

uint64_t ExtensionSystemDataCacheKeyProvider.baseURL(for:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA9758A4(*a1, a2);
}

uint64_t ExtensionSystemDataCacheKeyProvider.cacheKey(for:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EF8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DA989478();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v20 - v15;
  sub_1DA9758A4(*a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v9, (uint64_t *)&unk_1EBE66AB0);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EC8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
    sub_1DA7A1F58((uint64_t)a1, (uint64_t)v6, &qword_1EBE59EF8);
    sub_1DA973A0C((uint64_t)v13, (uint64_t)v6, a2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59EC8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a2, 0, 1, v19);
  }
}

uint64_t sub_1DA975E1C(void *a1)
{
  return ExtensionSystemDataCacheKeyProvider.baseURLsForTargets(of:)(a1);
}

uint64_t sub_1DA975E40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return ExtensionSystemDataCacheKeyProvider.baseURL(for:)(a1, a2);
}

uint64_t sub_1DA975E64@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return ExtensionSystemDataCacheKeyProvider.cacheKey(for:)(a1, a2);
}

uint64_t sub_1DA975E88()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t sub_1DA975EBC@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1DA975E88();
  a1[1] = v2;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA975EFC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1DA8836B0(v1, v2);
}

uint64_t sub_1DA975F3C()
{
  return 32;
}

__n128 sub_1DA975F48(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t dispatch thunk of SystemDataURLProvider.systemDataURL(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for ExtensionManagingSystemDataURLProvider()
{
  return self;
}

uint64_t type metadata accessor for LSApplicationRecordSystemDataURLProvider()
{
  return self;
}

uint64_t method lookup function for LSApplicationRecordSystemDataURLProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LSApplicationRecordSystemDataURLProvider);
}

uint64_t dispatch thunk of LSApplicationRecordSystemDataURLProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of LSApplicationRecordSystemDataURLProvider.systemDataURL(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t sub_1DA976000()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ExtensionSystemDataCacheKeyProvider()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for ExtensionSystemDataCacheKeyProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ExtensionSystemDataCacheKeyProvider);
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.subsystemIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.subsystemIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.subsystemIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.__allocating_init(subsystemIdentifier:systemDataURLProvider:fileManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.isSupported(key:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.baseURL(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.cacheKey(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t sub_1DA97619C(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x1F4188790](TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_1DA98B408();
}

uint64_t TintedWidgetViewModel.__allocating_init(tintParameters:)()
{
  uint64_t v0 = swift_allocObject();
  swift_beginAccess();
  sub_1DA86F3F4();
  sub_1DA98A088();
  swift_endAccess();
  return v0;
}

uint64_t TintedWidgetView.init(fullColorView:tintedView:tintedWidgetViewModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for TintedWidgetView();
  uint64_t v7 = (char *)a3 + *(int *)(v6 + 52);
  uint64_t v8 = sub_1DA98C838();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  uint64_t v10 = (char *)a3 + *(int *)(v6 + 56);
  uint64_t v11 = sub_1DA98C838();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a2, v11);
  type metadata accessor for TintedWidgetViewModel();
  sub_1DA97BE38();
  uint64_t v13 = sub_1DA98A318();
  uint64_t v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a2, v11);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  *a3 = v13;
  a3[1] = v15;
  return result;
}

uint64_t sub_1DA976584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  v9[0] = a1;
  v9[1] = a2;
  void v9[2] = a3;
  *(double *)&v9[3] = a6;
  v9[4] = swift_getKeyPath();
  char v10 = 0;
  MEMORY[0x1E0176300](v9, a4, &type metadata for TintedWidgetModifier, a5);
  return swift_release();
}

uint64_t sub_1DA97662C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v62 = sub_1DA98A888();
  uint64_t v4 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v66 = sub_1DA98AD58();
  uint64_t v72 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v68 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v58 = a1;
  uint64_t v65 = v11;
  uint64_t v70 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v63 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1DA98A388();
  uint64_t v71 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v64 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = MEMORY[0x1F4188790](v15);
  unint64_t v67 = (char *)&v53 - v17;
  (*(void (**)(double))(v2 + 24))(v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B98);
  uint64_t v18 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E57B0) - 8);
  uint64_t v19 = *(void *)v18;
  uint64_t v59 = *(void *)(*(void *)v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v60 = 2 * v59;
  uint64_t v21 = swift_allocObject();
  uint64_t v61 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_1DA994210;
  unint64_t v54 = v21 + v20;
  unint64_t v22 = v21 + v20 + v18[14];
  sub_1DA98AA88();
  float v23 = *(double *)(v2 + 16);
  swift_retain();
  uint64_t v24 = (uint64_t)v9;
  sub_1DA877A88((uint64_t)v9);
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v53 = v6;
  uint64_t v25 = v62;
  v57(v6, v9, v62);
  sub_1DA98A268();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v55 = v4 + 8;
  uint64_t v56 = v26;
  uint64_t v27 = v25;
  v26((uint64_t)v9, v25);
  int v28 = v82;
  int v29 = v80;
  float v30 = v76 * v23;
  float v31 = v79 * v23;
  float v32 = v83 * v23;
  *(_DWORD *)unint64_t v22 = 0;
  *(void *)(v22 + 4) = v77;
  *(float *)(v22 + 12) = v30;
  *(void *)(v22 + 16) = v78;
  *(_DWORD *)(v22 + 24) = 0;
  *(_DWORD *)(v22 + 28) = v29;
  *(float *)(v22 + 32) = v31;
  *(void *)(v22 + 36) = v81;
  *(_DWORD *)(v22 + 44) = v28;
  *(_DWORD *)(v22 + 48) = 0;
  *(float *)(v22 + 52) = v32;
  *(_OWORD *)(v22 + 56) = v84;
  *(void *)(v22 + 72) = v85;
  unint64_t v33 = v54;
  unint64_t v34 = v54 + v59 + v18[14];
  sub_1DA98AA98();
  float v35 = *(double *)(v2 + 16);
  uint64_t v36 = v58;
  swift_retain();
  sub_1DA877A88(v24);
  v57(v53, (char *)v24, v27);
  sub_1DA98A268();
  v56(v24, v27);
  int v37 = v92;
  int v38 = v90;
  float v39 = v86 * v35;
  float v40 = v89 * v35;
  float v41 = v93 * v35;
  *(_DWORD *)unint64_t v34 = 0;
  *(void *)(v34 + 4) = v87;
  *(float *)(v34 + 12) = v39;
  *(void *)(v34 + 16) = v88;
  *(_DWORD *)(v34 + 24) = 0;
  *(_DWORD *)(v34 + 28) = v38;
  *(float *)(v34 + 32) = v40;
  *(void *)(v34 + 36) = v91;
  *(_DWORD *)(v34 + 44) = v37;
  *(_DWORD *)(v34 + 48) = 0;
  *(float *)(v34 + 52) = v41;
  *(_OWORD *)(v34 + 56) = v94;
  *(void *)(v34 + 72) = v95;
  uint64_t v42 = v33 + v60 + v18[14];
  sub_1DA98AAA8();
  *(_DWORD *)uint64_t v42 = 1065353216;
  *(void *)(v42 + 12) = 0;
  *(void *)(v42 + 4) = 0;
  *(void *)(v42 + 20) = 0x3F80000000000000;
  *(void *)(v42 + 36) = 0;
  *(void *)(v42 + 28) = 0;
  *(void *)(v42 + 44) = 0x3F80000000000000;
  *(void *)(v42 + 60) = 0;
  *(void *)(v42 + 52) = 0;
  *(_DWORD *)(v42 + 68) = 0;
  *(void *)(v42 + 72) = 1065353216;
  sub_1DA79D6F0(v61);
  sub_1DA98AD48();
  unint64_t v43 = v68;
  sub_1DA98AD68();
  uint64_t v44 = *(void *)(v36 + 24);
  uint64_t v45 = v64;
  uint64_t v46 = v65;
  uint64_t v47 = v66;
  uint64_t v48 = v63;
  MEMORY[0x1E0176300](v43, v65, v66, v44);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v43, v47);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v48, v46);
  uint64_t v74 = v44;
  uint64_t v75 = MEMORY[0x1E4F3E018];
  uint64_t v49 = v69;
  swift_getWitnessTable();
  uint64_t v50 = v67;
  sub_1DA875B4C(v45);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v71 + 8);
  v51(v45, v49);
  sub_1DA875B4C(v50);
  return ((uint64_t (*)(char *, uint64_t))v51)(v50, v49);
}

uint64_t sub_1DA976D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v73 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v62 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v61 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = v6;
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v81 = v4;
  uint64_t v82 = v7;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v58 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x1F4188790](OpaqueTypeMetadata2);
  uint64_t v64 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v63 = (char *)v53 - v11;
  uint64_t v60 = sub_1DA98A8A8();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v57 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = v4;
  uint64_t v81 = v4;
  uint64_t v82 = v7;
  uint64_t v66 = v7;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1DA98A428();
  uint64_t v13 = sub_1DA98A388();
  uint64_t v56 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v53 - v14;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v79 = MEMORY[0x1E4F3EB88];
  uint64_t v80 = WitnessTable;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v81 = v13;
  uint64_t v82 = v17;
  uint64_t v18 = swift_getOpaqueTypeMetadata2();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  unint64_t v54 = (char *)v53 - v20;
  uint64_t v81 = v13;
  uint64_t v82 = v17;
  v53[1] = v17;
  uint64_t v71 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = v18;
  uint64_t v81 = v18;
  uint64_t v82 = v71;
  uint64_t v21 = swift_getOpaqueTypeMetadata2();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v55 = (char *)v53 - v26;
  uint64_t v70 = sub_1DA98AA78();
  uint64_t v69 = *(void *)(v70 - 8);
  double v27 = MEMORY[0x1F4188790](v70);
  unint64_t v67 = (char *)v53 - v28;
  if (*(unsigned char *)(v3 + 8) == 1)
  {
    uint64_t v81 = sub_1DA98B1C8();
    MEMORY[0x1F4188790](v81);
    uint64_t v29 = v66;
    v53[-4] = v68;
    v53[-3] = v29;
    uint64_t v68 = v19;
    v53[-2] = v3;
    sub_1DA98B3A8();
    v53[0] = OpaqueTypeMetadata2;
    sub_1DA98B138();
    swift_release();
    uint64_t v30 = *MEMORY[0x1E4F3D408];
    uint64_t v31 = v59;
    float v32 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 104);
    uint64_t v66 = v22;
    unint64_t v33 = v57;
    uint64_t v34 = v60;
    v32(v57, v30, v60);
    uint64_t v35 = (uint64_t)v24;
    uint64_t v36 = v54;
    sub_1DA98B048();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v34);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v13);
    sub_1DA977A40((uint64_t)&v81);
    uint64_t v38 = v71;
    uint64_t v37 = v72;
    sub_1DA98B028();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v36, v37);
    uint64_t v77 = v37;
    uint64_t v78 = v38;
    swift_getOpaqueTypeConformance2();
    float v39 = v55;
    sub_1DA875B4C(v35);
    float v40 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    v40(v35, v21);
    sub_1DA875B4C(v39);
    float v41 = v67;
    uint64_t v42 = OpaqueTypeConformance2;
    sub_1DA875B88(v35, v21);
    v40(v35, v21);
    v40((uint64_t)v39, v21);
  }
  else
  {
    unint64_t v43 = v61;
    (*(void (**)(double))(v3 + 24))(v27);
    float v44 = *(float *)(v3 + 16);
    float v45 = *(float *)(v3 + 12);
    float v46 = *(float *)(v3 + 20) - v44;
    *(float *)&uint64_t v81 = (float)(1.0 - v45) + (float)(v45 * (float)(v46 * 0.21265));
    *((float *)&v81 + 1) = v45 * (float)(v46 * 0.71533);
    *(float *)&uint64_t v82 = v45 * (float)(v46 * 0.072205);
    HIDWORD(v82) = 0;
    float v83 = v44 * v45;
    float v84 = v45 * (float)(v46 * 0.21265);
    float v85 = (float)(1.0 - v45) + *((float *)&v81 + 1);
    float v86 = *(float *)&v82;
    int v87 = 0;
    float v88 = v44 * v45;
    float v89 = v84;
    float v90 = *((float *)&v81 + 1);
    float v91 = (float)(1.0 - v45) + *(float *)&v82;
    int v92 = 0;
    float v93 = v44 * v45;
    long long v94 = xmmword_1DA99B210;
    int v95 = 0;
    uint64_t v47 = (uint64_t)v64;
    uint64_t v48 = v68;
    sub_1DA98B028();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v43, v48);
    uint64_t v49 = v63;
    uint64_t v42 = OpaqueTypeConformance2;
    sub_1DA875B4C(v47);
    uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v50(v47, OpaqueTypeMetadata2);
    sub_1DA875B4C(v49);
    uint64_t v38 = v71;
    uint64_t v37 = v72;
    uint64_t v77 = v72;
    uint64_t v78 = v71;
    swift_getOpaqueTypeConformance2();
    float v41 = v67;
    sub_1DA875C80(v47, v21, OpaqueTypeMetadata2);
    v50(v47, OpaqueTypeMetadata2);
    v50((uint64_t)v49, OpaqueTypeMetadata2);
  }
  uint64_t v77 = v37;
  uint64_t v78 = v38;
  uint64_t v75 = swift_getOpaqueTypeConformance2();
  uint64_t v76 = v42;
  uint64_t v51 = v70;
  swift_getWitnessTable();
  sub_1DA875B4C(v41);
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v41, v51);
}

uint64_t sub_1DA977780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v25[1] = a4;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v10;
  uint64_t v27 = v11;
  v25[0] = MEMORY[0x1E4F3E480];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v13 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x1F4188790](OpaqueTypeMetadata2);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v25 - v18;
  (*(void (**)(double))(a1 + 24))(v17);
  float v20 = *(float *)(a1 + 16);
  float v21 = *(float *)(a1 + 12);
  float v22 = *(float *)(a1 + 20) - v20;
  *(float *)&uint64_t v26 = (float)(1.0 - v21) + (float)(v21 * (float)(v22 * 0.21265));
  *((float *)&v26 + 1) = v21 * (float)(v22 * 0.71533);
  *(float *)&uint64_t v27 = v21 * (float)(v22 * 0.072205);
  HIDWORD(v27) = 0;
  float v28 = v20 * v21;
  float v29 = v21 * (float)(v22 * 0.21265);
  float v30 = (float)(1.0 - v21) + *((float *)&v26 + 1);
  float v31 = *(float *)&v27;
  int v32 = 0;
  float v33 = v20 * v21;
  float v34 = v29;
  float v35 = *((float *)&v26 + 1);
  float v36 = (float)(1.0 - v21) + *(float *)&v27;
  int v37 = 0;
  float v38 = v20 * v21;
  long long v39 = xmmword_1DA99B210;
  int v40 = 0;
  sub_1DA98B028();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a2);
  _OWORD v25[2] = a2;
  void v25[3] = a3;
  swift_getOpaqueTypeConformance2();
  sub_1DA875B4C(v15);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v13 + 8);
  v23(v15, OpaqueTypeMetadata2);
  sub_1DA875B4C(v19);
  return ((uint64_t (*)(char *, uint64_t))v23)(v19, OpaqueTypeMetadata2);
}

double sub_1DA977A40@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DA98A888();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v13.i8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  sub_1DA877A88((uint64_t)v4);
  sub_1DA98A268();
  int v6 = v14;
  int v5 = v15;
  int v7 = v19;
  int8x16_t v8 = vextq_s8(v13, v13, 4uLL);
  uint64_t v9 = v16;
  uint64_t v10 = v17;
  int32x2_t v11 = v18;
  *(_DWORD *)a1 = 0;
  *(int8x16_t *)(a1 + 4) = v8;
  *(_DWORD *)(a1 + 20) = v6;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 28) = v9;
  *(_DWORD *)(a1 + 36) = v5;
  *(void *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = 0;
  *(int32x2_t *)(a1 + 52) = vrev64_s32(v11);
  double result = 0.000352859321;
  *(_OWORD *)(a1 + 60) = xmmword_1DA99B220;
  *(_DWORD *)(a1 + 76) = v7;
  return result;
}

double sub_1DA977B40()
{
  v7[1] = *(double *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1DA98B178();
  if (!v0) {
    return 0.0;
  }
  uint64_t v1 = (void *)v0;
  double v6 = 0.0;
  v7[0] = 0.0;
  double v4 = 0.0;
  double v5 = 0.0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithCGColor_, v0);
  objc_msgSend(v2, sel_getRed_green_blue_alpha_, v7, &v6, &v5, &v4);

  return v7[0] * v4 * 0.212646 + v4 * v6 * 0.715332 + v4 * v5 * 0.0722046;
}

uint64_t sub_1DA977C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v59 = a2;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63EF8);
  MEMORY[0x1F4188790](v60);
  double v4 = (float *)((char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  uint64_t v52 = (uint64_t)&v47 - v6;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE635F0);
  MEMORY[0x1F4188790](v56);
  uint64_t v58 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE635A8);
  MEMORY[0x1F4188790](v48);
  uint64_t v49 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63610);
  MEMORY[0x1F4188790](v57);
  uint64_t v51 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE636B8);
  uint64_t v10 = *(void *)(v53 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v53);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63E00);
  MEMORY[0x1F4188790](v47);
  uint64_t v50 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v2 + 32);
  char v14 = *(unsigned char *)(v2 + 40);
  sub_1DA97B8E0(v13, v14);
  char v15 = sub_1DA877D20(v13, v14);
  sub_1DA879938(v13, v14);
  if (v15) {
    uint64_t v16 = 16;
  }
  else {
    uint64_t v16 = 8;
  }
  uint64_t v55 = *(void *)(v2 + v16);
  swift_retain();
  sub_1DA97B8E0(v13, v14);
  char v17 = sub_1DA877D20(v13, v14);
  sub_1DA879938(v13, v14);
  if (v17) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = 16;
  }
  uint64_t v19 = *(void *)(v2 + v18);
  swift_retain();
  switch(*(void *)v2)
  {
    case 0:
      uint64_t v20 = *(void *)(v2 + 24);
      uint64_t v21 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v54, v53);
      unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v23 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v23 + v22, (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v25 = v50;
      *(void *)&v50[*(int *)(v47 + 48)] = KeyPath;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
      swift_storeEnumTagMultiPayload();
      *uint64_t v25 = v55;
      v25[1] = v19;
      _OWORD v25[2] = v20;
      void v25[3] = sub_1DA97BB74;
      void v25[4] = v23;
      sub_1DA7A1F58((uint64_t)v25, v49, &qword_1EBE63E00);
      goto LABEL_11;
    case 1:
      uint64_t v28 = *(void *)(v2 + 24);
      uint64_t v29 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v54, v53);
      unint64_t v30 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v31 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v31 + v30, (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v29);
      uint64_t v32 = swift_getKeyPath();
      uint64_t v25 = v50;
      *(void *)&v50[*(int *)(v47 + 48)] = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
      swift_storeEnumTagMultiPayload();
      uint64_t v33 = v55;
      *uint64_t v25 = v19;
      v25[1] = v33;
      _OWORD v25[2] = v28;
      void v25[3] = sub_1DA97BB74;
      void v25[4] = v31;
      sub_1DA7A1F58((uint64_t)v25, v49, &qword_1EBE63E00);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      sub_1DA7A0410(&qword_1EBE63DF8, &qword_1EBE63E00);
      swift_retain();
      swift_retain();
      uint64_t v34 = (uint64_t)v51;
      sub_1DA98AA68();
      sub_1DA7A1F58(v34, v58, &qword_1EBE63610);
      swift_storeEnumTagMultiPayload();
      sub_1DA97BBE0();
      sub_1DA7A0410(&qword_1EBE63EF0, &qword_1EBE63EF8);
      sub_1DA98AA68();
      swift_release();
      swift_release();
      sub_1DA7A1AE0(v34, &qword_1EBE63610);
      uint64_t v35 = (uint64_t)v25;
      float v36 = &qword_1EBE63E00;
      return sub_1DA7A1AE0(v35, v36);
    case 3:
      char v26 = 0;
      uint64_t v27 = (uint64_t *)(v2 + 16);
      break;
    case 4:
      uint64_t v27 = (uint64_t *)(v2 + 8);
      goto LABEL_15;
    case 5:
      uint64_t v27 = (uint64_t *)(v2 + 16);
LABEL_15:
      char v26 = 1;
      break;
    default:
      char v26 = 0;
      uint64_t v27 = (uint64_t *)(v2 + 8);
      break;
  }
  uint64_t v37 = *v27;
  swift_retain();
  float v38 = sub_1DA977B40();
  float v39 = sub_1DA977B40();
  float v40 = *(double *)(v2 + 24);
  uint64_t v41 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v54, v53);
  unint64_t v42 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v43 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v43 + v42, (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v41);
  *(void *)((char *)v4 + *(int *)(v60 + 52)) = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
  swift_storeEnumTagMultiPayload();
  *(void *)double v4 = v37;
  *((unsigned char *)v4 + 8) = v26;
  v4[3] = v40;
  v4[4] = v39;
  v4[5] = v38;
  *((void *)v4 + 3) = sub_1DA97BB74;
  *((void *)v4 + 4) = v43;
  uint64_t v44 = (uint64_t)v4;
  uint64_t v45 = v52;
  sub_1DA97BB78(v44, v52);
  sub_1DA7A1F58(v45, v58, &qword_1EBE63EF8);
  swift_storeEnumTagMultiPayload();
  sub_1DA97BBE0();
  sub_1DA7A0410(&qword_1EBE63EF0, &qword_1EBE63EF8);
  sub_1DA98AA68();
  swift_release();
  swift_release();
  uint64_t v35 = v45;
  float v36 = &qword_1EBE63EF8;
  return sub_1DA7A1AE0(v35, v36);
}

uint64_t sub_1DA97841C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA977C38(a1, a2);
}

uint64_t sub_1DA978458@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA98A0C8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA9784D8(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1DA98A0D8();
}

uint64_t sub_1DA978550()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DA9785C4()
{
  return sub_1DA98A0D8();
}

void (*sub_1DA978634(void *a1))(void *a1)
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DA98A0B8();
  return sub_1DA88A828;
}

uint64_t sub_1DA9786C0()
{
  return swift_endAccess();
}

uint64_t sub_1DA978728(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B88);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633C0);
  sub_1DA98A0A8();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_1DA97889C()
{
  return swift_endAccess();
}

uint64_t sub_1DA978900(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B88);
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633C0);
  sub_1DA98A0A8();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_1DA978A2C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B88);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC9ChronoKit21TintedWidgetViewModel__tintParameters;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633C0);
  sub_1DA98A098();
  swift_endAccess();
  return sub_1DA88B670;
}

uint64_t TintedWidgetViewModel.init(tintParameters:)()
{
  swift_beginAccess();
  sub_1DA86F3F4();
  sub_1DA98A088();
  swift_endAccess();
  return v0;
}

uint64_t type metadata accessor for TintedWidgetView()
{
  return swift_getGenericMetadata();
}

double sub_1DA978BCC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  objc_msgSend(v3, sel_fraction);
  double v1 = v0;

  return v1;
}

uint64_t sub_1DA978C64()
{
  uint64_t v0 = sub_1DA98B188();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  id v4 = v16;
  id v5 = objc_msgSend(v16, sel_primaryTintColor);

  if (!v5) {
    return sub_1DA98B1E8();
  }
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F3EB10], v0);
  objc_msgSend(v5, sel_red);
  double v7 = v6;
  objc_msgSend(v5, sel_green);
  double v9 = v8;
  objc_msgSend(v5, sel_blue);
  double v11 = v10;
  objc_msgSend(v5, sel_alpha);
  uint64_t v13 = MEMORY[0x1E01763B0](v3, v7, v9, v11, v12);

  return v13;
}

uint64_t sub_1DA978E30()
{
  uint64_t v0 = sub_1DA98B188();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  id v4 = v21;
  id v5 = objc_msgSend(v21, sel_secondaryTintColor);

  if (v5)
  {
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F3EB10], v0);
    objc_msgSend(v5, sel_red);
    double v7 = v6;
    objc_msgSend(v5, sel_green);
    double v9 = v8;
    objc_msgSend(v5, sel_blue);
    double v11 = v10;
    objc_msgSend(v5, sel_alpha);
    uint64_t v13 = MEMORY[0x1E01763B0](v3, v7, v9, v11, v12);
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA98A0C8();
    swift_release();
    swift_release();
    id v14 = v21;
    id v15 = objc_msgSend(v21, sel_filterStyle);

    if (v15 == (id)2) {
      goto LABEL_5;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA98A0C8();
    swift_release();
    swift_release();
    id v16 = v21;
    id v17 = objc_msgSend(v21, sel_filterStyle);

    if (v17 != (id)3) {
      return sub_1DA98B1E8();
    }
LABEL_5:
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F3EB10], v0);
    return sub_1DA98B218();
  }
  return v13;
}

id sub_1DA979110()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  id v0 = objc_msgSend(v2, sel_filterStyle);

  return v0;
}

uint64_t TintedWidgetViewModel.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit21TintedWidgetViewModel__tintParameters;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t TintedWidgetViewModel.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9ChronoKit21TintedWidgetViewModel__tintParameters;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE633C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1DA9792AC()
{
  type metadata accessor for TintedWidgetViewModel();
  sub_1DA97BE38();

  return sub_1DA98A318();
}

uint64_t sub_1DA979300@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TintedWidgetViewModel();
  uint64_t result = sub_1DA989FD8();
  *a1 = result;
  return result;
}

uint64_t TintedWidgetView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  sub_1DA98C838();
  sub_1DA98A388();
  uint64_t v4 = *(void *)(a1 + 24);
  sub_1DA98C838();
  sub_1DA98A388();
  sub_1DA98A388();
  swift_getTupleTypeMetadata2();
  sub_1DA98B3F8();
  swift_getWitnessTable();
  uint64_t v5 = sub_1DA98B338();
  uint64_t v21 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v7 = (char *)&v20 - v6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE5A848);
  uint64_t v8 = sub_1DA98A388();
  uint64_t v22 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v24 = v3;
  uint64_t v25 = v4;
  long long v26 = *(_OWORD *)(a1 + 32);
  uint64_t v27 = v20;
  sub_1DA98B3A8();
  sub_1DA98B328();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  swift_release();
  id v14 = v30;
  id v15 = objc_msgSend(v30, sel_accentedDesaturatedMode);

  id v30 = v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DA98B018();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
  uint64_t v17 = sub_1DA7A0410(&qword_1EBE5A840, &qword_1EBE5A848);
  uint64_t v28 = WitnessTable;
  uint64_t v29 = v17;
  swift_getWitnessTable();
  sub_1DA875B4C(v10);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v22 + 8);
  v18(v10, v8);
  sub_1DA875B4C(v13);
  return ((uint64_t (*)(char *, uint64_t))v18)(v13, v8);
}

uint64_t sub_1DA97972C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v54 = a5;
  uint64_t v67 = a6;
  uint64_t v60 = sub_1DA98C838();
  uint64_t v63 = sub_1DA98A388();
  uint64_t v66 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v59 = (char *)&v48 - v11;
  uint64_t v62 = sub_1DA98A388();
  uint64_t v65 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v61 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v64 = (char *)&v48 - v14;
  sub_1DA98C838();
  uint64_t v50 = sub_1DA98A388();
  uint64_t v68 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  id v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v55 = (char *)&v48 - v18;
  id v72 = a2;
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v75 = a5;
  uint64_t v19 = type metadata accessor for TintedWidgetView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  id v20 = v72;
  objc_msgSend(v72, sel_fraction);
  swift_release();

  v71[9] = a4;
  uint64_t v52 = MEMORY[0x1E4F3F170];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DA98B128();
  v71[7] = WitnessTable;
  v71[8] = MEMORY[0x1E4F3CA90];
  uint64_t v53 = MEMORY[0x1E4F3CC28];
  uint64_t v22 = v50;
  uint64_t v56 = swift_getWitnessTable();
  sub_1DA875B4C(v16);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t))(v68 + 8);
  uint64_t v57 = v68 + 8;
  uint64_t v58 = v23;
  uint64_t v24 = v16;
  uint64_t v25 = v22;
  v23(v16, v22);
  uint64_t v51 = a1 + *(int *)(v19 + 56);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  id v26 = v72;
  id v49 = objc_msgSend(v72, sel_filterStyle);
  swift_release();

  swift_retain();
  uint64_t v27 = sub_1DA978C64();
  swift_release();
  swift_retain();
  uint64_t v28 = sub_1DA978E30();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  id v29 = v72;
  objc_msgSend(v72, sel_fraction);
  double v31 = v30;
  swift_release();

  v71[6] = v54;
  uint64_t v32 = v60;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v34 = v59;
  sub_1DA976584((uint64_t)v49, v27, v28, v32, v33, v31);
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DA98A0C8();
  swift_release();
  swift_release();
  id v35 = v72;
  objc_msgSend(v72, sel_fraction);
  swift_release();

  unint64_t v36 = sub_1DA97BD8C();
  v71[4] = v33;
  v71[5] = v36;
  uint64_t v37 = v63;
  uint64_t v38 = swift_getWitnessTable();
  float v39 = v61;
  sub_1DA98B128();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v34, v37);
  v71[2] = v38;
  v71[3] = MEMORY[0x1E4F3CA90];
  uint64_t v40 = v62;
  uint64_t v41 = swift_getWitnessTable();
  unint64_t v42 = v64;
  sub_1DA875B4C(v39);
  uint64_t v43 = v65;
  uint64_t v44 = *(void (**)(char *, uint64_t))(v65 + 8);
  v44(v39, v40);
  uint64_t v45 = v55;
  (*(void (**)(void *, char *, uint64_t))(v68 + 16))(v24, v55, v25);
  id v72 = v24;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v39, v42, v40);
  uint64_t v73 = v39;
  v71[0] = v25;
  v71[1] = v40;
  uint64_t v69 = v56;
  uint64_t v70 = v41;
  sub_1DA97619C((uint64_t)&v72, 2uLL, (uint64_t)v71);
  v44(v42, v40);
  float v46 = v58;
  v58(v45, v25);
  v44(v39, v40);
  return v46(v24, v25);
}

uint64_t sub_1DA979ED4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA97972C(*(void *)(v1 + 48), *(void **)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1DA979EE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA98A7B8();
  *a1 = result;
  return result;
}

uint64_t sub_1DA979F10()
{
  return sub_1DA98A7C8();
}

uint64_t sub_1DA979F38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA979F84()
{
  return type metadata accessor for TintedWidgetViewModel();
}

uint64_t type metadata accessor for TintedWidgetViewModel()
{
  uint64_t result = qword_1EBE63C40;
  if (!qword_1EBE63C40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DA979FD8()
{
  sub_1DA97C760(319, &qword_1EBE633C8, (uint64_t (*)(uint64_t))sub_1DA86F3F4, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for TintedWidgetViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TintedWidgetViewModel);
}

uint64_t dispatch thunk of TintedWidgetViewModel.tintParameters.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.tintParameters.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.tintParameters.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.$tintParameters.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.$tintParameters.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.$tintParameters.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.__allocating_init(tintParameters:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.fraction.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.primaryTintColor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.secondaryTintColor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.filterStyle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_1DA97A22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

uint64_t sub_1DA97A234()
{
  uint64_t result = sub_1DA98C838();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DA98C838();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DA97A310(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v11 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  else {
    uint64_t v11 = *(void *)(*(void *)(v4 - 8) + 64) + 1;
  }
  if ((v10 | v7) > 7
    || ((*(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || v11 + ((v8 + v10 + ((v7 + 16) & ~v7)) & ~v10) > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + (((v10 | v7) & 0xF8 ^ 0x1F8) & ((v10 | v7) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v24 = *(void *)(a3 + 24);
    size_t __n = v11;
    uint64_t v23 = ~v10;
    uint64_t v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    id v16 = (void *)(((unint64_t)a1 + v7 + 16) & ~v7);
    uint64_t v17 = (const void *)(((unint64_t)a2 + v7 + 16) & ~v7);
    uint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
    swift_retain();
    if (v18(v17, 1, v5))
    {
      memcpy(v16, v17, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v16, v17, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
    }
    uint64_t v19 = (void *)(((unint64_t)v16 + v8 + v10) & v23);
    id v20 = (const void *)(((unint64_t)v17 + v8 + v10) & v23);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v20, 1, v24))
    {
      memcpy(v19, v20, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v19, v20, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v19, 0, 1, v24);
    }
  }
  return a1;
}

uint64_t sub_1DA97A5A0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  }
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(v7 - 8);
  unint64_t v8 = *(void *)(v5 + 64) + v6;
  if (!*(_DWORD *)(v5 + 84)) {
    ++v8;
  }
  unint64_t v9 = (v8 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v9, 1, v7);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(unint64_t, uint64_t))(v12 + 8);
    return v11(v9, v7);
  }
  return result;
}

void *sub_1DA97A734(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (void *)(((unint64_t)a1 + v8 + 16) & ~v8);
  uint64_t v10 = (const void *)(((unint64_t)a2 + v8 + 16) & ~v8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_retain();
  if (v11(v10, 1, v6))
  {
    int v12 = *(_DWORD *)(v7 + 84);
    size_t v13 = *(void *)(v7 + 64);
    if (v12) {
      size_t v14 = v13;
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v9, v10, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
    id v16 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v15 = v7 + 56;
    v16(v9, 0, 1, v6);
    int v12 = *(_DWORD *)(v15 + 28);
    size_t v13 = *(void *)(v15 + 8);
  }
  if (v12) {
    size_t v17 = v13;
  }
  else {
    size_t v17 = v13 + 1;
  }
  uint64_t v18 = *(void *)(a3 + 24);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = v17 + v20;
  uint64_t v22 = (void *)(((unint64_t)v9 + v21) & ~v20);
  uint64_t v23 = (const void *)(((unint64_t)v10 + v21) & ~v20);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v23, 1, v18))
  {
    if (*(_DWORD *)(v19 + 84)) {
      size_t v24 = *(void *)(v19 + 64);
    }
    else {
      size_t v24 = *(void *)(v19 + 64) + 1;
    }
    memcpy(v22, v23, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v22, v23, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
  }
  return a1;
}

void *sub_1DA97A950(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (void *)(((unint64_t)a1 + v8 + 16) & ~v8);
  uint64_t v10 = (void *)(((unint64_t)a2 + v8 + 16) & ~v8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(v9, 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(v9, v10, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v9, v10, v16);
LABEL_12:
  uint64_t v17 = *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v17;
  }
  uint64_t v18 = *(void *)(a3 + 24);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = v17 + v20;
  uint64_t v22 = (void *)(((unint64_t)v9 + v21) & ~v20);
  uint64_t v23 = (void *)(((unint64_t)v10 + v21) & ~v20);
  size_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v25 = v24(v22, 1, v18);
  int v26 = v24(v23, 1, v18);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v22, v23, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
      return a1;
    }
    int v27 = *(_DWORD *)(v19 + 84);
    size_t v28 = *(void *)(v19 + 64);
  }
  else
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v22, v23, v18);
      return a1;
    }
    double v30 = *(void (**)(void *, uint64_t))(v19 + 8);
    uint64_t v29 = v19 + 8;
    v30(v22, v18);
    int v27 = *(_DWORD *)(v29 + 76);
    size_t v28 = *(void *)(v29 + 56);
  }
  if (v27) {
    size_t v31 = v28;
  }
  else {
    size_t v31 = v28 + 1;
  }
  memcpy(v22, v23, v31);
  return a1;
}

_OWORD *sub_1DA97AC54(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (void *)(((unint64_t)a1 + v7 + 16) & ~v7);
  unint64_t v9 = (const void *)(((unint64_t)a2 + v7 + 16) & ~v7);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v9, 1, v5))
  {
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
    if (v10) {
      size_t v12 = v11;
    }
    else {
      size_t v12 = v11 + 1;
    }
    memcpy(v8, v9, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v8, v9, v5);
    int v14 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v13 = v6 + 56;
    v14(v8, 0, 1, v5);
    int v10 = *(_DWORD *)(v13 + 28);
    size_t v11 = *(void *)(v13 + 8);
  }
  if (v10) {
    size_t v15 = v11;
  }
  else {
    size_t v15 = v11 + 1;
  }
  uint64_t v16 = *(void *)(a3 + 24);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = v15 + v18;
  uint64_t v20 = (void *)(((unint64_t)v8 + v19) & ~v18);
  uint64_t v21 = (const void *)(((unint64_t)v9 + v19) & ~v18);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v21, 1, v16))
  {
    if (*(_DWORD *)(v17 + 84)) {
      size_t v22 = *(void *)(v17 + 64);
    }
    else {
      size_t v22 = *(void *)(v17 + 64) + 1;
    }
    memcpy(v20, v21, v22);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v20, v21, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  }
  return a1;
}

void *sub_1DA97AE64(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  int v10 = (void *)(((unint64_t)a1 + v9 + 16) & ~v9);
  size_t v11 = (void *)(((unint64_t)a2 + v9 + 16) & ~v9);
  size_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v13 = v12(v10, 1, v7);
  int v14 = v12(v11, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  if (v15) {
    size_t v17 = v16;
  }
  else {
    size_t v17 = v16 + 1;
  }
  memcpy(v10, v11, v17);
LABEL_12:
  uint64_t v18 = *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v18;
  }
  uint64_t v19 = *(void *)(a3 + 24);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = v18 + v21;
  uint64_t v23 = (void *)(((unint64_t)v10 + v22) & ~v21);
  size_t v24 = (void *)(((unint64_t)v11 + v22) & ~v21);
  int v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v26 = v25(v23, 1, v19);
  int v27 = v25(v24, 1, v19);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v23, v24, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
      return a1;
    }
    int v28 = *(_DWORD *)(v20 + 84);
    size_t v29 = *(void *)(v20 + 64);
  }
  else
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v23, v24, v19);
      return a1;
    }
    size_t v31 = *(void (**)(void *, uint64_t))(v20 + 8);
    uint64_t v30 = v20 + 8;
    v31(v23, v19);
    int v28 = *(_DWORD *)(v30 + 76);
    size_t v29 = *(void *)(v30 + 56);
  }
  if (v28) {
    size_t v32 = v29;
  }
  else {
    size_t v32 = v29 + 1;
  }
  memcpy(v23, v24, v32);
  return a1;
}

uint64_t sub_1DA97B158(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  unsigned int v10 = v9 - 1;
  if (!v9) {
    unsigned int v10 = 0;
  }
  if (v6 <= v10) {
    unsigned int v11 = v10;
  }
  else {
    unsigned int v11 = v6;
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v13;
  }
  uint64_t v14 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v9) {
    ++v16;
  }
  if (!a2) {
    return 0;
  }
  int v17 = a2 - v12;
  if (a2 <= v12) {
    goto LABEL_36;
  }
  uint64_t v18 = v16 + ((v13 + v15 + ((v14 + 16) & ~v14)) & ~v15);
  char v19 = 8 * v18;
  if (v18 <= 3)
  {
    unsigned int v21 = ((v17 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v21))
    {
      int v20 = *(_DWORD *)((char *)a1 + v18);
      if (!v20) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v21 > 0xFF)
    {
      int v20 = *(unsigned __int16 *)((char *)a1 + v18);
      if (!*(unsigned __int16 *)((char *)a1 + v18)) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v21 < 2)
    {
LABEL_36:
      if ((v11 & 0x80000000) == 0)
      {
        unint64_t v25 = *((void *)a1 + 1);
        if (v25 >= 0xFFFFFFFF) {
          LODWORD(v25) = -1;
        }
        return (v25 + 1);
      }
      uint64_t v27 = ((unint64_t)a1 + v14 + 16) & ~v14;
      if (v6 == v12)
      {
        if (v5 >= 2)
        {
          unsigned int v28 = (*(uint64_t (**)(uint64_t))(v4 + 48))(v27);
          goto LABEL_46;
        }
      }
      else if (v9 >= 2)
      {
        unsigned int v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))((v27 + v13 + v15) & ~v15, v9, v7);
LABEL_46:
        if (v28 >= 2) {
          return v28 - 1;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v20 = *((unsigned __int8 *)a1 + v18);
  if (!*((unsigned char *)a1 + v18)) {
    goto LABEL_36;
  }
LABEL_26:
  int v22 = (v20 - 1) << v19;
  if (v18 > 3) {
    int v22 = 0;
  }
  if (v18)
  {
    if (v18 <= 3) {
      int v23 = v18;
    }
    else {
      int v23 = 4;
    }
    switch(v23)
    {
      case 2:
        int v24 = *a1;
        break;
      case 3:
        int v24 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v24 = *(_DWORD *)a1;
        break;
      default:
        int v24 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v24 = 0;
  }
  return v12 + (v24 | v22) + 1;
}

void sub_1DA97B3F8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(a4 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = *(unsigned __int8 *)(v11 + 80);
  unsigned int v15 = v12 - 1;
  if (!v12) {
    unsigned int v15 = 0;
  }
  if (v9 <= v15) {
    unsigned int v16 = v15;
  }
  else {
    unsigned int v16 = v9;
  }
  if (v16 <= 0x7FFFFFFF) {
    unsigned int v17 = 0x7FFFFFFF;
  }
  else {
    unsigned int v17 = v16;
  }
  if (v8) {
    uint64_t v18 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  }
  else {
    uint64_t v18 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 1;
  }
  if (v12) {
    uint64_t v19 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v10 - 8) + 64) + 1;
  }
  size_t v20 = v19 + ((v18 + v14 + ((v13 + 16) & ~v13)) & ~v14);
  BOOL v21 = a3 >= v17;
  unsigned int v22 = a3 - v17;
  if (v22 == 0 || !v21)
  {
LABEL_27:
    if (v17 < a2) {
      goto LABEL_28;
    }
    goto LABEL_35;
  }
  if (v20 > 3)
  {
    int v6 = 1;
    if (v17 < a2) {
      goto LABEL_28;
    }
    goto LABEL_35;
  }
  unsigned int v23 = ((v22 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
  if (!HIWORD(v23))
  {
    if (v23 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v23 > 1;
    }
    goto LABEL_27;
  }
  int v6 = 4;
  if (v17 < a2)
  {
LABEL_28:
    unsigned int v24 = ~v17 + a2;
    if (v20 < 4)
    {
      int v25 = (v24 >> (8 * v20)) + 1;
      if (v20)
      {
        int v26 = v24 & ~(-1 << (8 * v20));
        bzero(a1, v20);
        if (v20 == 3)
        {
          *(_WORD *)a1 = v26;
          a1[2] = BYTE2(v26);
        }
        else if (v20 == 2)
        {
          *(_WORD *)a1 = v26;
        }
        else
        {
          *a1 = v26;
        }
      }
    }
    else
    {
      bzero(a1, v20);
      *(_DWORD *)a1 = v24;
      int v25 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v20] = v25;
        return;
      case 2:
        *(_WORD *)&a1[v20] = v25;
        return;
      case 3:
        goto LABEL_62;
      case 4:
        *(_DWORD *)&a1[v20] = v25;
        return;
      default:
        return;
    }
  }
LABEL_35:
  switch(v6)
  {
    case 1:
      a1[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 2:
      *(_WORD *)&a1[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 3:
LABEL_62:
      __break(1u);
      JUMPOUT(0x1DA97B750);
    case 4:
      *(_DWORD *)&a1[v20] = 0;
      goto LABEL_39;
    default:
LABEL_39:
      if (a2)
      {
LABEL_40:
        if ((v16 & 0x80000000) != 0)
        {
          unint64_t v27 = (unint64_t)&a1[v13 + 16] & ~v13;
          if (v9 == v17)
          {
            if (v8 >= 2)
            {
              uint64_t v28 = a2 + 1;
              size_t v29 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
              v29(v27, v28);
            }
          }
          else if (v12 >= 2)
          {
            unint64_t v30 = (v27 + v18 + v14) & ~v14;
            uint64_t v31 = a2 + 1;
            size_t v32 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
            v32(v30, v31, v12, v10);
          }
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t sub_1DA97B778()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DA97B8E0(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for TintedWidgetModifier(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);

  return sub_1DA879938(v2, v3);
}

uint64_t initializeWithCopy for TintedWidgetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  sub_1DA97B8E0(v5, v6);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  return a1;
}

uint64_t assignWithCopy for TintedWidgetModifier(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = v2[2];
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = v2[3];
  uint64_t v4 = v2[4];
  LOBYTE(v2) = *((unsigned char *)v2 + 40);
  sub_1DA97B8E0(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = (_BYTE)v2;
  sub_1DA879938(v5, v6);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TintedWidgetModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v4;
  sub_1DA879938(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TintedWidgetModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TintedWidgetModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TintedWidgetModifier()
{
  return &type metadata for TintedWidgetModifier;
}

uint64_t sub_1DA97BB54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA97BB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63EF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DA97BBE0()
{
  unint64_t result = qword_1EBE63608;
  if (!qword_1EBE63608)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63610);
    sub_1DA7A0410(&qword_1EBE63DF8, &qword_1EBE63E00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63608);
  }
  return result;
}

uint64_t objectdestroyTm_3()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE636B8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1DA97BD14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE636B8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, v3);
}

unint64_t sub_1DA97BD8C()
{
  unint64_t result = qword_1EBE63C28;
  if (!qword_1EBE63C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63C28);
  }
  return result;
}

uint64_t sub_1DA97BDE0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DA98A7D8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA97BE10()
{
  return sub_1DA98A7E8();
}

unint64_t sub_1DA97BE38()
{
  unint64_t result = qword_1EBE63C38;
  if (!qword_1EBE63C38)
  {
    type metadata accessor for TintedWidgetViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63C38);
  }
  return result;
}

void sub_1DA97BE90()
{
  sub_1DA97C760(319, &qword_1EBE63410, MEMORY[0x1E4F3D2F8], MEMORY[0x1E4F3C648]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1DA97BF8C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
    uint64_t v6 = a2[3];
    uint64_t v7 = a2[4];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v8 = *(int *)(a3 + 52);
    unsigned int v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    *(void *)(a1 + 32) = v7;
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_1DA98A888();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      void *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DA97C0CC(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1DA98A888();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1DA97C18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v6 = *(int *)(a3 + 52);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  *(void *)(a1 + 32) = v5;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1DA98A888();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DA97C27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 52);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_1DA7A1AE0(a1 + v7, &qword_1EBE63408);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1DA98A888();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DA97C3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 52);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1DA98A888();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1DA97C49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 12) = *(void *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 52);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_1DA7A1AE0(a1 + v6, &qword_1EBE63408);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1DA98A888();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DA97C5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA97C5D4);
}

uint64_t sub_1DA97C5D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B90);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DA97C688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA97C69C);
}

void *sub_1DA97C69C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B90);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 52);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TintedWidgetDesaturatedView()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1DA97C760(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1DA97C7C4()
{
  sub_1DA97C760(319, &qword_1EBE63410, MEMORY[0x1E4F3D2F8], MEMORY[0x1E4F3C648]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1DA97C8AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v8 = *(int *)(a3 + 48);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_1DA98A888();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      void *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DA97C9EC(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1DA98A888();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1DA97CAB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = v6;
  uint64_t v7 = *(int *)(a3 + 48);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1DA98A888();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DA97CBA4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  uint64_t v6 = a2[4];
  a1[3] = a2[3];
  a1[4] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 48);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_1DA7A1AE0((uint64_t)a1 + v7, &qword_1EBE63408);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1DA98A888();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DA97CCD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 48);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1DA98A888();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1DA97CDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 48);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_1DA7A1AE0(a1 + v6, &qword_1EBE63408);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE63408);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1DA98A888();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DA97CED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DA97CEEC);
}

uint64_t sub_1DA97CEEC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B90);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DA97CFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DA97CFB4);
}

void *sub_1DA97CFB4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E6B90);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 48);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TintedWidgetAccentedView()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1DA97D07C()
{
  unint64_t result = qword_1EBE63690;
  if (!qword_1EBE63690)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE63698);
    sub_1DA97BBE0();
    sub_1DA7A0410(&qword_1EBE63EF0, &qword_1EBE63EF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE63690);
  }
  return result;
}

uint64_t sub_1DA97D11C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA97D160()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA97D1A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA977780(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1DA97D1B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DA97D21C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DA97D3C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  uint64_t v1 = v0 + qword_1EBE6F0C0;
  uint64_t v2 = sub_1DA98B9E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v3 = v0 + qword_1EBE58A18;
  uint64_t v4 = sub_1DA989F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EBE5A2C0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DA97D5D4()
{
  uint64_t v1 = qword_1EBE59358;
  uint64_t v2 = *(void *)(v0 + qword_1EBE59358);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 24);
    uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v4);
    if ((*(unsigned char *)(v2 + 32) & 1) == 0)
    {
      *(unsigned char *)(v2 + 32) = 1;
      objc_msgSend(*(id *)(v2 + 16), sel_invalidate);
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
    swift_release();
  }
  *(void *)(v0 + v1) = 0;
  swift_release();
  uint64_t v5 = sub_1DA97D3C8();
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + qword_1EBE58B88;
  uint64_t v7 = sub_1DA989F38();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  sub_1DA7AD81C(*(void *)(v5 + qword_1EBE6F0C8));
  sub_1DA7AD81C(*(void *)(v5 + qword_1EBE6F230));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v8(v5 + qword_1EBE58C98, v7);
  return v5;
}

uint64_t PlaceholderStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:expirationDuration:)(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  swift_allocObject();
  uint64_t v19 = sub_1DA97DF74(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  (*(void (**)(void, uint64_t))(*(void *)(a10 - 8) + 8))(a2, a10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a8 - 8) + 8))(a1, a8);
  return v19;
}

uint64_t PlaceholderStatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:expirationDuration:)(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15 = sub_1DA97DF74(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  (*(void (**)(void, uint64_t))(*(void *)(a10 - 8) + 8))(a2, a10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a8 - 8) + 8))(a1, a8);
  return v15;
}

uint64_t PlaceholderStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  swift_allocObject();
  uint64_t v17 = sub_1DA97DD50(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  (*(void (**)(void, uint64_t))(*(void *)(a9 - 8) + 8))(a2, a9);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a8 - 8) + 8))(a1, a8);
  return v17;
}

uint64_t PlaceholderStatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14 = sub_1DA97DD50(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  (*(void (**)(void, uint64_t))(*(void *)(a9 - 8) + 8))(a2, a9);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a8 - 8) + 8))(a1, a8);
  return v14;
}

void PlaceholderStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:)()
{
}

uint64_t sub_1DA97DB54(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 168) == 1)
  {
    uint64_t v5 = *(void *)(v2 + qword_1EBE59758);
    uint64_t v8 = a1;
    char v6 = (*(uint64_t (**)(uint64_t *, uint64_t))(**(void **)(v5 + 16) + 152))(&v8, a2);
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1DA97DBF4()
{
  return swift_release();
}

uint64_t PlaceholderStatefulStore.deinit()
{
  uint64_t v0 = sub_1DA97D5D4();
  swift_release();
  return v0;
}

uint64_t PlaceholderStatefulStore.__deallocating_deinit()
{
  sub_1DA97D5D4();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DA97DCB0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 168) == 1)
  {
    uint64_t v5 = *(void *)(v2 + qword_1EBE59758);
    uint64_t v8 = v4;
    char v6 = (*(uint64_t (**)(uint64_t *, uint64_t))(**(void **)(v5 + 16) + 152))(&v8, a2);
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1DA97DD50(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v27 = a4;
  uint64_t v33 = a8;
  int v31 = a6;
  int v32 = a7;
  uint64_t v29 = a1;
  uint64_t v30 = a3;
  uint64_t v28 = a10;
  uint64_t v13 = sub_1DA989F38();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unsigned int v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a9 - 8);
  MEMORY[0x1F4188790](v18);
  size_t v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59FB8);
  (*(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v17 + 16))(v20, a2, a9);
  uint64_t v21 = sub_1DA8EE93C((uint64_t)v20);
  uint64_t v22 = v27;
  *(void *)(v26 + qword_1EBE59758) = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v22, v13);
  sub_1DA7A1A44(a5, (uint64_t)v34);
  *(void *)&long long v25 = a9;
  *((void *)&v25 + 1) = v28;
  uint64_t v23 = sub_1DA82D304(v29, a2, v30, (uint64_t)v16, (uint64_t)v34, v31, v32, v33, 5.0, v25, a11);
  __swift_destroy_boxed_opaque_existential_1(a5);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v22, v13);
  return v23;
}

uint64_t sub_1DA97DF74(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = v12;
  uint64_t v36 = a8;
  int v34 = a6;
  int v35 = a7;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v32 = a1;
  uint64_t v33 = a3;
  uint64_t v31 = a11;
  uint64_t v16 = sub_1DA989F38();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a10 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE59FB8);
  (*(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v20 + 16))(v23, a2, a10);
  *(void *)(v13 + qword_1EBE59758) = sub_1DA8EE93C((uint64_t)v23);
  uint64_t v24 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v29, v16);
  uint64_t v25 = v30;
  sub_1DA7A1A44(v30, (uint64_t)v37);
  *(void *)&long long v28 = a10;
  *((void *)&v28 + 1) = v31;
  uint64_t v26 = sub_1DA82D304(v32, a2, v33, (uint64_t)v19, (uint64_t)v37, v34, v35, v36, a9, v28, a12);
  __swift_destroy_boxed_opaque_existential_1(v25);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v24, v16);
  return v26;
}

uint64_t type metadata accessor for PlaceholderStatefulStore()
{
  uint64_t result = qword_1EBE58D20;
  if (!qword_1EBE58D20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DA97E1F8()
{
  return swift_initClassMetadata2();
}

uint64_t ControlsCacheManager.__allocating_init(subdirectory:cacheKeyProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, char a6)
{
  uint64_t v12 = type metadata accessor for ControlsCacheURLProvider();
  uint64_t v13 = (void *)swift_allocObject();
  id v13[2] = a1;
  void v13[3] = a2;
  _DWORD v13[4] = 0x632D6F6E6F726863;
  v13[5] = 0xEF736C6F72746E6FLL;
  sub_1DA7A1A44(a3, (uint64_t)v19);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1(a3);
  uint64_t v17 = v12;
  uint64_t v18 = &protocol witness table for ControlsCacheURLProvider;
  *(void *)&long long v16 = v13;
  type metadata accessor for ControlsCacheManager(0);
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 160) = a6 ^ 1;
  *(void *)(v14 + 24) = a1;
  *(void *)(v14 + 32) = a2;
  sub_1DA7A19A4(v19, v14 + 40);
  sub_1DA7A19A4(&v16, v14 + 80);
  sub_1DA7A19A4(a4, v14 + 120);
  *(void *)(v14 + 16) = a5;
  return v14;
}

uint64_t sub_1DA97E354(void *a1)
{
  uint64_t v31 = type metadata accessor for ControlCacheKey();
  MEMORY[0x1F4188790](v31);
  uint64_t v32 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE66AB0);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DA989478();
  uint64_t v36 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v29 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v1;
  sub_1DA7A1A44(v1 + 40, (uint64_t)v33);
  uint64_t v10 = v34;
  uint64_t v9 = v35;
  __swift_project_boxed_opaque_existential_0(v33, v34);
  uint64_t v12 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v13 = __swift_project_boxed_opaque_existential_0(a1, v12);
  uint64_t v15 = v11 + 40;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 40);
  v26[1] = v13;
  uint64_t v27 = v14;
  uint64_t v28 = v11;
  long long v16 = (void *)v14(v12, v11);
  uint64_t v17 = v10;
  uint64_t v18 = v7;
  uint64_t v19 = v36;
  (*(void (**)(void *, uint64_t, uint64_t))(v9 + 48))(v16, v17, v9);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18) == 1)
  {
    sub_1DA7A1AE0((uint64_t)v6, (uint64_t *)&unk_1EBE66AB0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    type metadata accessor for ControlsCacheManager.CacheManagementError(0);
    sub_1DA97F290(&qword_1EA8E6BA0, (void (*)(uint64_t))type metadata accessor for ControlsCacheManager.CacheManagementError);
    swift_allocError();
    *uint64_t v20 = v27(v12, v28);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    uint64_t v21 = v29;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v29, v6, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    sub_1DA7A1A44(v30 + 80, (uint64_t)v33);
    uint64_t v22 = v34;
    uint64_t v23 = v35;
    __swift_project_boxed_opaque_existential_0(v33, v34);
    uint64_t v24 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v32, v21, v18);
    *(void *)(v24 + *(int *)(v31 + 20)) = 0;
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v22, v23);
    sub_1DA97FBC0(v24, (uint64_t (*)(void))type metadata accessor for ControlCacheKey);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  return v15;
}