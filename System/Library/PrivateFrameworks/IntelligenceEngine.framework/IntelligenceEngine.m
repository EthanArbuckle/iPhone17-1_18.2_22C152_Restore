uint64_t _GLOBAL__sub_I_validator_cpp()
{
  void (*v0)(void *);
  uint64_t vars8;

  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::sIntentRenameChange, "1.4.5");
  v0 = (void (*)(void *))MEMORY[0x263F8C0B8];

  return __cxa_atexit(v0, siri::intelligence::sIntentRenameChange, &dword_239A02000);
}

uint64_t _GLOBAL__sub_I_dialogtypes_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::ARRAY_SUFFIX, "[]");
  v0 = (void (*)(void *))MEMORY[0x263F8C0B8];

  return __cxa_atexit(v0, siri::intelligence::ARRAY_SUFFIX, &dword_239A02000);
}

uint64_t _GLOBAL__sub_I_behaviorhandler_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::IE_GLOBAL_SCOPE, "__global__");
  v0 = (void (*)(void *))MEMORY[0x263F8C0B8];

  return __cxa_atexit(v0, siri::intelligence::IE_GLOBAL_SCOPE, &dword_239A02000);
}

uint64_t _GLOBAL__sub_I_nlgenerator_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(FALLBACK_EVENT_ID, "fallback");
  v0 = (void (*)(void *))MEMORY[0x263F8C0B8];

  return __cxa_atexit(v0, FALLBACK_EVENT_ID, &dword_239A02000);
}

uint64_t _GLOBAL__sub_I_configuration_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::Configuration::TEMPLATES_DIR, "Templates");
  v0 = (void (*)(void *))MEMORY[0x263F8C0B8];

  return __cxa_atexit(v0, siri::intelligence::Configuration::TEMPLATES_DIR, &dword_239A02000);
}

uint64_t _GLOBAL__sub_I_flowgraph_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::IE_GLOBAL_SCOPE, "__global__");
  v0 = (void (*)(void *))MEMORY[0x263F8C0B8];

  return __cxa_atexit(v0, &siri::intelligence::IE_GLOBAL_SCOPE, &dword_239A02000);
}

uint64_t _GLOBAL__sub_I_executionstate_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::IE_GLOBAL_SCOPE, "__global__");
  v0 = (void (*)(void *))MEMORY[0x263F8C0B8];

  return __cxa_atexit(v0, siri::intelligence::IE_GLOBAL_SCOPE, &dword_239A02000);
}

uint64_t _GLOBAL__sub_I_status_cc()
{
  google::protobuf::util::Status::OK = 0;
  qword_26AD85388 = 0;
  unk_26AD85390 = 0;
  qword_26AD85380 = 0;
  __cxa_atexit((void (*)(void *))google::protobuf::util::Status::~Status, &google::protobuf::util::Status::OK, &dword_239A02000);
  google::protobuf::util::Status::Status((uint64_t)&google::protobuf::util::Status::CANCELLED, 1, "", 0);
  __cxa_atexit((void (*)(void *))google::protobuf::util::Status::~Status, &google::protobuf::util::Status::CANCELLED, &dword_239A02000);
  google::protobuf::util::Status::Status((uint64_t)&google::protobuf::util::Status::UNKNOWN, 2, "", 0);

  return __cxa_atexit((void (*)(void *))google::protobuf::util::Status::~Status, &google::protobuf::util::Status::UNKNOWN, &dword_239A02000);
}

uint64_t google::protobuf::util::Status::Status(uint64_t a1, int a2, void *__src, size_t __len)
{
  *(_DWORD *)a1 = a2;
  *(void *)(a1 + 8) = 0;
  uint64_t v5 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  if (a2)
  {
    if (__src)
    {
      std::string::basic_string[abi:ne180100](&__dst, __src, __len);
      if (*(char *)(a1 + 31) < 0) {
        operator delete(*(void **)v5);
      }
    }
    else
    {
      long long __dst = 0uLL;
      uint64_t v8 = 0;
    }
    *(_OWORD *)uint64_t v5 = __dst;
    *(void *)(v5 + 16) = v8;
  }
  return a1;
}

void sub_239A04330(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void *std::string::basic_string[abi:ne180100](void *__dst, void *__src, size_t __len)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    *long long __dst = v6;
  }
  else
  {
    *((unsigned char *)__dst + 23) = __len;
    v6 = __dst;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __dst;
}

uint64_t _GLOBAL__sub_I_memoryclass_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::Memory::BOOLEAN_SET, "true");
  v0 = (void (*)(void *))MEMORY[0x263F8C0B8];
  __cxa_atexit(MEMORY[0x263F8C0B8], &siri::intelligence::Memory::BOOLEAN_SET, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::Memory::BOOLEAN_UNSET, "false");
  __cxa_atexit(v0, &siri::intelligence::Memory::BOOLEAN_UNSET, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::Memory::NUMBER_ZERO, "0");
  __cxa_atexit(v0, &siri::intelligence::Memory::NUMBER_ZERO, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::Memory::STRING_UNSET, (char *)&str_6_1);

  return __cxa_atexit(v0, siri::intelligence::Memory::STRING_UNSET, &dword_239A02000);
}

uint64_t _GLOBAL__sub_I_intelligence_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(&qword_26AD86EC8, "__global__");
  v0 = (void (*)(void *))MEMORY[0x263F8C0B8];
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26AD86EC8, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&qword_26AD86EE0, "default");
  __cxa_atexit(v0, &qword_26AD86EE0, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::IE_GLOBAL_CURRENT_ACTIVITY, "global.currentActivity");
  __cxa_atexit(v0, siri::intelligence::IE_GLOBAL_CURRENT_ACTIVITY, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::IE_GLOBAL_PREVIOUS_ACTIVITY, "global.previousActivity");
  __cxa_atexit(v0, siri::intelligence::IE_GLOBAL_PREVIOUS_ACTIVITY, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::IE_GLOBAL_ACTIVE_INTENTS, "global.activeIntents");
  __cxa_atexit(v0, siri::intelligence::IE_GLOBAL_ACTIVE_INTENTS, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::IE_GLOBAL_ACTIVE_LOCAL_INTENTS, "global.activeLocalIntents");
  __cxa_atexit(v0, siri::intelligence::IE_GLOBAL_ACTIVE_LOCAL_INTENTS, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::IE_RECOVER_FROM_DEAD_END, "recoverFromDeadEnd");

  return __cxa_atexit(v0, &siri::intelligence::IE_RECOVER_FROM_DEAD_END, &dword_239A02000);
}

uint64_t _GLOBAL__sub_I_singledocparser_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(YAML::TokenNames, "DIRECTIVE");
  std::string::basic_string[abi:ne180100]<0>(&YAML::TokenNames[24], "DOC_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85CC0, "DOC_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85CD8, "BLOCK_SEQ_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85CF0, "BLOCK_MAP_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85D08, "BLOCK_SEQ_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85D20, "BLOCK_MAP_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85D38, "BLOCK_ENTRY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85D50, "FLOW_SEQ_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85D68, "FLOW_MAP_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85D80, "FLOW_SEQ_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85D98, "FLOW_MAP_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85DB0, "FLOW_MAP_COMPACT");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85DC8, "FLOW_ENTRY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85DE0, "KEY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85DF8, "VALUE");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85E10, "ANCHOR");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85E28, "ALIAS");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85E40, "TAG");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85E58, "SCALAR");

  return __cxa_atexit((void (*)(void *))__cxx_global_array_dtor_1, 0, &dword_239A02000);
}

void sub_239A04868(_Unwind_Exception *exception_object)
{
  while (1)
  {
    if (*(char *)(v2 - 1) < 0) {
      operator delete(*(void **)(v2 - 24));
    }
    v2 -= 24;
    if (v2 == v1) {
      _Unwind_Resume(exception_object);
    }
  }
}

uint64_t _GLOBAL__sub_I_scanner_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(YAML::TokenNames, "DIRECTIVE");
  std::string::basic_string[abi:ne180100]<0>(&YAML::TokenNames[24], "DOC_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85EA0, "DOC_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85EB8, "BLOCK_SEQ_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85ED0, "BLOCK_MAP_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85EE8, "BLOCK_SEQ_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85F00, "BLOCK_MAP_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85F18, "BLOCK_ENTRY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85F30, "FLOW_SEQ_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85F48, "FLOW_MAP_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85F60, "FLOW_SEQ_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85F78, "FLOW_MAP_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85F90, "FLOW_MAP_COMPACT");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85FA8, "FLOW_ENTRY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85FC0, "KEY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85FD8, "VALUE");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85FF0, "ANCHOR");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86008, "ALIAS");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86020, "TAG");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86038, "SCALAR");

  return __cxa_atexit((void (*)(void *))__cxx_global_array_dtor_2, 0, &dword_239A02000);
}

void sub_239A04ABC(_Unwind_Exception *exception_object)
{
  while (1)
  {
    if (*(char *)(v2 - 1) < 0) {
      operator delete(*(void **)(v2 - 24));
    }
    v2 -= 24;
    if (v2 == v1) {
      _Unwind_Resume(exception_object);
    }
  }
}

uint64_t _GLOBAL__sub_I_tag_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(YAML::TokenNames, "DIRECTIVE");
  std::string::basic_string[abi:ne180100]<0>(&YAML::TokenNames[24], "DOC_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86260, "DOC_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86278, "BLOCK_SEQ_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86290, "BLOCK_MAP_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD862A8, "BLOCK_SEQ_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD862C0, "BLOCK_MAP_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD862D8, "BLOCK_ENTRY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD862F0, "FLOW_SEQ_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86308, "FLOW_MAP_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86320, "FLOW_SEQ_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86338, "FLOW_MAP_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86350, "FLOW_MAP_COMPACT");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86368, "FLOW_ENTRY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86380, "KEY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86398, "VALUE");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD863B0, "ANCHOR");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD863C8, "ALIAS");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD863E0, "TAG");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD863F8, "SCALAR");

  return __cxa_atexit((void (*)(void *))__cxx_global_array_dtor_5, 0, &dword_239A02000);
}

void sub_239A04D10(_Unwind_Exception *exception_object)
{
  while (1)
  {
    if (*(char *)(v2 - 1) < 0) {
      operator delete(*(void **)(v2 - 24));
    }
    v2 -= 24;
    if (v2 == v1) {
      _Unwind_Resume(exception_object);
    }
  }
}

uint64_t _GLOBAL__sub_I_parser_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(YAML::TokenNames, "DIRECTIVE");
  std::string::basic_string[abi:ne180100]<0>(&YAML::TokenNames[24], "DOC_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86080, "DOC_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86098, "BLOCK_SEQ_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD860B0, "BLOCK_MAP_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD860C8, "BLOCK_SEQ_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD860E0, "BLOCK_MAP_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD860F8, "BLOCK_ENTRY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86110, "FLOW_SEQ_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86128, "FLOW_MAP_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86140, "FLOW_SEQ_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86158, "FLOW_MAP_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86170, "FLOW_MAP_COMPACT");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86188, "FLOW_ENTRY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD861A0, "KEY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD861B8, "VALUE");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD861D0, "ANCHOR");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD861E8, "ALIAS");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86200, "TAG");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD86218, "SCALAR");

  return __cxa_atexit((void (*)(void *))__cxx_global_array_dtor_4, 0, &dword_239A02000);
}

void sub_239A04F64(_Unwind_Exception *exception_object)
{
  while (1)
  {
    if (*(char *)(v2 - 1) < 0) {
      operator delete(*(void **)(v2 - 24));
    }
    v2 -= 24;
    if (v2 == v1) {
      _Unwind_Resume(exception_object);
    }
  }
}

uint64_t _GLOBAL__sub_I_simplekey_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(YAML::TokenNames, "DIRECTIVE");
  std::string::basic_string[abi:ne180100]<0>(&YAML::TokenNames[24], "DOC_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85900, "DOC_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85918, "BLOCK_SEQ_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85930, "BLOCK_MAP_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85948, "BLOCK_SEQ_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85960, "BLOCK_MAP_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85978, "BLOCK_ENTRY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85990, "FLOW_SEQ_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD859A8, "FLOW_MAP_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD859C0, "FLOW_SEQ_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD859D8, "FLOW_MAP_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD859F0, "FLOW_MAP_COMPACT");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85A08, "FLOW_ENTRY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85A20, "KEY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85A38, "VALUE");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85A50, "ANCHOR");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85A68, "ALIAS");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85A80, "TAG");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85A98, "SCALAR");

  return __cxa_atexit((void (*)(void *))__cxx_global_array_dtor, 0, &dword_239A02000);
}

void sub_239A051B8(_Unwind_Exception *exception_object)
{
  while (1)
  {
    if (*(char *)(v2 - 1) < 0) {
      operator delete(*(void **)(v2 - 24));
    }
    v2 -= 24;
    if (v2 == v1) {
      _Unwind_Resume(exception_object);
    }
  }
}

uint64_t _GLOBAL__sub_I_scantoken_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(YAML::TokenNames, "DIRECTIVE");
  std::string::basic_string[abi:ne180100]<0>(&YAML::TokenNames[24], "DOC_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85AE0, "DOC_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85AF8, "BLOCK_SEQ_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85B10, "BLOCK_MAP_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85B28, "BLOCK_SEQ_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85B40, "BLOCK_MAP_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85B58, "BLOCK_ENTRY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85B70, "FLOW_SEQ_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85B88, "FLOW_MAP_START");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85BA0, "FLOW_SEQ_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85BB8, "FLOW_MAP_END");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85BD0, "FLOW_MAP_COMPACT");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85BE8, "FLOW_ENTRY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85C00, "KEY");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85C18, "VALUE");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85C30, "ANCHOR");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85C48, "ALIAS");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85C60, "TAG");
  std::string::basic_string[abi:ne180100]<0>(qword_26AD85C78, "SCALAR");

  return __cxa_atexit((void (*)(void *))__cxx_global_array_dtor_0, 0, &dword_239A02000);
}

void sub_239A0540C(_Unwind_Exception *exception_object)
{
  while (1)
  {
    if (*(char *)(v2 - 1) < 0) {
      operator delete(*(void **)(v2 - 24));
    }
    v2 -= 24;
    if (v2 == v1) {
      _Unwind_Resume(exception_object);
    }
  }
}

uint64_t _GLOBAL__sub_I_validationresult_cpp()
{
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_NO_VERSION, "no-version");
  v0 = (void (*)(void *))MEMORY[0x263F8C0B8];
  __cxa_atexit(MEMORY[0x263F8C0B8], &siri::intelligence::CODE_NO_VERSION, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_NO_META_NAME, "no-meta-name");
  __cxa_atexit(v0, &siri::intelligence::CODE_NO_META_NAME, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_NO_VAR_NAME, "no-var-name");
  __cxa_atexit(v0, &siri::intelligence::CODE_NO_VAR_NAME, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_NO_VAR_TYPE, "no-var-type");
  __cxa_atexit(v0, &siri::intelligence::CODE_NO_VAR_TYPE, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_NO_PARAM, "no-param");
  __cxa_atexit(v0, &siri::intelligence::CODE_NO_PARAM, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::CODE_NO_CATI_NAME, "no-cati-name");
  __cxa_atexit(v0, siri::intelligence::CODE_NO_CATI_NAME, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::CODE_NO_CATI_GUID, "no-cati-guid");
  __cxa_atexit(v0, siri::intelligence::CODE_NO_CATI_GUID, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::CODE_DUPE_PRODUCER, "dupe-producer");
  __cxa_atexit(v0, siri::intelligence::CODE_DUPE_PRODUCER, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_FUTURE_VERSION, "future-version");
  __cxa_atexit(v0, &siri::intelligence::CODE_FUTURE_VERSION, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_UNDEF_VAR, "undef-var");
  __cxa_atexit(v0, &siri::intelligence::CODE_UNDEF_VAR, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_UNDEF_RESPONSE, "undef-response");
  __cxa_atexit(v0, &siri::intelligence::CODE_UNDEF_RESPONSE, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_UNDEF_INPUT, "undef-input");
  __cxa_atexit(v0, &siri::intelligence::CODE_UNDEF_INPUT, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_UNDEF_CONDITION, "undef-condition");
  __cxa_atexit(v0, &siri::intelligence::CODE_UNDEF_CONDITION, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_UNDEF_INTENT, "undef-intent");
  __cxa_atexit(v0, &siri::intelligence::CODE_UNDEF_INTENT, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_UNDEF_FUNC, "undef-func");
  __cxa_atexit(v0, &siri::intelligence::CODE_UNDEF_FUNC, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_UNDEF_PARAM, "undef-param");
  __cxa_atexit(v0, &siri::intelligence::CODE_UNDEF_PARAM, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_INVALID_NAME, "invalid-name");
  __cxa_atexit(v0, &siri::intelligence::CODE_INVALID_NAME, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_INVALID_ID, "invalid-id");
  __cxa_atexit(v0, &siri::intelligence::CODE_INVALID_ID, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::CODE_INVALID_CAT_ID, "invalid-cat-id");
  __cxa_atexit(v0, siri::intelligence::CODE_INVALID_CAT_ID, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::CODE_INVALID_PATTERN_ID, "invalid-pattern-id");
  __cxa_atexit(v0, siri::intelligence::CODE_INVALID_PATTERN_ID, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_NO_ID, "no-id");
  __cxa_atexit(v0, &siri::intelligence::CODE_NO_ID, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_NO_CAT_ID, "no-cat-id");
  __cxa_atexit(v0, &siri::intelligence::CODE_NO_CAT_ID, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_NO_PATTERN_ID, "no-pattern-id");
  __cxa_atexit(v0, &siri::intelligence::CODE_NO_PATTERN_ID, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_NO_RESPONSE_ID, "no-response-id");
  __cxa_atexit(v0, &siri::intelligence::CODE_NO_RESPONSE_ID, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_NO_OPERATOR, "no-operator");
  __cxa_atexit(v0, &siri::intelligence::CODE_NO_OPERATOR, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_NO_EFFECT, "no-effect");
  __cxa_atexit(v0, &siri::intelligence::CODE_NO_EFFECT, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_INVALID_OPERATOR, "invalid-operator");
  __cxa_atexit(v0, &siri::intelligence::CODE_INVALID_OPERATOR, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_EMPTY_EXPR, "empty-expr");
  __cxa_atexit(v0, &siri::intelligence::CODE_EMPTY_EXPR, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_INVALID_TYPE, "invalid-type");
  __cxa_atexit(v0, &siri::intelligence::CODE_INVALID_TYPE, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_TYPE_MISMATCH, "type-mismatch");
  __cxa_atexit(v0, &siri::intelligence::CODE_TYPE_MISMATCH, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_MULTI_DEFS, "multi-defs");
  __cxa_atexit(v0, &siri::intelligence::CODE_MULTI_DEFS, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_FILE_NOT_FOUND, "file-not-found");
  __cxa_atexit(v0, &siri::intelligence::CODE_FILE_NOT_FOUND, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_YAML_PARSE, "yaml-parse");
  __cxa_atexit(v0, &siri::intelligence::CODE_YAML_PARSE, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_DUPE_ID, "dupe-id");
  __cxa_atexit(v0, &siri::intelligence::CODE_DUPE_ID, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_READ_ONLY, "read-only");
  __cxa_atexit(v0, &siri::intelligence::CODE_READ_ONLY, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_DEPRECATED, "deprecated");
  __cxa_atexit(v0, &siri::intelligence::CODE_DEPRECATED, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_INFINITE_LOOP, "infinite-loop");
  __cxa_atexit(v0, &siri::intelligence::CODE_INFINITE_LOOP, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(&siri::intelligence::CODE_UNUSED, "unused");
  __cxa_atexit(v0, &siri::intelligence::CODE_UNUSED, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::CODE_UTTER_DUPE, "utter-dupe");
  __cxa_atexit(v0, siri::intelligence::CODE_UTTER_DUPE, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::CODE_UTTER_NUM, "utter-num");
  __cxa_atexit(v0, siri::intelligence::CODE_UTTER_NUM, &dword_239A02000);
  std::string::basic_string[abi:ne180100]<0>(siri::intelligence::CODE_UTTER_EMPTY, "utter-empty");

  return __cxa_atexit(v0, siri::intelligence::CODE_UTTER_EMPTY, &dword_239A02000);
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void google::protobuf::internal::VerifyVersion(google::protobuf::internal *this, google::protobuf::internal *a2, const std::string::value_type *a3, const char *a4)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  if ((int)a2 > 3010000)
  {
    LODWORD(v21) = 3;
    v22 = "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/stubs/common.cc";
    int v23 = 75;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program requires version ");
    google::protobuf::internal::VersionString(a2, &v18);
    if ((v20 & 0x80u) == 0) {
      uint64_t v7 = (const std::string::value_type *)&v18;
    }
    else {
      uint64_t v7 = (const std::string::value_type *)v18;
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v8 = v20;
    }
    else {
      std::string::size_type v8 = v19;
    }
    std::string::append(&v24, v7, v8);
    std::string::append(&v24, " of the Protocol Buffer runtime library, but the installed version is ");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 3, 10, 0);
    char v26 = 0;
    std::string::basic_string[abi:ne180100]<0>(&__p, __str);
    if ((v17 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v17 & 0x80u) == 0) {
      std::string::size_type v10 = v17;
    }
    else {
      std::string::size_type v10 = v16;
    }
    std::string::append(&v24, p_p, v10);
    std::string::append(&v24, ".  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish(&v21);
    if ((char)v17 < 0) {
      operator delete(__p);
    }
    if ((char)v20 < 0) {
      operator delete(v18);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
  }
  if ((int)this < 3010000)
  {
    LODWORD(v21) = 3;
    v22 = "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/stubs/common.cc";
    int v23 = 86;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program was compiled against version ");
    google::protobuf::internal::VersionString(this, &v18);
    if ((v20 & 0x80u) == 0) {
      v11 = (const std::string::value_type *)&v18;
    }
    else {
      v11 = (const std::string::value_type *)v18;
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v12 = v20;
    }
    else {
      std::string::size_type v12 = v19;
    }
    std::string::append(&v24, v11, v12);
    std::string::append(&v24, " of the Protocol Buffer runtime library, which is not compatible with the installed version (");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 3, 10, 0);
    char v26 = 0;
    std::string::basic_string[abi:ne180100]<0>(&__p, __str);
    if ((v17 & 0x80u) == 0) {
      v13 = (const std::string::value_type *)&__p;
    }
    else {
      v13 = (const std::string::value_type *)__p;
    }
    if ((v17 & 0x80u) == 0) {
      std::string::size_type v14 = v17;
    }
    else {
      std::string::size_type v14 = v16;
    }
    std::string::append(&v24, v13, v14);
    std::string::append(&v24, ").  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish(&v21);
    if ((char)v17 < 0) {
      operator delete(__p);
    }
    if ((char)v20 < 0) {
      operator delete(v18);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239A05E94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::LogMessage::LogMessage(uint64_t result, int a2, uint64_t a3, int a4)
{
  *(_DWORD *)result = a2;
  *(void *)(result + 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, const std::string::value_type *a2)
{
  return a1;
}

{
  std::string *v3;
  std::string::size_type v4;
  std::string::size_type v5;

  v3 = a1 + 1;
  size_t v4 = *((void *)a2 + 1);
  if (a2[23] >= 0)
  {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const std::string::value_type **)a2;
    size_t v5 = v4;
  }
  std::string::append(v3, a2, v5);
  return a1;
}

void *google::protobuf::internal::VersionString@<X0>(google::protobuf::internal *this@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  snprintf(__str, 0x80uLL, "%d.%d.%d", (int)this / 1000000, (int)this / 1000 % 1000, (int)this % 1000);
  char __str[127] = 0;
  return std::string::basic_string[abi:ne180100]<0>(a2, __str);
}

const char **google::protobuf::internal::LogFinisher::operator=(int a1, const char **this)
{
  return google::protobuf::internal::LogMessage::Finish(this);
}

void google::protobuf::internal::LogMessage::~LogMessage(void **this)
{
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

uint64_t google::protobuf::internal::DefaultLogHandler(uint64_t result, const char *a2, int a3, uint64_t a4)
{
  if ((result & 0x80000000) == 0)
  {
    size_t v4 = (FILE **)MEMORY[0x263EF8348];
    if (*(char *)(a4 + 23) >= 0) {
      uint64_t v5 = (const char *)a4;
    }
    else {
      uint64_t v5 = *(const char **)a4;
    }
    fprintf((FILE *)*MEMORY[0x263EF8348], "[libprotobuf %s %s:%d] %s\n", google::protobuf::internal::DefaultLogHandler(google::protobuf::LogLevel,char const*,int,std::string const&)::level_names[result], a2, a3, v5);
    v6 = *v4;
    return fflush(v6);
  }
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, int a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  snprintf(__str, 0x80uLL, "%d", a2);
  char __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  snprintf(__str, 0x80uLL, "%lu", a2);
  char __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

const char **google::protobuf::internal::LogMessage::Finish(const char **this)
{
  uint64_t v1 = this;
  if (*(_DWORD *)this == 3)
  {
    uint64_t v2 = 3;
  }
  else
  {
    int v3 = atomic_load((unsigned int *)&google::protobuf::internal::log_silencer_count_);
    if (v3 > 0) {
      goto LABEL_6;
    }
    uint64_t v2 = *(unsigned int *)this;
  }
  this = (const char **)google::protobuf::internal::log_handler_(v2, v1[1], *((_DWORD *)v1 + 4), (uint64_t)(v1 + 3));
LABEL_6:
  if (*(_DWORD *)v1 == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    google::protobuf::FatalException::FatalException(exception, v1[1], *((unsigned int *)v1 + 4), v1 + 3);
  }
  return this;
}

void sub_239A062C0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::OnShutdownRun(google::protobuf::internal *this, void (*a2)(const void *), const void *a3)
{
  uint64_t v5 = google::protobuf::internal::ShutdownData::get(this);
  std::mutex::lock((std::mutex *)(v5 + 24));
  v6 = *(void **)(v5 + 8);
  unint64_t v7 = *(void *)(v5 + 16);
  if ((unint64_t)v6 >= v7)
  {
    uint64_t v9 = ((uint64_t)v6 - *(void *)v5) >> 4;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 60) {
      std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v7 - *(void *)v5;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12) {
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<void (*)(void const*),void const*>>>(v5 + 16, v12);
    }
    else {
      v13 = 0;
    }
    std::string::size_type v14 = &v13[16 * v9];
    v15 = &v13[16 * v12];
    *(void *)std::string::size_type v14 = this;
    *((void *)v14 + 1) = a2;
    std::string::size_type v8 = v14 + 16;
    unsigned __int8 v17 = *(char **)v5;
    std::string::size_type v16 = *(char **)(v5 + 8);
    if (v16 != *(char **)v5)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v16 - 1);
        v14 -= 16;
        v16 -= 16;
      }
      while (v16 != v17);
      std::string::size_type v16 = *(char **)v5;
    }
    *(void *)uint64_t v5 = v14;
    *(void *)(v5 + 8) = v8;
    *(void *)(v5 + 16) = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    void *v6 = this;
    v6[1] = a2;
    std::string::size_type v8 = v6 + 2;
  }
  *(void *)(v5 + 8) = v8;
  std::mutex::unlock((std::mutex *)(v5 + 24));
}

void sub_239A063FC(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ShutdownData::get(google::protobuf::internal::ShutdownData *this)
{
  {
    operator new();
  }
  return google::protobuf::internal::ShutdownData::get(void)::data;
}

void sub_239A064A0(_Unwind_Exception *a1)
{
}

void google::protobuf::FatalException::~FatalException(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_26ED26F10;
  if (SHIBYTE(this[5].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }

  std::exception::~exception(this);
}

{
  uint64_t vars8;

  google::protobuf::FatalException::~FatalException(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t google::protobuf::FatalException::what(google::protobuf::FatalException *this)
{
  uint64_t result = (uint64_t)this + 24;
  if (*((char *)this + 47) < 0) {
    return *(void *)result;
  }
  return result;
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_264DB7518, MEMORY[0x263F8C060]);
}

void sub_239A065CC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x263F8C208], MEMORY[0x263F8C090]);
}

uint64_t google::protobuf::FatalException::FatalException(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  *(void *)a1 = &unk_26ED26F10;
  *(void *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  uint64_t v5 = (std::string *)(a1 + 24);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v6 = *a4;
    v5->__r_.__value_.__r.__words[2] = *((void *)a4 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_239A066B4(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  uint64_t v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    std::string::size_type v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17) {
      std::string::size_type v6 = __sz | 7;
    }
    std::string::size_type v7 = v6 + 1;
    std::string::size_type v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    uint64_t v5 = v8;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __sz;
  }

  memmove(v5, __s, __sz + 1);
}

void std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]()
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<void (*)(void const*),void const*>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a2);
}

void google::protobuf::util::Status::~Status(void **this)
{
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

void *std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(void *a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23ECAAAA0](v13, a1);
  if (v13[0])
  {
    uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *(void *)(v6 + 40);
    int v8 = *(_DWORD *)(v6 + 8);
    int v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      unint64_t v10 = std::locale::use_facet(&v14, MEMORY[0x263F8C108]);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v11 = a2 + a3;
    }
    else {
      uint64_t v11 = a2;
    }
    if (!std::__pad_and_output[abi:ne180100]<char,std::char_traits<char>>(v7, a2, v11, a2 + a3, v6, (char)v9)) {
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  MEMORY[0x23ECAAAB0](v13);
  return a1;
}

void sub_239A06928(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  MEMORY[0x23ECAAAB0](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(void *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x239A06908);
}

void sub_239A0697C(_Unwind_Exception *a1)
{
}

uint64_t std::__pad_and_output[abi:ne180100]<char,std::char_traits<char>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6 = a1;
  if (a1)
  {
    uint64_t v11 = *(void *)(a5 + 24);
    if (v11 <= a4 - a2) {
      int64_t v12 = 0;
    }
    else {
      int64_t v12 = v11 - (a4 - a2);
    }
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1) != a3 - a2) {
      return 0;
    }
    if (v12 >= 1)
    {
      std::string::basic_string[abi:ne180100](__p, v12, __c);
      v13 = v18 >= 0 ? __p : (void **)__p[0];
      uint64_t v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(void *)v6 + 96))(v6, v13, v12);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if (v14 != v12) {
        return 0;
      }
    }
    uint64_t v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 96))(v6, a3, v15) == v15) {
      *(void *)(a5 + 24) = 0;
    }
    else {
      return 0;
    }
  }
  return v6;
}

void sub_239A06AFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::string::basic_string[abi:ne180100](void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((unsigned char *)__b + 23) = __len;
    uint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memset(v6, __c, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __b;
}

void std::vector<std::string>::__swap_out_circular_buffer(std::vector<std::string> *this, std::__split_buffer<std::string> *__v)
{
  std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>((uint64_t)&this->__end_cap_, (uint64_t)this->__end_, (uint64_t)this->__end_, (uint64_t)this->__begin_, (uint64_t)this->__begin_, (uint64_t)__v->__begin_, (uint64_t)__v->__begin_);
  __v->__begin_ = v4;
  begin = this->__begin_;
  this->__begin_ = v4;
  __v->__begin_ = begin;
  end = this->__end_;
  this->__end_ = __v->__end_;
  __v->__end_ = end;
  value = this->__end_cap_.__value_;
  this->__end_cap_.__value_ = __v->__end_cap_.__value_;
  __v->__end_cap_.__value_ = value;
  __v->__first_ = __v->__begin_;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return a6;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 24;
  }
}

void std::__split_buffer<std::string>::~__split_buffer(std::__split_buffer<std::string> *this)
{
  if (this->__first_) {
    operator delete(this->__first_);
  }
}

void std::__split_buffer<std::string>::__destruct_at_end[abi:ne180100](uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

void *std::string::__init_with_size[abi:ne180100]<char *,char *>(void *result, char *a2, char *a3, unint64_t a4)
{
  size_t v4 = result;
  if (a4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (a4 > 0x16)
  {
    uint64_t v8 = (a4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a4 | 7) != 0x17) {
      uint64_t v8 = a4 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t result = operator new(v8 + 1);
    v4[1] = a4;
    v4[2] = v9 | 0x8000000000000000;
    *size_t v4 = result;
    size_t v4 = result;
  }
  else
  {
    *((unsigned char *)result + 23) = a4;
  }
  while (a2 != a3)
  {
    char v10 = *a2++;
    *(unsigned char *)size_t v4 = v10;
    size_t v4 = (void *)((char *)v4 + 1);
  }
  *(unsigned char *)size_t v4 = 0;
  return result;
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::WriteAliasedRaw(google::protobuf::io::ZeroCopyOutputStream *this, const void *a2)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream.cc", 47);
  uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v5, "This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.");
  google::protobuf::internal::LogFinisher::operator=((int)&v4, (const char **)&v2->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  return 0;
}

void sub_239A06F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::AllowsAliasing(google::protobuf::io::ZeroCopyOutputStream *this)
{
  return 0;
}

uint64_t google::protobuf::RepeatedField<int>::RepeatedField(uint64_t a1, int *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  int v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<int>::Reserve((int *)a1, v4);
    google::protobuf::RepeatedField<int>::AddNAlreadyReserved(a1, *a2);
    if (*(int *)a1 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1198);
      uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    uint64_t v6 = (void *)google::protobuf::RepeatedField<int>::elements(a1);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1177);
      uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    uint64_t v8 = (const void *)google::protobuf::RepeatedField<int>::elements((uint64_t)a2);
    memcpy(v6, v8, 4 * *a2);
  }
  return a1;
}

void sub_239A07070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<int>::Reserve(int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    uint64_t v5 = 0;
    if (v2) {
      goto LABEL_4;
    }
LABEL_6:
    uint64_t v6 = (atomic_ullong **)(a1 + 2);
    goto LABEL_7;
  }
  uint64_t v5 = (void *)(google::protobuf::RepeatedField<int>::elements((uint64_t)a1) - 8);
  int v2 = a1[1];
  if (!v2) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v6 = (atomic_ullong **)(google::protobuf::RepeatedField<int>::elements((uint64_t)a1) - 8);
  int v2 = 2 * a1[1];
LABEL_7:
  uint64_t v7 = *v6;
  if (v2 <= a2) {
    int v2 = a2;
  }
  if (v2 <= 4) {
    unsigned int v8 = 4;
  }
  else {
    unsigned int v8 = v2;
  }
  uint64_t v9 = 4 * v8;
  if (v7)
  {
    uint64_t v10 = (v9 + 15) & 0x3FFFFFFF8;
    if (v7[14]) {
      google::protobuf::Arena::OnArenaAllocation((uint64_t)v7, MEMORY[0x263F8C238], v10);
    }
    Aligned = (void *)google::protobuf::internal::ArenaImpl::AllocateAligned(v7, v10);
  }
  else
  {
    Aligned = operator new(v9 + 8);
  }
  void *Aligned = v7;
  a1[1] = v8;
  *((void *)a1 + 1) = Aligned + 1;
  google::protobuf::RepeatedField<int>::elements((uint64_t)a1);
  if (*a1 >= 1)
  {
    int64_t v12 = (void *)google::protobuf::RepeatedField<int>::elements((uint64_t)a1);
    memcpy(v12, v5 + 1, 4 * *a1);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<int>::AddNAlreadyReserved(uint64_t a1, int a2)
{
  int v4 = *(_DWORD *)a1;
  if (*(_DWORD *)(a1 + 4) - *(_DWORD *)a1 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1153);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (total_size_ - current_size_) >= (n): ");
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, *(_DWORD *)(a1 + 4));
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, ", ");
    unsigned int v8 = google::protobuf::internal::LogMessage::operator<<(v7, *(_DWORD *)a1);
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    int v4 = *(_DWORD *)a1;
  }
  uint64_t result = *(void *)(a1 + 8) + 4 * v4;
  *(_DWORD *)a1 = v4 + a2;
  return result;
}

void sub_239A07284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<int>::Mutable(_DWORD *a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1197);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1198);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<int>::elements((uint64_t)a1) + 4 * a2;
}

void sub_239A0735C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<int>::Get(_DWORD *a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1176);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1177);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<int>::elements((uint64_t)a1) + 4 * a2;
}

void sub_239A0743C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<int>::~RepeatedField(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v2 = google::protobuf::RepeatedField<int>::elements(a1);
    uint64_t v4 = *(void *)(v2 - 8);
    int v3 = (void *)(v2 - 8);
    if (!v4) {
      operator delete(v3);
    }
  }
  return a1;
}

void google::protobuf::RepeatedField<int>::InternalSwap(uint64_t a1, uint64_t a2)
{
  if (a1 == a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1323);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: this != other: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 4)) {
    uint64_t v5 = (uint64_t *)(google::protobuf::RepeatedField<int>::elements(a1) - 8);
  }
  else {
    uint64_t v5 = (uint64_t *)(a1 + 8);
  }
  uint64_t v6 = *v5;
  if (*(_DWORD *)(a2 + 4)) {
    char v7 = (void *)(google::protobuf::RepeatedField<int>::elements(a2) - 8);
  }
  else {
    char v7 = (void *)(a2 + 8);
  }
  if (v6 != *v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1324);
    unsigned int v8 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: GetArenaNoVirtual() == other->GetArenaNoVirtual(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v9;
  LODWORD(v9) = *(_DWORD *)a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)a2 = v9;
  LODWORD(v9) = *(_DWORD *)(a1 + 4);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a2 + 4) = v9;
}

void sub_239A075D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<int>::elements(uint64_t a1)
{
  if (*(int *)(a1 + 4) <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 300);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: (total_size_) > (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v4, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(a1 + 8);
}

void sub_239A07668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<int>::MergeFrom(int *a1, int *a2)
{
  if (a2 == a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1279);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (*a2)
  {
    int v5 = *a1;
    google::protobuf::RepeatedField<int>::Reserve(a1, *a1 + *a2);
    google::protobuf::RepeatedField<int>::AddNAlreadyReserved((uint64_t)a1, *a2);
    uint64_t v6 = (void *)google::protobuf::RepeatedField<int>::Mutable(a1, v5);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1177);
      char v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    }
    unsigned int v8 = (const void *)google::protobuf::RepeatedField<int>::elements((uint64_t)a2);
    memcpy(v6, v8, 4 * *a2);
  }
}

void sub_239A07790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(google::protobuf::internal::ArenaImpl **this)
{
  uint64_t v1 = *this;
  if (v1) {
    google::protobuf::internal::ArenaImpl::SpaceAllocated(v1);
  }
}

void google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(google::protobuf::internal::ArenaImpl **a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(a1);

  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (uint64_t *)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        uint64_t v5 = *v3;
        if (*v3)
        {
          if (*(char *)(v5 + 23) < 0) {
            operator delete(*(void **)v5);
          }
          MEMORY[0x23ECAACC0](v5, 0x1012C40EC159624);
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A07974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

__n128 google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<std::string>::TypeHandler,(void *)0>(uint64_t a1, __n128 *a2)
{
  uint64_t v4 = *(int **)(a1 + 16);
  if (!v4)
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
LABEL_8:
    if (v5 <= v6)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)a1, v6 - v5 + 1);
      uint64_t v4 = *(int **)(a1 + 16);
    }
    goto LABEL_10;
  }
  int v5 = *(_DWORD *)(a1 + 8);
  int v6 = *v4;
  if (v5 < *v4)
  {
    *(_DWORD *)(a1 + 8) = v5 + 1;
    uint64_t v7 = *(void *)&v4[2 * v5 + 2];
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    __n128 result = *a2;
    *(void *)(v7 + 16) = a2[1].n128_u64[0];
    *(__n128 *)uint64_t v7 = result;
    a2[1].n128_u8[7] = 0;
    a2->n128_u8[0] = 0;
    return result;
  }
  if (v6 == *(_DWORD *)(a1 + 12)) {
    goto LABEL_8;
  }
LABEL_10:
  ++*v4;
  char v9 = *(atomic_ullong **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  if (v9[14]) {
  AlignedAndAddCleanup = (__n128 *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v9, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  __n128 result = *a2;
  AlignedAndAddCleanup[1].n128_u64[0] = a2[1].n128_u64[0];
  __n128 *AlignedAndAddCleanup = result;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  a2->n128_u64[0] = 0;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v12 + 1;
  *(void *)(v11 + 8 * v12 + 8) = AlignedAndAddCleanup;
  return result;
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    uint64_t v2 = *(void *)(a1 + 16) + 8;
    do
    {
      uint64_t v3 = *(void *)v2;
      if (*(char *)(*(void *)v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
      }
      v2 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_239A07B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1632);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  unsigned int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    int v6 = (const std::string **)(*(void *)(a2 + 16) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)a1, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)a1, (std::string **)v7, v6, v5, **(_DWORD **)(a1 + 16) - *(_DWORD *)(a1 + 8));
    signed int v8 = *(_DWORD *)(a1 + 8) + v5;
    *(_DWORD *)(a1 + 8) = v8;
    char v9 = *(signed int **)(a1 + 16);
    if (*v9 < v8) {
      *char v9 = v8;
    }
  }
}

void sub_239A07C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::Reserve(unsigned int *this, int a2)
{
  unsigned int v2 = this[2];
  BOOL v3 = __OFSUB__(a2, v2);
  int v4 = a2 - v2;
  if (!((v4 < 0) ^ v3 | (v4 == 0))) {
    return google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v4);
  }
  return this;
}

void google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (this == a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2422);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: this != other: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(void *)this != *(void *)a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2423);
    unsigned int v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArenaNoVirtual() == other->GetArenaNoVirtual(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  uint64_t v6 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v6;
  LODWORD(v6) = *((_DWORD *)this + 2);
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  *((_DWORD *)a2 + 2) = v6;
  LODWORD(v6) = *((_DWORD *)this + 3);
  *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
  *((_DWORD *)a2 + 3) = v6;
}

void sub_239A07D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::CloseGap(uint64_t this, int a2, int a3)
{
  BOOL v3 = *(int **)(this + 16);
  if (v3)
  {
    LODWORD(v4) = a3 + a2;
    LODWORD(v5) = *v3;
    if (a3 + a2 < *v3)
    {
      uint64_t v4 = (int)v4;
      do
      {
        *(void *)((char *)&v3[2 * v4] + 8 - 8 * a3) = *(void *)&v3[2 * v4 + 2];
        ++v4;
        BOOL v3 = *(int **)(this + 16);
        uint64_t v5 = *v3;
      }
      while (v4 < v5);
    }
    *(_DWORD *)(this + 8) -= a3;
    *BOOL v3 = v5 - a3;
  }
  return this;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(google::protobuf::internal::RepeatedPtrFieldBase *this, int a2)
{
  int v2 = *((_DWORD *)this + 2);
  int v3 = *((_DWORD *)this + 3);
  int v4 = v2 + a2;
  uint64_t v5 = (unsigned int *)*((void *)this + 2);
  if (v3 < v2 + a2)
  {
    char v7 = *(atomic_ullong **)this;
    int v8 = 2 * v3;
    if (2 * v3 <= v4) {
      int v8 = v4;
    }
    if (v8 <= 4) {
      unsigned int v9 = 4;
    }
    else {
      unsigned int v9 = v8;
    }
    uint64_t v10 = 8 * v9;
    if (v7)
    {
      uint64_t v11 = (v10 + 15) & 0x7FFFFFFF8;
      if (v7[14]) {
        google::protobuf::Arena::OnArenaAllocation(*(void *)this, MEMORY[0x263F8C238], v11);
      }
      Aligned = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAligned(v7, v11);
    }
    else
    {
      Aligned = (unsigned int *)operator new(v10 + 8);
    }
    *((void *)this + 2) = Aligned;
    *((_DWORD *)this + 3) = v9;
    if (v5 && (uint64_t v13 = *v5, (int)v13 >= 1))
    {
      memcpy(Aligned + 2, v5 + 2, 8 * v13);
      Aligned = (unsigned int *)*((void *)this + 2);
      unsigned int *Aligned = *v5;
      if (!v7) {
        goto LABEL_17;
      }
    }
    else
    {
      unsigned int *Aligned = 0;
      if (!v7)
      {
LABEL_17:
        operator delete(v5);
        Aligned = (unsigned int *)*((void *)this + 2);
      }
    }
    int v2 = *((_DWORD *)this + 2);
    uint64_t v5 = Aligned;
  }
  return &v5[2 * v2 + 2];
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(std::string *result, std::string **a2, const std::string **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = (atomic_ullong **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      long long v14 = *v11++;
      uint64_t v13 = v14;
      long long v15 = *v12++;
      __n128 result = std::string::operator=(v15, v13);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    char v18 = *v9;
    std::string::size_type v19 = &a3[a5];
    unsigned __int8 v20 = &a2[a5];
    do
    {
      v21 = *v19;
      if (!v18) {
        operator new();
      }
      if (v18[14]) {
      AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v18, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      }
      AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
      AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
      AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
      __n128 result = std::string::operator=(AlignedAndAddCleanup, v21);
      *v20++ = AlignedAndAddCleanup;
      ++v19;
      --v17;
    }
    while (v17);
  }
  return result;
}

uint64_t google::protobuf::MessageLite::GetMaybeArenaPointer(google::protobuf::MessageLite *this)
{
  return (*(uint64_t (**)(void))(*(void *)this + 40))();
}

uint64_t google::protobuf::MessageLite::InternalGetTable(google::protobuf::MessageLite *this)
{
  return 0;
}

uint64_t google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(google::protobuf::internal::EpsCopyInputStream *this, const char **a2, int a3)
{
  uint64_t v6 = *a2;
  if (!v6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.h", 208);
    char v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: *ptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    uint64_t v6 = *a2;
  }
  if ((unint64_t)v6 < *(void *)this) {
    return 0;
  }
  if (&v6[-*((void *)this + 1)] == (const char *)*((int *)this + 7)) {
    return 1;
  }
  *a2 = google::protobuf::internal::EpsCopyInputStream::DoneFallback(this, v6, a3);
  return v9 & 1;
}

void sub_239A08120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *std::string::append[abi:ne180100]<char const*,0>(std::string *this, char *a2, char *a3)
{
  int v4 = a2;
  LODWORD(v6) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  unint64_t v7 = a3 - a2;
  if ((v6 & 0x80000000) != 0)
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = this->__r_.__value_.__l.__size_;
    unint64_t v11 = this->__r_.__value_.__r.__words[2];
    std::string::size_type v9 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    char v10 = (std::string *)this->__r_.__value_.__r.__words[0];
    unint64_t v6 = HIBYTE(v11);
  }
  else
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::string::size_type v9 = 22;
    char v10 = this;
  }
  if (v10 > (std::string *)v4 || (char *)&v10->__r_.__value_.__l.__data_ + size + 1 <= v4)
  {
    if (v9 - size < v7)
    {
      std::string::__grow_by(this, v9, size - v9 + v7, size, size, 0, 0);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v6) = *((unsigned char *)&this->__r_.__value_.__s + 23);
    }
    long long v14 = this;
    if ((v6 & 0x80) != 0) {
      long long v14 = (std::string *)this->__r_.__value_.__r.__words[0];
    }
    for (i = (char *)v14 + size; v4 != a3; ++i)
    {
      char v16 = *v4++;
      unsigned char *i = v16;
    }
    unsigned char *i = 0;
    std::string::size_type v17 = v7 + size;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      this->__r_.__value_.__l.__size_ = v17;
    }
    else {
      *((unsigned char *)&this->__r_.__value_.__s + 23) = v17 & 0x7F;
    }
  }
  else
  {
    std::string::__init_with_size[abi:ne180100]<char *,char *>(__p, v4, a3, v7);
    if ((v20 & 0x80u) == 0) {
      uint64_t v12 = __p;
    }
    else {
      uint64_t v12 = (void **)__p[0];
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v13 = v20;
    }
    else {
      std::string::size_type v13 = (std::string::size_type)__p[1];
    }
    std::string::append(this, (const std::string::value_type *)v12, v13);
    if ((char)v20 < 0) {
      operator delete(__p[0]);
    }
  }
  return this;
}

void sub_239A08294(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(unint64_t *a1)
{
  int v2 = (atomic_ullong *)(*a1 & 0xFFFFFFFFFFFFFFFELL);
  if ((*a1 & 1) == 0)
  {
    if (v2) {
      goto LABEL_3;
    }
LABEL_7:
    operator new();
  }
  int v2 = (atomic_ullong *)v2[3];
  if (!v2) {
    goto LABEL_7;
  }
LABEL_3:
  if (v2[14]) {
  unint64_t AlignedAndAddCleanup = (unint64_t)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v2, 0x20uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::Container>);
  }
  double result = 0.0;
  *(_OWORD *)unint64_t AlignedAndAddCleanup = 0u;
  *(_OWORD *)(AlignedAndAddCleanup + 16) = 0u;
  *a1 = AlignedAndAddCleanup | 1;
  *(void *)(AlignedAndAddCleanup + 24) = v2;
  return result;
}

const std::string::value_type *google::protobuf::internal::EpsCopyInputStream::ReadString(uint64_t a1, std::string::value_type *__s, int a3, std::string *a4)
{
  if (*(void *)(a1 + 8) - (void)__s + 16 >= a3)
  {
    uint64_t v6 = a3;
    MEMORY[0x23ECAA8F0](a4, __s, a3);
    return &__s[v6];
  }
  else
  {
    return google::protobuf::internal::EpsCopyInputStream::ReadStringFallback(a1, __s, a3, a4);
  }
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      int v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      int v3 = (uint64_t *)v2[2];
      int v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), uint64_t v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            std::string::size_type v9 = (uint64_t **)a2[2];
          }
          else
          {
            std::string::size_type v9 = (uint64_t **)v2[1];
            char v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              std::string v10[2] = (uint64_t)v2;
              int v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *std::string::size_type v9 = v2;
            v2[2] = (uint64_t)v9;
            int v3 = v9[2];
            int v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          *int v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), uint64_t v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          *int v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            int v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          int v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        int v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        *int v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      *uint64_t v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

uint64_t *std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  int v3 = a2;
  if (*a2)
  {
    int v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      int v3 = a2;
      goto LABEL_7;
    }
    do
    {
      int v3 = v4;
      int v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  uint64_t v2 = v3[1];
  if (v2)
  {
LABEL_7:
    int v5 = 0;
    *(void *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  int v5 = 1;
LABEL_8:
  int v6 = (uint64_t **)v3[2];
  uint64_t v7 = *v6;
  if (*v6 == v3)
  {
    const char *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      uint64_t v7 = 0;
      double result = (uint64_t *)v2;
    }
    else
    {
      uint64_t v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    uint64_t v9 = a2[2];
    v3[2] = v9;
    *(void *)(v9 + 8 * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    *int v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((unsigned char *)v3 + 24) = *((unsigned char *)a2 + 24);
    if (result == a2) {
      double result = v3;
    }
  }
  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(unsigned char *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    uint64_t v12 = v7[2];
    if (*(uint64_t **)v12 == v7) {
      break;
    }
    if (!*((unsigned char *)v7 + 24))
    {
      *((unsigned char *)v7 + 24) = 1;
      *(unsigned char *)(v12 + 24) = 0;
      uint64_t v13 = *(uint64_t **)(v12 + 8);
      uint64_t v14 = *v13;
      *(void *)(v12 + 8) = *v13;
      if (v14) {
        *(void *)(v14 + 16) = v12;
      }
      v13[2] = *(void *)(v12 + 16);
      *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v13;
      uint64_t *v13 = v12;
      *(void *)(v12 + 16) = v13;
      if (result == (uint64_t *)*v7) {
        double result = v7;
      }
      uint64_t v7 = *(uint64_t **)(*v7 + 8);
    }
    long long v15 = (void *)*v7;
    if (*v7 && !*((unsigned char *)v15 + 24))
    {
      char v16 = (uint64_t *)v7[1];
      if (!v16) {
        goto LABEL_56;
      }
LABEL_55:
      if (*((unsigned char *)v16 + 24))
      {
LABEL_56:
        *((unsigned char *)v15 + 24) = 1;
        *((unsigned char *)v7 + 24) = 0;
        uint64_t v22 = v15[1];
        *uint64_t v7 = v22;
        if (v22) {
          *(void *)(v22 + 16) = v7;
        }
        v15[2] = v7[2];
        *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v15;
        v15[1] = v7;
        v7[2] = (uint64_t)v15;
        char v16 = v7;
      }
      else
      {
        long long v15 = v7;
      }
      uint64_t v23 = v15[2];
      *((unsigned char *)v15 + 24) = *(unsigned char *)(v23 + 24);
      *(unsigned char *)(v23 + 24) = 1;
      *((unsigned char *)v16 + 24) = 1;
      std::string v24 = *(uint64_t **)(v23 + 8);
      uint64_t v25 = *v24;
      *(void *)(v23 + 8) = *v24;
      if (v25) {
        *(void *)(v25 + 16) = v23;
      }
      v24[2] = *(void *)(v23 + 16);
      *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
      *std::string v24 = v23;
      goto LABEL_72;
    }
    char v16 = (uint64_t *)v7[1];
    if (v16 && !*((unsigned char *)v16 + 24)) {
      goto LABEL_55;
    }
    *((unsigned char *)v7 + 24) = 0;
    std::string::size_type v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      std::string::size_type v17 = result;
LABEL_53:
      *((unsigned char *)v17 + 24) = 1;
      return result;
    }
    if (!*((unsigned char *)v17 + 24)) {
      goto LABEL_53;
    }
LABEL_49:
    uint64_t v7 = *(uint64_t **)(v17[2] + 8 * (*(void *)v17[2] == (void)v17));
  }
  if (!*((unsigned char *)v7 + 24))
  {
    *((unsigned char *)v7 + 24) = 1;
    *(unsigned char *)(v12 + 24) = 0;
    uint64_t v18 = v7[1];
    *(void *)uint64_t v12 = v18;
    if (v18) {
      *(void *)(v18 + 16) = v12;
    }
    v7[2] = *(void *)(v12 + 16);
    *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(void *)(v12 + 16) = v7;
    if (result == (uint64_t *)v12) {
      double result = v7;
    }
    uint64_t v7 = *(uint64_t **)v12;
  }
  std::string::size_type v19 = (void *)*v7;
  if (*v7 && !*((unsigned char *)v19 + 24)) {
    goto LABEL_68;
  }
  unsigned __int8 v20 = (uint64_t *)v7[1];
  if (!v20 || *((unsigned char *)v20 + 24))
  {
    *((unsigned char *)v7 + 24) = 0;
    std::string::size_type v17 = (uint64_t *)v7[2];
    if (*((unsigned char *)v17 + 24)) {
      BOOL v21 = v17 == result;
    }
    else {
      BOOL v21 = 1;
    }
    if (v21) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }
  if (v19 && !*((unsigned char *)v19 + 24))
  {
LABEL_68:
    unsigned __int8 v20 = v7;
  }
  else
  {
    *((unsigned char *)v20 + 24) = 1;
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v26 = *v20;
    v7[1] = *v20;
    if (v26) {
      *(void *)(v26 + 16) = v7;
    }
    v20[2] = v7[2];
    *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v20;
    *unsigned __int8 v20 = (uint64_t)v7;
    v7[2] = (uint64_t)v20;
    std::string::size_type v19 = v7;
  }
  uint64_t v23 = v20[2];
  *((unsigned char *)v20 + 24) = *(unsigned char *)(v23 + 24);
  *(unsigned char *)(v23 + 24) = 1;
  *((unsigned char *)v19 + 24) = 1;
  std::string v24 = *(uint64_t **)v23;
  uint64_t v27 = *(void *)(*(void *)v23 + 8);
  *(void *)uint64_t v23 = v27;
  if (v27) {
    *(void *)(v27 + 16) = v23;
  }
  v24[2] = *(void *)(v23 + 16);
  *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(void *)(v23 + 16) = v24;
  return result;
}

google::protobuf::io::FileInputStream *google::protobuf::io::FileInputStream::FileInputStream(google::protobuf::io::FileInputStream *this, int a2, int a3)
{
  *(void *)this = &unk_26ED26F68;
  *((void *)this + 1) = &unk_26ED26FA8;
  *((_DWORD *)this + 4) = a2;
  *((_WORD *)this + 10) = 0;
  *((_DWORD *)this + 6) = 0;
  *((unsigned char *)this + 28) = 0;
  google::protobuf::io::CopyingInputStreamAdaptor::CopyingInputStreamAdaptor((uint64_t)this + 32, (uint64_t)this + 8, a3);
  return this;
}

void sub_239A08958(_Unwind_Exception *a1)
{
  google::protobuf::io::FileInputStream::CopyingFileInputStream::~CopyingFileInputStream(v1);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::FileInputStream::CopyingFileInputStream::Close(google::protobuf::io::FileInputStream::CopyingFileInputStream *this)
{
  if (*((unsigned char *)this + 13))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc", 117);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: !is_closed_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
  }
  *((unsigned char *)this + 13) = 1;
  if (v3) {
    *((_DWORD *)this + 4) = *__error();
  }
  return v3 == 0;
}

void sub_239A08A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::FileInputStream::Next(google::protobuf::io::FileInputStream *this, const void **a2, int *a3)
{
  return google::protobuf::io::CopyingInputStreamAdaptor::Next((google::protobuf::io::FileInputStream *)((char *)this + 32), a2, a3);
}

void google::protobuf::io::FileInputStream::BackUp(google::protobuf::io::FileInputStream *this, int a2)
{
}

BOOL google::protobuf::io::FileInputStream::Skip(google::protobuf::io::FileInputStream *this, int a2)
{
  return google::protobuf::io::CopyingInputStreamAdaptor::Skip((google::protobuf::io::FileInputStream *)((char *)this + 32), a2);
}

uint64_t google::protobuf::io::FileInputStream::ByteCount(google::protobuf::io::FileInputStream *this)
{
  return google::protobuf::io::CopyingInputStreamAdaptor::ByteCount((google::protobuf::io::FileInputStream *)((char *)this + 32));
}

void google::protobuf::io::FileInputStream::CopyingFileInputStream::~CopyingFileInputStream(google::protobuf::io::FileInputStream::CopyingFileInputStream *this)
{
  *(void *)this = &unk_26ED26FA8;
  if (*((unsigned char *)this + 12))
  {
    if (!google::protobuf::io::FileInputStream::CopyingFileInputStream::Close(this))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc", 111);
      uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v6, "close() failed: ");
      int v3 = strerror(*((_DWORD *)this + 4));
      int v4 = google::protobuf::internal::LogMessage::operator<<(v2, v3);
      google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::io::FileInputStream::CopyingFileInputStream::~CopyingFileInputStream(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t google::protobuf::io::anonymous namespace'::close_no_eintr(google::protobuf::io::_anonymous_namespace_ *this)
{
  int v1 = (int)this;
  do
    uint64_t v2 = close(v1);
  while ((v2 & 0x80000000) != 0 && *__error() == 4);
  return v2;
}

ssize_t google::protobuf::io::FileInputStream::CopyingFileInputStream::Read(google::protobuf::io::FileInputStream::CopyingFileInputStream *this, void *a2, int a3)
{
  if (*((unsigned char *)this + 13))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc", 132);
    int v6 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: !is_closed_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  while (1)
  {
    ssize_t v7 = read(*((_DWORD *)this + 2), a2, a3);
    if ((v7 & 0x80000000) == 0) {
      break;
    }
    if (*__error() != 4)
    {
      *((_DWORD *)this + 4) = *__error();
      return v7;
    }
  }
  return v7;
}

void sub_239A08C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::FileInputStream::CopyingFileInputStream::Skip(google::protobuf::io::FileInputStream::CopyingFileInputStream *this, uint64_t a2)
{
  if (*((unsigned char *)this + 13))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc", 148);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: !is_closed_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)this + 20) || lseek(*((_DWORD *)this + 2), (int)a2, 1) == -1)
  {
    *((unsigned char *)this + 20) = 1;
    return google::protobuf::io::CopyingInputStream::Skip(this);
  }
  return a2;
}

void sub_239A08CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::io::FileOutputStream *google::protobuf::io::FileOutputStream::FileOutputStream(google::protobuf::io::FileOutputStream *this, int a2, int a3)
{
  *(void *)this = &unk_26ED26FD8;
  *((void *)this + 1) = &unk_26ED27020;
  *((_DWORD *)this + 4) = a2;
  *((_WORD *)this + 10) = 0;
  *((_DWORD *)this + 6) = 0;
  google::protobuf::io::CopyingOutputStreamAdaptor::CopyingOutputStreamAdaptor((uint64_t)this + 32, (uint64_t)this + 8, a3);
  return this;
}

void sub_239A08D84(_Unwind_Exception *a1)
{
  google::protobuf::io::FileOutputStream::CopyingFileOutputStream::~CopyingFileOutputStream(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::io::FileOutputStream::~FileOutputStream(google::protobuf::io::FileOutputStream *this)
{
  *(void *)this = &unk_26ED26FD8;
  uint64_t v2 = (google::protobuf::io::FileOutputStream *)((char *)this + 32);
  google::protobuf::io::CopyingOutputStreamAdaptor::Flush((google::protobuf::io::FileOutputStream *)((char *)this + 32));
  google::protobuf::io::CopyingOutputStreamAdaptor::~CopyingOutputStreamAdaptor(v2);
  google::protobuf::io::FileOutputStream::CopyingFileOutputStream::~CopyingFileOutputStream((google::protobuf::io::FileOutputStream *)((char *)this + 8));
}

{
  uint64_t vars8;

  google::protobuf::io::FileOutputStream::~FileOutputStream(this);

  JUMPOUT(0x23ECAACC0);
}

BOOL google::protobuf::io::FileOutputStream::CopyingFileOutputStream::Close(google::protobuf::io::FileOutputStream::CopyingFileOutputStream *this)
{
  if (*((unsigned char *)this + 13))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc", 203);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: !is_closed_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
  }
  *((unsigned char *)this + 13) = 1;
  if (v3) {
    *((_DWORD *)this + 4) = *__error();
  }
  return v3 == 0;
}

void sub_239A08ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::FileOutputStream::Flush(google::protobuf::io::FileOutputStream *this)
{
  return google::protobuf::io::CopyingOutputStreamAdaptor::Flush((google::protobuf::io::FileOutputStream *)((char *)this + 32));
}

uint64_t google::protobuf::io::FileOutputStream::Next(google::protobuf::io::FileOutputStream *this, void **a2, int *a3)
{
  return google::protobuf::io::CopyingOutputStreamAdaptor::Next((google::protobuf::io::FileOutputStream *)((char *)this + 32), a2, a3);
}

void google::protobuf::io::FileOutputStream::BackUp(google::protobuf::io::FileOutputStream *this, int a2)
{
}

uint64_t google::protobuf::io::FileOutputStream::ByteCount(google::protobuf::io::FileOutputStream *this)
{
  return google::protobuf::io::CopyingOutputStreamAdaptor::ByteCount((google::protobuf::io::FileOutputStream *)((char *)this + 32));
}

void google::protobuf::io::FileOutputStream::CopyingFileOutputStream::~CopyingFileOutputStream(google::protobuf::io::FileOutputStream::CopyingFileOutputStream *this)
{
  *(void *)this = &unk_26ED27020;
  if (*((unsigned char *)this + 12))
  {
    if (!google::protobuf::io::FileOutputStream::CopyingFileOutputStream::Close(this))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc", 197);
      uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v6, "close() failed: ");
      int v3 = strerror(*((_DWORD *)this + 4));
      int v4 = google::protobuf::internal::LogMessage::operator<<(v2, v3);
      google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::io::FileOutputStream::CopyingFileOutputStream::~CopyingFileOutputStream(this);

  JUMPOUT(0x23ECAACC0);
}

BOOL google::protobuf::io::FileOutputStream::CopyingFileOutputStream::Write(google::protobuf::io::FileOutputStream::CopyingFileOutputStream *this, char *a2, int a3)
{
  if (*((unsigned char *)this + 13))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc", 219);
    char v6 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: !is_closed_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (a3 < 1) {
    return 1;
  }
  int v7 = 0;
  do
  {
    while (1)
    {
      int v8 = write(*((_DWORD *)this + 2), &a2[v7], a3 - v7);
      int v9 = v8;
      if (v8 < 0) {
        break;
      }
      BOOL result = v8 != 0;
      v7 += v9;
      if (v9) {
        BOOL v10 = v7 < a3;
      }
      else {
        BOOL v10 = 0;
      }
      if (!v10) {
        return result;
      }
    }
  }
  while (*__error() == 4);
  uint64_t v11 = __error();
  BOOL result = 0;
  *((_DWORD *)this + 4) = *v11;
  return result;
}

void sub_239A090F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::io::FileInputStream::~FileInputStream(google::protobuf::io::FileInputStream *this)
{
  *(void *)this = &unk_26ED26F68;
  int v1 = (google::protobuf::io::FileInputStream *)((char *)this + 8);
  google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((google::protobuf::io::FileInputStream *)((char *)this + 32));
  google::protobuf::io::FileInputStream::CopyingFileInputStream::~CopyingFileInputStream(v1);
}

{
  google::protobuf::io::FileInputStream::CopyingFileInputStream *v1;
  uint64_t vars8;

  *(void *)this = &unk_26ED26F68;
  int v1 = (google::protobuf::io::FileInputStream *)((char *)this + 8);
  google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((google::protobuf::io::FileInputStream *)((char *)this + 32));
  google::protobuf::io::FileInputStream::CopyingFileInputStream::~CopyingFileInputStream(v1);

  JUMPOUT(0x23ECAACC0);
}

unint64_t google::protobuf::io::EpsCopyOutputStream::Flush(google::protobuf::io::EpsCopyOutputStream *this, char *a2)
{
  while (1)
  {
    unint64_t v5 = *(void *)this;
    int v4 = (void *)*((void *)this + 1);
    if (!v4)
    {
      unint64_t v10 = v5 - (void)a2;
      unint64_t v9 = v10 + 16;
      *((void *)this + 1) = a2;
      if (((v10 + 16) & 0x80000000) == 0) {
        return v9;
      }
      goto LABEL_12;
    }
    int v6 = a2 - v5;
    if ((unint64_t)a2 <= v5) {
      break;
    }
    if (*((unsigned char *)this + 56))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/coded_stream.cc", 685);
      int v7 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: !had_error_: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    if (v6 >= 17)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/coded_stream.cc", 686);
      int v8 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: overrun <= kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v8->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    a2 = &google::protobuf::io::EpsCopyOutputStream::Next(this)[v6];
    if (*((unsigned char *)this + 56)) {
      return 0;
    }
  }
  memcpy(v4, (char *)this + 16, a2 - ((char *)this + 16));
  unint64_t v11 = *(void *)this;
  *((void *)this + 1) += a2 - ((char *)this + 16);
  unint64_t v9 = v11 - (void)a2;
  if (((v11 - a2) & 0x80000000) == 0) {
    return v9;
  }
LABEL_12:
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/coded_stream.cc", 700);
  uint64_t v12 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: s >= 0: ");
  google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v12->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  return v9;
}

void sub_239A09344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::io::EpsCopyOutputStream::Next(google::protobuf::io::EpsCopyOutputStream *this)
{
  if (*((unsigned char *)this + 56))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/coded_stream.cc", 788);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: !had_error_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (*((void *)this + 6))
  {
    int v3 = (char *)this + 16;
    unint64_t v5 = *(char **)this;
    int v4 = (void *)*((void *)this + 1);
    if (v4)
    {
      memcpy(v4, (char *)this + 16, v5 - v3);
      int v12 = 0;
      do
      {
        v13[0].__r_.__value_.__r.__words[0] = 0;
        if (((*(uint64_t (**)(void, std::string *, int *))(**((void **)this + 6) + 16))(*((void *)this + 6), v13, &v12) & 1) == 0)
        {
          *((unsigned char *)this + 56) = 1;
          goto LABEL_14;
        }
        uint64_t v6 = v12;
      }
      while (!v12);
      unint64_t v5 = (char *)v13[0].__r_.__value_.__r.__words[0];
      if (v12 >= 17)
      {
        *(_OWORD *)v13[0].__r_.__value_.__l.__data_ = *(_OWORD *)*(void *)this;
        *(void *)this = &v5[v6 - 16];
        *((void *)this + 1) = 0;
        return v5;
      }
      if (v12 <= 0)
      {
        std::string::size_type v10 = v13[0].__r_.__value_.__r.__words[0];
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/coded_stream.cc", 810);
        unint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: size > 0: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
        LODWORD(v6) = v12;
        unint64_t v5 = (char *)v10;
      }
      *(_OWORD *)int v3 = *(_OWORD *)*(void *)this;
      int v7 = &v3[(int)v6];
    }
    else
    {
      *(_OWORD *)int v3 = *(_OWORD *)v5;
      int v7 = (char *)this + 32;
    }
    *(void *)this = v7;
    *((void *)this + 1) = v5;
  }
  else
  {
    *((unsigned char *)this + 56) = 1;
    int v3 = (char *)this + 16;
LABEL_14:
    *(void *)this = (char *)this + 32;
  }
  return v3;
}

void sub_239A09504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::io::EpsCopyOutputStream::Trim(google::protobuf::io::EpsCopyOutputStream *this, char *a2)
{
  if (!*((unsigned char *)this + 56))
  {
    unint64_t v3 = google::protobuf::io::EpsCopyOutputStream::Flush(this, a2);
    if (v3) {
      (*(void (**)(void, unint64_t))(**((void **)this + 6) + 24))(*((void *)this + 6), v3);
    }
    a2 = (char *)this + 16;
    *(void *)this = (char *)this + 16;
    *((void *)this + 1) = (char *)this + 16;
  }
  return a2;
}

char *google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(google::protobuf::io::EpsCopyOutputStream *this, char *a2)
{
  while (!*((unsigned char *)this + 56))
  {
    unint64_t v3 = &a2[-*(void *)this];
    if ((v3 & 0x80000000) != 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/coded_stream.cc", 829);
      unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: overrun >= 0: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
      goto LABEL_6;
    }
    if (v3 > 0x10)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/coded_stream.cc", 830);
      int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: overrun <= kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
LABEL_6:
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    }
    a2 = &google::protobuf::io::EpsCopyOutputStream::Next(this)[(int)v3];
    if ((unint64_t)a2 < *(void *)this) {
      return a2;
    }
  }
  return (char *)this + 16;
}

void sub_239A09680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(google::protobuf::io::EpsCopyOutputStream *this, char *a2, int a3, unsigned __int8 *a4)
{
  int v4 = a4;
  for (int i = google::protobuf::io::EpsCopyOutputStream::GetSize(this, a4);
        a3 > i;
        int i = google::protobuf::io::EpsCopyOutputStream::GetSize(this, v4))
  {
    memcpy(v4, a2, i);
    a3 -= i;
    a2 += i;
    int v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, (char *)&v4[i]);
  }
  memcpy(v4, a2, a3);
  return &v4[a3];
}

uint64_t google::protobuf::io::EpsCopyOutputStream::GetSize(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  uint64_t v3 = *(void *)this;
  if (*(void *)this + 16 < (unint64_t)a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/coded_stream.h", 836);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: ptr <= end_ + kSlopBytes: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v3 = *(void *)this;
  }
  return v3 - (void)a2 + 16;
}

void sub_239A097C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteAliasedRaw(google::protobuf::io::EpsCopyOutputStream *this, void *a2, uint64_t a3, char *a4)
{
  if (google::protobuf::io::EpsCopyOutputStream::GetSize(this, (unsigned __int8 *)a4) <= (int)a3)
  {
    int v8 = google::protobuf::io::EpsCopyOutputStream::Trim(this, a4);
    if (((*(uint64_t (**)(void, void *, uint64_t))(**((void **)this + 6) + 40))(*((void *)this + 6), a2, a3) & 1) == 0)
    {
      *((unsigned char *)this + 56) = 1;
      int v8 = (char *)this + 16;
      *(void *)this = (char *)this + 32;
    }
    return (unsigned __int8 *)v8;
  }
  if (*(void *)this - (void)a4 >= (int)a3)
  {
    memcpy(a4, a2, (int)a3);
    return (unsigned __int8 *)&a4[(int)a3];
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, (char *)a2, a3, (unsigned __int8 *)a4);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(google::protobuf::io::EpsCopyOutputStream *this, int a2, void **a3, char *a4)
{
  int v4 = a4;
  unint64_t v8 = *(void *)this;
  if (*(void *)this <= (unint64_t)a4)
  {
    int v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
    unint64_t v8 = *(void *)this;
  }
  if (*((char *)a3 + 23) >= 0) {
    uint64_t v9 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    uint64_t v9 = *((unsigned int *)a3 + 2);
  }
  if (v8 <= (unint64_t)v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/coded_stream.h", 856);
    std::string::size_type v10 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: ptr < end_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v22, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  unsigned int v11 = (8 * a2) | 2;
  if (v11 > 0x7F)
  {
    *int v4 = (8 * a2) | 0x82;
    unsigned int v13 = (8 * a2) >> 7;
    if (v11 >> 14)
    {
      int v12 = v4 + 2;
      do
      {
        *(v12 - 1) = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        ++v12;
        unsigned int v15 = v13 >> 14;
        v13 >>= 7;
      }
      while (v15);
      *(v12 - 1) = v14;
    }
    else
    {
      v4[1] = v13;
      int v12 = v4 + 2;
    }
  }
  else
  {
    *int v4 = v11;
    int v12 = v4 + 1;
  }
  if (v9 >= 0x80)
  {
    unsigned int v20 = v9;
    do
    {
      *v12++ = v20 | 0x80;
      unsigned int v16 = v20 >> 7;
      unsigned int v21 = v20 >> 14;
      v20 >>= 7;
    }
    while (v21);
  }
  else
  {
    LOBYTE(v16) = v9;
  }
  *int v12 = v16;
  std::string::size_type v17 = v12 + 1;
  if (*((char *)a3 + 23) >= 0) {
    uint64_t v18 = a3;
  }
  else {
    uint64_t v18 = *a3;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawMaybeAliased(this, v18, v9, v17);
}

void sub_239A09A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteRawMaybeAliased(google::protobuf::io::EpsCopyOutputStream *this, void *a2, uint64_t a3, char *a4)
{
  if (*((unsigned char *)this + 57))
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteAliasedRaw(this, a2, a3, a4);
  }
  else if (*(void *)this - (void)a4 < (int)a3)
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, (char *)a2, a3, (unsigned __int8 *)a4);
  }
  else
  {
    uint64_t v6 = (int)a3;
    memcpy(a4, a2, (int)a3);
    return (unsigned __int8 *)&a4[v6];
  }
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(google::protobuf::io::EpsCopyOutputStream *this, int a2, uint64_t a3, char *a4)
{
  int v4 = a4;
  unint64_t v8 = *(void *)this;
  if (*(void *)this <= (unint64_t)a4)
  {
    int v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
    unint64_t v8 = *(void *)this;
  }
  if (*(char *)(a3 + 23) >= 0) {
    LODWORD(v9) = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    uint64_t v9 = *(void *)(a3 + 8);
  }
  if (v8 <= (unint64_t)v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/coded_stream.h", 856);
    std::string::size_type v10 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: ptr < end_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v22, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  unsigned int v11 = (8 * a2) | 2;
  if (v11 > 0x7F)
  {
    *int v4 = (8 * a2) | 0x82;
    unsigned int v13 = (8 * a2) >> 7;
    if (v11 >> 14)
    {
      int v12 = v4 + 2;
      do
      {
        *(v12 - 1) = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        ++v12;
        unsigned int v15 = v13 >> 14;
        v13 >>= 7;
      }
      while (v15);
      *(v12 - 1) = v14;
    }
    else
    {
      v4[1] = v13;
      int v12 = v4 + 2;
    }
  }
  else
  {
    *int v4 = v11;
    int v12 = v4 + 1;
  }
  if (v9 >= 0x80)
  {
    unsigned int v20 = v9;
    do
    {
      *v12++ = v20 | 0x80;
      unsigned int v16 = v20 >> 7;
      unsigned int v21 = v20 >> 14;
      v20 >>= 7;
    }
    while (v21);
  }
  else
  {
    LOBYTE(v16) = v9;
  }
  *int v12 = v16;
  std::string::size_type v17 = v12 + 1;
  if (*(char *)(a3 + 23) >= 0) {
    uint64_t v18 = (char *)a3;
  }
  else {
    uint64_t v18 = *(char **)a3;
  }
  if (*(void *)this - (void)v17 < (int)v9) {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, v18, v9, v17);
  }
  memcpy(v17, v18, (int)v9);
  return &v17[(int)v9];
}

void sub_239A09C94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::EpsCopyInputStream::Next(google::protobuf::internal::EpsCopyInputStream *this, unsigned int a2, int a3)
{
  uint64_t v3 = (google::protobuf::internal::EpsCopyInputStream *)*((void *)this + 2);
  if (!v3) {
    return v3;
  }
  unint64_t v5 = (char *)this + 40;
  if (v3 != (google::protobuf::internal::EpsCopyInputStream *)((char *)this + 40))
  {
    int v6 = *((_DWORD *)this + 6);
    if (v6 <= 16)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v33, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 105);
      char v7 = google::protobuf::internal::LogMessage::operator<<(v33, "CHECK failed: size_ > kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((int)&__src, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v33[0].__r_.__value_.__l.__data_);
      uint64_t v3 = (google::protobuf::internal::EpsCopyInputStream *)*((void *)this + 2);
      int v6 = *((_DWORD *)this + 6);
    }
    *((void *)this + 1) = (char *)v3 + v6 - 16;
    *((void *)this + 2) = v5;
    if (*((void *)this + 9) == 1) {
      *((void *)this + 9) = 2;
    }
    return v3;
  }
  *(_OWORD *)uint64_t v3 = *(_OWORD *)*((void *)this + 1);
  if (*((int *)this + 21) < 1) {
    goto LABEL_46;
  }
  int v8 = a3;
  if (a3 < 0) {
    goto LABEL_39;
  }
  if ((a2 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v33, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 53);
    unsigned int v11 = google::protobuf::internal::LogMessage::operator<<(v33, "CHECK failed: overrun >= 0: ");
    google::protobuf::internal::LogFinisher::operator=((int)&__src, (const char **)&v11->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v33[0].__r_.__value_.__l.__data_);
LABEL_14:
    int v12 = (unsigned __int8 *)this + 56;
    unsigned int v13 = (unsigned __int8 *)v3 + (int)a2;
    unsigned int v14 = v13;
    while (2)
    {
      int v15 = (char)*v14++;
      int v16 = v15;
      if (v15 < 0)
      {
        int v16 = v16 + (*v14 << 7) - 128;
        if ((char)*v14 < 0)
        {
          unsigned int v14 = v13 + 3;
          uint64_t v20 = -21;
          while (1)
          {
            v16 += (*(v14 - 1) - 1) << (v20 + 35);
            if (((char)*(v14 - 1) & 0x80000000) == 0) {
              break;
            }
            ++v14;
            v20 += 7;
            if (!v20) {
              goto LABEL_39;
            }
          }
        }
        else
        {
          unsigned int v14 = v13 + 2;
        }
      }
      if (v14 <= v12)
      {
        if (!v16) {
          goto LABEL_46;
        }
        switch(v16 & 7)
        {
          case 0:
            v33[0].__r_.__value_.__r.__words[0] = 0;
            unsigned int v14 = google::protobuf::internal::VarintParse<unsigned long long>((char *)v14, v33);
            if (!v14) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 1:
            v14 += 8;
            goto LABEL_38;
          case 2:
            uint64_t v18 = (const char *)*v14;
            if ((char)*v14 < 0)
            {
              SizeFallback = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v14, v18);
              if (!SizeFallback) {
                goto LABEL_39;
              }
            }
            else
            {
              SizeFallback = (char *)(v14 + 1);
            }
            if (v12 - (unsigned __int8 *)SizeFallback < (int)v18) {
              goto LABEL_39;
            }
            unsigned int v14 = (unsigned __int8 *)&SizeFallback[(int)v18];
LABEL_38:
            unsigned int v13 = v14;
            if (v14 >= v12) {
              goto LABEL_39;
            }
            continue;
          case 3:
            ++v8;
            goto LABEL_38;
          case 4:
            BOOL v17 = __OFSUB__(v8--, 1);
            if (v8 < 0 != v17) {
              goto LABEL_46;
            }
            goto LABEL_38;
          case 5:
            v14 += 4;
            goto LABEL_38;
          default:
            goto LABEL_39;
        }
      }
      goto LABEL_39;
    }
  }
  if (a2 >= 0x11)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v33, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 54);
    std::string::size_type v10 = google::protobuf::internal::LogMessage::operator<<(v33, "CHECK failed: overrun <= kSlopBytes: ");
    google::protobuf::internal::LogFinisher::operator=((int)&__src, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v33[0].__r_.__value_.__l.__data_);
    goto LABEL_39;
  }
  if (a2 != 16) {
    goto LABEL_14;
  }
LABEL_39:
  __src = 0;
  if (!(*(unsigned int (**)(void, void **, char *))(**((void **)this + 4) + 16))(*((void *)this + 4), &__src, (char *)this + 24))
  {
LABEL_45:
    *((_DWORD *)this + 21) = 0;
LABEL_46:
    if (*((void *)this + 9) == 2) {
      *((void *)this + 9) = *((void *)this + 1) - (void)v3;
    }
    *((void *)this + 1) = (char *)this + 56;
    *((void *)this + 2) = 0;
    *((_DWORD *)this + 6) = 0;
    return v3;
  }
  while (1)
  {
    size_t v21 = *((unsigned int *)this + 6);
    *((_DWORD *)this + 21) -= v21;
    if ((int)v21 >= 17)
    {
      unint64_t v27 = *((void *)this + 9);
      uint64_t v26 = (void *)((char *)this + 72);
      unint64_t v25 = v27;
      v28 = (char *)(v26 - 2);
      v29 = __src;
      *((_OWORD *)v26 - 1) = *(_OWORD *)__src;
      *(v26 - 7) = v29;
      goto LABEL_52;
    }
    if ((int)v21 >= 1) {
      break;
    }
    if (v21)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v33, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 137);
      char v22 = google::protobuf::internal::LogMessage::operator<<(v33, "CHECK failed: size_ == 0: ");
      uint64_t v23 = google::protobuf::internal::LogMessage::operator<<(v22, *((_DWORD *)this + 6));
      google::protobuf::internal::LogFinisher::operator=((int)&v31, (const char **)&v23->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v33[0].__r_.__value_.__l.__data_);
    }
    if (((*(uint64_t (**)(void, void **, char *))(**((void **)this + 4) + 16))(*((void *)this + 4), &__src, (char *)this + 24) & 1) == 0)goto LABEL_45; {
  }
    }
  memcpy((char *)this + 56, __src, v21);
  unint64_t v30 = *((void *)this + 9);
  uint64_t v26 = (void *)((char *)this + 72);
  unint64_t v25 = v30;
  v28 = (char *)v3 + v21;
  *(v26 - 7) = v3;
LABEL_52:
  *(v26 - 8) = v28;
  if (v25 > 1) {
    *uint64_t v26 = 1;
  }
  return v3;
}

void sub_239A0A090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const char *google::protobuf::internal::EpsCopyInputStream::DoneFallback(google::protobuf::internal::EpsCopyInputStream *this, const char *a2, int a3)
{
  int v4 = a2;
  if (*(void *)this > (unint64_t)a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 159);
    int v6 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: ptr >= limit_end_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  signed int v7 = v4 - *((_DWORD *)this + 2);
  if (v7 >= 17)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 161);
    int v8 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: overrun <= kSlopBytes: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  int v9 = *((_DWORD *)this + 7);
  if (v9 < v7) {
    return 0;
  }
  if (v9 == v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 164);
    std::string::size_type v10 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: overrun != limit_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
    int v9 = *((_DWORD *)this + 7);
  }
  if (v9 <= v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 165);
    unsigned int v11 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: overrun < limit_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v11->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
    int v9 = *((_DWORD *)this + 7);
  }
  if (*(void *)this != *((void *)this + 1) + (v9 & (v9 >> 31)))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 170);
    int v12 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: limit_end_ == buffer_end_ + (std::min)(0, limit_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
    int v9 = *((_DWORD *)this + 7);
  }
  if (v9 <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 172);
    unsigned int v13 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: limit_ > 0: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v13->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  if (*(void *)this != *((void *)this + 1))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 173);
    unsigned int v14 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: limit_end_ == buffer_end_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v14->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  while (1)
  {
    if (v7 < 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 176);
      int v15 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: overrun >= 0: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
    }
    int v16 = google::protobuf::internal::EpsCopyInputStream::Next(this, v7, a3);
    if (!v16) {
      break;
    }
    uint64_t v17 = *((void *)this + 1);
    int v18 = *((_DWORD *)this + 7) + v16 - v17;
    *((_DWORD *)this + 7) = v18;
    int v4 = (char *)v16 + v7;
    signed int v7 = v4 - v17;
    if ((int)v4 - (int)v17 < 0)
    {
      *(void *)this = v17 + (v18 & (v18 >> 31));
      return v4;
    }
  }
  if (v7) {
    return 0;
  }
  if (*((int *)this + 7) <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.cc", 181);
    std::string::size_type v19 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: limit_ > 0: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v19->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  *(void *)this = *((void *)this + 1);
  *((_DWORD *)this + 20) = 1;
  return v4;
}

void sub_239A0A420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const char *google::protobuf::internal::EpsCopyInputStream::SkipFallback(google::protobuf::internal::EpsCopyInputStream *this, const char *a2, int a3)
{
  int v4 = a2;
  int v6 = *((_DWORD *)this + 2) - a2 + 16;
  while (1)
  {
    if (a3 <= v6)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.h", 293);
      signed int v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: size > chunk_size: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    }
    if (*((_DWORD *)this + 7) == 16) {
      break;
    }
    int v8 = google::protobuf::internal::EpsCopyInputStream::DoneFallback(this, &v4[v6], -1);
    if (v9) {
      break;
    }
    int v4 = v8;
    uint64_t v10 = a3 - (uint64_t)v6;
    int v6 = *((_DWORD *)this + 2) - v8 + 16;
    a3 = v10;
    if ((int)v10 <= v6) {
      return &v8[v10];
    }
  }
  return 0;
}

void sub_239A0A564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const std::string::value_type *google::protobuf::internal::EpsCopyInputStream::ReadStringFallback(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    *this->__r_.__value_.__l.__data_ = 0;
    this->__r_.__value_.__l.__size_ = 0;
  }
  else
  {
    this->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&this->__r_.__value_.__s + 23) = 0;
  }
  if (*(void *)(a1 + 8) - (void)__s + *(int *)(a1 + 28) >= a3) {
    std::string::reserve(this, a3);
  }

  return google::protobuf::internal::EpsCopyInputStream::AppendStringFallback(a1, __s, a3, this);
}

const std::string::value_type *google::protobuf::internal::EpsCopyInputStream::AppendStringFallback(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  int v5 = a3;
  int v6 = __s;
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8 - (uint64_t)__s + *(int *)(a1 + 28) >= a3)
  {
    std::string::reserve(this, a3);
    uint64_t v8 = *(void *)(a1 + 8);
  }
  int v9 = v8 - v6 + 16;
  while (1)
  {
    if (v5 <= v9)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.h", 293);
      uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: size > chunk_size: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
    std::string::append(this, v6, v9);
    if (*(_DWORD *)(a1 + 28) == 16) {
      break;
    }
    unsigned int v11 = google::protobuf::internal::EpsCopyInputStream::DoneFallback((google::protobuf::internal::EpsCopyInputStream *)a1, &v6[v9], -1);
    if (v12) {
      break;
    }
    int v6 = v11;
    std::string::size_type v13 = v5 - (uint64_t)v9;
    int v9 = *(_DWORD *)(a1 + 8) - v11 + 16;
    int v5 = v13;
    if ((int)v13 <= v9)
    {
      std::string::append(this, v11, v13);
      return &v6[v13];
    }
  }
  return 0;
}

void sub_239A0A754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::EpsCopyInputStream::InitFrom(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = a2;
  __src = 0;
  unsigned int v7 = 0;
  *(_DWORD *)(a1 + 28) = 0x7FFFFFFF;
  if ((*(unsigned int (**)(uint64_t, void **, unsigned int *))(*(void *)a2 + 16))(a2, &__src, &v7))
  {
    uint64_t v3 = v7;
    *(_DWORD *)(a1 + 84) -= v7;
    if ((int)v3 < 17)
    {
      *(void *)a1 = a1 + 56;
      *(void *)(a1 + 8) = a1 + 56;
      *(void *)(a1 + 16) = a1 + 40;
      int v4 = (void *)(a1 - (int)v3 + 72);
      memcpy(v4, __src, (int)v3);
    }
    else
    {
      int v4 = __src;
      *(_DWORD *)(a1 + 28) = *(_DWORD *)(a1 + 28) - v3 + 16;
      uint64_t v5 = (uint64_t)v4 + v3 - 16;
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = a1 + 40;
      if (*(void *)(a1 + 72) == 1) {
        *(void *)(a1 + 72) = 2;
      }
    }
  }
  else
  {
    *(_DWORD *)(a1 + 84) = 0;
    *(_DWORD *)(a1 + 24) = 0;
    int v4 = (void *)(a1 + 40);
    *(void *)(a1 + 8) = a1 + 40;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = a1 + 40;
  }
  return v4;
}

uint64_t google::protobuf::internal::VarintParseSlow64(google::protobuf::internal *this, unint64_t a2)
{
  a2 = a2;
  uint64_t result = (uint64_t)this + 3;
  int v4 = (char *)this + 2;
  uint64_t v5 = 14;
  while (1)
  {
    int v6 = *v4++;
    a2 += (v6 - 1) << v5;
    if ((v6 & 0x80000000) == 0) {
      break;
    }
    ++result;
    v5 += 7;
    if (v5 == 70) {
      return 0;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::ReadTagFallback(google::protobuf::internal *this, const char *a2)
{
  uint64_t result = (uint64_t)this + 3;
  int v4 = (char *)this + 2;
  uint64_t v5 = -21;
  while (1)
  {
    int v6 = *v4++;
    LODWORD(a2) = ((v6 - 1) << (v5 + 35)) + a2;
    if ((v6 & 0x80000000) == 0) {
      break;
    }
    ++result;
    v5 += 7;
    if (!v5) {
      return 0;
    }
  }
  return result;
}

char *google::protobuf::internal::ReadSizeFallback(google::protobuf::internal *this, const char *a2)
{
  uint64_t result = (char *)this + 2;
  uint64_t v4 = -21;
  while (1)
  {
    LODWORD(a2) = ((*(result - 1) - 1) << (v4 + 28)) + a2;
    if ((*(result - 1) & 0x80000000) == 0) {
      break;
    }
    ++result;
    v4 += 7;
    if (!v4)
    {
      unsigned int v5 = *((unsigned __int8 *)this + 4);
      int v6 = (char *)this + 5;
      if (a2 + (v5 << 28) - 0x10000000 > 0x7FFFFFEF) {
        int v6 = 0;
      }
      if (v5 <= 7) {
        return v6;
      }
      else {
        return 0;
      }
    }
  }
  return result;
}

char *google::protobuf::internal::InlineGreedyStringParser(std::string *a1, std::string::value_type *this, uint64_t a3)
{
  int v5 = *this;
  if (*this < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result) {
      return result;
    }
    int v6 = result;
    int v5 = v8;
  }
  else
  {
    int v6 = this + 1;
  }

  return (char *)google::protobuf::internal::EpsCopyInputStream::ReadString(a3, v6, v5, a1);
}

char *google::protobuf::internal::PackedInt32Parser(int *a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *a3)
{
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(a3, a2, a1);
}

char *google::protobuf::internal::WireFormatParser<google::protobuf::internal::UnknownFieldLiteParserHelper>(int a1, char *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v10 = a2;
  while (1)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v10, *((_DWORD *)this + 23)))return v10; {
    int v5 = v10 + 1;
    }
    int v6 = *v10;
    if (*v10 < 0)
    {
      int v6 = v6 + (*v5 << 7) - 128;
      if (*v5 < 0)
      {
        int v5 = v10 + 3;
        uint64_t v8 = -21;
        while (1)
        {
          v6 += (*(v5 - 1) - 1) << (v8 + 35);
          if ((*(v5 - 1) & 0x80000000) == 0) {
            break;
          }
          ++v5;
          v8 += 7;
          if (!v8) {
            return 0;
          }
        }
      }
      else
      {
        int v5 = v10 + 2;
      }
    }
    uint64_t v10 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    uint64_t v10 = (char *)google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldLiteParserHelper>(v6, a1, (google::protobuf::internal *)v5);
    if (!v10) {
      return 0;
    }
  }
  *((_DWORD *)this + 20) = v6 - 1;
  return v5;
}

unsigned __int8 *google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldLiteParserHelper>(unint64_t a1, std::string **a2, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a4)
{
  unint64_t v4 = a1 >> 3;
  if (!(a1 >> 3)) {
    return 0;
  }
  int v5 = (unsigned __int8 *)this;
  switch(a1 & 7)
  {
    case 0uLL:
      v11[0].__r_.__value_.__r.__words[0] = 0;
      int v5 = google::protobuf::internal::VarintParse<unsigned long long>((char *)this, v11);
      if (v5) {
        google::protobuf::internal::UnknownFieldLiteParserHelper::AddVarint(a2, v4, v11[0].__r_.__value_.__r.__words[0]);
      }
      return v5;
    case 1uLL:
      int v5 = (unsigned __int8 *)this + 8;
      google::protobuf::internal::UnknownFieldLiteParserHelper::AddFixed64((std::string *)a2, v4, *(void *)this);
      return v5;
    case 2uLL:
      uint64_t v8 = google::protobuf::internal::UnknownFieldLiteParserHelper::ParseLengthDelimited(a2, v4, (std::string::value_type *)this, a4);
      goto LABEL_10;
    case 3uLL:
      uint64_t v8 = google::protobuf::internal::UnknownFieldLiteParserHelper::ParseGroup(a2, v4, (char *)this, (int32x2_t *)a4);
LABEL_10:
      int v5 = (unsigned __int8 *)v8;
      break;
    case 4uLL:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.h", 695);
      unsigned int v7 = google::protobuf::internal::LogMessage::operator<<(v11, "Can't happen");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
      break;
    case 5uLL:
      int v5 = (unsigned __int8 *)this + 4;
      google::protobuf::internal::UnknownFieldLiteParserHelper::AddFixed32((std::string *)a2, v4, *(_DWORD *)this);
      break;
    default:
      return 0;
  }
  return v5;
}

void sub_239A0AC1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *google::protobuf::internal::UnknownFieldParse(unsigned int a1, unint64_t *a2, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a4)
{
  if (*a2) {
    unsigned int v7 = (std::string *)(*a2 & 0xFFFFFFFFFFFFFFFELL);
  }
  else {
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(a2);
  }
  int v9 = v7;
  return google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldLiteParserHelper>(a1, &v9, this, a4);
}

unsigned __int8 *google::protobuf::internal::VarintParse<unsigned long long>(char *a1, void *a2)
{
  uint64_t v2 = *a1;
  if (*a1 < 0)
  {
    int v4 = a1[1];
    uint64_t v5 = (v2 + (v4 << 7) - 128);
    if ((v4 & 0x80) != 0)
    {
      uint64_t result = (unsigned __int8 *)(a1 + 3);
      uint64_t v6 = 14;
      while (1)
      {
        v5 += (*(result - 1) - 1) << v6;
        if (((char)*(result - 1) & 0x80000000) == 0) {
          break;
        }
        ++result;
        v6 += 7;
        if (v6 == 70)
        {
          uint64_t result = 0;
          uint64_t v5 = 0;
          break;
        }
      }
      *a2 = v5;
    }
    else
    {
      *a2 = v5;
      return (unsigned __int8 *)(a1 + 2);
    }
  }
  else
  {
    *a2 = v2;
    return (unsigned __int8 *)(a1 + 1);
  }
  return result;
}

uint64_t google::protobuf::internal::EpsCopyInputStream::PushLimit(google::protobuf::internal::EpsCopyInputStream *this, const char *a2, unsigned int a3)
{
  int v4 = (int)a2;
  if (a3 >= 0x7FFFFFF0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/parse_context.h", 127);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  uint64_t v7 = *((void *)this + 1);
  int v8 = v4 - v7 + a3;
  *(void *)this = v7 + (v8 & (v8 >> 31));
  LODWORD(v7) = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = v8;
  return (v7 - v8);
}

void sub_239A0ADCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(google::protobuf::internal::EpsCopyInputStream *this, google::protobuf::internal *a2, int *a3)
{
  unsigned int v5 = *(unsigned __int8 *)a2;
  if (*(char *)a2 < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(a2, (const char *)*(unsigned __int8 *)a2);
    int v16 = result;
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v8;
  }
  else
  {
    uint64_t v6 = (char *)a2 + 1;
    int v16 = (char *)a2 + 1;
  }
  int v9 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v6, v5);
  if (v9 < 0) {
    return 0;
  }
  int v10 = v9;
  if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1))
  {
LABEL_11:
    if (*((_DWORD *)this + 20))
    {
      return 0;
    }
    else
    {
      int v14 = *((_DWORD *)this + 7) + v10;
      *((_DWORD *)this + 7) = v14;
      *(void *)this = *((void *)this + 1) + (v14 & (v14 >> 31));
      return v16;
    }
  }
  else
  {
    while (1)
    {
      uint64_t v15 = 0;
      uint64_t result = (char *)google::protobuf::internal::VarintParse<unsigned long long>(v16, &v15);
      int v16 = result;
      if (!result) {
        break;
      }
      int v11 = v15;
      if (*a3 == a3[1]) {
        google::protobuf::RepeatedField<int>::Reserve(a3, *a3 + 1);
      }
      uint64_t v12 = google::protobuf::RepeatedField<int>::elements((uint64_t)a3);
      uint64_t v13 = *a3;
      *a3 = v13 + 1;
      *(_DWORD *)(v12 + 4 * v13) = v11;
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1)) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

void google::protobuf::internal::UnknownFieldLiteParserHelper::AddVarint(std::string **this, int a2, unint64_t a3)
{
  uint64_t v3 = *this;
  if (*this)
  {
    unint64_t v6 = (8 * a2);
    if (v6 < 0x80)
    {
      LOBYTE(v7) = 8 * a2;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        unint64_t v7 = v6 >> 7;
        unint64_t v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    int v9 = *this;
    if (a3 < 0x80)
    {
      LOBYTE(v10) = a3;
    }
    else
    {
      do
      {
        std::string::push_back(v9, a3 | 0x80);
        unint64_t v10 = a3 >> 7;
        unint64_t v11 = a3 >> 14;
        a3 >>= 7;
      }
      while (v11);
    }
    std::string::push_back(v9, v10);
  }
}

std::string *google::protobuf::internal::UnknownFieldLiteParserHelper::AddFixed64(std::string *this, int a2, uint64_t a3)
{
  v9[1] = *MEMORY[0x263EF8340];
  uint64_t v3 = (std::string *)this->__r_.__value_.__r.__words[0];
  if (this->__r_.__value_.__r.__words[0])
  {
    unsigned int v5 = (std::string **)this;
    unint64_t v6 = (8 * a2) | 1u;
    if (v6 < 0x80)
    {
      LOBYTE(v7) = (8 * a2) | 1;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        unint64_t v7 = v6 >> 7;
        unint64_t v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    v9[0] = a3;
    return std::string::append(*v5, (const std::string::value_type *)v9, 8uLL);
  }
  return this;
}

char *google::protobuf::internal::UnknownFieldLiteParserHelper::ParseLengthDelimited(std::string **a1, int a2, std::string::value_type *this, google::protobuf::internal::EpsCopyInputStream *a4)
{
  int v7 = *this;
  if (*this < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result) {
      return result;
    }
    unint64_t v8 = result;
    int v7 = v10;
  }
  else
  {
    unint64_t v8 = this + 1;
  }
  unint64_t v11 = *a1;
  if (*a1)
  {
    unint64_t v12 = (8 * a2) | 2u;
    if (v12 < 0x80)
    {
      LOBYTE(v13) = v12;
    }
    else
    {
      do
      {
        std::string::push_back(v11, v12 | 0x80);
        unint64_t v13 = v12 >> 7;
        unint64_t v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
    }
    std::string::push_back(v11, v13);
    unint64_t v15 = v7;
    int v16 = *a1;
    if (v7 < 0x80)
    {
      LOBYTE(v17) = v7;
    }
    else
    {
      do
      {
        std::string::push_back(v16, v15 | 0x80);
        unint64_t v17 = v15 >> 7;
        unint64_t v18 = v15 >> 14;
        v15 >>= 7;
      }
      while (v18);
    }
    std::string::push_back(v16, v17);
    std::string::size_type v19 = *a1;
    return (char *)google::protobuf::internal::EpsCopyInputStream::AppendString((uint64_t)a4, v8, v7, v19);
  }
  else if (*((void *)a4 + 1) - (void)v8 + 16 >= v7)
  {
    return &v8[v7];
  }
  else
  {
    return (char *)google::protobuf::internal::EpsCopyInputStream::SkipFallback(a4, v8, v7);
  }
}

char *google::protobuf::internal::UnknownFieldLiteParserHelper::ParseGroup(std::string **a1, int a2, char *a3, int32x2_t *this)
{
  int v7 = *a1;
  int v8 = 8 * a2;
  if (*a1)
  {
    unint64_t v9 = v8 | 3u;
    if (v9 < 0x80)
    {
      LOBYTE(v10) = v8 | 3;
    }
    else
    {
      do
      {
        std::string::push_back(v7, v9 | 0x80);
        unint64_t v10 = v9 >> 7;
        unint64_t v11 = v9 >> 14;
        v9 >>= 7;
      }
      while (v11);
    }
    std::string::push_back(v7, v10);
  }
  int v12 = this[11].i32[0];
  BOOL v13 = __OFSUB__(v12--, 1);
  this[11].i32[0] = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  ++this[11].i32[1];
  unint64_t v14 = google::protobuf::internal::WireFormatParser<google::protobuf::internal::UnknownFieldLiteParserHelper>((int)a1, a3, (google::protobuf::internal::EpsCopyInputStream *)this);
  this[11] = vadd_s32(this[11], (int32x2_t)0xFFFFFFFF00000001);
  __int32 v15 = this[10].i32[0];
  this[10].i32[0] = 0;
  if (v15 != (v8 | 3) || v14 == 0) {
    return 0;
  }
  unint64_t v17 = v14;
  unint64_t v18 = *a1;
  if (v18)
  {
    unint64_t v19 = v8 | 4u;
    if (v19 < 0x80)
    {
      LOBYTE(v20) = v8 | 4;
    }
    else
    {
      do
      {
        std::string::push_back(v18, v19 | 0x80);
        unint64_t v20 = v19 >> 7;
        unint64_t v21 = v19 >> 14;
        v19 >>= 7;
      }
      while (v21);
    }
    std::string::push_back(v18, v20);
  }
  return v17;
}

std::string *google::protobuf::internal::UnknownFieldLiteParserHelper::AddFixed32(std::string *this, int a2, int a3)
{
  uint64_t v3 = (std::string *)this->__r_.__value_.__r.__words[0];
  if (this->__r_.__value_.__r.__words[0])
  {
    unsigned int v5 = (std::string **)this;
    unint64_t v6 = (8 * a2) | 5u;
    if (v6 < 0x80)
    {
      LOBYTE(v7) = (8 * a2) | 5;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        unint64_t v7 = v6 >> 7;
        unint64_t v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    *(_DWORD *)__s = a3;
    return std::string::append(*v5, __s, 4uLL);
  }
  return this;
}

const std::string::value_type *google::protobuf::internal::EpsCopyInputStream::AppendString(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  if (*(void *)(a1 + 8) - (void)__s + 16 >= a3)
  {
    uint64_t v6 = a3;
    std::string::append(this, __s, a3);
    return &__s[v6];
  }
  else
  {
    return google::protobuf::internal::EpsCopyInputStream::AppendStringFallback(a1, __s, a3, this);
  }
}

uint64_t google::protobuf::internal::WireFormatLite::Int32Size(int *a1)
{
  int v1 = *a1;
  if (*a1 < 1) {
    return 0;
  }
  int v3 = 0;
  uint64_t v4 = 0;
  do
  {
    int v5 = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(a1, v3);
    if (v5 < 0) {
      uint64_t v6 = 10;
    }
    else {
      uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    }
    v4 += v6;
    ++v3;
  }
  while (v1 != v3);
  return v4;
}

uint64_t google::protobuf::io::CopyingInputStream::Skip(google::protobuf::io::CopyingInputStream *this)
{
  uint64_t v1 = MEMORY[0x270FA5388](this);
  int v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = 0;
  uint64_t v13 = *MEMORY[0x263EF8340];
  do
  {
    uint64_t v6 = v5;
    BOOL v7 = __OFSUB__(v3, v5);
    int v8 = v3 - v5;
    if ((v8 < 0) ^ v7 | (v8 == 0)) {
      break;
    }
    uint64_t v9 = v8 >= 4096 ? 4096 : v8;
    int v10 = (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(*(void *)v4 + 16))(v4, v12, v9);
    uint64_t v5 = (v10 + v6);
  }
  while (v10 > 0);
  return v6;
}

uint64_t google::protobuf::io::CopyingInputStreamAdaptor::CopyingInputStreamAdaptor(uint64_t result, uint64_t a2, int a3)
{
  *(void *)uint64_t result = &unk_26ED270C8;
  *(void *)(result + 8) = a2;
  *(_WORD *)(result + 16) = 0;
  if (a3 <= 0) {
    int v3 = 0x2000;
  }
  else {
    int v3 = a3;
  }
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 44) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 40) = v3;
  return result;
}

void google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor(google::protobuf::io::CopyingInputStreamAdaptor *this)
{
  *(void *)this = &unk_26ED270C8;
  if (*((unsigned char *)this + 16))
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  uint64_t v3 = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (v3) {
    MEMORY[0x23ECAACA0](v3, 0x1000C8077774924);
  }
}

{
  uint64_t vars8;

  google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t google::protobuf::io::CopyingInputStreamAdaptor::Next(google::protobuf::io::CopyingInputStreamAdaptor *this, const void **a2, int *a3)
{
  if (*((unsigned char *)this + 17)) {
    return 0;
  }
  google::protobuf::io::CopyingInputStreamAdaptor::AllocateBufferIfNeeded((uint64_t)this);
  uint64_t v7 = *((unsigned int *)this + 12);
  if ((int)v7 < 1)
  {
    int v8 = (*(uint64_t (**)(void, void, void))(**((void **)this + 1) + 16))(*((void *)this + 1), *((void *)this + 4), *((unsigned int *)this + 10));
    *((_DWORD *)this + 11) = v8;
    if (v8 <= 0)
    {
      if (v8 < 0) {
        *((unsigned char *)this + 17) = 1;
      }
      google::protobuf::io::CopyingInputStreamAdaptor::FreeBuffer(this);
      return 0;
    }
    uint64_t v9 = (const void *)*((void *)this + 4);
    *((void *)this + 3) += v8;
    *a3 = v8;
    *a2 = v9;
  }
  else
  {
    *a2 = (const void *)(*((void *)this + 4) + *((int *)this + 11) - v7);
    *a3 = v7;
    *((_DWORD *)this + 12) = 0;
  }
  return 1;
}

uint64_t google::protobuf::io::CopyingInputStreamAdaptor::AllocateBufferIfNeeded(uint64_t this)
{
  if (!*(void *)(this + 32)) {
    operator new[]();
  }
  return this;
}

uint64_t google::protobuf::io::CopyingInputStreamAdaptor::FreeBuffer(google::protobuf::io::CopyingInputStreamAdaptor *this)
{
  if (*((_DWORD *)this + 12))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 296);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: (backup_bytes_) == (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v4, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
  *((_DWORD *)this + 11) = 0;
  uint64_t result = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (result) {
    return MEMORY[0x23ECAACA0](result, 0x1000C8077774924);
  }
  return result;
}

void sub_239A0B880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::io::CopyingInputStreamAdaptor::BackUp(google::protobuf::io::CopyingInputStreamAdaptor *this, int a2)
{
  if (*((_DWORD *)this + 12) || !*((void *)this + 4))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 252);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: backup_bytes_ == 0 && buffer_.get() != NULL: ");
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, " BackUp() can only be called after Next().");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*((_DWORD *)this + 11) < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 254);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (count) <= (buffer_used_): ");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, " Can't back up over more bytes than were returned by the last call to Next().");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 257);
    int v8 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (count) >= (0): ");
    uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v8, " Parameter to BackUp() can't be negative.");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  *((_DWORD *)this + 12) = a2;
}

void sub_239A0B9C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::CopyingInputStreamAdaptor::Skip(google::protobuf::io::CopyingInputStreamAdaptor *this, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 263);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)this + 17)) {
    return 0;
  }
  int v6 = *((_DWORD *)this + 12);
  if (v6 >= a2)
  {
    *((_DWORD *)this + 12) = v6 - a2;
    return 1;
  }
  else
  {
    uint64_t v7 = (a2 - v6);
    *((_DWORD *)this + 12) = 0;
    int v8 = (*(uint64_t (**)(void, uint64_t))(**((void **)this + 1) + 24))(*((void *)this + 1), v7);
    *((void *)this + 3) += v8;
    return v8 == v7;
  }
}

void sub_239A0BAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CopyingInputStreamAdaptor::ByteCount(google::protobuf::io::CopyingInputStreamAdaptor *this)
{
  return *((void *)this + 3) - *((int *)this + 12);
}

uint64_t google::protobuf::io::CopyingOutputStreamAdaptor::CopyingOutputStreamAdaptor(uint64_t result, uint64_t a2, int a3)
{
  *(void *)uint64_t result = &unk_26ED27108;
  *(void *)(result + 8) = a2;
  *(_WORD *)(result + 16) = 0;
  if (a3 <= 0) {
    int v3 = 0x2000;
  }
  else {
    int v3 = a3;
  }
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = v3;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void google::protobuf::io::CopyingOutputStreamAdaptor::~CopyingOutputStreamAdaptor(google::protobuf::io::CopyingOutputStreamAdaptor *this)
{
  *(void *)this = &unk_26ED27108;
  google::protobuf::io::CopyingOutputStreamAdaptor::WriteBuffer(this);
  if (*((unsigned char *)this + 16))
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  uint64_t v3 = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (v3) {
    MEMORY[0x23ECAACA0](v3, 0x1000C8077774924);
  }
}

{
  uint64_t vars8;

  google::protobuf::io::CopyingOutputStreamAdaptor::~CopyingOutputStreamAdaptor(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t google::protobuf::io::CopyingOutputStreamAdaptor::WriteBuffer(google::protobuf::io::CopyingOutputStreamAdaptor *this)
{
  if (*((unsigned char *)this + 17)) {
    return 0;
  }
  if (!*((_DWORD *)this + 11)) {
    return 1;
  }
  if ((*(unsigned int (**)(void, void))(**((void **)this + 1) + 16))(*((void *)this + 1), *((void *)this + 4)))
  {
    *((void *)this + 3) += *((int *)this + 11);
    *((_DWORD *)this + 11) = 0;
    return 1;
  }
  *((unsigned char *)this + 17) = 1;
  *((_DWORD *)this + 11) = 0;
  uint64_t result = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (result)
  {
    MEMORY[0x23ECAACA0](result, 0x1000C8077774924);
    return 0;
  }
  return result;
}

uint64_t google::protobuf::io::CopyingOutputStreamAdaptor::Next(google::protobuf::io::CopyingOutputStreamAdaptor *this, void **a2, int *a3)
{
  if (*((_DWORD *)this + 11) != *((_DWORD *)this + 10)
    || (uint64_t result = google::protobuf::io::CopyingOutputStreamAdaptor::WriteBuffer(this), result))
  {
    google::protobuf::io::CopyingInputStreamAdaptor::AllocateBufferIfNeeded((uint64_t)this);
    int v7 = *((_DWORD *)this + 10);
    uint64_t v8 = *((int *)this + 11);
    *a2 = (void *)(*((void *)this + 4) + v8);
    *a3 = v7 - v8;
    *((_DWORD *)this + 11) = *((_DWORD *)this + 10);
    return 1;
  }
  return result;
}

void google::protobuf::io::CopyingOutputStreamAdaptor::BackUp(google::protobuf::io::CopyingOutputStreamAdaptor *this, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 335);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  int v5 = *((_DWORD *)this + 11);
  if (v5 != *((_DWORD *)this + 10))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 336);
    int v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (buffer_used_) == (buffer_size_): ");
    int v7 = google::protobuf::internal::LogMessage::operator<<(v6, " BackUp() can only be called after Next().");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    int v5 = *((_DWORD *)this + 11);
  }
  if (v5 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 338);
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (count) <= (buffer_used_): ");
    char v9 = google::protobuf::internal::LogMessage::operator<<(v8, " Can't back up over more bytes than were returned by the last call to Next().");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    int v5 = *((_DWORD *)this + 11);
  }
  *((_DWORD *)this + 11) = v5 - a2;
}

void sub_239A0BE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CopyingOutputStreamAdaptor::ByteCount(google::protobuf::io::CopyingOutputStreamAdaptor *this)
{
  return *((void *)this + 3) + *((int *)this + 11);
}

void *google::protobuf::internal::ArenaImpl::thread_cache(google::protobuf::internal::ArenaImpl *this)
{
  {
    operator new();
  }
  uint64_t v1 = (pthread_key_t *)google::protobuf::internal::ArenaImpl::thread_cache(void)::thread_cache_;

  return google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Get(v1);
}

void sub_239A0BF38(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Get(pthread_key_t *a1)
{
  uint64_t v1 = pthread_getspecific(*a1);
  if (!v1) {
    operator new();
  }
  return v1;
}

void *google::protobuf::internal::ArenaImpl::SerialArena::New(google::protobuf::internal::ArenaImpl::SerialArena *this, google::protobuf::internal::ArenaImpl::Block *a2, void *a3, google::protobuf::internal::ArenaImpl *a4)
{
  if (*((void *)this + 1) != 24)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/arena.cc", 349);
    int v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (b->pos()) == (kBlockHeaderSize): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (*((void *)this + 2) <= 0x5FuLL)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/arena.cc", 350);
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (kBlockHeaderSize + kSerialArenaSize) <= (b->size()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  char v9 = (void *)google::protobuf::internal::ArenaImpl::Block::Pointer(this, 0x18uLL);
  *((void *)this + 1) = 96;
  *char v9 = a3;
  v9[1] = a2;
  void v9[2] = this;
  v9[5] = google::protobuf::internal::ArenaImpl::Block::Pointer(this, 0x60uLL);
  uint64_t v10 = google::protobuf::internal::ArenaImpl::Block::Pointer(this, *((void *)this + 2));
  v9[3] = 0;
  v9[7] = 0;
  v9[8] = 0;
  v9[6] = v10;
  return v9;
}

void sub_239A0C100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
}

void *google::protobuf::internal::ArenaImpl::NewBlock(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    if (*(void *)(a1 + 48) >= (unint64_t)(2 * v6)) {
      unint64_t v7 = 2 * v6;
    }
    else {
      unint64_t v7 = *(void *)(a1 + 48);
    }
  }
  else
  {
    unint64_t v7 = *(void *)(a1 + 40);
  }
  if (a3 >= 0xFFFFFFFFFFFFFFE8)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/arena.cc", 118);
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (min_bytes) <= (std::numeric_limits<size_t>::max() - kBlockHeaderSize): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  if (v7 <= a3 + 24) {
    unint64_t v9 = a3 + 24;
  }
  else {
    unint64_t v9 = v7;
  }
  uint64_t result = (void *)(*(uint64_t (**)(unint64_t))(a1 + 72))(v9);
  *uint64_t result = a2;
  result[1] = 24;
  result[2] = v9;
  atomic_fetch_add_explicit((atomic_ullong *volatile)(a1 + 16), v9, memory_order_relaxed);
  return result;
}

void sub_239A0C21C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::ArenaImpl::SerialArena::AddCleanupFallback(google::protobuf::internal::ArenaImpl::SerialArena *this, void *a2, void (*a3)(void *))
{
  uint64_t result = (void *)*((void *)this + 3);
  do
  {
    if (result)
    {
      if ((unint64_t)(2 * *result) >= 0x40) {
        uint64_t v7 = 64;
      }
      else {
        uint64_t v7 = 2 * *result;
      }
    }
    else
    {
      uint64_t v7 = 8;
    }
    uint64_t result = (void *)google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(this, (16 * (_WORD)v7 + 23) & 0xFF0);
    uint64_t v8 = *((void *)this + 3);
    *uint64_t result = v7;
    result[1] = v8;
    *((void *)this + 3) = result;
    *((void *)this + 7) = result + 2;
    *((void *)this + 8) = &result[2 * v7 + 2];
  }
  while (!(16 * v7));
  result[2] = a2;
  result[3] = a3;
  *((void *)this + 7) = result + 4;
  return result;
}

unint64_t google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(google::protobuf::internal::ArenaImpl::SerialArena *this, unint64_t a2)
{
  if (((a2 + 7) & 0xFFFFFFFFFFFFFFF8) != a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/arena_impl.h", 160);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (internal::AlignUpTo8(n)) == (n): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  unint64_t result = *((void *)this + 5);
  unint64_t v6 = *((void *)this + 6);
  if (v6 < result)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/arena_impl.h", 161);
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (limit_) >= (ptr_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
    unint64_t result = *((void *)this + 5);
    unint64_t v6 = *((void *)this + 6);
  }
  if (v6 - result < a2) {
    return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedFallback(this, a2);
  }
  *((void *)this + 5) = result + a2;
  return result;
}

void sub_239A0C3C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unint64_t google::protobuf::internal::ArenaImpl::AllocateAligned(atomic_ullong *this, unint64_t a2)
{
  char v4 = google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  if (*v4 == this[4])
  {
    explicit = (google::protobuf::internal::ArenaImpl::SerialArena *)v4[1];
    goto LABEL_3;
  }
  explicit = (google::protobuf::internal::ArenaImpl::SerialArena *)atomic_load_explicit(this + 1, memory_order_acquire);
  if (explicit && *((void **)explicit + 1) == v4)
  {
LABEL_3:
    return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(explicit, a2);
  }

  return google::protobuf::internal::ArenaImpl::AllocateAlignedFallback(this, a2);
}

unint64_t google::protobuf::internal::ArenaImpl::AllocateAlignedFallback(atomic_ullong *this, unint64_t a2)
{
  SerialArena = google::protobuf::internal::ArenaImpl::GetSerialArena(this);

  return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(SerialArena, a2);
}

void *google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(atomic_ullong *this, unint64_t a2, void (*a3)(void *))
{
  unint64_t v6 = google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  if (*v6 == this[4])
  {
    explicit = (google::protobuf::internal::ArenaImpl::SerialArena *)v6[1];
    goto LABEL_3;
  }
  explicit = (google::protobuf::internal::ArenaImpl::SerialArena *)atomic_load_explicit(this + 1, memory_order_acquire);
  if (explicit && *((void **)explicit + 1) == v6)
  {
LABEL_3:
    return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedAndAddCleanup(explicit, a2, a3);
  }

  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback(this, a2, a3);
}

void *google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedAndAddCleanup(google::protobuf::internal::ArenaImpl::SerialArena *this, unint64_t a2, void (*a3)(void *))
{
  Aligned = (void *)google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(this, a2);
  unint64_t v6 = Aligned;
  uint64_t v7 = (void *)*((void *)this + 7);
  if (v7 == *((void **)this + 8))
  {
    google::protobuf::internal::ArenaImpl::SerialArena::AddCleanupFallback(this, Aligned, a3);
  }
  else
  {
    *uint64_t v7 = Aligned;
    v7[1] = a3;
    *((void *)this + 7) = v7 + 2;
  }
  return v6;
}

void *google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback(atomic_ullong *this, unint64_t a2, void (*a3)(void *))
{
  SerialArena = google::protobuf::internal::ArenaImpl::GetSerialArena(this);

  return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedAndAddCleanup(SerialArena, a2, a3);
}

google::protobuf::internal::ArenaImpl *google::protobuf::internal::ArenaImpl::GetSerialArena(atomic_ullong *this)
{
  uint64_t v2 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  if (*(void *)v2 == this[4]) {
    return (google::protobuf::internal::ArenaImpl *)*((void *)v2 + 1);
  }
  unint64_t explicit = atomic_load_explicit(this + 1, memory_order_acquire);
  if (explicit && *(google::protobuf::internal::ArenaImpl **)(explicit + 8) == v2) {
    return (google::protobuf::internal::ArenaImpl *)explicit;
  }
  int v5 = (google::protobuf::internal::ArenaImpl::Block *)google::protobuf::internal::ArenaImpl::thread_cache(v2);

  return google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(this, v5);
}

google::protobuf::internal::ArenaImpl *google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(atomic_ullong *this, google::protobuf::internal::ArenaImpl::Block *a2)
{
  uint64_t v3 = (google::protobuf::internal::ArenaImpl *)this;
  unint64_t explicit = (google::protobuf::internal::ArenaImpl *)atomic_load_explicit(this, memory_order_acquire);
  if (explicit)
  {
    while (*((google::protobuf::internal::ArenaImpl::Block **)explicit + 1) != a2)
    {
      unint64_t explicit = (google::protobuf::internal::ArenaImpl *)*((void *)explicit + 4);
      if (!explicit) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    if ((unint64_t)this[5] <= 0x60) {
      unint64_t v5 = 96;
    }
    else {
      unint64_t v5 = this[5];
    }
    unint64_t v6 = (google::protobuf::internal::ArenaImpl::SerialArena *)((uint64_t (*)(unint64_t))this[9])(v5);
    *(void *)unint64_t v6 = 0;
    *((void *)v6 + 1) = 24;
    *((void *)v6 + 2) = v5;
    atomic_fetch_add_explicit((atomic_ullong *volatile)v3 + 2, v5, memory_order_relaxed);
    this = google::protobuf::internal::ArenaImpl::SerialArena::New(v6, a2, v3, v7);
    unint64_t explicit = (google::protobuf::internal::ArenaImpl *)this;
    atomic_ullong v8 = *(void *)v3;
    this[4] = *(void *)v3;
    atomic_ullong v9 = v8;
    atomic_compare_exchange_strong_explicit((atomic_ullong *volatile)v3, (unint64_t *)&v9, (unint64_t)this, memory_order_release, memory_order_relaxed);
    if (v9 != v8)
    {
      atomic_ullong v10 = v9;
      do
      {
        this[4] = v9;
        atomic_compare_exchange_strong_explicit((atomic_ullong *volatile)v3, (unint64_t *)&v10, (unint64_t)this, memory_order_release, memory_order_relaxed);
        BOOL v11 = v10 == v9;
        atomic_ullong v9 = v10;
      }
      while (!v11);
    }
  }
  char v12 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  *((void *)v12 + 1) = explicit;
  uint64_t v13 = *((void *)v3 + 4);
  *(void *)google::protobuf::internal::ArenaImpl::thread_cache(v12) = v13;
  atomic_store((unint64_t)explicit, (unint64_t *)v3 + 1);
  return explicit;
}

uint64_t google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedFallback(google::protobuf::internal::ArenaImpl::SerialArena *this, unint64_t a2)
{
  uint64_t v4 = *((void *)this + 2);
  *(void *)(v4 + 8) = *(void *)(v4 + 16) - *((void *)this + 6) + *((void *)this + 5);
  unint64_t v5 = google::protobuf::internal::ArenaImpl::NewBlock(*(void *)this, v4, a2);
  *((void *)this + 2) = v5;
  *((void *)this + 5) = google::protobuf::internal::ArenaImpl::Block::Pointer((google::protobuf::internal::ArenaImpl::Block *)v5, v5[1]);
  *((void *)this + 6) = google::protobuf::internal::ArenaImpl::Block::Pointer(*((google::protobuf::internal::ArenaImpl::Block **)this + 2), *(void *)(*((void *)this + 2) + 16));

  return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(this, a2);
}

uint64_t google::protobuf::internal::ArenaImpl::Block::Pointer(google::protobuf::internal::ArenaImpl::Block *this, unint64_t a2)
{
  if (*((void *)this + 2) < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/arena_impl.h", 222);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: n <= size_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  return (uint64_t)this + a2;
}

void sub_239A0C868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ArenaImpl::SpaceAllocated(google::protobuf::internal::ArenaImpl *this)
{
  return *((void *)this + 2);
}

uint64_t google::protobuf::Arena::OnArenaAllocation(uint64_t this, const std::type_info *a2, uint64_t a3)
{
  uint64_t v3 = *(uint64_t (**)(const std::type_info *, uint64_t, void))(this + 88);
  if (v3) {
    return v3(a2, a3, *(void *)(this + 112));
  }
  return this;
}

uint64_t google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Delete(uint64_t result)
{
  if (result) {
    JUMPOUT(0x23ECAACC0);
  }
  return result;
}

uint64_t google::protobuf::internal::DestroyMessage(google::protobuf::internal *this, const void *a2)
{
  return (**(uint64_t (***)(google::protobuf::internal *))this)(this);
}

void google::protobuf::internal::DestroyString(void **this, const void *a2)
{
  if (*((char *)this + 23) < 0) {
    operator delete(*this);
  }
}

void google::protobuf::internal::InitProtobufDefaults(google::protobuf::internal *this)
{
  {
    google::protobuf::internal::fixed_address_empty_string = 0;
    unk_268A0AAF0 = 0;
    qword_268A0AAF8 = 0;
    google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyString, (void (*)(const void *))&google::protobuf::internal::fixed_address_empty_string, v1);
  }
}

void sub_239A0C994(_Unwind_Exception *a1)
{
}

void google::protobuf::internal::InitSCCImpl(_DWORD *a1)
{
  {
    __cxa_atexit((void (*)(void *))google::protobuf::internal::WrappedMutex::~WrappedMutex, &google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::mu, &dword_239A02000);
  }
  uint64_t v2 = (google::protobuf::internal *)pthread_self();
  uint64_t v3 = (uint64_t)v2;
  if (google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::runner)
  {
    if (v2
      && v2 == (google::protobuf::internal *)google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::runner)
    {
      goto LABEL_5;
    }
  }
  else if (!v2)
  {
LABEL_5:
    if (*a1 != 1)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/generated_message_util.cc", 812);
      uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: (scc->visit_status.load(std::memory_order_relaxed)) == (SCCInfoBase::kRunning): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    }
    return;
  }
  google::protobuf::internal::InitProtobufDefaults(v2);
  std::mutex::lock(&google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::mu);
  google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::runner = v3;
  google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::runner = 0;

  std::mutex::unlock(&google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::mu);
}

void sub_239A0CAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_DWORD *google::protobuf::internal::anonymous namespace'::InitSCC_DFS(_DWORD *result)
{
  if (*result == -1)
  {
    uint64_t v1 = (uint64_t (**)(void))result;
    *unint64_t result = 1;
    uint64_t v2 = result + 6;
    int v3 = result[1];
    if (v3 >= 1)
    {
      for (uint64_t i = 0; i < v3; ++i)
      {
        if (*(void *)&v2[2 * i])
        {
          int v3 = *((_DWORD *)v1 + 1);
        }
      }
    }
    uint64_t v5 = v3;
    int v6 = *((_DWORD *)v1 + 2);
    if (v6 >= 1)
    {
      uint64_t v7 = 0;
      atomic_ullong v8 = &v2[2 * v5];
      do
      {
        if (**(void **)&v8[2 * v7])
        {
          int v6 = *((_DWORD *)v1 + 2);
        }
        ++v7;
      }
      while (v7 < v6);
    }
    unint64_t result = (_DWORD *)v1[2]();
    atomic_store(0, (unsigned int *)v1);
  }
  return result;
}

BOOL google::protobuf::internal::MergePartialFromImpl<false>(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  uint64_t v10 = 0x7FFFFFFF00000000;
  int v11 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
  unsigned int v12 = 0x80000000;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  int v3 = google::protobuf::internal::EpsCopyInputStream::InitFrom((uint64_t)v6, a1);
  return (*(uint64_t (**)(uint64_t, void *, unsigned char *))(*(void *)a2 + 104))(a2, v3, v6) && v10 == 1;
}

void *google::protobuf::MessageLite::InitializationErrorString@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "(cannot determine missing fields for lite message)");
}

void google::protobuf::MessageLite::LogInitializationErrorMessage(google::protobuf::MessageLite *this)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/message_lite.cc", 122);
  uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v5, (const std::string::value_type *)&__p);
  google::protobuf::internal::LogFinisher::operator=((int)&v3, (const char **)&v2->__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
}

void sub_239A0CD1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  google::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

void google::protobuf::anonymous namespace'::InitializationErrorMessage(const std::string::value_type *this@<X0>, const char *a2@<X1>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::append(a3, "Can't ");
  std::string::append(a3, this);
  std::string::append(a3, " message of type \"");
  (*(void (**)(void **__return_ptr, const char *))(*(void *)a2 + 16))(&__p, a2);
  if ((v13 & 0x80u) == 0) {
    p_p = (const std::string::value_type *)&__p;
  }
  else {
    p_p = (const std::string::value_type *)__p;
  }
  if ((v13 & 0x80u) == 0) {
    std::string::size_type v8 = v13;
  }
  else {
    std::string::size_type v8 = v12;
  }
  std::string::append(a3, p_p, v8);
  if ((char)v13 < 0) {
    operator delete(__p);
  }
  std::string::append(a3, "\" because it is missing required fields: ");
  (*(void (**)(void **__return_ptr, const char *))(*(void *)a2 + 72))(&__p, a2);
  if ((v13 & 0x80u) == 0) {
    long long v9 = (const std::string::value_type *)&__p;
  }
  else {
    long long v9 = (const std::string::value_type *)__p;
  }
  if ((v13 & 0x80u) == 0) {
    std::string::size_type v10 = v13;
  }
  else {
    std::string::size_type v10 = v12;
  }
  std::string::append(a3, v9, v10);
  if ((char)v13 < 0) {
    operator delete(__p);
  }
}

void sub_239A0CE88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,google::protobuf::io::ZeroCopyInputStream *>(google::protobuf::MessageLite *a1, uint64_t *a2)
{
  (*(void (**)(google::protobuf::MessageLite *))(*(void *)a1 + 56))(a1);
  BOOL result = google::protobuf::internal::MergePartialFromImpl<false>(*a2, (uint64_t)a1);
  if (result)
  {
    if ((*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)a1 + 64))(a1))
    {
      return 1;
    }
    else
    {
      google::protobuf::MessageLite::LogInitializationErrorMessage(a1);
      return 0;
    }
  }
  return result;
}

BOOL google::protobuf::MessageLite::ParseFromFileDescriptor(google::protobuf::MessageLite *this, int a2)
{
  google::protobuf::io::FileInputStream::FileInputStream((google::protobuf::io::FileInputStream *)&v6, a2, -1);
  long long v9 = &v6;
  BOOL v3 = google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,google::protobuf::io::ZeroCopyInputStream *>(this, (uint64_t *)&v9);
  if (v7[4]) {
    BOOL v4 = 0;
  }
  else {
    BOOL v4 = v3;
  }
  int v6 = &unk_26ED26F68;
  google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((google::protobuf::io::CopyingInputStreamAdaptor *)&v8);
  google::protobuf::io::FileInputStream::CopyingFileInputStream::~CopyingFileInputStream((google::protobuf::io::FileInputStream::CopyingFileInputStream *)v7);
  return v4;
}

void sub_239A0CFF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL google::protobuf::MessageLite::SerializeToZeroCopyStream(google::protobuf::MessageLite *this, google::protobuf::io::ZeroCopyOutputStream *a2)
{
  if (((*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 64))(this) & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/message_lite.cc", 370);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: IsInitialized(): ");
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, (const std::string::value_type *)&__p);
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::MessageLite::SerializePartialToZeroCopyStream(this, a2);
}

void sub_239A0D0DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  google::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::MessageLite::SerializePartialToZeroCopyStream(google::protobuf::MessageLite *this, google::protobuf::io::ZeroCopyOutputStream *a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  unint64_t v4 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 88))(this);
  if (v4 >> 31)
  {
    uint64_t v5 = v4;
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/message_lite.cc", 378);
    (*(void (**)(void **__return_ptr, google::protobuf::MessageLite *))(*(void *)this + 16))(__p, this);
    int v6 = google::protobuf::internal::LogMessage::operator<<(v14, (const std::string::value_type *)__p);
    char v7 = google::protobuf::internal::LogMessage::operator<<(v6, " exceeded maximum protobuf size of 2GB: ");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, v5);
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    return 0;
  }
  else
  {
    v14[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v14[0].__r_.__value_.__r.__words[2];
    v14[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v14[0].__r_.__value_.__r.__words[2];
    uint64_t v15 = a2;
    __int16 v16 = 0;
    char v17 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ & 1;
    std::string::size_type v10 = (char *)(*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 112))(this);
    google::protobuf::io::EpsCopyOutputStream::Trim((google::protobuf::io::EpsCopyOutputStream *)v14, v10);
    return (_BYTE)v16 == 0;
  }
}

void sub_239A0D2A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  google::protobuf::internal::LogMessage::~LogMessage(&a17);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::MessageLite::SerializeToFileDescriptor(google::protobuf::MessageLite *this, int a2)
{
  google::protobuf::io::FileOutputStream::FileOutputStream((google::protobuf::io::FileOutputStream *)v5, a2, -1);
  if (google::protobuf::MessageLite::SerializeToZeroCopyStream(this, (google::protobuf::io::ZeroCopyOutputStream *)v5)) {
    uint64_t v3 = google::protobuf::io::FileOutputStream::Flush((google::protobuf::io::FileOutputStream *)v5);
  }
  else {
    uint64_t v3 = 0;
  }
  google::protobuf::io::FileOutputStream::~FileOutputStream((google::protobuf::io::FileOutputStream *)v5);
  return v3;
}

void sub_239A0D33C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t google::protobuf::MessageLite::GetArena(google::protobuf::MessageLite *this)
{
  return 0;
}

void YAML::Clone(YAML *this, const YAML::Node *a2)
{
  YAML::NodeEvents::NodeEvents((YAML::NodeEvents *)v3, this);
  YAML::NodeBuilder::NodeBuilder((YAML::NodeBuilder *)&v2);
}

void sub_239A0D3D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  YAML::NodeBuilder::~NodeBuilder((YAML::NodeBuilder *)&a9);
  YAML::NodeEvents::~NodeEvents((YAML::NodeEvents *)(v9 - 64));
  _Unwind_Resume(a1);
}

void YAML::NodeEvents::~NodeEvents(YAML::NodeEvents *this)
{
  std::__tree<std::__value_type<YAML::detail::node_ref const*,int>,std::__map_value_compare<YAML::detail::node_ref const*,std::__value_type<YAML::detail::node_ref const*,int>,std::less<YAML::detail::node_ref const*>,true>,std::allocator<std::__value_type<YAML::detail::node_ref const*,int>>>::destroy((uint64_t)this + 24, *((void **)this + 4));
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 1);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void std::__tree<std::__value_type<YAML::detail::node_ref const*,int>,std::__map_value_compare<YAML::detail::node_ref const*,std::__value_type<YAML::detail::node_ref const*,int>,std::less<YAML::detail::node_ref const*>,true>,std::allocator<std::__value_type<YAML::detail::node_ref const*,int>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<YAML::detail::node_ref const*,int>,std::__map_value_compare<YAML::detail::node_ref const*,std::__value_type<YAML::detail::node_ref const*,int>,std::less<YAML::detail::node_ref const*>,true>,std::allocator<std::__value_type<YAML::detail::node_ref const*,int>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<YAML::detail::node_ref const*,int>,std::__map_value_compare<YAML::detail::node_ref const*,std::__value_type<YAML::detail::node_ref const*,int>,std::less<YAML::detail::node_ref const*>,true>,std::allocator<std::__value_type<YAML::detail::node_ref const*,int>>>::destroy(a1, a2[1]);
    operator delete(a2);
  }
}

void std::__shared_weak_count::__release_shared[abi:ne180100](std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

double siri::intelligence::Character::Character(siri::intelligence::Character *this)
{
  *((void *)this + 8) = 0;
  double result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  return result;
}

{
  double result;

  *((void *)this + 8) = 0;
  double result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  return result;
}

void siri::intelligence::Character::GetId(siri::intelligence::Character *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)this, *((void *)this + 1));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)this;
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 2);
  }
}

std::string *siri::intelligence::Character::SetName(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 1, a2);
}

void siri::intelligence::Character::GetName(siri::intelligence::Character *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 47) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 3), *((void *)this + 4));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 24);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 5);
  }
}

std::string *siri::intelligence::Character::SetTtsVoiceName(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 2, a2);
}

void siri::intelligence::Character::GetTtsVoiceName(siri::intelligence::Character *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 71) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 6), *((void *)this + 7));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *((_OWORD *)this + 3);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 8);
  }
}

void sub_239A0D660(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  MEMORY[0x23ECAACC0](v3, 0x20C40A4A59CD2);

  _Unwind_Resume(a1);
}

void sub_239A0DA18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  uint64_t v29 = *(void *)(v27 - 56);
  *(void *)(v27 - 64) = &unk_26ED2A490;
  *(void *)(v27 - 56) = 0;
  if (v29) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v27 - 56, v29);
  }

  _Unwind_Resume(a1);
}

void __copy_helper_block_ea8_32c31_ZTSN4siri12intelligence5TimerE(uint64_t a1, uint64_t a2)
{
}

void __destroy_helper_block_ea8_32c31_ZTSN4siri12intelligence5TimerE(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v1 = (void *)(a1 + 40);
  uint64_t v2 = v3;
  *(v1 - 1) = &unk_26ED2A490;
  *uint64_t v1 = 0;
  if (v3) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)v1, v2);
  }
}

void sub_239A0DFE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  if (*(char *)(v32 - 89) < 0) {
    operator delete(*(void **)(v32 - 112));
  }
  IEDefer::~IEDefer((void (***)(void))(v32 - 120));
  uint64_t v34 = a30;
  a30 = 0;
  if (v34) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a30, v34);
  }
  uint64_t v35 = *(void *)(v32 - 72);
  *(void *)(v32 - 80) = &unk_26ED2A490;
  *(void *)(v32 - 72) = 0;
  if (v35) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v32 - 72, v35);
  }

  _Unwind_Resume(a1);
}

void sub_239A0E5E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  if (*(char *)(v32 - 89) < 0) {
    operator delete(*(void **)(v32 - 112));
  }
  IEDefer::~IEDefer((void (***)(void))(v32 - 120));
  uint64_t v34 = a30;
  a30 = 0;
  if (v34) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a30, v34);
  }
  uint64_t v35 = *(void *)(v32 - 72);
  *(void *)(v32 - 80) = &unk_26ED2A490;
  *(void *)(v32 - 72) = 0;
  if (v35) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v32 - 72, v35);
  }

  _Unwind_Resume(a1);
}

void sub_239A0EAF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  if (*(char *)(v30 - 57) < 0) {
    operator delete(*(void **)(v30 - 80));
  }
  IEDefer::~IEDefer((void (***)(void))(v30 - 88));
  uint64_t v32 = a28;
  a28 = 0;
  if (v32) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a28, v32);
  }
  uint64_t v33 = *(void *)(v30 - 40);
  *(void *)(v30 - 48) = &unk_26ED2A490;
  *(void *)(v30 - 40) = 0;
  if (v33) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v30 - 40, v33);
  }

  _Unwind_Resume(a1);
}

void sub_239A0F024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v30 - 73) < 0) {
    operator delete(*(void **)(v30 - 96));
  }
  IEDefer::~IEDefer((void (***)(void))(v30 - 104));
  uint64_t v32 = a28;
  a28 = 0;
  if (v32) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a28, v32);
  }
  uint64_t v33 = *(void *)(v30 - 56);
  *(void *)(v30 - 64) = &unk_26ED2A490;
  *(void *)(v30 - 56) = 0;
  if (v33) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v30 - 56, v33);
  }

  _Unwind_Resume(a1);
}

void sub_239A0F51C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  if (*(char *)(v30 - 57) < 0) {
    operator delete(*(void **)(v30 - 80));
  }
  IEDefer::~IEDefer((void (***)(void))(v30 - 88));
  uint64_t v32 = a28;
  a28 = 0;
  if (v32) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a28, v32);
  }
  uint64_t v33 = *(void *)(v30 - 40);
  *(void *)(v30 - 48) = &unk_26ED2A490;
  *(void *)(v30 - 40) = 0;
  if (v33) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v30 - 40, v33);
  }

  _Unwind_Resume(a1);
}

void sub_239A0F8E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v24 = *(void *)(v22 - 40);
  *(void *)(v22 - 48) = &unk_26ED2A490;
  *(void *)(v22 - 40) = 0;
  if (v24) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v22 - 40, v24);
  }
  _Unwind_Resume(exception_object);
}

void sub_239A0FE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }
  IEDefer::~IEDefer((void (***)(void))(v18 - 112));
  uint64_t v20 = *(void *)(v18 - 128);
  *(void *)(v18 - 136) = &unk_26ED2A490;
  *(void *)(v18 - 128) = 0;
  if (v20) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v18 - 128, v20);
  }
  uint64_t v21 = *(void *)(v18 - 96);
  *(void *)(v18 - 104) = &unk_26ED2A490;
  *(void *)(v18 - 96) = 0;
  if (v21) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v18 - 96, v21);
  }

  _Unwind_Resume(a1);
}

void sub_239A10384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  uint64_t v27 = *(void *)(v25 - 56);
  *(void *)(v25 - 64) = &unk_26ED2A490;
  *(void *)(v25 - 56) = 0;
  if (v27) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v25 - 56, v27);
  }

  _Unwind_Resume(a1);
}

void sub_239A107CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void (**a18)(void), void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  IEDefer::~IEDefer(&a18);
  uint64_t v27 = a16;
  a16 = 0;
  if (v27) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a16, v27);
  }
  uint64_t v28 = *(void *)(v25 - 40);
  *(void *)(v25 - 48) = &unk_26ED2A490;
  *(void *)(v25 - 40) = 0;
  if (v28) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v25 - 40, v28);
  }

  _Unwind_Resume(a1);
}

void sub_239A10C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void (**a23)(void),void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  std::string __p = &a24;
  std::vector<siri::intelligence::ExecStateResponse>::__destroy_vector::operator()[abi:ne180100](&__p);
  IEDefer::~IEDefer(&a23);
  uint64_t v31 = a21;
  a20 = &unk_26ED2A490;
  a21 = 0;
  if (v31) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a21, v31);
  }
  uint64_t v32 = *(void *)(v29 - 56);
  *(void *)(v29 - 64) = &unk_26ED2A490;
  *(void *)(v29 - 56) = 0;
  if (v32) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v29 - 56, v32);
  }
  _Unwind_Resume(a1);
}

void sub_239A1104C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void (**a18)(void), void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  IEDefer::~IEDefer(&a18);
  uint64_t v27 = a16;
  a16 = 0;
  if (v27) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a16, v27);
  }
  uint64_t v28 = *(void *)(v25 - 40);
  *(void *)(v25 - 48) = &unk_26ED2A490;
  *(void *)(v25 - 40) = 0;
  if (v28) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v25 - 40, v28);
  }

  _Unwind_Resume(a1);
}

void sub_239A11464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  siri::intelligence::Intent::~Intent((siri::intelligence::Intent *)&__p);
  IEDefer::~IEDefer((void (***)(void))(v17 - 72));
  uint64_t v19 = *(void *)(v17 - 88);
  *(void *)(v17 - 96) = &unk_26ED2A490;
  *(void *)(v17 - 88) = 0;
  if (v19) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v17 - 88, v19);
  }
  uint64_t v20 = *(void *)(v17 - 56);
  *(void *)(v17 - 64) = &unk_26ED2A490;
  *(void *)(v17 - 56) = 0;
  if (v20) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v17 - 56, v20);
  }

  _Unwind_Resume(a1);
}

void sub_239A11898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void (**a18)(void), void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  IEDefer::~IEDefer(&a18);
  uint64_t v27 = a16;
  a16 = 0;
  if (v27) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a16, v27);
  }
  uint64_t v28 = *(void *)(v25 - 64);
  *(void *)(v25 - 72) = &unk_26ED2A490;
  *(void *)(v25 - 64) = 0;
  if (v28) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v25 - 64, v28);
  }
  _Unwind_Resume(a1);
}

void sub_239A11B18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_239A11D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  IEDefer::~IEDefer((void (***)(void))&__p);
  if (a15) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v22 + 40, a15);
  }
  uint64_t v25 = *(void *)(v23 - 40);
  *(void *)(v23 - 48) = &unk_26ED2A490;
  *(void *)(v23 - 40) = 0;
  if (v25) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v23 - 40, v25);
  }
  _Unwind_Resume(a1);
}

void sub_239A120D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  IEDefer::~IEDefer((void (***)(void))&__p);
  if (a15) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v22 + 40, a15);
  }
  uint64_t v25 = *(void *)(v23 - 40);
  *(void *)(v23 - 48) = &unk_26ED2A490;
  *(void *)(v23 - 40) = 0;
  if (v25) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v23 - 40, v25);
  }
  _Unwind_Resume(a1);
}

void sub_239A1242C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  IEDefer::~IEDefer((void (***)(void))&__p);
  uint64_t v24 = a15;
  a15 = 0;
  if (v24) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a15, v24);
  }
  uint64_t v25 = *(void *)(v22 - 40);
  *(void *)(v22 - 48) = &unk_26ED2A490;
  *(void *)(v22 - 40) = 0;
  if (v25) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v22 - 40, v25);
  }
  _Unwind_Resume(a1);
}

void sub_239A12830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25)
{
  siri::intelligence::DirectInvocation::~DirectInvocation((siri::intelligence::DirectInvocation *)&__p);
  IEDefer::~IEDefer((void (***)(void))(v26 - 72));
  uint64_t v28 = a25;
  a24 = &unk_26ED2A490;
  a25 = 0;
  if (v28) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a25, v28);
  }
  uint64_t v29 = *(void *)(v26 - 56);
  *(void *)(v26 - 64) = &unk_26ED2A490;
  *(void *)(v26 - 56) = 0;
  if (v29) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v26 - 56, v29);
  }

  _Unwind_Resume(a1);
}

void siri::intelligence::DirectInvocation::~DirectInvocation(siri::intelligence::DirectInvocation *this)
{
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 4);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*(void **)this);
  }
}

void sub_239A12CDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25)
{
  siri::intelligence::DirectInvocation::~DirectInvocation((siri::intelligence::DirectInvocation *)&__p);
  IEDefer::~IEDefer((void (***)(void))(v26 - 72));
  uint64_t v28 = a25;
  a24 = &unk_26ED2A490;
  a25 = 0;
  if (v28) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a25, v28);
  }
  uint64_t v29 = *(void *)(v26 - 56);
  *(void *)(v26 - 64) = &unk_26ED2A490;
  *(void *)(v26 - 56) = 0;
  if (v29) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v26 - 56, v29);
  }

  _Unwind_Resume(a1);
}

void sub_239A131BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (*(char *)(v21 - 57) < 0) {
    operator delete(*(void **)(v21 - 80));
  }
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  IEDefer::~IEDefer((void (***)(void))(v21 - 88));
  uint64_t v23 = a20;
  a20 = 0;
  if (v23) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a20, v23);
  }
  uint64_t v24 = *(void *)(v21 - 40);
  *(void *)(v21 - 48) = &unk_26ED2A490;
  *(void *)(v21 - 40) = 0;
  if (v24) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v21 - 40, v24);
  }

  _Unwind_Resume(a1);
}

void sub_239A13580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  IEDefer::~IEDefer((void (***)(void))&__p);
  if (a15) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v22 + 40, a15);
  }
  uint64_t v25 = *(void *)(v23 - 40);
  *(void *)(v23 - 48) = &unk_26ED2A490;
  *(void *)(v23 - 40) = 0;
  if (v25) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v23 - 40, v25);
  }
  _Unwind_Resume(a1);
}

void sub_239A13A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,char a30,void *a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38)
{
  if (v39) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v39);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&a30, a31);

  IEDefer::~IEDefer((void (***)(void))(v40 - 104));
  uint64_t v42 = a38;
  a37 = &unk_26ED2A490;
  a38 = 0;
  if (v42) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a38, v42);
  }
  uint64_t v43 = *(void *)(v40 - 88);
  *(void *)(v40 - 96) = &unk_26ED2A490;
  *(void *)(v40 - 88) = 0;
  if (v43) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v40 - 88, v43);
  }
  _Unwind_Resume(a1);
}

void sub_239A13F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,std::__shared_weak_count *a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  if (a21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a21);
  }
  IEDefer::~IEDefer((void (***)(void))(v29 - 120));
  uint64_t v31 = a27;
  a27 = 0;
  if (v31) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a27, v31);
  }
  uint64_t v32 = *(void *)(v29 - 72);
  *(void *)(v29 - 80) = &unk_26ED2A490;
  *(void *)(v29 - 72) = 0;
  if (v32) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v29 - 72, v32);
  }

  _Unwind_Resume(a1);
}

void sub_239A14570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void (**a32)(void))
{
  if (*(char *)(v33 - 105) < 0) {
    operator delete(*(void **)(v33 - 128));
  }
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }

  IEDefer::~IEDefer(&a32);
  uint64_t v35 = a30;
  a30 = 0;
  if (v35) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a30, v35);
  }
  uint64_t v36 = *(void *)(v33 - 88);
  *(void *)(v33 - 96) = &unk_26ED2A490;
  *(void *)(v33 - 88) = 0;
  if (v36) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v33 - 88, v36);
  }
  _Unwind_Resume(a1);
}

void sub_239A14A50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  IEDefer::~IEDefer((void (***)(void))(v31 - 96));
  uint64_t v33 = a30;
  a30 = 0;
  if (v33) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a30, v33);
  }
  uint64_t v34 = *(void *)(v31 - 80);
  *(void *)(v31 - 88) = &unk_26ED2A490;
  *(void *)(v31 - 80) = 0;
  if (v34) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v31 - 80, v34);
  }
  _Unwind_Resume(a1);
}

void siri::intelligence::ResolvedCondition::~ResolvedCondition(void **this)
{
  uint64_t v2 = this + 7;
  std::vector<siri::intelligence::ResolvedCondition>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*this);
  }
}

void sub_239A14FF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35)
{
  if (v35) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v35);
  }
  IEDefer::~IEDefer((void (***)(void))&__p);
  uint64_t v39 = a25;
  a25 = 0;
  if (v39) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a25, v39);
  }
  uint64_t v40 = a35;
  a34 = &unk_26ED2A490;
  a35 = 0;
  if (v40) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a35, v40);
  }
  _Unwind_Resume(a1);
}

void sub_239A152F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  _Unwind_Resume(a1);
}

void sub_239A15360()
{
  if (!v0) {
    JUMPOUT(0x239A15358);
  }
  JUMPOUT(0x239A15350);
}

void sub_239A154B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__function::__value_func<std::string ()(std::string const&,std::shared_ptr<siri::intelligence::VariableDictionary>)>::~__value_func[abi:ne180100]((uint64_t *)va);
  std::__shared_weak_count::__release_shared[abi:ne180100](v3);

  _Unwind_Resume(a1);
}

void sub_239A155D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void siri::intelligence::Intent::~Intent(siri::intelligence::Intent *this)
{
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 33);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)*((void *)this + 31);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  if (*((char *)this + 239) < 0) {
    operator delete(*((void **)this + 27));
  }
  unint64_t v4 = (void **)((char *)this + 192);
  std::vector<siri::intelligence::NLParameters>::__destroy_vector::operator()[abi:ne180100](&v4);
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)this + 168, *((void **)this + 22));
  unint64_t v4 = (void **)((char *)this + 144);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v4);
  unint64_t v4 = (void **)((char *)this + 120);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v4);
  if (*((char *)this + 119) < 0) {
    operator delete(*((void **)this + 12));
  }
  if (*((char *)this + 95) < 0) {
    operator delete(*((void **)this + 9));
  }
  if (*((char *)this + 71) < 0) {
    operator delete(*((void **)this + 6));
  }
  if (*((char *)this + 47) < 0) {
    operator delete(*((void **)this + 3));
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*(void **)this);
  }
}

void std::vector<siri::intelligence::NLParameters>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 40;
        std::allocator<siri::intelligence::NLParameters>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<siri::intelligence::NLParameters>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(std::__shared_weak_count **)(a2 + 32);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t v4 = *(void **)a2;
    operator delete(v4);
  }
}

void std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::string>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

std::string *std::pair<std::string const,std::shared_ptr<siri::intelligence::Variable>>::pair[abi:ne180100](std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  std::string::size_type v5 = *((void *)a2 + 4);
  this[1].__r_.__value_.__r.__words[0] = *((void *)a2 + 3);
  this[1].__r_.__value_.__l.__size_ = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return this;
}

void std::vector<siri::intelligence::ResolvedCondition>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    std::string::size_type v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 80;
        std::allocator<siri::intelligence::ResolvedCondition>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      std::string::size_type v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<siri::intelligence::ResolvedCondition>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 56;
  std::vector<siri::intelligence::ResolvedCondition>::__destroy_vector::operator()[abi:ne180100](&v3);
  if (*(char *)(a2 + 47) < 0) {
    operator delete(*(void **)(a2 + 24));
  }
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
}

void std::vector<std::shared_ptr<siri::intelligence::Variable>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::shared_ptr<siri::intelligence::Variable>>::__clear[abi:ne180100]((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::shared_ptr<siri::intelligence::Variable>>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 16)
  {
    uint64_t v4 = *(std::__shared_weak_count **)(i - 8);
    if (v4) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    }
  }
  a1[1] = v2;
}

void std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a1, a2[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void std::vector<siri::intelligence::ExecStateResponse>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    std::string::size_type v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 312;
        std::allocator<siri::intelligence::ExecStateResponse>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      std::string::size_type v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<siri::intelligence::ExecStateResponse>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  int v6 = (void **)(a2 + 288);
  std::vector<std::shared_ptr<siri::intelligence::Variable>>::__destroy_vector::operator()[abi:ne180100](&v6);
  *(void *)(a2 + 152) = &unk_26ED272B0;
  uint64_t v3 = *(std::__shared_weak_count **)(a2 + 280);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  siri::intelligence::ResponseBase::~ResponseBase((void **)(a2 + 152));
  *(void *)(a2 + 16) = &unk_26ED27318;
  uint64_t v4 = *(std::__shared_weak_count **)(a2 + 144);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  siri::intelligence::ResponseBase::~ResponseBase((void **)(a2 + 16));
  std::string::size_type v5 = *(std::__shared_weak_count **)(a2 + 8);
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
}

void siri::intelligence::BehaviorResponse::~BehaviorResponse(siri::intelligence::BehaviorResponse *this)
{
  *(void *)this = &unk_26ED272B0;
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 16);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  siri::intelligence::ResponseBase::~ResponseBase((void **)this);
}

{
  std::__shared_weak_count *v2;
  uint64_t vars8;

  *(void *)this = &unk_26ED272B0;
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 16);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  siri::intelligence::ResponseBase::~ResponseBase((void **)this);

  JUMPOUT(0x23ECAACC0);
}

void siri::intelligence::DialogResponse::~DialogResponse(siri::intelligence::DialogResponse *this)
{
  *(void *)this = &unk_26ED27318;
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 16);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  siri::intelligence::ResponseBase::~ResponseBase((void **)this);
}

{
  std::__shared_weak_count *v2;
  uint64_t vars8;

  *(void *)this = &unk_26ED27318;
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 16);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  siri::intelligence::ResponseBase::~ResponseBase((void **)this);

  JUMPOUT(0x23ECAACC0);
}

void siri::intelligence::ResponseBase::~ResponseBase(void **this)
{
  *this = &unk_26ED272F8;
  uint64_t v2 = this + 12;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 79) < 0) {
    operator delete(this[7]);
  }
  if (*((char *)this + 55) < 0) {
    operator delete(this[4]);
  }
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

{
  uint64_t vars8;

  siri::intelligence::ResponseBase::~ResponseBase(this);

  JUMPOUT(0x23ECAACC0);
}

void std::__tree<std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>>>::destroy(a1, a2[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<siri::intelligence::Variable>>,0>((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<siri::intelligence::Variable>>,0>(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

void std::__tree<std::string>::destroy(uint64_t a1, char *a2)
{
  if (a2)
  {
    std::__tree<std::string>::destroy(a1, *(void *)a2);
    std::__tree<std::string>::destroy(a1, *((void *)a2 + 1));
    if (a2[55] < 0) {
      operator delete(*((void **)a2 + 4));
    }
    operator delete(a2);
  }
}

void std::__shared_ptr_emplace<siri::intelligence::Callbacks>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26ED271D0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<siri::intelligence::Callbacks>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26ED271D0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x23ECAACC0);
}

void *std::__shared_ptr_emplace<siri::intelligence::Callbacks>::__on_zero_shared(uint64_t a1)
{
  return std::__function::__value_func<std::string ()(std::string const&,std::shared_ptr<siri::intelligence::VariableDictionary>)>::~__value_func[abi:ne180100]((void *)(a1 + 24));
}

void sub_239A162F8(_Unwind_Exception *a1)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(a1);
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

void *std::__function::__value_func<std::string ()(std::string const&,std::shared_ptr<siri::intelligence::VariableDictionary>)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t siri::intelligence::Log::IsOutputToStdout(siri::intelligence::Log *this)
{
  return siri::intelligence::Log::sOutputToStdout;
}

uint64_t siri::intelligence::Log::SetOutputToStdout(uint64_t this)
{
  siri::intelligence::Log::sOutputToStdout = this;
  return this;
}

void siri::intelligence::Log::Info(siri::intelligence::Log *this, const char *a2, ...)
{
  va_start(va, a2);
  *(void *)uint64_t v4 = 0;
  vasprintf((char **)v4, (const char *)this, va);
  if (*(void *)v4)
  {
    siri::intelligence::LogInternal((siri::intelligence *)1, *(const char **)v4, v3);
    free(*(void **)v4);
  }
  else
  {
    siri::intelligence::LogInternal((siri::intelligence *)1, (const char *)this, v3);
  }
}

void siri::intelligence::LogInternal(siri::intelligence *this, const char *a2, const char *a3)
{
  int v4 = (int)this;
  uint64_t v19 = *MEMORY[0x263EF8340];
  if (!siri::intelligence::LogInternal(os_log_type_t,char const*)::sLog)
  {
    os_log_t v5 = os_log_create("com.apple.siri.AuthoredFlow", "FlowEngine");
    int v6 = (void *)siri::intelligence::LogInternal(os_log_type_t,char const*)::sLog;
    siri::intelligence::LogInternal(os_log_type_t,char const*)::sLog = (uint64_t)v5;
  }
  char v7 = "Debug: ";
  uint64_t v8 = "";
  if (v4 == 16) {
    uint64_t v8 = "Error: ";
  }
  if (v4 != 2) {
    char v7 = v8;
  }
  if (v4) {
    uint64_t v9 = (char *)v7;
  }
  else {
    uint64_t v9 = "Warning: ";
  }
  std::string::basic_string[abi:ne180100]<0>(__p, v9);
  std::string::size_type v10 = siri::intelligence::LogInternal(os_log_type_t,char const*)::sLog;
  if (os_log_type_enabled((os_log_t)siri::intelligence::LogInternal(os_log_type_t,char const*)::sLog, (os_log_type_t)v4))
  {
    char v11 = __p;
    if (v14 < 0) {
      char v11 = (void **)__p[0];
    }
    *(_DWORD *)buf = 136315394;
    __int16 v16 = v11;
    __int16 v17 = 2080;
    uint64_t v18 = a2;
    _os_log_impl(&dword_239A02000, v10, (os_log_type_t)v4, "%s%s", buf, 0x16u);
  }
  if (siri::intelligence::Log::sOutputToStdout)
  {
    std::string::size_type v12 = __p;
    if (v14 < 0) {
      std::string::size_type v12 = (void **)__p[0];
    }
    printf("%s%s\n", (const char *)v12, a2);
  }
  if (v14 < 0) {
    operator delete(__p[0]);
  }
}

void siri::intelligence::Log::Warning(siri::intelligence::Log *this, const char *a2, ...)
{
  va_start(va, a2);
  *(void *)int v4 = 0;
  vasprintf((char **)v4, (const char *)this, va);
  if (*(void *)v4)
  {
    siri::intelligence::LogInternal(0, *(const char **)v4, v3);
    free(*(void **)v4);
  }
  else
  {
    siri::intelligence::LogInternal(0, (const char *)this, v3);
  }
}

void siri::intelligence::Log::Error(siri::intelligence::Log *this, const char *a2, ...)
{
  va_start(va, a2);
  *(void *)int v4 = 0;
  vasprintf((char **)v4, (const char *)this, va);
  if (*(void *)v4)
  {
    siri::intelligence::LogInternal((siri::intelligence *)0x10, *(const char **)v4, v3);
    free(*(void **)v4);
  }
  else
  {
    siri::intelligence::LogInternal((siri::intelligence *)0x10, (const char *)this, v3);
  }
}

void siri::intelligence::Log::Debug(siri::intelligence::Log *this, const char *a2, ...)
{
  va_start(va, a2);
  *(void *)int v4 = 0;
  vasprintf((char **)v4, (const char *)this, va);
  if (*(void *)v4)
  {
    siri::intelligence::LogInternal((siri::intelligence *)2, *(const char **)v4, v3);
    free(*(void **)v4);
  }
  else
  {
    siri::intelligence::LogInternal((siri::intelligence *)2, (const char *)this, v3);
  }
}

double siri::intelligence::TestSuite::TestSuite(siri::intelligence::TestSuite *this)
{
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  return result;
}

{
  double result;

  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  return result;
}

uint64_t siri::intelligence::TestSuite::LoadTests(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (v6 != *a1)
  {
    do
    {
      v6 -= 152;
      std::allocator<siri::intelligence::TestCase>::destroy[abi:ne180100]((uint64_t)(a1 + 2), v6);
    }
    while (v6 != v5);
  }
  uint64_t v7 = a1[3];
  a1[1] = v5;
  for (uint64_t i = a1[4]; i != v7; std::allocator<siri::intelligence::TestParseError>::destroy[abi:ne180100]((uint64_t)(a1 + 5), i))i -= 48;
  a1[4] = v7;
  siri::intelligence::ListTemplateDir(a2, a3, 4, v15);
  if (v15[0] != v15[1])
  {
    if (*(char *)(v15[0] + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&v14, *(const std::string::value_type **)v15[0], *(void *)(v15[0] + 8));
    }
    else
    {
      long long v9 = *(_OWORD *)v15[0];
      v14.__r_.__value_.__r.__words[2] = *(void *)(v15[0] + 16);
      *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v9;
    }
    _ZNSt3__115allocate_sharedB8ne180100IN8protobuf8FlowTestENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(&v13);
    siri::intelligence::Configuration::GetFlowIdFromPath(&v14, (uint64_t)&v12);
    YAML::LoadFile();
  }
  v16.__r_.__value_.__r.__words[0] = (std::string::size_type)v15;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v16);
  return 1;
}

void sub_239A1884C(_Unwind_Exception *a1)
{
  if (SLOBYTE(STACK[0x3A7]) < 0) {
    operator delete((void *)STACK[0x390]);
  }
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&STACK[0x750]);
  __cxa_end_catch();
  YAML::Node::~Node((YAML::Node *)&v2);
  siri::intelligence::ValidationResults::~ValidationResults((siri::intelligence::ValidationResults *)v3);
  if (v4 < 0) {
    operator delete(v3[6]);
  }
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  long long v9 = (void **)&v8;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v9);
  _Unwind_Resume(a1);
}

void sub_239A18910(void *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  JUMPOUT(0x239A18A7CLL);
}

void sub_239A18920()
{
}

void sub_239A18928()
{
}

void sub_239A18934()
{
}

void sub_239A1893C()
{
}

void sub_239A18944(_Unwind_Exception *a1)
{
  if (SLOBYTE(STACK[0x767]) < 0) {
    operator delete((void *)STACK[0x750]);
  }
  STACK[0x750] = (unint64_t)&STACK[0x390];
  std::vector<siri::intelligence::ValidationResult>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x750]);
  YAML::Node::~Node((YAML::Node *)&v2);
  siri::intelligence::ValidationResults::~ValidationResults((siri::intelligence::ValidationResults *)v3);
  if (v4 < 0) {
    operator delete(v3[6]);
  }
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  long long v9 = (void **)&v8;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v9);
  _Unwind_Resume(a1);
}

void sub_239A18A84(_Unwind_Exception *a1)
{
  YAML::Node::~Node((YAML::Node *)&v2);
  siri::intelligence::ValidationResults::~ValidationResults((siri::intelligence::ValidationResults *)v3);
  if (v4 < 0) {
    operator delete(v3[6]);
  }
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100]();
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  long long v9 = &v8;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v9);
  _Unwind_Resume(a1);
}

YAML::Node *YAML::Node::operator=(YAML::Node *this, const YAML::Node *a2)
{
  if (*(unsigned char *)this) {
    BOOL v3 = *(unsigned char *)a2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    char v7 = this;
    uint64_t v8 = exception;
    if (*((char *)v7 + 31) < 0) {
      std::string::__init_copy_ctor_external(&v9, *((const std::string::value_type **)v7 + 1), *((void *)v7 + 2));
    }
    else {
      std::string v9 = *(std::string *)((char *)v7 + 8);
    }
    YAML::InvalidNode::InvalidNode(v8, (uint64_t)&v9);
  }
  if (!YAML::Node::is(this, a2)) {
    YAML::Node::AssignNode(this, a2);
  }
  return this;
}

void sub_239A18B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void YAML::Node::~Node(YAML::Node *this)
{
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 5);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
}

uint64_t std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8C328] + 104;
  *(void *)(a1 + 128) = MEMORY[0x263F8C328] + 104;
  uint64_t v3 = a1 + 16;
  uint64_t v4 = MEMORY[0x263F8C328] + 64;
  *(void *)(a1 + 16) = MEMORY[0x263F8C328] + 64;
  uint64_t v5 = (void *)MEMORY[0x263F8C2B8];
  uint64_t v6 = *(void *)(MEMORY[0x263F8C2B8] + 24);
  uint64_t v7 = *(void *)(MEMORY[0x263F8C2B8] + 16);
  *(void *)a1 = v7;
  *(void *)(a1 + *(void *)(v7 - 24)) = v6;
  *(void *)(a1 + 8) = 0;
  uint64_t v8 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v8, (void *)(a1 + 24));
  uint64_t v9 = MEMORY[0x263F8C328] + 24;
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  uint64_t v10 = v5[5];
  uint64_t v11 = v5[4];
  *(void *)(a1 + 16) = v11;
  *(void *)(v3 + *(void *)(v11 - 24)) = v10;
  uint64_t v12 = v5[1];
  *(void *)a1 = v12;
  *(void *)(a1 + *(void *)(v12 - 24)) = v5[6];
  *(void *)a1 = v9;
  *(void *)(a1 + 128) = v2;
  *(void *)(a1 + 16) = v4;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 24) = MEMORY[0x263F8C318] + 16;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 24;
  return a1;
}

void sub_239A18E8C(_Unwind_Exception *a1)
{
  std::iostream::~basic_iostream();
  MEMORY[0x23ECAAC10](v1);
  _Unwind_Resume(a1);
}

uint64_t std::vector<siri::intelligence::TestParseError>::push_back[abi:ne180100](char **a1, long long *a2)
{
  unint64_t v6 = (unint64_t)a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - (void)*a1) >> 4);
    unint64_t v12 = v11 + 1;
    if (v11 + 1 > 0x555555555555555) {
      std::vector<siri::intelligence::TestParseError>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - (void)*a1) >> 4);
    if (2 * v13 > v12) {
      unint64_t v12 = 2 * v13;
    }
    if (v13 >= 0x2AAAAAAAAAAAAAALL) {
      unint64_t v14 = 0x555555555555555;
    }
    else {
      unint64_t v14 = v12;
    }
    uint64_t v28 = result;
    if (v14) {
      uint64_t v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::intelligence::TestParseError>>(result, v14);
    }
    else {
      uint64_t v15 = 0;
    }
    std::string v16 = &v15[48 * v11];
    long long v17 = *a2;
    *((void *)v16 + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string v16 = v17;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v18 = *(long long *)((char *)a2 + 24);
    *((void *)v16 + 5) = *((void *)a2 + 5);
    *(_OWORD *)(v16 + 24) = v18;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    uint64_t v10 = v16 + 48;
    uint64_t v19 = *a1;
    unint64_t v20 = (unint64_t)a1[1];
    if ((char *)v20 == *a1)
    {
      int64x2_t v23 = vdupq_n_s64(v20);
    }
    else
    {
      do
      {
        long long v21 = *(_OWORD *)(v20 - 48);
        *((void *)v16 - 4) = *(void *)(v20 - 32);
        *((_OWORD *)v16 - 3) = v21;
        *(void *)(v20 - 40) = 0;
        *(void *)(v20 - 32) = 0;
        *(void *)(v20 - 48) = 0;
        long long v22 = *(_OWORD *)(v20 - 24);
        *((void *)v16 - 1) = *(void *)(v20 - 8);
        *(_OWORD *)(v16 - 24) = v22;
        v16 -= 48;
        *(void *)(v20 - 16) = 0;
        *(void *)(v20 - 8) = 0;
        *(void *)(v20 - 24) = 0;
        v20 -= 48;
      }
      while ((char *)v20 != v19);
      int64x2_t v23 = *(int64x2_t *)a1;
    }
    *a1 = v16;
    a1[1] = v10;
    int64x2_t v26 = v23;
    uint64_t v24 = a1[2];
    a1[2] = &v15[48 * v14];
    uint64_t v27 = v24;
    uint64_t v25 = v23.i64[0];
    uint64_t result = std::__split_buffer<siri::intelligence::TestParseError>::~__split_buffer((uint64_t)&v25);
  }
  else
  {
    long long v8 = *a2;
    *(void *)(v7 + 16) = *((void *)a2 + 2);
    *(_OWORD *)unint64_t v7 = v8;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v9 = *(long long *)((char *)a2 + 24);
    *(void *)(v7 + 40) = *((void *)a2 + 5);
    *(_OWORD *)(v7 + 24) = v9;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    uint64_t v10 = (char *)(v7 + 48);
  }
  a1[1] = v10;
  return result;
}

void siri::intelligence::TestParseError::~TestParseError(void **this)
{
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*this);
  }
}

uint64_t std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8C2B8];
  uint64_t v3 = *MEMORY[0x263F8C2B8];
  *(void *)a1 = *MEMORY[0x263F8C2B8];
  uint64_t v4 = *(void *)(v2 + 72);
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 64);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = MEMORY[0x263F8C318] + 16;
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23ECAAC10](a1 + 128);
  return a1;
}

void siri::intelligence::TestCase::~TestCase(void **this)
{
  uint64_t v2 = this + 16;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  uint64_t v2 = this + 13;
  std::vector<protobuf::FlowTest_Step>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 95) < 0) {
    operator delete(this[9]);
  }
  if (*((char *)this + 71) < 0) {
    operator delete(this[6]);
  }
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*this);
  }
}

void siri::intelligence::ValidationResults::~ValidationResults(char **this)
{
  std::__tree<std::string>::destroy((uint64_t)(this + 3), this[4]);
  uint64_t v2 = this;
  std::vector<siri::intelligence::ValidationResult>::__destroy_vector::operator()[abi:ne180100]((void ***)&v2);
}

uint64_t siri::intelligence::TestSuite::SaveTests(siri::intelligence::TestCase **this)
{
  v44[0] = 0;
  v44[1] = 0;
  uint64_t v43 = v44;
  uint64_t v1 = *this;
  uint64_t v2 = this[1];
  while (v1 != v2)
  {
    siri::intelligence::TestCase::GetTestFilename(v1, &__p);
    std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string>((uint64_t **)&v43, (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v1 = (siri::intelligence::TestCase *)((char *)v1 + 152);
  }
  _ZNSt3__115allocate_sharedB8ne180100IN8protobuf8FlowTestENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_((protobuf::FlowTest **)&v41);
  uint64_t v3 = (uint64_t *)v43;
  if (v43 != v44)
  {
    uint64_t v4 = (protobuf::FlowTest *)v41;
    *((_DWORD *)v41 + 4) |= 1u;
    std::string::basic_string[abi:ne180100]<0>(&__p, "1.0");
    google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)v4 + 6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    unint64_t v5 = *this;
    unint64_t v6 = this[1];
    while (1)
    {
      if (v5 == v6) {
        YAML::Emitter::Emitter((YAML::Emitter *)&__p);
      }
      siri::intelligence::TestCase::GetTestFilename(v5, &__p);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      uint64_t v8 = *((unsigned __int8 *)v3 + 55);
      int v9 = (char)v8;
      if ((v8 & 0x80u) != 0) {
        uint64_t v8 = v3[5];
      }
      if (size == v8)
      {
        if (v9 >= 0) {
          uint64_t v10 = (unsigned __int8 *)(v3 + 4);
        }
        else {
          uint64_t v10 = (unsigned __int8 *)v3[4];
        }
        if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0)
        {
          uint64_t v15 = (void *)__p.__r_.__value_.__r.__words[0];
          int v16 = memcmp(__p.__r_.__value_.__l.__data_, v10, __p.__r_.__value_.__l.__size_);
          operator delete(v15);
          if (v16) {
            goto LABEL_80;
          }
LABEL_33:
          long long v17 = (protobuf::FlowTest *)v41;
          long long v18 = (google::protobuf::internal::ArenaImpl **)(v41 + 3);
          uint64_t v19 = v41[5];
          if (!v19)
          {
            int v21 = *((_DWORD *)v41 + 9);
            goto LABEL_38;
          }
          uint64_t v20 = *((int *)v41 + 8);
          int v21 = *v19;
          if ((int)v20 < *v19)
          {
            *((_DWORD *)v41 + 8) = v20 + 1;
            long long v22 = *(protobuf::FlowTest_Test **)&v19[2 * v20 + 2];
            goto LABEL_40;
          }
          if (v21 == *((_DWORD *)v41 + 9))
          {
LABEL_38:
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v41 + 6, v21 + 1);
            uint64_t v19 = (int *)*((void *)v17 + 5);
            int v21 = *v19;
          }
          *uint64_t v19 = v21 + 1;
          long long v22 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_Test>(*v18);
          uint64_t v23 = *((void *)v17 + 5);
          uint64_t v24 = *((int *)v17 + 8);
          *((_DWORD *)v17 + 8) = v24 + 1;
          *(void *)(v23 + 8 * v24 + 8) = v22;
LABEL_40:
          uint64_t v25 = (_OWORD *)((char *)v5 + 48);
          if (*((char *)v5 + 71) < 0)
          {
            std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)v5 + 6), *((void *)v5 + 7));
          }
          else
          {
            *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *v25;
            __p.__r_.__value_.__r.__words[2] = *((void *)v5 + 8);
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          {
            std::string::size_type v26 = __p.__r_.__value_.__l.__size_;
            operator delete(__p.__r_.__value_.__l.__data_);
            if (!v26) {
              goto LABEL_52;
            }
          }
          else if (!*((unsigned char *)&__p.__r_.__value_.__s + 23))
          {
            goto LABEL_52;
          }
          if (*((char *)v5 + 71) < 0)
          {
            std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)v5 + 6), *((void *)v5 + 7));
          }
          else
          {
            *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *v25;
            __p.__r_.__value_.__r.__words[2] = *((void *)v5 + 8);
          }
          *((_DWORD *)v22 + 4) |= 1u;
          google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)v22 + 6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)&__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
LABEL_52:
          uint64_t v27 = (_OWORD *)((char *)v5 + 72);
          if (*((char *)v5 + 95) < 0)
          {
            std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)v5 + 9), *((void *)v5 + 10));
          }
          else
          {
            *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *v27;
            __p.__r_.__value_.__r.__words[2] = *((void *)v5 + 11);
          }
          if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
            if (!*((unsigned char *)&__p.__r_.__value_.__s + 23)) {
              goto LABEL_64;
            }
LABEL_59:
            if (*((char *)v5 + 95) < 0)
            {
              std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)v5 + 9), *((void *)v5 + 10));
            }
            else
            {
              *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *v27;
              __p.__r_.__value_.__r.__words[2] = *((void *)v5 + 11);
            }
            *((_DWORD *)v22 + 4) |= 2u;
            google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)v22 + 7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)&__p);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            goto LABEL_64;
          }
          std::string::size_type v28 = __p.__r_.__value_.__l.__size_;
          operator delete(__p.__r_.__value_.__l.__data_);
          if (v28) {
            goto LABEL_59;
          }
LABEL_64:
          if (!*((unsigned char *)v5 + 96))
          {
            *((_DWORD *)v22 + 4) |= 4u;
            *((unsigned char *)v22 + 64) = 0;
          }
          int v29 = *((_DWORD *)v5 + 25);
          if (v29 >= 2)
          {
            *((_DWORD *)v22 + 4) |= 8u;
            *((_DWORD *)v22 + 17) = v29;
          }
          memset(&__p, 0, sizeof(__p));
          std::vector<protobuf::FlowTest_Step>::__init_with_size[abi:ne180100]<protobuf::FlowTest_Step*,protobuf::FlowTest_Step*>(&__p, *((void *)v5 + 13), *((void *)v5 + 14), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)v5 + 14) - *((void *)v5 + 13)) >> 4));
          std::string::size_type v31 = __p.__r_.__value_.__l.__size_;
          uint64_t v30 = (const protobuf::FlowTest_Step *)__p.__r_.__value_.__r.__words[0];
          if (__p.__r_.__value_.__r.__words[0] == __p.__r_.__value_.__l.__size_)
          {
LABEL_79:
            p_p = &__p;
            std::vector<protobuf::FlowTest_Step>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
            goto LABEL_80;
          }
          while (2)
          {
            uint64_t v32 = (int *)*((void *)v22 + 5);
            if (v32)
            {
              uint64_t v33 = *((int *)v22 + 8);
              int v34 = *v32;
              if ((int)v33 < *v32)
              {
                *((_DWORD *)v22 + 8) = v33 + 1;
                uint64_t v35 = *(protobuf::FlowTest_Step **)&v32[2 * v33 + 2];
                goto LABEL_76;
              }
              if (v34 == *((_DWORD *)v22 + 9))
              {
LABEL_74:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v22 + 6, v34 + 1);
                uint64_t v32 = (int *)*((void *)v22 + 5);
                int v34 = *v32;
              }
              *uint64_t v32 = v34 + 1;
              uint64_t v35 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_Step>(*((google::protobuf::internal::ArenaImpl **)v22
                                                                                         + 3));
              uint64_t v36 = *((void *)v22 + 5);
              uint64_t v37 = *((int *)v22 + 8);
              *((_DWORD *)v22 + 8) = v37 + 1;
              *(void *)(v36 + 8 * v37 + 8) = v35;
LABEL_76:
              if (v30 != v35)
              {
                protobuf::FlowTest_Step::Clear(v35);
                protobuf::FlowTest_Step::MergeFrom(v35, v30);
              }
              uint64_t v30 = (const protobuf::FlowTest_Step *)((char *)v30 + 80);
              if (v30 == (const protobuf::FlowTest_Step *)v31) {
                goto LABEL_79;
              }
              continue;
            }
            break;
          }
          int v34 = *((_DWORD *)v22 + 9);
          goto LABEL_74;
        }
        if (!*((unsigned char *)&__p.__r_.__value_.__s + 23)) {
          goto LABEL_33;
        }
        uint64_t v11 = 0;
        do
        {
          int v12 = __p.__r_.__value_.__s.__data_[v11];
          int v13 = v10[v11];
        }
        while (v12 == v13 && HIBYTE(__p.__r_.__value_.__r.__words[2]) - 1 != v11++);
        if (v12 == v13) {
          goto LABEL_33;
        }
      }
      else if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
LABEL_80:
      unint64_t v5 = (siri::intelligence::TestCase *)((char *)v5 + 152);
    }
  }
  if (v42) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v42);
  }
  std::__tree<std::string>::destroy((uint64_t)&v43, v44[0]);
  return 1;
}

void sub_239A1A4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  YAML::Emitter::~Emitter((YAML::Emitter *)&__p);
  v48 = *(std::__shared_weak_count **)(v46 - 168);
  if (v48) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v48);
  }
  std::__tree<std::string>::destroy(v46 - 160, *(char **)(v46 - 152));
  _Unwind_Resume(a1);
}

uint64_t std::set<std::string>::~set[abi:ne180100](uint64_t a1)
{
  return a1;
}

std::string *siri::intelligence::TestSuite::GetTests@<X0>(const siri::intelligence::TestCase **this@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::vector<siri::intelligence::TestCase>::__init_with_size[abi:ne180100]<siri::intelligence::TestCase*,siri::intelligence::TestCase*>(a2, *this, this[1], 0x86BCA1AF286BCA1BLL * ((this[1] - *this) >> 3));
}

std::string *siri::intelligence::TestSuite::GetParseErrors@<X0>(long long **this@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::vector<siri::intelligence::TestParseError>::__init_with_size[abi:ne180100]<siri::intelligence::TestParseError*,siri::intelligence::TestParseError*>(a2, this[3], this[4], 0xAAAAAAAAAAAAAAABLL * (this[4] - this[3]));
}

uint64_t siri::intelligence::TestSuite::AddTestCase(siri::intelligence::TestSuite *this, const siri::intelligence::TestCase *a2)
{
  unint64_t v3 = *((void *)this + 1);
  if (v3 >= *((void *)this + 2))
  {
    uint64_t result = std::vector<siri::intelligence::TestCase>::__push_back_slow_path<siri::intelligence::TestCase const&>((uint64_t *)this, a2);
  }
  else
  {
    siri::intelligence::TestCase::TestCase(*((std::string **)this + 1), a2);
    uint64_t result = v3 + 152;
    *((void *)this + 1) = v3 + 152;
  }
  *((void *)this + 1) = result;
  return result;
}

void sub_239A1A78C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

BOOL YAML::Node::is(YAML::Node *this, const YAML::Node *a2)
{
  if (*(unsigned char *)this) {
    BOOL v3 = *(unsigned char *)a2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v8, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v8 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v8);
  }
  uint64_t v4 = (void *)*((void *)this + 6);
  return v4 && (unint64_t v5 = (void *)*((void *)a2 + 6)) != 0 && *v4 == *v5;
}

void sub_239A1A870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void YAML::Node::AssignNode(YAML::Node *this, const YAML::Node *a2)
{
  if (*(unsigned char *)this) {
    BOOL v3 = *(unsigned char *)a2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    uint64_t v11 = this;
    int v12 = exception;
    if (*((char *)v11 + 31) < 0) {
      std::string::__init_copy_ctor_external(&v13, *((const std::string::value_type **)v11 + 1), *((void *)v11 + 2));
    }
    else {
      std::string v13 = *(std::string *)((char *)v11 + 8);
    }
    YAML::InvalidNode::InvalidNode(v12, (uint64_t)&v13);
  }
  YAML::Node::EnsureNodeExists((uint64_t)a2);
  unint64_t v5 = (std::__shared_weak_count **)*((void *)this + 6);
  unint64_t v6 = (std::__shared_weak_count **)*((void *)a2 + 6);
  if (v5)
  {
    YAML::detail::node::set_ref(v5, v6);
    YAML::detail::memory_holder::merge(*((void *)this + 4), *((void *)a2 + 4));
    *((void *)this + 6) = *((void *)a2 + 6);
  }
  else
  {
    *((void *)this + 6) = v6;
    uint64_t v8 = *((void *)a2 + 4);
    uint64_t v7 = *((void *)a2 + 5);
    if (v7) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
    }
    int v9 = (std::__shared_weak_count *)*((void *)this + 5);
    *((void *)this + 4) = v8;
    *((void *)this + 5) = v7;
    if (v9)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v9);
    }
  }
}

void sub_239A1A9D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void *YAML::InvalidNode::InvalidNode(void *a1, uint64_t a2)
{
  uint64_t v6 = -1;
  int v7 = -1;
  YAML::ErrorMsg::INVALID_NODE_WITH_KEY(a2, __p);
  YAML::Exception::Exception((uint64_t)a1, &v6, (uint64_t)__p);
  *a1 = &unk_26ED2A5C8;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  *a1 = &unk_26ED2A648;
  return a1;
}

void sub_239A1AAB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t YAML::ErrorMsg::INVALID_NODE_WITH_KEY@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v12);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 23);
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a1 + 8);
  }
  if (v4)
  {
    char v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v13, (uint64_t)"invalid node; first invalid key: \"",
           34);
    int v6 = *(char *)(a1 + 23);
    if (v6 >= 0) {
      uint64_t v7 = a1;
    }
    else {
      uint64_t v7 = *(void *)a1;
    }
    if (v6 >= 0) {
      uint64_t v8 = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      uint64_t v8 = *(void *)(a1 + 8);
    }
    int v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, v7, v8);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)"\"", 1);
    std::stringbuf::str();
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(a2, "invalid node; this may result from using a map iterator as a sequence iterator, or vice-versa");
  }
  v12[0] = *MEMORY[0x263F8C2B8];
  uint64_t v10 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v12 + *(void *)(v12[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v13[0] = v10;
  v13[1] = MEMORY[0x263F8C318] + 16;
  if (v14 < 0) {
    operator delete((void *)v13[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v15);
}

void sub_239A1AC98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t YAML::Exception::Exception(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  YAML::Exception::build_what(a2, a3, &v10);
  std::runtime_error::runtime_error((std::runtime_error *)a1, &v10);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  *(void *)a1 = &unk_26ED2A548;
  uint64_t v6 = *(void *)a2;
  *(_DWORD *)(a1 + 24) = a2[2];
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = (std::string *)(a1 + 32);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    long long v8 = *(_OWORD *)a3;
    *(void *)(a1 + 48) = *(void *)(a3 + 16);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v8;
  }
  return a1;
}

void sub_239A1AD68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  std::runtime_error::~runtime_error(v15);
  _Unwind_Resume(a1);
}

void YAML::Exception::build_what(_DWORD *a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  if (*a1 == -1 && a1[1] == -1 && a1[2] == -1)
  {
    if (*(char *)(a2 + 23) < 0)
    {
      std::string v13 = *(const std::string::value_type **)a2;
      std::string::size_type v14 = *(void *)(a2 + 8);
      std::string::__init_copy_ctor_external(a3, v13, v14);
    }
    else
    {
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
      a3->__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
    }
  }
  else
  {
    std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v15);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"yaml-cpp: error at line ", 24);
    uint64_t v6 = (void *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)", column ", 9);
    uint64_t v7 = (void *)std::ostream::operator<<();
    long long v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)": ", 2);
    int v9 = *(char *)(a2 + 23);
    if (v9 >= 0) {
      uint64_t v10 = a2;
    }
    else {
      uint64_t v10 = *(void *)a2;
    }
    if (v9 >= 0) {
      uint64_t v11 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      uint64_t v11 = *(void *)(a2 + 8);
    }
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, v10, v11);
    std::stringbuf::str();
    v15[0] = *MEMORY[0x263F8C2B8];
    uint64_t v12 = *(void *)(MEMORY[0x263F8C2B8] + 72);
    *(void *)((char *)v15 + *(void *)(v15[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
    v16[0] = v12;
    v16[1] = MEMORY[0x263F8C318] + 16;
    if (v17 < 0) {
      operator delete((void *)v16[9]);
    }
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x23ECAAC10](&v18);
  }
}

void sub_239A1AFCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t YAML::Node::EnsureNodeExists(uint64_t this)
{
  uint64_t v1 = this;
  if (!*(unsigned char *)this)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    uint64_t v3 = v1;
    uint64_t v4 = exception;
    if (*(char *)(v3 + 31) < 0) {
      std::string::__init_copy_ctor_external(&v5, *(const std::string::value_type **)(v3 + 8), *(void *)(v3 + 16));
    }
    else {
      std::string v5 = *(std::string *)(v3 + 8);
    }
    YAML::InvalidNode::InvalidNode(v4, (uint64_t)&v5);
  }
  if (!*(void *)(this + 48)) {
    operator new();
  }
  return this;
}

void sub_239A1B11C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void YAML::detail::node::set_ref(std::__shared_weak_count **this, std::__shared_weak_count **a2)
{
  uint64_t v4 = *a2;
  if (LOBYTE((*a2)->~__shared_weak_count))
  {
    YAML::detail::node::mark_defined((YAML::detail::node *)this);
    uint64_t v4 = *a2;
  }
  std::string v5 = a2[1];
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = this[1];
  *this = v4;
  this[1] = v5;
  if (v6)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
}

void std::shared_ptr<YAML::detail::memory_holder>::reset[abi:ne180100]<YAML::detail::memory_holder,void>(uint64_t a1, uint64_t a2)
{
  std::shared_ptr<YAML::detail::memory_holder>::shared_ptr[abi:ne180100]<YAML::detail::memory_holder,void>(&v2, a2);
}

void std::shared_ptr<YAML::detail::memory_holder>::shared_ptr[abi:ne180100]<YAML::detail::memory_holder,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_239A1B2AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  a10 = 0;
  if (v10) {
    std::default_delete<YAML::detail::memory_holder>::operator()[abi:ne180100]((uint64_t)&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void std::__shared_ptr_pointer<YAML::detail::memory_holder *,std::shared_ptr<YAML::detail::memory_holder>::__shared_ptr_default_delete<YAML::detail::memory_holder,YAML::detail::memory_holder>,std::allocator<YAML::detail::memory_holder>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x23ECAACC0);
}

void std::__shared_ptr_pointer<YAML::detail::memory_holder *,std::shared_ptr<YAML::detail::memory_holder>::__shared_ptr_default_delete<YAML::detail::memory_holder,YAML::detail::memory_holder>,std::allocator<YAML::detail::memory_holder>>::__on_zero_shared(uint64_t a1)
{
}

uint64_t std::__shared_ptr_pointer<YAML::detail::memory_holder *,std::shared_ptr<YAML::detail::memory_holder>::__shared_ptr_default_delete<YAML::detail::memory_holder,YAML::detail::memory_holder>,std::allocator<YAML::detail::memory_holder>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::default_delete<YAML::detail::memory_holder>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    long long v2 = *(std::__shared_weak_count **)(a2 + 8);
    if (v2) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v2);
    }
    JUMPOUT(0x23ECAACC0);
  }
}

void std::shared_ptr<YAML::detail::memory>::shared_ptr[abi:ne180100]<YAML::detail::memory,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  uint64_t v2 = a2;
  operator new();
}

void sub_239A1B430(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<YAML::detail::memory>::reset[abi:ne180100]((uint64_t *)va, 0);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_pointer<YAML::detail::memory *,std::shared_ptr<YAML::detail::memory>::__shared_ptr_default_delete<YAML::detail::memory,YAML::detail::memory>,std::allocator<YAML::detail::memory>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x23ECAACC0);
}

void std::__shared_ptr_pointer<YAML::detail::memory *,std::shared_ptr<YAML::detail::memory>::__shared_ptr_default_delete<YAML::detail::memory,YAML::detail::memory>,std::allocator<YAML::detail::memory>>::__on_zero_shared(uint64_t a1)
{
}

uint64_t std::__shared_ptr_pointer<YAML::detail::memory *,std::shared_ptr<YAML::detail::memory>::__shared_ptr_default_delete<YAML::detail::memory,YAML::detail::memory>,std::allocator<YAML::detail::memory>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::default_delete<YAML::detail::memory>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    std::__tree<std::shared_ptr<YAML::detail::node>>::destroy(a2, *(void **)(a2 + 8));
    JUMPOUT(0x23ECAACC0);
  }
}

void std::__tree<std::shared_ptr<YAML::detail::node>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::shared_ptr<YAML::detail::node>>::destroy(a1, *a2);
    std::__tree<std::shared_ptr<YAML::detail::node>>::destroy(a1, a2[1]);
    uint64_t v4 = (std::__shared_weak_count *)a2[5];
    if (v4) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    }
    operator delete(a2);
  }
}

uint64_t *std::unique_ptr<YAML::detail::memory>::reset[abi:ne180100](uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  *uint64_t result = a2;
  if (v2)
  {
    std::__tree<std::shared_ptr<YAML::detail::node>>::destroy(v2, *(void **)(v2 + 8));
    JUMPOUT(0x23ECAACC0);
  }
  return result;
}

void YAML::detail::node::mark_defined(YAML::detail::node *this)
{
  uint64_t v1 = **(void **)this;
  if (!*(unsigned char *)v1)
  {
    if (!*(_DWORD *)(v1 + 16)) {
      *(_DWORD *)(v1 + 16) = 1;
    }
    *(unsigned char *)uint64_t v1 = 1;
    uint64_t v3 = (char *)*((void *)this + 2);
    uint64_t v4 = (char *)this + 24;
    if (v3 != (char *)this + 24)
    {
      do
      {
        YAML::detail::node::mark_defined(*((YAML::detail::node **)v3 + 4));
        std::string v5 = (char *)*((void *)v3 + 1);
        if (v5)
        {
          do
          {
            uint64_t v6 = v5;
            std::string v5 = *(char **)v5;
          }
          while (v5);
        }
        else
        {
          do
          {
            uint64_t v6 = (char *)*((void *)v3 + 2);
            BOOL v7 = *(void *)v6 == (void)v3;
            uint64_t v3 = v6;
          }
          while (!v7);
        }
        uint64_t v3 = v6;
      }
      while (v6 != v4);
    }
    std::__tree<std::__value_type<YAML::detail::node_ref const*,int>,std::__map_value_compare<YAML::detail::node_ref const*,std::__value_type<YAML::detail::node_ref const*,int>,std::less<YAML::detail::node_ref const*>,true>,std::allocator<std::__value_type<YAML::detail::node_ref const*,int>>>::destroy((uint64_t)this + 16, *((void **)this + 3));
    *((void *)this + 3) = 0;
    *((void *)this + 4) = 0;
    *((void *)this + 2) = v4;
  }
}

void YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(_DWORD *)a1 == 2)
  {
    std::string v5 = *(uint64_t **)(a1 + 16);
    uint64_t v7 = *v5;
    uint64_t v6 = v5[1];
    if (v7) {
      BOOL v8 = v6 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (v8) {
      goto LABEL_11;
    }
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v9;
      uint64_t v24 = v4;
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 40);
      v19[0] = 1;
      uint64_t v25 = v7;
      if (v10)
      {
        char v11 = 0;
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        std::string __p = 0;
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        uint64_t v16 = v9;
        char v17 = v10;
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
LABEL_19:
        v12[0] = 1;
        uint64_t v18 = v6;
        YAML::detail::iterator_value::iterator_value((YAML::detail::iterator_value *)a2, (const YAML::Node *)v19, (const YAML::Node *)v12);
        if (v17) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v17);
        }
        if (SHIBYTE(v15) < 0) {
          operator delete(__p);
        }
        if ((v11 & 1) == 0) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v10);
        }
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v9;
      v19[0] = 1;
      uint64_t v24 = 0;
      uint64_t v25 = v7;
    }
    uint64_t v10 = 0;
    std::string __p = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = v9;
    char v11 = 1;
    char v17 = 0;
    goto LABEL_19;
  }
  if (*(_DWORD *)a1 != 1 || (uint64_t v2 = **(void **)(a1 + 8)) == 0)
  {
LABEL_11:
    *(unsigned char *)a2 = 1;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(unsigned char *)(a2 + 56) = 1;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(unsigned char *)(a2 + 112) = 1;
    *(_OWORD *)(a2 + 120) = 0u;
    *(_OWORD *)(a2 + 136) = 0u;
    *(_OWORD *)(a2 + 152) = 0u;
    return;
  }
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 40);
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = v3;
    uint64_t v24 = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = v3;
    uint64_t v24 = 0;
  }
  v19[0] = 1;
  uint64_t v25 = v2;
  YAML::detail::iterator_value::iterator_value((YAML::detail::iterator_value *)a2, (const YAML::Node *)v19);
LABEL_25:
  if (v24) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v24);
  }
  if (SHIBYTE(v22) < 0) {
    operator delete(v20);
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_239A1B878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  char v19 = v18;
  YAML::Node::~Node((YAML::Node *)&a9);
  if ((v19 & 1) == 0) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }
  YAML::Node::~Node((YAML::Node *)&a16);
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  _Unwind_Resume(a1);
}

uint64_t YAML::Node::Mark(YAML::Node *this)
{
  if (!*(unsigned char *)this)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v5, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v5 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v5);
  }
  uint64_t v2 = *((void *)this + 6);
  if (v2) {
    return *(void *)(**(void **)v2 + 4);
  }
  else {
    return -1;
  }
}

void sub_239A1B984(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void YAML::detail::iterator_value::~iterator_value(YAML::detail::iterator_value *this)
{
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 19);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  if (*((char *)this + 143) < 0) {
    operator delete(*((void **)this + 15));
  }
  uint64_t v3 = (std::__shared_weak_count *)*((void *)this + 12);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  if (*((char *)this + 87) < 0) {
    operator delete(*((void **)this + 8));
  }
  uint64_t v4 = (std::__shared_weak_count *)*((void *)this + 5);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
}

void YAML::Node::operator[]<char [14]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  uint64_t v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  uint64_t v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  BOOL v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      uint64_t v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [14],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  char v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A1BBF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void YAML::Node::operator[]<char [6]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  uint64_t v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  uint64_t v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  BOOL v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      uint64_t v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [6],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  char v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A1BE10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::ValidateFlowTest_Test(siri::intelligence *this, const YAML::Node *a2, siri::intelligence::ValidationResults *a3)
{
  uint64_t v3 = this;
  uint64_t v87 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD865B8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD865B8))
  {
    std::string::basic_string[abi:ne180100]<0>(v74, "name");
    std::string::basic_string[abi:ne180100]<0>(&v74[24], "description");
    std::string::basic_string[abi:ne180100]<0>(&v76, "enabled");
    std::string::basic_string[abi:ne180100]<0>((void *)&v78 + 1, "steps");
    std::string::basic_string[abi:ne180100]<0>(v80, "repeat");
    std::set<std::string>::set[abi:ne180100]((uint64_t)&unk_26AD86608, (const void **)v74, 5);
    for (uint64_t i = 0; i != -15; i -= 3)
    {
      if (*(&v82 + i * 8) < 0) {
        operator delete(v80[i]);
      }
    }
    __cxa_atexit((void (*)(void *))std::set<std::string>::~set[abi:ne180100], &unk_26AD86608, &dword_239A02000);
    __cxa_guard_release(&qword_26AD865B8);
    uint64_t v3 = this;
  }
  if (*(unsigned char *)v3 && (uint64_t v4 = (uint64_t **)*((void *)v3 + 6)) != 0)
  {
    YAML::detail::node_data::begin(**v4, (uint64_t)v74);
    uint64_t v6 = *((void *)this + 4);
    std::string v5 = (std::__shared_weak_count *)*((void *)this + 5);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      *(_OWORD *)v69 = *(_OWORD *)v74;
      *(_OWORD *)&v69[16] = *(_OWORD *)&v74[16];
      *(void *)&v69[32] = v6;
      v70 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      std::__shared_weak_count::__release_shared[abi:ne180100](v5);
    }
    else
    {
      *(_OWORD *)v69 = *(_OWORD *)v74;
      *(_OWORD *)&v69[16] = *(_OWORD *)&v74[16];
      *(void *)&v69[32] = v6;
      v70 = 0;
    }
  }
  else
  {
    *(_DWORD *)v69 = 0;
    memset(&v69[8], 0, 32);
    v70 = 0;
  }
  if (*(unsigned char *)this && (uint64_t v7 = (uint64_t **)*((void *)this + 6)) != 0)
  {
    YAML::detail::node_data::end(**v7, (uint64_t)v74);
    BOOL v8 = (std::__shared_weak_count *)*((void *)this + 5);
    if (v8)
    {
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
      int v9 = *(_DWORD *)v74;
      uint64_t v10 = *(void *)&v74[8];
      uint64_t v11 = *(void *)&v74[16];
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
      v64 = v8;
      std::__shared_weak_count::__release_shared[abi:ne180100](v8);
    }
    else
    {
      v64 = 0;
      int v9 = *(_DWORD *)v74;
      uint64_t v10 = *(void *)&v74[8];
      uint64_t v11 = *(void *)&v74[16];
    }
  }
  else
  {
    v64 = 0;
    int v9 = 0;
    uint64_t v11 = 0;
    uint64_t v10 = 0;
  }
  while (1)
  {
    if (*(_DWORD *)v69 == v9)
    {
      int v12 = &v69[8];
      uint64_t v13 = v10;
      if (v9 != 1)
      {
        if (v9 != 2) {
          break;
        }
        int v12 = &v69[16];
        uint64_t v13 = v11;
      }
      if (*(void *)v12 == v13) {
        break;
      }
    }
    YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v69, (uint64_t)v74);
    if (!v77)
    {
      exception = __cxa_allocate_exception(0x38uLL);
      if (SHIBYTE(v79) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v67, (const std::string::value_type *)v78, *((std::string::size_type *)&v78 + 1));
      }
      else
      {
        *(_OWORD *)v67 = v78;
        *(void *)&v67[16] = v79;
      }
      YAML::InvalidNode::InvalidNode(exception, (uint64_t)v67);
    }
    *(void *)v67 = &v77;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)v67, &__p);
    uint64_t v14 = (void *)std::__tree<std::string>::find<std::string>((uint64_t)&unk_26AD86608, (const void **)&__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v14 == &unk_26AD86610)
    {
      if (!v77)
      {
        v51 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v79) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)v67, (const std::string::value_type *)v78, *((std::string::size_type *)&v78 + 1));
        }
        else
        {
          *(_OWORD *)v67 = v78;
          *(void *)&v67[16] = v79;
        }
        YAML::InvalidNode::InvalidNode(v51, (uint64_t)v67);
      }
      *(void *)v67 = &v77;
      YAML::as_if<std::string,void>::operator()((YAML::Node **)v67, &v72);
      uint64_t v15 = std::string::insert(&v72, 0, "Unsupported field for Test found in flow file: ");
      std::string __p = *v15;
      v15->__r_.__value_.__l.__size_ = 0;
      v15->__r_.__value_.__r.__words[2] = 0;
      v15->__r_.__value_.__r.__words[0] = 0;
      if (!v81)
      {
        v50 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v84) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)v67, (const std::string::value_type *)v83, *((std::string::size_type *)&v83 + 1));
        }
        else
        {
          *(_OWORD *)v67 = v83;
          *(void *)&v67[16] = v84;
        }
        YAML::InvalidNode::InvalidNode(v50, (uint64_t)v67);
      }
      if (v86) {
        uint64_t v16 = *(void *)(**(void **)v86 + 4);
      }
      else {
        HIDWORD(v16) = -1;
      }
      siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)&__p, SHIDWORD(v16));
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v72.__r_.__value_.__l.__data_);
      }
    }
    if (v85) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v85);
    }
    if (SHIBYTE(v84) < 0) {
      operator delete((void *)v83);
    }
    if (v80[0]) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v80[0]);
    }
    if (SHIBYTE(v79) < 0) {
      operator delete((void *)v78);
    }
    if (v75) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v75);
    }
    if ((v74[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v74[8]);
    }
    YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v69);
  }
  if (v64) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v64);
  }
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  YAML::Node::operator[]<char [5]>(this, "name", (uint64_t)v74);
  BOOL v17 = !v74[0] || v76 && !*(unsigned char *)**v76;
  if (v75) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v75);
  }
  if ((v74[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v74[8]);
    if (v17) {
      goto LABEL_81;
    }
  }
  else if (v17)
  {
    goto LABEL_81;
  }
  YAML::Node::operator[]<char [5]>(this, "name", (uint64_t)v74);
  if (!v74[0])
  {
    v53 = __cxa_allocate_exception(0x38uLL);
    if ((v74[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v69, *(const std::string::value_type **)&v74[8], *(std::string::size_type *)&v74[16]);
    }
    else
    {
      *(_OWORD *)v69 = *(_OWORD *)&v74[8];
      *(void *)&v69[16] = *(void *)&v74[24];
    }
    YAML::InvalidNode::InvalidNode(v53, (uint64_t)v69);
  }
  if (v76)
  {
    uint64_t v18 = **v76;
    if (*(unsigned char *)v18) {
      int v19 = *(_DWORD *)(v18 + 16);
    }
    else {
      int v19 = 0;
    }
  }
  else
  {
    int v19 = 1;
  }
  if (v75) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v75);
  }
  if ((v74[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v74[8]);
  }
  if (v19 != 2)
  {
    std::string::basic_string[abi:ne180100]<0>(v67, "Invalid string value found for 'name' on Test");
    YAML::Node::operator[]<char [5]>(this, "name", (uint64_t)v74);
    if (!v74[0])
    {
      v58 = __cxa_allocate_exception(0x38uLL);
      if ((v74[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v69, *(const std::string::value_type **)&v74[8], *(std::string::size_type *)&v74[16]);
      }
      else
      {
        *(_OWORD *)v69 = *(_OWORD *)&v74[8];
        *(void *)&v69[16] = *(void *)&v74[24];
      }
      YAML::InvalidNode::InvalidNode(v58, (uint64_t)v69);
    }
    if (v76) {
      uint64_t v20 = *(void *)(**v76 + 4);
    }
    else {
      HIDWORD(v20) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)v67, HIDWORD(v20) + 1);
    if (v75) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v75);
    }
    if ((v74[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v74[8]);
    }
    if ((v67[23] & 0x80000000) != 0) {
      operator delete(*(void **)v67);
    }
  }
LABEL_81:
  YAML::Node::operator[]<char [12]>(this, "description", (uint64_t)v74);
  BOOL v21 = !v74[0] || v76 && !*(unsigned char *)**v76;
  if (v75) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v75);
  }
  if ((v74[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v74[8]);
    if (v21) {
      goto LABEL_113;
    }
  }
  else if (v21)
  {
    goto LABEL_113;
  }
  YAML::Node::operator[]<char [12]>(this, "description", (uint64_t)v74);
  if (!v74[0])
  {
    v54 = __cxa_allocate_exception(0x38uLL);
    if ((v74[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v69, *(const std::string::value_type **)&v74[8], *(std::string::size_type *)&v74[16]);
    }
    else
    {
      *(_OWORD *)v69 = *(_OWORD *)&v74[8];
      *(void *)&v69[16] = *(void *)&v74[24];
    }
    YAML::InvalidNode::InvalidNode(v54, (uint64_t)v69);
  }
  if (v76)
  {
    uint64_t v22 = **v76;
    if (*(unsigned char *)v22) {
      int v23 = *(_DWORD *)(v22 + 16);
    }
    else {
      int v23 = 0;
    }
  }
  else
  {
    int v23 = 1;
  }
  if (v75) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v75);
  }
  if ((v74[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v74[8]);
  }
  if (v23 != 2)
  {
    std::string::basic_string[abi:ne180100]<0>(v67, "Invalid string value found for 'description' on Test");
    YAML::Node::operator[]<char [12]>(this, "description", (uint64_t)v74);
    if (!v74[0])
    {
      v59 = __cxa_allocate_exception(0x38uLL);
      if ((v74[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v69, *(const std::string::value_type **)&v74[8], *(std::string::size_type *)&v74[16]);
      }
      else
      {
        *(_OWORD *)v69 = *(_OWORD *)&v74[8];
        *(void *)&v69[16] = *(void *)&v74[24];
      }
      YAML::InvalidNode::InvalidNode(v59, (uint64_t)v69);
    }
    if (v76) {
      uint64_t v24 = *(void *)(**v76 + 4);
    }
    else {
      HIDWORD(v24) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)v67, HIDWORD(v24) + 1);
    if (v75) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v75);
    }
    if ((v74[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v74[8]);
    }
    if ((v67[23] & 0x80000000) != 0) {
      operator delete(*(void **)v67);
    }
  }
LABEL_113:
  YAML::Node::operator[]<char [8]>(this, "enabled", (uint64_t)v74);
  BOOL v25 = !v74[0] || v76 && !*(unsigned char *)**v76;
  if (v75) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v75);
  }
  if ((v74[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v74[8]);
    if (v25) {
      goto LABEL_152;
    }
  }
  else if (v25)
  {
    goto LABEL_152;
  }
  YAML::Node::operator[]<char [8]>(this, "enabled", (uint64_t)v74);
  if (!v74[0])
  {
    v55 = __cxa_allocate_exception(0x38uLL);
    if ((v74[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v69, *(const std::string::value_type **)&v74[8], *(std::string::size_type *)&v74[16]);
    }
    else
    {
      *(_OWORD *)v69 = *(_OWORD *)&v74[8];
      *(void *)&v69[16] = *(void *)&v74[24];
    }
    YAML::InvalidNode::InvalidNode(v55, (uint64_t)v69);
  }
  if (v76 && (uint64_t v26 = **v76, *(unsigned char *)v26) && *(_DWORD *)(v26 + 16) == 2)
  {
    YAML::Node::operator[]<char [8]>(this, "enabled", (uint64_t)v69);
    if (!v69[0])
    {
      v62 = __cxa_allocate_exception(0x38uLL);
      if ((v69[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v67, *(const std::string::value_type **)&v69[8], *(std::string::size_type *)&v69[16]);
      }
      else
      {
        *(_OWORD *)v67 = *(_OWORD *)&v69[8];
        *(void *)&v67[16] = *(void *)&v69[24];
      }
      YAML::InvalidNode::InvalidNode(v62, (uint64_t)v67);
    }
    *(void *)v67 = v69;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)v67, &__p);
    BOOL IsBool = siri::intelligence::StringIsBool((uint64_t)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v70) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v70);
    }
    int v28 = !IsBool;
    if ((v69[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v69[8]);
    }
  }
  else
  {
    int v28 = 1;
  }
  if (v75) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v75);
  }
  if ((v74[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v74[8]);
    if (!v28) {
      goto LABEL_152;
    }
  }
  else if (!v28)
  {
    goto LABEL_152;
  }
  std::string::basic_string[abi:ne180100]<0>(v67, "Invalid BOOL value found for 'enabled' on Test");
  YAML::Node::operator[]<char [8]>(this, "enabled", (uint64_t)v74);
  if (!v74[0])
  {
    v60 = __cxa_allocate_exception(0x38uLL);
    if ((v74[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v69, *(const std::string::value_type **)&v74[8], *(std::string::size_type *)&v74[16]);
    }
    else
    {
      *(_OWORD *)v69 = *(_OWORD *)&v74[8];
      *(void *)&v69[16] = *(void *)&v74[24];
    }
    YAML::InvalidNode::InvalidNode(v60, (uint64_t)v69);
  }
  if (v76) {
    uint64_t v29 = *(void *)(**v76 + 4);
  }
  else {
    HIDWORD(v29) = -1;
  }
  siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)v67, HIDWORD(v29) + 1);
  if (v75) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v75);
  }
  if ((v74[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v74[8]);
  }
  if ((v67[23] & 0x80000000) != 0) {
    operator delete(*(void **)v67);
  }
LABEL_152:
  YAML::Node::operator[]<char [6]>(this, "steps", (uint64_t)v74);
  BOOL v30 = !v74[0] || v76 && !*(unsigned char *)**v76;
  if (v75) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v75);
  }
  if ((v74[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v74[8]);
    if (v30) {
      goto LABEL_215;
    }
  }
  else if (v30)
  {
    goto LABEL_215;
  }
  YAML::Node::operator[]<char [6]>(this, "steps", (uint64_t)v74);
  if (!v74[0])
  {
    v56 = __cxa_allocate_exception(0x38uLL);
    if ((v74[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v69, *(const std::string::value_type **)&v74[8], *(std::string::size_type *)&v74[16]);
    }
    else
    {
      *(_OWORD *)v69 = *(_OWORD *)&v74[8];
      *(void *)&v69[16] = *(void *)&v74[24];
    }
    YAML::InvalidNode::InvalidNode(v56, (uint64_t)v69);
  }
  if (v76)
  {
    uint64_t v31 = **v76;
    if (*(unsigned char *)v31) {
      int v32 = *(_DWORD *)(v31 + 16);
    }
    else {
      int v32 = 0;
    }
  }
  else
  {
    int v32 = 1;
  }
  if (v75) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v75);
  }
  if ((v74[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v74[8]);
  }
  if (v32 == 3)
  {
    YAML::Node::operator[]<char [6]>(this, "steps", (uint64_t)v69);
    if (v69[0] && v71)
    {
      YAML::detail::node_data::begin(**v71, (uint64_t)v74);
      uint64_t v34 = *(void *)&v69[32];
      uint64_t v33 = v70;
      if (v70)
      {
        atomic_fetch_add_explicit(&v70->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)v67 = *(_OWORD *)v74;
        *(_OWORD *)&v67[16] = *(_OWORD *)&v74[16];
        *(void *)&v67[32] = v34;
        v68 = v33;
        atomic_fetch_add_explicit(&v33->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v33);
      }
      else
      {
        *(_OWORD *)v67 = *(_OWORD *)v74;
        *(_OWORD *)&v67[16] = *(_OWORD *)&v74[16];
        *(void *)&v67[32] = *(void *)&v69[32];
        v68 = 0;
      }
    }
    else
    {
      *(_DWORD *)v67 = 0;
      memset(&v67[8], 0, 32);
      v68 = 0;
    }
    if (v69[0] && v71)
    {
      YAML::detail::node_data::end(**v71, (uint64_t)v74);
      uint64_t v37 = v70;
      if (v70)
      {
        atomic_fetch_add_explicit(&v70->__shared_owners_, 1uLL, memory_order_relaxed);
        int v38 = *(_DWORD *)v74;
        uint64_t v39 = *(void *)&v74[8];
        uint64_t v40 = *(void *)&v74[16];
        atomic_fetch_add_explicit(&v37->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v37);
      }
      else
      {
        int v38 = *(_DWORD *)v74;
        uint64_t v39 = *(void *)&v74[8];
        uint64_t v40 = *(void *)&v74[16];
      }
    }
    else
    {
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      uint64_t v37 = 0;
      int v38 = 0;
    }
    while (1)
    {
      if (*(_DWORD *)v67 == v38)
      {
        v41 = &v67[8];
        uint64_t v42 = v39;
        if (v38 != 1)
        {
          if (v38 != 2) {
            break;
          }
          v41 = &v67[16];
          uint64_t v42 = v40;
        }
        if (*(void *)v41 == v42) {
          break;
        }
      }
      YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v67, (uint64_t)v74);
      siri::intelligence::ValidateFlowTest_Step((siri::intelligence *)v74, a2, v43);
      if (v85) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v85);
      }
      if (SHIBYTE(v84) < 0) {
        operator delete((void *)v83);
      }
      if (v80[0]) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v80[0]);
      }
      if (SHIBYTE(v79) < 0) {
        operator delete((void *)v78);
      }
      if (v75) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v75);
      }
      if ((v74[31] & 0x80000000) != 0) {
        operator delete(*(void **)&v74[8]);
      }
      YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v67);
    }
    if (v37) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v37);
    }
    if (v68) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v68);
    }
    if (v70) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v70);
    }
    if ((v69[31] & 0x80000000) != 0)
    {
      uint64_t v36 = *(void **)&v69[8];
      goto LABEL_214;
    }
  }
  else
  {
    YAML::Node::operator[]<char [6]>(this, "steps", (uint64_t)v74);
    siri::intelligence::ValidateFlowTest_Step((siri::intelligence *)v74, a2, v35);
    if (v75) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v75);
    }
    if ((v74[31] & 0x80000000) != 0)
    {
      uint64_t v36 = *(void **)&v74[8];
LABEL_214:
      operator delete(v36);
    }
  }
LABEL_215:
  YAML::Node::operator[]<char [7]>(this, "repeat", (uint64_t)v74);
  BOOL v44 = !v74[0] || v76 && !*(unsigned char *)**v76;
  if (v75) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v75);
  }
  if ((v74[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v74[8]);
    if (v44) {
      return;
    }
  }
  else if (v44)
  {
    return;
  }
  YAML::Node::operator[]<char [7]>(this, "repeat", (uint64_t)v74);
  if (!v74[0])
  {
    v57 = __cxa_allocate_exception(0x38uLL);
    if ((v74[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v69, *(const std::string::value_type **)&v74[8], *(std::string::size_type *)&v74[16]);
    }
    else
    {
      *(_OWORD *)v69 = *(_OWORD *)&v74[8];
      *(void *)&v69[16] = *(void *)&v74[24];
    }
    YAML::InvalidNode::InvalidNode(v57, (uint64_t)v69);
  }
  if (v76 && (uint64_t v45 = **v76, *(unsigned char *)v45) && *(_DWORD *)(v45 + 16) == 2)
  {
    YAML::Node::operator[]<char [7]>(this, "repeat", (uint64_t)v69);
    if (!v69[0])
    {
      v63 = __cxa_allocate_exception(0x38uLL);
      if ((v69[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v67, *(const std::string::value_type **)&v69[8], *(std::string::size_type *)&v69[16]);
      }
      else
      {
        *(_OWORD *)v67 = *(_OWORD *)&v69[8];
        *(void *)&v67[16] = *(void *)&v69[24];
      }
      YAML::InvalidNode::InvalidNode(v63, (uint64_t)v67);
    }
    *(void *)v67 = v69;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)v67, &__p);
    int IsANumber = siri::intelligence::StringIsANumber(&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v70) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v70);
    }
    int v47 = IsANumber ^ 1;
    if ((v69[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v69[8]);
    }
  }
  else
  {
    int v47 = 1;
  }
  if (v75) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v75);
  }
  if ((v74[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v74[8]);
    if (!v47) {
      return;
    }
  }
  else if (!v47)
  {
    return;
  }
  std::string::basic_string[abi:ne180100]<0>(v67, "Invalid int32 value found for 'repeat' on Test");
  YAML::Node::operator[]<char [7]>(this, "repeat", (uint64_t)v74);
  if (!v74[0])
  {
    v61 = __cxa_allocate_exception(0x38uLL);
    if ((v74[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v69, *(const std::string::value_type **)&v74[8], *(std::string::size_type *)&v74[16]);
    }
    else
    {
      *(_OWORD *)v69 = *(_OWORD *)&v74[8];
      *(void *)&v69[16] = *(void *)&v74[24];
    }
    YAML::InvalidNode::InvalidNode(v61, (uint64_t)v69);
  }
  if (v76) {
    int v48 = *(_DWORD *)(**v76 + 8) + 1;
  }
  else {
    int v48 = 0;
  }
  siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)v67, v48);
  if (v75) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v75);
  }
  if ((v74[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v74[8]);
  }
  if ((v67[23] & 0x80000000) != 0) {
    operator delete(*(void **)v67);
  }
}

void sub_239A1D230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,char a46)
{
  uint64_t v48 = 0;
  while (1)
  {
    if (*(char *)(v46 + v48 + 119) < 0) {
      operator delete(*(void **)(v46 + v48 + 96));
    }
    v48 -= 24;
    if (v48 == -120)
    {
      __cxa_guard_abort(&qword_26AD865B8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t std::set<std::string>::set[abi:ne180100](uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 24 * a3;
    do
    {
      std::__tree<std::string>::__emplace_hint_unique_key_args<std::string,std::string const&>((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 3;
      v6 -= 24;
    }
    while (v6);
  }
  return a1;
}

void sub_239A1D5B0(_Unwind_Exception *a1)
{
  std::__tree<std::string>::destroy(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::string>::__emplace_hint_unique_key_args<std::string,std::string const&>(uint64_t **a1, uint64_t *a2, const void **a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)std::__tree<std::string>::__find_equal<std::string>(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    std::__tree<std::string>::__construct_node<std::string const&>((uint64_t)a1, a4, (uint64_t)&v8);
    std::__tree<std::string>::__insert_node_at(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

const void **std::__tree<std::string>::__find_equal<std::string>(void *a1, uint64_t *a2, const void ***a3, uint64_t *a4, const void **a5)
{
  uint64_t v9 = (const void **)(a1 + 1);
  if (a1 + 1 != a2 && !std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), a5, (const void **)a2 + 4))
  {
    if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), (const void **)a2 + 4, a5))
    {
      *a3 = (const void **)a2;
      *a4 = (uint64_t)a2;
      return (const void **)a4;
    }
    a4 = a2 + 1;
    uint64_t v13 = a2[1];
    if (v13)
    {
      uint64_t v14 = (const void **)a2[1];
      do
      {
        uint64_t v15 = v14;
        uint64_t v14 = (const void **)*v14;
      }
      while (v14);
    }
    else
    {
      uint64_t v18 = (const void **)a2;
      do
      {
        uint64_t v15 = (const void **)v18[2];
        BOOL v17 = *v15 == v18;
        uint64_t v18 = v15;
      }
      while (!v17);
    }
    if (v15 != v9)
    {
      if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), a5, v15 + 4)) {
        goto LABEL_28;
      }
      uint64_t v13 = *a4;
    }
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = (const void **)a2;
    }
    return (const void **)a4;
  }
  if ((uint64_t *)*a1 == a2)
  {
    int v12 = (const void **)a2;
LABEL_16:
    if (*a2)
    {
      *a3 = v12;
      return v12 + 1;
    }
    else
    {
      *a3 = (const void **)a2;
      return (const void **)a2;
    }
  }
  uint64_t v11 = (const void **)*a2;
  if (*a2)
  {
    do
    {
      int v12 = v11;
      uint64_t v11 = (const void **)v11[1];
    }
    while (v11);
  }
  else
  {
    uint64_t v16 = a2;
    do
    {
      int v12 = (const void **)v16[2];
      BOOL v17 = *v12 == v16;
      uint64_t v16 = (uint64_t *)v12;
    }
    while (v17);
  }
  if (std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), v12 + 4, a5)) {
    goto LABEL_16;
  }
LABEL_28:

  return (const void **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, a3, a5);
}

void std::__tree<std::string>::__construct_node<std::string const&>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x38uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v7 = (std::string *)(v6 + 32);
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    v7->__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
  }
  *(unsigned char *)(a3 + 16) = 1;
}

void sub_239A1D87C(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::string>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  uint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  uint64_t result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

BOOL std::less<std::string>::operator()[abi:ne180100](uint64_t a1, const void **a2, const void **a3)
{
  int v3 = *((char *)a3 + 23);
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = (size_t)a2[1];
  }
  if (v4 >= 0) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = *a2;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v7 = (size_t)a3[1];
  }
  if (v3 >= 0) {
    BOOL v8 = a3;
  }
  else {
    BOOL v8 = *a3;
  }
  if (v7 >= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = v7;
  }
  int v10 = memcmp(v6, v8, v9);
  if (v10) {
    return v10 < 0;
  }
  else {
    return v5 < v7;
  }
}

void *std::__tree<std::string>::__find_equal<std::string>(uint64_t a1, void *a2, const void **a3)
{
  size_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        BOOL v8 = (void *)v4;
        size_t v9 = (const void **)(v4 + 32);
        if (!std::less<std::string>::operator()[abi:ne180100](v7, a3, (const void **)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v8;
        size_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!std::less<std::string>::operator()[abi:ne180100](v7, v9, a3)) {
        break;
      }
      size_t v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    BOOL v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 55) < 0) {
      operator delete(__p[4]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

YAML::detail::iterator_value *YAML::detail::iterator_value::iterator_value(YAML::detail::iterator_value *this, const YAML::Node *a2)
{
  *(unsigned char *)this = *(unsigned char *)a2;
  uint64_t v4 = (std::string *)((char *)this + 8);
  if (*((char *)a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)a2 + 1), *((void *)a2 + 2));
  }
  else
  {
    long long v5 = *(_OWORD *)((char *)a2 + 8);
    v4->__r_.__value_.__r.__words[2] = *((void *)a2 + 3);
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v5;
  }
  *((void *)this + 4) = *((void *)a2 + 4);
  uint64_t v6 = *((void *)a2 + 5);
  *((void *)this + 5) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  *((void *)this + 6) = *((void *)a2 + 6);
  v12[0] = 0;
  *(_OWORD *)uint64_t v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  v8[0] = 0;
  *(_OWORD *)std::string __p = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  std::pair<YAML::Node,YAML::Node>::pair[abi:ne180100]<YAML::Node,YAML::Node,0>((uint64_t)this + 56, (uint64_t)v12, (uint64_t)v8);
  if ((void)v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v11);
  }
  if (SBYTE7(v10) < 0) {
    operator delete(__p[0]);
  }
  if ((void)v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v15);
  }
  if (SBYTE7(v14) < 0) {
    operator delete(v13[0]);
  }
  return this;
}

void sub_239A1DB4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  YAML::Node::~Node((YAML::Node *)&a9);
  YAML::Node::~Node((YAML::Node *)&a16);
  YAML::Node::~Node(v16);
  _Unwind_Resume(a1);
}

uint64_t std::pair<YAML::Node,YAML::Node>::pair[abi:ne180100]<YAML::Node,YAML::Node,0>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (std::string *)(a1 + 8);
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v6, *(const std::string::value_type **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 8);
    v6->__r_.__value_.__r.__words[2] = *(void *)(a2 + 24);
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
  }
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)a3;
  size_t v9 = (std::string *)(a1 + 64);
  if (*(char *)(a3 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v9, *(const std::string::value_type **)(a3 + 8), *(void *)(a3 + 16));
  }
  else
  {
    long long v10 = *(_OWORD *)(a3 + 8);
    *(void *)(a1 + 80) = *(void *)(a3 + 24);
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = v10;
  }
  uint64_t v11 = *(void *)(a3 + 40);
  *(void *)(a1 + 88) = *(void *)(a3 + 32);
  *(void *)(a1 + 96) = v11;
  if (v11) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 104) = *(void *)(a3 + 48);
  return a1;
}

void sub_239A1DC48(_Unwind_Exception *a1)
{
  YAML::Node::~Node(v1);
  _Unwind_Resume(a1);
}

YAML::detail::iterator_value *YAML::detail::iterator_value::iterator_value(YAML::detail::iterator_value *this, const YAML::Node *a2, const YAML::Node *a3)
{
  *(unsigned char *)this = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  std::pair<YAML::Node,YAML::Node>::pair[abi:ne180100]<true,0>((uint64_t)this + 56, (uint64_t)a2, (uint64_t)a3);
  return this;
}

void sub_239A1DC9C(_Unwind_Exception *a1)
{
  YAML::Node::~Node(v1);
  _Unwind_Resume(a1);
}

uint64_t std::pair<YAML::Node,YAML::Node>::pair[abi:ne180100]<true,0>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (std::string *)(a1 + 8);
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v6, *(const std::string::value_type **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 8);
    v6->__r_.__value_.__r.__words[2] = *(void *)(a2 + 24);
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
  }
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)a3;
  size_t v9 = (std::string *)(a1 + 64);
  if (*(char *)(a3 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v9, *(const std::string::value_type **)(a3 + 8), *(void *)(a3 + 16));
  }
  else
  {
    long long v10 = *(_OWORD *)(a3 + 8);
    *(void *)(a1 + 80) = *(void *)(a3 + 24);
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = v10;
  }
  uint64_t v11 = *(void *)(a3 + 40);
  *(void *)(a1 + 88) = *(void *)(a3 + 32);
  *(void *)(a1 + 96) = v11;
  if (v11) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 104) = *(void *)(a3 + 48);
  return a1;
}

void sub_239A1DD88(_Unwind_Exception *a1)
{
  YAML::Node::~Node(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__tree<std::string>::find<std::string>(uint64_t a1, const void **a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a1 + 8;
  do
  {
    BOOL v7 = std::less<std::string>::operator()[abi:ne180100](v5, (const void **)(v3 + 32), a2);
    uint64_t v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v3;
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v8;
  }
  while (*v8);
  if (v6 == v2 || std::less<std::string>::operator()[abi:ne180100](v5, a2, (const void **)(v6 + 32))) {
    return v2;
  }
  return v6;
}

void YAML::as_if<std::string,void>::operator()(YAML::Node **a1@<X0>, std::string *a2@<X8>)
{
  if (YAML::Node::Type(*a1) != 2)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    uint64_t v10 = YAML::Node::Mark(*a1);
    int v11 = v9;
    YAML::BadConversion::BadConversion(exception, &v10);
    void *exception = &unk_26ED27458;
  }
  uint64_t v4 = YAML::Node::Scalar(*a1);
  if (*((char *)v4 + 23) < 0)
  {
    uint64_t v6 = (const std::string::value_type *)*v4;
    std::string::size_type v7 = v4[1];
    std::string::__init_copy_ctor_external(a2, v6, v7);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    a2->__r_.__value_.__r.__words[2] = v4[2];
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v5;
  }
}

void sub_239A1DF14(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t YAML::Node::Type(YAML::Node *this)
{
  if (!*(unsigned char *)this)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v6, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v6 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v6);
  }
  uint64_t v2 = (uint64_t **)*((void *)this + 6);
  if (!v2) {
    return 1;
  }
  uint64_t v3 = **v2;
  if (*(unsigned char *)v3) {
    return *(unsigned int *)(v3 + 16);
  }
  else {
    return 0;
  }
}

void sub_239A1DFFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t *YAML::Node::Scalar(YAML::Node *this)
{
  if (!*(unsigned char *)this)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v5, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v5 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v5);
  }
  uint64_t v2 = (void **)*((void *)this + 6);
  if (v2) {
    return (uint64_t *)(**v2 + 56);
  }

  return YAML::detail::node_data::empty_scalar(this);
}

void sub_239A1E118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void *YAML::BadConversion::BadConversion(void *a1, _DWORD *a2)
{
  std::string::basic_string[abi:ne180100]<0>(__p, "bad conversion");
  YAML::Exception::Exception((uint64_t)a1, a2, (uint64_t)__p);
  *a1 = &unk_26ED2A5C8;
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  *a1 = &unk_26ED2A688;
  return a1;
}

void sub_239A1E1E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void YAML::TypedBadConversion<std::string>::~TypedBadConversion(std::runtime_error *a1)
{
  YAML::Exception::~Exception(a1);

  JUMPOUT(0x23ECAACC0);
}

uint64_t YAML::detail::node_iterator_base<YAML::detail::node>::operator++(uint64_t result)
{
  if (*(_DWORD *)result == 2)
  {
    uint64_t v1 = *(unsigned char *****)(result + 24);
    uint64_t v2 = (unsigned char ****)(*(void *)(result + 16) + 16);
    if (v1 != v2)
    {
      while (!****v2 || !***v2[1])
      {
        v2 += 2;
        if (v2 == v1)
        {
          uint64_t v2 = *(unsigned char *****)(result + 24);
          break;
        }
      }
    }
    *(void *)(result + 16) = v2;
  }
  else if (*(_DWORD *)result == 1)
  {
    *(void *)(result + 8) += 8;
  }
  return result;
}

std::__shared_weak_count *YAML::detail::node::get<std::string>(uint64_t **a1, unsigned __int8 *a2, uint64_t *a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (std::__shared_weak_count *)a3[1];
  uint64_t v7 = *a3;
  uint64_t v8 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  std::string v5 = YAML::detail::node_ref::get<std::string>(v3, a2, &v7);
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
  return v5;
}

void sub_239A1E30C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

std::__shared_weak_count *YAML::detail::node_ref::get<std::string>(uint64_t *a1, unsigned __int8 *a2, uint64_t *a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (std::__shared_weak_count *)a3[1];
  uint64_t v7 = *a3;
  uint64_t v8 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  std::string v5 = YAML::detail::node_data::get<std::string>(v3, a2, &v7);
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
  return v5;
}

void sub_239A1E380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

std::__shared_weak_count *YAML::detail::node_data::get<std::string>(uint64_t a1, unsigned __int8 *a2, uint64_t *a3)
{
  unsigned int v3 = *(_DWORD *)(a1 + 16);
  if (v3 < 2) {
    return 0;
  }
  if (v3 == 3)
  {
    uint64_t result = (std::__shared_weak_count *)a3[1];
    if (!result) {
      return result;
    }
    atomic_fetch_add_explicit(&result->__shared_owners_, 1uLL, memory_order_relaxed);
    std::__shared_weak_count::__release_shared[abi:ne180100](result);
    return 0;
  }
  if (v3 == 2)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    YAML::BadSubscript::BadSubscript<std::string>(exception, a2);
  }
  uint64_t v7 = *(uint64_t **)(a1 + 112);
  if (v7 == *(uint64_t **)(a1 + 120)) {
    return 0;
  }
  while (1)
  {
    uint64_t v8 = *v7;
    int v9 = (std::__shared_weak_count *)a3[1];
    uint64_t v13 = *a3;
    long long v14 = v9;
    if (v9) {
      atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    int v10 = YAML::detail::node::equals<std::string>(v8, a2, &v13);
    if (v14) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v14);
    }
    if (v10) {
      break;
    }
    v7 += 2;
    if (v7 == *(uint64_t **)(a1 + 120)) {
      return 0;
    }
  }
  return (std::__shared_weak_count *)v7[1];
}

void sub_239A1E4A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  __cxa_free_exception(v10);
  _Unwind_Resume(a1);
}

uint64_t YAML::detail::node::equals<std::string>(uint64_t a1, unsigned __int8 *a2, uint64_t *a3)
{
  memset(&__s1, 0, sizeof(__s1));
  uint64_t v4 = *a3;
  std::string v5 = (std::__shared_weak_count *)a3[1];
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    std::string __p = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = v4;
    uint64_t v27 = v5;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    std::string __p = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = v4;
    uint64_t v27 = 0;
  }
  v22[0] = 1;
  uint64_t v28 = a1;
  BOOL v6 = YAML::convert<std::string>::decode((YAML::Node *)v22, &__s1);
  if (v27) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v27);
  }
  if (SHIBYTE(v25) < 0) {
    operator delete(__p);
  }
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
  if (!v6) {
    goto LABEL_29;
  }
  if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __s1.__r_.__value_.__l.__size_;
  }
  uint64_t v8 = a2[23];
  int v9 = (char)v8;
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *((void *)a2 + 1);
  }
  if (size == v8)
  {
    if (v9 >= 0) {
      int v10 = a2;
    }
    else {
      int v10 = *(unsigned __int8 **)a2;
    }
    if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) != 0)
    {
      uint64_t v20 = (void *)__s1.__r_.__value_.__r.__words[0];
      BOOL v19 = memcmp(__s1.__r_.__value_.__l.__data_, v10, __s1.__r_.__value_.__l.__size_) == 0;
      goto LABEL_33;
    }
    if (!*((unsigned char *)&__s1.__r_.__value_.__s + 23)) {
      return 1;
    }
    uint64_t v11 = HIBYTE(__s1.__r_.__value_.__r.__words[2]) - 1;
    p_s1 = &__s1;
    do
    {
      int v14 = p_s1->__r_.__value_.__s.__data_[0];
      p_s1 = (std::string *)((char *)p_s1 + 1);
      int v13 = v14;
      int v16 = *v10++;
      int v15 = v16;
      BOOL v18 = v11-- != 0;
      BOOL v19 = v13 == v15;
    }
    while (v13 == v15 && v18);
  }
  else
  {
LABEL_29:
    BOOL v19 = 0;
  }
  if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) != 0)
  {
    uint64_t v20 = (void *)__s1.__r_.__value_.__r.__words[0];
LABEL_33:
    operator delete(v20);
  }
  return v19;
}

void sub_239A1E630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  YAML::Node::~Node((YAML::Node *)&a9);
  if (v21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v21);
  }
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *YAML::BadSubscript::BadSubscript<std::string>(void *a1, uint64_t a2)
{
  uint64_t v6 = -1;
  int v7 = -1;
  YAML::ErrorMsg::BAD_SUBSCRIPT_WITH_KEY(a2);
  YAML::Exception::Exception((uint64_t)a1, &v6, (uint64_t)&__p);
  *a1 = &unk_26ED2A5C8;
  if (v5 < 0) {
    operator delete(__p);
  }
  *a1 = &unk_26ED2A848;
  return a1;
}

void sub_239A1E700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t YAML::ErrorMsg::BAD_SUBSCRIPT_WITH_KEY(uint64_t a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v10);
  uint64_t v2 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)"operator[] call on a scalar", 27);
  unsigned int v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" (key: \"", 8);
  int v4 = *(char *)(a1 + 23);
  if (v4 >= 0) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = *(void *)a1;
  }
  if (v4 >= 0) {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v6 = *(void *)(a1 + 8);
  }
  int v7 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, v5, v6);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)"\")", 2);
  std::stringbuf::str();
  v10[0] = *MEMORY[0x263F8C2B8];
  uint64_t v8 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v10 + *(void *)(v10[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v11[0] = v8;
  v11[1] = MEMORY[0x263F8C318] + 16;
  if (v12 < 0) {
    operator delete((void *)v11[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v13);
}

void sub_239A1E8D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL YAML::convert<std::string>::decode(YAML::Node *a1, std::string *a2)
{
  int v4 = YAML::Node::Type(a1);
  if (v4 == 2)
  {
    uint64_t v5 = (const std::string *)YAML::Node::Scalar(a1);
    std::string::operator=(a2, v5);
  }
  return v4 == 2;
}

uint64_t streamable_to_string<char [14],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A1EABC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t streamable_to_string<char [6],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A1EC4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

void YAML::Node::operator[]<char [5]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  char v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  int v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      int v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [5],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  uint64_t v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A1EE1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void YAML::Node::operator[]<char [12]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  char v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  int v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      int v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [12],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  uint64_t v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A1F03C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void YAML::Node::operator[]<char [8]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  char v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  int v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      int v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [8],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  uint64_t v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A1F25C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::ValidateFlowTest_Step(siri::intelligence *this, const YAML::Node *a2, siri::intelligence::ValidationResults *a3)
{
  uint64_t v3 = this;
  uint64_t v230 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD865C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD865C0))
  {
    std::string::basic_string[abi:ne180100]<0>(v216, "setVariables");
    std::string::basic_string[abi:ne180100]<0>(&v216[24], "startFrom");
    std::string::basic_string[abi:ne180100]<0>(&v218, "sendIntent");
    std::string::basic_string[abi:ne180100]<0>(&v220[1], "assertResponse");
    std::string::basic_string[abi:ne180100]<0>(v223, "assertCondition");
    std::set<std::string>::set[abi:ne180100]((uint64_t)&unk_26AD86620, (const void **)v216, 5);
    for (uint64_t i = 0; i != -15; i -= 3)
    {
      if (*(&v225 + i * 8) < 0) {
        operator delete(v223[i]);
      }
    }
    __cxa_atexit((void (*)(void *))std::set<std::string>::~set[abi:ne180100], &unk_26AD86620, &dword_239A02000);
    __cxa_guard_release(&qword_26AD865C0);
    uint64_t v3 = this;
  }
  if (*(unsigned char *)v3 && (int v4 = (uint64_t **)*((void *)v3 + 6)) != 0)
  {
    YAML::detail::node_data::begin(**v4, (uint64_t)v216);
    uint64_t v6 = *((void *)this + 4);
    uint64_t v5 = (std::__shared_weak_count *)*((void *)this + 5);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      *(_OWORD *)v211 = *(_OWORD *)v216;
      *(_OWORD *)&v211[16] = *(_OWORD *)&v216[16];
      *(void *)&v211[32] = v6;
      v212 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      std::__shared_weak_count::__release_shared[abi:ne180100](v5);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)v216;
      *(_OWORD *)&v211[16] = *(_OWORD *)&v216[16];
      *(void *)&v211[32] = v6;
      v212 = 0;
    }
  }
  else
  {
    *(_DWORD *)v211 = 0;
    memset(&v211[8], 0, 32);
    v212 = 0;
  }
  if (*(unsigned char *)this && (char v7 = (uint64_t **)*((void *)this + 6)) != 0)
  {
    YAML::detail::node_data::end(**v7, (uint64_t)v216);
    uint64_t v8 = (std::__shared_weak_count *)*((void *)this + 5);
    if (v8)
    {
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
      int v9 = *(_DWORD *)v216;
      uint64_t v11 = *(void *)&v216[8];
      uint64_t v10 = *(void *)&v216[16];
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
      v199 = v8;
      std::__shared_weak_count::__release_shared[abi:ne180100](v8);
    }
    else
    {
      v199 = 0;
      int v9 = *(_DWORD *)v216;
      uint64_t v11 = *(void *)&v216[8];
      uint64_t v10 = *(void *)&v216[16];
    }
  }
  else
  {
    v199 = 0;
    int v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  while (1)
  {
    if (*(_DWORD *)v211 == v9)
    {
      int v12 = &v211[8];
      uint64_t v13 = v11;
      if (v9 != 1)
      {
        if (v9 != 2) {
          break;
        }
        int v12 = &v211[16];
        uint64_t v13 = v10;
      }
      if (*(void *)v12 == v13) {
        break;
      }
    }
    YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v211, (uint64_t)v216);
    if (!v219)
    {
      exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
      if (SHIBYTE(v221) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v206, (const std::string::value_type *)v220[0], (std::string::size_type)v220[1]);
      }
      else
      {
        *(_OWORD *)v206 = *(_OWORD *)v220;
        *(void *)&v206[16] = v221;
      }
      YAML::InvalidNode::InvalidNode(exception, (uint64_t)v206);
    }
    *(void *)v206 = &v219;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)v206, (std::string *)__p);
    uint64_t v14 = (void *)std::__tree<std::string>::find<std::string>((uint64_t)&unk_26AD86620, (const void **)__p);
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
    if (v14 == &unk_26AD86628)
    {
      if (!v219)
      {
        v153 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v221) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)v206, (const std::string::value_type *)v220[0], (std::string::size_type)v220[1]);
        }
        else
        {
          *(_OWORD *)v206 = *(_OWORD *)v220;
          *(void *)&v206[16] = v221;
        }
        YAML::InvalidNode::InvalidNode(v153, (uint64_t)v206);
      }
      *(void *)v206 = &v219;
      YAML::as_if<std::string,void>::operator()((YAML::Node **)v206, &v215);
      int v15 = std::string::insert(&v215, 0, "Unsupported field for Step found in flow file: ");
      *(std::string *)std::string __p = *v15;
      v15->__r_.__value_.__l.__size_ = 0;
      v15->__r_.__value_.__r.__words[2] = 0;
      v15->__r_.__value_.__r.__words[0] = 0;
      if (!v224)
      {
        v152 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v227) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)v206, (const std::string::value_type *)v226, *((std::string::size_type *)&v226 + 1));
        }
        else
        {
          *(_OWORD *)v206 = v226;
          *(void *)&v206[16] = v227;
        }
        YAML::InvalidNode::InvalidNode(v152, (uint64_t)v206);
      }
      if (v229) {
        uint64_t v16 = *(void *)(**(void **)v229 + 4);
      }
      else {
        HIDWORD(v16) = -1;
      }
      siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)__p, SHIDWORD(v16));
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
      if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v215.__r_.__value_.__l.__data_);
      }
    }
    if (v228) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v228);
    }
    if (SHIBYTE(v227) < 0) {
      operator delete((void *)v226);
    }
    if (v223[0]) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v223[0]);
    }
    if (SHIBYTE(v221) < 0) {
      operator delete(v220[0]);
    }
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v211);
  }
  if (v199) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v199);
  }
  if (v212) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v212);
  }
  YAML::Node::operator[]<char [13]>(this, "setVariables", (uint64_t)v216);
  BOOL v17 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v17) {
      goto LABEL_112;
    }
  }
  else if (v17)
  {
    goto LABEL_112;
  }
  YAML::Node::operator[]<char [13]>(this, "setVariables", (uint64_t)v216);
  if (!v216[0])
  {
    v163 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v163, (uint64_t)v211);
  }
  if (v218)
  {
    uint64_t v18 = **v218;
    if (*(unsigned char *)v18) {
      int v19 = *(_DWORD *)(v18 + 16);
    }
    else {
      int v19 = 0;
    }
  }
  else
  {
    int v19 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v19 == 3)
  {
    YAML::Node::operator[]<char [13]>(this, "setVariables", (uint64_t)v211);
    if (v211[0] && v213)
    {
      YAML::detail::node_data::begin(**v213, (uint64_t)v216);
      uint64_t v21 = *(void *)&v211[32];
      uint64_t v20 = v212;
      if (v212)
      {
        atomic_fetch_add_explicit(&v212->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)v206 = *(_OWORD *)v216;
        *(_OWORD *)&v206[16] = *(_OWORD *)&v216[16];
        *(void *)&v206[32] = v21;
        v207 = v20;
        atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v20);
      }
      else
      {
        *(_OWORD *)v206 = *(_OWORD *)v216;
        *(_OWORD *)&v206[16] = *(_OWORD *)&v216[16];
        *(void *)&v206[32] = *(void *)&v211[32];
        v207 = 0;
      }
    }
    else
    {
      *(_DWORD *)v206 = 0;
      memset(&v206[8], 0, 32);
      v207 = 0;
    }
    if (v211[0] && v213)
    {
      YAML::detail::node_data::end(**v213, (uint64_t)v216);
      uint64_t v24 = v212;
      if (v212)
      {
        atomic_fetch_add_explicit(&v212->__shared_owners_, 1uLL, memory_order_relaxed);
        int v25 = *(_DWORD *)v216;
        uint64_t v26 = *(void *)&v216[8];
        uint64_t v27 = *(void *)&v216[16];
        atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v24);
      }
      else
      {
        int v25 = *(_DWORD *)v216;
        uint64_t v26 = *(void *)&v216[8];
        uint64_t v27 = *(void *)&v216[16];
      }
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v24 = 0;
      int v25 = 0;
    }
    while (1)
    {
      if (*(_DWORD *)v206 == v25)
      {
        uint64_t v28 = &v206[8];
        uint64_t v29 = v26;
        if (v25 != 1)
        {
          if (v25 != 2) {
            break;
          }
          uint64_t v28 = &v206[16];
          uint64_t v29 = v27;
        }
        if (*(void *)v28 == v29) {
          break;
        }
      }
      YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v206, (uint64_t)v216);
      siri::intelligence::ValidateFlowTest_KeyValueParameter((siri::intelligence *)v216, a2, v30);
      if (v228) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v228);
      }
      if (SHIBYTE(v227) < 0) {
        operator delete((void *)v226);
      }
      if (v223[0]) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v223[0]);
      }
      if (SHIBYTE(v221) < 0) {
        operator delete(v220[0]);
      }
      if (v217) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v217);
      }
      if ((v216[31] & 0x80000000) != 0) {
        operator delete(*(void **)&v216[8]);
      }
      YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v206);
    }
    if (v24) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v24);
    }
    if (v207) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v207);
    }
    if (v212) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v212);
    }
    if ((v211[31] & 0x80000000) != 0)
    {
      int v23 = *(void **)&v211[8];
      goto LABEL_111;
    }
  }
  else
  {
    YAML::Node::operator[]<char [13]>(this, "setVariables", (uint64_t)v216);
    siri::intelligence::ValidateFlowTest_KeyValueParameter((siri::intelligence *)v216, a2, v22);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0)
    {
      int v23 = *(void **)&v216[8];
LABEL_111:
      operator delete(v23);
    }
  }
LABEL_112:
  YAML::Node::operator[]<char [10]>(this, "startFrom", (uint64_t)v216);
  BOOL v31 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v31) {
      goto LABEL_260;
    }
  }
  else if (v31)
  {
    goto LABEL_260;
  }
  YAML::Node::operator[]<char [10]>(this, "startFrom", (uint64_t)v216);
  if (!v216[0])
  {
    v164 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v164, (uint64_t)v211);
  }
  if (v218)
  {
    uint64_t v32 = **v218;
    if (*(unsigned char *)v32) {
      int v33 = *(_DWORD *)(v32 + 16);
    }
    else {
      int v33 = 0;
    }
  }
  else
  {
    int v33 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v33 == 3)
  {
    std::string::basic_string[abi:ne180100]<0>(v206, "Invalid array value found for 'startFrom' on Step");
    YAML::Node::operator[]<char [10]>(this, "startFrom", (uint64_t)v216);
    if (!v216[0])
    {
      v172 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v211 = *(_OWORD *)&v216[8];
        *(void *)&v211[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v172, (uint64_t)v211);
    }
    if (v218) {
      uint64_t v34 = *(void *)(**v218 + 4);
    }
    else {
      HIDWORD(v34) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)v206, HIDWORD(v34) + 1);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((v206[23] & 0x80000000) != 0) {
      operator delete(*(void **)v206);
    }
  }
  YAML::Node::operator[]<char [10]>(this, "startFrom", (uint64_t)v211);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD865D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD865D0))
  {
    std::string::basic_string[abi:ne180100]<0>(v216, "responseId");
    std::string::basic_string[abi:ne180100]<0>(&v216[24], "activityId");
    std::set<std::string>::set[abi:ne180100]((uint64_t)&unk_26AD86650, (const void **)v216, 2);
    for (uint64_t j = 0; j != -6; j -= 3)
    {
      if (SHIBYTE((&v217)[j]) < 0) {
        operator delete(*(void **)&v216[j * 8 + 24]);
      }
    }
    __cxa_atexit((void (*)(void *))std::set<std::string>::~set[abi:ne180100], &unk_26AD86650, &dword_239A02000);
    __cxa_guard_release(&qword_26AD865D0);
  }
  if (v211[0] && v213)
  {
    YAML::detail::node_data::begin(**v213, (uint64_t)v216);
    uint64_t v36 = *(void *)&v211[32];
    uint64_t v35 = v212;
    if (v212)
    {
      atomic_fetch_add_explicit(&v212->__shared_owners_, 1uLL, memory_order_relaxed);
      *(_OWORD *)v206 = *(_OWORD *)v216;
      *(_OWORD *)&v206[16] = *(_OWORD *)&v216[16];
      *(void *)&v206[32] = v36;
      v207 = v35;
      atomic_fetch_add_explicit(&v35->__shared_owners_, 1uLL, memory_order_relaxed);
      std::__shared_weak_count::__release_shared[abi:ne180100](v35);
    }
    else
    {
      *(_OWORD *)v206 = *(_OWORD *)v216;
      *(_OWORD *)&v206[16] = *(_OWORD *)&v216[16];
      *(void *)&v206[32] = *(void *)&v211[32];
      v207 = 0;
    }
  }
  else
  {
    *(_DWORD *)v206 = 0;
    memset(&v206[8], 0, 32);
    v207 = 0;
  }
  if (v211[0] && v213)
  {
    YAML::detail::node_data::end(**v213, (uint64_t)v216);
    uint64_t v37 = v212;
    if (v212)
    {
      atomic_fetch_add_explicit(&v212->__shared_owners_, 1uLL, memory_order_relaxed);
      int v38 = *(_DWORD *)v216;
      uint64_t v40 = *(void *)&v216[8];
      uint64_t v39 = *(void *)&v216[16];
      atomic_fetch_add_explicit(&v37->__shared_owners_, 1uLL, memory_order_relaxed);
      v200 = v37;
      std::__shared_weak_count::__release_shared[abi:ne180100](v37);
    }
    else
    {
      v200 = 0;
      int v38 = *(_DWORD *)v216;
      uint64_t v40 = *(void *)&v216[8];
      uint64_t v39 = *(void *)&v216[16];
    }
  }
  else
  {
    v200 = 0;
    int v38 = 0;
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  while (1)
  {
    if (*(_DWORD *)v206 == v38)
    {
      v41 = &v206[8];
      uint64_t v42 = v40;
      if (v38 != 1)
      {
        if (v38 != 2) {
          break;
        }
        v41 = &v206[16];
        uint64_t v42 = v39;
      }
      if (*(void *)v41 == v42) {
        break;
      }
    }
    YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v206, (uint64_t)v216);
    if (!v219)
    {
      v148 = __cxa_allocate_exception(0x38uLL);
      if (SHIBYTE(v221) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)__p, (const std::string::value_type *)v220[0], (std::string::size_type)v220[1]);
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)v220;
        *(void *)&__p[16] = v221;
      }
      YAML::InvalidNode::InvalidNode(v148, (uint64_t)__p);
    }
    *(void *)std::string __p = &v219;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)__p, &v215);
    uint64_t v43 = (void *)std::__tree<std::string>::find<std::string>((uint64_t)&unk_26AD86650, (const void **)&v215.__r_.__value_.__l.__data_);
    if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v215.__r_.__value_.__l.__data_);
    }
    if (v43 == &unk_26AD86658)
    {
      if (!v219)
      {
        v155 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v221) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)__p, (const std::string::value_type *)v220[0], (std::string::size_type)v220[1]);
        }
        else
        {
          *(_OWORD *)std::string __p = *(_OWORD *)v220;
          *(void *)&__p[16] = v221;
        }
        YAML::InvalidNode::InvalidNode(v155, (uint64_t)__p);
      }
      *(void *)std::string __p = &v219;
      YAML::as_if<std::string,void>::operator()((YAML::Node **)__p, &v214);
      BOOL v44 = std::string::insert(&v214, 0, "Unsupported field for StartFrom found in flow file: ");
      std::string v215 = *v44;
      v44->__r_.__value_.__l.__size_ = 0;
      v44->__r_.__value_.__r.__words[2] = 0;
      v44->__r_.__value_.__r.__words[0] = 0;
      if (!v224)
      {
        v154 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v227) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)__p, (const std::string::value_type *)v226, *((std::string::size_type *)&v226 + 1));
        }
        else
        {
          *(_OWORD *)std::string __p = v226;
          *(void *)&__p[16] = v227;
        }
        YAML::InvalidNode::InvalidNode(v154, (uint64_t)__p);
      }
      if (v229) {
        uint64_t v45 = *(void *)(**(void **)v229 + 4);
      }
      else {
        HIDWORD(v45) = -1;
      }
      siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)&v215, SHIDWORD(v45));
      if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v215.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v214.__r_.__value_.__l.__data_);
      }
    }
    if (v228) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v228);
    }
    if (SHIBYTE(v227) < 0) {
      operator delete((void *)v226);
    }
    if (v223[0]) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v223[0]);
    }
    if (SHIBYTE(v221) < 0) {
      operator delete(v220[0]);
    }
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v206);
  }
  if (v200) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v200);
  }
  if (v207) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v207);
  }
  YAML::Node::operator[]<char [11]>((YAML::Node *)v211, "responseId", (uint64_t)v216);
  BOOL v46 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v46) {
      goto LABEL_224;
    }
  }
  else if (v46)
  {
    goto LABEL_224;
  }
  YAML::Node::operator[]<char [11]>((YAML::Node *)v211, "responseId", (uint64_t)v216);
  if (!v216[0])
  {
    v174 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v206, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v206 = *(_OWORD *)&v216[8];
      *(void *)&v206[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v174, (uint64_t)v206);
  }
  if (v218)
  {
    uint64_t v47 = **v218;
    if (*(unsigned char *)v47) {
      int v48 = *(_DWORD *)(v47 + 16);
    }
    else {
      int v48 = 0;
    }
  }
  else
  {
    int v48 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v48 != 2)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Invalid string value found for 'responseId' on StartFrom");
    YAML::Node::operator[]<char [11]>((YAML::Node *)v211, "responseId", (uint64_t)v216);
    if (!v216[0])
    {
      v187 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v206, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v206 = *(_OWORD *)&v216[8];
        *(void *)&v206[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v187, (uint64_t)v206);
    }
    if (v218) {
      uint64_t v49 = *(void *)(**v218 + 4);
    }
    else {
      HIDWORD(v49) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)__p, HIDWORD(v49) + 1);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }
LABEL_224:
  YAML::Node::operator[]<char [11]>((YAML::Node *)v211, "activityId", (uint64_t)v216);
  BOOL v50 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) == 0)
  {
    if (v50) {
      goto LABEL_256;
    }
LABEL_235:
    YAML::Node::operator[]<char [11]>((YAML::Node *)v211, "activityId", (uint64_t)v216);
    if (!v216[0])
    {
      v175 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v206, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v206 = *(_OWORD *)&v216[8];
        *(void *)&v206[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v175, (uint64_t)v206);
    }
    if (v218)
    {
      uint64_t v51 = **v218;
      if (*(unsigned char *)v51) {
        int v52 = *(_DWORD *)(v51 + 16);
      }
      else {
        int v52 = 0;
      }
    }
    else
    {
      int v52 = 1;
    }
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if (v52 != 2)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "Invalid string value found for 'activityId' on StartFrom");
      YAML::Node::operator[]<char [11]>((YAML::Node *)v211, "activityId", (uint64_t)v216);
      if (!v216[0])
      {
        v188 = __cxa_allocate_exception(0x38uLL);
        if ((v216[31] & 0x80000000) != 0)
        {
          std::string::__init_copy_ctor_external((std::string *)v206, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
        }
        else
        {
          *(_OWORD *)v206 = *(_OWORD *)&v216[8];
          *(void *)&v206[16] = *(void *)&v216[24];
        }
        YAML::InvalidNode::InvalidNode(v188, (uint64_t)v206);
      }
      if (v218) {
        int v53 = *(_DWORD *)(**v218 + 8) + 1;
      }
      else {
        int v53 = 0;
      }
      siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)__p, v53);
      if (v217) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v217);
      }
      if ((v216[31] & 0x80000000) != 0) {
        operator delete(*(void **)&v216[8]);
      }
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
    }
    goto LABEL_256;
  }
  operator delete(*(void **)&v216[8]);
  if (!v50) {
    goto LABEL_235;
  }
LABEL_256:
  if (v212) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v212);
  }
  if ((v211[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v211[8]);
  }
LABEL_260:
  YAML::Node::operator[]<char [11]>(this, "sendIntent", (uint64_t)v216);
  BOOL v54 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v54) {
      goto LABEL_471;
    }
  }
  else if (v54)
  {
    goto LABEL_471;
  }
  YAML::Node::operator[]<char [11]>(this, "sendIntent", (uint64_t)v216);
  if (!v216[0])
  {
    v166 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v166, (uint64_t)v211);
  }
  if (v218)
  {
    uint64_t v55 = **v218;
    if (*(unsigned char *)v55) {
      int v56 = *(_DWORD *)(v55 + 16);
    }
    else {
      int v56 = 0;
    }
  }
  else
  {
    int v56 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v56 == 3)
  {
    std::string::basic_string[abi:ne180100]<0>(v206, "Invalid array value found for 'sendIntent' on Step");
    YAML::Node::operator[]<char [11]>(this, "sendIntent", (uint64_t)v216);
    if (!v216[0])
    {
      v173 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v211 = *(_OWORD *)&v216[8];
        *(void *)&v211[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v173, (uint64_t)v211);
    }
    if (v218) {
      uint64_t v57 = *(void *)(**v218 + 4);
    }
    else {
      HIDWORD(v57) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)v206, HIDWORD(v57) + 1);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((v206[23] & 0x80000000) != 0) {
      operator delete(*(void **)v206);
    }
  }
  YAML::Node::operator[]<char [11]>(this, "sendIntent", (uint64_t)v206);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD865D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD865D8))
  {
    std::string::basic_string[abi:ne180100]<0>(v216, "id");
    std::string::basic_string[abi:ne180100]<0>(&v216[24], "name");
    std::string::basic_string[abi:ne180100]<0>(&v218, "slots");
    std::set<std::string>::set[abi:ne180100]((uint64_t)&unk_26AD86668, (const void **)v216, 3);
    for (uint64_t k = 0; k != -9; k -= 3)
    {
      if (SHIBYTE(v220[k]) < 0) {
        operator delete((&v218)[k]);
      }
    }
    __cxa_atexit((void (*)(void *))std::set<std::string>::~set[abi:ne180100], &unk_26AD86668, &dword_239A02000);
    __cxa_guard_release(&qword_26AD865D8);
  }
  if (v206[0] && v208)
  {
    YAML::detail::node_data::begin(**v208, (uint64_t)v216);
    uint64_t v59 = *(void *)&v206[32];
    v58 = v207;
    if (v207)
    {
      atomic_fetch_add_explicit(&v207->__shared_owners_, 1uLL, memory_order_relaxed);
      *(_OWORD *)v211 = *(_OWORD *)v216;
      *(_OWORD *)&v211[16] = *(_OWORD *)&v216[16];
      *(void *)&v211[32] = v59;
      v212 = v58;
      atomic_fetch_add_explicit(&v58->__shared_owners_, 1uLL, memory_order_relaxed);
      std::__shared_weak_count::__release_shared[abi:ne180100](v58);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)v216;
      *(_OWORD *)&v211[16] = *(_OWORD *)&v216[16];
      *(void *)&v211[32] = *(void *)&v206[32];
      v212 = 0;
    }
  }
  else
  {
    *(_DWORD *)v211 = 0;
    memset(&v211[8], 0, 32);
    v212 = 0;
  }
  if (v206[0] && v208)
  {
    YAML::detail::node_data::end(**v208, (uint64_t)v216);
    v60 = v207;
    if (v207)
    {
      atomic_fetch_add_explicit(&v207->__shared_owners_, 1uLL, memory_order_relaxed);
      int v61 = *(_DWORD *)v216;
      uint64_t v63 = *(void *)&v216[8];
      uint64_t v62 = *(void *)&v216[16];
      atomic_fetch_add_explicit(&v60->__shared_owners_, 1uLL, memory_order_relaxed);
      v201 = v60;
      std::__shared_weak_count::__release_shared[abi:ne180100](v60);
    }
    else
    {
      v201 = 0;
      int v61 = *(_DWORD *)v216;
      uint64_t v63 = *(void *)&v216[8];
      uint64_t v62 = *(void *)&v216[16];
    }
  }
  else
  {
    v201 = 0;
    int v61 = 0;
    uint64_t v62 = 0;
    uint64_t v63 = 0;
  }
  while (1)
  {
    if (*(_DWORD *)v211 == v61)
    {
      v64 = &v211[8];
      uint64_t v65 = v63;
      if (v61 != 1)
      {
        if (v61 != 2) {
          break;
        }
        v64 = &v211[16];
        uint64_t v65 = v62;
      }
      if (*(void *)v64 == v65) {
        break;
      }
    }
    YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v211, (uint64_t)v216);
    if (!v219)
    {
      v149 = __cxa_allocate_exception(0x38uLL);
      if (SHIBYTE(v221) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)__p, (const std::string::value_type *)v220[0], (std::string::size_type)v220[1]);
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)v220;
        *(void *)&__p[16] = v221;
      }
      YAML::InvalidNode::InvalidNode(v149, (uint64_t)__p);
    }
    *(void *)std::string __p = &v219;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)__p, &v215);
    v66 = (void *)std::__tree<std::string>::find<std::string>((uint64_t)&unk_26AD86668, (const void **)&v215.__r_.__value_.__l.__data_);
    if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v215.__r_.__value_.__l.__data_);
    }
    if (v66 == &unk_26AD86670)
    {
      if (!v219)
      {
        v157 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v221) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)__p, (const std::string::value_type *)v220[0], (std::string::size_type)v220[1]);
        }
        else
        {
          *(_OWORD *)std::string __p = *(_OWORD *)v220;
          *(void *)&__p[16] = v221;
        }
        YAML::InvalidNode::InvalidNode(v157, (uint64_t)__p);
      }
      *(void *)std::string __p = &v219;
      YAML::as_if<std::string,void>::operator()((YAML::Node **)__p, &v214);
      v67 = std::string::insert(&v214, 0, "Unsupported field for SendIntent found in flow file: ");
      std::string v215 = *v67;
      v67->__r_.__value_.__l.__size_ = 0;
      v67->__r_.__value_.__r.__words[2] = 0;
      v67->__r_.__value_.__r.__words[0] = 0;
      if (!v224)
      {
        v156 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v227) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)__p, (const std::string::value_type *)v226, *((std::string::size_type *)&v226 + 1));
        }
        else
        {
          *(_OWORD *)std::string __p = v226;
          *(void *)&__p[16] = v227;
        }
        YAML::InvalidNode::InvalidNode(v156, (uint64_t)__p);
      }
      if (v229) {
        uint64_t v68 = *(void *)(**(void **)v229 + 4);
      }
      else {
        HIDWORD(v68) = -1;
      }
      siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)&v215, SHIDWORD(v68));
      if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v215.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v214.__r_.__value_.__l.__data_);
      }
    }
    if (v228) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v228);
    }
    if (SHIBYTE(v227) < 0) {
      operator delete((void *)v226);
    }
    if (v223[0]) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v223[0]);
    }
    if (SHIBYTE(v221) < 0) {
      operator delete(v220[0]);
    }
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v211);
  }
  if (v201) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v201);
  }
  if (v212) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v212);
  }
  YAML::Node::operator[]<char [3]>((YAML::Node *)v206, "id", (uint64_t)v216);
  BOOL v69 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v69) {
      goto LABEL_372;
    }
  }
  else if (v69)
  {
    goto LABEL_372;
  }
  YAML::Node::operator[]<char [3]>((YAML::Node *)v206, "id", (uint64_t)v216);
  if (!v216[0])
  {
    v177 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v177, (uint64_t)v211);
  }
  if (v218)
  {
    uint64_t v70 = **v218;
    if (*(unsigned char *)v70) {
      int v71 = *(_DWORD *)(v70 + 16);
    }
    else {
      int v71 = 0;
    }
  }
  else
  {
    int v71 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v71 != 2)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Invalid string value found for 'id' on SendIntent");
    YAML::Node::operator[]<char [3]>((YAML::Node *)v206, "id", (uint64_t)v216);
    if (!v216[0])
    {
      v189 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v211 = *(_OWORD *)&v216[8];
        *(void *)&v211[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v189, (uint64_t)v211);
    }
    if (v218) {
      uint64_t v72 = *(void *)(**v218 + 4);
    }
    else {
      HIDWORD(v72) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)__p, HIDWORD(v72) + 1);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }
LABEL_372:
  YAML::Node::operator[]<char [5]>((YAML::Node *)v206, "name", (uint64_t)v216);
  BOOL v73 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v73) {
      goto LABEL_404;
    }
  }
  else if (v73)
  {
    goto LABEL_404;
  }
  YAML::Node::operator[]<char [5]>((YAML::Node *)v206, "name", (uint64_t)v216);
  if (!v216[0])
  {
    v178 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v178, (uint64_t)v211);
  }
  if (v218)
  {
    uint64_t v74 = **v218;
    if (*(unsigned char *)v74) {
      int v75 = *(_DWORD *)(v74 + 16);
    }
    else {
      int v75 = 0;
    }
  }
  else
  {
    int v75 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v75 != 2)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Invalid string value found for 'name' on SendIntent");
    YAML::Node::operator[]<char [5]>((YAML::Node *)v206, "name", (uint64_t)v216);
    if (!v216[0])
    {
      v190 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v211 = *(_OWORD *)&v216[8];
        *(void *)&v211[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v190, (uint64_t)v211);
    }
    if (v218) {
      uint64_t v76 = *(void *)(**v218 + 4);
    }
    else {
      HIDWORD(v76) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)__p, HIDWORD(v76) + 1);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }
LABEL_404:
  YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "slots", (uint64_t)v216);
  BOOL v77 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v77) {
      goto LABEL_467;
    }
  }
  else if (v77)
  {
    goto LABEL_467;
  }
  YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "slots", (uint64_t)v216);
  if (!v216[0])
  {
    v179 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v179, (uint64_t)v211);
  }
  if (v218)
  {
    uint64_t v78 = **v218;
    if (*(unsigned char *)v78) {
      int v79 = *(_DWORD *)(v78 + 16);
    }
    else {
      int v79 = 0;
    }
  }
  else
  {
    int v79 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v79 == 3)
  {
    YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "slots", (uint64_t)v211);
    if (v211[0] && v213)
    {
      YAML::detail::node_data::begin(**v213, (uint64_t)v216);
      uint64_t v81 = *(void *)&v211[32];
      v80 = v212;
      if (v212)
      {
        atomic_fetch_add_explicit(&v212->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)std::string __p = *(_OWORD *)v216;
        *(_OWORD *)&__p[16] = *(_OWORD *)&v216[16];
        *(void *)&__p[32] = v81;
        v210 = v80;
        atomic_fetch_add_explicit(&v80->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v80);
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)v216;
        *(_OWORD *)&__p[16] = *(_OWORD *)&v216[16];
        *(void *)&__p[32] = *(void *)&v211[32];
        v210 = 0;
      }
    }
    else
    {
      *(_DWORD *)std::string __p = 0;
      memset(&__p[8], 0, 32);
      v210 = 0;
    }
    if (v211[0] && v213)
    {
      YAML::detail::node_data::end(**v213, (uint64_t)v216);
      uint64_t v84 = v212;
      if (v212)
      {
        atomic_fetch_add_explicit(&v212->__shared_owners_, 1uLL, memory_order_relaxed);
        int v85 = *(_DWORD *)v216;
        uint64_t v86 = *(void *)&v216[8];
        uint64_t v87 = *(void *)&v216[16];
        atomic_fetch_add_explicit(&v84->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v84);
      }
      else
      {
        int v85 = *(_DWORD *)v216;
        uint64_t v86 = *(void *)&v216[8];
        uint64_t v87 = *(void *)&v216[16];
      }
    }
    else
    {
      uint64_t v86 = 0;
      uint64_t v87 = 0;
      uint64_t v84 = 0;
      int v85 = 0;
    }
    while (1)
    {
      if (*(_DWORD *)__p == v85)
      {
        v88 = &__p[8];
        uint64_t v89 = v86;
        if (v85 != 1)
        {
          if (v85 != 2) {
            break;
          }
          v88 = &__p[16];
          uint64_t v89 = v87;
        }
        if (*(void *)v88 == v89) {
          break;
        }
      }
      YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)__p, (uint64_t)v216);
      siri::intelligence::ValidateFlowTest_KeyValueParameter((siri::intelligence *)v216, a2, v90);
      if (v228) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v228);
      }
      if (SHIBYTE(v227) < 0) {
        operator delete((void *)v226);
      }
      if (v223[0]) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v223[0]);
      }
      if (SHIBYTE(v221) < 0) {
        operator delete(v220[0]);
      }
      if (v217) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v217);
      }
      if ((v216[31] & 0x80000000) != 0) {
        operator delete(*(void **)&v216[8]);
      }
      YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)__p);
    }
    if (v84) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v84);
    }
    if (v210) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v210);
    }
    if (v212) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v212);
    }
    if ((v211[31] & 0x80000000) == 0) {
      goto LABEL_467;
    }
    long long v83 = *(void **)&v211[8];
  }
  else
  {
    YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "slots", (uint64_t)v216);
    siri::intelligence::ValidateFlowTest_KeyValueParameter((siri::intelligence *)v216, a2, v82);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) == 0) {
      goto LABEL_467;
    }
    long long v83 = *(void **)&v216[8];
  }
  operator delete(v83);
LABEL_467:
  if (v207) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v207);
  }
  if ((v206[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v206[8]);
  }
LABEL_471:
  YAML::Node::operator[]<char [15]>(this, "assertResponse", (uint64_t)v216);
  BOOL v91 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v91) {
      goto LABEL_690;
    }
  }
  else if (v91)
  {
    goto LABEL_690;
  }
  YAML::Node::operator[]<char [15]>(this, "assertResponse", (uint64_t)v216);
  if (!v216[0])
  {
    v168 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v168, (uint64_t)v211);
  }
  if (v218)
  {
    uint64_t v92 = **v218;
    if (*(unsigned char *)v92) {
      int v93 = *(_DWORD *)(v92 + 16);
    }
    else {
      int v93 = 0;
    }
  }
  else
  {
    int v93 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v93 == 3)
  {
    std::string::basic_string[abi:ne180100]<0>(v206, "Invalid array value found for 'assertResponse' on Step");
    YAML::Node::operator[]<char [15]>(this, "assertResponse", (uint64_t)v216);
    if (!v216[0])
    {
      v176 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v211 = *(_OWORD *)&v216[8];
        *(void *)&v211[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v176, (uint64_t)v211);
    }
    if (v218) {
      uint64_t v94 = *(void *)(**v218 + 4);
    }
    else {
      HIDWORD(v94) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)v206, HIDWORD(v94) + 1);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((v206[23] & 0x80000000) != 0) {
      operator delete(*(void **)v206);
    }
  }
  YAML::Node::operator[]<char [15]>(this, "assertResponse", (uint64_t)v206);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD865E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD865E0))
  {
    std::string::basic_string[abi:ne180100]<0>(v216, "id");
    std::string::basic_string[abi:ne180100]<0>(&v216[24], "anyId");
    std::string::basic_string[abi:ne180100]<0>(&v218, "allIds");
    std::string::basic_string[abi:ne180100]<0>(&v220[1], "count");
    std::set<std::string>::set[abi:ne180100]((uint64_t)&unk_26AD86680, (const void **)v216, 4);
    for (uint64_t m = 0; m != -12; m -= 3)
    {
      if (*(&v222 + m * 8) < 0) {
        operator delete(v220[m + 1]);
      }
    }
    __cxa_atexit((void (*)(void *))std::set<std::string>::~set[abi:ne180100], &unk_26AD86680, &dword_239A02000);
    __cxa_guard_release(&qword_26AD865E0);
  }
  if (v206[0] && v208)
  {
    YAML::detail::node_data::begin(**v208, (uint64_t)v216);
    uint64_t v96 = *(void *)&v206[32];
    v95 = v207;
    if (v207)
    {
      atomic_fetch_add_explicit(&v207->__shared_owners_, 1uLL, memory_order_relaxed);
      *(_OWORD *)v211 = *(_OWORD *)v216;
      *(_OWORD *)&v211[16] = *(_OWORD *)&v216[16];
      *(void *)&v211[32] = v96;
      v212 = v95;
      atomic_fetch_add_explicit(&v95->__shared_owners_, 1uLL, memory_order_relaxed);
      std::__shared_weak_count::__release_shared[abi:ne180100](v95);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)v216;
      *(_OWORD *)&v211[16] = *(_OWORD *)&v216[16];
      *(void *)&v211[32] = *(void *)&v206[32];
      v212 = 0;
    }
  }
  else
  {
    *(_DWORD *)v211 = 0;
    memset(&v211[8], 0, 32);
    v212 = 0;
  }
  if (v206[0] && v208)
  {
    YAML::detail::node_data::end(**v208, (uint64_t)v216);
    v97 = v207;
    if (v207)
    {
      atomic_fetch_add_explicit(&v207->__shared_owners_, 1uLL, memory_order_relaxed);
      int v98 = *(_DWORD *)v216;
      uint64_t v100 = *(void *)&v216[8];
      uint64_t v99 = *(void *)&v216[16];
      atomic_fetch_add_explicit(&v97->__shared_owners_, 1uLL, memory_order_relaxed);
      v202 = v97;
      std::__shared_weak_count::__release_shared[abi:ne180100](v97);
    }
    else
    {
      v202 = 0;
      int v98 = *(_DWORD *)v216;
      uint64_t v100 = *(void *)&v216[8];
      uint64_t v99 = *(void *)&v216[16];
    }
  }
  else
  {
    v202 = 0;
    int v98 = 0;
    uint64_t v99 = 0;
    uint64_t v100 = 0;
  }
  while (1)
  {
    if (*(_DWORD *)v211 == v98)
    {
      v101 = &v211[8];
      uint64_t v102 = v100;
      if (v98 != 1)
      {
        if (v98 != 2) {
          break;
        }
        v101 = &v211[16];
        uint64_t v102 = v99;
      }
      if (*(void *)v101 == v102) {
        break;
      }
    }
    YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v211, (uint64_t)v216);
    if (!v219)
    {
      v150 = __cxa_allocate_exception(0x38uLL);
      if (SHIBYTE(v221) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)__p, (const std::string::value_type *)v220[0], (std::string::size_type)v220[1]);
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)v220;
        *(void *)&__p[16] = v221;
      }
      YAML::InvalidNode::InvalidNode(v150, (uint64_t)__p);
    }
    *(void *)std::string __p = &v219;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)__p, &v215);
    v103 = (void *)std::__tree<std::string>::find<std::string>((uint64_t)&unk_26AD86680, (const void **)&v215.__r_.__value_.__l.__data_);
    if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v215.__r_.__value_.__l.__data_);
    }
    if (v103 == &unk_26AD86688)
    {
      if (!v219)
      {
        v159 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v221) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)__p, (const std::string::value_type *)v220[0], (std::string::size_type)v220[1]);
        }
        else
        {
          *(_OWORD *)std::string __p = *(_OWORD *)v220;
          *(void *)&__p[16] = v221;
        }
        YAML::InvalidNode::InvalidNode(v159, (uint64_t)__p);
      }
      *(void *)std::string __p = &v219;
      YAML::as_if<std::string,void>::operator()((YAML::Node **)__p, &v214);
      v104 = std::string::insert(&v214, 0, "Unsupported field for AssertResponse found in flow file: ");
      std::string v215 = *v104;
      v104->__r_.__value_.__l.__size_ = 0;
      v104->__r_.__value_.__r.__words[2] = 0;
      v104->__r_.__value_.__r.__words[0] = 0;
      if (!v224)
      {
        v158 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v227) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)__p, (const std::string::value_type *)v226, *((std::string::size_type *)&v226 + 1));
        }
        else
        {
          *(_OWORD *)std::string __p = v226;
          *(void *)&__p[16] = v227;
        }
        YAML::InvalidNode::InvalidNode(v158, (uint64_t)__p);
      }
      if (v229) {
        uint64_t v105 = *(void *)(**(void **)v229 + 4);
      }
      else {
        HIDWORD(v105) = -1;
      }
      siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)&v215, SHIDWORD(v105));
      if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v215.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v214.__r_.__value_.__l.__data_);
      }
    }
    if (v228) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v228);
    }
    if (SHIBYTE(v227) < 0) {
      operator delete((void *)v226);
    }
    if (v223[0]) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v223[0]);
    }
    if (SHIBYTE(v221) < 0) {
      operator delete(v220[0]);
    }
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v211);
  }
  if (v202) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v202);
  }
  if (v212) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v212);
  }
  YAML::Node::operator[]<char [3]>((YAML::Node *)v206, "id", (uint64_t)v216);
  BOOL v106 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v106) {
      goto LABEL_583;
    }
  }
  else if (v106)
  {
    goto LABEL_583;
  }
  YAML::Node::operator[]<char [3]>((YAML::Node *)v206, "id", (uint64_t)v216);
  if (!v216[0])
  {
    v181 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v181, (uint64_t)v211);
  }
  if (v218)
  {
    uint64_t v107 = **v218;
    if (*(unsigned char *)v107) {
      int v108 = *(_DWORD *)(v107 + 16);
    }
    else {
      int v108 = 0;
    }
  }
  else
  {
    int v108 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v108 != 2)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Invalid string value found for 'id' on AssertResponse");
    YAML::Node::operator[]<char [3]>((YAML::Node *)v206, "id", (uint64_t)v216);
    if (!v216[0])
    {
      v191 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v211 = *(_OWORD *)&v216[8];
        *(void *)&v211[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v191, (uint64_t)v211);
    }
    if (v218) {
      uint64_t v109 = *(void *)(**v218 + 4);
    }
    else {
      HIDWORD(v109) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)__p, HIDWORD(v109) + 1);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }
LABEL_583:
  YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "anyId", (uint64_t)v216);
  BOOL v110 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v110) {
      goto LABEL_615;
    }
  }
  else if (v110)
  {
    goto LABEL_615;
  }
  YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "anyId", (uint64_t)v216);
  if (!v216[0])
  {
    v182 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v182, (uint64_t)v211);
  }
  if (v218)
  {
    uint64_t v111 = **v218;
    if (*(unsigned char *)v111) {
      int v112 = *(_DWORD *)(v111 + 16);
    }
    else {
      int v112 = 0;
    }
  }
  else
  {
    int v112 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v112 == 4)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Found a map instead of an array value for 'anyId' on AssertResponse");
    YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "anyId", (uint64_t)v216);
    if (!v216[0])
    {
      v192 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v211 = *(_OWORD *)&v216[8];
        *(void *)&v211[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v192, (uint64_t)v211);
    }
    if (v218) {
      uint64_t v113 = *(void *)(**v218 + 4);
    }
    else {
      HIDWORD(v113) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)__p, HIDWORD(v113) + 1);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }
LABEL_615:
  YAML::Node::operator[]<char [7]>((YAML::Node *)v206, "allIds", (uint64_t)v216);
  BOOL v114 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v114) {
      goto LABEL_647;
    }
  }
  else if (v114)
  {
    goto LABEL_647;
  }
  YAML::Node::operator[]<char [7]>((YAML::Node *)v206, "allIds", (uint64_t)v216);
  if (!v216[0])
  {
    v183 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v183, (uint64_t)v211);
  }
  if (v218)
  {
    uint64_t v115 = **v218;
    if (*(unsigned char *)v115) {
      int v116 = *(_DWORD *)(v115 + 16);
    }
    else {
      int v116 = 0;
    }
  }
  else
  {
    int v116 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v116 == 4)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Found a map instead of an array value for 'allIds' on AssertResponse");
    YAML::Node::operator[]<char [7]>((YAML::Node *)v206, "allIds", (uint64_t)v216);
    if (!v216[0])
    {
      v193 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v211 = *(_OWORD *)&v216[8];
        *(void *)&v211[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v193, (uint64_t)v211);
    }
    if (v218) {
      uint64_t v117 = *(void *)(**v218 + 4);
    }
    else {
      HIDWORD(v117) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)__p, HIDWORD(v117) + 1);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }
LABEL_647:
  YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "count", (uint64_t)v216);
  BOOL v118 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v118) {
      goto LABEL_686;
    }
  }
  else if (v118)
  {
    goto LABEL_686;
  }
  YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "count", (uint64_t)v216);
  if (!v216[0])
  {
    v184 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v184, (uint64_t)v211);
  }
  if (v218 && (uint64_t v119 = **v218, *(unsigned char *)v119) && *(_DWORD *)(v119 + 16) == 2)
  {
    YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "count", (uint64_t)v211);
    if (!v211[0])
    {
      v197 = __cxa_allocate_exception(0x38uLL);
      if ((v211[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)__p, *(const std::string::value_type **)&v211[8], *(std::string::size_type *)&v211[16]);
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)&v211[8];
        *(void *)&__p[16] = *(void *)&v211[24];
      }
      YAML::InvalidNode::InvalidNode(v197, (uint64_t)__p);
    }
    *(void *)std::string __p = v211;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)__p, &v215);
    int IsANumber = siri::intelligence::StringIsANumber(&v215);
    if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v215.__r_.__value_.__l.__data_);
    }
    if (v212) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v212);
    }
    int v121 = IsANumber ^ 1;
    if ((v211[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v211[8]);
    }
  }
  else
  {
    int v121 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) == 0)
  {
    if (!v121) {
      goto LABEL_686;
    }
LABEL_676:
    std::string::basic_string[abi:ne180100]<0>(__p, "Invalid int32 value found for 'count' on AssertResponse");
    YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "count", (uint64_t)v216);
    if (!v216[0])
    {
      v194 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v211 = *(_OWORD *)&v216[8];
        *(void *)&v211[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v194, (uint64_t)v211);
    }
    if (v218) {
      int v122 = *(_DWORD *)(**v218 + 8) + 1;
    }
    else {
      int v122 = 0;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)__p, v122);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
    goto LABEL_686;
  }
  operator delete(*(void **)&v216[8]);
  if (v121) {
    goto LABEL_676;
  }
LABEL_686:
  if (v207) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v207);
  }
  if ((v206[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v206[8]);
  }
LABEL_690:
  YAML::Node::operator[]<char [16]>(this, "assertCondition", (uint64_t)v216);
  BOOL v123 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v123) {
      return;
    }
  }
  else if (v123)
  {
    return;
  }
  YAML::Node::operator[]<char [16]>(this, "assertCondition", (uint64_t)v216);
  if (!v216[0])
  {
    v170 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v170, (uint64_t)v211);
  }
  if (v218)
  {
    uint64_t v124 = **v218;
    if (*(unsigned char *)v124) {
      int v125 = *(_DWORD *)(v124 + 16);
    }
    else {
      int v125 = 0;
    }
  }
  else
  {
    int v125 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v125 == 3)
  {
    std::string::basic_string[abi:ne180100]<0>(v206, "Invalid array value found for 'assertCondition' on Step");
    YAML::Node::operator[]<char [16]>(this, "assertCondition", (uint64_t)v216);
    if (!v216[0])
    {
      v180 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v211 = *(_OWORD *)&v216[8];
        *(void *)&v211[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v180, (uint64_t)v211);
    }
    if (v218) {
      uint64_t v126 = *(void *)(**v218 + 4);
    }
    else {
      HIDWORD(v126) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)v206, HIDWORD(v126) + 1);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((v206[23] & 0x80000000) != 0) {
      operator delete(*(void **)v206);
    }
  }
  YAML::Node::operator[]<char [16]>(this, "assertCondition", (uint64_t)v206);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD865E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD865E8))
  {
    std::string::basic_string[abi:ne180100]<0>(v216, "id");
    std::string::basic_string[abi:ne180100]<0>(&v216[24], "value");
    std::set<std::string>::set[abi:ne180100]((uint64_t)&unk_26AD86698, (const void **)v216, 2);
    for (uint64_t n = 0; n != -6; n -= 3)
    {
      if (SHIBYTE((&v217)[n]) < 0) {
        operator delete(*(void **)&v216[n * 8 + 24]);
      }
    }
    __cxa_atexit((void (*)(void *))std::set<std::string>::~set[abi:ne180100], &unk_26AD86698, &dword_239A02000);
    __cxa_guard_release(&qword_26AD865E8);
  }
  if (v206[0] && v208)
  {
    YAML::detail::node_data::begin(**v208, (uint64_t)v216);
    uint64_t v128 = *(void *)&v206[32];
    v127 = v207;
    if (v207)
    {
      atomic_fetch_add_explicit(&v207->__shared_owners_, 1uLL, memory_order_relaxed);
      *(_OWORD *)v211 = *(_OWORD *)v216;
      *(_OWORD *)&v211[16] = *(_OWORD *)&v216[16];
      *(void *)&v211[32] = v128;
      v212 = v127;
      atomic_fetch_add_explicit(&v127->__shared_owners_, 1uLL, memory_order_relaxed);
      std::__shared_weak_count::__release_shared[abi:ne180100](v127);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)v216;
      *(_OWORD *)&v211[16] = *(_OWORD *)&v216[16];
      *(void *)&v211[32] = *(void *)&v206[32];
      v212 = 0;
    }
  }
  else
  {
    *(_DWORD *)v211 = 0;
    memset(&v211[8], 0, 32);
    v212 = 0;
  }
  if (v206[0] && v208)
  {
    YAML::detail::node_data::end(**v208, (uint64_t)v216);
    v129 = v207;
    if (v207)
    {
      atomic_fetch_add_explicit(&v207->__shared_owners_, 1uLL, memory_order_relaxed);
      int v130 = *(_DWORD *)v216;
      uint64_t v131 = *(void *)&v216[8];
      uint64_t v132 = *(void *)&v216[16];
      atomic_fetch_add_explicit(&v129->__shared_owners_, 1uLL, memory_order_relaxed);
      v204 = (YAML::Node *)v129;
      std::__shared_weak_count::__release_shared[abi:ne180100](v129);
    }
    else
    {
      v204 = 0;
      int v130 = *(_DWORD *)v216;
      uint64_t v131 = *(void *)&v216[8];
      uint64_t v132 = *(void *)&v216[16];
    }
  }
  else
  {
    v204 = 0;
    int v130 = 0;
    uint64_t v132 = 0;
    uint64_t v131 = 0;
  }
  while (1)
  {
    if (*(_DWORD *)v211 == v130)
    {
      v133 = &v211[8];
      uint64_t v134 = v131;
      if (v130 != 1)
      {
        if (v130 != 2) {
          break;
        }
        v133 = &v211[16];
        uint64_t v134 = v132;
      }
      if (*(void *)v133 == v134) {
        break;
      }
    }
    YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v211, (uint64_t)v216);
    if (!v219)
    {
      v151 = __cxa_allocate_exception(0x38uLL);
      if (SHIBYTE(v221) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)__p, (const std::string::value_type *)v220[0], (std::string::size_type)v220[1]);
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)v220;
        *(void *)&__p[16] = v221;
      }
      YAML::InvalidNode::InvalidNode(v151, (uint64_t)__p);
    }
    *(void *)std::string __p = &v219;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)__p, &v215);
    v135 = (void *)std::__tree<std::string>::find<std::string>((uint64_t)&unk_26AD86698, (const void **)&v215.__r_.__value_.__l.__data_);
    if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v215.__r_.__value_.__l.__data_);
    }
    if (v135 == &unk_26AD866A0)
    {
      if (!v219)
      {
        v161 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v221) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)__p, (const std::string::value_type *)v220[0], (std::string::size_type)v220[1]);
        }
        else
        {
          *(_OWORD *)std::string __p = *(_OWORD *)v220;
          *(void *)&__p[16] = v221;
        }
        YAML::InvalidNode::InvalidNode(v161, (uint64_t)__p);
      }
      *(void *)std::string __p = &v219;
      YAML::as_if<std::string,void>::operator()((YAML::Node **)__p, &v214);
      v136 = std::string::insert(&v214, 0, "Unsupported field for AssertCondition found in flow file: ");
      std::string v215 = *v136;
      v136->__r_.__value_.__l.__size_ = 0;
      v136->__r_.__value_.__r.__words[2] = 0;
      v136->__r_.__value_.__r.__words[0] = 0;
      if (!v224)
      {
        v160 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v227) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)__p, (const std::string::value_type *)v226, *((std::string::size_type *)&v226 + 1));
        }
        else
        {
          *(_OWORD *)std::string __p = v226;
          *(void *)&__p[16] = v227;
        }
        YAML::InvalidNode::InvalidNode(v160, (uint64_t)__p);
      }
      if (v229) {
        uint64_t v137 = *(void *)(**(void **)v229 + 4);
      }
      else {
        HIDWORD(v137) = -1;
      }
      siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)&v215, SHIDWORD(v137));
      if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v215.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v214.__r_.__value_.__l.__data_);
      }
    }
    if (v228) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v228);
    }
    if (SHIBYTE(v227) < 0) {
      operator delete((void *)v226);
    }
    if (v223[0]) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v223[0]);
    }
    if (SHIBYTE(v221) < 0) {
      operator delete(v220[0]);
    }
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v211);
  }
  if (v204) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v204);
  }
  if (v212) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v212);
  }
  YAML::Node::operator[]<char [3]>((YAML::Node *)v206, "id", (uint64_t)v216);
  BOOL v138 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v138) {
      goto LABEL_802;
    }
  }
  else if (v138)
  {
    goto LABEL_802;
  }
  YAML::Node::operator[]<char [3]>((YAML::Node *)v206, "id", (uint64_t)v216);
  if (!v216[0])
  {
    v185 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v185, (uint64_t)v211);
  }
  if (v218)
  {
    uint64_t v139 = **v218;
    if (*(unsigned char *)v139) {
      int v140 = *(_DWORD *)(v139 + 16);
    }
    else {
      int v140 = 0;
    }
  }
  else
  {
    int v140 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v216[8]);
  }
  if (v140 != 2)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Invalid string value found for 'id' on AssertCondition");
    YAML::Node::operator[]<char [3]>((YAML::Node *)v206, "id", (uint64_t)v216);
    if (!v216[0])
    {
      v195 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v211 = *(_OWORD *)&v216[8];
        *(void *)&v211[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v195, (uint64_t)v211);
    }
    if (v218) {
      uint64_t v141 = *(void *)(**v218 + 4);
    }
    else {
      HIDWORD(v141) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)__p, HIDWORD(v141) + 1);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }
LABEL_802:
  YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "value", (uint64_t)v216);
  BOOL v142 = !v216[0] || v218 && !*(unsigned char *)**v218;
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v216[8]);
    if (v142) {
      goto LABEL_841;
    }
  }
  else if (v142)
  {
    goto LABEL_841;
  }
  YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "value", (uint64_t)v216);
  if (!v216[0])
  {
    v186 = __cxa_allocate_exception(0x38uLL);
    if ((v216[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
    }
    else
    {
      *(_OWORD *)v211 = *(_OWORD *)&v216[8];
      *(void *)&v211[16] = *(void *)&v216[24];
    }
    YAML::InvalidNode::InvalidNode(v186, (uint64_t)v211);
  }
  if (v218 && (uint64_t v143 = **v218, *(unsigned char *)v143) && *(_DWORD *)(v143 + 16) == 2)
  {
    YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "value", (uint64_t)v211);
    if (!v211[0])
    {
      v198 = __cxa_allocate_exception(0x38uLL);
      if ((v211[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)__p, *(const std::string::value_type **)&v211[8], *(std::string::size_type *)&v211[16]);
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)&v211[8];
        *(void *)&__p[16] = *(void *)&v211[24];
      }
      YAML::InvalidNode::InvalidNode(v198, (uint64_t)__p);
    }
    *(void *)std::string __p = v211;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)__p, &v215);
    BOOL IsBool = siri::intelligence::StringIsBool((uint64_t)&v215);
    if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v215.__r_.__value_.__l.__data_);
    }
    if (v212) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v212);
    }
    int v145 = !IsBool;
    if ((v211[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v211[8]);
    }
  }
  else
  {
    int v145 = 1;
  }
  if (v217) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v217);
  }
  if ((v216[31] & 0x80000000) == 0)
  {
    if (!v145) {
      goto LABEL_841;
    }
LABEL_831:
    std::string::basic_string[abi:ne180100]<0>(__p, "Invalid BOOL value found for 'value' on AssertCondition");
    YAML::Node::operator[]<char [6]>((YAML::Node *)v206, "value", (uint64_t)v216);
    if (!v216[0])
    {
      v196 = __cxa_allocate_exception(0x38uLL);
      if ((v216[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v211, *(const std::string::value_type **)&v216[8], *(std::string::size_type *)&v216[16]);
      }
      else
      {
        *(_OWORD *)v211 = *(_OWORD *)&v216[8];
        *(void *)&v211[16] = *(void *)&v216[24];
      }
      YAML::InvalidNode::InvalidNode(v196, (uint64_t)v211);
    }
    if (v218) {
      int v146 = *(_DWORD *)(**v218 + 8) + 1;
    }
    else {
      int v146 = 0;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)__p, v146);
    if (v217) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v217);
    }
    if ((v216[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v216[8]);
    }
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
    goto LABEL_841;
  }
  operator delete(*(void **)&v216[8]);
  if (v145) {
    goto LABEL_831;
  }
LABEL_841:
  if (v207) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v207);
  }
  if ((v206[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v206[8]);
  }
}

void sub_239A2345C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,void *__p,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  uint64_t v65 = 0;
  while (1)
  {
    if (*(char *)(v63 + v65 + 47) < 0) {
      operator delete(*(void **)(v63 + v65 + 24));
    }
    v65 -= 24;
    if (v65 == -48)
    {
      __cxa_guard_abort(&qword_26AD865E8);
      YAML::Node::~Node((YAML::Node *)&a15);
      _Unwind_Resume(a1);
    }
  }
}

void sub_239A23DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    JUMPOUT(0x239A23DFCLL);
  }
  JUMPOUT(0x239A23E08);
}

void YAML::Node::operator[]<char [7]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  char v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  int v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      int v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [7],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  uint64_t v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A23FF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t streamable_to_string<char [5],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A241D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t streamable_to_string<char [12],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A24360(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t streamable_to_string<char [8],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A244F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

void YAML::Node::operator[]<char [13]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  char v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  int v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      int v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [13],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  uint64_t v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A246C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::ValidateFlowTest_KeyValueParameter(siri::intelligence *this, const YAML::Node *a2, siri::intelligence::ValidationResults *a3)
{
  uint64_t v3 = this;
  uint64_t v101 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD865C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD865C8))
  {
    std::string::basic_string[abi:ne180100]<0>(v89, "key");
    std::string::basic_string[abi:ne180100]<0>(&v89[24], "valueNumber");
    std::string::basic_string[abi:ne180100]<0>(&v91, "valueBoolean");
    std::string::basic_string[abi:ne180100]<0>((void *)&v93 + 1, "valueString");
    std::string::basic_string[abi:ne180100]<0>(&v95, "valueArray");
    std::string::basic_string[abi:ne180100]<0>(v97, "valueDictionary");
    std::set<std::string>::set[abi:ne180100]((uint64_t)&unk_26AD86638, (const void **)v89, 6);
    for (uint64_t i = 0; i != -18; i -= 3)
    {
      if (SHIBYTE(v98[i]) < 0) {
        operator delete(v97[i]);
      }
    }
    __cxa_atexit((void (*)(void *))std::set<std::string>::~set[abi:ne180100], &unk_26AD86638, &dword_239A02000);
    __cxa_guard_release(&qword_26AD865C8);
    uint64_t v3 = this;
  }
  if (*(unsigned char *)v3 && (int v4 = (uint64_t **)*((void *)v3 + 6)) != 0)
  {
    YAML::detail::node_data::begin(**v4, (uint64_t)v89);
    uint64_t v6 = *((void *)this + 4);
    uint64_t v5 = (std::__shared_weak_count *)*((void *)this + 5);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      *(_OWORD *)uint64_t v84 = *(_OWORD *)v89;
      *(_OWORD *)&v84[16] = *(_OWORD *)&v89[16];
      *(void *)&v84[32] = v6;
      int v85 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      std::__shared_weak_count::__release_shared[abi:ne180100](v5);
    }
    else
    {
      *(_OWORD *)uint64_t v84 = *(_OWORD *)v89;
      *(_OWORD *)&v84[16] = *(_OWORD *)&v89[16];
      *(void *)&v84[32] = v6;
      int v85 = 0;
    }
  }
  else
  {
    *(_DWORD *)uint64_t v84 = 0;
    memset(&v84[8], 0, 32);
    int v85 = 0;
  }
  if (*(unsigned char *)this && (char v7 = (uint64_t **)*((void *)this + 6)) != 0)
  {
    YAML::detail::node_data::end(**v7, (uint64_t)v89);
    uint64_t v8 = (std::__shared_weak_count *)*((void *)this + 5);
    if (v8)
    {
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
      int v9 = *(_DWORD *)v89;
      uint64_t v10 = *(void *)&v89[8];
      uint64_t v11 = *(void *)&v89[16];
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
      int v79 = v8;
      std::__shared_weak_count::__release_shared[abi:ne180100](v8);
    }
    else
    {
      int v79 = 0;
      int v9 = *(_DWORD *)v89;
      uint64_t v10 = *(void *)&v89[8];
      uint64_t v11 = *(void *)&v89[16];
    }
  }
  else
  {
    int v79 = 0;
    int v9 = 0;
    uint64_t v11 = 0;
    uint64_t v10 = 0;
  }
  while (1)
  {
    if (*(_DWORD *)v84 == v9)
    {
      int v12 = &v84[8];
      uint64_t v13 = v10;
      if (v9 != 1)
      {
        if (v9 != 2) {
          break;
        }
        int v12 = &v84[16];
        uint64_t v13 = v11;
      }
      if (*(void *)v12 == v13) {
        break;
      }
    }
    YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v84, (uint64_t)v89);
    if (!v92)
    {
      exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
      if (SHIBYTE(v94) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v82, (const std::string::value_type *)v93, *((std::string::size_type *)&v93 + 1));
      }
      else
      {
        *(_OWORD *)char v82 = v93;
        *(void *)&v82[16] = v94;
      }
      YAML::InvalidNode::InvalidNode(exception, (uint64_t)v82);
    }
    *(void *)char v82 = &v92;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)v82, &__p);
    uint64_t v14 = (void *)std::__tree<std::string>::find<std::string>((uint64_t)&unk_26AD86638, (const void **)&__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v14 == &unk_26AD86640)
    {
      if (!v92)
      {
        uint64_t v65 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v94) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)v82, (const std::string::value_type *)v93, *((std::string::size_type *)&v93 + 1));
        }
        else
        {
          *(_OWORD *)char v82 = v93;
          *(void *)&v82[16] = v94;
        }
        YAML::InvalidNode::InvalidNode(v65, (uint64_t)v82);
      }
      *(void *)char v82 = &v92;
      YAML::as_if<std::string,void>::operator()((YAML::Node **)v82, &v87);
      int v15 = std::string::insert(&v87, 0, "Unsupported field for KeyValueParameter found in flow file: ");
      std::string __p = *v15;
      v15->__r_.__value_.__l.__size_ = 0;
      v15->__r_.__value_.__r.__words[2] = 0;
      v15->__r_.__value_.__r.__words[0] = 0;
      if (!v96)
      {
        v64 = __cxa_allocate_exception(0x38uLL);
        if (SHIBYTE(v98[0]) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)v82, (const std::string::value_type *)v97[0], (std::string::size_type)v97[1]);
        }
        else
        {
          *(_OWORD *)char v82 = *(_OWORD *)v97;
          *(void *)&v82[16] = v98[0];
        }
        YAML::InvalidNode::InvalidNode(v64, (uint64_t)v82);
      }
      if (v100) {
        uint64_t v16 = *(void *)(**(void **)v100 + 4);
      }
      else {
        HIDWORD(v16) = -1;
      }
      siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)&__p, SHIDWORD(v16));
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v87.__r_.__value_.__l.__data_);
      }
    }
    if (v99) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v99);
    }
    if (SHIBYTE(v98[0]) < 0) {
      operator delete(v97[0]);
    }
    if (v95) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v95);
    }
    if (SHIBYTE(v94) < 0) {
      operator delete((void *)v93);
    }
    if (v90) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v90);
    }
    if ((v89[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v89[8]);
    }
    YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v84);
  }
  if (v79) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v79);
  }
  if (v85) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v85);
  }
  YAML::Node::operator[]<char [4]>(this, "key", (uint64_t)v89);
  BOOL v17 = !v89[0] || v91 && !*(unsigned char *)**v91;
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v89[8]);
    if (v17) {
      goto LABEL_81;
    }
  }
  else if (v17)
  {
    goto LABEL_81;
  }
  YAML::Node::operator[]<char [4]>(this, "key", (uint64_t)v89);
  if (!v89[0])
  {
    v67 = __cxa_allocate_exception(0x38uLL);
    if ((v89[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v84, *(const std::string::value_type **)&v89[8], *(std::string::size_type *)&v89[16]);
    }
    else
    {
      *(_OWORD *)uint64_t v84 = *(_OWORD *)&v89[8];
      *(void *)&v84[16] = *(void *)&v89[24];
    }
    YAML::InvalidNode::InvalidNode(v67, (uint64_t)v84);
  }
  if (v91)
  {
    uint64_t v18 = **v91;
    if (*(unsigned char *)v18) {
      int v19 = *(_DWORD *)(v18 + 16);
    }
    else {
      int v19 = 0;
    }
  }
  else
  {
    int v19 = 1;
  }
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v89[8]);
  }
  if (v19 != 2)
  {
    std::string::basic_string[abi:ne180100]<0>(v82, "Invalid string value found for 'key' on KeyValueParameter");
    YAML::Node::operator[]<char [4]>(this, "key", (uint64_t)v89);
    if (!v89[0])
    {
      BOOL v73 = __cxa_allocate_exception(0x38uLL);
      if ((v89[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v84, *(const std::string::value_type **)&v89[8], *(std::string::size_type *)&v89[16]);
      }
      else
      {
        *(_OWORD *)uint64_t v84 = *(_OWORD *)&v89[8];
        *(void *)&v84[16] = *(void *)&v89[24];
      }
      YAML::InvalidNode::InvalidNode(v73, (uint64_t)v84);
    }
    if (v91) {
      uint64_t v20 = *(void *)(**v91 + 4);
    }
    else {
      HIDWORD(v20) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)v82, HIDWORD(v20) + 1);
    if (v90) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v90);
    }
    if ((v89[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v89[8]);
    }
    if ((v82[23] & 0x80000000) != 0) {
      operator delete(*(void **)v82);
    }
  }
LABEL_81:
  YAML::Node::operator[]<char [12]>(this, "valueNumber", (uint64_t)v89);
  BOOL v21 = !v89[0] || v91 && !*(unsigned char *)**v91;
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v89[8]);
    if (v21) {
      goto LABEL_120;
    }
  }
  else if (v21)
  {
    goto LABEL_120;
  }
  YAML::Node::operator[]<char [12]>(this, "valueNumber", (uint64_t)v89);
  if (!v89[0])
  {
    uint64_t v68 = __cxa_allocate_exception(0x38uLL);
    if ((v89[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v84, *(const std::string::value_type **)&v89[8], *(std::string::size_type *)&v89[16]);
    }
    else
    {
      *(_OWORD *)uint64_t v84 = *(_OWORD *)&v89[8];
      *(void *)&v84[16] = *(void *)&v89[24];
    }
    YAML::InvalidNode::InvalidNode(v68, (uint64_t)v84);
  }
  if (v91 && (uint64_t v22 = **v91, *(unsigned char *)v22) && *(_DWORD *)(v22 + 16) == 2)
  {
    YAML::Node::operator[]<char [12]>(this, "valueNumber", (uint64_t)v84);
    if (!v84[0])
    {
      BOOL v77 = __cxa_allocate_exception(0x38uLL);
      if ((v84[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v82, *(const std::string::value_type **)&v84[8], *(std::string::size_type *)&v84[16]);
      }
      else
      {
        *(_OWORD *)char v82 = *(_OWORD *)&v84[8];
        *(void *)&v82[16] = *(void *)&v84[24];
      }
      YAML::InvalidNode::InvalidNode(v77, (uint64_t)v82);
    }
    *(void *)char v82 = v84;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)v82, &__p);
    int IsANumber = siri::intelligence::StringIsANumber(&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v85) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v85);
    }
    int v24 = IsANumber ^ 1;
    if ((v84[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v84[8]);
    }
  }
  else
  {
    int v24 = 1;
  }
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v89[8]);
    if (!v24) {
      goto LABEL_120;
    }
  }
  else if (!v24)
  {
    goto LABEL_120;
  }
  std::string::basic_string[abi:ne180100]<0>(v82, "Invalid double value found for 'valueNumber' on KeyValueParameter");
  YAML::Node::operator[]<char [12]>(this, "valueNumber", (uint64_t)v89);
  if (!v89[0])
  {
    uint64_t v74 = __cxa_allocate_exception(0x38uLL);
    if ((v89[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v84, *(const std::string::value_type **)&v89[8], *(std::string::size_type *)&v89[16]);
    }
    else
    {
      *(_OWORD *)uint64_t v84 = *(_OWORD *)&v89[8];
      *(void *)&v84[16] = *(void *)&v89[24];
    }
    YAML::InvalidNode::InvalidNode(v74, (uint64_t)v84);
  }
  if (v91) {
    uint64_t v25 = *(void *)(**v91 + 4);
  }
  else {
    HIDWORD(v25) = -1;
  }
  siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)v82, HIDWORD(v25) + 1);
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v89[8]);
  }
  if ((v82[23] & 0x80000000) != 0) {
    operator delete(*(void **)v82);
  }
LABEL_120:
  YAML::Node::operator[]<char [13]>(this, "valueBoolean", (uint64_t)v89);
  BOOL v26 = !v89[0] || v91 && !*(unsigned char *)**v91;
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v89[8]);
    if (v26) {
      goto LABEL_159;
    }
  }
  else if (v26)
  {
    goto LABEL_159;
  }
  YAML::Node::operator[]<char [13]>(this, "valueBoolean", (uint64_t)v89);
  if (!v89[0])
  {
    BOOL v69 = __cxa_allocate_exception(0x38uLL);
    if ((v89[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v84, *(const std::string::value_type **)&v89[8], *(std::string::size_type *)&v89[16]);
    }
    else
    {
      *(_OWORD *)uint64_t v84 = *(_OWORD *)&v89[8];
      *(void *)&v84[16] = *(void *)&v89[24];
    }
    YAML::InvalidNode::InvalidNode(v69, (uint64_t)v84);
  }
  if (v91 && (uint64_t v27 = **v91, *(unsigned char *)v27) && *(_DWORD *)(v27 + 16) == 2)
  {
    YAML::Node::operator[]<char [13]>(this, "valueBoolean", (uint64_t)v84);
    if (!v84[0])
    {
      uint64_t v78 = __cxa_allocate_exception(0x38uLL);
      if ((v84[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v82, *(const std::string::value_type **)&v84[8], *(std::string::size_type *)&v84[16]);
      }
      else
      {
        *(_OWORD *)char v82 = *(_OWORD *)&v84[8];
        *(void *)&v82[16] = *(void *)&v84[24];
      }
      YAML::InvalidNode::InvalidNode(v78, (uint64_t)v82);
    }
    *(void *)char v82 = v84;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)v82, &__p);
    BOOL IsBool = siri::intelligence::StringIsBool((uint64_t)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v85) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v85);
    }
    int v29 = !IsBool;
    if ((v84[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v84[8]);
    }
  }
  else
  {
    int v29 = 1;
  }
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v89[8]);
    if (!v29) {
      goto LABEL_159;
    }
  }
  else if (!v29)
  {
    goto LABEL_159;
  }
  std::string::basic_string[abi:ne180100]<0>(v82, "Invalid BOOL value found for 'valueBoolean' on KeyValueParameter");
  YAML::Node::operator[]<char [13]>(this, "valueBoolean", (uint64_t)v89);
  if (!v89[0])
  {
    int v75 = __cxa_allocate_exception(0x38uLL);
    if ((v89[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v84, *(const std::string::value_type **)&v89[8], *(std::string::size_type *)&v89[16]);
    }
    else
    {
      *(_OWORD *)uint64_t v84 = *(_OWORD *)&v89[8];
      *(void *)&v84[16] = *(void *)&v89[24];
    }
    YAML::InvalidNode::InvalidNode(v75, (uint64_t)v84);
  }
  if (v91) {
    uint64_t v30 = *(void *)(**v91 + 4);
  }
  else {
    HIDWORD(v30) = -1;
  }
  siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)v82, HIDWORD(v30) + 1);
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v89[8]);
  }
  if ((v82[23] & 0x80000000) != 0) {
    operator delete(*(void **)v82);
  }
LABEL_159:
  YAML::Node::operator[]<char [12]>(this, "valueString", (uint64_t)v89);
  BOOL v31 = !v89[0] || v91 && !*(unsigned char *)**v91;
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v89[8]);
    if (v31) {
      goto LABEL_191;
    }
  }
  else if (v31)
  {
    goto LABEL_191;
  }
  YAML::Node::operator[]<char [12]>(this, "valueString", (uint64_t)v89);
  if (!v89[0])
  {
    uint64_t v70 = __cxa_allocate_exception(0x38uLL);
    if ((v89[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v84, *(const std::string::value_type **)&v89[8], *(std::string::size_type *)&v89[16]);
    }
    else
    {
      *(_OWORD *)uint64_t v84 = *(_OWORD *)&v89[8];
      *(void *)&v84[16] = *(void *)&v89[24];
    }
    YAML::InvalidNode::InvalidNode(v70, (uint64_t)v84);
  }
  if (v91)
  {
    uint64_t v32 = **v91;
    if (*(unsigned char *)v32) {
      int v33 = *(_DWORD *)(v32 + 16);
    }
    else {
      int v33 = 0;
    }
  }
  else
  {
    int v33 = 1;
  }
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v89[8]);
  }
  if (v33 != 2)
  {
    std::string::basic_string[abi:ne180100]<0>(v82, "Invalid string value found for 'valueString' on KeyValueParameter");
    YAML::Node::operator[]<char [12]>(this, "valueString", (uint64_t)v89);
    if (!v89[0])
    {
      uint64_t v76 = __cxa_allocate_exception(0x38uLL);
      if ((v89[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v84, *(const std::string::value_type **)&v89[8], *(std::string::size_type *)&v89[16]);
      }
      else
      {
        *(_OWORD *)uint64_t v84 = *(_OWORD *)&v89[8];
        *(void *)&v84[16] = *(void *)&v89[24];
      }
      YAML::InvalidNode::InvalidNode(v76, (uint64_t)v84);
    }
    if (v91) {
      uint64_t v34 = *(void *)(**v91 + 4);
    }
    else {
      HIDWORD(v34) = -1;
    }
    siri::intelligence::ValidationResults::AddError(a2, &siri::intelligence::CODE_YAML_PARSE, (long long *)v82, HIDWORD(v34) + 1);
    if (v90) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v90);
    }
    if ((v89[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v89[8]);
    }
    if ((v82[23] & 0x80000000) != 0) {
      operator delete(*(void **)v82);
    }
  }
LABEL_191:
  YAML::Node::operator[]<char [11]>(this, "valueArray", (uint64_t)v89);
  BOOL v35 = !v89[0] || v91 && !*(unsigned char *)**v91;
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v89[8]);
    if (v35) {
      goto LABEL_254;
    }
  }
  else if (v35)
  {
    goto LABEL_254;
  }
  YAML::Node::operator[]<char [11]>(this, "valueArray", (uint64_t)v89);
  if (!v89[0])
  {
    int v71 = __cxa_allocate_exception(0x38uLL);
    if ((v89[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v84, *(const std::string::value_type **)&v89[8], *(std::string::size_type *)&v89[16]);
    }
    else
    {
      *(_OWORD *)uint64_t v84 = *(_OWORD *)&v89[8];
      *(void *)&v84[16] = *(void *)&v89[24];
    }
    YAML::InvalidNode::InvalidNode(v71, (uint64_t)v84);
  }
  if (v91)
  {
    uint64_t v36 = **v91;
    if (*(unsigned char *)v36) {
      int v37 = *(_DWORD *)(v36 + 16);
    }
    else {
      int v37 = 0;
    }
  }
  else
  {
    int v37 = 1;
  }
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v89[8]);
  }
  if (v37 == 3)
  {
    YAML::Node::operator[]<char [11]>(this, "valueArray", (uint64_t)v84);
    if (v84[0] && v86)
    {
      YAML::detail::node_data::begin(**v86, (uint64_t)v89);
      uint64_t v39 = *(void *)&v84[32];
      int v38 = v85;
      if (v85)
      {
        atomic_fetch_add_explicit(&v85->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)char v82 = *(_OWORD *)v89;
        *(_OWORD *)&v82[16] = *(_OWORD *)&v89[16];
        *(void *)&v82[32] = v39;
        long long v83 = v38;
        atomic_fetch_add_explicit(&v38->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v38);
      }
      else
      {
        *(_OWORD *)char v82 = *(_OWORD *)v89;
        *(_OWORD *)&v82[16] = *(_OWORD *)&v89[16];
        *(void *)&v82[32] = *(void *)&v84[32];
        long long v83 = 0;
      }
    }
    else
    {
      *(_DWORD *)char v82 = 0;
      memset(&v82[8], 0, 32);
      long long v83 = 0;
    }
    if (v84[0] && v86)
    {
      YAML::detail::node_data::end(**v86, (uint64_t)v89);
      uint64_t v42 = v85;
      if (v85)
      {
        atomic_fetch_add_explicit(&v85->__shared_owners_, 1uLL, memory_order_relaxed);
        int v43 = *(_DWORD *)v89;
        uint64_t v44 = *(void *)&v89[8];
        uint64_t v45 = *(void *)&v89[16];
        atomic_fetch_add_explicit(&v42->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v42);
      }
      else
      {
        int v43 = *(_DWORD *)v89;
        uint64_t v44 = *(void *)&v89[8];
        uint64_t v45 = *(void *)&v89[16];
      }
    }
    else
    {
      uint64_t v44 = 0;
      uint64_t v45 = 0;
      uint64_t v42 = 0;
      int v43 = 0;
    }
    while (1)
    {
      if (*(_DWORD *)v82 == v43)
      {
        BOOL v46 = &v82[8];
        uint64_t v47 = v44;
        if (v43 != 1)
        {
          if (v43 != 2) {
            break;
          }
          BOOL v46 = &v82[16];
          uint64_t v47 = v45;
        }
        if (*(void *)v46 == v47) {
          break;
        }
      }
      YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v82, (uint64_t)v89);
      siri::intelligence::ValidateFlowTest_KeyValueParameter((siri::intelligence *)v89, a2, v48);
      if (v99) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v99);
      }
      if (SHIBYTE(v98[0]) < 0) {
        operator delete(v97[0]);
      }
      if (v95) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v95);
      }
      if (SHIBYTE(v94) < 0) {
        operator delete((void *)v93);
      }
      if (v90) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v90);
      }
      if ((v89[31] & 0x80000000) != 0) {
        operator delete(*(void **)&v89[8]);
      }
      YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v82);
    }
    if (v42) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v42);
    }
    if (v83) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v83);
    }
    if (v85) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v85);
    }
    if ((v84[31] & 0x80000000) != 0)
    {
      v41 = *(void **)&v84[8];
      goto LABEL_253;
    }
  }
  else
  {
    YAML::Node::operator[]<char [11]>(this, "valueArray", (uint64_t)v89);
    siri::intelligence::ValidateFlowTest_KeyValueParameter((siri::intelligence *)v89, a2, v40);
    if (v90) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v90);
    }
    if ((v89[31] & 0x80000000) != 0)
    {
      v41 = *(void **)&v89[8];
LABEL_253:
      operator delete(v41);
    }
  }
LABEL_254:
  YAML::Node::operator[]<char [16]>(this, "valueDictionary", (uint64_t)v89);
  BOOL v49 = !v89[0] || v91 && !*(unsigned char *)**v91;
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v89[8]);
    if (v49) {
      return;
    }
  }
  else if (v49)
  {
    return;
  }
  YAML::Node::operator[]<char [16]>(this, "valueDictionary", (uint64_t)v89);
  if (!v89[0])
  {
    uint64_t v72 = __cxa_allocate_exception(0x38uLL);
    if ((v89[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v84, *(const std::string::value_type **)&v89[8], *(std::string::size_type *)&v89[16]);
    }
    else
    {
      *(_OWORD *)uint64_t v84 = *(_OWORD *)&v89[8];
      *(void *)&v84[16] = *(void *)&v89[24];
    }
    YAML::InvalidNode::InvalidNode(v72, (uint64_t)v84);
  }
  if (v91)
  {
    uint64_t v50 = **v91;
    if (*(unsigned char *)v50) {
      int v51 = *(_DWORD *)(v50 + 16);
    }
    else {
      int v51 = 0;
    }
  }
  else
  {
    int v51 = 1;
  }
  if (v90) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v90);
  }
  if ((v89[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v89[8]);
  }
  if (v51 == 3)
  {
    YAML::Node::operator[]<char [16]>(this, "valueDictionary", (uint64_t)v84);
    if (v84[0] && v86)
    {
      YAML::detail::node_data::begin(**v86, (uint64_t)v89);
      uint64_t v53 = *(void *)&v84[32];
      int v52 = v85;
      if (v85)
      {
        atomic_fetch_add_explicit(&v85->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)char v82 = *(_OWORD *)v89;
        *(_OWORD *)&v82[16] = *(_OWORD *)&v89[16];
        *(void *)&v82[32] = v53;
        long long v83 = v52;
        atomic_fetch_add_explicit(&v52->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v52);
      }
      else
      {
        *(_OWORD *)char v82 = *(_OWORD *)v89;
        *(_OWORD *)&v82[16] = *(_OWORD *)&v89[16];
        *(void *)&v82[32] = *(void *)&v84[32];
        long long v83 = 0;
      }
    }
    else
    {
      *(_DWORD *)char v82 = 0;
      memset(&v82[8], 0, 32);
      long long v83 = 0;
    }
    if (v84[0] && v86)
    {
      YAML::detail::node_data::end(**v86, (uint64_t)v89);
      int v56 = v85;
      if (v85)
      {
        atomic_fetch_add_explicit(&v85->__shared_owners_, 1uLL, memory_order_relaxed);
        int v57 = *(_DWORD *)v89;
        uint64_t v58 = *(void *)&v89[8];
        uint64_t v59 = *(void *)&v89[16];
        atomic_fetch_add_explicit(&v56->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v56);
      }
      else
      {
        int v57 = *(_DWORD *)v89;
        uint64_t v58 = *(void *)&v89[8];
        uint64_t v59 = *(void *)&v89[16];
      }
    }
    else
    {
      uint64_t v58 = 0;
      uint64_t v59 = 0;
      int v56 = 0;
      int v57 = 0;
    }
    while (1)
    {
      if (*(_DWORD *)v82 == v57)
      {
        v60 = &v82[8];
        uint64_t v61 = v58;
        if (v57 != 1)
        {
          if (v57 != 2) {
            break;
          }
          v60 = &v82[16];
          uint64_t v61 = v59;
        }
        if (*(void *)v60 == v61) {
          break;
        }
      }
      YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v82, (uint64_t)v89);
      siri::intelligence::ValidateFlowTest_KeyValueParameter((siri::intelligence *)v89, a2, v62);
      if (v99) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v99);
      }
      if (SHIBYTE(v98[0]) < 0) {
        operator delete(v97[0]);
      }
      if (v95) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v95);
      }
      if (SHIBYTE(v94) < 0) {
        operator delete((void *)v93);
      }
      if (v90) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v90);
      }
      if ((v89[31] & 0x80000000) != 0) {
        operator delete(*(void **)&v89[8]);
      }
      YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v82);
    }
    if (v56) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v56);
    }
    if (v83) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v83);
    }
    if (v85) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v85);
    }
    if ((v84[31] & 0x80000000) != 0)
    {
      uint64_t v55 = *(void **)&v84[8];
      goto LABEL_316;
    }
  }
  else
  {
    YAML::Node::operator[]<char [16]>(this, "valueDictionary", (uint64_t)v89);
    siri::intelligence::ValidateFlowTest_KeyValueParameter((siri::intelligence *)v89, a2, v54);
    if (v90) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v90);
    }
    if ((v89[31] & 0x80000000) != 0)
    {
      uint64_t v55 = *(void **)&v89[8];
LABEL_316:
      operator delete(v55);
    }
  }
}

void sub_239A25E5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,char a46)
{
  uint64_t v48 = 0;
  while (1)
  {
    if (*(char *)(v46 + v48 + 143) < 0) {
      operator delete(*(void **)(v46 + v48 + 120));
    }
    v48 -= 24;
    if (v48 == -144)
    {
      __cxa_guard_abort(&qword_26AD865C8);
      _Unwind_Resume(a1);
    }
  }
}

void YAML::Node::operator[]<char [10]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  char v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  int v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      int v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [10],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  uint64_t v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A26364(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void YAML::Node::operator[]<char [11]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  char v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  int v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      int v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [11],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  uint64_t v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A26584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void YAML::Node::operator[]<char [15]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  char v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  int v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      int v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [15],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  uint64_t v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A267A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void YAML::Node::operator[]<char [16]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  char v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  int v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      int v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [16],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  uint64_t v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A269C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t streamable_to_string<char [13],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A26BA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

void YAML::Node::operator[]<char [4]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  char v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  int v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      int v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [4],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  uint64_t v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A26D74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t streamable_to_string<char [4],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A26F54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t streamable_to_string<char [10],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A270E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t streamable_to_string<char [11],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A27274(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

void YAML::Node::operator[]<char [3]>(YAML::Node *this@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)this)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v18, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v18 = *(std::string *)((char *)this + 8);
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v18);
  }
  YAML::Node::EnsureNodeExists((uint64_t)this);
  uint64_t v6 = (uint64_t **)*((void *)this + 6);
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  char v7 = (std::__shared_weak_count *)*((void *)this + 5);
  uint64_t v14 = *((void *)this + 4);
  int v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = YAML::detail::node::get<std::string>(v6, (unsigned __int8 *)__p, &v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v8)
    {
LABEL_8:
      uint64_t v10 = *((void *)this + 4);
      int v9 = (std::__shared_weak_count *)*((void *)this + 5);
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = v9;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        *(void *)(a3 + 48) = v8;
        std::__shared_weak_count::__release_shared[abi:ne180100](v9);
      }
      else
      {
        *(unsigned char *)a3 = 1;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 0;
        *(void *)(a3 + 32) = v10;
        *(void *)(a3 + 40) = 0;
        *(void *)(a3 + 48) = v8;
      }
      return;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  streamable_to_string<char [3],true>::impl(a2);
  *(unsigned char *)a3 = 0;
  uint64_t v11 = (std::string *)(a3 + 8);
  if (SHIBYTE(v17) < 0)
  {
    std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    int v12 = SHIBYTE(v17);
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 32) = 0;
  }
}

void sub_239A27444(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t streamable_to_string<char [3],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A27624(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t streamable_to_string<char [15],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A277B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t streamable_to_string<char [16],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A27944(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t streamable_to_string<char [7],true>::impl(const char *a1)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v5);
  size_t v2 = strlen(a1);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)a1, v2);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x263F8C2B8];
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v6[0] = v3;
  v6[1] = MEMORY[0x263F8C318] + 16;
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23ECAAC10](&v8);
}

void sub_239A27AD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

void siri::intelligence::ParseFlowTest_Test(siri::intelligence *this, protobuf::FlowTest_Test *a2, const YAML::Node *a3)
{
  memset(v58, 0, 24);
  YAML::Node::operator[]<char [5]>(a2, "name", (uint64_t)__p);
  BOOL v5 = !__p[0] || v44 && !*(unsigned char *)**v44;
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
  if (!v5)
  {
    YAML::Node::operator[]<char [5]>(a2, "name", (uint64_t)__p);
    if (!__p[0])
    {
      exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
      if ((__p[31] & 0x80000000) != 0) {
        std::string::__init_copy_ctor_external(&v53, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
      }
      else {
        std::string v53 = *(std::string *)&__p[8];
      }
      YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v53);
    }
    v53.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)&v53, (std::string *)v51);
    *((_DWORD *)this + 4) |= 1u;
    google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)this + 6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)v51);
    if ((v51[23] & 0x80000000) != 0) {
      operator delete(*(void **)v51);
    }
    if (v43) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v43);
    }
    if ((__p[31] & 0x80000000) != 0) {
      operator delete(*(void **)&__p[8]);
    }
  }
  YAML::Node::operator[]<char [12]>(a2, "description", (uint64_t)__p);
  BOOL v6 = !__p[0] || v44 && !*(unsigned char *)**v44;
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v6) {
      goto LABEL_36;
    }
  }
  else if (v6)
  {
    goto LABEL_36;
  }
  YAML::Node::operator[]<char [12]>(a2, "description", (uint64_t)__p);
  if (!__p[0])
  {
    int v38 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v53, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v53 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v38, (uint64_t)&v53);
  }
  v53.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
  YAML::as_if<std::string,void>::operator()((YAML::Node **)&v53, (std::string *)v51);
  *((_DWORD *)this + 4) |= 2u;
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)this + 7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)v51);
  if ((v51[23] & 0x80000000) != 0) {
    operator delete(*(void **)v51);
  }
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
LABEL_36:
  YAML::Node::operator[]<char [8]>(a2, "enabled", (uint64_t)__p);
  BOOL v7 = !__p[0] || v44 && !*(unsigned char *)**v44;
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v7) {
      goto LABEL_54;
    }
  }
  else if (v7)
  {
    goto LABEL_54;
  }
  YAML::Node::operator[]<char [8]>(a2, "enabled", (uint64_t)__p);
  if (!__p[0])
  {
    uint64_t v39 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v53, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v53 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v39, (uint64_t)&v53);
  }
  v53.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
  YAML::as_if<std::string,void>::operator()((YAML::Node **)&v53, (std::string *)v51);
  char v8 = siri::intelligence::StringToBool((const std::string *)v51, 0);
  *((_DWORD *)this + 4) |= 4u;
  *((unsigned char *)this + 64) = v8;
  if ((v51[23] & 0x80000000) != 0) {
    operator delete(*(void **)v51);
  }
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
LABEL_54:
  YAML::Node::operator[]<char [6]>(a2, "steps", (uint64_t)__p);
  BOOL v9 = !__p[0] || v44 && !*(unsigned char *)**v44;
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v9) {
      goto LABEL_131;
    }
  }
  else if (v9)
  {
    goto LABEL_131;
  }
  YAML::Node::operator[]<char [6]>(a2, "steps", (uint64_t)__p);
  if (!__p[0])
  {
    uint64_t v40 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v53, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v53 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v40, (uint64_t)&v53);
  }
  if (v44)
  {
    uint64_t v10 = **v44;
    if (*(unsigned char *)v10) {
      int v11 = *(_DWORD *)(v10 + 16);
    }
    else {
      int v11 = 0;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
  if (v11 == 3)
  {
    YAML::Node::operator[]<char [6]>(a2, "steps", (uint64_t)&v53);
    if (v53.__r_.__value_.__s.__data_[0] && v57)
    {
      YAML::detail::node_data::begin(**v57, (uint64_t)__p);
      uint64_t v13 = v55;
      int v12 = v56;
      if (v56)
      {
        atomic_fetch_add_explicit(&v56->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)int v51 = *(_OWORD *)__p;
        *(_OWORD *)&v51[16] = *(_OWORD *)&__p[16];
        *(void *)&v51[32] = v13;
        int v52 = v12;
        atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v12);
      }
      else
      {
        *(_OWORD *)int v51 = *(_OWORD *)__p;
        *(_OWORD *)&v51[16] = *(_OWORD *)&__p[16];
        *(void *)&v51[32] = v55;
        int v52 = 0;
      }
    }
    else
    {
      *(_DWORD *)int v51 = 0;
      memset(&v51[8], 0, 32);
      int v52 = 0;
    }
    if (v53.__r_.__value_.__s.__data_[0] && v57)
    {
      YAML::detail::node_data::end(**v57, (uint64_t)__p);
      std::string v18 = v56;
      if (v56)
      {
        atomic_fetch_add_explicit(&v56->__shared_owners_, 1uLL, memory_order_relaxed);
        int v19 = *(_DWORD *)__p;
        uint64_t v20 = *(void *)&__p[8];
        uint64_t v21 = *(void *)&__p[16];
        atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v18);
      }
      else
      {
        int v19 = *(_DWORD *)__p;
        uint64_t v20 = *(void *)&__p[8];
        uint64_t v21 = *(void *)&__p[16];
      }
    }
    else
    {
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      std::string v18 = 0;
      int v19 = 0;
    }
    while (1)
    {
      if (*(_DWORD *)v51 == v19)
      {
        uint64_t v22 = &v51[8];
        uint64_t v23 = v20;
        if (v19 != 1)
        {
          if (v19 != 2) {
            goto LABEL_114;
          }
          uint64_t v22 = &v51[16];
          uint64_t v23 = v21;
        }
        if (*(void *)v22 == v23)
        {
LABEL_114:
          if (v18) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v18);
          }
          if (v52) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v52);
          }
          if (v56) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v56);
          }
          if (v54 < 0)
          {
            std::string::size_type size = (void *)v53.__r_.__value_.__l.__size_;
            goto LABEL_130;
          }
          goto LABEL_131;
        }
      }
      YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v51, (uint64_t)__p);
      uint64_t v25 = (int *)*((void *)this + 5);
      if (!v25) {
        break;
      }
      uint64_t v26 = *((int *)this + 8);
      int v27 = *v25;
      if ((int)v26 < *v25)
      {
        *((_DWORD *)this + 8) = v26 + 1;
        uint64_t v28 = *(siri::intelligence **)&v25[2 * v26 + 2];
        goto LABEL_101;
      }
      if (v27 == *((_DWORD *)this + 9)) {
        goto LABEL_99;
      }
LABEL_100:
      *uint64_t v25 = v27 + 1;
      uint64_t v28 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_Step>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                 + 3));
      uint64_t v29 = *((void *)this + 5);
      uint64_t v30 = *((int *)this + 8);
      *((_DWORD *)this + 8) = v30 + 1;
      *(void *)(v29 + 8 * v30 + 8) = v28;
LABEL_101:
      siri::intelligence::ParseFlowTest_Step(v28, (protobuf::FlowTest_Step *)__p, v24);
      if (v50) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v50);
      }
      if (v49 < 0) {
        operator delete(v48);
      }
      if (v47) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v47);
      }
      if (v46 < 0) {
        operator delete(v45);
      }
      if (v43) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v43);
      }
      if ((__p[31] & 0x80000000) != 0) {
        operator delete(*(void **)&__p[8]);
      }
      YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v51);
    }
    int v27 = *((_DWORD *)this + 9);
LABEL_99:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v27 + 1);
    uint64_t v25 = (int *)*((void *)this + 5);
    int v27 = *v25;
    goto LABEL_100;
  }
  uint64_t v14 = (int *)*((void *)this + 5);
  if (!v14)
  {
    int v16 = *((_DWORD *)this + 9);
LABEL_124:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v16 + 1);
    uint64_t v14 = (int *)*((void *)this + 5);
    int v16 = *v14;
    goto LABEL_125;
  }
  uint64_t v15 = *((int *)this + 8);
  int v16 = *v14;
  if ((int)v15 < *v14)
  {
    *((_DWORD *)this + 8) = v15 + 1;
    uint64_t v17 = *(siri::intelligence **)&v14[2 * v15 + 2];
    goto LABEL_126;
  }
  if (v16 == *((_DWORD *)this + 9)) {
    goto LABEL_124;
  }
LABEL_125:
  *uint64_t v14 = v16 + 1;
  uint64_t v17 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_Step>(*((google::protobuf::internal::ArenaImpl **)this
                                                                             + 3));
  uint64_t v32 = *((void *)this + 5);
  uint64_t v33 = *((int *)this + 8);
  *((_DWORD *)this + 8) = v33 + 1;
  *(void *)(v32 + 8 * v33 + 8) = v17;
LABEL_126:
  YAML::Node::operator[]<char [6]>(a2, "steps", (uint64_t)__p);
  siri::intelligence::ParseFlowTest_Step(v17, (protobuf::FlowTest_Step *)__p, v34);
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    std::string::size_type size = *(void **)&__p[8];
LABEL_130:
    operator delete(size);
  }
LABEL_131:
  YAML::Node::operator[]<char [7]>(a2, "repeat", (uint64_t)__p);
  BOOL v35 = !__p[0] || v44 && !*(unsigned char *)**v44;
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v35) {
      goto LABEL_149;
    }
  }
  else if (v35)
  {
    goto LABEL_149;
  }
  YAML::Node::operator[]<char [7]>(a2, "repeat", (uint64_t)__p);
  if (!__p[0])
  {
    v41 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v53, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v53 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v41, (uint64_t)&v53);
  }
  v53.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
  YAML::as_if<std::string,void>::operator()((YAML::Node **)&v53, (std::string *)v51);
  int v36 = siri::intelligence::StringToIntegralType<int>((const std::string *)v51, 0);
  *((_DWORD *)this + 4) |= 8u;
  *((_DWORD *)this + 17) = v36;
  if ((v51[23] & 0x80000000) != 0) {
    operator delete(*(void **)v51);
  }
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
LABEL_149:
  *(void *)std::string __p = v58;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
}

void sub_239A284F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,uint64_t a38,std::__shared_weak_count *a39)
{
  if (a39) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a39);
  }
  YAML::Node::~Node((YAML::Node *)(v39 - 176));
  std::string __p = (void *)(v39 - 120);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

__n128 google::protobuf::internal::ArenaStringPtr::SetNoArena(uint64_t *a1, uint64_t a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  if (*a1 == a2) {
    operator new();
  }
  if (*(char *)(v4 + 23) < 0) {
    operator delete(*(void **)v4);
  }
  __n128 result = *a3;
  *(void *)(v4 + 16) = a3[1].n128_u64[0];
  *(__n128 *)uint64_t v4 = result;
  a3[1].n128_u8[7] = 0;
  a3->n128_u8[0] = 0;
  return result;
}

void siri::intelligence::ParseFlowTest_Step(siri::intelligence *this, protobuf::FlowTest_Step *a2, const YAML::Node *a3)
{
  memset(v119, 0, sizeof(v119));
  YAML::Node::operator[]<char [13]>(a2, "setVariables", (uint64_t)__p);
  BOOL v5 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v5) {
      goto LABEL_78;
    }
  }
  else if (v5)
  {
    goto LABEL_78;
  }
  YAML::Node::operator[]<char [13]>(a2, "setVariables", (uint64_t)__p);
  if (!__p[0])
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v132 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v132);
  }
  if (v123)
  {
    uint64_t v6 = **v123;
    if (*(unsigned char *)v6) {
      int v7 = *(_DWORD *)(v6 + 16);
    }
    else {
      int v7 = 0;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
  if (v7 == 3)
  {
    YAML::Node::operator[]<char [13]>(a2, "setVariables", (uint64_t)&v132);
    if (v132.__r_.__value_.__s.__data_[0] && v136)
    {
      YAML::detail::node_data::begin(**v136, (uint64_t)__p);
      uint64_t v9 = v134;
      char v8 = v135;
      if (v135)
      {
        atomic_fetch_add_explicit(&v135->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)uint64_t v117 = *(_OWORD *)__p;
        *(_OWORD *)&v117[16] = *(_OWORD *)&__p[16];
        *(void *)&v117[32] = v9;
        BOOL v118 = v8;
        atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v8);
      }
      else
      {
        *(_OWORD *)uint64_t v117 = *(_OWORD *)__p;
        *(_OWORD *)&v117[16] = *(_OWORD *)&__p[16];
        *(void *)&v117[32] = v134;
        BOOL v118 = 0;
      }
    }
    else
    {
      *(_DWORD *)uint64_t v117 = 0;
      memset(&v117[8], 0, 32);
      BOOL v118 = 0;
    }
    if (v132.__r_.__value_.__s.__data_[0] && v136)
    {
      YAML::detail::node_data::end(**v136, (uint64_t)__p);
      uint64_t v14 = v135;
      if (v135)
      {
        atomic_fetch_add_explicit(&v135->__shared_owners_, 1uLL, memory_order_relaxed);
        int v15 = *(_DWORD *)__p;
        uint64_t v16 = *(void *)&__p[8];
        uint64_t v17 = *(void *)&__p[16];
        atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v14);
      }
      else
      {
        int v15 = *(_DWORD *)__p;
        uint64_t v16 = *(void *)&__p[8];
        uint64_t v17 = *(void *)&__p[16];
      }
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v14 = 0;
      int v15 = 0;
    }
    while (1)
    {
      if (*(_DWORD *)v117 == v15)
      {
        std::string v18 = &v117[8];
        uint64_t v19 = v16;
        if (v15 != 1)
        {
          if (v15 != 2) {
            goto LABEL_61;
          }
          std::string v18 = &v117[16];
          uint64_t v19 = v17;
        }
        if (*(void *)v18 == v19)
        {
LABEL_61:
          if (v14) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v14);
          }
          if (v118) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v118);
          }
          if (v135) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v135);
          }
          if (v133 < 0)
          {
            std::string::size_type size = (void *)v132.__r_.__value_.__l.__size_;
            goto LABEL_77;
          }
          goto LABEL_78;
        }
      }
      YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v117, (uint64_t)__p);
      uint64_t v21 = (int *)*((void *)this + 5);
      if (!v21) {
        break;
      }
      uint64_t v22 = *((int *)this + 8);
      int v23 = *v21;
      if ((int)v22 < *v21)
      {
        *((_DWORD *)this + 8) = v22 + 1;
        int v24 = *(siri::intelligence **)&v21[2 * v22 + 2];
        goto LABEL_48;
      }
      if (v23 == *((_DWORD *)this + 9)) {
        goto LABEL_46;
      }
LABEL_47:
      int *v21 = v23 + 1;
      int v24 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_KeyValueParameter>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                              + 3));
      uint64_t v25 = *((void *)this + 5);
      uint64_t v26 = *((int *)this + 8);
      *((_DWORD *)this + 8) = v26 + 1;
      *(void *)(v25 + 8 * v26 + 8) = v24;
LABEL_48:
      siri::intelligence::ParseFlowTest_KeyValueParameter(v24, (protobuf::FlowTest_KeyValueParameter *)__p, v20);
      if (v129) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v129);
      }
      if (v128 < 0) {
        operator delete(v127);
      }
      if (v126) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v126);
      }
      if (v125 < 0) {
        operator delete(v124);
      }
      if (v122) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v122);
      }
      if ((__p[31] & 0x80000000) != 0) {
        operator delete(*(void **)&__p[8]);
      }
      YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v117);
    }
    int v23 = *((_DWORD *)this + 9);
LABEL_46:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v23 + 1);
    uint64_t v21 = (int *)*((void *)this + 5);
    int v23 = *v21;
    goto LABEL_47;
  }
  uint64_t v10 = (int *)*((void *)this + 5);
  if (!v10)
  {
    int v12 = *((_DWORD *)this + 9);
LABEL_71:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v12 + 1);
    uint64_t v10 = (int *)*((void *)this + 5);
    int v12 = *v10;
    goto LABEL_72;
  }
  uint64_t v11 = *((int *)this + 8);
  int v12 = *v10;
  if ((int)v11 < *v10)
  {
    *((_DWORD *)this + 8) = v11 + 1;
    uint64_t v13 = *(siri::intelligence **)&v10[2 * v11 + 2];
    goto LABEL_73;
  }
  if (v12 == *((_DWORD *)this + 9)) {
    goto LABEL_71;
  }
LABEL_72:
  *uint64_t v10 = v12 + 1;
  uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_KeyValueParameter>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                          + 3));
  uint64_t v28 = *((void *)this + 5);
  uint64_t v29 = *((int *)this + 8);
  *((_DWORD *)this + 8) = v29 + 1;
  *(void *)(v28 + 8 * v29 + 8) = v13;
LABEL_73:
  YAML::Node::operator[]<char [13]>(a2, "setVariables", (uint64_t)__p);
  siri::intelligence::ParseFlowTest_KeyValueParameter(v13, (protobuf::FlowTest_KeyValueParameter *)__p, v30);
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    std::string::size_type size = *(void **)&__p[8];
LABEL_77:
    operator delete(size);
  }
LABEL_78:
  YAML::Node::operator[]<char [10]>(a2, "startFrom", (uint64_t)__p);
  BOOL v31 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v31) {
      goto LABEL_131;
    }
  }
  else if (v31)
  {
    goto LABEL_131;
  }
  *((_DWORD *)this + 4) |= 1u;
  started = (protobuf::FlowTest_StartFrom *)*((void *)this + 6);
  if (!started)
  {
    started = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_StartFrom>(0);
    *((void *)this + 6) = started;
  }
  YAML::Node::operator[]<char [10]>(a2, "startFrom", (uint64_t)&v132);
  memset(v130, 0, 24);
  YAML::Node::operator[]<char [11]>((YAML::Node *)&v132, "responseId", (uint64_t)__p);
  BOOL v33 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v33) {
      goto LABEL_109;
    }
  }
  else if (v33)
  {
    goto LABEL_109;
  }
  YAML::Node::operator[]<char [11]>((YAML::Node *)&v132, "responseId", (uint64_t)__p);
  if (!__p[0])
  {
    uint64_t v102 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v117, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else
    {
      *(_OWORD *)uint64_t v117 = *(_OWORD *)&__p[8];
      *(void *)&v117[16] = *(void *)&__p[24];
    }
    YAML::InvalidNode::InvalidNode(v102, (uint64_t)v117);
  }
  *(void *)uint64_t v117 = __p;
  YAML::as_if<std::string,void>::operator()((YAML::Node **)v117, &v138);
  *((_DWORD *)started + 4) |= 1u;
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)started + 3, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)&v138);
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v138.__r_.__value_.__l.__data_);
  }
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
LABEL_109:
  YAML::Node::operator[]<char [11]>((YAML::Node *)&v132, "activityId", (uint64_t)__p);
  BOOL v34 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) == 0)
  {
    if (v34) {
      goto LABEL_127;
    }
LABEL_120:
    YAML::Node::operator[]<char [11]>((YAML::Node *)&v132, "activityId", (uint64_t)__p);
    if (!__p[0])
    {
      v103 = __cxa_allocate_exception(0x38uLL);
      if ((__p[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v117, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
      }
      else
      {
        *(_OWORD *)uint64_t v117 = *(_OWORD *)&__p[8];
        *(void *)&v117[16] = *(void *)&__p[24];
      }
      YAML::InvalidNode::InvalidNode(v103, (uint64_t)v117);
    }
    *(void *)uint64_t v117 = __p;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)v117, &v138);
    *((_DWORD *)started + 4) |= 2u;
    google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)started + 4, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)&v138);
    if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v138.__r_.__value_.__l.__data_);
    }
    if (v122) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v122);
    }
    if ((__p[31] & 0x80000000) != 0) {
      operator delete(*(void **)&__p[8]);
    }
    goto LABEL_127;
  }
  operator delete(*(void **)&__p[8]);
  if (!v34) {
    goto LABEL_120;
  }
LABEL_127:
  *(void *)std::string __p = v130;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  if (v135) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v135);
  }
  if (v133 < 0) {
    operator delete((void *)v132.__r_.__value_.__l.__size_);
  }
LABEL_131:
  YAML::Node::operator[]<char [11]>(a2, "sendIntent", (uint64_t)__p);
  BOOL v35 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v35) {
      goto LABEL_261;
    }
  }
  else if (v35)
  {
    goto LABEL_261;
  }
  *((_DWORD *)this + 4) |= 2u;
  int v36 = (protobuf::FlowTest_SendIntent *)*((void *)this + 7);
  if (!v36)
  {
    int v36 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_SendIntent>(0);
    *((void *)this + 7) = v36;
  }
  YAML::Node::operator[]<char [11]>(a2, "sendIntent", (uint64_t)v117);
  memset(&v138, 0, sizeof(v138));
  YAML::Node::operator[]<char [3]>((YAML::Node *)v117, "id", (uint64_t)__p);
  BOOL v37 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v37) {
      goto LABEL_162;
    }
  }
  else if (v37)
  {
    goto LABEL_162;
  }
  YAML::Node::operator[]<char [3]>((YAML::Node *)v117, "id", (uint64_t)__p);
  if (!__p[0])
  {
    v104 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v132 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v104, (uint64_t)&v132);
  }
  v132.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
  YAML::as_if<std::string,void>::operator()((YAML::Node **)&v132, (std::string *)v130);
  *((_DWORD *)v36 + 4) |= 1u;
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)v36 + 6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)v130);
  if ((v130[23] & 0x80000000) != 0) {
    operator delete(*(void **)v130);
  }
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
LABEL_162:
  YAML::Node::operator[]<char [5]>((YAML::Node *)v117, "name", (uint64_t)__p);
  BOOL v38 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v38) {
      goto LABEL_180;
    }
  }
  else if (v38)
  {
    goto LABEL_180;
  }
  YAML::Node::operator[]<char [5]>((YAML::Node *)v117, "name", (uint64_t)__p);
  if (!__p[0])
  {
    uint64_t v105 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v132 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v105, (uint64_t)&v132);
  }
  v132.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
  YAML::as_if<std::string,void>::operator()((YAML::Node **)&v132, (std::string *)v130);
  *((_DWORD *)v36 + 4) |= 2u;
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)v36 + 7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)v130);
  if ((v130[23] & 0x80000000) != 0) {
    operator delete(*(void **)v130);
  }
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
LABEL_180:
  YAML::Node::operator[]<char [6]>((YAML::Node *)v117, "slots", (uint64_t)__p);
  BOOL v39 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v39) {
      goto LABEL_257;
    }
  }
  else if (v39)
  {
    goto LABEL_257;
  }
  YAML::Node::operator[]<char [6]>((YAML::Node *)v117, "slots", (uint64_t)__p);
  if (!__p[0])
  {
    BOOL v106 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v132 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v106, (uint64_t)&v132);
  }
  if (v123)
  {
    uint64_t v40 = **v123;
    if (*(unsigned char *)v40) {
      int v41 = *(_DWORD *)(v40 + 16);
    }
    else {
      int v41 = 0;
    }
  }
  else
  {
    int v41 = 1;
  }
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
  if (v41 == 3)
  {
    YAML::Node::operator[]<char [6]>((YAML::Node *)v117, "slots", (uint64_t)&v132);
    if (v132.__r_.__value_.__s.__data_[0] && v136)
    {
      YAML::detail::node_data::begin(**v136, (uint64_t)__p);
      uint64_t v43 = v134;
      uint64_t v42 = v135;
      if (v135)
      {
        atomic_fetch_add_explicit(&v135->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)int v130 = *(_OWORD *)__p;
        *(_OWORD *)&v130[16] = *(_OWORD *)&__p[16];
        *(void *)&v130[32] = v43;
        uint64_t v131 = v42;
        atomic_fetch_add_explicit(&v42->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v42);
      }
      else
      {
        *(_OWORD *)int v130 = *(_OWORD *)__p;
        *(_OWORD *)&v130[16] = *(_OWORD *)&__p[16];
        *(void *)&v130[32] = v134;
        uint64_t v131 = 0;
      }
    }
    else
    {
      *(_DWORD *)int v130 = 0;
      memset(&v130[8], 0, 32);
      uint64_t v131 = 0;
    }
    if (v132.__r_.__value_.__s.__data_[0] && v136)
    {
      YAML::detail::node_data::end(**v136, (uint64_t)__p);
      uint64_t v48 = v135;
      if (v135)
      {
        atomic_fetch_add_explicit(&v135->__shared_owners_, 1uLL, memory_order_relaxed);
        int v49 = *(_DWORD *)__p;
        uint64_t v50 = *(void *)&__p[8];
        uint64_t v51 = *(void *)&__p[16];
        atomic_fetch_add_explicit(&v48->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v48);
      }
      else
      {
        int v49 = *(_DWORD *)__p;
        uint64_t v50 = *(void *)&__p[8];
        uint64_t v51 = *(void *)&__p[16];
      }
    }
    else
    {
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      uint64_t v48 = 0;
      int v49 = 0;
    }
    while (1)
    {
      if (*(_DWORD *)v130 == v49)
      {
        int v52 = &v130[8];
        uint64_t v53 = v50;
        if (v49 != 1)
        {
          if (v49 != 2) {
            goto LABEL_240;
          }
          int v52 = &v130[16];
          uint64_t v53 = v51;
        }
        if (*(void *)v52 == v53)
        {
LABEL_240:
          if (v48) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v48);
          }
          if (v131) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v131);
          }
          if (v135) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v135);
          }
          if (v133 < 0)
          {
            uint64_t v61 = (void *)v132.__r_.__value_.__l.__size_;
            goto LABEL_256;
          }
          goto LABEL_257;
        }
      }
      YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v130, (uint64_t)__p);
      uint64_t v55 = (int *)*((void *)v36 + 5);
      if (!v55) {
        break;
      }
      uint64_t v56 = *((int *)v36 + 8);
      int v57 = *v55;
      if ((int)v56 < *v55)
      {
        *((_DWORD *)v36 + 8) = v56 + 1;
        uint64_t v58 = *(siri::intelligence **)&v55[2 * v56 + 2];
        goto LABEL_227;
      }
      if (v57 == *((_DWORD *)v36 + 9)) {
        goto LABEL_225;
      }
LABEL_226:
      int *v55 = v57 + 1;
      uint64_t v58 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_KeyValueParameter>(*((google::protobuf::internal::ArenaImpl **)v36
                                                                                              + 3));
      uint64_t v59 = *((void *)v36 + 5);
      uint64_t v60 = *((int *)v36 + 8);
      *((_DWORD *)v36 + 8) = v60 + 1;
      *(void *)(v59 + 8 * v60 + 8) = v58;
LABEL_227:
      siri::intelligence::ParseFlowTest_KeyValueParameter(v58, (protobuf::FlowTest_KeyValueParameter *)__p, v54);
      if (v129) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v129);
      }
      if (v128 < 0) {
        operator delete(v127);
      }
      if (v126) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v126);
      }
      if (v125 < 0) {
        operator delete(v124);
      }
      if (v122) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v122);
      }
      if ((__p[31] & 0x80000000) != 0) {
        operator delete(*(void **)&__p[8]);
      }
      YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v130);
    }
    int v57 = *((_DWORD *)v36 + 9);
LABEL_225:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v36 + 6, v57 + 1);
    uint64_t v55 = (int *)*((void *)v36 + 5);
    int v57 = *v55;
    goto LABEL_226;
  }
  uint64_t v44 = (int *)*((void *)v36 + 5);
  if (!v44)
  {
    int v46 = *((_DWORD *)v36 + 9);
    goto LABEL_250;
  }
  uint64_t v45 = *((int *)v36 + 8);
  int v46 = *v44;
  if ((int)v45 >= *v44)
  {
    if (v46 != *((_DWORD *)v36 + 9))
    {
LABEL_251:
      *uint64_t v44 = v46 + 1;
      uint64_t v47 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_KeyValueParameter>(*((google::protobuf::internal::ArenaImpl **)v36
                                                                                              + 3));
      uint64_t v62 = *((void *)v36 + 5);
      uint64_t v63 = *((int *)v36 + 8);
      *((_DWORD *)v36 + 8) = v63 + 1;
      *(void *)(v62 + 8 * v63 + 8) = v47;
      goto LABEL_252;
    }
LABEL_250:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v36 + 6, v46 + 1);
    uint64_t v44 = (int *)*((void *)v36 + 5);
    int v46 = *v44;
    goto LABEL_251;
  }
  *((_DWORD *)v36 + 8) = v45 + 1;
  uint64_t v47 = *(siri::intelligence **)&v44[2 * v45 + 2];
LABEL_252:
  YAML::Node::operator[]<char [6]>((YAML::Node *)v117, "slots", (uint64_t)__p);
  siri::intelligence::ParseFlowTest_KeyValueParameter(v47, (protobuf::FlowTest_KeyValueParameter *)__p, v64);
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    uint64_t v61 = *(void **)&__p[8];
LABEL_256:
    operator delete(v61);
  }
LABEL_257:
  *(void *)std::string __p = &v138;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  if (v118) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v118);
  }
  if ((v117[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v117[8]);
  }
LABEL_261:
  YAML::Node::operator[]<char [15]>(a2, "assertResponse", (uint64_t)__p);
  BOOL v65 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v65) {
      goto LABEL_452;
    }
  }
  else if (v65)
  {
    goto LABEL_452;
  }
  *((_DWORD *)this + 4) |= 4u;
  v66 = (protobuf::FlowTest_AssertResponse *)*((void *)this + 8);
  if (!v66)
  {
    v66 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_AssertResponse>(0);
    *((void *)this + 8) = v66;
  }
  YAML::Node::operator[]<char [15]>(a2, "assertResponse", (uint64_t)v117);
  memset(v137, 0, sizeof(v137));
  YAML::Node::operator[]<char [3]>((YAML::Node *)v117, "id", (uint64_t)__p);
  BOOL v67 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v67) {
      goto LABEL_292;
    }
  }
  else if (v67)
  {
    goto LABEL_292;
  }
  YAML::Node::operator[]<char [3]>((YAML::Node *)v117, "id", (uint64_t)__p);
  if (!__p[0])
  {
    uint64_t v107 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v132 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v107, (uint64_t)&v132);
  }
  v132.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
  YAML::as_if<std::string,void>::operator()((YAML::Node **)&v132, (std::string *)v130);
  *((_DWORD *)v66 + 4) |= 1u;
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)v66 + 9, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)v130);
  if ((v130[23] & 0x80000000) != 0) {
    operator delete(*(void **)v130);
  }
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
LABEL_292:
  YAML::Node::operator[]<char [6]>((YAML::Node *)v117, "anyId", (uint64_t)__p);
  BOOL v68 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v68) {
      goto LABEL_361;
    }
  }
  else if (v68)
  {
    goto LABEL_361;
  }
  YAML::Node::operator[]<char [6]>((YAML::Node *)v117, "anyId", (uint64_t)__p);
  if (!__p[0])
  {
    int v108 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v132 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v108, (uint64_t)&v132);
  }
  if (v123)
  {
    uint64_t v69 = **v123;
    if (*(unsigned char *)v69) {
      int v70 = *(_DWORD *)(v69 + 16);
    }
    else {
      int v70 = 0;
    }
  }
  else
  {
    int v70 = 1;
  }
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
  if (v70 == 3)
  {
    YAML::Node::operator[]<char [6]>((YAML::Node *)v117, "anyId", (uint64_t)&v132);
    if (v132.__r_.__value_.__s.__data_[0] && v136)
    {
      YAML::detail::node_data::begin(**v136, (uint64_t)__p);
      uint64_t v72 = v134;
      int v71 = v135;
      if (v135)
      {
        atomic_fetch_add_explicit(&v135->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)int v130 = *(_OWORD *)__p;
        *(_OWORD *)&v130[16] = *(_OWORD *)&__p[16];
        *(void *)&v130[32] = v72;
        uint64_t v131 = v71;
        atomic_fetch_add_explicit(&v71->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v71);
      }
      else
      {
        *(_OWORD *)int v130 = *(_OWORD *)__p;
        *(_OWORD *)&v130[16] = *(_OWORD *)&__p[16];
        *(void *)&v130[32] = v134;
        uint64_t v131 = 0;
      }
    }
    else
    {
      *(_DWORD *)int v130 = 0;
      memset(&v130[8], 0, 32);
      uint64_t v131 = 0;
    }
    if (v132.__r_.__value_.__s.__data_[0] && v136)
    {
      YAML::detail::node_data::end(**v136, (uint64_t)__p);
      uint64_t v74 = v135;
      if (v135)
      {
        atomic_fetch_add_explicit(&v135->__shared_owners_, 1uLL, memory_order_relaxed);
        int v75 = *(_DWORD *)__p;
        uint64_t v76 = *(void *)&__p[8];
        uint64_t v77 = *(void *)&__p[16];
        atomic_fetch_add_explicit(&v74->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v115 = v74;
        std::__shared_weak_count::__release_shared[abi:ne180100](v74);
      }
      else
      {
        uint64_t v115 = 0;
        int v75 = *(_DWORD *)__p;
        uint64_t v76 = *(void *)&__p[8];
        uint64_t v77 = *(void *)&__p[16];
      }
    }
    else
    {
      uint64_t v76 = 0;
      uint64_t v77 = 0;
      uint64_t v115 = 0;
      int v75 = 0;
    }
    while (1)
    {
      if (*(_DWORD *)v130 == v75)
      {
        uint64_t v78 = &v130[8];
        uint64_t v79 = v76;
        if (v75 != 1)
        {
          if (v75 != 2) {
            break;
          }
          uint64_t v78 = &v130[16];
          uint64_t v79 = v77;
        }
        if (*(void *)v78 == v79) {
          break;
        }
      }
      YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v130, (uint64_t)__p);
      if (!__p[0])
      {
        uint64_t v99 = __cxa_allocate_exception(0x38uLL);
        if ((__p[31] & 0x80000000) != 0) {
          std::string::__init_copy_ctor_external(&v138, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
        }
        else {
          std::string v138 = *(std::string *)&__p[8];
        }
        YAML::InvalidNode::InvalidNode(v99, (uint64_t)&v138);
      }
      v138.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
      YAML::as_if<std::string,void>::operator()((YAML::Node **)&v138, &v120);
      google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<std::string>::TypeHandler,(void *)0>((uint64_t)v66 + 24, (__n128 *)&v120);
      if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v120.__r_.__value_.__l.__data_);
      }
      if (v129) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v129);
      }
      if (v128 < 0) {
        operator delete(v127);
      }
      if (v126) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v126);
      }
      if (v125 < 0) {
        operator delete(v124);
      }
      if (v122) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v122);
      }
      if ((__p[31] & 0x80000000) != 0) {
        operator delete(*(void **)&__p[8]);
      }
      YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v130);
    }
    if (v115) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v115);
    }
    if (v131) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v131);
    }
    if (v135) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v135);
    }
    if (v133 < 0)
    {
      BOOL v73 = (void *)v132.__r_.__value_.__l.__size_;
      goto LABEL_360;
    }
  }
  else
  {
    YAML::Node::operator[]<char [6]>((YAML::Node *)v117, "anyId", (uint64_t)__p);
    if (!__p[0])
    {
      uint64_t v113 = __cxa_allocate_exception(0x38uLL);
      if ((__p[31] & 0x80000000) != 0) {
        std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
      }
      else {
        std::string v132 = *(std::string *)&__p[8];
      }
      YAML::InvalidNode::InvalidNode(v113, (uint64_t)&v132);
    }
    v132.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)&v132, (std::string *)v130);
    google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<std::string>::TypeHandler,(void *)0>((uint64_t)v66 + 24, (__n128 *)v130);
    if ((v130[23] & 0x80000000) != 0) {
      operator delete(*(void **)v130);
    }
    if (v122) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v122);
    }
    if ((__p[31] & 0x80000000) != 0)
    {
      BOOL v73 = *(void **)&__p[8];
LABEL_360:
      operator delete(v73);
    }
  }
LABEL_361:
  YAML::Node::operator[]<char [7]>((YAML::Node *)v117, "allIds", (uint64_t)__p);
  BOOL v80 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v80) {
      goto LABEL_430;
    }
  }
  else if (v80)
  {
    goto LABEL_430;
  }
  YAML::Node::operator[]<char [7]>((YAML::Node *)v117, "allIds", (uint64_t)__p);
  if (!__p[0])
  {
    uint64_t v109 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v132 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v109, (uint64_t)&v132);
  }
  if (v123)
  {
    uint64_t v81 = **v123;
    if (*(unsigned char *)v81) {
      int v82 = *(_DWORD *)(v81 + 16);
    }
    else {
      int v82 = 0;
    }
  }
  else
  {
    int v82 = 1;
  }
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
  if (v82 == 3)
  {
    YAML::Node::operator[]<char [7]>((YAML::Node *)v117, "allIds", (uint64_t)&v132);
    if (v132.__r_.__value_.__s.__data_[0] && v136)
    {
      YAML::detail::node_data::begin(**v136, (uint64_t)__p);
      uint64_t v84 = v134;
      long long v83 = v135;
      if (v135)
      {
        atomic_fetch_add_explicit(&v135->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)int v130 = *(_OWORD *)__p;
        *(_OWORD *)&v130[16] = *(_OWORD *)&__p[16];
        *(void *)&v130[32] = v84;
        uint64_t v131 = v83;
        atomic_fetch_add_explicit(&v83->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v83);
      }
      else
      {
        *(_OWORD *)int v130 = *(_OWORD *)__p;
        *(_OWORD *)&v130[16] = *(_OWORD *)&__p[16];
        *(void *)&v130[32] = v134;
        uint64_t v131 = 0;
      }
    }
    else
    {
      *(_DWORD *)int v130 = 0;
      memset(&v130[8], 0, 32);
      uint64_t v131 = 0;
    }
    if (v132.__r_.__value_.__s.__data_[0] && v136)
    {
      YAML::detail::node_data::end(**v136, (uint64_t)__p);
      uint64_t v86 = v135;
      if (v135)
      {
        atomic_fetch_add_explicit(&v135->__shared_owners_, 1uLL, memory_order_relaxed);
        int v87 = *(_DWORD *)__p;
        uint64_t v88 = *(void *)&__p[8];
        uint64_t v89 = *(void *)&__p[16];
        atomic_fetch_add_explicit(&v86->__shared_owners_, 1uLL, memory_order_relaxed);
        int v116 = v86;
        std::__shared_weak_count::__release_shared[abi:ne180100](v86);
      }
      else
      {
        int v116 = 0;
        int v87 = *(_DWORD *)__p;
        uint64_t v88 = *(void *)&__p[8];
        uint64_t v89 = *(void *)&__p[16];
      }
    }
    else
    {
      uint64_t v88 = 0;
      uint64_t v89 = 0;
      int v116 = 0;
      int v87 = 0;
    }
    while (1)
    {
      if (*(_DWORD *)v130 == v87)
      {
        v90 = &v130[8];
        uint64_t v91 = v88;
        if (v87 != 1)
        {
          if (v87 != 2) {
            break;
          }
          v90 = &v130[16];
          uint64_t v91 = v89;
        }
        if (*(void *)v90 == v91) {
          break;
        }
      }
      YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v130, (uint64_t)__p);
      if (!__p[0])
      {
        uint64_t v100 = __cxa_allocate_exception(0x38uLL);
        if ((__p[31] & 0x80000000) != 0) {
          std::string::__init_copy_ctor_external(&v138, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
        }
        else {
          std::string v138 = *(std::string *)&__p[8];
        }
        YAML::InvalidNode::InvalidNode(v100, (uint64_t)&v138);
      }
      v138.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
      YAML::as_if<std::string,void>::operator()((YAML::Node **)&v138, &v120);
      google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<std::string>::TypeHandler,(void *)0>((uint64_t)v66 + 48, (__n128 *)&v120);
      if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v120.__r_.__value_.__l.__data_);
      }
      if (v129) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v129);
      }
      if (v128 < 0) {
        operator delete(v127);
      }
      if (v126) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v126);
      }
      if (v125 < 0) {
        operator delete(v124);
      }
      if (v122) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v122);
      }
      if ((__p[31] & 0x80000000) != 0) {
        operator delete(*(void **)&__p[8]);
      }
      YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v130);
    }
    if (v116) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v116);
    }
    if (v131) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v131);
    }
    if (v135) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v135);
    }
    if (v133 < 0)
    {
      int v85 = (void *)v132.__r_.__value_.__l.__size_;
      goto LABEL_429;
    }
  }
  else
  {
    YAML::Node::operator[]<char [7]>((YAML::Node *)v117, "allIds", (uint64_t)__p);
    if (!__p[0])
    {
      BOOL v114 = __cxa_allocate_exception(0x38uLL);
      if ((__p[31] & 0x80000000) != 0) {
        std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
      }
      else {
        std::string v132 = *(std::string *)&__p[8];
      }
      YAML::InvalidNode::InvalidNode(v114, (uint64_t)&v132);
    }
    v132.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)&v132, (std::string *)v130);
    google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<std::string>::TypeHandler,(void *)0>((uint64_t)v66 + 48, (__n128 *)v130);
    if ((v130[23] & 0x80000000) != 0) {
      operator delete(*(void **)v130);
    }
    if (v122) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v122);
    }
    if ((__p[31] & 0x80000000) != 0)
    {
      int v85 = *(void **)&__p[8];
LABEL_429:
      operator delete(v85);
    }
  }
LABEL_430:
  YAML::Node::operator[]<char [6]>((YAML::Node *)v117, "count", (uint64_t)__p);
  BOOL v92 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) == 0)
  {
    if (v92) {
      goto LABEL_448;
    }
LABEL_441:
    YAML::Node::operator[]<char [6]>((YAML::Node *)v117, "count", (uint64_t)__p);
    if (!__p[0])
    {
      int v112 = __cxa_allocate_exception(0x38uLL);
      if ((__p[31] & 0x80000000) != 0) {
        std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
      }
      else {
        std::string v132 = *(std::string *)&__p[8];
      }
      YAML::InvalidNode::InvalidNode(v112, (uint64_t)&v132);
    }
    v132.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)&v132, (std::string *)v130);
    int v93 = siri::intelligence::StringToIntegralType<int>((const std::string *)v130, 0);
    *((_DWORD *)v66 + 4) |= 2u;
    *((_DWORD *)v66 + 20) = v93;
    if ((v130[23] & 0x80000000) != 0) {
      operator delete(*(void **)v130);
    }
    if (v122) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v122);
    }
    if ((__p[31] & 0x80000000) != 0) {
      operator delete(*(void **)&__p[8]);
    }
    goto LABEL_448;
  }
  operator delete(*(void **)&__p[8]);
  if (!v92) {
    goto LABEL_441;
  }
LABEL_448:
  *(void *)std::string __p = v137;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  if (v118) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v118);
  }
  if ((v117[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v117[8]);
  }
LABEL_452:
  YAML::Node::operator[]<char [16]>(a2, "assertCondition", (uint64_t)__p);
  BOOL v94 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v94) {
      goto LABEL_505;
    }
  }
  else if (v94)
  {
    goto LABEL_505;
  }
  *((_DWORD *)this + 4) |= 8u;
  v95 = (protobuf::FlowTest_AssertCondition *)*((void *)this + 9);
  if (!v95)
  {
    v95 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_AssertCondition>(0);
    *((void *)this + 9) = v95;
  }
  YAML::Node::operator[]<char [16]>(a2, "assertCondition", (uint64_t)&v132);
  memset(v130, 0, 24);
  YAML::Node::operator[]<char [3]>((YAML::Node *)&v132, "id", (uint64_t)__p);
  BOOL v96 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v96) {
      goto LABEL_483;
    }
  }
  else if (v96)
  {
    goto LABEL_483;
  }
  YAML::Node::operator[]<char [3]>((YAML::Node *)&v132, "id", (uint64_t)__p);
  if (!__p[0])
  {
    BOOL v110 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v117, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else
    {
      *(_OWORD *)uint64_t v117 = *(_OWORD *)&__p[8];
      *(void *)&v117[16] = *(void *)&__p[24];
    }
    YAML::InvalidNode::InvalidNode(v110, (uint64_t)v117);
  }
  *(void *)uint64_t v117 = __p;
  YAML::as_if<std::string,void>::operator()((YAML::Node **)v117, &v138);
  *((_DWORD *)v95 + 4) |= 1u;
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)v95 + 3, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)&v138);
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v138.__r_.__value_.__l.__data_);
  }
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
LABEL_483:
  YAML::Node::operator[]<char [6]>((YAML::Node *)&v132, "value", (uint64_t)__p);
  BOOL v97 = !__p[0] || v123 && !*(unsigned char *)**v123;
  if (v122) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v122);
  }
  if ((__p[31] & 0x80000000) == 0)
  {
    if (v97) {
      goto LABEL_501;
    }
LABEL_494:
    YAML::Node::operator[]<char [6]>((YAML::Node *)&v132, "value", (uint64_t)__p);
    if (!__p[0])
    {
      uint64_t v111 = __cxa_allocate_exception(0x38uLL);
      if ((__p[31] & 0x80000000) != 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v117, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
      }
      else
      {
        *(_OWORD *)uint64_t v117 = *(_OWORD *)&__p[8];
        *(void *)&v117[16] = *(void *)&__p[24];
      }
      YAML::InvalidNode::InvalidNode(v111, (uint64_t)v117);
    }
    *(void *)uint64_t v117 = __p;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)v117, &v138);
    char v98 = siri::intelligence::StringToBool(&v138, 0);
    *((_DWORD *)v95 + 4) |= 2u;
    *((unsigned char *)v95 + 32) = v98;
    if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v138.__r_.__value_.__l.__data_);
    }
    if (v122) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v122);
    }
    if ((__p[31] & 0x80000000) != 0) {
      operator delete(*(void **)&__p[8]);
    }
    goto LABEL_501;
  }
  operator delete(*(void **)&__p[8]);
  if (!v97) {
    goto LABEL_494;
  }
LABEL_501:
  *(void *)std::string __p = v130;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  if (v135) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v135);
  }
  if (v133 < 0) {
    operator delete((void *)v132.__r_.__value_.__l.__size_);
  }
LABEL_505:
  *(void *)std::string __p = v119;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
}

void sub_239A2A730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30)
{
  __cxa_free_exception(v30);
  YAML::Node::~Node((YAML::Node *)&a30);
  *(void *)(v31 - 256) = v31 - 152;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v31 - 256));
  YAML::Node::~Node((YAML::Node *)&__p);
  *(void *)(v31 - 256) = &a21;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v31 - 256));
  _Unwind_Resume(a1);
}

void siri::intelligence::ParseFlowTest_KeyValueParameter(siri::intelligence *this, protobuf::FlowTest_KeyValueParameter *a2, const YAML::Node *a3)
{
  memset(v85, 0, 24);
  YAML::Node::operator[]<char [4]>(a2, "key", (uint64_t)__p);
  BOOL v5 = !__p[0] || v71 && !*(unsigned char *)**v71;
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
  if (!v5)
  {
    YAML::Node::operator[]<char [4]>(a2, "key", (uint64_t)__p);
    if (!__p[0])
    {
      exceptiouint64_t n = __cxa_allocate_exception(0x38uLL);
      if ((__p[31] & 0x80000000) != 0) {
        std::string::__init_copy_ctor_external(&v80, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
      }
      else {
        std::string v80 = *(std::string *)&__p[8];
      }
      YAML::InvalidNode::InvalidNode(exception, (uint64_t)&v80);
    }
    v80.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
    YAML::as_if<std::string,void>::operator()((YAML::Node **)&v80, (std::string *)v78);
    *((_DWORD *)this + 4) |= 1u;
    google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)this + 9, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)v78);
    if ((v78[23] & 0x80000000) != 0) {
      operator delete(*(void **)v78);
    }
    if (v70) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v70);
    }
    if ((__p[31] & 0x80000000) != 0) {
      operator delete(*(void **)&__p[8]);
    }
  }
  YAML::Node::operator[]<char [12]>(a2, "valueNumber", (uint64_t)__p);
  BOOL v6 = !__p[0] || v71 && !*(unsigned char *)**v71;
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v6) {
      goto LABEL_36;
    }
  }
  else if (v6)
  {
    goto LABEL_36;
  }
  YAML::Node::operator[]<char [12]>(a2, "valueNumber", (uint64_t)__p);
  if (!__p[0])
  {
    v64 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v80, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v80 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v64, (uint64_t)&v80);
  }
  v80.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
  YAML::as_if<std::string,void>::operator()((YAML::Node **)&v80, (std::string *)v78);
  siri::intelligence::StringToDouble((uint64_t)v78, 0);
  *((_DWORD *)this + 4) |= 4u;
  *((void *)this + 11) = v7;
  if ((v78[23] & 0x80000000) != 0) {
    operator delete(*(void **)v78);
  }
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
LABEL_36:
  YAML::Node::operator[]<char [13]>(a2, "valueBoolean", (uint64_t)__p);
  BOOL v8 = !__p[0] || v71 && !*(unsigned char *)**v71;
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v8) {
      goto LABEL_54;
    }
  }
  else if (v8)
  {
    goto LABEL_54;
  }
  YAML::Node::operator[]<char [13]>(a2, "valueBoolean", (uint64_t)__p);
  if (!__p[0])
  {
    BOOL v65 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v80, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v80 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v65, (uint64_t)&v80);
  }
  v80.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
  YAML::as_if<std::string,void>::operator()((YAML::Node **)&v80, (std::string *)v78);
  char v9 = siri::intelligence::StringToBool((const std::string *)v78, 0);
  *((_DWORD *)this + 4) |= 8u;
  *((unsigned char *)this + 96) = v9;
  if ((v78[23] & 0x80000000) != 0) {
    operator delete(*(void **)v78);
  }
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
LABEL_54:
  YAML::Node::operator[]<char [12]>(a2, "valueString", (uint64_t)__p);
  BOOL v10 = !__p[0] || v71 && !*(unsigned char *)**v71;
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v10) {
      goto LABEL_72;
    }
  }
  else if (v10)
  {
    goto LABEL_72;
  }
  YAML::Node::operator[]<char [12]>(a2, "valueString", (uint64_t)__p);
  if (!__p[0])
  {
    v66 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v80, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v80 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v66, (uint64_t)&v80);
  }
  v80.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
  YAML::as_if<std::string,void>::operator()((YAML::Node **)&v80, (std::string *)v78);
  *((_DWORD *)this + 4) |= 2u;
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)this + 10, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)v78);
  if ((v78[23] & 0x80000000) != 0) {
    operator delete(*(void **)v78);
  }
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
LABEL_72:
  YAML::Node::operator[]<char [11]>(a2, "valueArray", (uint64_t)__p);
  BOOL v11 = !__p[0] || v71 && !*(unsigned char *)**v71;
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v11) {
      goto LABEL_149;
    }
  }
  else if (v11)
  {
    goto LABEL_149;
  }
  YAML::Node::operator[]<char [11]>(a2, "valueArray", (uint64_t)__p);
  if (!__p[0])
  {
    BOOL v67 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v80, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v80 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v67, (uint64_t)&v80);
  }
  if (v71)
  {
    uint64_t v12 = **v71;
    if (*(unsigned char *)v12) {
      int v13 = *(_DWORD *)(v12 + 16);
    }
    else {
      int v13 = 0;
    }
  }
  else
  {
    int v13 = 1;
  }
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
  if (v13 == 3)
  {
    YAML::Node::operator[]<char [11]>(a2, "valueArray", (uint64_t)&v80);
    if (v80.__r_.__value_.__s.__data_[0] && v84)
    {
      YAML::detail::node_data::begin(**v84, (uint64_t)__p);
      uint64_t v15 = v82;
      uint64_t v14 = v83;
      if (v83)
      {
        atomic_fetch_add_explicit(&v83->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)__p;
        *(_OWORD *)&v78[16] = *(_OWORD *)&__p[16];
        *(void *)&v78[32] = v15;
        uint64_t v79 = v14;
        atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v14);
      }
      else
      {
        *(_OWORD *)uint64_t v78 = *(_OWORD *)__p;
        *(_OWORD *)&v78[16] = *(_OWORD *)&__p[16];
        *(void *)&v78[32] = v82;
        uint64_t v79 = 0;
      }
    }
    else
    {
      *(_DWORD *)uint64_t v78 = 0;
      memset(&v78[8], 0, 32);
      uint64_t v79 = 0;
    }
    if (v80.__r_.__value_.__s.__data_[0] && v84)
    {
      YAML::detail::node_data::end(**v84, (uint64_t)__p);
      uint64_t v20 = v83;
      if (v83)
      {
        atomic_fetch_add_explicit(&v83->__shared_owners_, 1uLL, memory_order_relaxed);
        int v21 = *(_DWORD *)__p;
        uint64_t v22 = *(void *)&__p[8];
        uint64_t v23 = *(void *)&__p[16];
        atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v20);
      }
      else
      {
        int v21 = *(_DWORD *)__p;
        uint64_t v22 = *(void *)&__p[8];
        uint64_t v23 = *(void *)&__p[16];
      }
    }
    else
    {
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v20 = 0;
      int v21 = 0;
    }
    while (1)
    {
      if (*(_DWORD *)v78 == v21)
      {
        int v24 = &v78[8];
        uint64_t v25 = v22;
        if (v21 != 1)
        {
          if (v21 != 2) {
            goto LABEL_132;
          }
          int v24 = &v78[16];
          uint64_t v25 = v23;
        }
        if (*(void *)v24 == v25)
        {
LABEL_132:
          if (v20) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v20);
          }
          if (v79) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v79);
          }
          if (v83) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v83);
          }
          if (v81 < 0)
          {
            std::string::size_type size = (void *)v80.__r_.__value_.__l.__size_;
            goto LABEL_148;
          }
          goto LABEL_149;
        }
      }
      YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v78, (uint64_t)__p);
      int v27 = (int *)*((void *)this + 5);
      if (!v27) {
        break;
      }
      uint64_t v28 = *((int *)this + 8);
      int v29 = *v27;
      if ((int)v28 < *v27)
      {
        *((_DWORD *)this + 8) = v28 + 1;
        uint64_t v30 = *(siri::intelligence **)&v27[2 * v28 + 2];
        goto LABEL_119;
      }
      if (v29 == *((_DWORD *)this + 9)) {
        goto LABEL_117;
      }
LABEL_118:
      *int v27 = v29 + 1;
      uint64_t v30 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_KeyValueParameter>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                              + 3));
      uint64_t v31 = *((void *)this + 5);
      uint64_t v32 = *((int *)this + 8);
      *((_DWORD *)this + 8) = v32 + 1;
      *(void *)(v31 + 8 * v32 + 8) = v30;
LABEL_119:
      siri::intelligence::ParseFlowTest_KeyValueParameter(v30, (protobuf::FlowTest_KeyValueParameter *)__p, v26);
      if (v77) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v77);
      }
      if (v76 < 0) {
        operator delete(v75);
      }
      if (v74) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v74);
      }
      if (v73 < 0) {
        operator delete(v72);
      }
      if (v70) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v70);
      }
      if ((__p[31] & 0x80000000) != 0) {
        operator delete(*(void **)&__p[8]);
      }
      YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v78);
    }
    int v29 = *((_DWORD *)this + 9);
LABEL_117:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v29 + 1);
    int v27 = (int *)*((void *)this + 5);
    int v29 = *v27;
    goto LABEL_118;
  }
  uint64_t v16 = (int *)*((void *)this + 5);
  if (!v16)
  {
    int v18 = *((_DWORD *)this + 9);
LABEL_142:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v18 + 1);
    uint64_t v16 = (int *)*((void *)this + 5);
    int v18 = *v16;
    goto LABEL_143;
  }
  uint64_t v17 = *((int *)this + 8);
  int v18 = *v16;
  if ((int)v17 < *v16)
  {
    *((_DWORD *)this + 8) = v17 + 1;
    uint64_t v19 = *(siri::intelligence **)&v16[2 * v17 + 2];
    goto LABEL_144;
  }
  if (v18 == *((_DWORD *)this + 9)) {
    goto LABEL_142;
  }
LABEL_143:
  *uint64_t v16 = v18 + 1;
  uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_KeyValueParameter>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                          + 3));
  uint64_t v34 = *((void *)this + 5);
  uint64_t v35 = *((int *)this + 8);
  *((_DWORD *)this + 8) = v35 + 1;
  *(void *)(v34 + 8 * v35 + 8) = v19;
LABEL_144:
  YAML::Node::operator[]<char [11]>(a2, "valueArray", (uint64_t)__p);
  siri::intelligence::ParseFlowTest_KeyValueParameter(v19, (protobuf::FlowTest_KeyValueParameter *)__p, v36);
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    std::string::size_type size = *(void **)&__p[8];
LABEL_148:
    operator delete(size);
  }
LABEL_149:
  YAML::Node::operator[]<char [16]>(a2, "valueDictionary", (uint64_t)__p);
  BOOL v37 = !__p[0] || v71 && !*(unsigned char *)**v71;
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v37) {
      goto LABEL_226;
    }
  }
  else if (v37)
  {
    goto LABEL_226;
  }
  YAML::Node::operator[]<char [16]>(a2, "valueDictionary", (uint64_t)__p);
  if (!__p[0])
  {
    BOOL v68 = __cxa_allocate_exception(0x38uLL);
    if ((__p[31] & 0x80000000) != 0) {
      std::string::__init_copy_ctor_external(&v80, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
    }
    else {
      std::string v80 = *(std::string *)&__p[8];
    }
    YAML::InvalidNode::InvalidNode(v68, (uint64_t)&v80);
  }
  if (v71)
  {
    uint64_t v38 = **v71;
    if (*(unsigned char *)v38) {
      int v39 = *(_DWORD *)(v38 + 16);
    }
    else {
      int v39 = 0;
    }
  }
  else
  {
    int v39 = 1;
  }
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[8]);
  }
  if (v39 == 3)
  {
    YAML::Node::operator[]<char [16]>(a2, "valueDictionary", (uint64_t)&v80);
    if (v80.__r_.__value_.__s.__data_[0] && v84)
    {
      YAML::detail::node_data::begin(**v84, (uint64_t)__p);
      uint64_t v41 = v82;
      uint64_t v40 = v83;
      if (v83)
      {
        atomic_fetch_add_explicit(&v83->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)__p;
        *(_OWORD *)&v78[16] = *(_OWORD *)&__p[16];
        *(void *)&v78[32] = v41;
        uint64_t v79 = v40;
        atomic_fetch_add_explicit(&v40->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v40);
      }
      else
      {
        *(_OWORD *)uint64_t v78 = *(_OWORD *)__p;
        *(_OWORD *)&v78[16] = *(_OWORD *)&__p[16];
        *(void *)&v78[32] = v82;
        uint64_t v79 = 0;
      }
    }
    else
    {
      *(_DWORD *)uint64_t v78 = 0;
      memset(&v78[8], 0, 32);
      uint64_t v79 = 0;
    }
    if (v80.__r_.__value_.__s.__data_[0] && v84)
    {
      YAML::detail::node_data::end(**v84, (uint64_t)__p);
      int v46 = v83;
      if (v83)
      {
        atomic_fetch_add_explicit(&v83->__shared_owners_, 1uLL, memory_order_relaxed);
        int v47 = *(_DWORD *)__p;
        uint64_t v48 = *(void *)&__p[8];
        uint64_t v49 = *(void *)&__p[16];
        atomic_fetch_add_explicit(&v46->__shared_owners_, 1uLL, memory_order_relaxed);
        std::__shared_weak_count::__release_shared[abi:ne180100](v46);
      }
      else
      {
        int v47 = *(_DWORD *)__p;
        uint64_t v48 = *(void *)&__p[8];
        uint64_t v49 = *(void *)&__p[16];
      }
    }
    else
    {
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      int v46 = 0;
      int v47 = 0;
    }
    while (1)
    {
      if (*(_DWORD *)v78 == v47)
      {
        uint64_t v50 = &v78[8];
        uint64_t v51 = v48;
        if (v47 != 1)
        {
          if (v47 != 2) {
            goto LABEL_209;
          }
          uint64_t v50 = &v78[16];
          uint64_t v51 = v49;
        }
        if (*(void *)v50 == v51)
        {
LABEL_209:
          if (v46) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v46);
          }
          if (v79) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v79);
          }
          if (v83) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v83);
          }
          if (v81 < 0)
          {
            uint64_t v59 = (void *)v80.__r_.__value_.__l.__size_;
            goto LABEL_225;
          }
          goto LABEL_226;
        }
      }
      YAML::detail::iterator_base<YAML::detail::iterator_value const>::operator*((uint64_t)v78, (uint64_t)__p);
      uint64_t v53 = (int *)*((void *)this + 8);
      if (!v53) {
        break;
      }
      uint64_t v54 = *((int *)this + 14);
      int v55 = *v53;
      if ((int)v54 < *v53)
      {
        *((_DWORD *)this + 14) = v54 + 1;
        uint64_t v56 = *(siri::intelligence **)&v53[2 * v54 + 2];
        goto LABEL_196;
      }
      if (v55 == *((_DWORD *)this + 15)) {
        goto LABEL_194;
      }
LABEL_195:
      int *v53 = v55 + 1;
      uint64_t v56 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_KeyValueParameter>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                              + 6));
      uint64_t v57 = *((void *)this + 8);
      uint64_t v58 = *((int *)this + 14);
      *((_DWORD *)this + 14) = v58 + 1;
      *(void *)(v57 + 8 * v58 + 8) = v56;
LABEL_196:
      siri::intelligence::ParseFlowTest_KeyValueParameter(v56, (protobuf::FlowTest_KeyValueParameter *)__p, v52);
      if (v77) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v77);
      }
      if (v76 < 0) {
        operator delete(v75);
      }
      if (v74) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v74);
      }
      if (v73 < 0) {
        operator delete(v72);
      }
      if (v70) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v70);
      }
      if ((__p[31] & 0x80000000) != 0) {
        operator delete(*(void **)&__p[8]);
      }
      YAML::detail::node_iterator_base<YAML::detail::node>::operator++((uint64_t)v78);
    }
    int v55 = *((_DWORD *)this + 15);
LABEL_194:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v55 + 1);
    uint64_t v53 = (int *)*((void *)this + 8);
    int v55 = *v53;
    goto LABEL_195;
  }
  uint64_t v42 = (int *)*((void *)this + 8);
  if (!v42)
  {
    int v44 = *((_DWORD *)this + 15);
LABEL_219:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v44 + 1);
    uint64_t v42 = (int *)*((void *)this + 8);
    int v44 = *v42;
    goto LABEL_220;
  }
  uint64_t v43 = *((int *)this + 14);
  int v44 = *v42;
  if ((int)v43 < *v42)
  {
    *((_DWORD *)this + 14) = v43 + 1;
    uint64_t v45 = *(siri::intelligence **)&v42[2 * v43 + 2];
    goto LABEL_221;
  }
  if (v44 == *((_DWORD *)this + 15)) {
    goto LABEL_219;
  }
LABEL_220:
  *uint64_t v42 = v44 + 1;
  uint64_t v45 = google::protobuf::Arena::CreateMaybeMessage<protobuf::FlowTest_KeyValueParameter>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                          + 6));
  uint64_t v60 = *((void *)this + 8);
  uint64_t v61 = *((int *)this + 14);
  *((_DWORD *)this + 14) = v61 + 1;
  *(void *)(v60 + 8 * v61 + 8) = v45;
LABEL_221:
  YAML::Node::operator[]<char [16]>(a2, "valueDictionary", (uint64_t)__p);
  siri::intelligence::ParseFlowTest_KeyValueParameter(v45, (protobuf::FlowTest_KeyValueParameter *)__p, v62);
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  if ((__p[31] & 0x80000000) != 0)
  {
    uint64_t v59 = *(void **)&__p[8];
LABEL_225:
    operator delete(v59);
  }
LABEL_226:
  *(void *)std::string __p = v85;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
}

void sub_239A2B9D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,uint64_t a38,std::__shared_weak_count *a39)
{
  if (a39) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a39);
  }
  YAML::Node::~Node((YAML::Node *)(v39 - 176));
  std::string __p = (void *)(v39 - 120);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::arena_destruct_object<std::string>(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

void siri::intelligence::WriteFlowTest_KeyValueParameter(siri::intelligence *this, const protobuf::FlowTest_KeyValueParameter *a2, YAML::Emitter *a3)
{
  if (**(unsigned char **)a2) {
    YAML::Emitter::EmitBeginMap(a2);
  }
  int v5 = *((_DWORD *)this + 4);
  if (v5)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "key");
    YAML::Emitter::Write((uint64_t)a2, (const void **)__p);
    if (v17 < 0) {
      operator delete(__p[0]);
    }
    YAML::Emitter::Write((uint64_t)a2, *((const void ***)this + 9));
    int v5 = *((_DWORD *)this + 4);
  }
  if ((v5 & 4) != 0)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "valueNumber");
    YAML::Emitter::Write((uint64_t)a2, (const void **)__p);
    if (v17 < 0) {
      operator delete(__p[0]);
    }
    YAML::Emitter::WriteStreamable<double>((uint64_t *)a2, *((double *)this + 11));
    int v5 = *((_DWORD *)this + 4);
  }
  if ((v5 & 8) != 0)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "valueBoolean");
    YAML::Emitter::Write((uint64_t)a2, (const void **)__p);
    if (v17 < 0) {
      operator delete(__p[0]);
    }
    YAML::Emitter::Write(a2, *((unsigned __int8 *)this + 96));
    int v5 = *((_DWORD *)this + 4);
  }
  if ((v5 & 2) != 0)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "valueString");
    YAML::Emitter::Write((uint64_t)a2, (const void **)__p);
    if (v17 < 0) {
      operator delete(__p[0]);
    }
    YAML::Emitter::Write((uint64_t)a2, *((const void ***)this + 10));
  }
  if (*((int *)this + 8) >= 1)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "valueArray");
    YAML::Emitter::Write((uint64_t)a2, (const void **)__p);
    if (v17 < 0) {
      operator delete(__p[0]);
    }
    int v6 = *((_DWORD *)this + 8);
    if (v6 != 1)
    {
      if (**(unsigned char **)a2)
      {
        YAML::Emitter::EmitBeginSeq(a2);
        int v6 = *((_DWORD *)this + 8);
      }
      if (v6 < 1) {
        goto LABEL_47;
      }
    }
    for (int i = 0; i < v10; ++i)
    {
      BOOL v8 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::FlowTest_KeyValueParameter>::TypeHandler>((uint64_t)this + 24, i);
      siri::intelligence::WriteFlowTest_KeyValueParameter(v8, a2, v9);
      int v10 = *((_DWORD *)this + 8);
    }
    if (v10 != 1)
    {
LABEL_47:
      if (**(unsigned char **)a2) {
        YAML::Emitter::EmitEndSeq(a2);
      }
    }
  }
  if (*((int *)this + 14) >= 1)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "valueDictionary");
    YAML::Emitter::Write((uint64_t)a2, (const void **)__p);
    if (v17 < 0) {
      operator delete(__p[0]);
    }
    int v11 = *((_DWORD *)this + 14);
    if (v11 != 1)
    {
      if (**(unsigned char **)a2)
      {
        YAML::Emitter::EmitBeginSeq(a2);
        int v11 = *((_DWORD *)this + 14);
      }
      if (v11 < 1) {
        goto LABEL_48;
      }
    }
    for (int j = 0; j < v15; ++j)
    {
      int v13 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::FlowTest_KeyValueParameter>::TypeHandler>((uint64_t)this + 48, j);
      siri::intelligence::WriteFlowTest_KeyValueParameter(v13, a2, v14);
      int v15 = *((_DWORD *)this + 14);
    }
    if (v15 != 1)
    {
LABEL_48:
      if (**(unsigned char **)a2) {
        YAML::Emitter::EmitEndSeq(a2);
      }
    }
  }
  if (**(unsigned char **)a2) {
    YAML::Emitter::EmitEndMap(a2);
  }
}

void sub_239A2BE10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *YAML::Emitter::WriteStreamable<double>(uint64_t *a1, double a2)
{
  if (!*(unsigned char *)*a1) {
    return a1;
  }
  YAML::Emitter::PrepareNode((YAML::Emitter *)a1, 2u);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v11);
  *(void *)((char *)&v11[2] + *(void *)(v11[0] - 24)) = *(void *)(*a1 + 104);
  if (a2 == INFINITY)
  {
    uint64_t v4 = ".inf";
    uint64_t v5 = 4;
  }
  else
  {
    if (a2 != -INFINITY)
    {
      std::ostream::operator<<();
      goto LABEL_7;
    }
    uint64_t v4 = "-.inf";
    uint64_t v5 = 5;
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v12, (uint64_t)v4, v5);
LABEL_7:
  std::stringbuf::str();
  YAML::ostream_wrapper::write((std::vector<char> *)(a1 + 1), (const void **)&__p);
  if (v10 < 0) {
    operator delete(__p);
  }
  uint64_t v6 = *a1;
  YAML::EmitterState::StartedNode(*a1);
  YAML::SettingChanges::clear((uint64_t **)(v6 + 112));
  v11[0] = *MEMORY[0x263F8C2B8];
  uint64_t v7 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v11 + *(void *)(v11[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v12[0] = v7;
  v12[1] = MEMORY[0x263F8C318] + 16;
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23ECAAC10](&v14);
  return a1;
}

void sub_239A2C08C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::FlowTest_KeyValueParameter>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A2C17C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::FlowTest_Step>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A2C25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t *YAML::Emitter::WriteIntegralType<int>(uint64_t *a1)
{
  if (*(unsigned char *)*a1)
  {
    YAML::Emitter::PrepareNode((YAML::Emitter *)a1, 2u);
    std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v7);
    YAML::Emitter::PrepareIntegralStream(a1, (uint64_t)v7);
    std::ostream::operator<<();
    std::stringbuf::str();
    YAML::ostream_wrapper::write((std::vector<char> *)(a1 + 1), (const void **)&__p);
    if (v6 < 0) {
      operator delete(__p);
    }
    uint64_t v2 = *a1;
    YAML::EmitterState::StartedNode(*a1);
    YAML::SettingChanges::clear((uint64_t **)(v2 + 112));
    v7[0] = *MEMORY[0x263F8C2B8];
    uint64_t v3 = *(void *)(MEMORY[0x263F8C2B8] + 72);
    *(void *)((char *)v7 + *(void *)(v7[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
    std::string v7[2] = v3;
    v7[3] = MEMORY[0x263F8C318] + 16;
    if (v8 < 0) {
      operator delete((void *)v7[11]);
    }
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x23ECAAC10](&v9);
  }
  return a1;
}

void sub_239A2C448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::FlowTest_Test>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A2C538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void std::allocator<siri::intelligence::TestCase>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void **)(a2 + 128);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v3 = (void **)(a2 + 104);
  std::vector<protobuf::FlowTest_Step>::__destroy_vector::operator()[abi:ne180100](&v3);
  if (*(char *)(a2 + 95) < 0) {
    operator delete(*(void **)(a2 + 72));
  }
  if (*(char *)(a2 + 71) < 0) {
    operator delete(*(void **)(a2 + 48));
  }
  if (*(char *)(a2 + 47) < 0) {
    operator delete(*(void **)(a2 + 24));
  }
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
}

void std::allocator<siri::intelligence::TestParseError>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 47) < 0) {
    operator delete(*(void **)(a2 + 24));
  }
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t v3 = *(void **)a2;
    operator delete(v3);
  }
}

protobuf::FlowTest *_ZNSt3__115allocate_sharedB8ne180100IN8protobuf8FlowTestENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(protobuf::FlowTest **a1)
{
  uint64_t v2 = operator new(0x50uLL);
  v2[1] = 0;
  v2[2] = 0;
  *uint64_t v2 = &unk_26ED27480;
  __n128 result = protobuf::FlowTest::FlowTest((protobuf::FlowTest *)(v2 + 3));
  *a1 = result;
  a1[1] = (protobuf::FlowTest *)v2;
  return result;
}

void sub_239A2C68C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<protobuf::FlowTest>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26ED27480;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<protobuf::FlowTest>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26ED27480;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x23ECAACC0);
}

uint64_t std::__shared_ptr_emplace<protobuf::FlowTest>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::vector<siri::intelligence::ValidationResult>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 64;
        std::allocator<siri::intelligence::ValidationResult>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<siri::intelligence::ValidationResult>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 55) < 0) {
    operator delete(*(void **)(a2 + 32));
  }
  if (*(char *)(a2 + 31) < 0)
  {
    uint64_t v3 = *(void **)(a2 + 8);
    operator delete(v3);
  }
}

void std::vector<siri::intelligence::TestParseError>::__throw_length_error[abi:ne180100]()
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<siri::intelligence::TestParseError>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x555555555555556) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(48 * a2);
}

uint64_t std::__split_buffer<siri::intelligence::TestParseError>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(void *)(a1 + 16) = i - 48;
    std::allocator<siri::intelligence::TestParseError>::destroy[abi:ne180100](v4, i - 48);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::string::basic_string[abi:ne180100](uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (a2 > 0x16)
  {
    uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17) {
      uint64_t v4 = a2 | 7;
    }
    uint64_t v5 = v4 + 1;
    char v6 = operator new(v4 + 1);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 16) = v5 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 23) = a2;
  }
  return a1;
}

void std::vector<protobuf::FlowTest_Step>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      char v6 = v4 - 80;
      char v7 = v4 - 80;
      char v8 = v4 - 80;
      do
      {
        uint64_t v9 = *(void (***)(char *))v8;
        v8 -= 80;
        (*v9)(v7);
        v6 -= 80;
        BOOL v10 = v7 == v2;
        char v7 = v8;
      }
      while (!v10);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

__n128 std::allocator<siri::intelligence::TestCase>::construct[abi:ne180100]<siri::intelligence::TestCase,siri::intelligence::TestCase>(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v2;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  long long v3 = *(long long *)((char *)a2 + 24);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(_OWORD *)(a1 + 24) = v3;
  *((void *)a2 + 4) = 0;
  *((void *)a2 + 5) = 0;
  *((void *)a2 + 3) = 0;
  long long v4 = a2[3];
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(_OWORD *)(a1 + 48) = v4;
  *((void *)a2 + 7) = 0;
  *((void *)a2 + 8) = 0;
  *((void *)a2 + 6) = 0;
  long long v5 = *(long long *)((char *)a2 + 72);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(_OWORD *)(a1 + 72) = v5;
  *((void *)a2 + 9) = 0;
  *((void *)a2 + 10) = 0;
  *((void *)a2 + 11) = 0;
  uint64_t v6 = *((void *)a2 + 12);
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 96) = v6;
  *(void *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 104) = *(long long *)((char *)a2 + 104);
  *(void *)(a1 + 120) = *((void *)a2 + 15);
  *((void *)a2 + 13) = 0;
  *((void *)a2 + 14) = 0;
  *((void *)a2 + 15) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  __n128 result = (__n128)a2[8];
  *(__n128 *)(a1 + 128) = result;
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  *((void *)a2 + 16) = 0;
  *((void *)a2 + 17) = 0;
  *((void *)a2 + 18) = 0;
  return result;
}

void std::vector<siri::intelligence::TestCase>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  long long v5 = (long long *)*a1;
  long long v4 = (long long *)a1[1];
  uint64_t v6 = a2[1];
  while (v4 != v5)
  {
    v6 -= 152;
    long long v4 = (long long *)((char *)v4 - 152);
    std::allocator<siri::intelligence::TestCase>::construct[abi:ne180100]<siri::intelligence::TestCase,siri::intelligence::TestCase>(v6, v4);
  }
  a2[1] = v6;
  uint64_t v7 = *a1;
  *a1 = v6;
  a2[1] = v7;
  uint64_t v8 = a1[1];
  a1[1] = a2[2];
  a2[2] = v8;
  uint64_t v9 = a1[2];
  a1[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<siri::intelligence::TestCase>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x1AF286BCA1AF287) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(152 * a2);
}

void **std::__split_buffer<siri::intelligence::TestCase>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<siri::intelligence::TestCase>::clear[abi:ne180100](void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 152;
    std::allocator<siri::intelligence::TestCase>::destroy[abi:ne180100](v4, i - 152);
  }
}

_OWORD *std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string>(uint64_t **a1, const void **a2, uint64_t a3)
{
  long long v5 = (void **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v9, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    uint64_t v6 = operator new(0x38uLL);
    std::string v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    std::__tree<std::string>::__insert_node_at(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

std::string *std::vector<siri::intelligence::TestCase>::__init_with_size[abi:ne180100]<siri::intelligence::TestCase*,siri::intelligence::TestCase*>(std::string *result, const siri::intelligence::TestCase *a2, const siri::intelligence::TestCase *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<siri::intelligence::TestCase>::__vallocate[abi:ne180100](result, a4);
    __n128 result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::intelligence::TestCase>,siri::intelligence::TestCase*,siri::intelligence::TestCase*,siri::intelligence::TestCase*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::string *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::string::size_type)result;
  }
  return result;
}

void sub_239A2CD2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<siri::intelligence::TestCase>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

char *std::vector<siri::intelligence::TestCase>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0x1AF286BCA1AF287) {
    std::vector<siri::intelligence::TestParseError>::__throw_length_error[abi:ne180100]();
  }
  __n128 result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::intelligence::TestCase>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[152 * v4];
  return result;
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::intelligence::TestCase>,siri::intelligence::TestCase*,siri::intelligence::TestCase*,siri::intelligence::TestCase*>(uint64_t a1, const siri::intelligence::TestCase *a2, const siri::intelligence::TestCase *a3, std::string *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  int v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  std::string v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      siri::intelligence::TestCase::TestCase(v4, v6);
      uint64_t v6 = (const siri::intelligence::TestCase *)((char *)v6 + 152);
      uint64_t v4 = (std::string *)((char *)v11 + 152);
      int v11 = (std::string *)((char *)v11 + 152);
    }
    while (v6 != a3);
  }
  char v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<siri::intelligence::TestCase>,siri::intelligence::TestCase*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_239A2CE34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

std::string *siri::intelligence::TestCase::TestCase(std::string *this, const siri::intelligence::TestCase *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *(_OWORD *)a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  if (*((char *)a2 + 47) < 0)
  {
    std::string::__init_copy_ctor_external(this + 1, *((const std::string::value_type **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v5 = *(_OWORD *)((char *)a2 + 24);
    this[1].__r_.__value_.__r.__words[2] = *((void *)a2 + 5);
    *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = v5;
  }
  if (*((char *)a2 + 71) < 0)
  {
    std::string::__init_copy_ctor_external(this + 2, *((const std::string::value_type **)a2 + 6), *((void *)a2 + 7));
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 3);
    this[2].__r_.__value_.__r.__words[2] = *((void *)a2 + 8);
    *(_OWORD *)&this[2].__r_.__value_.__l.__data_ = v6;
  }
  if (*((char *)a2 + 95) < 0)
  {
    std::string::__init_copy_ctor_external(this + 3, *((const std::string::value_type **)a2 + 9), *((void *)a2 + 10));
  }
  else
  {
    long long v7 = *(_OWORD *)((char *)a2 + 72);
    this[3].__r_.__value_.__r.__words[2] = *((void *)a2 + 11);
    *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = v7;
  }
  std::string::size_type v8 = *((void *)a2 + 12);
  this[4].__r_.__value_.__l.__size_ = 0;
  this[4].__r_.__value_.__r.__words[0] = v8;
  this[4].__r_.__value_.__r.__words[2] = 0;
  this[5].__r_.__value_.__r.__words[0] = 0;
  std::vector<protobuf::FlowTest_Step>::__init_with_size[abi:ne180100]<protobuf::FlowTest_Step*,protobuf::FlowTest_Step*>(&this[4].__r_.__value_.__l.__size_, *((void *)a2 + 13), *((void *)a2 + 14), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)a2 + 14) - *((void *)a2 + 13)) >> 4));
  this[5].__r_.__value_.__l.__size_ = 0;
  this[5].__r_.__value_.__r.__words[2] = 0;
  this[6].__r_.__value_.__r.__words[0] = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>((std::string *)((char *)this + 128), *((long long **)a2 + 16), *((long long **)a2 + 17), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 17) - *((void *)a2 + 16)) >> 3));
  return this;
}

void sub_239A2CF9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (*(char *)(v10 + 71) < 0) {
    operator delete(*v12);
  }
  if (*(char *)(v10 + 47) < 0) {
    operator delete(*v11);
  }
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  _Unwind_Resume(exception_object);
}

void *std::vector<protobuf::FlowTest_Step>::__init_with_size[abi:ne180100]<protobuf::FlowTest_Step*,protobuf::FlowTest_Step*>(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    std::vector<protobuf::FlowTest_Step>::__vallocate[abi:ne180100](result, a4);
    __n128 result = (void *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<protobuf::FlowTest_Step>,protobuf::FlowTest_Step*,protobuf::FlowTest_Step*,protobuf::FlowTest_Step*>((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_239A2D07C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<protobuf::FlowTest_Step>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

char *std::vector<protobuf::FlowTest_Step>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0x333333333333334) {
    std::vector<siri::intelligence::TestParseError>::__throw_length_error[abi:ne180100]();
  }
  __n128 result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<protobuf::FlowTest_Step>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[80 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<protobuf::FlowTest_Step>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x333333333333334) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(80 * a2);
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<protobuf::FlowTest_Step>,protobuf::FlowTest_Step*,protobuf::FlowTest_Step*,protobuf::FlowTest_Step*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      protobuf::FlowTest_Step::FlowTest_Step((protobuf::FlowTest_Step *)(a4 + v7), (const protobuf::FlowTest_Step *)(a2 + v7));
      v7 += 80;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_239A2D198(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 80;
    do
    {
      (**(void (***)(void))(v4 + v2))();
      v2 -= 80;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

std::string *std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(std::string *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    std::vector<std::string>::__vallocate[abi:ne180100](result, a4);
    __n128 result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string*,std::string*,std::string*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::string *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::string::size_type)result;
  }
  return result;
}

void sub_239A2D244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

char *std::vector<std::string>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]();
  }
  __n128 result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string*,std::string*,std::string*>(uint64_t a1, long long *a2, long long *a3, std::string *this)
{
  uint64_t v4 = this;
  int v11 = this;
  uint64_t v12 = this;
  v9[0] = a1;
  v9[1] = &v11;
  std::string v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    long long v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)v6, *((void *)v6 + 1));
        uint64_t v4 = v12;
      }
      else
      {
        long long v7 = *v6;
        v4->__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
      }
      long long v6 = (long long *)((char *)v6 + 24);
      uint64_t v12 = ++v4;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v4;
}

void sub_239A2D364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 24;
  }
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<siri::intelligence::TestCase>,siri::intelligence::TestCase*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<siri::intelligence::TestCase>,siri::intelligence::TestCase*>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<siri::intelligence::TestCase>,siri::intelligence::TestCase*>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 152;
      std::allocator<siri::intelligence::TestCase>::destroy[abi:ne180100](v5, v3);
    }
    while (v3 != v4);
  }
}

void std::vector<siri::intelligence::TestCase>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 152;
        std::allocator<siri::intelligence::TestCase>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

std::string *std::vector<siri::intelligence::TestParseError>::__init_with_size[abi:ne180100]<siri::intelligence::TestParseError*,siri::intelligence::TestParseError*>(std::string *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    std::vector<siri::intelligence::TestParseError>::__vallocate[abi:ne180100](result, a4);
    __n128 result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::intelligence::TestParseError>,siri::intelligence::TestParseError*,siri::intelligence::TestParseError*,siri::intelligence::TestParseError*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::string *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::string::size_type)result;
  }
  return result;
}

void sub_239A2D584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<siri::intelligence::TestParseError>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

char *std::vector<siri::intelligence::TestParseError>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0x555555555555556) {
    std::vector<siri::intelligence::TestParseError>::__throw_length_error[abi:ne180100]();
  }
  __n128 result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::intelligence::TestParseError>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[48 * v4];
  return result;
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::intelligence::TestParseError>,siri::intelligence::TestParseError*,siri::intelligence::TestParseError*,siri::intelligence::TestParseError*>(uint64_t a1, long long *a2, long long *a3, std::string *this)
{
  uint64_t v4 = this;
  int v11 = this;
  uint64_t v12 = this;
  v9[0] = a1;
  v9[1] = &v11;
  std::string v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    long long v6 = a2;
    int v7 = a1;
    do
    {
      std::allocator<siri::intelligence::TestParseError>::construct[abi:ne180100]<siri::intelligence::TestParseError,siri::intelligence::TestParseError&>(v7, v4, v6);
      v6 += 3;
      uint64_t v4 = v12 + 2;
      v12 += 2;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<siri::intelligence::TestParseError>,siri::intelligence::TestParseError*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v4;
}

void sub_239A2D690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void std::allocator<siri::intelligence::TestParseError>::construct[abi:ne180100]<siri::intelligence::TestParseError,siri::intelligence::TestParseError&>(int a1, std::string *this, long long *a3)
{
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v5 = *a3;
    this->__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  long long v6 = this + 1;
  if (*((char *)a3 + 47) < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)a3 + 3), *((void *)a3 + 4));
  }
  else
  {
    long long v7 = *(long long *)((char *)a3 + 24);
    this[1].__r_.__value_.__r.__words[2] = *((void *)a3 + 5);
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
  }
}

void sub_239A2D71C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<siri::intelligence::TestParseError>,siri::intelligence::TestParseError*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<siri::intelligence::TestParseError>,siri::intelligence::TestParseError*>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<siri::intelligence::TestParseError>,siri::intelligence::TestParseError*>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 48;
      std::allocator<siri::intelligence::TestParseError>::destroy[abi:ne180100](v5, v3);
    }
    while (v3 != v4);
  }
}

void std::vector<siri::intelligence::TestParseError>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        std::allocator<siri::intelligence::TestParseError>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::vector<siri::intelligence::TestCase>::__push_back_slow_path<siri::intelligence::TestCase const&>(uint64_t *a1, const siri::intelligence::TestCase *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0x86BCA1AF286BCA1BLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x1AF286BCA1AF286) {
    std::vector<siri::intelligence::TestParseError>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x86BCA1AF286BCA1BLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0xD79435E50D7943) {
    unint64_t v9 = 0x1AF286BCA1AF286;
  }
  else {
    unint64_t v9 = v5;
  }
  char v17 = a1 + 2;
  if (v9) {
    char v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::intelligence::TestCase>>(v7, v9);
  }
  else {
    char v10 = 0;
  }
  char v13 = v10;
  uint64_t v14 = (std::string *)&v10[152 * v4];
  uint64_t v16 = &v10[152 * v9];
  siri::intelligence::TestCase::TestCase(v14, a2);
  int v15 = &v14[6].__r_.__value_.__s.__data_[8];
  std::vector<siri::intelligence::TestCase>::__swap_out_circular_buffer(a1, &v13);
  uint64_t v11 = a1[1];
  std::__split_buffer<siri::intelligence::TestCase>::~__split_buffer(&v13);
  return v11;
}

void sub_239A2D968(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<siri::intelligence::TestCase>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

siri::intelligence::VariableString *siri::intelligence::VariableString::VariableString(siri::intelligence::VariableString *this)
{
  std::string::basic_string[abi:ne180100]<0>(&v4, (char *)&str);
  std::string::basic_string[abi:ne180100]<0>(&__p, siri::intelligence::TYPE_STRING[0]);
  siri::intelligence::Variable::Variable((uint64_t)this, &v4, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
  *(void *)this = &unk_26ED274D0;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 9) = 0;
  return this;
}

void sub_239A2DA20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void *siri::intelligence::VariableString::VariableString(void *a1, const std::string *a2)
{
  std::string::basic_string[abi:ne180100]<0>(&__p, siri::intelligence::TYPE_STRING[0]);
  siri::intelligence::Variable::Variable((uint64_t)a1, a2, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *a1 = &unk_26ED274D0;
  a1[10] = 0;
  a1[11] = 0;
  a1[9] = 0;
  return a1;
}

void sub_239A2DAE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *siri::intelligence::VariableString::VariableString(std::string *a1, const std::string *a2, const std::string *a3)
{
  std::string::basic_string[abi:ne180100]<0>(&__p, siri::intelligence::TYPE_STRING[0]);
  siri::intelligence::Variable::Variable((uint64_t)a1, a2, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  a1->__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26ED274D0;
  a1[3].__r_.__value_.__r.__words[0] = 0;
  a1[3].__r_.__value_.__l.__size_ = 0;
  a1[3].__r_.__value_.__r.__words[2] = 0;
  std::string::operator=(a1 + 3, a3);
  a1[2].__r_.__value_.__s.__data_[16] = 1;
  return a1;
}

void sub_239A2DBAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (*(char *)(v15 + 95) < 0) {
    operator delete(*v16);
  }
  siri::intelligence::Variable::~Variable((void **)v15);
  _Unwind_Resume(a1);
}

std::string *siri::intelligence::VariableString::SetValue(std::string *a1, const std::string *a2)
{
  __n128 result = std::string::operator=(a1 + 3, a2);
  a1[2].__r_.__value_.__s.__data_[16] = 1;
  return result;
}

void siri::intelligence::VariableString::GetValue(siri::intelligence::VariableString *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 95) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 9), *((void *)this + 10));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 72);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 11);
  }
}

uint64_t siri::intelligence::VariableString::SetValueFromString(uint64_t a1, uint64_t a2)
{
  siri::intelligence::StringUnescapeQuotes(a2, &v5);
  uint64_t v3 = (void **)(a1 + 72);
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*v3);
  }
  *(_OWORD *)uint64_t v3 = *(_OWORD *)&v5.__r_.__value_.__l.__data_;
  *(void *)(a1 + 88) = *((void *)&v5.__r_.__value_.__l + 2);
  *(unsigned char *)(a1 + 64) = 1;
  return 1;
}

uint64_t siri::intelligence::VariableString::SetUndefined(siri::intelligence::VariableString *this)
{
  uint64_t result = MEMORY[0x23ECAA8E0]((char *)this + 72, &str);
  *((unsigned char *)this + 64) = 0;
  return result;
}

void siri::intelligence::VariableString::SetEmpty(std::string *this)
{
  std::string::basic_string[abi:ne180100]<0>(&__str, (char *)&str);
  std::string::operator=(this + 3, &__str);
  this[2].__r_.__value_.__s.__data_[16] = 1;
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_239A2DD3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL siri::intelligence::VariableString::IsEmpty(siri::intelligence::VariableString *this)
{
  if (*((char *)this + 95) < 0)
  {
    if (*((void *)this + 10)) {
      return *((unsigned char *)this + 64) == 0;
    }
  }
  else if (*((unsigned char *)this + 95))
  {
    return *((unsigned char *)this + 64) == 0;
  }
  return 1;
}

void siri::intelligence::VariableString::AsString(siri::intelligence::VariableString *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 95) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 9), *((void *)this + 10));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 72);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 11);
  }
}

void siri::intelligence::VariableString::AsQuotedString(siri::intelligence::VariableString *this@<X0>, std::string *a2@<X8>)
{
  siri::intelligence::StringEscapeQuotes((uint64_t)this + 72, &v6);
  uint64_t v3 = std::string::insert(&v6, 0, "\"");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v7.__r_.__value_.__r.__words[2] = v3->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v7.__r_.__value_.__l.__data_ = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  std::string v5 = std::string::append(&v7, "\"");
  *a2 = *v5;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
}

void sub_239A2DE5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::VariableString::AsNumber(siri::intelligence::VariableString *this)
{
}

uint64_t siri::intelligence::VariableString::AsBoolean(const std::string *this)
{
  uint64_t v1 = this + 3;
  if (siri::intelligence::StringIsANumber(this + 3))
  {
    siri::intelligence::StringToDouble((uint64_t)v1, 0);
    return v2 != 0.0;
  }
  else
  {
    return siri::intelligence::StringToBool(v1, 0);
  }
}

double siri::intelligence::VariableString::GetExpanded@<D0>(siri::intelligence::VariableString *this@<X0>, siri::intelligence::Memory *a2@<X1>, _OWORD *a3@<X8>)
{
  _ZNSt3__115allocate_sharedB8ne180100IN4siri12intelligence14VariableStringENS_9allocatorIS3_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(&v11);
  std::string v6 = (_OWORD *)((char *)this + 8);
  if (a2)
  {
    siri::intelligence::Memory::ExpandVariables((uint64_t)a2, (uint64_t)v6, 0, (uint64_t)&__p);
  }
  else if (*((char *)this + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)this + 1), *((void *)this + 2));
  }
  else
  {
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *v6;
    __p.__r_.__value_.__r.__words[2] = *((void *)this + 3);
  }
  std::string::operator=((std::string *)(v11 + 8), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::string::operator=((std::string *)(v11 + 32), (const std::string *)((char *)this + 32));
  uint64_t v7 = v11;
  *(void *)(v11 + 56) = *((void *)this + 7);
  *(unsigned char *)(v7 + 64) = *((unsigned char *)this + 64);
  unint64_t v8 = (_OWORD *)((char *)this + 72);
  if (a2)
  {
    siri::intelligence::Memory::ExpandVariables((uint64_t)a2, (uint64_t)v8, 0, (uint64_t)&__p);
  }
  else if (*((char *)this + 95) < 0)
  {
    std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)this + 9), *((void *)this + 10));
  }
  else
  {
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *v8;
    __p.__r_.__value_.__r.__words[2] = *((void *)this + 11);
  }
  std::string::operator=((std::string *)(v11 + 72), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  double result = *(double *)&v11;
  *a3 = v11;
  return result;
}

void sub_239A2E038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  _Unwind_Resume(exception_object);
}

void *siri::intelligence::VariableString::GetExpandedType@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, siri::intelligence::TYPE_STRING[0]);
}

void siri::intelligence::VariableString::~VariableString(void **this)
{
  *this = &unk_26ED274D0;
  if (*((char *)this + 95) < 0) {
    operator delete(this[9]);
  }

  siri::intelligence::Variable::~Variable(this);
}

{
  uint64_t vars8;

  *this = &unk_26ED274D0;
  if (*((char *)this + 95) < 0) {
    operator delete(this[9]);
  }
  siri::intelligence::Variable::~Variable(this);

  JUMPOUT(0x23ECAACC0);
}

void *_ZNSt3__115allocate_sharedB8ne180100IN4siri12intelligence14VariableStringENS_9allocatorIS3_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_@<X0>(void *a1@<X8>)
{
  double v2 = operator new(0x78uLL);
  double result = _ZNSt3__120__shared_ptr_emplaceIN4siri12intelligence14VariableStringENS_9allocatorIS3_EEEC2B8ne180100IJES5_Li0EEES5_DpOT_(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_239A2E194(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *_ZNSt3__120__shared_ptr_emplaceIN4siri12intelligence14VariableStringENS_9allocatorIS3_EEEC2B8ne180100IJES5_Li0EEES5_DpOT_(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26ED27560;
  siri::intelligence::VariableString::VariableString((siri::intelligence::VariableString *)(a1 + 3));
  return a1;
}

void sub_239A2E1F0(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<siri::intelligence::VariableString>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26ED27560;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<siri::intelligence::VariableString>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26ED27560;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x23ECAACC0);
}

uint64_t std::__shared_ptr_emplace<siri::intelligence::VariableString>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void siri::intelligence::Escaping::Escape(uint64_t a1@<X0>, uint64_t *a2@<X1>, std::string *a3@<X8>)
{
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v17, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v17 = *(std::string *)a1;
  }
  std::string::basic_string[abi:ne180100]<0>(v14, "&");
  std::string::basic_string[abi:ne180100]<0>(__p, "&amp;");
  siri::intelligence::StringReplace((uint64_t)&v17, (char *)v14, (uint64_t)__p, 0, &v16);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  std::string v17 = v16;
  *((unsigned char *)&v16.__r_.__value_.__s + 23) = 0;
  v16.__r_.__value_.__s.__data_[0] = 0;
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  uint64_t v8 = *a2;
  std::string v6 = a2 + 1;
  uint64_t v7 = v8;
  if ((void *)v8 == v6)
  {
LABEL_20:
    *a3 = v17;
  }
  else
  {
    while ((siri::intelligence::isValidSequence(v7, v5) & 1) != 0)
    {
      siri::intelligence::StringReplace((uint64_t)&v17, (char *)(v7 + 32), v7 + 56, 0, &v16);
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v17.__r_.__value_.__l.__data_);
      }
      std::string v17 = v16;
      unint64_t v9 = *(void **)(v7 + 8);
      if (v9)
      {
        do
        {
          char v10 = v9;
          unint64_t v9 = (void *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          char v10 = *(void **)(v7 + 16);
          BOOL v11 = *v10 == v7;
          uint64_t v7 = (uint64_t)v10;
        }
        while (!v11);
      }
      uint64_t v7 = (uint64_t)v10;
      if (v10 == v6) {
        goto LABEL_20;
      }
    }
    std::string::basic_string[abi:ne180100]<0>(a3, "");
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239A2E438(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (*(char *)(v21 - 41) < 0) {
    operator delete(*(void **)(v21 - 64));
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::intelligence::isValidSequence(uint64_t a1, const char *a2)
{
  double v2 = (void *)(a1 + 56);
  if (*(char *)(a1 + 79) < 0)
  {
    if (!*(void *)(a1 + 64))
    {
LABEL_13:
      siri::intelligence::Log::Error((siri::intelligence::Log *)"Misuse of Escaping::Escape: all sequences must start with '&' and '&' is reserved", a2);
      return 0;
    }
    double v2 = (void *)*v2;
  }
  else if (!*(unsigned char *)(a1 + 79))
  {
    goto LABEL_13;
  }
  if (*(unsigned char *)v2 != 38) {
    goto LABEL_13;
  }
  uint64_t v3 = (void *)(a1 + 32);
  int v4 = *(char *)(a1 + 55);
  if (v4 < 0)
  {
    if (*(void *)(a1 + 40) != 1) {
      return 1;
    }
    uint64_t v3 = (void *)*v3;
  }
  else if (v4 != 1)
  {
    return 1;
  }
  if (*(unsigned char *)v3 == 38) {
    goto LABEL_13;
  }
  return 1;
}

void siri::intelligence::Escaping::Unescape(uint64_t a1@<X0>, const char *a2@<X1>, std::string *a3@<X8>)
{
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v16, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v16 = *(std::string *)a1;
  }
  uint64_t v7 = *(void *)a2;
  std::string v5 = a2 + 8;
  uint64_t v6 = v7;
  if ((const char *)v7 == v5)
  {
LABEL_14:
    std::string::basic_string[abi:ne180100]<0>(v13, "&amp;");
    std::string::basic_string[abi:ne180100]<0>(__p, "&");
    siri::intelligence::StringReplace((uint64_t)&v16, (char *)v13, (uint64_t)__p, 0, &v15);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v16.__r_.__value_.__l.__data_);
    }
    std::string v16 = v15;
    *((unsigned char *)&v15.__r_.__value_.__s + 23) = 0;
    v15.__r_.__value_.__s.__data_[0] = 0;
    if (v12 < 0) {
      operator delete(__p[0]);
    }
    if (v14 < 0) {
      operator delete(v13[0]);
    }
    *a3 = v16;
  }
  else
  {
    while ((siri::intelligence::isValidSequence(v6, a2) & 1) != 0)
    {
      siri::intelligence::StringReplace((uint64_t)&v16, (char *)(v6 + 56), v6 + 32, 0, &v15);
      if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v16.__r_.__value_.__l.__data_);
      }
      std::string v16 = v15;
      uint64_t v8 = *(const char **)(v6 + 8);
      if (v8)
      {
        do
        {
          unint64_t v9 = v8;
          uint64_t v8 = *(const char **)v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          unint64_t v9 = *(const char **)(v6 + 16);
          BOOL v10 = *(void *)v9 == v6;
          uint64_t v6 = (uint64_t)v9;
        }
        while (!v10);
      }
      uint64_t v6 = (uint64_t)v9;
      if (v9 == v5) {
        goto LABEL_14;
      }
    }
    std::string::basic_string[abi:ne180100]<0>(a3, "");
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v16.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239A2E6B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (*(char *)(v21 - 41) < 0) {
    operator delete(*(void **)(v21 - 64));
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::Escaping::EscapeVector(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_3, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_3))
  {
    qword_26AD866F8 = 0;
    qword_26AD866F0 = 0;
    qword_26AD866E8 = (uint64_t)&qword_26AD866F0;
    __cxa_atexit((void (*)(void *))std::map<std::string,std::string>::~map[abi:ne180100], &qword_26AD866E8, &dword_239A02000);
    __cxa_guard_release(&_MergedGlobals_3);
  }
  if (!qword_26AD866F8)
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, ",");
    v10.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
    int v4 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)&qword_26AD866E8, (const void **)&__p.__begin_, (uint64_t)&std::piecewise_construct, &v10);
    MEMORY[0x23ECAA8E0]((char *)v4 + 56, "&comma;");
    if (SHIBYTE(__p.__end_cap_.__value_) < 0) {
      operator delete(__p.__begin_);
    }
  }
  std::vector<std::string>::vector(&__p, 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3));
  uint64_t v5 = *a1;
  if (a1[1] != *a1)
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    do
    {
      siri::intelligence::Escaping::Escape(v5 + v6 * 24, &qword_26AD866E8, &v10);
      uint64_t v8 = &__p.__begin_[v6];
      if (SHIBYTE(__p.__begin_[v6].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v8->__r_.__value_.__l.__data_);
      }
      long long v9 = *(_OWORD *)&v10.__r_.__value_.__l.__data_;
      v8->__r_.__value_.__r.__words[2] = v10.__r_.__value_.__r.__words[2];
      *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v9;
      ++v7;
      uint64_t v5 = *a1;
      ++v6;
    }
    while (v7 < 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3));
  }
  std::string::basic_string[abi:ne180100]<0>(&v10, ",");
  siri::intelligence::StringJoin((long long **)&__p, (uint64_t)&v10, a2);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  v10.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v10);
}

void sub_239A2E8E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::map<std::string,std::string>::~map[abi:ne180100](uint64_t a1)
{
  return a1;
}

void **std::vector<std::string>::~vector[abi:ne180100](void **a1)
{
  uint64_t v3 = a1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v3);
  return a1;
}

__n128 siri::intelligence::Escaping::UnescapeVector@<Q0>(unsigned __int8 *a1@<X0>, std::vector<std::string> *a2@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD866B8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD866B8))
  {
    qword_26AD86710 = 0;
    qword_26AD86708 = 0;
    qword_26AD86700 = (uint64_t)&qword_26AD86708;
    __cxa_atexit((void (*)(void *))std::map<std::string,std::string>::~map[abi:ne180100], &qword_26AD86700, &dword_239A02000);
    __cxa_guard_release(&qword_26AD866B8);
  }
  if (!qword_26AD86710)
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, ",");
    p_p = &__p;
    int v4 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)&qword_26AD86700, (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&std::piecewise_construct, (_OWORD **)&p_p);
    MEMORY[0x23ECAA8E0]((char *)v4 + 56, "&comma;");
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  memset(&__p, 0, sizeof(__p));
  siri::intelligence::StringSplit(a1, ",", (uint64_t *)&__p, a2);
  p_p = &__p;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
  begiuint64_t n = a2->__begin_;
  if (a2->__end_ != a2->__begin_)
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0;
    do
    {
      siri::intelligence::Escaping::Unescape((uint64_t)&begin[v7], (const char *)&qword_26AD86700, &__p);
      long long v9 = &a2->__begin_[v7];
      if (SHIBYTE(v9->__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v9->__r_.__value_.__l.__data_);
      }
      __n128 result = *(__n128 *)&__p.__r_.__value_.__l.__data_;
      v9->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
      *(__n128 *)&v9->__r_.__value_.__l.__data_ = result;
      ++v8;
      begiuint64_t n = a2->__begin_;
      ++v7;
    }
    while (v8 < 0xAAAAAAAAAAAAAAABLL * (((char *)a2->__end_ - (char *)a2->__begin_) >> 3));
  }
  return result;
}

void sub_239A2EB48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::Escaping::EscapeMap(void *a1@<X0>, uint64_t a2@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD866C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD866C0))
  {
    qword_26AD86728 = 0;
    qword_26AD86720 = 0;
    qword_26AD86718 = (uint64_t)&qword_26AD86720;
    __cxa_atexit((void (*)(void *))std::map<std::string,std::string>::~map[abi:ne180100], &qword_26AD86718, &dword_239A02000);
    __cxa_guard_release(&qword_26AD866C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD866C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD866C8))
  {
    qword_26AD86740 = 0;
    qword_26AD86738 = 0;
    qword_26AD86730 = (uint64_t)&qword_26AD86738;
    __cxa_atexit((void (*)(void *))std::map<std::string,std::string>::~map[abi:ne180100], &qword_26AD86730, &dword_239A02000);
    __cxa_guard_release(&qword_26AD866C8);
  }
  if (!qword_26AD86728)
  {
    std::string::basic_string[abi:ne180100]<0>(&__v, "=");
    v31.__begin_ = (std::vector<std::string>::pointer)&__v;
    uint64_t v3 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)&qword_26AD86718, (const void **)&__v.__first_, (uint64_t)&std::piecewise_construct, &v31);
    MEMORY[0x23ECAA8E0]((char *)v3 + 56, "&equals;");
    if (SHIBYTE(__v.__end_) < 0) {
      operator delete(__v.__first_);
    }
    std::string::basic_string[abi:ne180100]<0>(&__v, ";");
    v31.__begin_ = (std::vector<std::string>::pointer)&__v;
    int v4 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)&qword_26AD86730, (const void **)&__v.__first_, (uint64_t)&std::piecewise_construct, &v31);
    MEMORY[0x23ECAA8E0]((char *)v4 + 56, "&semi;");
    if (SHIBYTE(__v.__end_) < 0) {
      operator delete(__v.__first_);
    }
  }
  memset(&v31, 0, sizeof(v31));
  uint64_t v7 = (void *)*a1;
  uint64_t v5 = a1 + 1;
  uint64_t v6 = v7;
  if (v7 != v5)
  {
    do
    {
      siri::intelligence::Escaping::Escape((uint64_t)(v6 + 4), &qword_26AD86718, &v27);
      unint64_t v8 = std::string::append(&v27, "=");
      long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
      v28.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v9;
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      int v10 = *((char *)v6 + 79);
      if (v10 >= 0) {
        BOOL v11 = (const std::string::value_type *)(v6 + 7);
      }
      else {
        BOOL v11 = (const std::string::value_type *)v6[7];
      }
      if (v10 >= 0) {
        std::string::size_type v12 = *((unsigned __int8 *)v6 + 79);
      }
      else {
        std::string::size_type v12 = v6[8];
      }
      char v13 = std::string::append(&v28, v11, v12);
      std::string v29 = *v13;
      v13->__r_.__value_.__l.__size_ = 0;
      v13->__r_.__value_.__r.__words[2] = 0;
      v13->__r_.__value_.__r.__words[0] = 0;
      siri::intelligence::Escaping::Escape((uint64_t)&v29, &qword_26AD86730, &__p);
      std::vector<std::string>::pointer end = v31.__end_;
      if (v31.__end_ >= v31.__end_cap_.__value_)
      {
        unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * (((char *)v31.__end_ - (char *)v31.__begin_) >> 3);
        unint64_t v17 = v16 + 1;
        if (v16 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]();
        }
        if (0x5555555555555556 * (((char *)v31.__end_cap_.__value_ - (char *)v31.__begin_) >> 3) > v17) {
          unint64_t v17 = 0x5555555555555556 * (((char *)v31.__end_cap_.__value_ - (char *)v31.__begin_) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * (((char *)v31.__end_cap_.__value_ - (char *)v31.__begin_) >> 3) >= 0x555555555555555) {
          unint64_t v18 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v18 = v17;
        }
        __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v31.__end_cap_;
        if (v18) {
          uint64_t v19 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)&v31.__end_cap_, v18);
        }
        else {
          uint64_t v19 = 0;
        }
        uint64_t v20 = v19 + v16;
        __v.__first_ = v19;
        __v.__begin_ = v20;
        __v.__end_cap_.__value_ = &v19[v18];
        long long v21 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        v20->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
        *(_OWORD *)&v20->__r_.__value_.__l.__data_ = v21;
        memset(&__p, 0, sizeof(__p));
        __v.__end_ = v20 + 1;
        std::vector<std::string>::__swap_out_circular_buffer(&v31, &__v);
        uint64_t v22 = v31.__end_;
        std::__split_buffer<std::string>::~__split_buffer(&__v);
        v31.__end_ = v22;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        long long v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        v31.__end_->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
        *(_OWORD *)&end->__r_.__value_.__l.__data_ = v15;
        memset(&__p, 0, sizeof(__p));
        v31.__end_ = end + 1;
      }
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v29.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v28.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v27.__r_.__value_.__l.__data_);
      }
      uint64_t v23 = (void *)v6[1];
      if (v23)
      {
        do
        {
          int v24 = v23;
          uint64_t v23 = (void *)*v23;
        }
        while (v23);
      }
      else
      {
        do
        {
          int v24 = (void *)v6[2];
          BOOL v25 = *v24 == (void)v6;
          uint64_t v6 = v24;
        }
        while (!v25);
      }
      uint64_t v6 = v24;
    }
    while (v24 != v5);
  }
  std::string::basic_string[abi:ne180100]<0>(&__v, ";");
  siri::intelligence::StringJoin((long long **)&v31, (uint64_t)&__v, a2);
  if (SHIBYTE(__v.__end_) < 0) {
    operator delete(__v.__first_);
  }
  __v.__first_ = (std::__split_buffer<std::string>::pointer)&v31;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__v);
}

void sub_239A2EFAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36)
{
  if (*(char *)(v36 - 105) < 0) {
    operator delete(*(void **)(v36 - 128));
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::Escaping::UnescapeMap(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD866D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD866D0))
  {
    qword_26AD86758 = 0;
    qword_26AD86750 = 0;
    qword_26AD86748 = (uint64_t)&qword_26AD86750;
    __cxa_atexit((void (*)(void *))std::map<std::string,std::string>::~map[abi:ne180100], &qword_26AD86748, &dword_239A02000);
    __cxa_guard_release(&qword_26AD866D0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD866D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD866D8))
  {
    qword_26AD86770 = 0;
    qword_26AD86768 = 0;
    qword_26AD86760 = (uint64_t)&qword_26AD86768;
    __cxa_atexit((void (*)(void *))std::map<std::string,std::string>::~map[abi:ne180100], &qword_26AD86760, &dword_239A02000);
    __cxa_guard_release(&qword_26AD866D8);
  }
  if (!qword_26AD86758)
  {
    std::string::basic_string[abi:ne180100]<0>(&__v, "=");
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&__v;
    int v4 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)&qword_26AD86748, (const void **)&__v.__first_, (uint64_t)&std::piecewise_construct, &__p);
    MEMORY[0x23ECAA8E0]((char *)v4 + 56, "&equals;");
    if (SHIBYTE(__v.__end_) < 0) {
      operator delete(__v.__first_);
    }
    std::string::basic_string[abi:ne180100]<0>(&__v, ";");
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&__v;
    uint64_t v5 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)&qword_26AD86760, (const void **)&__v.__first_, (uint64_t)&std::piecewise_construct, &__p);
    MEMORY[0x23ECAA8E0]((char *)v5 + 56, "&semi;");
    if (SHIBYTE(__v.__end_) < 0) {
      operator delete(__v.__first_);
    }
  }
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)a2 = a2 + 8;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD866E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD866E0))
  {
    qword_26AD86780 = 0;
    qword_26AD86788 = 0;
    qword_26AD86778 = 0;
    __cxa_atexit((void (*)(void *))std::vector<std::string>::~vector[abi:ne180100], &qword_26AD86778, &dword_239A02000);
    __cxa_guard_release(&qword_26AD866E0);
  }
  if (qword_26AD86778 == qword_26AD86780)
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "&amp;");
    uint64_t v6 = (_OWORD *)qword_26AD86780;
    if ((unint64_t)qword_26AD86780 >= qword_26AD86788)
    {
      unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((qword_26AD86780 - qword_26AD86778) >> 3);
      unint64_t v9 = v8 + 1;
      if (v8 + 1 > 0xAAAAAAAAAAAAAAALL) {
        std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]();
      }
      if (0x5555555555555556 * ((qword_26AD86788 - qword_26AD86778) >> 3) > v9) {
        unint64_t v9 = 0x5555555555555556 * ((qword_26AD86788 - qword_26AD86778) >> 3);
      }
      if (0xAAAAAAAAAAAAAAABLL * ((qword_26AD86788 - qword_26AD86778) >> 3) >= 0x555555555555555) {
        unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v10 = v9;
      }
      __v.__end_cap_.__value_ = (std::allocator<std::string> *)&qword_26AD86788;
      if (v10) {
        BOOL v11 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)&qword_26AD86788, v10);
      }
      else {
        BOOL v11 = 0;
      }
      std::string::size_type v12 = v11 + v8;
      __v.__first_ = v11;
      __v.__begin_ = v12;
      __v.__end_cap_.__value_ = &v11[v10];
      long long v13 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      v12->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
      *(_OWORD *)&v12->__r_.__value_.__l.__data_ = v13;
      memset(&__p, 0, sizeof(__p));
      __v.__end_ = v12 + 1;
      std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)&qword_26AD86778, &__v);
      uint64_t v14 = qword_26AD86780;
      std::__split_buffer<std::string>::~__split_buffer(&__v);
      qword_26AD86780 = v14;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      long long v7 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      *(void *)(qword_26AD86780 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
      _OWORD *v6 = v7;
      qword_26AD86780 = (uint64_t)v6 + 24;
    }
    std::string::basic_string[abi:ne180100]<0>(&__p, "&equals;");
    long long v15 = (_OWORD *)qword_26AD86780;
    if ((unint64_t)qword_26AD86780 >= qword_26AD86788)
    {
      unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((qword_26AD86780 - qword_26AD86778) >> 3);
      unint64_t v18 = v17 + 1;
      if (v17 + 1 > 0xAAAAAAAAAAAAAAALL) {
        std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]();
      }
      if (0x5555555555555556 * ((qword_26AD86788 - qword_26AD86778) >> 3) > v18) {
        unint64_t v18 = 0x5555555555555556 * ((qword_26AD86788 - qword_26AD86778) >> 3);
      }
      if (0xAAAAAAAAAAAAAAABLL * ((qword_26AD86788 - qword_26AD86778) >> 3) >= 0x555555555555555) {
        unint64_t v19 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v19 = v18;
      }
      __v.__end_cap_.__value_ = (std::allocator<std::string> *)&qword_26AD86788;
      if (v19) {
        uint64_t v20 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)&qword_26AD86788, v19);
      }
      else {
        uint64_t v20 = 0;
      }
      long long v21 = v20 + v17;
      __v.__first_ = v20;
      __v.__begin_ = v21;
      __v.__end_cap_.__value_ = &v20[v19];
      long long v22 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      v21->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
      *(_OWORD *)&v21->__r_.__value_.__l.__data_ = v22;
      memset(&__p, 0, sizeof(__p));
      __v.__end_ = v21 + 1;
      std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)&qword_26AD86778, &__v);
      uint64_t v23 = qword_26AD86780;
      std::__split_buffer<std::string>::~__split_buffer(&__v);
      qword_26AD86780 = v23;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      long long v16 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      *(void *)(qword_26AD86780 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
      _OWORD *v15 = v16;
      qword_26AD86780 = (uint64_t)v15 + 24;
    }
    std::string::basic_string[abi:ne180100]<0>(&__p, "&semi;");
    int v24 = (_OWORD *)qword_26AD86780;
    if ((unint64_t)qword_26AD86780 >= qword_26AD86788)
    {
      unint64_t v26 = 0xAAAAAAAAAAAAAAABLL * ((qword_26AD86780 - qword_26AD86778) >> 3);
      unint64_t v27 = v26 + 1;
      if (v26 + 1 > 0xAAAAAAAAAAAAAAALL) {
        std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]();
      }
      if (0x5555555555555556 * ((qword_26AD86788 - qword_26AD86778) >> 3) > v27) {
        unint64_t v27 = 0x5555555555555556 * ((qword_26AD86788 - qword_26AD86778) >> 3);
      }
      if (0xAAAAAAAAAAAAAAABLL * ((qword_26AD86788 - qword_26AD86778) >> 3) >= 0x555555555555555) {
        unint64_t v28 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v28 = v27;
      }
      __v.__end_cap_.__value_ = (std::allocator<std::string> *)&qword_26AD86788;
      if (v28) {
        std::string v29 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)&qword_26AD86788, v28);
      }
      else {
        std::string v29 = 0;
      }
      uint64_t v30 = v29 + v26;
      __v.__first_ = v29;
      __v.__begin_ = v30;
      __v.__end_cap_.__value_ = &v29[v28];
      long long v31 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      v30->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
      *(_OWORD *)&v30->__r_.__value_.__l.__data_ = v31;
      memset(&__p, 0, sizeof(__p));
      __v.__end_ = v30 + 1;
      std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)&qword_26AD86778, &__v);
      uint64_t v32 = qword_26AD86780;
      std::__split_buffer<std::string>::~__split_buffer(&__v);
      qword_26AD86780 = v32;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      long long v25 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      *(void *)(qword_26AD86780 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
      *int v24 = v25;
      qword_26AD86780 = (uint64_t)v24 + 24;
    }
  }
  siri::intelligence::StringSplit(a1, ";", &qword_26AD86778, (std::vector<std::string> *)&__v);
  std::__split_buffer<std::string>::pointer first = __v.__first_;
  if (__v.__begin_ != __v.__first_)
  {
    uint64_t v34 = 0;
    unint64_t v35 = 0;
    while (1)
    {
      memset(&__p, 0, sizeof(__p));
      memset(&v45, 0, sizeof(v45));
      siri::intelligence::Escaping::Unescape((uint64_t)&first[v34], (const char *)&qword_26AD86760, &v44);
      memset(&v42, 0, sizeof(v42));
      siri::intelligence::StringSplit((unsigned __int8 *)&v44, "=", (uint64_t *)&v42, &__str);
      v41.__r_.__value_.__r.__words[0] = (std::string::size_type)&v42;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v41);
      if (__str.__begin_ != __str.__end_) {
        break;
      }
LABEL_66:
      v42.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v42);
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v44.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v45.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      ++v35;
      std::__split_buffer<std::string>::pointer first = __v.__first_;
      ++v34;
      if (v35 >= 0xAAAAAAAAAAAAAAABLL * (((char *)__v.__begin_ - (char *)__v.__first_) >> 3)) {
        goto LABEL_73;
      }
    }
    unint64_t v36 = 0xAAAAAAAAAAAAAAABLL * (((char *)__str.__end_ - (char *)__str.__begin_) >> 3);
    if (v36 == 2)
    {
      std::string::operator=(&__p, __str.__begin_);
      begiuint64_t n = __str.__begin_ + 1;
    }
    else
    {
      if (v36 != 1)
      {
        std::string::operator=(&__p, __str.__begin_);
        memset(&v41, 0, sizeof(v41));
        std::vector<std::string>::__init_with_size[abi:ne180100]<std::__wrap_iter<std::string*>,std::__wrap_iter<std::string*>>(&v41, (long long *)&__str.__begin_[1], (long long *)__str.__end_, 0xAAAAAAAAAAAAAAABLL * (((char *)__str.__end_ - (char *)&__str.__begin_[1]) >> 3));
        std::string::basic_string[abi:ne180100]<0>(v39, "=");
        siri::intelligence::StringJoin((long long **)&v41, (uint64_t)v39, (uint64_t)&v42);
        if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v45.__r_.__value_.__l.__data_);
        }
        std::string v45 = v42;
        *((unsigned char *)&v42.__r_.__value_.__s + 23) = 0;
        v42.__r_.__value_.__s.__data_[0] = 0;
        if (v40 < 0) {
          operator delete(v39[0]);
        }
        v39[0] = &v41;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)v39);
        goto LABEL_64;
      }
      if (*std::string::at(&v44, 0) != 61)
      {
        std::string::operator=(&__p, __str.__begin_);
        MEMORY[0x23ECAA8E0](&v45, "");
LABEL_64:
        siri::intelligence::Escaping::Unescape((uint64_t)&__p, (const char *)&qword_26AD86748, &v42);
        v41.__r_.__value_.__r.__words[0] = (std::string::size_type)&v42;
        uint64_t v38 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)a2, (const void **)&v42.__r_.__value_.__l.__data_, (uint64_t)&std::piecewise_construct, &v41);
        std::string::operator=((std::string *)((char *)v38 + 56), &v45);
        if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v42.__r_.__value_.__l.__data_);
        }
        goto LABEL_66;
      }
      MEMORY[0x23ECAA8E0](&__p, "");
      begiuint64_t n = __str.__begin_;
    }
    std::string::operator=(&v45, begin);
    goto LABEL_64;
  }
LABEL_73:
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&__v;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
}

void sub_239A2F8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  std::__split_buffer<std::string>::~__split_buffer((std::__split_buffer<std::string> *)(v47 - 136));
  if (a46 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v46, *(void **)(v46 + 8));
  _Unwind_Resume(a1);
}

_OWORD *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(uint64_t **a1, const void **a2, uint64_t a3, _OWORD **a4)
{
  uint64_t v6 = (void **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v14, a2);
  long long v7 = *v6;
  if (!*v6)
  {
    unint64_t v8 = (uint64_t **)v6;
    long long v7 = operator new(0x50uLL);
    v12[1] = a1 + 1;
    unint64_t v9 = *a4;
    uint64_t v10 = *((void *)*a4 + 2);
    std::string v7[2] = **a4;
    *((void *)v7 + 6) = v10;
    v9[1] = 0;
    std::string v9[2] = 0;
    *unint64_t v9 = 0;
    *((void *)v7 + 8) = 0;
    *((void *)v7 + 9) = 0;
    *((void *)v7 + 7) = 0;
    char v13 = 1;
    std::__tree<std::string>::__insert_node_at(a1, v14, v8, (uint64_t *)v7);
    v12[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v12, 0);
  }
  return v7;
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  double v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

std::vector<std::string> *__cdecl std::vector<std::string>::vector(std::vector<std::string> *this, std::vector<std::string>::size_type __n)
{
  this->__begin_ = 0;
  this->__end_ = 0;
  this->__end_cap_.__value_ = 0;
  if (__n)
  {
    std::vector<std::string>::__vallocate[abi:ne180100](this, __n);
    std::vector<std::string>::pointer end = this->__end_;
    size_t v5 = 24 * ((24 * __n - 24) / 0x18) + 24;
    bzero(end, v5);
    this->__end_ = (std::vector<std::string>::pointer)((char *)end + v5);
  }
  return this;
}

void sub_239A2FB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

std::string *std::vector<std::string>::__init_with_size[abi:ne180100]<std::__wrap_iter<std::string*>,std::__wrap_iter<std::string*>>(std::string *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<std::string>::__vallocate[abi:ne180100](result, a4);
    __n128 result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string*,std::string*,std::string*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::string *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::string::size_type)result;
  }
  return result;
}

void sub_239A2FC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void sub_239A2FF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v25 - 57) < 0) {
    operator delete(*(void **)(v25 - 80));
  }
  IEDefer::~IEDefer((void (***)(void))(v25 - 88));
  uint64_t v27 = a23;
  a23 = 0;
  if (v27) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a23, v27);
  }
  uint64_t v28 = *(void *)(v25 - 40);
  *(void *)(v25 - 48) = &unk_26ED2A490;
  *(void *)(v25 - 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  if (v28) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v25 - 40, v28);
  }

  _Unwind_Resume(a1);
}

void sub_239A304A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  if (*(char *)(v39 - 89) < 0) {
    operator delete(*(void **)(v39 - 112));
  }
  IEDefer::~IEDefer((void (***)(void))(v39 - 120));
  uint64_t v41 = a35;
  a35 = 0;
  if (v41) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a35, v41);
  }
  uint64_t v42 = *(void *)(v39 - 72);
  *(void *)(v39 - 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &unk_26ED2A490;
  *(void *)(v39 - 72) = 0;
  if (v42) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v39 - 72, v42);
  }

  _Unwind_Resume(a1);
}

siri::intelligence::VariableReference *siri::intelligence::VariableReference::VariableReference(siri::intelligence::VariableReference *this)
{
  std::string::basic_string[abi:ne180100]<0>(&v4, "");
  std::string::basic_string[abi:ne180100]<0>(&__p, siri::intelligence::TYPE_REFERENCE[0]);
  siri::intelligence::Variable::Variable((uint64_t)this, &v4, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
  *(void *)this = &unk_26ED275B0;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 9) = 0;
  return this;
}

void sub_239A30710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void *siri::intelligence::VariableReference::VariableReference(void *a1, const std::string *a2)
{
  std::string::basic_string[abi:ne180100]<0>(&__p, siri::intelligence::TYPE_REFERENCE[0]);
  siri::intelligence::Variable::Variable((uint64_t)a1, a2, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *a1 = &unk_26ED275B0;
  a1[10] = 0;
  a1[11] = 0;
  a1[9] = 0;
  return a1;
}

void sub_239A307D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *siri::intelligence::VariableReference::VariableReference(std::string *a1, const std::string *a2, const std::string *a3)
{
  std::string::basic_string[abi:ne180100]<0>(&__p, siri::intelligence::TYPE_REFERENCE[0]);
  siri::intelligence::Variable::Variable((uint64_t)a1, a2, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  a1->__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26ED275B0;
  a1[3].__r_.__value_.__r.__words[0] = 0;
  a1[3].__r_.__value_.__l.__size_ = 0;
  a1[3].__r_.__value_.__r.__words[2] = 0;
  std::string::operator=(a1 + 3, a3);
  a1[2].__r_.__value_.__s.__data_[16] = 1;
  return a1;
}

void sub_239A3089C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (*(char *)(v15 + 95) < 0) {
    operator delete(*v16);
  }
  siri::intelligence::Variable::~Variable((void **)v15);
  _Unwind_Resume(a1);
}

std::string *siri::intelligence::VariableReference::SetValue(std::string *a1, const std::string *a2)
{
  __n128 result = std::string::operator=(a1 + 3, a2);
  a1[2].__r_.__value_.__s.__data_[16] = 1;
  return result;
}

void siri::intelligence::VariableReference::GetValue(siri::intelligence::VariableReference *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 95) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 9), *((void *)this + 10));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 72);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 11);
  }
}

uint64_t siri::intelligence::VariableReference::SetValueFromString(std::string *a1, const std::string *a2)
{
  std::string::operator=(a1 + 3, a2);
  a1[2].__r_.__value_.__s.__data_[16] = 1;
  return 1;
}

uint64_t siri::intelligence::VariableReference::SetUndefined(siri::intelligence::VariableReference *this)
{
  uint64_t result = MEMORY[0x23ECAA8E0]((char *)this + 72, "");
  *((unsigned char *)this + 64) = 0;
  return result;
}

void siri::intelligence::VariableReference::SetEmpty(std::string *this)
{
  std::string::basic_string[abi:ne180100]<0>(&__str, "");
  std::string::operator=(this + 3, &__str);
  this[2].__r_.__value_.__s.__data_[16] = 1;
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_239A309FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL siri::intelligence::VariableReference::IsEmpty(siri::intelligence::VariableReference *this)
{
  if (*((char *)this + 95) < 0)
  {
    if (*((void *)this + 10)) {
      return *((unsigned char *)this + 64) == 0;
    }
  }
  else if (*((unsigned char *)this + 95))
  {
    return *((unsigned char *)this + 64) == 0;
  }
  return 1;
}

void siri::intelligence::VariableReference::AsString(siri::intelligence::VariableReference *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 95) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 9), *((void *)this + 10));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 72);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 11);
  }
}

uint64_t siri::intelligence::VariableReference::CheckForRecursion(uint64_t a1, uint64_t a2)
{
  double v2 = *(const void **)a2;
  if (!*(void *)a2) {
    return 0;
  }
  if (!v5)
  {
    uint64_t v6 = 0;
    goto LABEL_29;
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v5[95] < 0) {
    std::string::__init_copy_ctor_external(&v32, *((const std::string::value_type **)v5 + 9), *((void *)v5 + 10));
  }
  else {
    std::string v32 = *(std::string *)(v5 + 3);
  }
  if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v32.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v32.__r_.__value_.__l.__size_;
  }
  uint64_t v9 = *(unsigned __int8 *)(a1 + 95);
  int v10 = (char)v9;
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *(void *)(a1 + 80);
  }
  if (size != v9) {
    goto LABEL_25;
  }
  if (v10 >= 0) {
    BOOL v11 = (unsigned __int8 *)(a1 + 72);
  }
  else {
    BOOL v11 = *(unsigned __int8 **)(a1 + 72);
  }
  if ((*((unsigned char *)&v32.__r_.__value_.__s + 23) & 0x80) == 0)
  {
    if (*((unsigned char *)&v32.__r_.__value_.__s + 23))
    {
      uint64_t v12 = 0;
      while (v32.__r_.__value_.__s.__data_[v12] == v11[v12])
      {
        if (HIBYTE(v32.__r_.__value_.__r.__words[2]) == ++v12) {
          goto LABEL_60;
        }
      }
LABEL_25:
      if ((*((unsigned char *)&v32.__r_.__value_.__s + 23) & 0x80) != 0) {
        operator delete(v32.__r_.__value_.__l.__data_);
      }
      goto LABEL_28;
    }
LABEL_60:
    uint64_t v7 = 1;
    goto LABEL_67;
  }
  char v13 = (void *)v32.__r_.__value_.__r.__words[0];
  int v14 = memcmp(v32.__r_.__value_.__l.__data_, v11, v32.__r_.__value_.__l.__size_);
  operator delete(v13);
  if (!v14) {
    goto LABEL_60;
  }
LABEL_28:
  double v2 = *(const void **)a2;
  if (*(void *)a2)
  {
LABEL_29:
    if (v15)
    {
      long long v16 = *(std::__shared_weak_count **)(a2 + 8);
      if (v16) {
        atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      std::map<std::string,std::shared_ptr<siri::intelligence::Variable>>::map[abi:ne180100]((uint64_t *)&v32, v15 + 9);
      unint64_t v17 = (std::string::__raw *)v32.__r_.__value_.__r.__words[0];
      if ((std::string::size_type *)v32.__r_.__value_.__l.__data_ != &v32.__r_.__value_.__r.__words[1])
      {
        while (1)
        {
          unint64_t v18 = (std::__shared_weak_count *)v17[2].__words[2];
          v31[0] = v17[2].__words[1];
          v31[1] = v18;
          if (v18) {
            atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          char v19 = siri::intelligence::VariableReference::CheckForRecursion(a1, v31);
          if (v18) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v18);
          }
          if (v19) {
            break;
          }
          uint64_t v20 = (std::string *)v17->__words[1];
          if (v20)
          {
            do
            {
              long long v21 = v20;
              uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
            }
            while (v20);
          }
          else
          {
            do
            {
              long long v21 = (std::string *)v17->__words[2];
              BOOL v22 = v21->__r_.__value_.__r.__words[0] == (void)v17;
              unint64_t v17 = (std::string::__raw *)v21;
            }
            while (!v22);
          }
          unint64_t v17 = (std::string::__raw *)v21;
          if (v21 == (std::string *)&v32.__r_.__value_.__r.__words[1]) {
            goto LABEL_44;
          }
        }
        std::__tree<std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>>>::destroy((uint64_t)&v32, (void *)v32.__r_.__value_.__l.__size_);
        uint64_t v7 = 1;
        goto LABEL_65;
      }
LABEL_44:
      std::__tree<std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::intelligence::Variable>>>>::destroy((uint64_t)&v32, (void *)v32.__r_.__value_.__l.__size_);
      double v2 = *(const void **)a2;
      if (!*(void *)a2) {
        goto LABEL_59;
      }
    }
    else
    {
      long long v16 = 0;
    }
    if (v23)
    {
      int v24 = *(std::__shared_weak_count **)(a2 + 8);
      if (v24) {
        atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      memset(&v32, 0, sizeof(v32));
      std::vector<std::shared_ptr<siri::intelligence::Variable>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::intelligence::Variable>*,std::shared_ptr<siri::intelligence::Variable>*>(&v32, v23[9], v23[10], ((char *)v23[10] - (char *)v23[9]) >> 4);
      std::string::size_type v26 = v32.__r_.__value_.__l.__size_;
      uint64_t v25 = (void *)v32.__r_.__value_.__r.__words[0];
      if (v32.__r_.__value_.__r.__words[0] == v32.__r_.__value_.__l.__size_)
      {
LABEL_57:
        BOOL v33 = &v32;
        std::vector<std::shared_ptr<siri::intelligence::Variable>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v33);
        uint64_t v7 = 0;
        if (!v24)
        {
LABEL_65:
          if (v16) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v16);
          }
          goto LABEL_67;
        }
      }
      else
      {
        while (1)
        {
          uint64_t v27 = (std::__shared_weak_count *)v25[1];
          v30[0] = *v25;
          v30[1] = v27;
          if (v27) {
            atomic_fetch_add_explicit(&v27->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          char v28 = siri::intelligence::VariableReference::CheckForRecursion(a1, v30);
          if (v27) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v27);
          }
          if (v28) {
            break;
          }
          v25 += 2;
          if (v25 == (void *)v26) {
            goto LABEL_57;
          }
        }
        BOOL v33 = &v32;
        std::vector<std::shared_ptr<siri::intelligence::Variable>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v33);
        uint64_t v7 = 1;
        if (!v24) {
          goto LABEL_65;
        }
      }
      std::__shared_weak_count::__release_shared[abi:ne180100](v24);
      goto LABEL_65;
    }
LABEL_59:
    uint64_t v7 = 0;
    goto LABEL_65;
  }
  uint64_t v7 = 0;
LABEL_67:
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  return v7;
}

void sub_239A30E64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (v18)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
    if (!v17)
    {
LABEL_3:
      if (!v16) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if (!v17)
  {
    goto LABEL_3;
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  if (!v16) {
LABEL_5:
  }
    _Unwind_Resume(exception_object);
LABEL_4:
  std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  goto LABEL_5;
}

void siri::intelligence::VariableReference::GetExpanded(siri::intelligence::VariableReference *this@<X0>, siri::intelligence::Memory *a2@<X1>, void *a3@<X8>)
{
  if (!a2)
  {
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  uint64_t v6 = (void *)((char *)this + 72);
  siri::intelligence::Memory::GetVariable((uint64_t)a2, (uint64_t)this + 72, &v11);
  if (!v11) {
    goto LABEL_11;
  }
  uint64_t v7 = v12;
  v10[0] = v11;
  v10[1] = v12;
  if (v12) {
    atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  int v9 = siri::intelligence::VariableReference::CheckForRecursion((uint64_t)this, (uint64_t)v10);
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
  if (v9)
  {
    if (*((char *)this + 95) < 0) {
      uint64_t v6 = (void *)*v6;
    }
    siri::intelligence::Log::Error((siri::intelligence::Log *)"Infinite recursion detected when expanding reference to variable '%s'. Return NULL result.", v8, v6);
LABEL_11:
    *a3 = 0;
    a3[1] = 0;
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, siri::intelligence::Memory *))(*(void *)v11 + 88))(v11, a2);
LABEL_14:
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
}

void sub_239A31000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::VariableReference::GetExpandedType(siri::intelligence::VariableReference *this@<X0>, siri::intelligence::Memory *a2@<X1>, std::string *a3@<X8>)
{
  if (*((char *)this + 95) < 0)
  {
    uint64_t v4 = *((void *)this + 10);
    if (!a2)
    {
LABEL_9:
      uint64_t v6 = (char *)siri::intelligence::TYPE_UNKNOWN;
      std::string::basic_string[abi:ne180100]<0>(a3, v6);
      return;
    }
  }
  else
  {
    uint64_t v4 = *((unsigned __int8 *)this + 95);
    if (!a2) {
      goto LABEL_9;
    }
  }
  if (!v4) {
    goto LABEL_9;
  }
  siri::intelligence::Memory::GetVariable((uint64_t)a2, (uint64_t)this + 72, &v7);
  if (v7)
  {
    if (*(char *)(v7 + 55) < 0)
    {
      std::string::__init_copy_ctor_external(a3, *(const std::string::value_type **)(v7 + 32), *(void *)(v7 + 40));
    }
    else
    {
      long long v5 = *(_OWORD *)(v7 + 32);
      a3->__r_.__value_.__r.__words[2] = *(void *)(v7 + 48);
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = v5;
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(a3, siri::intelligence::TYPE_UNKNOWN);
  }
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
}

void sub_239A3110C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::VariableReference::~VariableReference(void **this)
{
  *this = &unk_26ED275B0;
  if (*((char *)this + 95) < 0) {
    operator delete(this[9]);
  }

  siri::intelligence::Variable::~Variable(this);
}

{
  uint64_t vars8;

  *this = &unk_26ED275B0;
  if (*((char *)this + 95) < 0) {
    operator delete(this[9]);
  }
  siri::intelligence::Variable::~Variable(this);

  JUMPOUT(0x23ECAACC0);
}

void siri::intelligence::HashUtils::ComputeMD5(_DWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  int v3 = *((char *)a1 + 23);
  CC_LONG v4 = a1[2];
  if (v3 >= 0)
  {
    CC_LONG v5 = v3;
  }
  else
  {
    a1 = *(_DWORD **)a1;
    CC_LONG v5 = v4;
  }
  CC_MD5(a1, v5, md);
  objc_msgSend(NSString, "stringWithFormat:", @"%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x", md[0], md[1], md[2], md[3], md[4], md[5], md[6], md[7], md[8], md[9], md[10], md[11], md[12], md[13], md[14], md[15]);
  id v6 = objc_claimAutoreleasedReturnValue();
  std::string::basic_string[abi:ne180100]<0>(a2, (char *)[v6 UTF8String]);
}

void sub_239A31304(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

std::string *siri::intelligence::HashUtils::ComputeSHA256@<X0>(_DWORD *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  int v3 = *((char *)a1 + 23);
  CC_LONG v4 = a1[2];
  if (v3 >= 0)
  {
    CC_LONG v5 = v3;
  }
  else
  {
    a1 = *(_DWORD **)a1;
    CC_LONG v5 = v4;
  }
  CC_SHA256(a1, v5, md);
  uint64_t v6 = 0;
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  do
  {
    char v9 = 0;
    *(_WORD *)std::string __str = 0;
    snprintf(__str, 3uLL, "%02hhx", md[v6]);
    uint64_t result = std::string::append(a2, __str);
    ++v6;
  }
  while (v6 != 32);
  return result;
}

void sub_239A313EC(_Unwind_Exception *exception_object)
{
}

void siri::intelligence::HashUtils::ComputeCATIGuid(uint64_t a1@<X0>, const void **a2@<X1>, void *a3@<X8>)
{
  if (*((char *)a2 + 23) >= 0) {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  uint64_t v7 = &v14;
  std::string::basic_string[abi:ne180100]((uint64_t)&v14, v6 + 1);
  if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v7 = (std::string *)v14.__r_.__value_.__r.__words[0];
  }
  if (v6)
  {
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = *a2;
    }
    memmove(v7, v8, v6);
  }
  *(_WORD *)((char *)&v7->__r_.__value_.__l.__data_ + v6) = 45;
  int v9 = *(char *)(a1 + 23);
  if (v9 >= 0) {
    int v10 = (const std::string::value_type *)a1;
  }
  else {
    int v10 = *(const std::string::value_type **)a1;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    std::string::size_type v11 = *(void *)(a1 + 8);
  }
  uint64_t v12 = std::string::append(&v14, v10, v11);
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  std::string::size_type v16 = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  siri::intelligence::HashUtils::ComputeMD5(__p, a3);
  if (SHIBYTE(v16) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
}

void sub_239A31514(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_239A31648(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_239A3178C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_239A31848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_239A318F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_239A319B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_239A31A90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }

  _Unwind_Resume(a1);
}

void sub_239A31D30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL siri::intelligence::DialogTypes::IsPrimitiveDialogType(uint64_t *a1)
{
  if (*((char *)a1 + 23) < 0)
  {
    uint64_t v2 = a1[1];
    if (v2 != 13)
    {
      if (v2 != 14) {
        return 0;
      }
      a1 = (uint64_t *)*a1;
      goto LABEL_8;
    }
    int v9 = (uint64_t *)*a1;
    if (*(void *)*a1 != 0x532E676F6C616964 || *(void *)(*a1 + 5) != 0x676E697274532E67)
    {
      uint64_t v11 = *v9;
      uint64_t v12 = *(uint64_t *)((char *)v9 + 5);
      return v11 == 0x4E2E676F6C616964 && v12 == 0x7265626D754E2E67;
    }
    return 1;
  }
  int v1 = *((unsigned __int8 *)a1 + 23);
  if (v1 != 13)
  {
    if (v1 != 14) {
      return 0;
    }
LABEL_8:
    uint64_t v3 = *(uint64_t *)((char *)a1 + 6);
    BOOL v4 = *a1 == 0x422E676F6C616964;
    uint64_t v5 = 0x6E61656C6F6F422ELL;
    return v4 && v3 == v5;
  }
  if (*a1 == 0x532E676F6C616964 && *(uint64_t *)((char *)a1 + 5) == 0x676E697274532E67) {
    return 1;
  }
  uint64_t v3 = *(uint64_t *)((char *)a1 + 5);
  BOOL v4 = *a1 == 0x4E2E676F6C616964;
  uint64_t v5 = 0x7265626D754E2E67;
  return v4 && v3 == v5;
}

BOOL siri::intelligence::DialogTypes::IsDialogType(siri::intelligence *a1)
{
  siri::intelligence::GetDialogTypes(a1);
  siri::intelligence::GetArrayElementType((uint64_t)a1, &__p);
  uint64_t v2 = (void **)std::__tree<std::string>::find<std::string>((uint64_t)v5, (const void **)&__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::destroy((uint64_t)v5, v6);
  return &v6 != v2;
}

void sub_239A3205C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::destroy((uint64_t)&a15, a16);
  _Unwind_Resume(a1);
}

void siri::intelligence::GetDialogTypes(siri::intelligence *this)
{
  MEMORY[0x270FA5388](this);
  uint64_t v2 = v1;
  uint64_t v358 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_5, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_5))
  {
    std::string::basic_string[abi:ne180100]<0>(&v171, "dialog.AbstractMeasurement");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v313, "units", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v314, "value", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v170, v313, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v315, &v171, v170);
    std::string::basic_string[abi:ne180100]<0>(&v168, "dialog.Area");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v310, "outputUnits");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v311, "units", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v312, "value", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v167, v310, 3);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v316, &v168, v167);
    std::string::basic_string[abi:ne180100]<0>(&v165, "dialog.Array");
    v164[1] = 0;
    v164[0] = 0;
    v163 = (const void **)v164;
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v317, &v165, &v163);
    std::string::basic_string[abi:ne180100]<0>(&v161, "dialog.Boolean");
    v160[1] = 0;
    v160[0] = 0;
    v159 = (const void **)v160;
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v318, &v161, &v159);
    std::string::basic_string[abi:ne180100]<0>(&v157, "dialog.Calendar");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[14],char const(&)[21],0>(v306);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[5],char const(&)[14],0>(v307, "secs", "dialog.Number");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(v308, "timeZone");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[14],char const(&)[14],0>(v309, "utcOffsetSecs", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v156, v306, 4);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v319, &v157, v156);
    std::string::basic_string[abi:ne180100]<0>(&v154, "dialog.CalendarRange");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[14],0>(v303, "endSecs", "dialog.Number");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[10],char const(&)[14],0>(v304, "startSecs", "dialog.Number");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(v305, "timeZone");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v153, v303, 3);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v320, &v154, v153);
    std::string::basic_string[abi:ne180100]<0>(&v151, "dialog.ConvertibleMeasurement");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v300, "outputUnits");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v301, "units", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v302, "value", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v150, v300, 3);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v321, &v151, v150);
    std::string::basic_string[abi:ne180100]<0>(&v148, "dialog.Currency");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v298, "units", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v299, "value", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v147, v298, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v322, &v148, v147);
    std::string::basic_string[abi:ne180100]<0>(&v145, "dialog.DateFormatter");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[7],char const(&)[14],0>(v296, "length", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[15],0>(v297, "omitYear");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v144, v296, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v323, &v145, v144);
    std::string::basic_string[abi:ne180100]<0>(&v142, "dialog.DateTime");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[4],char const(&)[14],0>(v292, "day", "dialog.Number");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v293, "month", "dialog.Number");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(v294, "timeZone");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[5],char const(&)[14],0>(v295, "year", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v141, v292, 4);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v324, &v142, v141);
    std::string::basic_string[abi:ne180100]<0>(&v139, "dialog.Density");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v289, "outputUnits");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v290, "units", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v291, "value", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v138, v289, 3);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v325, &v139, v138);
    std::string::basic_string[abi:ne180100]<0>(&v136, "dialog.Duration");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[5],char const(&)[14],0>(v288, "secs", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v135, (const void **)v288, 1);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v326, &v136, v135);
    std::string::basic_string[abi:ne180100]<0>(&v133, "dialog.Length");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v285, "outputUnits");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v286, "units", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v287, "value", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v132, v285, 3);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v327, &v133, v132);
    std::string::basic_string[abi:ne180100]<0>(&v130, "dialog.Location");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[7],char const(&)[23],0>(v284);
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v129, (const void **)v284, 1);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v328, &v130, v129);
    std::string::basic_string[abi:ne180100]<0>(&v127, "dialog.LocationAddress");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[19],char const(&)[14],0>(v272);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[23],char const(&)[14],0>(v273, "administrativeAreaCode");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[14],0>(v274, "country", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v275, "countryCode");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[17],char const(&)[14],0>(v276, "fullThoroughfare");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(v277, "locality");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[5],char const(&)[14],0>(v278, "name", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(v279, "postCode");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[22],char const(&)[14],0>(v280);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v281, "subLocality");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[16],char const(&)[14],0>(v282, "subThoroughfare");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[13],char const(&)[14],0>(v283, "thoroughfare");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v126, v272, 12);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v329, &v127, v126);
    std::string::basic_string[abi:ne180100]<0>(&v124, "dialog.LocationValue");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[23],0>(v271);
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v123, (const void **)v271, 1);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v330, &v124, v123);
    std::string::basic_string[abi:ne180100]<0>(&v121, "dialog.MultiLevelItem");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[11],char const(&)[24],0>(v270);
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v120, (const void **)v270, 1);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v331, &v121, v120);
    std::string::basic_string[abi:ne180100]<0>(&v118, "dialog.Number");
    v117[1] = 0;
    v117[0] = 0;
    int v116 = (const void **)v117;
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v332, &v118, &v116);
    std::string::basic_string[abi:ne180100]<0>(&v114, "dialog.Percent");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v268, "units", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v269, "value", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v113, v268, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v333, &v114, v113);
    std::string::basic_string[abi:ne180100]<0>(&v111, "dialog.Person");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[14],0>(v255, "company", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[11],char const(&)[14],0>(v256, "familyName");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[24],char const(&)[15],0>(v257);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(v258, "fullName");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[10],char const(&)[14],0>(v259, "givenName", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[11],char const(&)[14],0>(v260, "middleName");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(v261, "nickname");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[13],char const(&)[20],0>(v262);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[15],0>(v263, "pronoun", "dialog.Pronoun");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[15],0>(v264, "related", "dialog.Boolean");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[13],char const(&)[14],0>(v265, "relationship");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[22],char const(&)[15],0>(v266, "useConversationalName");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[20],char const(&)[15],0>(v267);
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v110, v255, 13);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v334, &v111, v110);
    std::string::basic_string[abi:ne180100]<0>(&v108, "dialog.PersonHandle");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v252, "label", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[5],char const(&)[14],0>(v253, "type", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v254, "value", "dialog.String");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v107, v252, 3);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v335, &v108, v107);
    std::string::basic_string[abi:ne180100]<0>(&v105, "dialog.PersonHeight");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v250, "units", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v251, "value", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v104, v250, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v336, &v105, v104);
    std::string::basic_string[abi:ne180100]<0>(&v102, "dialog.PhoneNumber");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v248, "countryCode");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v249, "value", "dialog.String");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v101, v248, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v337, &v102, v101);
    std::string::basic_string[abi:ne180100]<0>(&v99, "dialog.Pressure");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v245, "outputUnits");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v246, "units", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v247, "value", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v98, v245, 3);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v338, &v99, v98);
    std::string::basic_string[abi:ne180100]<0>(&v96, "dialog.Pronoun");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[7],char const(&)[14],0>(v244, "gender", "dialog.String");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v95, (const void **)v244, 1);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v339, &v96, v95);
    std::string::basic_string[abi:ne180100]<0>(&v93, "dialog.Speed");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v241, "outputUnits");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v242, "units", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v243, "value", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v92, v241, 3);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v340, &v93, v92);
    std::string::basic_string[abi:ne180100]<0>(&v90, "dialog.State");
    v89[1] = 0;
    v89[0] = 0;
    uint64_t v88 = (const void **)v89;
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v341, &v90, &v88);
    std::string::basic_string[abi:ne180100]<0>(&v86, "dialog.String");
    v85[1] = 0;
    v85[0] = 0;
    uint64_t v84 = (const void **)v85;
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v342, &v86, &v84);
    std::string::basic_string[abi:ne180100]<0>(&v82, "dialog.StringPair");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v239, "first", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[7],char const(&)[14],0>(v240, "second", "dialog.String");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v81, v239, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v343, &v82, v81);
    std::string::basic_string[abi:ne180100]<0>(&v79, "dialog.Temperature");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v236, "outputUnits");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v237, "units", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v238, "value", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v78, v236, 3);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v344, &v79, v78);
    std::string::basic_string[abi:ne180100]<0>(&v76, "dialog.TimeZone");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[5],char const(&)[14],0>(v234, "secs", "dialog.Number");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(v235, "timeZone");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v75, v234, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v345, &v76, v75);
    std::string::basic_string[abi:ne180100]<0>(&v73, "dialog.User");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[14],0>(v221, "company", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[11],char const(&)[14],0>(v222, "familyName");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[24],char const(&)[15],0>(v223);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(v224, "fullName");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[10],char const(&)[14],0>(v225, "givenName", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[11],char const(&)[14],0>(v226, "middleName");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(v227, "nickname");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[13],char const(&)[20],0>(v228);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[15],0>(v229, "pronoun", "dialog.Pronoun");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[15],0>(v230, "related", "dialog.Boolean");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[13],char const(&)[14],0>(v231, "relationship");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[22],char const(&)[15],0>(v232, "useConversationalName");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[20],char const(&)[15],0>(v233);
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v72, v221, 13);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v346, &v73, v72);
    std::string::basic_string[abi:ne180100]<0>(&v70, "dialog.Weight");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v218, "outputUnits");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v219, "units", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v220, "value", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v69, v218, 3);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v347, &v70, v69);
    std::string::basic_string[abi:ne180100]<0>(&v67, "sirikit.App");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v216, "appId", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[18],char const(&)[27],0>(v217);
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v66, v216, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v348, &v67, v66);
    std::string::basic_string[abi:ne180100]<0>(&v64, "sirikit.DeviceRestrictions");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[17],char const(&)[15],0>(v215);
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v63, (const void **)v215, 1);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v349, &v64, v63);
    std::string::basic_string[abi:ne180100]<0>(&v61, "sirikit.DeviceState");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[14],char const(&)[14],0>(v190, "companionName", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[11],char const(&)[14],0>(v191, "deviceName");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[17],char const(&)[14],0>(v192, "deviceRegionCode");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v193, "inputOrigin");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[16],char const(&)[14],0>(v194, "interactionType");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[10],char const(&)[15],0>(v195, "isAppleTV");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[16],char const(&)[15],0>(v196);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[15],0>(v197, "isCarDnD");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[10],char const(&)[15],0>(v198, "isCarPlay");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[11],char const(&)[15],0>(v199, "isEyesFree");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[10],char const(&)[15],0>(v200, "isHomePod");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[21],char const(&)[15],0>(v201);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[15],0>(v202, "isMac");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[15],0>(v203, "isPad");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[15],0>(v204, "isPhone", "dialog.Boolean");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[11],char const(&)[15],0>(v205, "isSidekick");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[22],char const(&)[15],0>(v206, "isTextToSpeechEnabled");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[15],0>(v207, "isVOX");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[22],char const(&)[15],0>(v208, "isVoiceTriggerEnabled");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[15],0>(v209, "isWatch", "dialog.Boolean");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[15],char const(&)[14],0>(v210);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[13],char const(&)[27],0>(v211);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[11],char const(&)[14],0>(v212, "siriLocale");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[23],char const(&)[14],0>(v213, "userAssignedDeviceName");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v214, "voiceGender");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v60, v190, 25);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v350, &v61, v60);
    std::string::basic_string[abi:ne180100]<0>(&v58, "sirikit.LocalizedAppName");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[14],0>(v188, "appName", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[7],char const(&)[14],0>(v189, "locale", "dialog.String");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v57, v188, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v351, &v58, v57);
    std::string::basic_string[abi:ne180100]<0>(&v55, "visual.AppIcon");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(v186, "bundleId");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(v187, "iconType");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v54, v186, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v352, &v55, v54);
    std::string::basic_string[abi:ne180100]<0>(&v52, "visual.AspectRatio");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[7],char const(&)[14],0>(v184, "height", "dialog.Number");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(v185, "width", "dialog.Number");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v51, v184, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v353, &v52, v51);
    std::string::basic_string[abi:ne180100]<0>(&v49, "visual.ImageData");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[19],0>(v182);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(v183, "encodedData");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v48, v182, 2);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v354, &v49, v48);
    std::string::basic_string[abi:ne180100]<0>(&v46, "visual.ImageResource");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[15],0>(v177, "appIcon", "visual.AppIcon");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[10],char const(&)[17],0>(v178);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[10],char const(&)[14],0>(v179, "imageType", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[16],0>(v180);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[7],char const(&)[14],0>(v181, "symbol", "visual.Symbol");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v45, v177, 5);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v355, &v46, v45);
    std::string::basic_string[abi:ne180100]<0>(v43, "visual.ImageUrl");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[19],0>(v174);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[14],0>(v175, "darkUrl", "dialog.String");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[4],char const(&)[14],0>(v176, "url", "dialog.String");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v42, v174, 3);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v356, (long long *)v43, v42);
    std::string::basic_string[abi:ne180100]<0>(__p, "visual.Symbol");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[5],char const(&)[14],0>(v173, "name", "dialog.String");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v39, (const void **)v173, 1);
    std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(v357, (long long *)__p, v39);
    std::map<std::string,std::map<std::string,std::string>>::map[abi:ne180100]((const void **)&v315[0].__r_.__value_.__l.__data_, 43);
    for (unint64_t i = 2016; i != -48; i -= 48)
      std::pair<std::string const,std::map<std::string,std::string>>::~pair((uint64_t)&v315[i / 0x18]);
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v39, v39[1]);
    siri::intelligence::TestParseError::~TestParseError(v173);
    if (v41 < 0) {
      operator delete(__p[0]);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v42, v42[1]);
    for (uint64_t j = 12; j != -6; j -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v174[j]);
    if (v44 < 0) {
      operator delete(v43[0]);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v45, v45[1]);
    for (uint64_t k = 24; k != -6; k -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v177[k]);
    if (v47 < 0) {
      operator delete((void *)v46);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v48, v48[1]);
    for (uint64_t m = 6; m != -6; m -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v182[m]);
    if (v50 < 0) {
      operator delete((void *)v49);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v51, v51[1]);
    for (uint64_t n = 6; n != -6; n -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v184[n]);
    if (v53 < 0) {
      operator delete((void *)v52);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v54, v54[1]);
    for (iunint64_t i = 6; ii != -6; ii -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v186[ii]);
    if (v56 < 0) {
      operator delete((void *)v55);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v57, v57[1]);
    for (juint64_t j = 6; jj != -6; jj -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v188[jj]);
    if (v59 < 0) {
      operator delete((void *)v58);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v60, v60[1]);
    for (kuint64_t k = 144; kk != -6; kk -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v190[kk]);
    if (v62 < 0) {
      operator delete((void *)v61);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v63, v63[1]);
    siri::intelligence::TestParseError::~TestParseError(v215);
    if (v65 < 0) {
      operator delete((void *)v64);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v66, v66[1]);
    for (muint64_t m = 6; mm != -6; mm -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v216[mm]);
    if (v68 < 0) {
      operator delete((void *)v67);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v69, v69[1]);
    for (nuint64_t n = 12; nn != -6; nn -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v218[nn]);
    if (v71 < 0) {
      operator delete((void *)v70);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v72, v72[1]);
    for (uint64_t i1 = 72; i1 != -6; i1 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v221[i1]);
    if (v74 < 0) {
      operator delete((void *)v73);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v75, v75[1]);
    for (uint64_t i2 = 6; i2 != -6; i2 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v234[i2]);
    if (v77 < 0) {
      operator delete((void *)v76);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v78, v78[1]);
    for (uint64_t i3 = 12; i3 != -6; i3 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v236[i3]);
    if (v80 < 0) {
      operator delete((void *)v79);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v81, v81[1]);
    for (uint64_t i4 = 6; i4 != -6; i4 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v239[i4]);
    if (v83 < 0) {
      operator delete((void *)v82);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&v84, v85[0]);
    if (v87 < 0) {
      operator delete((void *)v86);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&v88, v89[0]);
    if (v91 < 0) {
      operator delete((void *)v90);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v92, v92[1]);
    for (uint64_t i5 = 12; i5 != -6; i5 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v241[i5]);
    if (v94 < 0) {
      operator delete((void *)v93);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v95, v95[1]);
    siri::intelligence::TestParseError::~TestParseError(v244);
    if (v97 < 0) {
      operator delete((void *)v96);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v98, v98[1]);
    for (uint64_t i6 = 12; i6 != -6; i6 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v245[i6]);
    if (v100 < 0) {
      operator delete((void *)v99);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v101, v101[1]);
    for (uint64_t i7 = 6; i7 != -6; i7 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v248[i7]);
    if (v103 < 0) {
      operator delete((void *)v102);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v104, v104[1]);
    for (uint64_t i8 = 6; i8 != -6; i8 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v250[i8]);
    if (v106 < 0) {
      operator delete((void *)v105);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v107, v107[1]);
    for (uint64_t i9 = 12; i9 != -6; i9 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v252[i9]);
    if (v109 < 0) {
      operator delete((void *)v108);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v110, v110[1]);
    for (uint64_t i10 = 72; i10 != -6; i10 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v255[i10]);
    if (v112 < 0) {
      operator delete((void *)v111);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v113, v113[1]);
    for (uint64_t i11 = 6; i11 != -6; i11 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v268[i11]);
    if (v115 < 0) {
      operator delete((void *)v114);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&v116, v117[0]);
    if (v119 < 0) {
      operator delete((void *)v118);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v120, v120[1]);
    siri::intelligence::TestParseError::~TestParseError(v270);
    if (v122 < 0) {
      operator delete((void *)v121);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v123, v123[1]);
    siri::intelligence::TestParseError::~TestParseError(v271);
    if (v125 < 0) {
      operator delete((void *)v124);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v126, v126[1]);
    for (uint64_t i12 = 66; i12 != -6; i12 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v272[i12]);
    if (v128 < 0) {
      operator delete((void *)v127);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v129, v129[1]);
    siri::intelligence::TestParseError::~TestParseError(v284);
    if (v131 < 0) {
      operator delete((void *)v130);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v132, v132[1]);
    for (uint64_t i13 = 12; i13 != -6; i13 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v285[i13]);
    if (v134 < 0) {
      operator delete((void *)v133);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v135, v135[1]);
    siri::intelligence::TestParseError::~TestParseError(v288);
    if (v137 < 0) {
      operator delete((void *)v136);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v138, v138[1]);
    for (uint64_t i14 = 12; i14 != -6; i14 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v289[i14]);
    if (v140 < 0) {
      operator delete((void *)v139);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v141, v141[1]);
    for (uint64_t i15 = 18; i15 != -6; i15 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v292[i15]);
    if (v143 < 0) {
      operator delete((void *)v142);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v144, v144[1]);
    for (uint64_t i16 = 6; i16 != -6; i16 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v296[i16]);
    if (v146 < 0) {
      operator delete((void *)v145);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v147, v147[1]);
    for (uint64_t i17 = 6; i17 != -6; i17 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v298[i17]);
    if (v149 < 0) {
      operator delete((void *)v148);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v150, v150[1]);
    for (uint64_t i18 = 12; i18 != -6; i18 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v300[i18]);
    if (v152 < 0) {
      operator delete((void *)v151);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v153, v153[1]);
    for (uint64_t i19 = 12; i19 != -6; i19 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v303[i19]);
    if (v155 < 0) {
      operator delete((void *)v154);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v156, v156[1]);
    for (uint64_t i20 = 18; i20 != -6; i20 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v306[i20]);
    if (v158 < 0) {
      operator delete((void *)v157);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&v159, v160[0]);
    if (v162 < 0) {
      operator delete((void *)v161);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&v163, v164[0]);
    if (v166 < 0) {
      operator delete((void *)v165);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v167, v167[1]);
    for (uint64_t i21 = 12; i21 != -6; i21 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v310[i21]);
    if (v169 < 0) {
      operator delete((void *)v168);
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)v170, v170[1]);
    for (uint64_t i22 = 6; i22 != -6; i22 -= 6)
      siri::intelligence::TestParseError::~TestParseError((void **)&v313[i22]);
    if (v172 < 0) {
      operator delete((void *)v171);
    }
    __cxa_atexit((void (*)(void *))std::map<std::string,std::map<std::string,std::string>>::~map[abi:ne180100], &qword_26AD867B8, &dword_239A02000);
    __cxa_guard_release(&_MergedGlobals_5);
  }
  v2[1] = 0;
  v2[2] = 0;
  *uint64_t v2 = v2 + 1;
  uint64_t v3 = qword_26AD867B8;
  if ((uint64_t *)qword_26AD867B8 != &qword_26AD867C0)
  {
    do
    {
      std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::map<std::string,std::string>> const&>((uint64_t)v2, v2 + 1, (const void **)(v3 + 32), v3 + 32);
      BOOL v4 = *(uint64_t **)(v3 + 8);
      if (v4)
      {
        do
        {
          uint64_t v5 = v4;
          BOOL v4 = (uint64_t *)*v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          uint64_t v5 = *(uint64_t **)(v3 + 16);
          BOOL v6 = *v5 == v3;
          uint64_t v3 = (uint64_t)v5;
        }
        while (!v6);
      }
      uint64_t v3 = (uint64_t)v5;
    }
    while (v5 != &qword_26AD867C0);
  }
}

void sub_239A344C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, void *a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,char a21,void *a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,char a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,__int16 a57,char a58,char a59,uint64_t a60,char a61,uint64_t a62,uint64_t a63)
{
  for (uint64_t i = 2016; i != -48; i -= 48)
    std::pair<std::string const,std::map<std::string,std::string>>::~pair(v76 + i);
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&a11, a12);
  siri::intelligence::TestParseError::~TestParseError((void **)&STACK[0x948]);
  if (a19 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&a21, a22);
  for (uint64_t j = 96; j != -48; j -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x978] + j));
  if (a29 < 0) {
    operator delete(a24);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&a31, a32);
  for (uint64_t k = 192; k != -48; k -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0xA08] + k));
  if (a39 < 0) {
    operator delete(*(void **)v77);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&a41, *(void **)(v77 + 40));
  for (uint64_t m = 48; m != -48; m -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0xAF8] + m));
  if (a49 < 0) {
    operator delete(*(void **)(v77 + 56));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&a51, *(void **)(v77 + 96));
  for (uint64_t n = 48; n != -48; n -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0xB58] + n));
  if (a59 < 0) {
    operator delete(*(void **)(v77 + 112));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&a61, *(void **)(v77 + 152));
  for (iuint64_t i = 48; ii != -48; ii -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0xBB8] + ii));
  if (a69 < 0) {
    operator delete(*(void **)(v77 + 168));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&a71, *(void **)(v77 + 208));
  for (juint64_t j = 48; jj != -48; jj -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0xC18] + jj));
  if (a72 < 0) {
    operator delete(*(void **)(v77 + 224));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&a73, *(void **)(v77 + 264));
  for (kuint64_t k = 1152; kk != -48; kk -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0xC78] + kk));
  if (a74 < 0) {
    operator delete(*(void **)(v77 + 280));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&a75, *(void **)(v77 + 320));
  siri::intelligence::TestParseError::~TestParseError((void **)&STACK[0x1128]);
  if (a76 < 0) {
    operator delete(*(void **)(v77 + 336));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x208], *(void **)(v77 + 376));
  for (muint64_t m = 48; mm != -48; mm -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x1158] + mm));
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v77 + 392));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x240], *(void **)(v77 + 432));
  for (nuint64_t n = 96; nn != -48; nn -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x11B8] + nn));
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v77 + 448));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x278], *(void **)(v77 + 488));
  for (uint64_t i1 = 576; i1 != -48; i1 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x1248] + i1));
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v77 + 504));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x2B0], *(void **)(v77 + 544));
  for (uint64_t i2 = 48; i2 != -48; i2 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x14B8] + i2));
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v77 + 560));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x2E8], *(void **)(v77 + 600));
  for (uint64_t i3 = 96; i3 != -48; i3 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x1518] + i3));
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v77 + 616));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x320], *(void **)(v77 + 656));
  for (uint64_t i4 = 48; i4 != -48; i4 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x15A8] + i4));
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v77 + 672));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x350], *(void **)(v77 + 704));
  if (SLOBYTE(STACK[0x37F]) < 0) {
    operator delete(*(void **)(v77 + 720));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x380], *(void **)(v77 + 752));
  if (SLOBYTE(STACK[0x3AF]) < 0) {
    operator delete(*(void **)(v77 + 768));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x3B8], *(void **)(v77 + 808));
  for (uint64_t i5 = 96; i5 != -48; i5 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x1608] + i5));
  if (SLOBYTE(STACK[0x3E7]) < 0) {
    operator delete(*(void **)(v77 + 824));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x3F0], *(void **)(v77 + 864));
  siri::intelligence::TestParseError::~TestParseError((void **)&STACK[0x1698]);
  if (SLOBYTE(STACK[0x41F]) < 0) {
    operator delete(*(void **)(v77 + 880));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x428], *(void **)(v77 + 920));
  for (uint64_t i6 = 96; i6 != -48; i6 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x16C8] + i6));
  if (SLOBYTE(STACK[0x457]) < 0) {
    operator delete(*(void **)(v77 + 936));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x460], *(void **)(v77 + 976));
  for (uint64_t i7 = 48; i7 != -48; i7 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x1758] + i7));
  if (SLOBYTE(STACK[0x48F]) < 0) {
    operator delete(*(void **)(v77 + 992));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x498], *(void **)(v77 + 1032));
  for (uint64_t i8 = 48; i8 != -48; i8 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x17B8] + i8));
  if (SLOBYTE(STACK[0x4C7]) < 0) {
    operator delete(*(void **)(v77 + 1048));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x4D0], *(void **)(v77 + 1088));
  for (uint64_t i9 = 96; i9 != -48; i9 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x1818] + i9));
  if (SLOBYTE(STACK[0x4FF]) < 0) {
    operator delete(*(void **)(v77 + 1104));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x508], *(void **)(v77 + 1144));
  for (uint64_t i10 = 576; i10 != -48; i10 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x18A8] + i10));
  if (SLOBYTE(STACK[0x537]) < 0) {
    operator delete(*(void **)(v77 + 1160));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x540], *(void **)(v77 + 1200));
  for (uint64_t i11 = 48; i11 != -48; i11 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x1B18] + i11));
  if (SLOBYTE(STACK[0x56F]) < 0) {
    operator delete(*(void **)(v77 + 1216));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x570], *(void **)(v77 + 1248));
  if (SLOBYTE(STACK[0x59F]) < 0) {
    operator delete(*(void **)(v77 + 1264));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x5A8], *(void **)(v77 + 1304));
  siri::intelligence::TestParseError::~TestParseError((void **)&STACK[0x1B78]);
  if (SLOBYTE(STACK[0x5D7]) < 0) {
    operator delete(*(void **)(v77 + 1320));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x5E0], *(void **)(v77 + 1360));
  siri::intelligence::TestParseError::~TestParseError((void **)&STACK[0x1BA8]);
  if (SLOBYTE(STACK[0x60F]) < 0) {
    operator delete(*(void **)(v77 + 1376));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x618], *(void **)(v77 + 1416));
  for (uint64_t i12 = 528; i12 != -48; i12 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x1BD8] + i12));
  if (SLOBYTE(STACK[0x647]) < 0) {
    operator delete(*(void **)(v77 + 1432));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x650], *(void **)(v77 + 1472));
  siri::intelligence::TestParseError::~TestParseError((void **)&STACK[0x1E18]);
  if (SLOBYTE(STACK[0x67F]) < 0) {
    operator delete(*(void **)(v77 + 1488));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x688], *(void **)(v77 + 1528));
  for (uint64_t i13 = 96; i13 != -48; i13 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x1E48] + i13));
  if (SLOBYTE(STACK[0x6B7]) < 0) {
    operator delete(*(void **)(v77 + 1544));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x6C0], *(void **)(v77 + 1584));
  siri::intelligence::TestParseError::~TestParseError((void **)&STACK[0x1ED8]);
  if (SLOBYTE(STACK[0x6EF]) < 0) {
    operator delete(*(void **)(v77 + 1600));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x6F8], *(void **)(v77 + 1640));
  for (uint64_t i14 = 96; i14 != -48; i14 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x1F08] + i14));
  if (SLOBYTE(STACK[0x727]) < 0) {
    operator delete(*(void **)(v77 + 1656));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x730], *(void **)(v77 + 1696));
  for (uint64_t i15 = 144; i15 != -48; i15 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x1F98] + i15));
  if (SLOBYTE(STACK[0x75F]) < 0) {
    operator delete(*(void **)(v77 + 1712));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x768], *(void **)(v77 + 1752));
  for (uint64_t i16 = 48; i16 != -48; i16 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x2058] + i16));
  if (SLOBYTE(STACK[0x797]) < 0) {
    operator delete(*(void **)(v77 + 1768));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x7A0], *(void **)(v77 + 1808));
  for (uint64_t i17 = 48; i17 != -48; i17 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x20B8] + i17));
  if (SLOBYTE(STACK[0x7CF]) < 0) {
    operator delete(*(void **)(v77 + 1824));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x7D8], *(void **)(v77 + 1864));
  for (uint64_t i18 = 96; i18 != -48; i18 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x2118] + i18));
  if (SLOBYTE(STACK[0x807]) < 0) {
    operator delete(*(void **)(v77 + 1880));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x810], *(void **)(v77 + 1920));
  for (uint64_t i19 = 96; i19 != -48; i19 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x21A8] + i19));
  if (SLOBYTE(STACK[0x83F]) < 0) {
    operator delete(*(void **)(v77 + 1936));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x848], *(void **)(v77 + 1976));
  for (uint64_t i20 = 144; i20 != -48; i20 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x2238] + i20));
  if (SLOBYTE(STACK[0x877]) < 0) {
    operator delete(*(void **)(v77 + 1992));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x878], *(void **)(v77 + 2024));
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v77 + 2040));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x8A8], *(void **)(v77 + 2072));
  if (SLOBYTE(STACK[0x8D7]) < 0) {
    operator delete(*(void **)(v77 + 2088));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x8E0], *(void **)(v77 + 2128));
  for (uint64_t i21 = 96; i21 != -48; i21 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x22F8] + i21));
  if (SLOBYTE(STACK[0x90F]) < 0) {
    operator delete(*(void **)(v77 + 2144));
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&STACK[0x918], *(void **)(v77 + 2184));
  for (uint64_t i22 = 48; i22 != -48; i22 -= 48)
    siri::intelligence::TestParseError::~TestParseError((void **)((char *)&STACK[0x2388] + i22));
  if (SLOBYTE(STACK[0x947]) < 0) {
    operator delete(*(void **)(v77 + 2200));
  }
  __cxa_guard_abort(&_MergedGlobals_5);
  _Unwind_Resume(a1);
}

void siri::intelligence::GetArrayElementType(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  BOOL v4 = siri::intelligence::StringEndsWith((std::string *)a1, (unsigned __int8 *)siri::intelligence::ARRAY_SUFFIX);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 23);
  if (v4)
  {
    if ((v5 & 0x80u) != 0) {
      uint64_t v5 = *(void *)(a1 + 8);
    }
    std::string::basic_string(a2, (const std::string *)a1, 0, v5 - 2, (std::allocator<char> *)&v8);
  }
  else if ((v5 & 0x80) != 0)
  {
    BOOL v6 = *(const std::string::value_type **)a1;
    std::string::size_type v7 = *(void *)(a1 + 8);
    std::string::__init_copy_ctor_external(a2, v6, v7);
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
}

uint64_t std::map<std::string,std::map<std::string,std::string>>::~map[abi:ne180100](uint64_t a1)
{
  return a1;
}

BOOL siri::intelligence::DialogTypes::IsArrayType(std::string *a1)
{
  return siri::intelligence::StringEndsWith(a1, (unsigned __int8 *)siri::intelligence::ARRAY_SUFFIX);
}

BOOL siri::intelligence::DialogTypes::IsDialogTypeInput(siri::intelligence *a1, const void **a2)
{
  siri::intelligence::GetDialogTypes(a1);
  siri::intelligence::GetArrayElementType((uint64_t)a1, &__p);
  BOOL v4 = (void **)std::__tree<std::string>::find<std::string>((uint64_t)v8, (const void **)&__p.__r_.__value_.__l.__data_);
  BOOL v5 = &v9 != v4 && v4 + 8 != (void **)std::__tree<std::string>::find<std::string>((uint64_t)(v4 + 7), a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::destroy((uint64_t)v8, v9);
  return v5;
}

void sub_239A3596C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::destroy((uint64_t)&a15, a16);
  _Unwind_Resume(a1);
}

void siri::intelligence::DialogTypes::GetDialogTypeInputType(siri::intelligence *a1@<X0>, const void **a2@<X1>, std::string *a3@<X8>)
{
  siri::intelligence::GetDialogTypes(a1);
  siri::intelligence::GetArrayElementType((uint64_t)a1, &__p);
  BOOL v6 = (void **)std::__tree<std::string>::find<std::string>((uint64_t)v11, (const void **)&__p.__r_.__value_.__l.__data_);
  std::string::size_type v7 = v6;
  if (&v12 == v6 || (uint64_t v8 = std::__tree<std::string>::find<std::string>((uint64_t)(v6 + 7), a2), v7 + 8 == (void **)v8))
  {
    std::string::basic_string[abi:ne180100]<0>(a3, "");
  }
  else if (*(char *)(v8 + 79) < 0)
  {
    std::string::__init_copy_ctor_external(a3, *(const std::string::value_type **)(v8 + 56), *(void *)(v8 + 64));
  }
  else
  {
    long long v9 = *(_OWORD *)(v8 + 56);
    a3->__r_.__value_.__r.__words[2] = *(void *)(v8 + 72);
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = v9;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::destroy((uint64_t)v11, v12);
}

void sub_239A35A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::destroy((uint64_t)&a15, a16);
  _Unwind_Resume(a1);
}

uint64_t std::pair<std::string const,std::map<std::string,std::string>>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[14],0>(void *a1, char *a2, char *a3)
{
  BOOL v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v5 + 3, a3);
  return a1;
}

void sub_239A35B2C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::map<std::string,std::string>::map[abi:ne180100](uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  BOOL v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 48 * a3;
    do
    {
      std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::string> const&>((uint64_t **)a1, v4, a2, (long long *)a2);
      a2 += 6;
      v6 -= 48;
    }
    while (v6);
  }
  return a1;
}

void sub_239A35BB4(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::string> const&>(uint64_t **a1, uint64_t *a2, const void **a3, long long *a4)
{
  uint64_t v6 = std::__tree<std::string>::__find_equal<std::string>(a1, a2, &v12, &v11, a3);
  std::string::size_type v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__construct_node<std::pair<std::string const,std::string> const&>((uint64_t)a1, a4, (uint64_t)v10);
    std::__tree<std::string>::__insert_node_at(a1, (uint64_t)v12, v8, v10[0]);
    std::string::size_type v7 = v10[0];
    v10[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v10, 0);
  }
  return v7;
}

std::string *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__construct_node<std::pair<std::string const,std::string> const&>@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = std::pair<std::string const,std::string>::pair[abi:ne180100]((std::string *)(v6 + 32), a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_239A35CB8(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

std::string *std::pair<std::string const,std::string>::pair[abi:ne180100](std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  uint64_t v5 = this + 1;
  if (*((char *)a2 + 47) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v6 = *(long long *)((char *)a2 + 24);
    this[1].__r_.__value_.__r.__words[2] = *((void *)a2 + 5);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return this;
}

void sub_239A35D4C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *std::pair<std::string const,std::map<std::string,std::string>>::pair[abi:ne180100]<true,0>(std::string *this, long long *a2, const void ***a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  std::map<std::string,std::string>::map[abi:ne180100]((uint64_t *)&this[1], a3);
  return this;
}

void sub_239A35DC8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *std::map<std::string,std::string>::map[abi:ne180100](uint64_t *a1, const void ***a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  std::map<std::string,std::string>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<std::string,std::string>,std::__tree_node<std::__value_type<std::string,std::string>,void *> *,long>>>(a1, *a2, a2 + 1);
  return a1;
}

void sub_239A35E24(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *std::map<std::string,std::string>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<std::string,std::string>,std::__tree_node<std::__value_type<std::string,std::string>,void *> *,long>>>(uint64_t *result, const void **a2, const void ***a3)
{
  if (a2 != (const void **)a3)
  {
    long long v4 = a2;
    long long v5 = (uint64_t **)result;
    long long v6 = result + 1;
    do
    {
      uint64_t result = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::string> const&>(v5, v6, v4 + 4, (long long *)v4 + 2);
      std::string::size_type v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = (const void ***)v7;
          std::string::size_type v7 = (const void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          long long v4 = (const void **)v8;
        }
        while (!v9);
      }
      long long v4 = (const void **)v8;
    }
    while (v8 != a3);
  }
  return result;
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[14],0>(void *a1, char *a2)
{
  uint64_t v3 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v3 + 3, "dialog.String");
  return a1;
}

void sub_239A35F00(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[14],char const(&)[21],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "dateFormatter");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.DateFormatter");
  return a1;
}

void sub_239A35F5C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[5],char const(&)[14],0>(void *a1, char *a2, char *a3)
{
  long long v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v5 + 3, a3);
  return a1;
}

void sub_239A35FB0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[14],0>(void *a1, char *a2)
{
  uint64_t v3 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v3 + 3, "dialog.String");
  return a1;
}

void sub_239A36004(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[14],char const(&)[14],0>(void *a1, char *a2, char *a3)
{
  long long v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v5 + 3, a3);
  return a1;
}

void sub_239A36058(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[14],0>(void *a1, char *a2, char *a3)
{
  long long v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v5 + 3, a3);
  return a1;
}

void sub_239A360AC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[10],char const(&)[14],0>(void *a1, char *a2, char *a3)
{
  long long v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v5 + 3, a3);
  return a1;
}

void sub_239A36100(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[7],char const(&)[14],0>(void *a1, char *a2, char *a3)
{
  long long v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v5 + 3, a3);
  return a1;
}

void sub_239A36154(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[15],0>(void *a1, char *a2)
{
  uint64_t v3 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v3 + 3, "dialog.Boolean");
  return a1;
}

void sub_239A361A8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[4],char const(&)[14],0>(void *a1, char *a2, char *a3)
{
  long long v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v5 + 3, a3);
  return a1;
}

void sub_239A361FC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[7],char const(&)[23],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "values");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.LocationValue[]");
  return a1;
}

void sub_239A36258(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[19],char const(&)[14],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "administrativeArea");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.String");
  return a1;
}

void sub_239A362B4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[23],char const(&)[14],0>(void *a1, char *a2)
{
  uint64_t v3 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v3 + 3, "dialog.String");
  return a1;
}

void sub_239A36308(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[17],char const(&)[14],0>(void *a1, char *a2)
{
  uint64_t v3 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v3 + 3, "dialog.String");
  return a1;
}

void sub_239A3635C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[22],char const(&)[14],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "subAdministrativeArea");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.String");
  return a1;
}

void sub_239A363B8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[16],char const(&)[14],0>(void *a1, char *a2)
{
  uint64_t v3 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v3 + 3, "dialog.String");
  return a1;
}

void sub_239A3640C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[13],char const(&)[14],0>(void *a1, char *a2)
{
  uint64_t v3 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v3 + 3, "dialog.String");
  return a1;
}

void sub_239A36460(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[23],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "address");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.LocationAddress");
  return a1;
}

void sub_239A364BC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[11],char const(&)[24],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "childItems");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.MultiLevelItem[]");
  return a1;
}

void sub_239A36518(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[11],char const(&)[14],0>(void *a1, char *a2)
{
  uint64_t v3 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v3 + 3, "dialog.String");
  return a1;
}

void sub_239A3656C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[24],char const(&)[15],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "friendlyPhoneNumberName");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.Boolean");
  return a1;
}

void sub_239A365C8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[13],char const(&)[20],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "personHandle");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.PersonHandle");
  return a1;
}

void sub_239A36624(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[8],char const(&)[15],0>(void *a1, char *a2, char *a3)
{
  long long v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v5 + 3, a3);
  return a1;
}

void sub_239A36678(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[22],char const(&)[15],0>(void *a1, char *a2)
{
  uint64_t v3 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v3 + 3, "dialog.Boolean");
  return a1;
}

void sub_239A366CC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[20],char const(&)[15],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "useRelationshipName");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.Boolean");
  return a1;
}

void sub_239A36728(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[18],char const(&)[27],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "localizedAppNames");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "sirikit.LocalizedAppName[]");
  return a1;
}

void sub_239A36784(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[17],char const(&)[15],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "noPrimaryDisplay");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.Boolean");
  return a1;
}

void sub_239A367E0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[10],char const(&)[15],0>(void *a1, char *a2)
{
  uint64_t v3 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v3 + 3, "dialog.Boolean");
  return a1;
}

void sub_239A36834(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[16],char const(&)[15],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "isAuthenticated");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.Boolean");
  return a1;
}

void sub_239A36890(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[11],char const(&)[15],0>(void *a1, char *a2)
{
  uint64_t v3 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v3 + 3, "dialog.Boolean");
  return a1;
}

void sub_239A368E4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[21],char const(&)[15],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "isLockedWithPasscode");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.Boolean");
  return a1;
}

void sub_239A36940(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[15],0>(void *a1, char *a2)
{
  uint64_t v3 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v3 + 3, "dialog.Boolean");
  return a1;
}

void sub_239A36994(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[15],char const(&)[14],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "multiUserState");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "dialog.String");
  return a1;
}

void sub_239A369F0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[13],char const(&)[27],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "restrictions");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "sirikit.DeviceRestrictions");
  return a1;
}

void sub_239A36A4C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[12],char const(&)[19],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "aspectRatio");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "visual.AspectRatio");
  return a1;
}

void sub_239A36AA8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[10],char const(&)[17],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "imageData");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "visual.ImageData");
  return a1;
}

void sub_239A36B04(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[9],char const(&)[16],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "imageUrl");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "visual.ImageUrl");
  return a1;
}

void sub_239A36B60(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void std::map<std::string,std::map<std::string,std::string>>::map[abi:ne180100](const void **a1, uint64_t a2)
{
  qword_26AD867C8 = 0;
  qword_26AD867C0 = 0;
  qword_26AD867B8 = (uint64_t)&qword_26AD867C0;
  if (a2)
  {
    uint64_t v3 = 48 * a2;
    do
    {
      std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::map<std::string,std::string>> const&>((uint64_t)&qword_26AD867B8, &qword_26AD867C0, a1, (uint64_t)a1);
      a1 += 6;
      v3 -= 48;
    }
    while (v3);
  }
}

void sub_239A36BE8(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::map<std::string,std::string>> const&>(uint64_t a1, uint64_t *a2, const void **a3, uint64_t a4)
{
  uint64_t v8 = a1 + 8;
  if ((uint64_t *)(a1 + 8) != a2
    && !std::less<std::string>::operator()[abi:ne180100](a1 + 16, a3, (const void **)a2 + 4))
  {
    if (!std::less<std::string>::operator()[abi:ne180100](a1 + 16, (const void **)a2 + 4, a3))
    {
      int v24 = a2;
      uint64_t v25 = (const void **)a2;
      uint64_t v12 = &v24;
      if (a2) {
        return;
      }
      goto LABEL_31;
    }
    uint64_t v12 = (uint64_t **)(a2 + 1);
    uint64_t v11 = (uint64_t *)a2[1];
    if (v11)
    {
      long long v13 = (const void **)a2[1];
      do
      {
        std::string v14 = v13;
        long long v13 = (const void **)*v13;
      }
      while (v13);
    }
    else
    {
      unint64_t v17 = (const void **)a2;
      do
      {
        std::string v14 = (const void **)v17[2];
        BOOL v16 = *v14 == v17;
        unint64_t v17 = v14;
      }
      while (!v16);
    }
    if (v14 != (const void **)v8)
    {
      if (!std::less<std::string>::operator()[abi:ne180100](a1 + 16, a3, v14 + 4))
      {
LABEL_29:
        uint64_t v12 = (uint64_t **)std::__tree<std::string>::__find_equal<std::string>(a1, &v25, a3);
        goto LABEL_30;
      }
      uint64_t v11 = *v12;
    }
    if (v11)
    {
      uint64_t v25 = v14;
      uint64_t v12 = (uint64_t **)v14;
    }
    else
    {
      uint64_t v25 = (const void **)a2;
    }
LABEL_30:
    if (*v12) {
      return;
    }
    goto LABEL_31;
  }
  if (*(uint64_t **)a1 != a2)
  {
    BOOL v9 = (uint64_t *)*a2;
    if (*a2)
    {
      do
      {
        int v10 = v9;
        BOOL v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      uint64_t v15 = a2;
      do
      {
        int v10 = (uint64_t *)v15[2];
        BOOL v16 = *v10 == (void)v15;
        uint64_t v15 = v10;
      }
      while (v16);
    }
    if (std::less<std::string>::operator()[abi:ne180100](a1 + 16, (const void **)v10 + 4, a3)) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
  int v10 = a2;
LABEL_16:
  if (*a2)
  {
    uint64_t v25 = (const void **)v10;
    uint64_t v12 = (uint64_t **)(v10 + 1);
    goto LABEL_30;
  }
  uint64_t v25 = (const void **)a2;
  uint64_t v12 = (uint64_t **)a2;
LABEL_31:
  unint64_t v18 = (char *)operator new(0x50uLL);
  char v19 = (uint64_t *)v18;
  v22[0] = v18;
  v22[1] = v8;
  char v23 = 0;
  if (*(char *)(a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v18 + 32), *(const std::string::value_type **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *((_OWORD *)v18 + 2) = *(_OWORD *)a4;
    *((void *)v18 + 6) = *(void *)(a4 + 16);
  }
  std::map<std::string,std::string>::map[abi:ne180100](v19 + 7, (const void ***)(a4 + 24));
  char v23 = 1;
  uint64_t v20 = (uint64_t)v25;
  *char v19 = 0;
  v19[1] = 0;
  v19[2] = v20;
  *uint64_t v12 = v19;
  uint64_t v21 = **(void **)a1;
  if (v21)
  {
    *(void *)a1 = v21;
    char v19 = *v12;
  }
  std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 8), v19);
  ++*(void *)(a1 + 16);
  v22[0] = 0;
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::map<std::string,std::string>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::map<std::string,std::string>>,void *>>>>::reset[abi:ne180100]((uint64_t)v22);
}

void sub_239A36E38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::map<std::string,std::string>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::map<std::string,std::string>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::map<std::string,std::string>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::map<std::string,std::string>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::map<std::string,std::string>>,0>((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::map<std::string,std::string>>,0>(uint64_t a1)
{
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a1 + 24, *(void **)(a1 + 32));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::string,std::map<std::string,std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::map<std::string,std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::map<std::string,std::string>>>>::destroy(a1, a2[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::map<std::string,std::string>>,0>((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void std::string::__throw_out_of_range[abi:ne180100]()
{
}

void std::__throw_out_of_range[abi:ne180100](const char *a1)
{
  exceptiouint64_t n = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::out_of_range::out_of_range[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_264DB7520, MEMORY[0x263F8C068]);
}

void sub_239A36FCC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::out_of_range::out_of_range[abi:ne180100](std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C390] + 16);
  return result;
}

double siri::intelligence::ResponseBase::ResponseBase(siri::intelligence::ResponseBase *this)
{
  *(void *)this = &unk_26ED272F8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 69) = 0u;
  *((_DWORD *)this + 22) = 1;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 12) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26ED272F8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 69) = 0u;
  *((_DWORD *)this + 22) = 1;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 12) = 0;
  return result;
}

std::string *siri::intelligence::ResponseBase::SetId(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 8), a2);
}

void siri::intelligence::ResponseBase::GetId(siri::intelligence::ResponseBase *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 31) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 1), *((void *)this + 2));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 8);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 3);
  }
}

std::string *siri::intelligence::ResponseBase::SetInputGroup(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 32), a2);
}

void siri::intelligence::ResponseBase::GetInputGroup(siri::intelligence::ResponseBase *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 55) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 4), *((void *)this + 5));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *((_OWORD *)this + 2);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 6);
  }
}

std::string *siri::intelligence::ResponseBase::SetCondition(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 56), a2);
}

void siri::intelligence::ResponseBase::GetCondition(siri::intelligence::ResponseBase *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 79) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 7), *((void *)this + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 56);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 9);
  }
}

uint64_t siri::intelligence::ResponseBase::SetRepeat(uint64_t this, char a2)
{
  *(unsigned char *)(this + 84) = a2;
  return this;
}

uint64_t siri::intelligence::ResponseBase::SetPriority(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

uint64_t siri::intelligence::ResponseBase::GetPriority(siri::intelligence::ResponseBase *this)
{
  return *((unsigned int *)this + 22);
}

uint64_t siri::intelligence::ResponseBase::IsRepeat(siri::intelligence::ResponseBase *this)
{
  return *((unsigned __int8 *)this + 84);
}

void siri::intelligence::ResponseBase::SetNextIds(std::vector<std::string> *a1, uint64_t a2)
{
  uint64_t v2 = a1 + 4;
  if (v2 != (std::vector<std::string> *)a2) {
    std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string*,std::string*>(v2, *(std::string **)a2, *(long long **)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3));
  }
}

uint64_t siri::intelligence::ResponseBase::GetNextIds(siri::intelligence::ResponseBase *this)
{
  return (uint64_t)this + 96;
}

uint64_t siri::intelligence::ResponseBase::SetSelectionMode(uint64_t result, int a2)
{
  *(_DWORD *)(result + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return result;
}

uint64_t siri::intelligence::ResponseBase::GetSelectionMode(siri::intelligence::ResponseBase *this)
{
  return *((unsigned int *)this + 20);
}

BOOL siri::intelligence::ResponseBase::IsValid(siri::intelligence::ResponseBase *this)
{
  if (*((char *)this + 31) < 0) {
    uint64_t v1 = *((void *)this + 2);
  }
  else {
    uint64_t v1 = *((unsigned __int8 *)this + 31);
  }
  return v1 != 0;
}

void std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string*,std::string*>(std::vector<std::string> *this, std::string *__str, long long *a3, unint64_t a4)
{
  p_end_cap = &this->__end_cap_;
  begiuint64_t n = this->__begin_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_cap_.__value_ - (char *)this->__begin_) >> 3) < a4)
  {
    std::vector<std::string>::__vdeallocate(this);
    if (a4 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0x5555555555555556 * (((char *)this->__end_cap_.__value_ - (char *)this->__begin_) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_cap_.__value_ - (char *)this->__begin_) >> 3) >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v10;
    }
    std::vector<std::string>::__vallocate[abi:ne180100](this, v11);
    uint64_t v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string*,std::string*,std::string*>((uint64_t)p_end_cap, (long long *)__str, a3, this->__end_);
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_ - (char *)begin) >> 3) < a4)
  {
    long long v13 = (std::string *)((char *)__str + 8 * (((char *)this->__end_ - (char *)begin) >> 3));
    std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__copy_loop<std::_ClassicAlgPolicy>,std::__copy_trivial>,std::string *,std::string *,std::string *,0>(__str, v13, begin);
    uint64_t v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string*,std::string*,std::string*>((uint64_t)p_end_cap, (long long *)v13, a3, this->__end_);
LABEL_11:
    this->__end_ = v12;
    return;
  }
  std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__copy_loop<std::_ClassicAlgPolicy>,std::__copy_trivial>,std::string *,std::string *,std::string *,0>(__str, (std::string *)a3, begin);
  uint64_t v15 = v14;
  std::vector<std::string>::pointer end = this->__end_;
  if (end != v14)
  {
    do
    {
      if (SHIBYTE(end[-1].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(end[-1].__r_.__value_.__l.__data_);
      }
      --end;
    }
    while (end != v15);
  }
  this->__end_ = v15;
}

void sub_239A37330(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_239A37338(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<std::string>::__vdeallocate(std::vector<std::string> *this)
{
  if (this->__begin_)
  {
    std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this);
    operator delete(this->__begin_);
    this->__begin_ = 0;
    this->__end_ = 0;
    this->__end_cap_.__value_ = 0;
  }
}

std::string *std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__copy_loop<std::_ClassicAlgPolicy>,std::__copy_trivial>,std::string *,std::string *,std::string *,0>(std::string *__str, std::string *a2, std::string *this)
{
  long long v4 = __str;
  if (__str != a2)
  {
    do
      std::string::operator=(this++, v4++);
    while (v4 != a2);
    return a2;
  }
  return (std::string *)v4;
}

double siri::intelligence::DirectInvocation::DirectInvocation(siri::intelligence::DirectInvocation *this)
{
  *((void *)this + 4) = 0;
  double result = 0.0;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  return result;
}

{
  double result;

  *((void *)this + 4) = 0;
  double result = 0.0;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  return result;
}

void siri::intelligence::DirectInvocation::GetId(siri::intelligence::DirectInvocation *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)this, *((void *)this + 1));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)this;
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 2);
  }
}

uint64_t siri::intelligence::DirectInvocation::GetUserData@<X0>(uint64_t this@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(this + 32);
  *a2 = *(void *)(this + 24);
  a2[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return this;
}

void siri::intelligence::DirectInvocation::SetUserData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  long long v4 = *(std::__shared_weak_count **)(a1 + 32);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v2;
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

uint64_t siri::intelligence::IsiOS(siri::intelligence *this)
{
  return 1;
}

uint64_t siri::intelligence::IsMacOS(siri::intelligence *this)
{
  return 0;
}

uint64_t siri::intelligence::IsInternal(siri::intelligence *this)
{
  return os_variant_has_internal_diagnostics();
}

uint64_t siri::intelligence::IsSeed(siri::intelligence *this)
{
  return 0;
}

uint64_t siri::intelligence::IsProduction(siri::intelligence *this)
{
  return os_variant_has_internal_diagnostics() ^ 1;
}

siri::intelligence::ReferenceResponse *siri::intelligence::ReferenceResponse::ReferenceResponse(siri::intelligence::ReferenceResponse *this)
{
  *(_OWORD *)((char *)this + 69) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_DWORD *)this + 22) = 1;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 12) = 0;
  *(void *)this = &unk_26ED27640;
  uint64_t v2 = (char *)operator new(0x38uLL);
  *((void *)v2 + 1) = 0;
  *((void *)v2 + 2) = 0;
  *(void *)uint64_t v2 = &unk_26ED27678;
  *(_OWORD *)(v2 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  *((void *)this + 15) = v2 + 24;
  *((void *)this + 16) = v2;
  MEMORY[0x23ECAA8E0](v2 + 24, "");
  *(unsigned char *)(*((void *)this + 15) + 24) = 1;
  return this;
}

void sub_239A37578(_Unwind_Exception *a1)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 128);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  siri::intelligence::ResponseBase::~ResponseBase((void **)v1);
  _Unwind_Resume(a1);
}

std::string *siri::intelligence::ReferenceResponse::SetReferenceId(uint64_t a1, const std::string *a2)
{
  return std::string::operator=(*(std::string **)(a1 + 120), a2);
}

uint64_t siri::intelligence::ReferenceResponse::GetReferenceId(siri::intelligence::ReferenceResponse *this)
{
  return *((void *)this + 15);
}

uint64_t siri::intelligence::ReferenceResponse::SetReturnAfterFinished(uint64_t this, char a2)
{
  *(unsigned char *)(*(void *)(this + 120) + 24) = a2;
  return this;
}

uint64_t siri::intelligence::ReferenceResponse::GetReturnAfterFinished(siri::intelligence::ReferenceResponse *this)
{
  return *(unsigned __int8 *)(*((void *)this + 15) + 24);
}

void siri::intelligence::ReferenceResponse::~ReferenceResponse(siri::intelligence::ReferenceResponse *this)
{
  *(void *)this = &unk_26ED27640;
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 16);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  siri::intelligence::ResponseBase::~ResponseBase((void **)this);
}

{
  std::__shared_weak_count *v2;
  uint64_t vars8;

  *(void *)this = &unk_26ED27640;
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 16);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  siri::intelligence::ResponseBase::~ResponseBase((void **)this);

  JUMPOUT(0x23ECAACC0);
}

void std::__shared_ptr_emplace<siri::intelligence::ReferenceResponse::Impl>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26ED27678;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<siri::intelligence::ReferenceResponse::Impl>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26ED27678;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x23ECAACC0);
}

void std::__shared_ptr_emplace<siri::intelligence::ReferenceResponse::Impl>::__on_zero_shared(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
}

BOOL YAML::IsNullString(unsigned __int8 **a1)
{
  if (*((char *)a1 + 23) < 0)
  {
    uint64_t v2 = a1[1];
    if (!v2) {
      return 1;
    }
    if (v2 != (unsigned __int8 *)1)
    {
      if (v2 == (unsigned __int8 *)4)
      {
        a1 = (unsigned __int8 **)*a1;
        if (*(_DWORD *)a1 != 1819047278 && *(_DWORD *)a1 != 1819047246) {
          return *(_DWORD *)a1 == 1280070990;
        }
        return 1;
      }
      return 0;
    }
    int v5 = **a1;
  }
  else
  {
    int v1 = *((unsigned __int8 *)a1 + 23);
    if (!*((unsigned char *)a1 + 23)) {
      return 1;
    }
    if (v1 != 1)
    {
      if (v1 == 4)
      {
        if ((*(_DWORD *)a1 | 0x20) != 0x6C6C756E) {
          return *(_DWORD *)a1 == 1280070990;
        }
        return 1;
      }
      return 0;
    }
    int v5 = *(unsigned __int8 *)a1;
  }
  return v5 == 126;
}

void sub_239A37884(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

siri::intelligence::DecisionInfo *siri::intelligence::DecisionInfo::DecisionInfo(siri::intelligence::DecisionInfo *this)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(this, "");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "");
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  return this;
}

void sub_239A379A8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::DecisionInfo::GetInputId(siri::intelligence::DecisionInfo *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)this, *((void *)this + 1));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)this;
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 2);
  }
}

uint64_t siri::intelligence::DecisionInfo::SetInputType(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t siri::intelligence::DecisionInfo::GetInputType(siri::intelligence::DecisionInfo *this)
{
  return *((unsigned int *)this + 12);
}

void *siri::intelligence::DecisionInfo::GetInputTypeString@<X0>(siri::intelligence::DecisionInfo *this@<X0>, void *a2@<X8>)
{
  int v2 = *((_DWORD *)this + 12);
  uint64_t v3 = "NONE";
  if (v2 == 2) {
    uint64_t v3 = "FALLBACK";
  }
  if (v2 == 1) {
    long long v4 = "INTENT";
  }
  else {
    long long v4 = (char *)v3;
  }
  return std::string::basic_string[abi:ne180100]<0>(a2, v4);
}

void siri::intelligence::DecisionInfo::GetInputGroupId(siri::intelligence::DecisionInfo *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 47) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 3), *((void *)this + 4));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 24);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 5);
  }
}

std::string *siri::intelligence::DecisionInfo::SetInputGroupId(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 1, a2);
}

uint64_t siri::intelligence::DecisionInfo::SetMatchScope(uint64_t result, int a2)
{
  *(_DWORD *)(result + 52) = a2;
  return result;
}

uint64_t siri::intelligence::DecisionInfo::GetMatchScope(siri::intelligence::DecisionInfo *this)
{
  return *((unsigned int *)this + 13);
}

void *siri::intelligence::DecisionInfo::GetMatchScopeString@<X0>(siri::intelligence::DecisionInfo *this@<X0>, void *a2@<X8>)
{
  unsigned int v4 = *((_DWORD *)this + 13) - 1;
  if (v4 > 2) {
    int v5 = "LOCAL_SCOPE";
  }
  else {
    int v5 = off_264DB75A8[v4];
  }
  return std::string::basic_string[abi:ne180100]<0>(a2, v5);
}

void siri::intelligence::DecisionInfo::GetIntentId(siri::intelligence::DecisionInfo *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 79) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 7), *((void *)this + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 56);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 9);
  }
}

std::string *siri::intelligence::DecisionInfo::SetIntentId(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 56), a2);
}

void sub_239A37D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void (**a18)(void), void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  IEDefer::~IEDefer(&a18);
  uint64_t v27 = a16;
  a16 = 0;
  if (v27) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100]((uint64_t)&a16, v27);
  }
  uint64_t v28 = *(void *)(v25 - 40);
  *(void *)(v25 - 48) = &unk_26ED2A490;
  *(void *)(v25 - 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  if (v28) {
    std::default_delete<siri::intelligence::Timer::Impl>::operator()[abi:ne180100](v25 - 40, v28);
  }

  _Unwind_Resume(a1);
}

void siri::intelligence::Configuration::GetPathFromFlowId(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(v8, "flow");
  std::string::basic_string[abi:ne180100]<0>(__p, ".flowfamily");
  siri::intelligence::GetPathFromId(a1, (uint64_t)v8, (uint64_t)__p, a2, a3);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  if (v9 < 0) {
    operator delete(v8[0]);
  }
}

void sub_239A37F80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::GetPathFromId(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  memset(&v21, 0, sizeof(v21));
  siri::intelligence::StringSplit(a1, "#", (uint64_t *)&v21, &v22);
  v20.__r_.__value_.__r.__words[0] = (std::string::size_type)&v21;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v20);
  begiuint64_t n = v22.__begin_;
  std::vector<std::string>::pointer end = v22.__end_;
  if (v22.__begin_ == v22.__end_)
  {
    if (*(char *)(a2 + 23) >= 0) {
      long long v13 = (const std::string::value_type *)a2;
    }
    else {
      long long v13 = *(const std::string::value_type **)a2;
    }
    if ((a1[23] & 0x80u) == 0) {
      std::string v14 = (uint64_t *)a1;
    }
    else {
      std::string v14 = *(uint64_t **)a1;
    }
    siri::intelligence::Log::Error((siri::intelligence::Log *)"Illegal %s ID encountered: '%s'", v10, v13, v14);
    std::string::basic_string[abi:ne180100]<0>(a5, "");
  }
  else
  {
    if (*(char *)(a2 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&v21, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
      begiuint64_t n = v22.__begin_;
      std::vector<std::string>::pointer end = v22.__end_;
    }
    else
    {
      std::string v21 = *(std::string *)a2;
    }
    if (0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)begin) >> 3) >= 2)
    {
      siri::intelligence::AddExtension((uint64_t)begin, a3, (uint64_t)__p);
      siri::intelligence::JoinPath((uint64_t)&v21, (uint64_t)__p, (uint64_t)&v20);
      if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v21.__r_.__value_.__l.__data_);
      }
      std::string v21 = v20;
      *((unsigned char *)&v20.__r_.__value_.__s + 23) = 0;
      v20.__r_.__value_.__s.__data_[0] = 0;
      if (v19 < 0) {
        operator delete(__p[0]);
      }
      std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::string *,std::string *,std::string *>((uint64_t)&v20, (long long *)&v22.__begin_[1], (long long *)v22.__end_, (uint64_t)v22.__begin_);
      BOOL v16 = v15;
      for (std::vector<std::string>::pointer i = v22.__end_; i != v16; --i)
      {
        if (SHIBYTE(i[-1].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(i[-1].__r_.__value_.__l.__data_);
        }
      }
      v22.__end_ = v16;
      begiuint64_t n = v22.__begin_;
    }
    siri::intelligence::AddExtension((uint64_t)begin, a4, (uint64_t)&v20);
    siri::intelligence::JoinPath((uint64_t)&v21, (uint64_t)&v20, (uint64_t)a5);
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v20.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
  }
  v21.__r_.__value_.__r.__words[0] = (std::string::size_type)&v22;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v21);
}

void sub_239A381A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  std::string __p = (void *)(v28 - 72);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void siri::intelligence::Configuration::GetFlowIdFromPath(const std::string *a1@<X0>, uint64_t a2@<X8>)
{
  std::string v14[2] = *(void ***)MEMORY[0x263EF8340];
  siri::intelligence::StringTrim("/", a1, &__p);
  memset(&v11, 0, sizeof(v11));
  siri::intelligence::StringSplit((unsigned __int8 *)&__p, "/", (uint64_t *)&v11, &v13);
  v14[0] = (void **)&v11;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](v14);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v13.__begin_ == v13.__end_)
  {
    std::string::basic_string[abi:ne180100]<0>((void *)a2, "");
  }
  else
  {
    siri::intelligence::RemoveExtension((uint64_t)&v13.__end_[-1], (std::string *)a2);
    if (0xAAAAAAAAAAAAAAABLL * (((char *)v13.__end_ - (char *)v13.__begin_) >> 3) >= 2)
    {
      siri::intelligence::RemoveExtension((uint64_t)&v13.__begin_[-2] + 8 * (((char *)v13.__end_ - (char *)v13.__begin_) >> 3), &v11);
      uint64_t v3 = std::string::append(&v11, "#");
      long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v3->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v4;
      v3->__r_.__value_.__l.__size_ = 0;
      v3->__r_.__value_.__r.__words[2] = 0;
      v3->__r_.__value_.__r.__words[0] = 0;
      int v5 = *(char *)(a2 + 23);
      if (v5 >= 0) {
        long long v6 = (const std::string::value_type *)a2;
      }
      else {
        long long v6 = *(const std::string::value_type **)a2;
      }
      if (v5 >= 0) {
        std::string::size_type v7 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        std::string::size_type v7 = *(void *)(a2 + 8);
      }
      uint64_t v8 = std::string::append(&__p, v6, v7);
      std::string::size_type v9 = v8->__r_.__value_.__r.__words[0];
      v14[0] = (void **)v8->__r_.__value_.__l.__size_;
      *(void ***)((char *)v14 + 7) = *(void ***)((char *)&v8->__r_.__value_.__r.__words[1] + 7);
      char v10 = HIBYTE(v8->__r_.__value_.__r.__words[2]);
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      if (*(char *)(a2 + 23) < 0) {
        operator delete(*(void **)a2);
      }
      *(void *)a2 = v9;
      *(void ***)(a2 + 8) = v14[0];
      *(void ***)(a2 + 15) = *(void ***)((char *)v14 + 7);
      *(unsigned char *)(a2 + 23) = v10;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v11.__r_.__value_.__l.__data_);
      }
    }
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v13;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
}

void sub_239A383EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,char a23)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (*(char *)(v23 + 23) < 0) {
    operator delete(*(void **)v23);
  }
  std::string __p = &a23;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void siri::intelligence::Configuration::GetPathFromCatId(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(v8, "dialog");
  std::string::basic_string[abi:ne180100]<0>(v6, ".catfamily");
  std::string::basic_string[abi:ne180100]<0>(__p, ".cat");
  siri::intelligence::GetPathFromId(a1, (uint64_t)v8, (uint64_t)v6, (uint64_t)__p, a2);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  if (v7 < 0) {
    operator delete(v6[0]);
  }
  if (v9 < 0) {
    operator delete(v8[0]);
  }
}

void sub_239A38520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::Configuration::GetPathFromPatternId(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(v8, "pattern");
  std::string::basic_string[abi:ne180100]<0>(__p, ".patternfamily");
  siri::intelligence::GetPathFromId(a1, (uint64_t)v8, (uint64_t)__p, a2, a3);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  if (v9 < 0) {
    operator delete(v8[0]);
  }
}

void sub_239A385FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::Configuration::GetTemplateDirFromPath(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v15, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v15 = *(std::string *)a1;
  }
  std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
  if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v15.__r_.__value_.__l.__size_;
  }
  if (!size)
  {
LABEL_55:
    *(std::string *)a2 = v15;
    return;
  }
  while (1)
  {
    siri::intelligence::BaseName((uint64_t)&v15, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      if (__p.__r_.__value_.__l.__size_ == 9)
      {
        BOOL v6 = *(void *)__p.__r_.__value_.__l.__data_ != 0x6574616C706D6554
          || *(unsigned char *)(__p.__r_.__value_.__r.__words[0] + 8) != 115;
        operator delete(__p.__r_.__value_.__l.__data_);
        if (!v6) {
          goto LABEL_55;
        }
      }
      else
      {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) == 9 {
           && __p.__r_.__value_.__r.__words[0] == 0x6574616C706D6554
    }
           && __p.__r_.__value_.__s.__data_[8] == 115)
    {
      goto LABEL_55;
    }
    siri::intelligence::PopPath((uint64_t)&v15, (std::string *)a2);
    siri::intelligence::BaseName((uint64_t)&v15, &__p);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      if (HIBYTE(__p.__r_.__value_.__r.__words[2]) == 4)
      {
        if (LODWORD(__p.__r_.__value_.__l.__data_) == 2003790950) {
          goto LABEL_57;
        }
        goto LABEL_42;
      }
      if (HIBYTE(__p.__r_.__value_.__r.__words[2]) != 6) {
        goto LABEL_42;
      }
      p_p = &__p;
LABEL_32:
      int data = (int)p_p->__r_.__value_.__l.__data_;
      int v9 = WORD2(p_p->__r_.__value_.__r.__words[0]);
      if (data == 1818323300 && v9 == 26479)
      {
        int v11 = 0;
        if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) == 0) {
          goto LABEL_43;
        }
LABEL_45:
        uint64_t v12 = (void *)__p.__r_.__value_.__r.__words[0];
        goto LABEL_46;
      }
LABEL_42:
      std::string::operator=(&v15, (const std::string *)a2);
      int v11 = 1;
      if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) == 0)
      {
LABEL_43:
        if (!v11) {
          break;
        }
        goto LABEL_47;
      }
      goto LABEL_45;
    }
    if (__p.__r_.__value_.__l.__size_ != 4)
    {
      if (__p.__r_.__value_.__l.__size_ != 6) {
        goto LABEL_42;
      }
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      goto LABEL_32;
    }
    uint64_t v12 = (void *)__p.__r_.__value_.__r.__words[0];
    if (*(_DWORD *)__p.__r_.__value_.__l.__data_ != 2003790950) {
      goto LABEL_42;
    }
    int v11 = 0;
LABEL_46:
    operator delete(v12);
    if (!v11) {
      break;
    }
LABEL_47:
    if ((*(char *)(a2 + 23) & 0x80000000) == 0) {
      break;
    }
    operator delete(*(void **)a2);
LABEL_50:
    std::string::size_type v13 = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v13 = v15.__r_.__value_.__l.__size_;
    }
    if (!v13) {
      goto LABEL_55;
    }
  }
  if (v11) {
    goto LABEL_50;
  }
LABEL_57:
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
}

void sub_239A3885C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 + 23) < 0) {
    operator delete(*(void **)v21);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

long long *std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::string *,std::string *,std::string *>(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  char v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (*(char *)(a4 + 23) < 0) {
        operator delete(*(void **)a4);
      }
      long long v7 = *v5;
      *(void *)(a4 + 16) = *((void *)v5 + 2);
      *(_OWORD *)a4 = v7;
      a4 += 24;
      *((unsigned char *)v5 + 23) = 0;
      *(unsigned char *)char v5 = 0;
      char v5 = (long long *)((char *)v5 + 24);
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

void YAML::detail::memory_holder::merge(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t **)a1;
  if (v3 != *(uint64_t **)a2)
  {
    std::set<std::shared_ptr<YAML::detail::node>>::insert[abi:ne180100]<std::__tree_const_iterator<std::shared_ptr<YAML::detail::node>,std::__tree_node<std::shared_ptr<YAML::detail::node>,void *> *,long>>(v3, **(void ***)a2, (void *)(*(void *)a2 + 8));
    BOOL v6 = *(uint64_t **)a1;
    uint64_t v5 = *(void *)(a1 + 8);
    if (v5) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
    }
    long long v7 = *(std::__shared_weak_count **)(a2 + 8);
    *(void *)a2 = v6;
    *(void *)(a2 + 8) = v5;
    if (v7)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v7);
    }
  }
}

uint64_t *YAML::detail::memory::merge(uint64_t *a1, uint64_t a2)
{
  return std::set<std::shared_ptr<YAML::detail::node>>::insert[abi:ne180100]<std::__tree_const_iterator<std::shared_ptr<YAML::detail::node>,std::__tree_node<std::shared_ptr<YAML::detail::node>,void *> *,long>>(a1, *(void **)a2, (void *)(a2 + 8));
}

void YAML::detail::memory::create_node(YAML::detail::memory *this)
{
}

void sub_239A38A18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *std::set<std::shared_ptr<YAML::detail::node>>::insert[abi:ne180100]<std::__tree_const_iterator<std::shared_ptr<YAML::detail::node>,std::__tree_node<std::shared_ptr<YAML::detail::node>,void *> *,long>>(uint64_t *result, void *a2, void *a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    BOOL v6 = result + 1;
    do
    {
      double result = std::__tree<std::shared_ptr<YAML::detail::node>>::__emplace_hint_unique_key_args<std::shared_ptr<YAML::detail::node>,std::shared_ptr<YAML::detail::node> const&>(v5, v6, v4 + 4, v4 + 4);
      long long v7 = (void *)v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          long long v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (void *)v4[2];
          BOOL v9 = *v8 == (void)v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

void YAML::detail::node::node(YAML::detail::node *this)
{
}

void sub_239A38B38(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x20C40A4A59CD2);
  _Unwind_Resume(a1);
}

void YAML::detail::node_ref::node_ref(YAML::detail::node_ref *this)
{
}

void std::shared_ptr<YAML::detail::node_data>::shared_ptr[abi:ne180100]<YAML::detail::node_data,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_239A38C64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  a10 = 0;
  if (v10) {
    std::default_delete<YAML::detail::node_data>::operator()[abi:ne180100]((uint64_t)&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void std::__shared_ptr_pointer<YAML::detail::node_data *,std::shared_ptr<YAML::detail::node_data>::__shared_ptr_default_delete<YAML::detail::node_data,YAML::detail::node_data>,std::allocator<YAML::detail::node_data>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x23ECAACC0);
}

void std::__shared_ptr_pointer<YAML::detail::node_data *,std::shared_ptr<YAML::detail::node_data>::__shared_ptr_default_delete<YAML::detail::node_data,YAML::detail::node_data>,std::allocator<YAML::detail::node_data>>::__on_zero_shared(uint64_t a1)
{
}

uint64_t std::__shared_ptr_pointer<YAML::detail::node_data *,std::shared_ptr<YAML::detail::node_data>::__shared_ptr_default_delete<YAML::detail::node_data,YAML::detail::node_data>,std::allocator<YAML::detail::node_data>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::default_delete<YAML::detail::node_data>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    std::__list_imp<std::pair<YAML::detail::node *,YAML::detail::node *>>::clear((void *)(a2 + 136));
    uint64_t v3 = *(void **)(a2 + 112);
    if (v3)
    {
      *(void *)(a2 + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v3;
      operator delete(v3);
    }
    long long v4 = *(void **)(a2 + 80);
    if (v4)
    {
      *(void *)(a2 + 88) = v4;
      operator delete(v4);
    }
    if (*(char *)(a2 + 79) < 0) {
      operator delete(*(void **)(a2 + 56));
    }
    if (*(char *)(a2 + 47) < 0) {
      operator delete(*(void **)(a2 + 24));
    }
    JUMPOUT(0x23ECAACC0);
  }
}

void *std::__list_imp<std::pair<YAML::detail::node *,YAML::detail::node *>>::clear(void *result)
{
  if (result[2])
  {
    uint64_t v1 = result;
    double result = (void *)result[1];
    uint64_t v2 = *v1;
    uint64_t v3 = *result;
    *(void *)(v3 + 8) = *(void *)(*v1 + 8);
    **(void **)(v2 + 8) = v3;
    v1[2] = 0;
    if (result != v1)
    {
      do
      {
        long long v4 = (void *)result[1];
        operator delete(result);
        double result = v4;
      }
      while (v4 != v1);
    }
  }
  return result;
}

void std::shared_ptr<YAML::detail::node_ref>::shared_ptr[abi:ne180100]<YAML::detail::node_ref,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_239A38E74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  a10 = 0;
  if (v10) {
    std::default_delete<YAML::detail::memory_holder>::operator()[abi:ne180100]((uint64_t)&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void std::__shared_ptr_pointer<YAML::detail::node_ref *,std::shared_ptr<YAML::detail::node_ref>::__shared_ptr_default_delete<YAML::detail::node_ref,YAML::detail::node_ref>,std::allocator<YAML::detail::node_ref>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x23ECAACC0);
}

void std::__shared_ptr_pointer<YAML::detail::node_ref *,std::shared_ptr<YAML::detail::node_ref>::__shared_ptr_default_delete<YAML::detail::node_ref,YAML::detail::node_ref>,std::allocator<YAML::detail::node_ref>>::__on_zero_shared(uint64_t a1)
{
}

uint64_t std::__shared_ptr_pointer<YAML::detail::node_ref *,std::shared_ptr<YAML::detail::node_ref>::__shared_ptr_default_delete<YAML::detail::node_ref,YAML::detail::node_ref>,std::allocator<YAML::detail::node_ref>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::shared_ptr<YAML::detail::node>::shared_ptr[abi:ne180100]<YAML::detail::node,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_239A38F8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  a10 = 0;
  if (v10) {
    std::default_delete<YAML::detail::node>::operator()[abi:ne180100]((uint64_t)&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void std::__shared_ptr_pointer<YAML::detail::node *,std::shared_ptr<YAML::detail::node>::__shared_ptr_default_delete<YAML::detail::node,YAML::detail::node>,std::allocator<YAML::detail::node>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x23ECAACC0);
}

void std::__shared_ptr_pointer<YAML::detail::node *,std::shared_ptr<YAML::detail::node>::__shared_ptr_default_delete<YAML::detail::node,YAML::detail::node>,std::allocator<YAML::detail::node>>::__on_zero_shared(uint64_t a1)
{
}

uint64_t std::__shared_ptr_pointer<YAML::detail::node *,std::shared_ptr<YAML::detail::node>::__shared_ptr_default_delete<YAML::detail::node,YAML::detail::node>,std::allocator<YAML::detail::node>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::default_delete<YAML::detail::node>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<YAML::detail::node_ref const*,int>,std::__map_value_compare<YAML::detail::node_ref const*,std::__value_type<YAML::detail::node_ref const*,int>,std::less<YAML::detail::node_ref const*>,true>,std::allocator<std::__value_type<YAML::detail::node_ref const*,int>>>::destroy(a2 + 16, *(void **)(a2 + 24));
    uint64_t v3 = *(std::__shared_weak_count **)(a2 + 8);
    if (v3) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    }
    JUMPOUT(0x23ECAACC0);
  }
}

uint64_t *std::__tree<std::shared_ptr<YAML::detail::node>>::__emplace_unique_key_args<std::shared_ptr<YAML::detail::node>,std::shared_ptr<YAML::detail::node> const&>(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  BOOL v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        BOOL v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        return (uint64_t *)v8;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        BOOL v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = (uint64_t *)operator new(0x30uLL);
    uint64_t v11 = a3[1];
    v10[4] = *a3;
    v10[5] = v11;
    if (v11) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
    }
    std::__tree<std::string>::__insert_node_at(a1, (uint64_t)v8, v6, v10);
  }
  return v10;
}

uint64_t *std::__tree<std::shared_ptr<YAML::detail::node>>::__emplace_hint_unique_key_args<std::shared_ptr<YAML::detail::node>,std::shared_ptr<YAML::detail::node> const&>(uint64_t **a1, void *a2, unint64_t *a3, uint64_t *a4)
{
  BOOL v6 = (uint64_t **)std::__tree<std::shared_ptr<YAML::detail::node>>::__find_equal<std::shared_ptr<YAML::detail::node>>(a1, a2, &v12, &v11, a3);
  unint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    unint64_t v7 = (uint64_t *)operator new(0x30uLL);
    uint64_t v9 = a4[1];
    v7[4] = *a4;
    v7[5] = v9;
    if (v9) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
    }
    std::__tree<std::string>::__insert_node_at(a1, v12, v8, v7);
  }
  return v7;
}

void *std::__tree<std::shared_ptr<YAML::detail::node>>::__find_equal<std::shared_ptr<YAML::detail::node>>(void *a1, void *a2, void *a3, void *a4, unint64_t *a5)
{
  uint64_t v5 = a1 + 1;
  if (a1 + 1 == a2 || (v6 = *a5, unint64_t v7 = a2[4], *a5 < v7))
  {
    uint64_t v8 = *a2;
    if ((void *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      uint64_t v9 = (void *)*a2;
      do
      {
        uint64_t v10 = v9;
        uint64_t v9 = (void *)v9[1];
      }
      while (v9);
    }
    else
    {
      std::string::size_type v13 = a2;
      do
      {
        uint64_t v10 = (void *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        std::string::size_type v13 = v10;
      }
      while (v14);
    }
    unint64_t v15 = *a5;
    if (v10[4] < *a5) {
      goto LABEL_17;
    }
    BOOL v16 = (void *)*v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          unint64_t v17 = v16;
          unint64_t v18 = v16[4];
          if (v15 >= v18) {
            break;
          }
          BOOL v16 = (void *)*v17;
          uint64_t v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }
        if (v18 >= v15) {
          break;
        }
        uint64_t v5 = v17 + 1;
        BOOL v16 = (void *)v17[1];
      }
      while (v16);
    }
    else
    {
      unint64_t v17 = a1 + 1;
    }
LABEL_29:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = a2;
    return a4;
  }
  uint64_t v11 = a2[1];
  if (v11)
  {
    uint64_t v12 = (void *)a2[1];
    do
    {
      a4 = v12;
      uint64_t v12 = (void *)*v12;
    }
    while (v12);
  }
  else
  {
    char v19 = a2;
    do
    {
      a4 = (void *)v19[2];
      BOOL v14 = *a4 == (void)v19;
      char v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= a4[4])
  {
    std::string v20 = (void *)*v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          uint64_t v21 = v20;
          unint64_t v22 = v20[4];
          if (v6 >= v22) {
            break;
          }
          std::string v20 = (void *)*v21;
          uint64_t v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }
        if (v22 >= v6) {
          break;
        }
        uint64_t v5 = v21 + 1;
        std::string v20 = (void *)v21[1];
      }
      while (v20);
    }
    else
    {
      uint64_t v21 = a1 + 1;
    }
LABEL_48:
    *a3 = v21;
    return v5;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

void siri::intelligence::Updater::GetFileVersion(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  int FormatForFilename = siri::intelligence::GetFormatForFilename(a1);
  siri::intelligence::Loader::LoadFile(a1, FormatForFilename, &v8);
  if ((void)v8)
  {
    uint64_t v5 = *(long long **)(v8 + 528);
    if (*((char *)v5 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)v5, *((void *)v5 + 1));
    }
    else
    {
      long long v6 = *v5;
      a2->__r_.__value_.__r.__words[2] = *((void *)v5 + 2);
      *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v6;
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(a2, (char *)&str_1);
  }
  unint64_t v7 = (std::__shared_weak_count *)*((void *)&v8 + 1);
  if (*((void *)&v8 + 1))
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
}

void sub_239A394F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::Updater::GetHighestVersionWithinRelease(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  siri::intelligence::Utils::GetMajorMinorVersion((unsigned __int8 *)a1, (uint64_t)v10);
  if (*(char *)(a1 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
  siri::intelligence::GetFormatUpdaters((siri::intelligence *)v9);
  long long v4 = (std::string *)v9[0];
  uint64_t v5 = (std::string *)v9[1];
  while (v4 != v5)
  {
    siri::intelligence::Utils::GetMajorMinorVersion((unsigned __int8 *)v4, (uint64_t)__p);
    BOOL v6 = siri::intelligence::Utils::VersionLessThan((unsigned __int8 *)v10, (unsigned __int8 *)__p);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
    if (v6) {
      break;
    }
    std::string::operator=(a2, v4);
    long long v4 = (std::string *)((char *)v4 + 32);
  }
  __p[0] = v9;
  std::vector<std::pair<std::string,void (*)(protobuf::Intelligence *)>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  if (v11 < 0) {
    operator delete(v10[0]);
  }
}

void sub_239A395E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::GetFormatUpdaters(siri::intelligence *this)
{
  v37[4] = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(v14, "1.0.1");
  v14[3] = siri::intelligence::UpdateTo_1_0_1;
  std::string::basic_string[abi:ne180100]<0>(v15, "1.0.2");
  uint64_t v15[3] = siri::intelligence::UpdateTo_1_0_2;
  std::string::basic_string[abi:ne180100]<0>(v16, "1.0.3");
  v16[3] = siri::intelligence::UpdateTo_1_0_3;
  std::string::basic_string[abi:ne180100]<0>(v17, "1.0.4");
  v17[3] = siri::intelligence::UpdateTo_1_0_4;
  std::string::basic_string[abi:ne180100]<0>(v18, "1.0.5");
  v18[3] = siri::intelligence::UpdateTo_1_0_5;
  std::string::basic_string[abi:ne180100]<0>(v19, "1.0.6");
  v19[3] = siri::intelligence::UpdateTo_1_0_6;
  std::string::basic_string[abi:ne180100]<0>(v20, "1.0.7");
  v20[3] = siri::intelligence::UpdateTo_1_0_7;
  std::string::basic_string[abi:ne180100]<0>(v21, "1.4.0");
  v21[3] = siri::intelligence::UpdateTo_1_4_0;
  std::string::basic_string[abi:ne180100]<0>(v22, "1.4.1");
  v22[3] = siri::intelligence::UpdateTo_1_4_1;
  std::string::basic_string[abi:ne180100]<0>(v23, "1.4.2");
  v23[3] = siri::intelligence::UpdateNoOp;
  std::string::basic_string[abi:ne180100]<0>(v24, "1.4.3");
  v24[3] = siri::intelligence::UpdateNoOp;
  std::string::basic_string[abi:ne180100]<0>(v25, "1.4.4");
  v25[3] = siri::intelligence::UpdateTo_1_4_4;
  std::string::basic_string[abi:ne180100]<0>(v26, "1.4.5");
  v26[3] = siri::intelligence::UpdateTo_1_4_5;
  std::string::basic_string[abi:ne180100]<0>(v27, "1.4.6");
  v27[3] = siri::intelligence::UpdateNoOp;
  std::string::basic_string[abi:ne180100]<0>(v28, "1.4.7");
  v28[3] = siri::intelligence::UpdateNoOp;
  std::string::basic_string[abi:ne180100]<0>(v29, "2.0.0");
  v29[3] = siri::intelligence::UpdateNoOp;
  std::string::basic_string[abi:ne180100]<0>(v30, "2.0.1");
  v30[3] = siri::intelligence::UpdateTo_2_0_1;
  std::string::basic_string[abi:ne180100]<0>(v31, "2.0.2");
  v31[3] = siri::intelligence::UpdateNoOp;
  std::string::basic_string[abi:ne180100]<0>(v32, "2.0.3");
  v32[3] = siri::intelligence::UpdateNoOp;
  std::string::basic_string[abi:ne180100]<0>(v33, "2.0.4");
  v33[3] = siri::intelligence::UpdateNoOp;
  std::string::basic_string[abi:ne180100]<0>(v34, "2.0.5");
  v34[3] = siri::intelligence::UpdateNoOp;
  std::string::basic_string[abi:ne180100]<0>(v35, "2.0.6");
  v35[3] = siri::intelligence::UpdateNoOp;
  std::string::basic_string[abi:ne180100]<0>(v36, "2.0.7");
  v36[3] = siri::intelligence::UpdateNoOp;
  std::string::basic_string[abi:ne180100]<0>(v37, "2.0.8");
  v37[3] = siri::intelligence::UpdateNoOp;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = 0;
  uint64_t v2 = (std::string *)operator new(0x300uLL);
  uint64_t v3 = 0;
  *(void *)this = v2;
  *((void *)this + 1) = v2;
  *((void *)this + 2) = v2 + 32;
  uint64_t v12 = v2;
  std::string::size_type v13 = v2;
  v9[0] = (char *)this + 16;
  v9[1] = &v12;
  uint64_t v10 = &v13;
  long long v4 = v2;
  char v11 = 0;
  do
  {
    uint64_t v5 = (const std::string::value_type **)&v14[v3];
    if (SHIBYTE(v14[v3 + 2]) < 0)
    {
      std::string::__init_copy_ctor_external(v4, *v5, (std::string::size_type)v5[1]);
      unint64_t v7 = v13;
    }
    else
    {
      long long v6 = *(_OWORD *)v5;
      v4->__r_.__value_.__r.__words[2] = (std::string::size_type)v5[2];
      *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v6;
      unint64_t v7 = v4;
    }
    v4[1].__r_.__value_.__r.__words[0] = v14[v3 + 3];
    long long v4 = (std::string *)((char *)v7 + 32);
    std::string::size_type v13 = (std::string *)((char *)v7 + 32);
    v3 += 4;
  }
  while (v3 != 96);
  char v11 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,void (*)(protobuf::Intelligence *)>>,std::pair<std::string,void (*)(protobuf::Intelligence *)>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  *((void *)this + 1) = v4;
  uint64_t v8 = 96;
  do
  {
    if (*((char *)&v12 + v8 * 8 + 7) < 0) {
      operator delete((&v10)[v8]);
    }
    v8 -= 4;
  }
  while (v8 * 8);
}

void sub_239A39B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  std::vector<std::pair<std::string,void (*)(protobuf::Intelligence *)>>::__destroy_vector::operator()[abi:ne180100](&a10);
  uint64_t v20 = 768;
  while (1)
  {
    if (*(&a19 + v20) < 0) {
      operator delete(*(void **)((char *)&a14 + v20));
    }
    v20 -= 32;
    if (!v20) {
      _Unwind_Resume(a1);
    }
  }
}

BOOL siri::intelligence::Updater::IsUpdateAvailable(unsigned __int8 *a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v7, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v7 = *(std::string *)a2;
  }
  std::string::size_type size = HIBYTE(v7.__r_.__value_.__r.__words[2]);
  if ((v7.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v7.__r_.__value_.__l.__size_;
  }
  if (!size)
  {
    siri::intelligence::Updater::GetHighestVersionWithinRelease((uint64_t)a1, &v6);
    if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v7.__r_.__value_.__l.__data_);
    }
    std::string v7 = v6;
  }
  BOOL v4 = siri::intelligence::Utils::VersionLessThan(a1, (unsigned __int8 *)&v7);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_239A39C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::intelligence::Updater::IsValidVersion(unsigned __int8 *a1)
{
  siri::intelligence::GetFormatUpdaters((siri::intelligence *)&v15);
  uint64_t v2 = v15;
  uint64_t v3 = v16;
  if (v15 != v16)
  {
    uint64_t v4 = a1[23];
    std::string v6 = *(const void **)a1;
    size_t v5 = *((void *)a1 + 1);
    if ((v4 & 0x80u) == 0) {
      uint64_t v7 = a1[23];
    }
    else {
      uint64_t v7 = *((void *)a1 + 1);
    }
    do
    {
      uint64_t v8 = v2[23];
      int v9 = (char)v8;
      if ((v8 & 0x80u) != 0) {
        uint64_t v8 = *((void *)v2 + 1);
      }
      if (v7 == v8)
      {
        if (v9 >= 0) {
          uint64_t v10 = v2;
        }
        else {
          uint64_t v10 = *(unsigned __int8 **)v2;
        }
        if ((v4 & 0x80) != 0)
        {
          if (!memcmp(v6, v10, v5))
          {
LABEL_20:
            uint64_t v13 = 1;
            goto LABEL_21;
          }
        }
        else
        {
          if (!v4) {
            goto LABEL_20;
          }
          char v11 = a1;
          uint64_t v12 = v4;
          while (*v11 == *v10)
          {
            ++v11;
            ++v10;
            if (!--v12) {
              goto LABEL_20;
            }
          }
        }
      }
      v2 += 32;
    }
    while (v2 != v3);
  }
  uint64_t v13 = 0;
LABEL_21:
  unint64_t v17 = &v15;
  std::vector<std::pair<std::string,void (*)(protobuf::Intelligence *)>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v17);
  return v13;
}

void siri::intelligence::Updater::GetValidVersions(uint64_t *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  siri::intelligence::GetFormatUpdaters((siri::intelligence *)&v6);
  uint64_t v3 = v6;
  uint64_t v4 = v7;
  if (v6 != v7)
  {
    unint64_t v5 = a1[1];
    do
    {
      if (v5 >= a1[2])
      {
        unint64_t v5 = std::vector<std::string>::__push_back_slow_path<std::string const&>(a1, v3);
      }
      else
      {
        std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)a1, v3);
        v5 += 24;
      }
      a1[1] = v5;
      v3 += 2;
    }
    while (v3 != v4);
  }
  uint64_t v8 = &v6;
  std::vector<std::pair<std::string,void (*)(protobuf::Intelligence *)>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v8);
}

void sub_239A39E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t siri::intelligence::Updater::UpdateToVersion(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a1 + 16);
  if ((v4 & 1) == 0)
  {
    *(_DWORD *)(a1 + 16) = v4 | 1;
    std::string::basic_string[abi:ne180100]<0>(&__p, "1.0");
    google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)(a1 + 528), (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    *(void *)(a1 + 544) = 0;
    *(_DWORD *)(a1 + 16) &= ~4u;
  }
  unint64_t v5 = *(long long **)(a1 + 528);
  if (*((char *)v5 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    __p.__r_.__value_.__r.__words[2] = *((void *)v5 + 2);
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v6;
  }
  std::string::basic_string[abi:ne180100]<0>(&__str, "2.0.8");
  BOOL v7 = siri::intelligence::Utils::VersionLessThan((unsigned __int8 *)&__str, (unsigned __int8 *)&__p);
  BOOL v9 = v7;
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__str.__r_.__value_.__l.__data_);
    if (v9) {
      goto LABEL_10;
    }
  }
  else if (v7)
  {
LABEL_10:
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    siri::intelligence::Log::Error((siri::intelligence::Log *)"Version of upgrader (2.0.8) is older than the format version in the file (%s). Skipping update.", v8, p_p);
    char v11 = 0;
    goto LABEL_58;
  }
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __str = *(std::string *)a2;
  }
  std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  LOBYTE(v13) = *((unsigned char *)&__str.__r_.__value_.__s + 23);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    IsValidVersiouint64_t n = siri::intelligence::Updater::IsValidVersion((unsigned __int8 *)&__str);
    LOBYTE(v13) = *((unsigned char *)&__str.__r_.__value_.__s + 23);
    if ((IsValidVersion & 1) == 0)
    {
      p_str = &__str;
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      siri::intelligence::Log::Warning((siri::intelligence::Log *)"Invalid version number specified: %s. Will update to the latest format within the current release instead.", v15, p_str);
      MEMORY[0x23ECAA8E0](&__str, &str_1);
      LOBYTE(v13) = *((unsigned char *)&__str.__r_.__value_.__s + 23);
    }
  }
  std::string::size_type v13 = v13;
  if ((v13 & 0x80u) != 0) {
    std::string::size_type v13 = __str.__r_.__value_.__l.__size_;
  }
  if (!v13)
  {
    siri::intelligence::Updater::GetHighestVersionWithinRelease((uint64_t)&__p, &v30);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string __str = v30;
    goto LABEL_37;
  }
  std::string::basic_string[abi:ne180100]<0>(&v30, "2.0.8");
  BOOL v17 = siri::intelligence::Utils::VersionLessThan((unsigned __int8 *)&v30, (unsigned __int8 *)&__str);
  BOOL v19 = v17;
  if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!v17) {
      goto LABEL_37;
    }
LABEL_34:
    uint64_t v20 = &__str;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v20 = (std::string *)__str.__r_.__value_.__r.__words[0];
    }
    siri::intelligence::Log::Warning((siri::intelligence::Log *)"This updater cannot update to version %s. The maximum supported version of %s will be used instead.", v18, v20, "2.0.8");
    MEMORY[0x23ECAA8E0](&__str, "2.0.8");
    goto LABEL_37;
  }
  operator delete(v30.__r_.__value_.__l.__data_);
  if (v19) {
    goto LABEL_34;
  }
LABEL_37:
  siri::intelligence::GetFormatUpdaters((siri::intelligence *)&v30);
  std::string::size_type v22 = v30.__r_.__value_.__l.__size_;
  uint64_t v21 = v30.__r_.__value_.__r.__words[0];
  if (v30.__r_.__value_.__r.__words[0] == v30.__r_.__value_.__l.__size_)
  {
    char v11 = 0;
  }
  else
  {
    char v11 = 0;
    while (!siri::intelligence::Utils::VersionLessThan((unsigned __int8 *)&__str, (unsigned __int8 *)v21))
    {
      if (siri::intelligence::Utils::VersionLessThan((unsigned __int8 *)&__p, (unsigned __int8 *)v21))
      {
        uint64_t v25 = v21;
        if (*(char *)(v21 + 23) < 0) {
          uint64_t v25 = *(void *)v21;
        }
        siri::intelligence::Log::Info((siri::intelligence::Log *)"Upgrading flow file to version %s", v24, v25);
        (*(void (**)(uint64_t))(v21 + 24))(a1);
        *(_DWORD *)(a1 + 16) |= 1u;
        std::string::size_type v26 = *(std::string **)(a1 + 528);
        if (v26 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 528, v21);
        }
        std::string::operator=(v26, (const std::string *)v21);
        char v11 = 1;
      }
      v21 += 32;
      if (v21 == v22) {
        goto LABEL_52;
      }
    }
    uint64_t v27 = &__str;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v27 = (std::string *)__str.__r_.__value_.__r.__words[0];
    }
    siri::intelligence::Log::Info((siri::intelligence::Log *)"Flow file updated to target version %s", v23, v27);
  }
LABEL_52:
  BOOL v33 = &v30;
  std::vector<std::pair<std::string,void (*)(protobuf::Intelligence *)>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v33);
  if (siri::intelligence::Utils::VersionLessThan(*(unsigned __int8 **)(a1 + 528), (unsigned __int8 *)&__str))
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v28 = *(std::string **)(a1 + 528);
    if (v28 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 528, (uint64_t)&__str);
    }
    std::string::operator=(v28, &__str);
    char v11 = 1;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
LABEL_58:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v11 & 1;
}

void sub_239A3A20C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  *(void *)(v30 - 72) = &a12;
  std::vector<std::pair<std::string,void (*)(protobuf::Intelligence *)>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v30 - 72));
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(a1);
}

uint64_t siri::intelligence::Updater::UpdateToVersion(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (a3) {
    *a3 = 0;
  }
  int FormatForFilename = siri::intelligence::GetFormatForFilename(a1);
  siri::intelligence::Loader::LoadFile(a1, FormatForFilename, &v33);
  uint64_t v8 = v33;
  if (!(void)v33)
  {
    if (*(char *)(a1 + 23) >= 0) {
      uint64_t v12 = a1;
    }
    else {
      uint64_t v12 = *(void *)a1;
    }
    siri::intelligence::Log::Error((siri::intelligence::Log *)"Unable to load file for upgrade: %s", v7, v12);
    uint64_t v13 = 0;
    goto LABEL_65;
  }
  BOOL v9 = *(unsigned __int8 **)(v33 + 528);
  std::string::basic_string[abi:ne180100]<0>(&v39, "1.4.5");
  BOOL v10 = siri::intelligence::Utils::VersionLessThan(v9, (unsigned __int8 *)&v39);
  BOOL v11 = v10;
  if ((v41 & 0x80000000) == 0)
  {
    if (!v10) {
      goto LABEL_57;
    }
LABEL_12:
    BOOL v14 = (std::__shared_weak_count *)*((void *)&v33 + 1);
    if (*((void *)&v33 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v33 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    if (siri::intelligence::GetFormatForFilename(a1) == 2)
    {
      siri::intelligence::ReadFileToLines((uint64_t *)&v39);
      unint64_t v15 = v39;
      if (v40 != v39)
      {
        uint64_t v16 = 0;
        unint64_t v17 = 0;
        do
        {
          unint64_t v18 = (std::string *)((char *)v15 + v16);
          siri::intelligence::StringTrim(" \t\n\r", (const std::string *)((char *)v15 + v16), &v38);
          if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v20 = (void *)v38.__r_.__value_.__r.__words[0];
            if (v38.__r_.__value_.__l.__size_ != 7) {
              goto LABEL_43;
            }
            if (*(_DWORD *)v38.__r_.__value_.__l.__data_ != 1852143205
              || *(_DWORD *)(v38.__r_.__value_.__r.__words[0] + 3) != 980644974)
            {
              goto LABEL_43;
            }
          }
          else
          {
            if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) != 7) {
              goto LABEL_44;
            }
            if (LODWORD(v38.__r_.__value_.__l.__data_) != 1852143205
              || *(_DWORD *)((char *)v38.__r_.__value_.__r.__words + 3) != 980644974)
            {
              goto LABEL_44;
            }
          }
          std::string::basic_string[abi:ne180100]<0>(__p, "events");
          BOOL v22 = siri::intelligence::StringStartsWith(v18, (unsigned __int8 *)__p);
          if (v37 < 0) {
            operator delete(__p[0]);
          }
          if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
            if (v22) {
              goto LABEL_44;
            }
LABEL_37:
            std::string::basic_string[abi:ne180100]<0>(__p, "events:");
            std::string::basic_string[abi:ne180100]<0>(v34, "legacyEvents:");
            siri::intelligence::StringReplace((uint64_t)v18, (char *)__p, (uint64_t)v34, 0, &v38);
            uint64_t v23 = (char *)v39 + v16;
            if (*((char *)v39 + v16 + 23) < 0) {
              operator delete(*(void **)v23);
            }
            long long v24 = *(_OWORD *)&v38.__r_.__value_.__l.__data_;
            *((void *)v23 + 2) = *((void *)&v38.__r_.__value_.__l + 2);
            *(_OWORD *)uint64_t v23 = v24;
            *((unsigned char *)&v38.__r_.__value_.__s + 23) = 0;
            v38.__r_.__value_.__s.__data_[0] = 0;
            if (v35 < 0) {
              operator delete(v34[0]);
            }
            if ((v37 & 0x80000000) == 0) {
              goto LABEL_44;
            }
            uint64_t v20 = __p[0];
LABEL_43:
            operator delete(v20);
            goto LABEL_44;
          }
          operator delete(v38.__r_.__value_.__l.__data_);
          if (!v22) {
            goto LABEL_37;
          }
LABEL_44:
          ++v17;
          unint64_t v15 = v39;
          v16 += 24;
        }
        while (v17 < 0xAAAAAAAAAAAAAAABLL * (((char *)v40 - (char *)v39) >> 3));
      }
      std::string::basic_string[abi:ne180100]<0>(__p, (char *)&str_1);
      std::string::basic_string[abi:ne180100]<0>(v34, ".yamlflow");
      siri::intelligence::WriteTempFileFromString((const void **)__p, (uint64_t)v34, &v38);
      if (v35 < 0) {
        operator delete(v34[0]);
      }
      if (v37 < 0) {
        operator delete(__p[0]);
      }
      siri::intelligence::WriteFileFromLines(&v39, &v38);
      int v25 = siri::intelligence::GetFormatForFilename((uint64_t)&v38);
      siri::intelligence::Loader::LoadFile((uint64_t)&v38, v25, &v32);
      siri::intelligence::DeleteFile((const char *)&v38);
      if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v38.__r_.__value_.__l.__data_);
      }
      v38.__r_.__value_.__r.__words[0] = (std::string::size_type)&v39;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v38);
      std::string::size_type v26 = (std::__shared_weak_count *)*((void *)&v32 + 1);
      uint64_t v8 = v32;
      uint64_t v27 = (std::__shared_weak_count *)*((void *)&v33 + 1);
    }
    else
    {
      uint64_t v27 = v14;
      std::string::size_type v26 = v14;
      BOOL v14 = 0;
    }
    *(void *)&long long v33 = v8;
    *((void *)&v33 + 1) = v26;
    if (v27) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v27);
    }
    if (v14) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v14);
    }
    goto LABEL_57;
  }
  operator delete(v39);
  if (v11) {
    goto LABEL_12;
  }
LABEL_57:
  int v28 = siri::intelligence::Updater::UpdateToVersion(v8, a2);
  if (a3) {
    *a3 = v28;
  }
  if (v28)
  {
    std::string v29 = (std::__shared_weak_count *)*((void *)&v33 + 1);
    long long v31 = v33;
    if (*((void *)&v33 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v33 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v13 = siri::intelligence::Saver::SaveFile((uint64_t)&v31, (std::string *)a1);
    if (v29) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v29);
    }
  }
  else
  {
    uint64_t v13 = 1;
  }
LABEL_65:
  if (*((void *)&v33 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v33 + 1));
  }
  return v13;
}

void sub_239A3A668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15, uint64_t a16, std::__shared_weak_count *a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a15);
  }
  if (a35 < 0) {
    operator delete(__p);
  }
  std::string __p = (void *)(v35 - 112);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  _Unwind_Resume(a1);
}

void siri::intelligence::UpdateTo_1_0_1(siri::intelligence *this, protobuf::Intelligence *a2)
{
  if (*((int *)this + 32) >= 1)
  {
    int v3 = 0;
    while (1)
    {
      int v4 = (const protobuf::Intelligence_ResponseGroup *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>((uint64_t)this + 120, v3);
      unint64_t v5 = (int *)*((void *)this + 53);
      if (!v5) {
        break;
      }
      uint64_t v6 = *((int *)this + 104);
      int v7 = *v5;
      if ((int)v6 >= *v5)
      {
        if (v7 == *((_DWORD *)this + 105))
        {
LABEL_8:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 102, v7 + 1);
          unint64_t v5 = (int *)*((void *)this + 53);
          int v7 = *v5;
        }
        *unint64_t v5 = v7 + 1;
        uint64_t v8 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_ResponseGroup>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                               + 51));
        uint64_t v9 = *((void *)this + 53);
        uint64_t v10 = *((int *)this + 104);
        *((_DWORD *)this + 104) = v10 + 1;
        *(void *)(v9 + 8 * v10 + 8) = v8;
        goto LABEL_10;
      }
      *((_DWORD *)this + 104) = v6 + 1;
      uint64_t v8 = *(protobuf::Intelligence_ResponseGroup **)&v5[2 * v6 + 2];
LABEL_10:
      if (v4 != v8)
      {
        protobuf::Intelligence_ResponseGroup::Clear(v8);
        protobuf::Intelligence_ResponseGroup::MergeFrom(v8, v4);
      }
      if (++v3 >= *((_DWORD *)this + 32)) {
        goto LABEL_13;
      }
    }
    int v7 = *((_DWORD *)this + 105);
    goto LABEL_8;
  }
LABEL_13:
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>((uint64_t)this + 120);
  if (*((int *)this + 38) >= 1)
  {
    int v11 = 0;
    while (1)
    {
      uint64_t v12 = (const protobuf::Intelligence_InputGroup *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((uint64_t)this + 144, v11);
      uint64_t v13 = (int *)*((void *)this + 56);
      if (!v13) {
        break;
      }
      uint64_t v14 = *((int *)this + 110);
      int v15 = *v13;
      if ((int)v14 >= *v13)
      {
        if (v15 == *((_DWORD *)this + 111))
        {
LABEL_20:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 108, v15 + 1);
          uint64_t v13 = (int *)*((void *)this + 56);
          int v15 = *v13;
        }
        int *v13 = v15 + 1;
        uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                             + 54));
        uint64_t v17 = *((void *)this + 56);
        uint64_t v18 = *((int *)this + 110);
        *((_DWORD *)this + 11siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v18 + 1;
        *(void *)(v17 + 8 * v18 + 8) = v16;
        goto LABEL_22;
      }
      *((_DWORD *)this + 11siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v14 + 1;
      uint64_t v16 = *(protobuf::Intelligence_InputGroup **)&v13[2 * v14 + 2];
LABEL_22:
      if (v12 != v16)
      {
        protobuf::Intelligence_InputGroup::Clear(v16);
        protobuf::Intelligence_InputGroup::MergeFrom(v16, v12);
      }
      if (++v11 >= *((_DWORD *)this + 38)) {
        goto LABEL_25;
      }
    }
    int v15 = *((_DWORD *)this + 111);
    goto LABEL_20;
  }
LABEL_25:
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((uint64_t)this + 144);
  if (*((int *)this + 14) >= 1)
  {
    int v19 = 0;
    do
    {
      uint64_t v20 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_DialogResponse>::TypeHandler>((uint64_t)this + 48, v19);
      int v21 = *(_DWORD *)(v20 + 16);
      if ((v21 & 8) != 0)
      {
        uint64_t v22 = v20;
        int v25 = *(uint64_t **)(v20 + 160);
        uint64_t v23 = v20 + 160;
        long long v24 = (std::string *)v25;
        std::string::size_type v26 = *(const std::string **)(v23 - 16);
        *(_DWORD *)(v23 - 144) = v21 | 0x20;
        if (v25 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v23, (uint64_t)v26);
        }
        std::string::operator=(v24, v26);
        uint64_t v27 = *(void *)(v22 + 144);
        if ((uint64_t *)v27 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v27 + 23) < 0)
          {
            **(unsigned char **)uint64_t v27 = 0;
            *(void *)(v27 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v27 = 0;
            *(unsigned char *)(v27 + 23) = 0;
          }
        }
        *(_DWORD *)(v22 + 16) &= ~8u;
      }
      ++v19;
    }
    while (v19 < *((_DWORD *)this + 14));
  }
  if (*((int *)this + 20) >= 1)
  {
    int v28 = 0;
    do
    {
      uint64_t v29 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::TypeHandler>((uint64_t)this + 72, v28);
      int v30 = *(_DWORD *)(v29 + 16);
      if ((v30 & 8) != 0)
      {
        uint64_t v31 = v29;
        uint64_t v34 = *(uint64_t **)(v29 + 112);
        uint64_t v32 = v29 + 112;
        long long v33 = (std::string *)v34;
        uint64_t v35 = *(const std::string **)(v32 - 16);
        *(_DWORD *)(v32 - 96) = v30 | 0x20;
        if (v34 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v32, (uint64_t)v35);
        }
        std::string::operator=(v33, v35);
        uint64_t v36 = *(void *)(v31 + 96);
        if ((uint64_t *)v36 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v36 + 23) < 0)
          {
            **(unsigned char **)uint64_t v36 = 0;
            *(void *)(v36 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v36 = 0;
            *(unsigned char *)(v36 + 23) = 0;
          }
        }
        *(_DWORD *)(v31 + 16) &= ~8u;
      }
      ++v28;
    }
    while (v28 < *((_DWORD *)this + 20));
  }
  if (*((int *)this + 26) >= 1)
  {
    int v37 = 0;
    do
    {
      uint64_t v38 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ReferenceResponse>::TypeHandler>((uint64_t)this + 96, v37);
      int v39 = *(_DWORD *)(v38 + 16);
      if ((v39 & 8) != 0)
      {
        uint64_t v40 = v38;
        uint64_t v43 = *(uint64_t **)(v38 + 88);
        uint64_t v41 = v38 + 88;
        uint64_t v42 = (std::string *)v43;
        char v44 = *(const std::string **)(v41 - 16);
        *(_DWORD *)(v41 - 72) = v39 | 0x20;
        if (v43 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v41, (uint64_t)v44);
        }
        std::string::operator=(v42, v44);
        uint64_t v45 = *(void *)(v40 + 72);
        if ((uint64_t *)v45 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v45 + 23) < 0)
          {
            **(unsigned char **)uint64_t v45 = 0;
            *(void *)(v45 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v45 = 0;
            *(unsigned char *)(v45 + 23) = 0;
          }
        }
        *(_DWORD *)(v40 + 16) &= ~8u;
      }
      ++v37;
    }
    while (v37 < *((_DWORD *)this + 26));
  }
  if (*((int *)this + 104) >= 1)
  {
    int v46 = 0;
    do
    {
      uint64_t v47 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>((uint64_t)this + 408, v46);
      int v48 = *(_DWORD *)(v47 + 16);
      if ((v48 & 8) != 0)
      {
        uint64_t v49 = v47;
        long long v52 = *(uint64_t **)(v47 + 88);
        uint64_t v50 = v47 + 88;
        uint64_t v51 = (std::string *)v52;
        char v53 = *(const std::string **)(v50 - 16);
        *(_DWORD *)(v50 - 72) = v48 | 0x20;
        if (v52 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v50, (uint64_t)v53);
        }
        std::string::operator=(v51, v53);
        uint64_t v54 = *(void *)(v49 + 72);
        if ((uint64_t *)v54 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v54 + 23) < 0)
          {
            **(unsigned char **)uint64_t v54 = 0;
            *(void *)(v54 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v54 = 0;
            *(unsigned char *)(v54 + 23) = 0;
          }
        }
        *(_DWORD *)(v49 + 16) &= ~8u;
      }
      ++v46;
    }
    while (v46 < *((_DWORD *)this + 104));
  }
  if (*((int *)this + 44) >= 1)
  {
    int v55 = 0;
    do
    {
      uint64_t v56 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::TypeHandler>((uint64_t)this + 168, v55);
      if ((*(unsigned char *)(v56 + 16) & 4) != 0)
      {
        uint64_t v57 = v56;
        long long v58 = (uint64_t *)(v56 + 64);
        uint64_t v59 = *(void *)(v56 + 64);
        std::string::basic_string[abi:ne180100]<0>(&__str, "global_ruleset");
        std::string::basic_string[abi:ne180100]<0>(&__p, "global_input_group");
        siri::intelligence::StringReplace(v59, (char *)&__str, (uint64_t)&__p, 0, &v159);
        *(_DWORD *)(v57 + 16) |= 4u;
        google::protobuf::internal::ArenaStringPtr::SetNoArena(v58, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)&v159);
        if (SHIBYTE(v159.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v159.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
      }
      ++v55;
    }
    while (v55 < *((_DWORD *)this + 44));
  }
  if (*((int *)this + 20) >= 1)
  {
    for (int i = 0; i < *((_DWORD *)this + 20); ++i)
    {
      uint64_t v61 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::TypeHandler>((uint64_t)this + 72, i);
      if ((*(unsigned char *)(v61 + 16) & 0x80) != 0)
      {
        uint64_t v62 = v61;
        long long v64 = (long long **)(v61 + 128);
        uint64_t v63 = *(long long **)(v61 + 128);
        if (*((char *)v63 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&v159, *(const std::string::value_type **)v63, *((void *)v63 + 1));
          uint64_t v63 = *v64;
        }
        else
        {
          long long v65 = *v63;
          v159.__r_.__value_.__r.__words[2] = *((void *)v63 + 2);
          *(_OWORD *)&v159.__r_.__value_.__l.__data_ = v65;
        }
        if (*((char *)v63 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)v63, *((void *)v63 + 1));
        }
        else
        {
          long long v66 = *v63;
          __str.__r_.__value_.__r.__words[2] = *((void *)v63 + 2);
          *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v66;
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "clear_label");
        std::string::basic_string[abi:ne180100]<0>(v153, "clear_string");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "set_label");
        std::string::basic_string[abi:ne180100]<0>(v153, "set_string");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "split_label");
        std::string::basic_string[abi:ne180100]<0>(v153, "split_string");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "clear_flag");
        std::string::basic_string[abi:ne180100]<0>(v153, "clear_BOOLean");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "set_flag");
        std::string::basic_string[abi:ne180100]<0>(v153, "set_BOOLean");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "decrease_counter");
        std::string::basic_string[abi:ne180100]<0>(v153, "decrease_number");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "increase_counter");
        std::string::basic_string[abi:ne180100]<0>(v153, "increase_number");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "set_counter");
        std::string::basic_string[abi:ne180100]<0>(v153, "set_number");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "clear_list");
        std::string::basic_string[abi:ne180100]<0>(v153, "clear_array");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "extend_list");
        std::string::basic_string[abi:ne180100]<0>(v153, "extend_array");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "extract_list");
        std::string::basic_string[abi:ne180100]<0>(v153, "extract_array");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "pop_back_list");
        std::string::basic_string[abi:ne180100]<0>(v153, "pop_back_array");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "length_list");
        std::string::basic_string[abi:ne180100]<0>(v153, "length_array");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "reduce_list");
        std::string::basic_string[abi:ne180100]<0>(v153, "reduce_array");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(v155, "uniquify_list");
        std::string::basic_string[abi:ne180100]<0>(v153, "uniquify_array");
        siri::intelligence::StringReplace((uint64_t)&__str, (char *)v155, (uint64_t)v153, 0, &__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = __p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        __p.__r_.__value_.__s.__data_[0] = 0;
        if (v154 < 0) {
          operator delete(v153[0]);
        }
        if (v156 < 0) {
          operator delete(v155[0]);
        }
        *(_DWORD *)(v62 + 16) |= 0x80u;
        long long v67 = *(std::string **)(v62 + 128);
        if (v67 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v64, (uint64_t)&__str);
        }
        std::string::operator=(v67, &__str);
        if (*(int *)(v62 + 32) >= 1)
        {
          for (int j = 0; j < *(_DWORD *)(v62 + 32); ++j)
          {
            uint64_t v69 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(v62 + 24, j);
            long long v70 = *(long long **)(v69 + 120);
            if (*((char *)v70 + 23) < 0)
            {
              std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v70, *((void *)v70 + 1));
            }
            else
            {
              long long v71 = *v70;
              __p.__r_.__value_.__r.__words[2] = *((void *)v70 + 2);
              *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v71;
            }
            if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
            {
              if (__str.__r_.__value_.__l.__size_ != 12) {
                goto LABEL_211;
              }
              p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
            }
            else
            {
              if (HIBYTE(__str.__r_.__value_.__r.__words[2]) != 12) {
                goto LABEL_211;
              }
              p_str = &__str;
            }
            std::string::size_type v73 = p_str->__r_.__value_.__r.__words[0];
            int v74 = p_str->__r_.__value_.__r.__words[1];
            if (v73 == 0x74735F74696C7073 && v74 == 1735289202)
            {
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              {
                if (__p.__r_.__value_.__l.__size_ == 4)
                {
                  p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
LABEL_253:
                  if (LODWORD(p_p->__r_.__value_.__l.__data_) == 1953720684) {
                    goto LABEL_262;
                  }
                }
              }
              else if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) == 4)
              {
                p_p = &__p;
                goto LABEL_253;
              }
            }
            if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) != 0)
            {
              if (__str.__r_.__value_.__l.__size_ != 12) {
                goto LABEL_211;
              }
              uint64_t v76 = (std::string *)__str.__r_.__value_.__r.__words[0];
            }
            else
            {
              if (HIBYTE(__str.__r_.__value_.__r.__words[2]) != 12) {
                goto LABEL_211;
              }
              uint64_t v76 = &__str;
            }
            std::string::size_type v78 = v76->__r_.__value_.__r.__words[0];
            int v79 = v76->__r_.__value_.__r.__words[1];
            if (v78 == 0x615F6874676E656CLL && v79 == 2036429426)
            {
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              {
                std::string::size_type size = __p.__r_.__value_.__l.__size_;
                if (__p.__r_.__value_.__l.__size_ != 7) {
                  goto LABEL_223;
                }
                BOOL v92 = (std::string *)__p.__r_.__value_.__r.__words[0];
              }
              else
              {
                int v81 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                if (HIBYTE(__p.__r_.__value_.__r.__words[2]) != 7) {
                  goto LABEL_213;
                }
                BOOL v92 = &__p;
              }
              int data = (int)v92->__r_.__value_.__l.__data_;
              int v94 = *(_DWORD *)((char *)v92->__r_.__value_.__r.__words + 3);
              if (data == 1853189987 && v94 == 1919251566)
              {
LABEL_262:
                char v87 = "target";
                goto LABEL_240;
              }
            }
LABEL_211:
            if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
              int v81 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
LABEL_213:
              if (v81 == 4)
              {
                char v87 = "name";
                if (LODWORD(__p.__r_.__value_.__l.__data_) != 1734437990) {
                  goto LABEL_241;
                }
                goto LABEL_240;
              }
              if (v81 != 5)
              {
                if (v81 != 7) {
                  goto LABEL_241;
                }
                if (LODWORD(__p.__r_.__value_.__l.__data_) != 1853189987
                  || *(_DWORD *)((char *)__p.__r_.__value_.__r.__words + 3) != 1919251566)
                {
                  goto LABEL_241;
                }
                goto LABEL_239;
              }
              uint64_t v88 = &__p;
LABEL_233:
              int v89 = (int)v88->__r_.__value_.__l.__data_;
              int v84 = v88->__r_.__value_.__s.__data_[4];
              BOOL v85 = v89 == 1700946284;
              int v86 = 108;
              goto LABEL_234;
            }
            std::string::size_type size = __p.__r_.__value_.__l.__size_;
LABEL_223:
            switch(size)
            {
              case 4uLL:
                if (*(_DWORD *)__p.__r_.__value_.__l.__data_ == 1734437990) {
                  goto LABEL_239;
                }
                break;
              case 5uLL:
                uint64_t v88 = (std::string *)__p.__r_.__value_.__r.__words[0];
                goto LABEL_233;
              case 7uLL:
                int v84 = *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 3);
                BOOL v85 = *(_DWORD *)__p.__r_.__value_.__l.__data_ == 1853189987;
                int v86 = 1919251566;
LABEL_234:
                if (!v85 || v84 != v86) {
                  break;
                }
LABEL_239:
                char v87 = "name";
LABEL_240:
                MEMORY[0x23ECAA8E0](&__p, v87);
                break;
            }
LABEL_241:
            *(_DWORD *)(v69 + 16) |= 1u;
            char v91 = *(std::string **)(v69 + 120);
            if (v91 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v69 + 120, (uint64_t)&__p);
            }
            std::string::operator=(v91, &__p);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
          }
        }
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v159.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v159.__r_.__value_.__l.__data_);
        }
      }
    }
  }
  if (*((int *)this + 86) >= 1)
  {
    int v96 = 0;
    while (1)
    {
      uint64_t v97 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Label>::TypeHandler>((uint64_t)this + 336, v96);
      char v98 = (int *)*((void *)this + 50);
      if (!v98) {
        break;
      }
      uint64_t v99 = *((int *)this + 98);
      int v100 = *v98;
      if ((int)v99 >= *v98)
      {
        if (v100 == *((_DWORD *)this + 99))
        {
LABEL_275:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 96, v100 + 1);
          char v98 = (int *)*((void *)this + 50);
          int v100 = *v98;
        }
        *char v98 = v100 + 1;
        uint64_t v101 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Variable>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                            + 48));
        uint64_t v102 = *((void *)this + 50);
        uint64_t v103 = *((int *)this + 98);
        *((_DWORD *)this + 98) = v103 + 1;
        *(void *)(v102 + 8 * v103 + 8) = v101;
        goto LABEL_277;
      }
      *((_DWORD *)this + 98) = v99 + 1;
      uint64_t v101 = *(protobuf::Intelligence_Variable **)&v98[2 * v99 + 2];
LABEL_277:
      v104 = *(const std::string **)(v97 + 24);
      long long v105 = (std::string *)*((void *)v101 + 9);
      *((_DWORD *)v101 + 4) |= 1u;
      if (v105 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v101 + 72, (uint64_t)v104);
      }
      std::string::operator=(v105, v104);
      protobuf::Intelligence_Variable::set_type(v101, siri::intelligence::TYPE_STRING[0]);
      if ((*(unsigned char *)(v97 + 16) & 2) != 0)
      {
        char v106 = *(const std::string **)(v97 + 32);
        char v109 = (uint64_t *)*((void *)v101 + 12);
        uint64_t v108 = (uint64_t)v101 + 96;
        uint64_t v107 = (std::string *)v109;
        *(_DWORD *)(v108 - 80) |= 8u;
        if (v109 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v108, (uint64_t)v106);
        }
        std::string::operator=(v107, v106);
      }
      if (++v96 >= *((_DWORD *)this + 86)) {
        goto LABEL_285;
      }
    }
    int v100 = *((_DWORD *)this + 99);
    goto LABEL_275;
  }
LABEL_285:
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Label>::TypeHandler>((uint64_t)this + 336);
  if (*((int *)this + 74) >= 1)
  {
    int v110 = 0;
    while (1)
    {
      uint64_t v111 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Counter>::TypeHandler>((uint64_t)this + 288, v110);
      char v112 = (int *)*((void *)this + 50);
      if (!v112) {
        break;
      }
      uint64_t v113 = *((int *)this + 98);
      int v114 = *v112;
      if ((int)v113 >= *v112)
      {
        if (v114 == *((_DWORD *)this + 99))
        {
LABEL_292:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 96, v114 + 1);
          char v112 = (int *)*((void *)this + 50);
          int v114 = *v112;
        }
        *char v112 = v114 + 1;
        char v115 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Variable>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                            + 48));
        uint64_t v116 = *((void *)this + 50);
        uint64_t v117 = *((int *)this + 98);
        *((_DWORD *)this + 98) = v117 + 1;
        *(void *)(v116 + 8 * v117 + 8) = v115;
        goto LABEL_294;
      }
      *((_DWORD *)this + 98) = v113 + 1;
      char v115 = *(protobuf::Intelligence_Variable **)&v112[2 * v113 + 2];
LABEL_294:
      long long v118 = *(const std::string **)(v111 + 24);
      char v119 = (std::string *)*((void *)v115 + 9);
      *((_DWORD *)v115 + 4) |= 1u;
      if (v119 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v115 + 72, (uint64_t)v118);
      }
      std::string::operator=(v119, v118);
      protobuf::Intelligence_Variable::set_type(v115, siri::intelligence::TYPE_NUMBER[0]);
      if ((*(unsigned char *)(v111 + 16) & 2) != 0)
      {
        uint64_t v120 = *(void *)(v111 + 32);
        *((_DWORD *)v115 + 4) |= 0x20u;
        *((void *)v115 + 14) = v120;
      }
      if (++v110 >= *((_DWORD *)this + 74)) {
        goto LABEL_300;
      }
    }
    int v114 = *((_DWORD *)this + 99);
    goto LABEL_292;
  }
LABEL_300:
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Counter>::TypeHandler>((uint64_t)this + 288);
  if (*((int *)this + 80) >= 1)
  {
    int v121 = 0;
    while (1)
    {
      uint64_t v122 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Flag>::TypeHandler>((uint64_t)this + 312, v121);
      BOOL v123 = (int *)*((void *)this + 50);
      if (!v123) {
        break;
      }
      uint64_t v124 = *((int *)this + 98);
      int v125 = *v123;
      if ((int)v124 >= *v123)
      {
        if (v125 == *((_DWORD *)this + 99))
        {
LABEL_307:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 96, v125 + 1);
          BOOL v123 = (int *)*((void *)this + 50);
          int v125 = *v123;
        }
        *BOOL v123 = v125 + 1;
        uint64_t v126 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Variable>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                            + 48));
        uint64_t v127 = *((void *)this + 50);
        uint64_t v128 = *((int *)this + 98);
        *((_DWORD *)this + 98) = v128 + 1;
        *(void *)(v127 + 8 * v128 + 8) = v126;
        goto LABEL_309;
      }
      *((_DWORD *)this + 98) = v124 + 1;
      uint64_t v126 = *(protobuf::Intelligence_Variable **)&v123[2 * v124 + 2];
LABEL_309:
      v129 = *(const std::string **)(v122 + 24);
      long long v130 = (std::string *)*((void *)v126 + 9);
      *((_DWORD *)v126 + 4) |= 1u;
      if (v130 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v126 + 72, (uint64_t)v129);
      }
      std::string::operator=(v130, v129);
      protobuf::Intelligence_Variable::set_type(v126, siri::intelligence::TYPE_BOOLEAN[0]);
      if ((*(unsigned char *)(v122 + 16) & 2) != 0)
      {
        char v131 = *(unsigned char *)(v122 + 32);
        *((_DWORD *)v126 + 4) |= 0x80u;
        *((unsigned char *)v126 + 121) = v131;
      }
      if (++v121 >= *((_DWORD *)this + 80)) {
        goto LABEL_315;
      }
    }
    int v125 = *((_DWORD *)this + 99);
    goto LABEL_307;
  }
LABEL_315:
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Flag>::TypeHandler>((uint64_t)this + 312);
  if (*((int *)this + 92) >= 1)
  {
    int v132 = 0;
    while (1)
    {
      uint64_t v133 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_List>::TypeHandler>((uint64_t)this + 360, v132);
      char v134 = (int *)*((void *)this + 50);
      if (!v134) {
        break;
      }
      uint64_t v135 = *((int *)this + 98);
      int v136 = *v134;
      if ((int)v135 < *v134)
      {
        *((_DWORD *)this + 98) = v135 + 1;
        char v137 = *(protobuf::Intelligence_Variable **)&v134[2 * v135 + 2];
        goto LABEL_324;
      }
      if (v136 == *((_DWORD *)this + 99)) {
        goto LABEL_322;
      }
LABEL_323:
      *char v134 = v136 + 1;
      char v137 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Variable>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                          + 48));
      uint64_t v138 = *((void *)this + 50);
      uint64_t v139 = *((int *)this + 98);
      *((_DWORD *)this + 98) = v139 + 1;
      *(void *)(v138 + 8 * v139 + 8) = v137;
LABEL_324:
      char v140 = *(const std::string **)(v133 + 48);
      uint64_t v141 = (std::string *)*((void *)v137 + 9);
      *((_DWORD *)v137 + 4) |= 1u;
      if (v141 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v137 + 72, (uint64_t)v140);
      }
      std::string::operator=(v141, v140);
      *((_DWORD *)v137 + 4) |= 2u;
      std::string::basic_string[abi:ne180100]<0>(&v159, "string[]");
      google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)v137 + 10, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)&v159);
      if (SHIBYTE(v159.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v159.__r_.__value_.__l.__data_);
      }
      if (*(int *)(v133 + 32) >= 1)
      {
        int v142 = 0;
        while (1)
        {
          char v143 = (int *)*((void *)v137 + 5);
          if (!v143) {
            break;
          }
          uint64_t v144 = *((int *)v137 + 8);
          int v145 = *v143;
          if ((int)v144 >= *v143)
          {
            if (v145 == *((_DWORD *)v137 + 9))
            {
LABEL_336:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v137 + 6, v145 + 1);
              char v143 = (int *)*((void *)v137 + 5);
              int v145 = *v143;
            }
            *char v143 = v145 + 1;
            char v146 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*((google::protobuf::internal::ArenaImpl **)v137 + 3));
            uint64_t v147 = *((void *)v137 + 5);
            uint64_t v148 = *((int *)v137 + 8);
            *((_DWORD *)v137 + 8) = v148 + 1;
            *(void *)(v147 + 8 * v148 + 8) = v146;
            goto LABEL_338;
          }
          *((_DWORD *)v137 + 8) = v144 + 1;
          char v146 = *(protobuf::Intelligence_KeyValueParameter **)&v143[2 * v144 + 2];
LABEL_338:
          char v149 = (const std::string *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v133 + 24, v142);
          char v152 = (uint64_t *)*((void *)v146 + 16);
          uint64_t v151 = (uint64_t)v146 + 128;
          v150 = (std::string *)v152;
          *(_DWORD *)(v151 - 112) |= 2u;
          if (v152 == &google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v151, (uint64_t)v149);
          }
          std::string::operator=(v150, v149);
          if (++v142 >= *(_DWORD *)(v133 + 32)) {
            goto LABEL_342;
          }
        }
        int v145 = *((_DWORD *)v137 + 9);
        goto LABEL_336;
      }
LABEL_342:
      if (++v132 >= *((_DWORD *)this + 92)) {
        goto LABEL_343;
      }
    }
    int v136 = *((_DWORD *)this + 99);
LABEL_322:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 96, v136 + 1);
    char v134 = (int *)*((void *)this + 50);
    int v136 = *v134;
    goto LABEL_323;
  }
LABEL_343:
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_List>::TypeHandler>((uint64_t)this + 360);
}

void sub_239A3BDA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (*(char *)(v35 - 89) < 0) {
    operator delete(*(void **)(v35 - 112));
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::UpdateTo_1_0_2(siri::intelligence *this, protobuf::Intelligence *a2)
{
  uint64_t v2 = this;
  if (*((int *)this + 14) >= 1)
  {
    int v3 = 0;
    int v4 = (char *)this + 48;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_DialogResponse>::TypeHandler>((uint64_t)v4, v3);
      uint64_t v6 = v5;
      unsigned int v7 = *(_DWORD *)(v5 + 16);
      if ((v7 & 2) != 0)
      {
        uint64_t v8 = *(unsigned __int8 **)(v5 + 128);
        memset(&v119, 0, sizeof(v119));
        siri::intelligence::StringSplit(v8, ",", (uint64_t *)&v119, (std::vector<std::string> *)v120);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v119;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
        std::string::size_type size = v120[0].__r_.__value_.__l.__size_;
        for (std::string::size_type i = v120[0].__r_.__value_.__r.__words[0]; i != size; i += 24)
        {
          if (*(char *)(i + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&v119, *(const std::string::value_type **)i, *(void *)(i + 8));
          }
          else
          {
            long long v11 = *(_OWORD *)i;
            v119.__r_.__value_.__r.__words[2] = *(void *)(i + 16);
            *(_OWORD *)&v119.__r_.__value_.__l.__data_ = v11;
          }
          siri::intelligence::StringTrim(" \t\n\r", &v119, &__p);
          google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<std::string>::TypeHandler,(void *)0>(v6 + 72, (__n128 *)&__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v119.__r_.__value_.__l.__data_);
          }
        }
        v119.__r_.__value_.__r.__words[0] = (std::string::size_type)v120;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v119);
        uint64_t v12 = *(void *)(v6 + 128);
        uint64_t v2 = this;
        if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v12 + 23) < 0)
          {
            **(unsigned char **)uint64_t v12 = 0;
            *(void *)(v12 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v12 = 0;
            *(unsigned char *)(v12 + 23) = 0;
          }
        }
        unsigned int v7 = *(_DWORD *)(v6 + 16) & 0xFFFFFFFD;
        *(_DWORD *)(v6 + 16) = v7;
      }
      if ((v7 & 4) != 0 && siri::intelligence::IsNewStyleCondition(*(void *)(v6 + 136)))
      {
        uint64_t v13 = *(std::string **)(v6 + 208);
        uint64_t v14 = *(const std::string **)(v6 + 136);
        *(_DWORD *)(v6 + 16) |= 0x800u;
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6 + 208, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
        uint64_t v15 = *(void *)(v6 + 136);
        if ((uint64_t *)v15 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v15 + 23) < 0)
          {
            **(unsigned char **)uint64_t v15 = 0;
            *(void *)(v15 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v15 = 0;
            *(unsigned char *)(v15 + 23) = 0;
          }
        }
        *(_DWORD *)(v6 + 16) &= ~4u;
      }
      if (*(int *)(v6 + 32) >= 1)
      {
        int v16 = 0;
        do
        {
          uint64_t v17 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(v6 + 24, v16);
          siri::intelligence::UpdateKeyValueParameterTo_1_0_2(v17, v18);
          ++v16;
        }
        while (v16 < *(_DWORD *)(v6 + 32));
      }
      if (*(int *)(v6 + 56) >= 1)
      {
        int v19 = 0;
        do
        {
          uint64_t v20 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(v6 + 48, v19);
          siri::intelligence::UpdateKeyValueParameterTo_1_0_2(v20, v21);
          ++v19;
        }
        while (v19 < *(_DWORD *)(v6 + 56));
      }
      ++v3;
    }
    while (v3 < *((_DWORD *)v2 + 14));
  }
  if (*((int *)v2 + 20) >= 1)
  {
    int v22 = 0;
    uint64_t v23 = (uint64_t)v2 + 72;
    do
    {
      uint64_t v24 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::TypeHandler>(v23, v22);
      uint64_t v25 = v24;
      unsigned int v26 = *(_DWORD *)(v24 + 16);
      if ((v26 & 2) != 0)
      {
        uint64_t v27 = *(unsigned __int8 **)(v24 + 80);
        memset(&v119, 0, sizeof(v119));
        siri::intelligence::StringSplit(v27, ",", (uint64_t *)&v119, (std::vector<std::string> *)v120);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v119;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
        std::string::size_type v29 = v120[0].__r_.__value_.__l.__size_;
        for (std::string::size_type j = v120[0].__r_.__value_.__r.__words[0]; j != v29; j += 24)
        {
          if (*(char *)(j + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&v119, *(const std::string::value_type **)j, *(void *)(j + 8));
          }
          else
          {
            long long v30 = *(_OWORD *)j;
            v119.__r_.__value_.__r.__words[2] = *(void *)(j + 16);
            *(_OWORD *)&v119.__r_.__value_.__l.__data_ = v30;
          }
          siri::intelligence::StringTrim(" \t\n\r", &v119, &__p);
          google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<std::string>::TypeHandler,(void *)0>(v25 + 48, (__n128 *)&__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v119.__r_.__value_.__l.__data_);
          }
        }
        v119.__r_.__value_.__r.__words[0] = (std::string::size_type)v120;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v119);
        uint64_t v31 = *(void *)(v25 + 80);
        uint64_t v2 = this;
        if ((uint64_t *)v31 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v31 + 23) < 0)
          {
            **(unsigned char **)uint64_t v31 = 0;
            *(void *)(v31 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v31 = 0;
            *(unsigned char *)(v31 + 23) = 0;
          }
        }
        unsigned int v26 = *(_DWORD *)(v25 + 16) & 0xFFFFFFFD;
        *(_DWORD *)(v25 + 16) = v26;
      }
      if ((v26 & 4) != 0 && siri::intelligence::IsNewStyleCondition(*(void *)(v25 + 88)))
      {
        uint64_t v32 = *(std::string **)(v25 + 136);
        long long v33 = *(const std::string **)(v25 + 88);
        *(_DWORD *)(v25 + 16) |= 0x100u;
        if (v32 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v25 + 136, (uint64_t)v33);
        }
        std::string::operator=(v32, v33);
        uint64_t v34 = *(void *)(v25 + 88);
        if ((uint64_t *)v34 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v34 + 23) < 0)
          {
            **(unsigned char **)uint64_t v34 = 0;
            *(void *)(v34 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v34 = 0;
            *(unsigned char *)(v34 + 23) = 0;
          }
        }
        *(_DWORD *)(v25 + 16) &= ~4u;
      }
      if (*(int *)(v25 + 32) >= 1)
      {
        int v35 = 0;
        do
        {
          uint64_t v36 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(v25 + 24, v35);
          siri::intelligence::UpdateKeyValueParameterTo_1_0_2(v36, v37);
          ++v35;
        }
        while (v35 < *(_DWORD *)(v25 + 32));
      }
      uint64_t v38 = *(uint64_t **)(v25 + 128);
      int v39 = *((char *)v38 + 23);
      if (v39 < 0)
      {
        if (v38[1] == 11)
        {
          uint64_t v38 = (uint64_t *)*v38;
LABEL_70:
          uint64_t v40 = (uint64_t *)*v38;
          uint64_t v41 = *(uint64_t *)((char *)v38 + 3);
          if (v40 == (uint64_t *)0x75725F7972746572 && v41 == 0x73656C75725F7972)
          {
            *(_DWORD *)(v25 + 16) |= 0x80u;
            std::string::basic_string[abi:ne180100]<0>(v120, "retry_inputs");
            google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)(v25 + 128), (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)v120);
            if (SHIBYTE(v120[0].__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v120[0].__r_.__value_.__l.__data_);
            }
          }
        }
      }
      else if (v39 == 11)
      {
        goto LABEL_70;
      }
      ++v22;
    }
    while (v22 < *((_DWORD *)v2 + 20));
  }
  if (*((int *)v2 + 26) >= 1)
  {
    int v43 = 0;
    uint64_t v44 = (uint64_t)v2 + 96;
    do
    {
      uint64_t v45 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ReferenceResponse>::TypeHandler>(v44, v43);
      uint64_t v46 = v45;
      unsigned int v47 = *(_DWORD *)(v45 + 16);
      if ((v47 & 2) != 0)
      {
        int v48 = *(unsigned __int8 **)(v45 + 56);
        memset(&v119, 0, sizeof(v119));
        siri::intelligence::StringSplit(v48, ",", (uint64_t *)&v119, (std::vector<std::string> *)v120);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v119;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
        std::string::size_type v50 = v120[0].__r_.__value_.__l.__size_;
        for (std::string::size_type k = v120[0].__r_.__value_.__r.__words[0]; k != v50; k += 24)
        {
          if (*(char *)(k + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&v119, *(const std::string::value_type **)k, *(void *)(k + 8));
          }
          else
          {
            long long v51 = *(_OWORD *)k;
            v119.__r_.__value_.__r.__words[2] = *(void *)(k + 16);
            *(_OWORD *)&v119.__r_.__value_.__l.__data_ = v51;
          }
          siri::intelligence::StringTrim(" \t\n\r", &v119, &__p);
          google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<std::string>::TypeHandler,(void *)0>(v46 + 24, (__n128 *)&__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v119.__r_.__value_.__l.__data_);
          }
        }
        v119.__r_.__value_.__r.__words[0] = (std::string::size_type)v120;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v119);
        uint64_t v52 = *(void *)(v46 + 56);
        uint64_t v2 = this;
        if ((uint64_t *)v52 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v52 + 23) < 0)
          {
            **(unsigned char **)uint64_t v52 = 0;
            *(void *)(v52 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v52 = 0;
            *(unsigned char *)(v52 + 23) = 0;
          }
        }
        unsigned int v47 = *(_DWORD *)(v46 + 16) & 0xFFFFFFFD;
        *(_DWORD *)(v46 + 16) = v47;
      }
      if ((v47 & 4) != 0 && siri::intelligence::IsNewStyleCondition(*(void *)(v46 + 64)))
      {
        char v53 = *(std::string **)(v46 + 120);
        uint64_t v54 = *(const std::string **)(v46 + 64);
        *(_DWORD *)(v46 + 16) |= 0x200u;
        if (v53 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v46 + 120, (uint64_t)v54);
        }
        std::string::operator=(v53, v54);
        uint64_t v55 = *(void *)(v46 + 64);
        if ((uint64_t *)v55 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v55 + 23) < 0)
          {
            **(unsigned char **)uint64_t v55 = 0;
            *(void *)(v55 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v55 = 0;
            *(unsigned char *)(v55 + 23) = 0;
          }
        }
        *(_DWORD *)(v46 + 16) &= ~4u;
      }
      ++v43;
    }
    while (v43 < *((_DWORD *)v2 + 26));
  }
  if (*((int *)v2 + 104) >= 1)
  {
    int v56 = 0;
    uint64_t v57 = (uint64_t)v2 + 408;
    do
    {
      uint64_t v58 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>(v57, v56);
      uint64_t v59 = v58;
      unsigned int v60 = *(_DWORD *)(v58 + 16);
      if ((v60 & 2) != 0)
      {
        uint64_t v61 = *(unsigned __int8 **)(v58 + 56);
        memset(&v119, 0, sizeof(v119));
        siri::intelligence::StringSplit(v61, ",", (uint64_t *)&v119, (std::vector<std::string> *)v120);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v119;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
        std::string::size_type v63 = v120[0].__r_.__value_.__l.__size_;
        for (std::string::size_type m = v120[0].__r_.__value_.__r.__words[0]; m != v63; m += 24)
        {
          if (*(char *)(m + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&v119, *(const std::string::value_type **)m, *(void *)(m + 8));
          }
          else
          {
            long long v64 = *(_OWORD *)m;
            v119.__r_.__value_.__r.__words[2] = *(void *)(m + 16);
            *(_OWORD *)&v119.__r_.__value_.__l.__data_ = v64;
          }
          siri::intelligence::StringTrim(" \t\n\r", &v119, &__p);
          google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<std::string>::TypeHandler,(void *)0>(v59 + 24, (__n128 *)&__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v119.__r_.__value_.__l.__data_);
          }
        }
        v119.__r_.__value_.__r.__words[0] = (std::string::size_type)v120;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v119);
        uint64_t v65 = *(void *)(v59 + 56);
        uint64_t v2 = this;
        if ((uint64_t *)v65 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v65 + 23) < 0)
          {
            **(unsigned char **)uint64_t v65 = 0;
            *(void *)(v65 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v65 = 0;
            *(unsigned char *)(v65 + 23) = 0;
          }
        }
        unsigned int v60 = *(_DWORD *)(v59 + 16) & 0xFFFFFFFD;
        *(_DWORD *)(v59 + 16) = v60;
      }
      if ((v60 & 4) != 0 && siri::intelligence::IsNewStyleCondition(*(void *)(v59 + 64)))
      {
        long long v66 = *(std::string **)(v59 + 104);
        long long v67 = *(const std::string **)(v59 + 64);
        *(_DWORD *)(v59 + 16) |= 0x80u;
        if (v66 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v59 + 104, (uint64_t)v67);
        }
        std::string::operator=(v66, v67);
        uint64_t v68 = *(void *)(v59 + 64);
        if ((uint64_t *)v68 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v68 + 23) < 0)
          {
            **(unsigned char **)uint64_t v68 = 0;
            *(void *)(v68 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v68 = 0;
            *(unsigned char *)(v68 + 23) = 0;
          }
        }
        *(_DWORD *)(v59 + 16) &= ~4u;
      }
      ++v56;
    }
    while (v56 < *((_DWORD *)v2 + 104));
  }
  if (*((int *)v2 + 110) >= 1)
  {
    int v69 = 0;
    uint64_t v115 = (uint64_t)v2 + 432;
    while (1)
    {
      int v116 = v69;
      uint64_t v70 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>(v115, v69);
      LODWORD(v71) = *(_DWORD *)(v70 + 56);
      if ((int)v71 >= 1) {
        break;
      }
LABEL_155:
      if (*(int *)(v70 + 32) >= 1)
      {
        int v85 = 0;
        while (1)
        {
          uint64_t v86 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::TypeHandler>(v70 + 24, v85);
          uint64_t v87 = v86;
          if (*(int *)(v86 + 32) >= 1) {
            break;
          }
LABEL_171:
          google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v87 + 24);
          if (++v85 >= *(_DWORD *)(v70 + 32)) {
            goto LABEL_172;
          }
        }
        int v88 = 0;
        int v89 = (uint64_t *)(v86 + 48);
        while (2)
        {
          long long v90 = (const std::string *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v87 + 24, v88);
          char v91 = *(int **)(v87 + 64);
          if (v91)
          {
            uint64_t v92 = *(int *)(v87 + 56);
            int v93 = *v91;
            if ((int)v92 < *v91)
            {
              *(_DWORD *)(v87 + 56) = v92 + 1;
              unint64_t AlignedAndAddCleanup = *(std::string **)&v91[2 * v92 + 2];
              goto LABEL_170;
            }
            if (v93 == *(_DWORD *)(v87 + 60))
            {
LABEL_164:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(v87 + 48), v93 + 1);
              char v91 = *(int **)(v87 + 64);
              int v93 = *v91;
            }
            *char v91 = v93 + 1;
            v95 = (atomic_ullong *)*v89;
            if (!*v89) {
              operator new();
            }
            if (v95[14]) {
            unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v95, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
            }
            AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
            AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
            AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
            uint64_t v96 = *(void *)(v87 + 64);
            uint64_t v97 = *(int *)(v87 + 56);
            *(_DWORD *)(v87 + 56) = v97 + 1;
            *(void *)(v96 + 8 * v97 + 8) = AlignedAndAddCleanup;
LABEL_170:
            std::string::operator=(AlignedAndAddCleanup, v90);
            if (++v88 >= *(_DWORD *)(v87 + 32)) {
              goto LABEL_171;
            }
            continue;
          }
          break;
        }
        int v93 = *(_DWORD *)(v87 + 60);
        goto LABEL_164;
      }
LABEL_172:
      LODWORD(v98) = *(_DWORD *)(v70 + 80);
      if ((int)v98 >= 1)
      {
        uint64_t v99 = 0;
        do
        {
          if (v99 >= (int)v98)
          {
            google::protobuf::internal::LogMessage::LogMessage((uint64_t)v120, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
            int v100 = google::protobuf::internal::LogMessage::operator<<(v120, "CHECK failed: (index) < (current_size_): ");
            google::protobuf::internal::LogFinisher::operator=((int)&v119, (const char **)&v100->__r_.__value_.__l.__data_);
            google::protobuf::internal::LogMessage::~LogMessage((void **)&v120[0].__r_.__value_.__l.__data_);
          }
          uint64_t v101 = *(void *)(*(void *)(v70 + 88) + 8 * v99 + 8);
          if ((*(unsigned char *)(v101 + 16) & 2) != 0)
          {
            uint64_t v102 = *(unsigned __int8 **)(v101 + 56);
            memset(&v119, 0, sizeof(v119));
            siri::intelligence::StringSplit(v102, ",", (uint64_t *)&v119, (std::vector<std::string> *)v120);
            __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v119;
            std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
            std::string::size_type v104 = v120[0].__r_.__value_.__l.__size_;
            for (std::string::size_type n = v120[0].__r_.__value_.__r.__words[0]; n != v104; n += 24)
            {
              if (*(char *)(n + 23) < 0)
              {
                std::string::__init_copy_ctor_external(&v119, *(const std::string::value_type **)n, *(void *)(n + 8));
              }
              else
              {
                long long v105 = *(_OWORD *)n;
                v119.__r_.__value_.__r.__words[2] = *(void *)(n + 16);
                *(_OWORD *)&v119.__r_.__value_.__l.__data_ = v105;
              }
              siri::intelligence::StringTrim(" \t\n\r", &v119, &__p);
              google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<std::string>::TypeHandler,(void *)0>(v101 + 24, (__n128 *)&__p);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v119.__r_.__value_.__l.__data_);
              }
            }
            v119.__r_.__value_.__r.__words[0] = (std::string::size_type)v120;
            std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v119);
            uint64_t v106 = *(void *)(v101 + 56);
            if ((uint64_t *)v106 != &google::protobuf::internal::fixed_address_empty_string)
            {
              if (*(char *)(v106 + 23) < 0)
              {
                **(unsigned char **)uint64_t v106 = 0;
                *(void *)(v106 + 8) = 0;
              }
              else
              {
                *(unsigned char *)uint64_t v106 = 0;
                *(unsigned char *)(v106 + 23) = 0;
              }
            }
            *(_DWORD *)(v101 + 16) &= ~2u;
          }
          ++v99;
          uint64_t v98 = *(int *)(v70 + 80);
        }
        while (v99 < v98);
      }
      int v69 = v116 + 1;
      uint64_t v2 = this;
      if (v116 + 1 >= *((_DWORD *)this + 110)) {
        goto LABEL_193;
      }
    }
    uint64_t v72 = 0;
    while (1)
    {
      if (v72 >= (int)v71)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v120, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
        std::string::size_type v73 = google::protobuf::internal::LogMessage::operator<<(v120, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v119, (const char **)&v73->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v120[0].__r_.__value_.__l.__data_);
      }
      uint64_t v74 = *(void *)(*(void *)(v70 + 64) + 8 * v72 + 8);
      if (*(int *)(v74 + 32) >= 1) {
        break;
      }
LABEL_154:
      google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v74 + 24);
      ++v72;
      uint64_t v71 = *(int *)(v70 + 56);
      if (v72 >= v71) {
        goto LABEL_155;
      }
    }
    int v75 = 0;
    uint64_t v76 = (uint64_t *)(v74 + 48);
    while (1)
    {
      uint64_t v77 = (const std::string *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v74 + 24, v75);
      std::string::size_type v78 = *(int **)(v74 + 64);
      if (!v78) {
        break;
      }
      uint64_t v79 = *(int *)(v74 + 56);
      int v80 = *v78;
      if ((int)v79 >= *v78)
      {
        if (v80 == *(_DWORD *)(v74 + 60))
        {
LABEL_147:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(v74 + 48), v80 + 1);
          std::string::size_type v78 = *(int **)(v74 + 64);
          int v80 = *v78;
        }
        *std::string::size_type v78 = v80 + 1;
        long long v82 = (atomic_ullong *)*v76;
        if (!*v76) {
          operator new();
        }
        if (v82[14]) {
        int v81 = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v82, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
        }
        v81->__r_.__value_.__r.__words[0] = 0;
        v81->__r_.__value_.__l.__size_ = 0;
        v81->__r_.__value_.__r.__words[2] = 0;
        uint64_t v83 = *(void *)(v74 + 64);
        uint64_t v84 = *(int *)(v74 + 56);
        *(_DWORD *)(v74 + 56) = v84 + 1;
        *(void *)(v83 + 8 * v84 + 8) = v81;
        goto LABEL_153;
      }
      *(_DWORD *)(v74 + 56) = v79 + 1;
      int v81 = *(std::string **)&v78[2 * v79 + 2];
LABEL_153:
      std::string::operator=(v81, v77);
      if (++v75 >= *(_DWORD *)(v74 + 32)) {
        goto LABEL_154;
      }
    }
    int v80 = *(_DWORD *)(v74 + 60);
    goto LABEL_147;
  }
LABEL_193:
  if (*((int *)v2 + 98) >= 1)
  {
    int v107 = 0;
    do
    {
      uint64_t v108 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Variable>::TypeHandler>((uint64_t)v2 + 384, v107);
      if (*(int *)(v108 + 32) >= 1)
      {
        int v109 = 0;
        do
        {
          int v110 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(v108 + 24, v109);
          siri::intelligence::UpdateKeyValueParameterTo_1_0_2(v110, v111);
          ++v109;
        }
        while (v109 < *(_DWORD *)(v108 + 32));
      }
      if (*(int *)(v108 + 56) >= 1)
      {
        int v112 = 0;
        do
        {
          uint64_t v113 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(v108 + 48, v112);
          siri::intelligence::UpdateKeyValueParameterTo_1_0_2(v113, v114);
          ++v112;
        }
        while (v112 < *(_DWORD *)(v108 + 56));
      }
      ++v107;
    }
    while (v107 < *((_DWORD *)v2 + 98));
  }
}

void sub_239A3CD44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::UpdateTo_1_0_3(siri::intelligence *this, protobuf::Intelligence *a2)
{
  if (*((int *)this + 68) >= 1)
  {
    int v3 = 0;
    int v4 = (char *)this + 264;
    do
    {
      uint64_t v6 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition>::TypeHandler>((uint64_t)v4, v3);
      *(_DWORD *)(v6 + 16) |= 2u;
      unsigned int v7 = *(siri::intelligence **)(v6 + 32);
      if (!v7)
      {
        unsigned int v7 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition_ConditionEntry>(0);
        *(void *)(v6 + 32) = v7;
      }
      siri::intelligence::UpdateConditionEntryTo_1_0_3(v7, v5);
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 68));
  }
}

void siri::intelligence::UpdateTo_1_0_4(siri::intelligence *this, protobuf::Intelligence *a2)
{
  if (*((int *)this + 98) >= 1)
  {
    int v3 = 0;
    int v4 = (char *)this + 384;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Variable>::TypeHandler>((uint64_t)v4, v3);
      if ((*(unsigned char *)(v5 + 16) & 2) != 0)
      {
        uint64_t v6 = v5;
        unsigned int v7 = (uint64_t *)(v5 + 80);
        uint64_t v8 = *(std::string **)(v5 + 80);
        std::string::basic_string[abi:ne180100]<0>(&__p, "[]");
        BOOL v9 = siri::intelligence::StringEndsWith(v8, (unsigned __int8 *)&__p);
        BOOL v10 = v9;
        if (v12 < 0)
        {
          operator delete((void *)__p.n128_u64[0]);
          if (v10)
          {
LABEL_8:
            *(_DWORD *)(v6 + 16) |= 2u;
            std::string::basic_string[abi:ne180100]<0>(&__p, "array");
            google::protobuf::internal::ArenaStringPtr::SetNoArena(v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, &__p);
            if (v12 < 0) {
              operator delete((void *)__p.n128_u64[0]);
            }
          }
        }
        else if (v9)
        {
          goto LABEL_8;
        }
      }
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 98));
  }
}

void sub_239A3CFA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::UpdateTo_1_0_5(siri::intelligence *this, protobuf::Intelligence *a2)
{
  if (*((int *)this + 98) >= 1)
  {
    int v3 = 0;
    int v4 = (char *)this + 384;
    while (1)
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Variable>::TypeHandler>((uint64_t)v4, v3);
      uint64_t v6 = v5;
      int v7 = *(_DWORD *)(v5 + 16);
      if ((v7 & 8) != 0)
      {
        *(_DWORD *)(v5 + 16) = v7 | 0x10;
        int v19 = *(protobuf::Intelligence_KeyValueParameter **)(v5 + 104);
        if (!v19)
        {
          int v19 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
          *(void *)(v6 + 104) = v19;
        }
        uint64_t v20 = *(const std::string **)(v6 + 96);
        uint64_t v23 = (uint64_t *)*((void *)v19 + 16);
        uint64_t v21 = (uint64_t)v19 + 128;
        int v22 = (std::string *)v23;
        *(_DWORD *)(v21 - 112) |= 2u;
        if (v23 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v21, (uint64_t)v20);
        }
        std::string::operator=(v22, v20);
        uint64_t v27 = *(void *)(v6 + 96);
        if ((uint64_t *)v27 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v27 + 23) < 0)
          {
            **(unsigned char **)uint64_t v27 = 0;
            *(void *)(v27 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v27 = 0;
            *(unsigned char *)(v27 + 23) = 0;
          }
        }
        unsigned int v26 = *(_DWORD *)(v6 + 16) & 0xFFFFFFF7;
        goto LABEL_43;
      }
      if ((v7 & 0x20) != 0) {
        break;
      }
      if ((v7 & 0x80) != 0)
      {
        *(_DWORD *)(v5 + 16) = v7 | 0x10;
        int v28 = *(protobuf::Intelligence_KeyValueParameter **)(v5 + 104);
        if (!v28)
        {
          int v28 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
          *(void *)(v6 + 104) = v28;
        }
        char v29 = *(unsigned char *)(v6 + 121);
        *((_DWORD *)v28 + 4) |= 0x100u;
        *((unsigned char *)v28 + 184) = v29;
        *(unsigned char *)(v6 + 121) = 0;
        unsigned int v26 = *(_DWORD *)(v6 + 16) & 0xFFFFFF7F;
LABEL_43:
        *(_DWORD *)(v6 + 16) = v26;
        goto LABEL_44;
      }
      if (*(int *)(v5 + 32) >= 1)
      {
        *(_DWORD *)(v5 + 16) = v7 | 0x10;
        uint64_t v8 = *(protobuf::Intelligence_KeyValueParameter **)(v5 + 104);
        if (!v8)
        {
          uint64_t v8 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
          *(void *)(v6 + 104) = v8;
        }
        uint64_t v9 = v6 + 24;
        uint64_t v40 = 0;
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(&v40, v9);
        if (v41)
        {
          if (v42) {
            BOOL v10 = (const protobuf::Intelligence_KeyValueParameter **)(v42 + 8);
          }
          else {
            BOOL v10 = 0;
          }
          while (1)
          {
            long long v11 = (int *)*((void *)v8 + 8);
            if (!v11) {
              break;
            }
            uint64_t v12 = *((int *)v8 + 14);
            int v13 = *v11;
            if ((int)v12 >= *v11)
            {
              if (v13 == *((_DWORD *)v8 + 15))
              {
LABEL_18:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v8 + 12, v13 + 1);
                long long v11 = (int *)*((void *)v8 + 8);
                int v13 = *v11;
              }
              int *v11 = v13 + 1;
              uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*((google::protobuf::internal::ArenaImpl **)v8 + 6));
              uint64_t v15 = *((void *)v8 + 8);
              uint64_t v16 = *((int *)v8 + 14);
              *((_DWORD *)v8 + 14) = v16 + 1;
              *(void *)(v15 + 8 * v16 + 8) = v14;
              goto LABEL_20;
            }
            *((_DWORD *)v8 + 14) = v12 + 1;
            uint64_t v14 = *(protobuf::Intelligence_KeyValueParameter **)&v11[2 * v12 + 2];
LABEL_20:
            uint64_t v17 = *v10;
            if (*v10 != v14)
            {
              protobuf::Intelligence_KeyValueParameter::Clear(v14);
              protobuf::Intelligence_KeyValueParameter::MergeFrom(v14, v17);
            }
            ++v10;
            if (v42) {
              uint64_t v18 = v42 + 8;
            }
            else {
              uint64_t v18 = 0;
            }
            if (v10 == (const protobuf::Intelligence_KeyValueParameter **)(v18 + 8 * (int)v41)) {
              goto LABEL_66;
            }
          }
          int v13 = *((_DWORD *)v8 + 15);
          goto LABEL_18;
        }
        goto LABEL_66;
      }
      if (*(int *)(v5 + 56) >= 1)
      {
        *(_DWORD *)(v5 + 16) = v7 | 0x10;
        long long v30 = *(protobuf::Intelligence_KeyValueParameter **)(v5 + 104);
        if (!v30)
        {
          long long v30 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
          *(void *)(v6 + 104) = v30;
        }
        uint64_t v9 = v6 + 48;
        uint64_t v40 = 0;
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(&v40, v9);
        if (!v41)
        {
LABEL_66:
          google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(v9);
          google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)&v40);
          goto LABEL_44;
        }
        if (v42) {
          uint64_t v31 = (const protobuf::Intelligence_KeyValueParameter **)(v42 + 8);
        }
        else {
          uint64_t v31 = 0;
        }
        while (2)
        {
          uint64_t v32 = (int *)*((void *)v30 + 11);
          if (v32)
          {
            uint64_t v33 = *((int *)v30 + 20);
            int v34 = *v32;
            if ((int)v33 < *v32)
            {
              *((_DWORD *)v30 + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v33 + 1;
              int v35 = *(protobuf::Intelligence_KeyValueParameter **)&v32[2 * v33 + 2];
              goto LABEL_60;
            }
            if (v34 == *((_DWORD *)v30 + 21))
            {
LABEL_58:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v30 + 18, v34 + 1);
              uint64_t v32 = (int *)*((void *)v30 + 11);
              int v34 = *v32;
            }
            *uint64_t v32 = v34 + 1;
            int v35 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*((google::protobuf::internal::ArenaImpl **)v30 + 9));
            uint64_t v36 = *((void *)v30 + 11);
            uint64_t v37 = *((int *)v30 + 20);
            *((_DWORD *)v30 + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v37 + 1;
            *(void *)(v36 + 8 * v37 + 8) = v35;
LABEL_60:
            uint64_t v38 = *v31;
            if (*v31 != v35)
            {
              protobuf::Intelligence_KeyValueParameter::Clear(v35);
              protobuf::Intelligence_KeyValueParameter::MergeFrom(v35, v38);
            }
            ++v31;
            if (v42) {
              uint64_t v39 = v42 + 8;
            }
            else {
              uint64_t v39 = 0;
            }
            if (v31 == (const protobuf::Intelligence_KeyValueParameter **)(v39 + 8 * (int)v41)) {
              goto LABEL_66;
            }
            continue;
          }
          break;
        }
        int v34 = *((_DWORD *)v30 + 21);
        goto LABEL_58;
      }
LABEL_44:
      if (++v3 >= *((_DWORD *)this + 98)) {
        return;
      }
    }
    *(_DWORD *)(v5 + 16) = v7 | 0x10;
    uint64_t v24 = *(protobuf::Intelligence_KeyValueParameter **)(v5 + 104);
    if (!v24)
    {
      uint64_t v24 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
      *(void *)(v6 + 104) = v24;
    }
    uint64_t v25 = *(void *)(v6 + 112);
    *((_DWORD *)v24 + 4) |= 0x80u;
    *((void *)v24 + 22) = v25;
    *(void *)(v6 + 112) = 0;
    unsigned int v26 = *(_DWORD *)(v6 + 16) & 0xFFFFFFDF;
    goto LABEL_43;
  }
}

void sub_239A3D3BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)va);
  _Unwind_Resume(a1);
}

void siri::intelligence::UpdateTo_1_0_6(siri::intelligence *this, protobuf::Intelligence *a2)
{
  if (*((int *)this + 110) < 1) {
    goto LABEL_222;
  }
  int v3 = 0;
  int v4 = (siri::intelligence *)((char *)this + 432);
  uint64_t v127 = (siri::intelligence *)((char *)this + 432);
  uint64_t v128 = (char *)this + 168;
  do
  {
    uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((uint64_t)v4, v3);
    if ((*(unsigned char *)(v5 + 16) & 2) == 0 || *((int *)this + 44) < 1) {
      goto LABEL_36;
    }
    int v6 = 0;
    while (1)
    {
      uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::TypeHandler>((uint64_t)v128, v6);
      uint64_t v8 = *(unsigned __int8 **)(v7 + 56);
      uint64_t v9 = *(void *)(v5 + 152);
      uint64_t v10 = v8[23];
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v8[23];
      }
      else {
        uint64_t v11 = *((void *)v8 + 1);
      }
      uint64_t v12 = *(unsigned __int8 *)(v9 + 23);
      int v13 = (char)v12;
      if ((v12 & 0x80u) != 0) {
        uint64_t v12 = *(void *)(v9 + 8);
      }
      if (v11 != v12) {
        goto LABEL_21;
      }
      uint64_t v14 = v7;
      uint64_t v15 = v13 >= 0 ? *(unsigned __int8 **)(v5 + 152) : *(unsigned __int8 **)v9;
      if ((v10 & 0x80) != 0) {
        break;
      }
      if (!v8[23]) {
        goto LABEL_23;
      }
      while (*v8 == *v15)
      {
        ++v8;
        ++v15;
        if (!--v10) {
          goto LABEL_23;
        }
      }
LABEL_21:
      if (++v6 >= *((_DWORD *)this + 44)) {
        goto LABEL_36;
      }
    }
    if (memcmp(*(const void **)v8, v15, *((void *)v8 + 1))) {
      goto LABEL_21;
    }
LABEL_23:
    uint64_t v16 = *(const std::string **)(v5 + 144);
    uint64_t v17 = *(std::string **)(v14 + 72);
    *(_DWORD *)(v14 + 16) |= 8u;
    if (v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v14 + 72, (uint64_t)v16);
    }
    std::string::operator=(v17, v16);
    uint64_t v18 = *(char ***)(v14 + 64);
    std::string::basic_string[abi:ne180100]<0>(__p, "default=yes");
    int v19 = siri::intelligence::StringContains(v18, (char *)__p);
    int v20 = v19;
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p[0].__r_.__value_.__l.__data_);
      if (!v20) {
        goto LABEL_35;
      }
    }
    else if (!v19)
    {
      goto LABEL_35;
    }
    *((_DWORD *)this + 4) |= 2u;
    uint64_t v21 = (protobuf::Intelligence_Start *)*((void *)this + 67);
    if (v21
      || (uint64_t v21 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Start>(0),
          (*((void *)this + 67) = v21) != 0))
    {
      int v22 = *(const std::string **)(v14 + 56);
      uint64_t v25 = (uint64_t *)*((void *)v21 + 6);
      uint64_t v23 = (uint64_t)v21 + 48;
      uint64_t v24 = (std::string *)v25;
      *(_DWORD *)(v23 - 32) |= 1u;
      if (v25 == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v23, (uint64_t)v22);
      }
      std::string::operator=(v24, v22);
    }
LABEL_35:
    *(unsigned char *)(v5 + 169) = 0;
    *(_DWORD *)(v5 + 16) &= ~0x10u;
LABEL_36:
    if (*(int *)(v5 + 80) >= 1)
    {
      uint64_t v26 = 0;
      while (1)
      {
        uint64_t v27 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_LegacyEvent>::TypeHandler>(v5 + 72, v26);
        siri::intelligence::StringToUpper(*(void *)(v27 + 48), __p);
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
          break;
        }
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) == 18)
        {
          BOOL v28 = __p[0].__r_.__value_.__r.__words[0] == 0x4F435F5452415453
             && __p[0].__r_.__value_.__l.__size_ == 0x495441535245564ELL;
          if (v28 && LOWORD(__p[0].__r_.__value_.__r.__words[2]) == 20047) {
            goto LABEL_64;
          }
        }
LABEL_62:
        if ((int)++v26 >= *(_DWORD *)(v5 + 80)) {
          goto LABEL_155;
        }
      }
      if (__p[0].__r_.__value_.__l.__size_ != 18)
      {
        operator delete(__p[0].__r_.__value_.__l.__data_);
        goto LABEL_62;
      }
      BOOL v32 = *(void *)__p[0].__r_.__value_.__l.__data_ != 0x4F435F5452415453
         || *(void *)(__p[0].__r_.__value_.__r.__words[0] + 8) != 0x495441535245564ELL
         || *(_WORD *)(__p[0].__r_.__value_.__r.__words[0] + 16) != 20047;
      operator delete(__p[0].__r_.__value_.__l.__data_);
      if (v32) {
        goto LABEL_62;
      }
LABEL_64:
      if (*(int *)(v27 + 32) < 1) {
        goto LABEL_141;
      }
      if ((*(unsigned char *)(v5 + 16) & 2) == 0) {
        goto LABEL_66;
      }
      int v48 = *(uint64_t **)(v5 + 152);
      int v49 = *((char *)v48 + 23);
      if (v49 < 0)
      {
        if (v48[1] != 10) {
          goto LABEL_100;
        }
        int v48 = (uint64_t *)*v48;
      }
      else if (v49 != 10)
      {
        goto LABEL_100;
      }
      std::string::size_type v50 = (uint64_t *)*v48;
      int v51 = *((unsigned __int16 *)v48 + 4);
      if (v50 != (uint64_t *)0x6C61626F6C675F5FLL || v51 != 24415)
      {
LABEL_100:
        if (*((int *)this + 44) >= 1)
        {
          int v53 = 0;
          while (1)
          {
            uint64_t v54 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::TypeHandler>((uint64_t)v128, v53);
            uint64_t v55 = *(unsigned __int8 **)(v54 + 56);
            int v56 = *(unsigned __int8 ***)(v5 + 152);
            uint64_t v57 = v55[23];
            if ((v57 & 0x80u) == 0) {
              uint64_t v58 = (unsigned __int8 *)v55[23];
            }
            else {
              uint64_t v58 = (unsigned __int8 *)*((void *)v55 + 1);
            }
            uint64_t v59 = (unsigned __int8 *)*((unsigned __int8 *)v56 + 23);
            int v60 = (char)v59;
            if ((char)v59 < 0) {
              uint64_t v59 = v56[1];
            }
            if (v58 == v59)
            {
              uint64_t v61 = v54;
              if (v60 >= 0) {
                uint64_t v62 = *(unsigned __int8 **)(v5 + 152);
              }
              else {
                uint64_t v62 = *v56;
              }
              if ((v57 & 0x80) == 0)
              {
                if (!v55[23]) {
                  break;
                }
                while (*v55 == *v62)
                {
                  ++v55;
                  ++v62;
                  if (!--v57) {
                    goto LABEL_119;
                  }
                }
                goto LABEL_117;
              }
              if (!memcmp(*(const void **)v55, v62, *((void *)v55 + 1))) {
                break;
              }
            }
LABEL_117:
            if (++v53 >= *((_DWORD *)this + 44)) {
              goto LABEL_141;
            }
          }
LABEL_119:
          uint64_t v63 = *(void *)(v27 + 40);
          uint64_t v64 = v63 ? v63 + 8 : 0;
          uint64_t v65 = *(int *)(v27 + 32);
          if (v65)
          {
            long long v66 = (uint64_t *)(v61 + 24);
            uint64_t v67 = 8 * v65;
            while (1)
            {
              uint64_t v68 = *(long long **)v64;
              if (*(char *)(*(void *)v64 + 23) < 0)
              {
                std::string::__init_copy_ctor_external(__p, *(const std::string::value_type **)v68, *((void *)v68 + 1));
              }
              else
              {
                long long v69 = *v68;
                __p[0].__r_.__value_.__r.__words[2] = *((void *)v68 + 2);
                *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v69;
              }
              uint64_t v70 = *(int **)(v61 + 40);
              if (!v70) {
                break;
              }
              uint64_t v71 = *(int *)(v61 + 32);
              int v72 = *v70;
              if ((int)v71 >= *v70)
              {
                if (v72 == *(_DWORD *)(v61 + 36))
                {
LABEL_132:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(v61 + 24), v72 + 1);
                  uint64_t v70 = *(int **)(v61 + 40);
                  int v72 = *v70;
                }
                int *v70 = v72 + 1;
                uint64_t v74 = (atomic_ullong *)*v66;
                if (!*v66) {
                  operator new();
                }
                if (v74[14]) {
                unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v74, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
                }
                AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
                AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
                AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
                uint64_t v75 = *(void *)(v61 + 40);
                uint64_t v76 = *(int *)(v61 + 32);
                *(_DWORD *)(v61 + 32) = v76 + 1;
                *(void *)(v75 + 8 * v76 + 8) = AlignedAndAddCleanup;
                goto LABEL_138;
              }
              *(_DWORD *)(v61 + 32) = v71 + 1;
              unint64_t AlignedAndAddCleanup = *(std::string **)&v70[2 * v71 + 2];
LABEL_138:
              std::string::operator=(AlignedAndAddCleanup, __p);
              if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p[0].__r_.__value_.__l.__data_);
              }
              v64 += 8;
              v67 -= 8;
              if (!v67) {
                goto LABEL_141;
              }
            }
            int v72 = *(_DWORD *)(v61 + 36);
            goto LABEL_132;
          }
        }
        goto LABEL_141;
      }
LABEL_66:
      if ((*((_DWORD *)this + 4) |= 2u, (uint64_t v33 = (protobuf::Intelligence_Start *)*((void *)this + 67)) == 0)
        && (uint64_t v33 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Start>(0),
            (*((void *)this + 67) = v33) == 0)
        || ((uint64_t v34 = *(void *)(v27 + 40)) != 0 ? (v35 = (long long **)(v34 + 8)) : (v35 = 0),
            uint64_t v36 = *(int *)(v27 + 32),
            !v36))
      {
LABEL_141:
        if (*(_DWORD *)(v5 + 80) < (int)v26 + 1)
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2043);
          uint64_t v77 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (start + num) <= (size()): ");
          google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v77->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
        }
        if ((int)v26 >= *(_DWORD *)(v5 + 80))
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1568);
          std::string::size_type v78 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (index) < (current_size_): ");
          google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v78->__r_.__value_.__l.__data_);
          int v4 = v127;
          google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
        }
        else
        {
          int v4 = v127;
        }
        uint64_t v79 = *(void *)(*(void *)(v5 + 88) + 8 * v26 + 8);
        if (v79) {
          BOOL v80 = *(void *)(v5 + 72) == 0;
        }
        else {
          BOOL v80 = 0;
        }
        if (v80) {
          (*(void (**)(uint64_t))(*(void *)v79 + 8))(v79);
        }
        if (*(_DWORD *)(v5 + 80) < (int)v26 + 1)
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2065);
          int v81 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (start + num) <= (size()): ");
          google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v81->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
        }
        google::protobuf::internal::RepeatedPtrFieldBase::CloseGap(v5 + 72, v26, 1);
        goto LABEL_155;
      }
      uint64_t v37 = (uint64_t *)((char *)v33 + 24);
      uint64_t v38 = 8 * v36;
      while (1)
      {
        uint64_t v39 = *v35;
        if (*((char *)*v35 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(__p, *(const std::string::value_type **)v39, *((void *)v39 + 1));
        }
        else
        {
          long long v40 = *v39;
          __p[0].__r_.__value_.__r.__words[2] = *((void *)v39 + 2);
          *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v40;
        }
        uint64_t v41 = (int *)*((void *)v33 + 5);
        if (!v41) {
          break;
        }
        uint64_t v42 = *((int *)v33 + 8);
        int v43 = *v41;
        if ((int)v42 >= *v41)
        {
          if (v43 == *((_DWORD *)v33 + 9))
          {
LABEL_81:
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v33 + 6, v43 + 1);
            uint64_t v41 = (int *)*((void *)v33 + 5);
            int v43 = *v41;
          }
          int *v41 = v43 + 1;
          uint64_t v45 = (atomic_ullong *)*v37;
          if (!*v37) {
            operator new();
          }
          if (v45[14]) {
          uint64_t v44 = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v45, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
          }
          v44->__r_.__value_.__r.__words[0] = 0;
          v44->__r_.__value_.__l.__size_ = 0;
          v44->__r_.__value_.__r.__words[2] = 0;
          uint64_t v46 = *((void *)v33 + 5);
          uint64_t v47 = *((int *)v33 + 8);
          *((_DWORD *)v33 + 8) = v47 + 1;
          *(void *)(v46 + 8 * v47 + 8) = v44;
          goto LABEL_87;
        }
        *((_DWORD *)v33 + 8) = v42 + 1;
        uint64_t v44 = *(std::string **)&v41[2 * v42 + 2];
LABEL_87:
        std::string::operator=(v44, __p);
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p[0].__r_.__value_.__l.__data_);
        }
        ++v35;
        v38 -= 8;
        if (!v38) {
          goto LABEL_141;
        }
      }
      int v43 = *((_DWORD *)v33 + 9);
      goto LABEL_81;
    }
LABEL_155:
    unsigned int v82 = *(_DWORD *)(v5 + 16);
    if ((v82 & 2) != 0)
    {
      uint64_t v83 = *(void *)(v5 + 152);
      if ((uint64_t *)v83 != &google::protobuf::internal::fixed_address_empty_string)
      {
        if (*(char *)(v83 + 23) < 0)
        {
          **(unsigned char **)uint64_t v83 = 0;
          *(void *)(v83 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v83 = 0;
          *(unsigned char *)(v83 + 23) = 0;
        }
      }
      unsigned int v82 = *(_DWORD *)(v5 + 16) & 0xFFFFFFFD;
      *(_DWORD *)(v5 + 16) = v82;
    }
    if (!*(unsigned char *)(v5 + 169))
    {
      *(unsigned char *)(v5 + 169) = 0;
      *(_DWORD *)(v5 + 16) = v82 & 0xFFFFFFEF;
    }
    ++v3;
    uint64_t v84 = *((unsigned int *)this + 110);
  }
  while (v3 < (int)v84);
  if ((int)v84 >= 1)
  {
    while (1)
    {
      uint64_t v85 = v84 - 1;
      uint64_t v86 = (_DWORD *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((uint64_t)v4, (int)v84 - 1);
      BOOL v87 = !v86[8] && v86[14] == 0;
      if (v87 && v86[20] == 0) {
        break;
      }
LABEL_220:
      if (v84-- <= 1) {
        goto LABEL_222;
      }
    }
    if (*((int *)this + 44) >= 1)
    {
      int v89 = v86;
      int v90 = 0;
      while (1)
      {
        uint64_t v91 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::TypeHandler>((uint64_t)v128, v90);
        uint64_t v92 = *(void *)(v91 + 72);
        uint64_t v93 = *((void *)v89 + 18);
        uint64_t v94 = *(unsigned __int8 *)(v92 + 23);
        if ((v94 & 0x80u) == 0) {
          uint64_t v95 = *(unsigned __int8 *)(v92 + 23);
        }
        else {
          uint64_t v95 = *(void *)(v92 + 8);
        }
        uint64_t v96 = *(unsigned __int8 *)(v93 + 23);
        int v97 = (char)v96;
        if ((v96 & 0x80u) != 0) {
          uint64_t v96 = *(void *)(v93 + 8);
        }
        if (v95 != v96) {
          goto LABEL_195;
        }
        uint64_t v98 = v91;
        uint64_t v99 = v97 >= 0 ? (unsigned __int8 *)*((void *)v89 + 18) : *(unsigned __int8 **)v93;
        if ((v94 & 0x80) == 0) {
          break;
        }
        uint64_t v101 = *(unsigned char **)v92;
        if (!memcmp(*(const void **)v92, v99, *(void *)(v92 + 8)))
        {
          if ((uint64_t *)v92 != &google::protobuf::internal::fixed_address_empty_string)
          {
            unsigned char *v101 = 0;
            *(void *)(v92 + 8) = 0;
          }
LABEL_194:
          *(_DWORD *)(v98 + 16) &= ~8u;
        }
LABEL_195:
        if (++v90 >= *((_DWORD *)this + 44)) {
          goto LABEL_196;
        }
      }
      if (*(unsigned char *)(v92 + 23))
      {
        uint64_t v100 = 0;
        while (*(unsigned __int8 *)(v92 + v100) == v99[v100])
        {
          if (v94 == ++v100) {
            goto LABEL_189;
          }
        }
        goto LABEL_195;
      }
LABEL_189:
      if ((uint64_t *)v92 != &google::protobuf::internal::fixed_address_empty_string)
      {
        *(unsigned char *)uint64_t v92 = 0;
        *(unsigned char *)(v92 + 23) = 0;
      }
      goto LABEL_194;
    }
LABEL_196:
    if ((v85 & 0x80000000) != 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2041);
      uint64_t v102 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (start) >= (0): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v102->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
    unint64_t v103 = (unint64_t)(8 * v85 + 8) >> 3;
    int v104 = v103 - v85;
    if (v103 - v85 < 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2042);
      long long v105 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (num) >= (0): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v105->__r_.__value_.__l.__data_);
      int v4 = v127;
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
    else
    {
      int v4 = v127;
    }
    if (*((_DWORD *)this + 110) < (int)v103)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2043);
      uint64_t v106 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (start + num) <= (size()): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v106->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
    if (v104 >= 1)
    {
      if ((v85 & 0x80000000) != 0)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1567);
        int v107 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (index) >= (0): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v107->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
      }
      if ((int)v85 >= (uint64_t)*((int *)this + 110))
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1568);
        uint64_t v108 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v108->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
      }
      uint64_t v109 = *(void *)(*((void *)this + 56) + 8 * (int)v85 + 8);
      int v4 = v127;
      if (v109 && !*((void *)this + 54)) {
        (*(void (**)(uint64_t))(*(void *)v109 + 8))(v109);
      }
    }
    if ((v85 & 0x80000000) != 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2063);
      int v110 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (start) >= (0): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v110->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
      if (v104 < 0) {
        goto LABEL_215;
      }
    }
    else if (v104 < 0)
    {
LABEL_215:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2064);
      uint64_t v111 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (num) >= (0): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v111->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
    if (*((_DWORD *)this + 110) < (int)v103)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2065);
      int v112 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (start + num) <= (size()): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v112->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
    if (v104 > 0) {
      google::protobuf::internal::RepeatedPtrFieldBase::CloseGap((uint64_t)v4, v84 - 1, v104);
    }
    goto LABEL_220;
  }
LABEL_222:
  if (*((int *)this + 44) >= 1)
  {
    int v114 = 0;
    do
    {
      uint64_t v115 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::TypeHandler>((uint64_t)this + 168, v114);
      uint64_t v116 = *(void *)(v115 + 64);
      if ((uint64_t *)v116 != &google::protobuf::internal::fixed_address_empty_string)
      {
        if (*(char *)(v116 + 23) < 0)
        {
          **(unsigned char **)uint64_t v116 = 0;
          *(void *)(v116 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v116 = 0;
          *(unsigned char *)(v116 + 23) = 0;
        }
      }
      *(_DWORD *)(v115 + 16) &= ~4u;
      ++v114;
      int v117 = *((_DWORD *)this + 44);
    }
    while (v114 < v117);
    if (v117 > 0)
    {
      int v118 = *((_DWORD *)this + 4);
      if ((v118 & 2) != 0)
      {
        if (!*((void *)this + 67))
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 22110);
          uint64_t v124 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: !value || start_ != nullptr: ");
          google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v124->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
        }
      }
      else
      {
        *((_DWORD *)this + 4) = v118 | 2;
        std::string v119 = (protobuf::Intelligence_Start *)*((void *)this + 67);
        if (v119) {
          goto LABEL_232;
        }
        int v125 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Start>(0);
        *((void *)this + 67) = v125;
        if (v125)
        {
          std::string v119 = v125;
          if (*((int *)this + 44) <= 0)
          {
            google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
            uint64_t v126 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (index) < (current_size_): ");
            google::protobuf::internal::LogFinisher::operator=((int)&v129, (const char **)&v126->__r_.__value_.__l.__data_);
            google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
          }
LABEL_232:
          uint64_t v120 = *(const std::string **)(*(void *)(*((void *)this + 23) + 8) + 56);
          BOOL v123 = (uint64_t *)*((void *)v119 + 6);
          uint64_t v122 = (uint64_t)v119 + 48;
          int v121 = (std::string *)v123;
          *(_DWORD *)(v122 - 32) |= 1u;
          if (v123 == &google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v122, (uint64_t)v120);
          }
          std::string::operator=(v121, v120);
        }
      }
    }
  }
}

void sub_239A3E18C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
}

uint64_t siri::intelligence::UpdateTo_1_0_7(uint64_t this, protobuf::Intelligence *a2)
{
  uint64_t v2 = (_DWORD *)this;
  if (*(int *)(this + 56) >= 1)
  {
    int v3 = 0;
    do
    {
      this = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_DialogResponse>::TypeHandler>((uint64_t)(v2 + 12), v3);
      int v4 = *(_DWORD *)(this + 16);
      if ((v4 & 0x20) != 0)
      {
        uint64_t v5 = this;
        uint64_t v8 = *(uint64_t **)(this + 216);
        uint64_t v6 = this + 216;
        uint64_t v7 = (std::string *)v8;
        uint64_t v9 = *(const std::string **)(v6 - 56);
        *(_DWORD *)(v6 - 20siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v4 | 0x1000;
        if (v8 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)v9);
        }
        this = (uint64_t)std::string::operator=(v7, v9);
        uint64_t v10 = *(void *)(v5 + 160);
        if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v10 + 23) < 0)
          {
            **(unsigned char **)uint64_t v10 = 0;
            *(void *)(v10 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v10 = 0;
            *(unsigned char *)(v10 + 23) = 0;
          }
        }
        *(_DWORD *)(v5 + 16) &= ~0x20u;
      }
      ++v3;
    }
    while (v3 < v2[14]);
  }
  if ((int)v2[20] >= 1)
  {
    int v11 = 0;
    do
    {
      this = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::TypeHandler>((uint64_t)(v2 + 18), v11);
      int v12 = *(_DWORD *)(this + 16);
      if ((v12 & 0x20) != 0)
      {
        uint64_t v13 = this;
        uint64_t v16 = *(uint64_t **)(this + 144);
        uint64_t v14 = this + 144;
        uint64_t v15 = (std::string *)v16;
        uint64_t v17 = *(const std::string **)(v14 - 32);
        *(_DWORD *)(v14 - 128) = v12 | 0x200;
        if (v16 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v14, (uint64_t)v17);
        }
        this = (uint64_t)std::string::operator=(v15, v17);
        uint64_t v18 = *(void *)(v13 + 112);
        if ((uint64_t *)v18 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v18 + 23) < 0)
          {
            **(unsigned char **)uint64_t v18 = 0;
            *(void *)(v18 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v18 = 0;
            *(unsigned char *)(v18 + 23) = 0;
          }
        }
        *(_DWORD *)(v13 + 16) &= ~0x20u;
      }
      ++v11;
    }
    while (v11 < v2[20]);
  }
  if ((int)v2[26] >= 1)
  {
    int v19 = 0;
    do
    {
      this = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ReferenceResponse>::TypeHandler>((uint64_t)(v2 + 24), v19);
      int v20 = *(_DWORD *)(this + 16);
      if ((v20 & 0x20) != 0)
      {
        uint64_t v21 = this;
        uint64_t v24 = *(uint64_t **)(this + 128);
        uint64_t v22 = this + 128;
        uint64_t v23 = (std::string *)v24;
        uint64_t v25 = *(const std::string **)(v22 - 40);
        *(_DWORD *)(v22 - 112) = v20 | 0x400;
        if (v24 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v22, (uint64_t)v25);
        }
        this = (uint64_t)std::string::operator=(v23, v25);
        uint64_t v26 = *(void *)(v21 + 88);
        if ((uint64_t *)v26 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v26 + 23) < 0)
          {
            **(unsigned char **)uint64_t v26 = 0;
            *(void *)(v26 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v26 = 0;
            *(unsigned char *)(v26 + 23) = 0;
          }
        }
        *(_DWORD *)(v21 + 16) &= ~0x20u;
      }
      ++v19;
    }
    while (v19 < v2[26]);
  }
  if ((int)v2[104] >= 1)
  {
    int v27 = 0;
    do
    {
      this = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>((uint64_t)(v2 + 102), v27);
      int v28 = *(_DWORD *)(this + 16);
      if ((v28 & 0x20) != 0)
      {
        uint64_t v29 = this;
        BOOL v32 = *(uint64_t **)(this + 112);
        uint64_t v30 = this + 112;
        uint64_t v31 = (std::string *)v32;
        uint64_t v33 = *(const std::string **)(v30 - 24);
        *(_DWORD *)(v30 - 96) = v28 | 0x100;
        if (v32 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v30, (uint64_t)v33);
        }
        this = (uint64_t)std::string::operator=(v31, v33);
        uint64_t v34 = *(void *)(v29 + 88);
        if ((uint64_t *)v34 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v34 + 23) < 0)
          {
            **(unsigned char **)uint64_t v34 = 0;
            *(void *)(v34 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v34 = 0;
            *(unsigned char *)(v34 + 23) = 0;
          }
        }
        *(_DWORD *)(v29 + 16) &= ~0x20u;
      }
      ++v27;
    }
    while (v27 < v2[104]);
  }
  if ((int)v2[44] >= 1)
  {
    int v35 = 0;
    do
    {
      this = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::TypeHandler>((uint64_t)(v2 + 42), v35);
      int v36 = *(_DWORD *)(this + 16);
      if ((v36 & 8) != 0)
      {
        uint64_t v37 = this;
        long long v40 = *(uint64_t **)(this + 80);
        uint64_t v38 = this + 80;
        uint64_t v39 = (std::string *)v40;
        uint64_t v41 = *(const std::string **)(v38 - 8);
        *(_DWORD *)(v38 - 64) = v36 | 0x10;
        if (v40 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v38, (uint64_t)v41);
        }
        this = (uint64_t)std::string::operator=(v39, v41);
        uint64_t v42 = *(void *)(v37 + 72);
        if ((uint64_t *)v42 != &google::protobuf::internal::fixed_address_empty_string)
        {
          if (*(char *)(v42 + 23) < 0)
          {
            **(unsigned char **)uint64_t v42 = 0;
            *(void *)(v42 + 8) = 0;
          }
          else
          {
            *(unsigned char *)uint64_t v42 = 0;
            *(unsigned char *)(v42 + 23) = 0;
          }
        }
        *(_DWORD *)(v37 + 16) &= ~8u;
      }
      ++v35;
    }
    while (v35 < v2[44]);
  }
  return this;
}

void siri::intelligence::UpdateTo_1_4_0(siri::intelligence *this, protobuf::Intelligence *a2)
{
  if (*((int *)this + 20) >= 1)
  {
    int v3 = 0;
    int v4 = (char *)this + 72;
    while (1)
    {
      uint64_t v6 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::TypeHandler>((uint64_t)v4, v3);
      uint64_t v7 = *(long long **)(v6 + 128);
      if (*((char *)v7 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v75, *(const std::string::value_type **)v7, *((void *)v7 + 1));
      }
      else
      {
        long long v8 = *v7;
        v75.__r_.__value_.__r.__words[2] = *((void *)v7 + 2);
        *(_OWORD *)&v75.__r_.__value_.__l.__data_ = v8;
      }
      char v9 = HIBYTE(v75.__r_.__value_.__r.__words[2]);
      if ((SHIBYTE(v75.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        uint64_t v10 = &v75;
        switch(*((unsigned char *)&v75.__r_.__value_.__s + 23))
        {
          case 7:
            int v11 = *(_DWORD *)((char *)v75.__r_.__value_.__r.__words + 3);
            BOOL v12 = LODWORD(v75.__r_.__value_.__l.__data_) == 1114664816;
            int v13 = 1801675074;
            goto LABEL_21;
          case 8:
            if (v75.__r_.__value_.__r.__words[0] != 0x6B63614268737570
              && v75.__r_.__value_.__r.__words[0] != 0x7961727241746573
              && v75.__r_.__value_.__r.__words[0] != 0x7974706D45746573)
            {
              goto LABEL_200;
            }
            goto LABEL_78;
          case 9:
            if (v75.__r_.__value_.__r.__words[0] == 0x6E69727453746573 && v75.__r_.__value_.__s.__data_[8] == 103) {
              goto LABEL_78;
            }
            int v11 = v75.__r_.__value_.__s.__data_[8];
            BOOL v12 = v75.__r_.__value_.__r.__words[0] == 0x65626D754E746573;
            int v13 = 114;
LABEL_21:
            if (!v12 || v11 != v13) {
              goto LABEL_200;
            }
            goto LABEL_78;
          case 0xA:
            int v11 = LOWORD(v75.__r_.__value_.__r.__words[1]);
            BOOL v12 = v75.__r_.__value_.__r.__words[0] == 0x656C6F6F42746573;
            int v13 = 28257;
            goto LABEL_21;
          case 0xC:
            uint64_t v19 = LODWORD(v75.__r_.__value_.__r.__words[1]);
            BOOL v20 = v75.__r_.__value_.__r.__words[0] == 0x6665646E55746573;
            uint64_t v21 = 1684369001;
            goto LABEL_29;
          case 0xD:
            uint64_t v19 = *(std::string::size_type *)((char *)v75.__r_.__value_.__r.__words + 5);
            BOOL v20 = v75.__r_.__value_.__r.__words[0] == 0x6974636944746573;
            uint64_t v21 = 0x7972616E6F697463;
LABEL_29:
            if (!v20 || v19 != v21) {
              goto LABEL_200;
            }
            goto LABEL_78;
          case 0xE:
            goto LABEL_63;
          case 0x16:
            if (v75.__r_.__value_.__r.__words[0] != 0x706E497972746572
              || v75.__r_.__value_.__l.__size_ != 0x6552726F46737475
              || *(std::string::size_type *)((char *)&v75.__r_.__value_.__r.__words[1] + 6) != 0x65736E6F70736552)
            {
              goto LABEL_200;
            }
            goto LABEL_78;
          default:
            goto LABEL_200;
        }
      }
      switch(v75.__r_.__value_.__l.__size_)
      {
        case 7uLL:
          int v14 = *(_DWORD *)(v75.__r_.__value_.__r.__words[0] + 3);
          BOOL v15 = *(_DWORD *)v75.__r_.__value_.__l.__data_ == 1114664816;
          int v16 = 1801675074;
          goto LABEL_54;
        case 8uLL:
          if (*(void *)v75.__r_.__value_.__l.__data_ == 0x7961727241746573
            || *(void *)v75.__r_.__value_.__l.__data_ == 0x6B63614268737570
            || *(void *)v75.__r_.__value_.__l.__data_ == 0x7974706D45746573)
          {
            goto LABEL_78;
          }
          goto LABEL_199;
        case 9uLL:
          if (*(void *)v75.__r_.__value_.__l.__data_ == 0x6E69727453746573
            && *(unsigned char *)(v75.__r_.__value_.__r.__words[0] + 8) == 103)
          {
            goto LABEL_78;
          }
          int v14 = *(unsigned __int8 *)(v75.__r_.__value_.__r.__words[0] + 8);
          BOOL v15 = *(void *)v75.__r_.__value_.__l.__data_ == 0x65626D754E746573;
          int v16 = 114;
LABEL_54:
          if (!v15 || v14 != v16) {
            goto LABEL_199;
          }
          goto LABEL_78;
        case 0xAuLL:
          int v14 = *(unsigned __int16 *)(v75.__r_.__value_.__r.__words[0] + 8);
          BOOL v15 = *(void *)v75.__r_.__value_.__l.__data_ == 0x656C6F6F42746573;
          int v16 = 28257;
          goto LABEL_54;
        case 0xCuLL:
          uint64_t v27 = *(unsigned int *)(v75.__r_.__value_.__r.__words[0] + 8);
          BOOL v28 = *(void *)v75.__r_.__value_.__l.__data_ == 0x6665646E55746573;
          uint64_t v29 = 1684369001;
          goto LABEL_73;
        case 0xDuLL:
          uint64_t v27 = *(void *)(v75.__r_.__value_.__r.__words[0] + 5);
          BOOL v28 = *(void *)v75.__r_.__value_.__l.__data_ == 0x6974636944746573;
          uint64_t v29 = 0x7972616E6F697463;
          goto LABEL_73;
        case 0xEuLL:
          uint64_t v10 = (std::string *)v75.__r_.__value_.__r.__words[0];
LABEL_63:
          std::string::size_type v30 = v10->__r_.__value_.__r.__words[0];
          uint64_t v31 = *(std::string::size_type *)((char *)v10->__r_.__value_.__r.__words + 6);
          if (v30 != 0x6341686374697773 || v31 != 0x7974697669746341) {
            goto LABEL_198;
          }
          goto LABEL_78;
        case 0x16uLL:
          uint64_t v27 = *(void *)(v75.__r_.__value_.__r.__words[0] + 14);
          BOOL v28 = *(void *)v75.__r_.__value_.__l.__data_ == 0x706E497972746572
             && *(void *)(v75.__r_.__value_.__r.__words[0] + 8) == 0x6552726F46737475;
          uint64_t v29 = 0x65736E6F70736552;
LABEL_73:
          if (!v28 || v27 != v29) {
            goto LABEL_199;
          }
LABEL_78:
          int v34 = *(_DWORD *)(v6 + 32);
          if (!v34) {
            goto LABEL_198;
          }
          if (v34 >= 2)
          {
            if ((v75.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              int v35 = &v75;
            }
            else {
              int v35 = (std::string *)v75.__r_.__value_.__r.__words[0];
            }
            siri::intelligence::Log::Error((siri::intelligence::Log *)"Found more than 1 array parameter for behavior '%s' while upgrading to v1.0.8", v5, v35);
          }
          protobuf::Intelligence_KeyValueParameter::Intelligence_KeyValueParameter((protobuf::Intelligence_KeyValueParameter *)v72);
          if (*(int *)(v6 + 32) <= 0)
          {
            int v36 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v77, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
            uint64_t v37 = google::protobuf::internal::LogMessage::operator<<(v36, "CHECK failed: (index) < (current_size_): ");
            google::protobuf::internal::LogFinisher::operator=((int)&v76, (const char **)&v37->__r_.__value_.__l.__data_);
            google::protobuf::internal::LogMessage::~LogMessage((void **)&v77);
          }
          uint64_t v38 = *(void *)(*(void *)(v6 + 40) + 8);
          if ((SHIBYTE(v75.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
            uint64_t v39 = &v75;
            switch(*((unsigned char *)&v75.__r_.__value_.__s + 23))
            {
              case 7:
                if (LODWORD(v75.__r_.__value_.__l.__data_) == 1114664816
                  && *(_DWORD *)((char *)v75.__r_.__value_.__r.__words + 3) == 1801675074)
                {
                  goto LABEL_100;
                }
                goto LABEL_185;
              case 8:
                std::string::size_type v42 = v75.__r_.__value_.__r.__words[0];
                if (v75.__r_.__value_.__r.__words[0] == 0x6B63614268737570
                  || v75.__r_.__value_.__r.__words[0] == 0x7961727241746573)
                {
                  goto LABEL_167;
                }
                goto LABEL_142;
              case 9:
                if (v75.__r_.__value_.__r.__words[0] == 0x6E69727453746573 && v75.__r_.__value_.__s.__data_[8] == 103) {
                  goto LABEL_167;
                }
                int v44 = v75.__r_.__value_.__s.__data_[8];
                BOOL v45 = v75.__r_.__value_.__r.__words[0] == 0x65626D754E746573;
                int v46 = 114;
                goto LABEL_112;
              case 0xA:
                int v44 = LOWORD(v75.__r_.__value_.__r.__words[1]);
                BOOL v45 = v75.__r_.__value_.__r.__words[0] == 0x656C6F6F42746573;
                int v46 = 28257;
LABEL_112:
                if (!v45 || v44 != v46) {
                  goto LABEL_185;
                }
                goto LABEL_167;
              case 0xC:
                if (v75.__r_.__value_.__r.__words[0] == 0x6665646E55746573
                  && LODWORD(v75.__r_.__value_.__r.__words[1]) == 1684369001)
                {
                  goto LABEL_143;
                }
                goto LABEL_185;
              case 0xD:
                if (v75.__r_.__value_.__r.__words[0] == 0x6974636944746573
                  && *(std::string::size_type *)((char *)v75.__r_.__value_.__r.__words + 5) == 0x7972616E6F697463)
                {
                  goto LABEL_167;
                }
                goto LABEL_185;
              case 0xE:
                goto LABEL_181;
              case 0x16:
                if (v75.__r_.__value_.__r.__words[0] == 0x706E497972746572
                  && v75.__r_.__value_.__l.__size_ == 0x6552726F46737475
                  && *(std::string::size_type *)((char *)&v75.__r_.__value_.__r.__words[1] + 6) == 0x65736E6F70736552)
                {
                  goto LABEL_203;
                }
                goto LABEL_185;
              default:
                goto LABEL_185;
            }
          }
          break;
        default:
          goto LABEL_199;
      }
      switch(v75.__r_.__value_.__l.__size_)
      {
        case 7uLL:
          if (*(_DWORD *)v75.__r_.__value_.__l.__data_ == 1114664816
            && *(_DWORD *)(v75.__r_.__value_.__r.__words[0] + 3) == 1801675074)
          {
LABEL_100:
            std::string::basic_string[abi:ne180100]<0>(&v77, "name");
            siri::intelligence::ConvertPositionalArgToDictionary((uint64_t)v72, v38, 0, (char *)&v77);
            if (v78 < 0) {
              operator delete((void *)v77.n128_u64[0]);
            }
            std::string::basic_string[abi:ne180100]<0>(&v77, "destination");
            siri::intelligence::ConvertPositionalArgToDictionary((uint64_t)v72, v38, 1, (char *)&v77);
            goto LABEL_170;
          }
          goto LABEL_185;
        case 8uLL:
          if (*(void *)v75.__r_.__value_.__l.__data_ == 0x7961727241746573
            || *(void *)v75.__r_.__value_.__l.__data_ == 0x6B63614268737570)
          {
            goto LABEL_167;
          }
          std::string::size_type v42 = *(void *)v75.__r_.__value_.__l.__data_;
LABEL_142:
          if (v42 == 0x7974706D45746573) {
            goto LABEL_143;
          }
          goto LABEL_185;
        case 9uLL:
          if (*(void *)v75.__r_.__value_.__l.__data_ == 0x6E69727453746573
            && *(unsigned char *)(v75.__r_.__value_.__r.__words[0] + 8) == 103)
          {
            goto LABEL_167;
          }
          int v53 = *(unsigned __int8 *)(v75.__r_.__value_.__r.__words[0] + 8);
          BOOL v54 = *(void *)v75.__r_.__value_.__l.__data_ == 0x65626D754E746573;
          int v55 = 114;
          goto LABEL_150;
        case 0xAuLL:
          int v53 = *(unsigned __int16 *)(v75.__r_.__value_.__r.__words[0] + 8);
          BOOL v54 = *(void *)v75.__r_.__value_.__l.__data_ == 0x656C6F6F42746573;
          int v55 = 28257;
LABEL_150:
          if (!v54 || v53 != v55) {
            goto LABEL_185;
          }
          goto LABEL_167;
        case 0xCuLL:
          if (*(void *)v75.__r_.__value_.__l.__data_ != 0x6665646E55746573
            || *(_DWORD *)(v75.__r_.__value_.__r.__words[0] + 8) != 1684369001)
          {
            goto LABEL_185;
          }
LABEL_143:
          std::string::basic_string[abi:ne180100]<0>(&v77, "name");
          siri::intelligence::ConvertPositionalArgToDictionary((uint64_t)v72, v38, 0, (char *)&v77);
          goto LABEL_170;
        case 0xDuLL:
          if (*(void *)v75.__r_.__value_.__l.__data_ != 0x6974636944746573
            || *(void *)(v75.__r_.__value_.__r.__words[0] + 5) != 0x7972616E6F697463)
          {
            goto LABEL_185;
          }
LABEL_167:
          std::string::basic_string[abi:ne180100]<0>(&v77, "name");
          siri::intelligence::ConvertPositionalArgToDictionary((uint64_t)v72, v38, 0, (char *)&v77);
          if (v78 < 0) {
            operator delete((void *)v77.n128_u64[0]);
          }
          std::string::basic_string[abi:ne180100]<0>(&v77, "value");
          siri::intelligence::ConvertPositionalArgToDictionary((uint64_t)v72, v38, 1, (char *)&v77);
          goto LABEL_170;
        case 0xEuLL:
          goto LABEL_180;
        case 0x16uLL:
          if (*(void *)v75.__r_.__value_.__l.__data_ == 0x706E497972746572
            && *(void *)(v75.__r_.__value_.__r.__words[0] + 8) == 0x6552726F46737475
            && *(void *)(v75.__r_.__value_.__r.__words[0] + 14) == 0x65736E6F70736552)
          {
LABEL_203:
            std::string::basic_string[abi:ne180100]<0>(&v77, "responseId");
            siri::intelligence::ConvertPositionalArgToDictionary((uint64_t)v72, v38, 0, (char *)&v77);
            if (v78 < 0) {
              operator delete((void *)v77.n128_u64[0]);
            }
            *(_DWORD *)(v6 + 16) |= 0x80u;
            std::string::basic_string[abi:ne180100]<0>(&v77, "retryInputs");
            google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)(v6 + 128), (uint64_t)&google::protobuf::internal::fixed_address_empty_string, &v77);
            goto LABEL_170;
          }
          if (v75.__r_.__value_.__l.__size_ != 14) {
            goto LABEL_185;
          }
LABEL_180:
          uint64_t v39 = (std::string *)v75.__r_.__value_.__r.__words[0];
LABEL_181:
          std::string::size_type v61 = v39->__r_.__value_.__r.__words[0];
          uint64_t v62 = *(std::string::size_type *)((char *)v39->__r_.__value_.__r.__words + 6);
          if (v61 == 0x6341686374697773 && v62 == 0x7974697669746341)
          {
            std::string::basic_string[abi:ne180100]<0>(&v77, "activityId");
            siri::intelligence::ConvertPositionalArgToDictionary((uint64_t)v72, v38, 0, (char *)&v77);
LABEL_170:
            if (v78 < 0) {
              operator delete((void *)v77.n128_u64[0]);
            }
          }
LABEL_185:
          google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(v6 + 24);
          if (v74 >= 1)
          {
            int v64 = 0;
            while (1)
            {
              uint64_t v65 = *(int **)(v6 + 40);
              if (!v65) {
                break;
              }
              uint64_t v66 = *(int *)(v6 + 32);
              int v67 = *v65;
              if ((int)v66 >= *v65)
              {
                if (v67 == *(_DWORD *)(v6 + 36))
                {
LABEL_192:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(v6 + 24), v67 + 1);
                  uint64_t v65 = *(int **)(v6 + 40);
                  int v67 = *v65;
                }
                *uint64_t v65 = v67 + 1;
                uint64_t v68 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(v6 + 24));
                uint64_t v69 = *(void *)(v6 + 40);
                uint64_t v70 = *(int *)(v6 + 32);
                *(_DWORD *)(v6 + 32) = v70 + 1;
                *(void *)(v69 + 8 * v70 + 8) = v68;
                goto LABEL_194;
              }
              *(_DWORD *)(v6 + 32) = v66 + 1;
              uint64_t v68 = *(protobuf::Intelligence_KeyValueParameter **)&v65[2 * v66 + 2];
LABEL_194:
              uint64_t v71 = (const protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)&v73, v64);
              if (v71 != v68)
              {
                protobuf::Intelligence_KeyValueParameter::Clear(v68);
                protobuf::Intelligence_KeyValueParameter::MergeFrom(v68, v71);
              }
              if (++v64 >= v74) {
                goto LABEL_197;
              }
            }
            int v67 = *(_DWORD *)(v6 + 36);
            goto LABEL_192;
          }
LABEL_197:
          protobuf::Intelligence_KeyValueParameter::~Intelligence_KeyValueParameter((protobuf::Intelligence_KeyValueParameter *)v72);
          char v9 = HIBYTE(v75.__r_.__value_.__r.__words[2]);
LABEL_198:
          if (v9 < 0) {
LABEL_199:
          }
            operator delete(v75.__r_.__value_.__l.__data_);
LABEL_200:
          if (++v3 >= *((_DWORD *)this + 20)) {
            return;
          }
          break;
        default:
          goto LABEL_185;
      }
    }
  }
}

void sub_239A3F10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  if (*(char *)(v3 - 121) < 0) {
    operator delete(*(void **)(v3 - 144));
  }
  protobuf::Intelligence_KeyValueParameter::~Intelligence_KeyValueParameter((protobuf::Intelligence_KeyValueParameter *)va);
  if (*(char *)(v3 - 153) < 0) {
    operator delete(*(void **)(v3 - 176));
  }
  _Unwind_Resume(a1);
}

void siri::intelligence::UpdateTo_1_4_1(siri::intelligence *this, protobuf::Intelligence *a2)
{
  if (*((int *)this + 14) >= 1)
  {
    int v3 = 0;
    do
    {
      uint64_t v4 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_DialogResponse>::TypeHandler>((uint64_t)this + 48, v3);
      if (*(int *)(v4 + 32) >= 1)
      {
        int v5 = 0;
        do
        {
          uint64_t v6 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(v4 + 24, v5);
          siri::intelligence::UpdateFunctionToParameterDictionary(v6, v7);
          ++v5;
        }
        while (v5 < *(_DWORD *)(v4 + 32));
      }
      if (*(int *)(v4 + 56) >= 1)
      {
        int v8 = 0;
        do
        {
          char v9 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(v4 + 48, v8);
          siri::intelligence::UpdateFunctionToParameterDictionary(v9, v10);
          ++v8;
        }
        while (v8 < *(_DWORD *)(v4 + 56));
      }
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 14));
  }
  if (*((int *)this + 20) >= 1)
  {
    int v11 = 0;
    do
    {
      uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::TypeHandler>((uint64_t)this + 72, v11);
      if (*(int *)(v12 + 32) >= 1)
      {
        uint64_t v13 = v12;
        int v14 = 0;
        uint64_t v15 = v12 + 24;
        do
        {
          int v16 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(v15, v14);
          siri::intelligence::UpdateFunctionToParameterDictionary(v16, v17);
          ++v14;
        }
        while (v14 < *(_DWORD *)(v13 + 32));
      }
      ++v11;
    }
    while (v11 < *((_DWORD *)this + 20));
  }
  if (*((int *)this + 98) >= 1)
  {
    int v18 = 0;
    do
    {
      uint64_t v19 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Variable>::TypeHandler>((uint64_t)this + 384, v18);
      int v21 = *(_DWORD *)(v19 + 16);
      if ((v21 & 0x10) != 0)
      {
        uint64_t v22 = v19;
        uint64_t v23 = *(siri::intelligence **)(v19 + 104);
        if (!v23)
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v33, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 17756);
          uint64_t v24 = google::protobuf::internal::LogMessage::operator<<(v33, "CHECK failed: !value || default_value_ != nullptr: ");
          google::protobuf::internal::LogFinisher::operator=((int)&v32, (const char **)&v24->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v33[0].__r_.__value_.__l.__data_);
          uint64_t v23 = *(siri::intelligence **)(v22 + 104);
          int v21 = *(_DWORD *)(v22 + 16);
        }
        *(_DWORD *)(v22 + 16) = v21 | 0x10;
        siri::intelligence::UpdateFunctionToParameterDictionary(v23, v20);
      }
      ++v18;
    }
    while (v18 < *((_DWORD *)this + 98));
  }
  if (*((int *)this + 68) >= 1)
  {
    int v25 = 0;
    do
    {
      uint64_t v26 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition>::TypeHandler>((uint64_t)this + 264, v25);
      int v28 = *(_DWORD *)(v26 + 16);
      if ((v28 & 2) != 0)
      {
        uint64_t v29 = v26;
        std::string::size_type v30 = *(siri::intelligence **)(v26 + 32);
        if (!v30)
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v33, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 21788);
          uint64_t v31 = google::protobuf::internal::LogMessage::operator<<(v33, "CHECK failed: !value || condition_ != nullptr: ");
          google::protobuf::internal::LogFinisher::operator=((int)&v32, (const char **)&v31->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v33[0].__r_.__value_.__l.__data_);
          std::string::size_type v30 = *(siri::intelligence **)(v29 + 32);
          int v28 = *(_DWORD *)(v29 + 16);
        }
        *(_DWORD *)(v29 + 16) = v28 | 2;
        siri::intelligence::UpdateFunctionInCondition(v30, v27);
      }
      ++v25;
    }
    while (v25 < *((_DWORD *)this + 68));
  }
}

void sub_239A3F520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::intelligence::UpdateTo_1_4_4(siri::intelligence *this, protobuf::Intelligence *a2)
{
  if (*((int *)this + 20) >= 1)
  {
    int v3 = 0;
    uint64_t v4 = (char *)this + 72;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::TypeHandler>((uint64_t)v4, v3);
      if ((*(_DWORD *)(v5 + 16) & 0x400) != 0)
      {
        uint64_t v6 = v5;
        uint64_t v7 = *(protobuf::Intelligence_Undo **)(v5 + 152);
        if (!v7)
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 12082);
          int v8 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: !value || undo_ != nullptr: ");
          google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v8->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
          uint64_t v7 = *(protobuf::Intelligence_Undo **)(v6 + 152);
        }
        protobuf::Intelligence_Undo::Clear(v7);
        *(_DWORD *)(v6 + 16) &= ~0x400u;
      }
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 20));
  }
}

void sub_239A3F618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::intelligence::UpdateTo_1_4_5(siri::intelligence *this, protobuf::Intelligence *a2)
{
  uint64_t v2 = this;
  if (*((int *)this + 110) >= 1)
  {
    int v3 = 0;
    uint64_t v62 = (char *)this + 432;
    while (1)
    {
      int v63 = v3;
      uint64_t v4 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((uint64_t)v62, v3);
      uint64_t v5 = v4;
      if (*(int *)(v4 + 32) >= 1) {
        break;
      }
LABEL_49:
      google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::TypeHandler>(v5 + 24);
      int v3 = v63 + 1;
      uint64_t v2 = this;
      if (v63 + 1 >= *((_DWORD *)this + 110)) {
        goto LABEL_50;
      }
    }
    int v6 = 0;
    uint64_t v65 = (unsigned int *)(v4 + 120);
    while (1)
    {
      uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::TypeHandler>(v5 + 24, v6);
      int v8 = *(int **)(v5 + 136);
      if (!v8) {
        break;
      }
      uint64_t v9 = *(int *)(v5 + 128);
      int v10 = *v8;
      if ((int)v9 < *v8)
      {
        *(_DWORD *)(v5 + 128) = v9 + 1;
        int v11 = *(protobuf::Intelligence_InputGroup_Event **)&v8[2 * v9 + 2];
        goto LABEL_12;
      }
      if (v10 == *(_DWORD *)(v5 + 132)) {
        goto LABEL_10;
      }
LABEL_11:
      *int v8 = v10 + 1;
      int v11 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Event>(*(google::protobuf::internal::ArenaImpl **)(v5 + 120));
      uint64_t v12 = *(void *)(v5 + 136);
      uint64_t v13 = *(int *)(v5 + 128);
      *(_DWORD *)(v5 + 128) = v13 + 1;
      *(void *)(v12 + 8 * v13 + 8) = v11;
LABEL_12:
      if (*(unsigned char *)(v7 + 16))
      {
        int v14 = *(const std::string **)(v7 + 72);
        uint64_t v15 = (std::string *)*((void *)v11 + 6);
        *((_DWORD *)v11 + 4) |= 1u;
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v11 + 48, (uint64_t)v14);
        }
        std::string::operator=(v15, v14);
      }
      if ((*(unsigned char *)(v7 + 16) & 2) != 0)
      {
        int v16 = *(const std::string **)(v7 + 80);
        uint64_t v17 = (std::string *)*((void *)v11 + 8);
        *((_DWORD *)v11 + 4) |= 4u;
        if (v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v11 + 64, (uint64_t)v16);
        }
        std::string::operator=(v17, v16);
      }
      if ((*(unsigned char *)(v7 + 16) & 4) != 0)
      {
        int v18 = *(const std::string **)(v7 + 88);
        uint64_t v19 = (std::string *)*((void *)v11 + 7);
        *((_DWORD *)v11 + 4) |= 2u;
        if (v19 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v11 + 56, (uint64_t)v18);
        }
        std::string::operator=(v19, v18);
      }
      if ((*(_DWORD *)(v7 + 16) & 8) != 0)
      {
        BOOL v20 = *(const protobuf::Intelligence_InputGroup_Interjection **)(v7 + 96);
        if (!v20)
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v67, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 14635);
          int v21 = google::protobuf::internal::LogMessage::operator<<(v67, "CHECK failed: !value || interjection_settings_ != nullptr: ");
          google::protobuf::internal::LogFinisher::operator=((int)&v66, (const char **)&v21->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v67[0].__r_.__value_.__l.__data_);
          BOOL v20 = *(const protobuf::Intelligence_InputGroup_Interjection **)(v7 + 96);
        }
        *((_DWORD *)v11 + 4) |= 8u;
        uint64_t v22 = (protobuf::Intelligence_InputGroup_Interjection *)*((void *)v11 + 9);
        if (!v22)
        {
          uint64_t v22 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Interjection>(0);
          *((void *)v11 + 9) = v22;
          BOOL v20 = *(const protobuf::Intelligence_InputGroup_Interjection **)(v7 + 96);
        }
        if (v20) {
          uint64_t v23 = v20;
        }
        else {
          uint64_t v23 = (const protobuf::Intelligence_InputGroup_Interjection *)&protobuf::_Intelligence_InputGroup_Interjection_default_instance_;
        }
        if (v23 != v22)
        {
          protobuf::Intelligence_InputGroup_Interjection::Clear(v22);
          protobuf::Intelligence_InputGroup_Interjection::MergeFrom(v22, v23);
        }
      }
      if (*(int *)(v7 + 56) >= 1)
      {
        int v24 = 0;
        int v25 = (uint64_t *)((char *)v11 + 24);
        while (1)
        {
          uint64_t v26 = (const std::string *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v7 + 48, v24);
          uint64_t v27 = (int *)*((void *)v11 + 5);
          if (!v27) {
            break;
          }
          uint64_t v28 = *((int *)v11 + 8);
          int v29 = *v27;
          if ((int)v28 >= *v27)
          {
            if (v29 == *((_DWORD *)v11 + 9))
            {
LABEL_41:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v11 + 6, v29 + 1);
              uint64_t v27 = (int *)*((void *)v11 + 5);
              int v29 = *v27;
            }
            *uint64_t v27 = v29 + 1;
            uint64_t v31 = (atomic_ullong *)*v25;
            if (!*v25) {
              operator new();
            }
            if (v31[14]) {
            unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v31, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
            }
            AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
            AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
            AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
            uint64_t v32 = *((void *)v11 + 5);
            uint64_t v33 = *((int *)v11 + 8);
            *((_DWORD *)v11 + 8) = v33 + 1;
            *(void *)(v32 + 8 * v33 + 8) = AlignedAndAddCleanup;
            goto LABEL_47;
          }
          *((_DWORD *)v11 + 8) = v28 + 1;
          unint64_t AlignedAndAddCleanup = *(std::string **)&v27[2 * v28 + 2];
LABEL_47:
          std::string::operator=(AlignedAndAddCleanup, v26);
          if (++v24 >= *(_DWORD *)(v7 + 56)) {
            goto LABEL_48;
          }
        }
        int v29 = *((_DWORD *)v11 + 9);
        goto LABEL_41;
      }
LABEL_48:
      if (++v6 >= *(_DWORD *)(v5 + 32)) {
        goto LABEL_49;
      }
    }
    int v10 = *(_DWORD *)(v5 + 132);
LABEL_10:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v65, v10 + 1);
    int v8 = *(int **)(v5 + 136);
    int v10 = *v8;
    goto LABEL_11;
  }
LABEL_50:
  LODWORD(v34) = *((_DWORD *)v2 + 62);
  if ((int)v34 >= 1)
  {
    uint64_t v35 = 0;
    int v36 = (unsigned int *)((char *)v2 + 504);
    while (1)
    {
      if (v35 >= (int)v34)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v67, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
        uint64_t v37 = google::protobuf::internal::LogMessage::operator<<(v67, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v66, (const char **)&v37->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v67[0].__r_.__value_.__l.__data_);
      }
      uint64_t v38 = *(void *)(*((void *)v2 + 32) + 8 * v35 + 8);
      uint64_t v39 = (int *)*((void *)v2 + 65);
      if (!v39) {
        break;
      }
      uint64_t v40 = *((int *)v2 + 128);
      int v41 = *v39;
      if ((int)v40 < *v39)
      {
        *((_DWORD *)v2 + 128) = v40 + 1;
        std::string::size_type v42 = *(protobuf::Intelligence_Event **)&v39[2 * v40 + 2];
        goto LABEL_61;
      }
      if (v41 == *((_DWORD *)v2 + 129)) {
        goto LABEL_59;
      }
LABEL_60:
      int *v39 = v41 + 1;
      std::string::size_type v42 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Event>(*((google::protobuf::internal::ArenaImpl **)v2
                                                                                      + 63));
      uint64_t v43 = *((void *)v2 + 65);
      uint64_t v44 = *((int *)v2 + 128);
      *((_DWORD *)v2 + 128) = v44 + 1;
      *(void *)(v43 + 8 * v44 + 8) = v42;
LABEL_61:
      if (*(unsigned char *)(v38 + 16))
      {
        BOOL v45 = *(const std::string **)(v38 + 48);
        int v46 = (std::string *)*((void *)v42 + 15);
        *((_DWORD *)v42 + 4) |= 1u;
        if (v46 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v42 + 120, (uint64_t)v45);
        }
        std::string::operator=(v46, v45);
      }
      if ((*(unsigned char *)(v38 + 16) & 2) != 0)
      {
        uint64_t v47 = *(const std::string **)(v38 + 56);
        int v48 = (std::string *)*((void *)v42 + 16);
        *((_DWORD *)v42 + 4) |= 2u;
        if (v48 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v42 + 128, (uint64_t)v47);
        }
        std::string::operator=(v48, v47);
      }
      if ((*(_DWORD *)(v38 + 16) & 4) != 0)
      {
        int v49 = *(const protobuf::Intelligence_NLParameters **)(v38 + 64);
        if (!v49)
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v67, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 19149);
          std::string::size_type v50 = google::protobuf::internal::LogMessage::operator<<(v67, "CHECK failed: !value || nl_producer_ != nullptr: ");
          google::protobuf::internal::LogFinisher::operator=((int)&v66, (const char **)&v50->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v67[0].__r_.__value_.__l.__data_);
          int v49 = *(const protobuf::Intelligence_NLParameters **)(v38 + 64);
        }
        *((_DWORD *)v42 + 4) |= 0x20u;
        int v51 = (protobuf::Intelligence_NLParameters *)*((void *)v42 + 20);
        if (!v51)
        {
          int v51 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_NLParameters>(0);
          *((void *)v42 + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v51;
          int v49 = *(const protobuf::Intelligence_NLParameters **)(v38 + 64);
        }
        if (v49) {
          uint64_t v52 = v49;
        }
        else {
          uint64_t v52 = (const protobuf::Intelligence_NLParameters *)&protobuf::_Intelligence_NLParameters_default_instance_;
        }
        if (v52 != v51)
        {
          protobuf::Intelligence_NLParameters::Clear(v51);
          protobuf::Intelligence_NLParameters::MergeFrom(v51, v52);
        }
      }
      if (*(int *)(v38 + 32) >= 1)
      {
        int v53 = 0;
        while (1)
        {
          BOOL v54 = (int *)*((void *)v42 + 5);
          if (!v54) {
            break;
          }
          uint64_t v55 = *((int *)v42 + 8);
          int v56 = *v54;
          if ((int)v55 >= *v54)
          {
            if (v56 == *((_DWORD *)v42 + 9))
            {
LABEL_86:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v42 + 6, v56 + 1);
              BOOL v54 = (int *)*((void *)v42 + 5);
              int v56 = *v54;
            }
            int *v54 = v56 + 1;
            uint64_t v57 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_NLParameters>(*((google::protobuf::internal::ArenaImpl **)v42 + 3));
            uint64_t v58 = *((void *)v42 + 5);
            uint64_t v59 = *((int *)v42 + 8);
            *((_DWORD *)v42 + 8) = v59 + 1;
            *(void *)(v58 + 8 * v59 + 8) = v57;
            goto LABEL_88;
          }
          *((_DWORD *)v42 + 8) = v55 + 1;
          uint64_t v57 = *(protobuf::Intelligence_NLParameters **)&v54[2 * v55 + 2];
LABEL_88:
          uint64_t v60 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_NLParameters>::TypeHandler>(v38 + 24, v53);
          if ((protobuf::Intelligence_NLParameters *)v60 != v57)
          {
            std::string::size_type v61 = (const protobuf::Intelligence_NLParameters *)v60;
            protobuf::Intelligence_NLParameters::Clear(v57);
            protobuf::Intelligence_NLParameters::MergeFrom(v57, v61);
          }
          if (++v53 >= *(_DWORD *)(v38 + 32)) {
            goto LABEL_91;
          }
        }
        int v56 = *((_DWORD *)v42 + 9);
        goto LABEL_86;
      }
LABEL_91:
      ++v35;
      uint64_t v2 = this;
      uint64_t v34 = *((int *)this + 62);
      if (v35 >= v34) {
        goto LABEL_92;
      }
    }
    int v41 = *((_DWORD *)v2 + 129);
LABEL_59:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v36, v41 + 1);
    uint64_t v39 = (int *)*((void *)v2 + 65);
    int v41 = *v39;
    goto LABEL_60;
  }
LABEL_92:
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Intent>::TypeHandler>((uint64_t)v2 + 240);
}

void sub_239A3FD00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::intelligence::UpdateTo_2_0_1(siri::intelligence *this, protobuf::Intelligence *a2)
{
  std::string::basic_string[abi:ne180100]<0>(&v194, "socialCATI");
  std::string::basic_string[abi:ne180100]<0>(&v191, "identifierValue");
  std::string::basic_string[abi:ne180100]<0>(v189, "matchers");
  std::string::basic_string[abi:ne180100]<0>(v187, "namespace");
  std::string::basic_string[abi:ne180100]<0>(v185, "directInvocation");
  std::string::basic_string[abi:ne180100]<0>(v183, "invocations");
  std::string::basic_string[abi:ne180100]<0>(v181, "identifier");
  std::string::basic_string[abi:ne180100]<0>(v179, "userData");
  std::string::basic_string[abi:ne180100]<0>(v177, "usoLiteral");
  std::string::basic_string[abi:ne180100]<0>(__p, "userDialogActs");
  if (*((int *)this + 128) >= 1)
  {
    int v2 = 0;
    do
    {
      uint64_t v3 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Event>::TypeHandler>((uint64_t)this + 504, v2);
      uint64_t v4 = v3;
      memset(&v174, 0, sizeof(v174));
      memset(&v173, 0, sizeof(v173));
      int v166 = v2;
      if ((*(_DWORD *)(v3 + 16) & 0x20) == 0) {
        goto LABEL_44;
      }
      uint64_t v5 = *(void **)(v3 + 160);
      if (!v5)
      {
        int v6 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__str, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 18904);
        uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: !value || nl_producer_ != nullptr: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v172, (const char **)&v7->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&__str.__r_.__value_.__l.__data_);
        uint64_t v5 = *(void **)(v4 + 160);
      }
      if (v5) {
        int v8 = v5;
      }
      else {
        int v8 = &protobuf::_Intelligence_NLParameters_default_instance_;
      }
      uint64_t v9 = (unsigned __int8 *)v8[6];
      uint64_t v10 = v9[23];
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v9[23];
      }
      else {
        uint64_t v11 = *((void *)v9 + 1);
      }
      uint64_t v12 = v196;
      if ((v196 & 0x80u) != 0) {
        uint64_t v12 = v195;
      }
      if (v11 != v12) {
        goto LABEL_44;
      }
      if ((v196 & 0x80u) == 0) {
        uint64_t v13 = (void **)&v194;
      }
      else {
        uint64_t v13 = v194;
      }
      if ((v10 & 0x80) != 0)
      {
        if (memcmp(*(const void **)v9, v13, *((void *)v9 + 1))) {
          goto LABEL_44;
        }
      }
      else if (v9[23])
      {
        while (*v9 == *(unsigned __int8 *)v13)
        {
          ++v9;
          uint64_t v13 = (void **)((char *)v13 + 1);
          if (!--v10) {
            goto LABEL_24;
          }
        }
        goto LABEL_44;
      }
LABEL_24:
      if (*((_DWORD *)v8 + 8) == 1)
      {
        uint64_t v14 = *(void *)(v8[5] + 8);
        uint64_t v15 = *(unsigned __int8 **)(v14 + 120);
        uint64_t v16 = v15[23];
        uint64_t v17 = v192;
        if ((v16 & 0x80u) == 0) {
          uint64_t v18 = v15[23];
        }
        else {
          uint64_t v18 = *((void *)v15 + 1);
        }
        if ((v193 & 0x80u) == 0) {
          uint64_t v17 = v193;
        }
        if (v18 == v17)
        {
          if ((v193 & 0x80u) == 0) {
            p_int data = (void **)&v191;
          }
          else {
            p_int data = (void **)&v191->__r_.__value_.__l.__data_;
          }
          if ((v16 & 0x80) != 0)
          {
            if (memcmp(*(const void **)v15, p_data, *((void *)v15 + 1))) {
              goto LABEL_44;
            }
LABEL_40:
            if ((*(unsigned char *)(v14 + 16) & 2) != 0)
            {
              std::string::operator=(&v173, *(const std::string **)(v14 + 128));
              BOOL v20 = *(protobuf::Intelligence_NLParameters **)(v4 + 160);
              if (v20) {
                protobuf::Intelligence_NLParameters::Clear(v20);
              }
              *(_DWORD *)(v4 + 16) &= ~0x20u;
            }
            goto LABEL_44;
          }
          if (!v15[23]) {
            goto LABEL_40;
          }
          while (*v15 == *(unsigned __int8 *)p_data)
          {
            ++v15;
            p_int data = (void **)((char *)p_data + 1);
            if (!--v16) {
              goto LABEL_40;
            }
          }
        }
      }
LABEL_44:
      if (*(int *)(v4 + 32) >= 1)
      {
        int v21 = 0;
        uint64_t v22 = v4 + 24;
        v167 = (unsigned int *)(v4 + 72);
        v164 = (uint64_t *)(v4 + 48);
        do
        {
          uint64_t v23 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_NLParameters>::TypeHandler>(v22, v21);
          uint64_t v24 = v23;
          int v25 = *(unsigned __int8 **)(v23 + 48);
          uint64_t v26 = (char *)v25[23];
          size_t v27 = *((void *)v25 + 1);
          if ((char)v26 >= 0) {
            uint64_t v28 = v25[23];
          }
          else {
            uint64_t v28 = *((void *)v25 + 1);
          }
          uint64_t v29 = v196;
          if ((v196 & 0x80u) != 0) {
            uint64_t v29 = v195;
          }
          if (v28 != v29) {
            goto LABEL_79;
          }
          if ((v196 & 0x80u) == 0) {
            std::string::size_type v30 = (void **)&v194;
          }
          else {
            std::string::size_type v30 = v194;
          }
          if ((v26 & 0x80) != 0)
          {
            if (memcmp(*(const void **)v25, v30, *((void *)v25 + 1)) || *(_DWORD *)(v24 + 32) != 1) {
              goto LABEL_79;
            }
          }
          else
          {
            if (v25[23])
            {
              uint64_t v31 = 0;
              while (v25[v31] == *((unsigned __int8 *)v30 + v31))
              {
                if (v26 == (char *)++v31) {
                  goto LABEL_60;
                }
              }
LABEL_79:
              char v39 = 0;
              goto LABEL_166;
            }
LABEL_60:
            if (*(_DWORD *)(v23 + 32) != 1) {
              goto LABEL_79;
            }
          }
          uint64_t v32 = *(void *)(*(void *)(v24 + 40) + 8);
          uint64_t v33 = *(unsigned __int8 **)(v32 + 120);
          uint64_t v34 = v33[23];
          unint64_t v35 = (unint64_t)v189[1];
          if ((v34 & 0x80u) == 0) {
            int v36 = (void *)v33[23];
          }
          else {
            int v36 = (void *)*((void *)v33 + 1);
          }
          if ((v190 & 0x80u) == 0) {
            unint64_t v35 = v190;
          }
          if (v36 == (void *)v35)
          {
            if ((v190 & 0x80u) == 0) {
              p_str = (std::string *)v189;
            }
            else {
              p_str = (std::string *)v189[0];
            }
            if ((v34 & 0x80) != 0)
            {
              if (memcmp(*(const void **)v33, p_str, *((void *)v33 + 1))) {
                goto LABEL_164;
              }
            }
            else if (v33[23])
            {
              while (*v33 == p_str->__r_.__value_.__s.__data_[0])
              {
                ++v33;
                p_str = (std::string *)((char *)p_str + 1);
                if (!--v34) {
                  goto LABEL_81;
                }
              }
              goto LABEL_164;
            }
LABEL_81:
            uint64_t v40 = *(unsigned int *)(v32 + 56);
            if ((int)v40 >= 1)
            {
              char v168 = 0;
              uint64_t v41 = *(void *)(v32 + 64);
              if (v41) {
                std::string::size_type v42 = (uint64_t *)(v41 + 8);
              }
              else {
                std::string::size_type v42 = 0;
              }
              v170 = &v42[v40];
              while (1)
              {
                uint64_t v43 = *v42;
                memset(&__str, 0, sizeof(__str));
                memset(&v172, 0, sizeof(v172));
                uint64_t v44 = *(void *)(v43 + 88);
                if (v44) {
                  BOOL v45 = (uint64_t *)(v44 + 8);
                }
                else {
                  BOOL v45 = 0;
                }
                uint64_t v46 = *(int *)(v43 + 80);
                if (v46)
                {
                  uint64_t v47 = &v45[v46];
                  while (1)
                  {
                    uint64_t v48 = *v45;
                    int v49 = *(unsigned __int8 **)(*v45 + 120);
                    std::string::size_type v50 = (char *)v49[23];
                    size_t v51 = *((void *)v49 + 1);
                    if ((char)v50 >= 0) {
                      uint64_t v52 = v49[23];
                    }
                    else {
                      uint64_t v52 = *((void *)v49 + 1);
                    }
                    uint64_t v53 = v193;
                    if ((v193 & 0x80u) != 0) {
                      uint64_t v53 = v192;
                    }
                    if (v52 == v53)
                    {
                      if ((v193 & 0x80u) == 0) {
                        p_str = (std::string *)&v191;
                      }
                      else {
                        p_str = v191;
                      }
                      if ((v50 & 0x80) != 0)
                      {
                        if (memcmp(*(const void **)v49, p_str, *((void *)v49 + 1))) {
                          goto LABEL_109;
                        }
LABEL_107:
                        if ((*(unsigned char *)(v48 + 16) & 2) != 0)
                        {
                          std::string::operator=(&__str, *(const std::string **)(v48 + 128));
                          int v49 = *(unsigned __int8 **)(v48 + 120);
                          std::string::size_type v50 = (char *)v49[23];
                          size_t v51 = *((void *)v49 + 1);
                        }
                        goto LABEL_109;
                      }
                      if (!v49[23]) {
                        goto LABEL_107;
                      }
                      uint64_t v54 = 0;
                      while (v49[v54] == p_str->__r_.__value_.__s.__data_[v54])
                      {
                        if (v50 == (char *)++v54) {
                          goto LABEL_107;
                        }
                      }
                    }
LABEL_109:
                    if ((char)v50 >= 0) {
                      uint64_t v55 = v50;
                    }
                    else {
                      uint64_t v55 = (void *)v51;
                    }
                    unint64_t v56 = v188;
                    if ((v188 & 0x80u) != 0) {
                      unint64_t v56 = (unint64_t)v187[1];
                    }
                    if (v55 != (void *)v56) {
                      goto LABEL_126;
                    }
                    if ((v188 & 0x80u) == 0) {
                      p_str = (std::string *)v187;
                    }
                    else {
                      p_str = (std::string *)v187[0];
                    }
                    if ((v50 & 0x80) == 0)
                    {
                      if (v50)
                      {
                        while (*v49 == p_str->__r_.__value_.__s.__data_[0])
                        {
                          ++v49;
                          p_str = (std::string *)((char *)p_str + 1);
                          if (!--v50) {
                            goto LABEL_124;
                          }
                        }
                        goto LABEL_126;
                      }
LABEL_124:
                      if ((*(unsigned char *)(v48 + 16) & 2) != 0) {
                        std::string::operator=(&v172, *(const std::string **)(v48 + 128));
                      }
                      goto LABEL_126;
                    }
                    if (!memcmp(*(const void **)v49, p_str, v51)) {
                      goto LABEL_124;
                    }
LABEL_126:
                    if (++v45 == v47)
                    {
                      std::string::size_type v57 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                      std::string::size_type size = __str.__r_.__value_.__l.__size_;
                      std::string::size_type v59 = HIBYTE(v172.__r_.__value_.__r.__words[2]);
                      uint64_t v22 = v4 + 24;
                      goto LABEL_129;
                    }
                  }
                }
                std::string::size_type v59 = 0;
                std::string::size_type size = 0;
                std::string::size_type v57 = 0;
LABEL_129:
                int v60 = (char)v57;
                if ((v57 & 0x80u) != 0) {
                  std::string::size_type v57 = size;
                }
                if (v57) {
                  break;
                }
LABEL_158:
                if ((v59 & 0x80) != 0) {
                  operator delete(v172.__r_.__value_.__l.__data_);
                }
                if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(__str.__r_.__value_.__l.__data_);
                }
                if (++v42 == v170)
                {
                  int v25 = *(unsigned __int8 **)(v24 + 48);
                  uint64_t v26 = (char *)v25[23];
                  size_t v27 = *((void *)v25 + 1);
                  char v66 = v168;
                  goto LABEL_165;
                }
              }
              if ((v59 & 0x80u) != 0) {
                std::string::size_type v59 = v172.__r_.__value_.__l.__size_;
              }
              if (v59)
              {
                std::string::size_type v61 = &v174;
LABEL_157:
                std::string::operator=(v61, &__str);
                LOBYTE(v59) = *((unsigned char *)&v172.__r_.__value_.__s + 23);
                char v168 = 1;
                goto LABEL_158;
              }
              if ((v173.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                std::string::size_type v62 = HIBYTE(v173.__r_.__value_.__r.__words[2]);
              }
              else {
                std::string::size_type v62 = v173.__r_.__value_.__l.__size_;
              }
              if (v62)
              {
                if (v62 != v57) {
                  goto LABEL_151;
                }
                if (v60 >= 0) {
                  p_str = &__str;
                }
                else {
                  p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
                }
                if ((*((unsigned char *)&v173.__r_.__value_.__s + 23) & 0x80) != 0)
                {
                  if (memcmp(v173.__r_.__value_.__l.__data_, p_str, v173.__r_.__value_.__l.__size_)) {
                    goto LABEL_151;
                  }
                }
                else if (*((unsigned char *)&v173.__r_.__value_.__s + 23))
                {
                  uint64_t v63 = 0;
                  while (v173.__r_.__value_.__s.__data_[v63] == p_str->__r_.__value_.__s.__data_[v63])
                  {
                    ++v63;
                    std::string::size_type v61 = &v173;
                    if (HIBYTE(v173.__r_.__value_.__r.__words[2]) == v63) {
                      goto LABEL_157;
                    }
                  }
LABEL_151:
                  int v64 = *(uint64_t **)(v24 + 48);
                  if (*((char *)v64 + 23) < 0) {
                    int v64 = (uint64_t *)*v64;
                  }
                  uint64_t v65 = (std::string *)__str.__r_.__value_.__r.__words[0];
                  if (v60 >= 0) {
                    uint64_t v65 = &__str;
                  }
                  siri::intelligence::Log::Warning((siri::intelligence::Log *)"CATI GUID is different for parser and producer for event %s. Using '%s'.", (const char *)p_str, v64, v65);
                }
              }
              std::string::size_type v61 = &v173;
              goto LABEL_157;
            }
          }
LABEL_164:
          char v66 = 0;
LABEL_165:
          char v39 = v66;
LABEL_166:
          if ((char)v26 >= 0) {
            int v67 = v26;
          }
          else {
            int v67 = (void *)v27;
          }
          unint64_t v68 = v186;
          if ((v186 & 0x80u) != 0) {
            unint64_t v68 = (unint64_t)v185[1];
          }
          if (v67 != (void *)v68) {
            goto LABEL_268;
          }
          if ((v186 & 0x80u) == 0) {
            uint64_t v69 = v185;
          }
          else {
            uint64_t v69 = (void **)v185[0];
          }
          if ((v26 & 0x80) != 0)
          {
            if (memcmp(*(const void **)v25, v69, v27) || *(_DWORD *)(v24 + 32) != 1) {
              goto LABEL_268;
            }
          }
          else
          {
            if (v26)
            {
              uint64_t v70 = 0;
              while (v25[v70] == *((unsigned __int8 *)v69 + v70))
              {
                if (v26 == (char *)++v70) {
                  goto LABEL_180;
                }
              }
              goto LABEL_268;
            }
LABEL_180:
            if (*(_DWORD *)(v24 + 32) != 1) {
              goto LABEL_268;
            }
          }
          uint64_t v72 = *(void *)(*(void *)(v24 + 40) + 8);
          uint64_t v73 = *(unsigned __int8 **)(v72 + 120);
          uint64_t v74 = v73[23];
          unint64_t v75 = (unint64_t)v183[1];
          if ((v74 & 0x80u) == 0) {
            char v76 = (void *)v73[23];
          }
          else {
            char v76 = (void *)*((void *)v73 + 1);
          }
          if ((v184 & 0x80u) == 0) {
            unint64_t v75 = v184;
          }
          if (v76 == (void *)v75)
          {
            if ((v184 & 0x80u) == 0) {
              __n128 v77 = v183;
            }
            else {
              __n128 v77 = (void **)v183[0];
            }
            if ((v74 & 0x80) != 0)
            {
              if (memcmp(*(const void **)v73, v77, *((void *)v73 + 1))) {
                goto LABEL_268;
              }
LABEL_202:
              uint64_t v78 = *(unsigned int *)(v72 + 56);
              if ((int)v78 < 1) {
                goto LABEL_268;
              }
              uint64_t v79 = *(void *)(v72 + 64);
              if (v79) {
                uint64_t v80 = v79 + 8;
              }
              else {
                uint64_t v80 = 0;
              }
              uint64_t v169 = v24;
              uint64_t v171 = v80 + 8 * v78;
              while (1)
              {
                uint64_t v81 = *(void *)(*(void *)v80 + 88);
                uint64_t v82 = v81 ? v81 + 8 : 0;
                uint64_t v83 = *(int *)(*(void *)v80 + 80);
                if (v83) {
                  break;
                }
LABEL_266:
                v80 += 8;
                if (v80 == v171) {
                  goto LABEL_267;
                }
              }
              char v84 = 0;
              uint64_t v85 = v82 + 8 * v83;
              if ((v180 & 0x80u) == 0) {
                unint64_t v86 = v180;
              }
              else {
                unint64_t v86 = (unint64_t)v179[1];
              }
              if ((v180 & 0x80u) == 0) {
                BOOL v87 = v179;
              }
              else {
                BOOL v87 = (void **)v179[0];
              }
              uint64_t v88 = v82;
              do
              {
                int v89 = *(unsigned __int8 **)(*(void *)v88 + 120);
                uint64_t v90 = v89[23];
                if ((v90 & 0x80u) == 0) {
                  uint64_t v91 = (void *)v89[23];
                }
                else {
                  uint64_t v91 = (void *)*((void *)v89 + 1);
                }
                if (v91 == (void *)v86)
                {
                  if ((v90 & 0x80) != 0)
                  {
                    BOOL v100 = memcmp(*(const void **)v89, v87, *((void *)v89 + 1)) == 0;
                  }
                  else if (v89[23])
                  {
                    uint64_t v92 = v90 - 1;
                    uint64_t v93 = v87;
                    do
                    {
                      int v95 = *v89++;
                      int v94 = v95;
                      int v97 = *(unsigned __int8 *)v93;
                      uint64_t v93 = (void **)((char *)v93 + 1);
                      int v96 = v97;
                      BOOL v99 = v92-- != 0;
                      BOOL v100 = v94 == v96;
                    }
                    while (v100 && v99);
                  }
                  else
                  {
                    BOOL v100 = 1;
                  }
                }
                else
                {
                  BOOL v100 = 0;
                }
                v84 |= v100;
                v88 += 8;
              }
              while (v88 != v85);
              if (v84)
              {
LABEL_267:
                uint64_t v22 = v4 + 24;
                uint64_t v24 = v169;
                int v25 = *(unsigned __int8 **)(v169 + 48);
                uint64_t v26 = (char *)v25[23];
                size_t v27 = *((void *)v25 + 1);
                goto LABEL_268;
              }
              while (2)
              {
                uint64_t v101 = *(void *)v82;
                uint64_t v102 = *(unsigned __int8 **)(*(void *)v82 + 120);
                uint64_t v103 = v102[23];
                if ((v103 & 0x80u) == 0) {
                  int v104 = (void *)v102[23];
                }
                else {
                  int v104 = (void *)*((void *)v102 + 1);
                }
                unint64_t v105 = v182;
                if ((v182 & 0x80u) != 0) {
                  unint64_t v105 = (unint64_t)v181[1];
                }
                if (v104 != (void *)v105)
                {
LABEL_265:
                  v82 += 8;
                  if (v82 == v85) {
                    goto LABEL_266;
                  }
                  continue;
                }
                break;
              }
              if ((v182 & 0x80u) == 0) {
                uint64_t v106 = v181;
              }
              else {
                uint64_t v106 = (void **)v181[0];
              }
              if ((v103 & 0x80) != 0)
              {
                if (memcmp(*(const void **)v102, v106, *((void *)v102 + 1))) {
                  goto LABEL_265;
                }
              }
              else if (v102[23])
              {
                while (*v102 == *(unsigned __int8 *)v106)
                {
                  ++v102;
                  uint64_t v106 = (void **)((char *)v106 + 1);
                  if (!--v103) {
                    goto LABEL_252;
                  }
                }
                goto LABEL_265;
              }
LABEL_252:
              if ((*(unsigned char *)(v101 + 16) & 2) == 0) {
                goto LABEL_265;
              }
              int v107 = *(const std::string **)(v101 + 128);
              uint64_t v108 = *(int **)(v4 + 88);
              if (v108)
              {
                uint64_t v109 = *(int *)(v4 + 80);
                int v110 = *v108;
                if ((int)v109 < *v108)
                {
                  *(_DWORD *)(v4 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v109 + 1;
                  unint64_t AlignedAndAddCleanup = *(std::string **)&v108[2 * v109 + 2];
LABEL_264:
                  std::string::operator=(AlignedAndAddCleanup, v107);
                  char v39 = 1;
                  goto LABEL_265;
                }
                if (v110 == *(_DWORD *)(v4 + 84))
                {
LABEL_258:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v167, v110 + 1);
                  uint64_t v108 = *(int **)(v4 + 88);
                  int v110 = *v108;
                }
                *uint64_t v108 = v110 + 1;
                int v112 = *(atomic_ullong **)v167;
                if (!*(void *)v167) {
                  operator new();
                }
                if (v112[14]) {
                unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v112, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
                }
                AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
                AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
                AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
                uint64_t v113 = *(void *)(v4 + 88);
                uint64_t v114 = *(int *)(v4 + 80);
                *(_DWORD *)(v4 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v114 + 1;
                *(void *)(v113 + 8 * v114 + 8) = AlignedAndAddCleanup;
                goto LABEL_264;
              }
              int v110 = *(_DWORD *)(v4 + 84);
              goto LABEL_258;
            }
            if (!v73[23]) {
              goto LABEL_202;
            }
            while (*v73 == *(unsigned __int8 *)v77)
            {
              ++v73;
              __n128 v77 = (void **)((char *)v77 + 1);
              if (!--v74) {
                goto LABEL_202;
              }
            }
          }
LABEL_268:
          if ((char)v26 >= 0) {
            uint64_t v115 = v26;
          }
          else {
            uint64_t v115 = (void *)v27;
          }
          unint64_t v116 = v178;
          if ((v178 & 0x80u) != 0) {
            unint64_t v116 = (unint64_t)v177[1];
          }
          if (v115 != (void *)v116) {
            goto LABEL_305;
          }
          if ((v178 & 0x80u) == 0) {
            int v117 = v177;
          }
          else {
            int v117 = (void **)v177[0];
          }
          if ((v26 & 0x80) != 0)
          {
            if (memcmp(*(const void **)v25, v117, v27) || *(_DWORD *)(v24 + 32) != 1) {
              goto LABEL_305;
            }
          }
          else
          {
            if (v26)
            {
              while (*v25 == *(unsigned __int8 *)v117)
              {
                ++v25;
                int v117 = (void **)((char *)v117 + 1);
                if (!--v26) {
                  goto LABEL_281;
                }
              }
              goto LABEL_305;
            }
LABEL_281:
            if (*(_DWORD *)(v24 + 32) != 1) {
              goto LABEL_305;
            }
          }
          uint64_t v119 = *(void *)(*(void *)(v24 + 40) + 8);
          uint64_t v120 = *(unsigned __int8 **)(v119 + 120);
          uint64_t v121 = v120[23];
          unint64_t v122 = (unint64_t)__p[1];
          if ((v121 & 0x80u) == 0) {
            BOOL v123 = (void *)v120[23];
          }
          else {
            BOOL v123 = (void *)*((void *)v120 + 1);
          }
          if ((v176 & 0x80u) == 0) {
            unint64_t v122 = v176;
          }
          if (v123 != (void *)v122) {
            goto LABEL_305;
          }
          if ((v176 & 0x80u) == 0) {
            uint64_t v124 = __p;
          }
          else {
            uint64_t v124 = (void **)__p[0];
          }
          if ((v121 & 0x80) != 0)
          {
            if (memcmp(*(const void **)v120, v124, *((void *)v120 + 1))) {
              goto LABEL_305;
            }
LABEL_303:
            if (*(_DWORD *)(v119 + 56) != 1) {
              goto LABEL_305;
            }
            uint64_t v125 = *(void *)(*(void *)(v119 + 64) + 8);
            if ((*(unsigned char *)(v125 + 16) & 2) == 0) {
              goto LABEL_305;
            }
            char v140 = *(const std::string **)(v125 + 128);
            uint64_t v141 = *(int **)(v4 + 64);
            if (v141)
            {
              uint64_t v142 = *(int *)(v4 + 56);
              int v143 = *v141;
              if ((int)v142 < *v141)
              {
                *(_DWORD *)(v4 + 56) = v142 + 1;
                uint64_t v144 = *(std::string **)&v141[2 * v142 + 2];
LABEL_338:
                std::string::operator=(v144, v140);
LABEL_306:
                if (v21 < 0)
                {
                  uint64_t v126 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__str, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2041);
                  uint64_t v127 = google::protobuf::internal::LogMessage::operator<<(v126, "CHECK failed: (start) >= (0): ");
                  google::protobuf::internal::LogFinisher::operator=((int)&v172, (const char **)&v127->__r_.__value_.__l.__data_);
                  google::protobuf::internal::LogMessage::~LogMessage((void **)&__str.__r_.__value_.__l.__data_);
                }
                if (*(_DWORD *)(v4 + 32) <= v21)
                {
                  uint64_t v128 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__str, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2043);
                  char v129 = google::protobuf::internal::LogMessage::operator<<(v128, "CHECK failed: (start + num) <= (size()): ");
                  google::protobuf::internal::LogFinisher::operator=((int)&v172, (const char **)&v129->__r_.__value_.__l.__data_);
                  google::protobuf::internal::LogMessage::~LogMessage((void **)&__str.__r_.__value_.__l.__data_);
                }
                if (v21 < 0)
                {
                  long long v130 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__str, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1567);
                  char v131 = google::protobuf::internal::LogMessage::operator<<(v130, "CHECK failed: (index) >= (0): ");
                  google::protobuf::internal::LogFinisher::operator=((int)&v172, (const char **)&v131->__r_.__value_.__l.__data_);
                  google::protobuf::internal::LogMessage::~LogMessage((void **)&__str.__r_.__value_.__l.__data_);
                }
                if (*(_DWORD *)(v4 + 32) <= v21)
                {
                  int v132 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__str, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1568);
                  uint64_t v133 = google::protobuf::internal::LogMessage::operator<<(v132, "CHECK failed: (index) < (current_size_): ");
                  google::protobuf::internal::LogFinisher::operator=((int)&v172, (const char **)&v133->__r_.__value_.__l.__data_);
                  google::protobuf::internal::LogMessage::~LogMessage((void **)&__str.__r_.__value_.__l.__data_);
                }
                uint64_t v134 = *(void *)(*(void *)(v4 + 40) + 8 * v21 + 8);
                if (v134) {
                  BOOL v135 = *(void *)(v4 + 24) == 0;
                }
                else {
                  BOOL v135 = 0;
                }
                if (v135) {
                  (*(void (**)(uint64_t))(*(void *)v134 + 8))(v134);
                }
                if (v21 < 0)
                {
                  int v136 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__str, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2063);
                  char v137 = google::protobuf::internal::LogMessage::operator<<(v136, "CHECK failed: (start) >= (0): ");
                  google::protobuf::internal::LogFinisher::operator=((int)&v172, (const char **)&v137->__r_.__value_.__l.__data_);
                  google::protobuf::internal::LogMessage::~LogMessage((void **)&__str.__r_.__value_.__l.__data_);
                }
                if (*(_DWORD *)(v4 + 32) <= v21)
                {
                  uint64_t v138 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__str, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 2065);
                  uint64_t v139 = google::protobuf::internal::LogMessage::operator<<(v138, "CHECK failed: (start + num) <= (size()): ");
                  google::protobuf::internal::LogFinisher::operator=((int)&v172, (const char **)&v139->__r_.__value_.__l.__data_);
                  google::protobuf::internal::LogMessage::~LogMessage((void **)&__str.__r_.__value_.__l.__data_);
                }
                google::protobuf::internal::RepeatedPtrFieldBase::CloseGap(v22, v21--, 1);
                goto LABEL_325;
              }
              if (v143 != *(_DWORD *)(v4 + 60))
              {
LABEL_333:
                *uint64_t v141 = v143 + 1;
                int v145 = (atomic_ullong *)*v164;
                if (!*v164) {
                  operator new();
                }
                if (v145[14]) {
                uint64_t v144 = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v145, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
                }
                v144->__r_.__value_.__r.__words[0] = 0;
                v144->__r_.__value_.__l.__size_ = 0;
                v144->__r_.__value_.__r.__words[2] = 0;
                uint64_t v146 = *(void *)(v4 + 64);
                uint64_t v147 = *(int *)(v4 + 56);
                *(_DWORD *)(v4 + 56) = v147 + 1;
                *(void *)(v146 + 8 * v147 + 8) = v144;
                goto LABEL_338;
              }
            }
            else
            {
              int v143 = *(_DWORD *)(v4 + 60);
            }
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v164, v143 + 1);
            uint64_t v141 = *(int **)(v4 + 64);
            int v143 = *v141;
            goto LABEL_333;
          }
          if (!v120[23]) {
            goto LABEL_303;
          }
          while (*v120 == *(unsigned __int8 *)v124)
          {
            ++v120;
            uint64_t v124 = (void **)((char *)v124 + 1);
            if (!--v121) {
              goto LABEL_303;
            }
          }
LABEL_305:
          if (v39) {
            goto LABEL_306;
          }
LABEL_325:
          ++v21;
        }
        while (v21 < *(_DWORD *)(v4 + 32));
      }
      std::string::size_type v148 = HIBYTE(v174.__r_.__value_.__r.__words[2]);
      if ((v174.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v148 = v174.__r_.__value_.__l.__size_;
      }
      if (v148)
      {
        char v149 = *(std::string **)(v4 + 136);
        *(_DWORD *)(v4 + 16) |= 4u;
        if (v149 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v4 + 136, (uint64_t)&v174);
        }
        std::string::operator=(v149, &v174);
      }
      std::string::size_type v150 = HIBYTE(v173.__r_.__value_.__r.__words[2]);
      if ((v173.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v150 = v173.__r_.__value_.__l.__size_;
      }
      if (v150)
      {
        uint64_t v151 = *(std::string **)(v4 + 144);
        *(_DWORD *)(v4 + 16) |= 8u;
        if (v151 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v4 + 144, (uint64_t)&v173);
        }
        std::string::operator=(v151, &v173);
      }
      if ((*(unsigned char *)(v4 + 16) & 2) != 0)
      {
        char v152 = *(uint64_t **)(v4 + 128);
        uint64_t v153 = *((unsigned __int8 *)v152 + 23);
        int v154 = *((unsigned __int8 *)v152 + 23);
        size_t v155 = v152[1];
        if ((v153 & 0x80u) == 0) {
          uint64_t v156 = *((unsigned __int8 *)v152 + 23);
        }
        else {
          uint64_t v156 = v152[1];
        }
        std::string::size_type v157 = HIBYTE(v174.__r_.__value_.__r.__words[2]);
        if ((v174.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v157 = v174.__r_.__value_.__l.__size_;
        }
        if (v156 == v157)
        {
          if ((v174.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            char v158 = &v174;
          }
          else {
            char v158 = (std::string *)v174.__r_.__value_.__r.__words[0];
          }
          if ((v154 & 0x80) != 0)
          {
            if (!memcmp((const void *)*v152, v158, v152[1])) {
              goto LABEL_381;
            }
          }
          else
          {
            if (!*((unsigned char *)v152 + 23)) {
              goto LABEL_381;
            }
            std::string v159 = *(unsigned __int8 **)(v4 + 128);
            uint64_t v160 = *((unsigned __int8 *)v152 + 23);
            while (*v159 == v158->__r_.__value_.__s.__data_[0])
            {
              ++v159;
              char v158 = (std::string *)((char *)v158 + 1);
              if (!--v160) {
                goto LABEL_381;
              }
            }
          }
        }
        std::string::size_type v161 = HIBYTE(v173.__r_.__value_.__r.__words[2]);
        if ((v173.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v161 = v173.__r_.__value_.__l.__size_;
        }
        if (v156 != v161) {
          goto LABEL_386;
        }
        if ((v173.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          char v162 = &v173;
        }
        else {
          char v162 = (std::string *)v173.__r_.__value_.__r.__words[0];
        }
        if ((v154 & 0x80) == 0)
        {
          if (v154)
          {
            v163 = (unsigned __int8 *)v152;
            while (*v163 == v162->__r_.__value_.__s.__data_[0])
            {
              ++v163;
              char v162 = (std::string *)((char *)v162 + 1);
              if (!--v153) {
                goto LABEL_381;
              }
            }
            goto LABEL_386;
          }
LABEL_381:
          if (v152 != &google::protobuf::internal::fixed_address_empty_string)
          {
            if ((v154 & 0x80) != 0)
            {
              *(unsigned char *)uint64_t *v152 = 0;
              v152[1] = 0;
            }
            else
            {
              *(unsigned char *)char v152 = 0;
              *((unsigned char *)v152 + 23) = 0;
            }
          }
          *(_DWORD *)(v4 + 16) &= ~2u;
          goto LABEL_386;
        }
        if (!memcmp((const void *)*v152, v162, v155)) {
          goto LABEL_381;
        }
      }
LABEL_386:
      if (SHIBYTE(v173.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v173.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v174.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v174.__r_.__value_.__l.__data_);
      }
      int v2 = v166 + 1;
    }
    while (v166 + 1 < *((_DWORD *)this + 128));
  }
  if ((char)v176 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v178 < 0) {
    operator delete(v177[0]);
  }
  if ((char)v180 < 0) {
    operator delete(v179[0]);
  }
  if ((char)v182 < 0) {
    operator delete(v181[0]);
  }
  if ((char)v184 < 0) {
    operator delete(v183[0]);
  }
  if ((char)v186 < 0) {
    operator delete(v185[0]);
  }
  if ((char)v188 < 0) {
    operator delete(v187[0]);
  }
  if ((char)v190 < 0) {
    operator delete(v189[0]);
  }
  if ((char)v193 < 0) {
    operator delete(v191);
  }
  if ((char)v196 < 0) {
    operator delete(v194);
  }
}

void sub_239A40E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,void *a58,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  if (a45 < 0) {
    operator delete(a40);
  }
  if (a51 < 0) {
    operator delete(a46);
  }
  if (a57 < 0) {
    operator delete(a52);
  }
  if (a63 < 0) {
    operator delete(a58);
  }
  if (*(char *)(v63 - 233) < 0) {
    operator delete(*(void **)(v63 - 256));
  }
  if (*(char *)(v63 - 209) < 0) {
    operator delete(*(void **)(v63 - 232));
  }
  if (*(char *)(v63 - 185) < 0) {
    operator delete(*(void **)(v63 - 208));
  }
  if (*(char *)(v63 - 161) < 0) {
    operator delete(*(void **)(v63 - 184));
  }
  if (*(char *)(v63 - 137) < 0) {
    operator delete(*(void **)(v63 - 160));
  }
  _Unwind_Resume(a1);
}

BOOL std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if ((*((char *)a1 + 23) & 0x80000000) == 0)
  {
    if (v4 != *((unsigned __int8 *)a1 + 23)) {
      return 0;
    }
    return memcmp(a1, __s, v4) == 0;
  }
  if (v4 == a1[1])
  {
    if (v4 == -1) {
      std::string::__throw_out_of_range[abi:ne180100]();
    }
    a1 = (void *)*a1;
    return memcmp(a1, __s, v4) == 0;
  }
  return 0;
}

void protobuf::Intelligence_Variable::set_type(protobuf::Intelligence_Variable *this, char *__s)
{
  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 17621);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: value != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
  *((_DWORD *)this + 4) |= 2u;
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)this + 10, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
}

void sub_239A41160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A41250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    uint64_t v3 = (protobuf::Intelligence_ResponseGroup **)(*(void *)(a1 + 16) + 8);
    do
    {
      size_t v4 = *v3++;
      protobuf::Intelligence_ResponseGroup::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_239A41308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A413E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    uint64_t v3 = (protobuf::Intelligence_InputGroup **)(*(void *)(a1 + 16) + 8);
    do
    {
      size_t v4 = *v3++;
      protobuf::Intelligence_InputGroup::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_239A41498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_DialogResponse>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1560);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A41570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v4, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/arenastring.h", 376);
    int v2 = google::protobuf::internal::LogMessage::operator<<(v4, "CHECK failed: initial_value != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v3, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v4[0].__r_.__value_.__l.__data_);
  }
  operator new();
}

void sub_239A4164C(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1560);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A41744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ReferenceResponse>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1560);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A41824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1560);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A41904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1560);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A419E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1560);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A41AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Label>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A41BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Label>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    char v3 = (protobuf::Intelligence_Label **)(*(void *)(a1 + 16) + 8);
    do
    {
      size_t v4 = *v3++;
      protobuf::Intelligence_Label::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_239A41C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Counter>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A41D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Counter>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    char v3 = (protobuf::Intelligence_Counter **)(*(void *)(a1 + 16) + 8);
    do
    {
      size_t v4 = *v3++;
      protobuf::Intelligence_Counter::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_239A41DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Flag>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A41EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Flag>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    char v3 = (protobuf::Intelligence_Flag **)(*(void *)(a1 + 16) + 8);
    do
    {
      size_t v4 = *v3++;
      protobuf::Intelligence_Flag::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_239A41F7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_List>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A42054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_List>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    char v3 = (protobuf::Intelligence_List **)(*(void *)(a1 + 16) + 8);
    do
    {
      size_t v4 = *v3++;
      protobuf::Intelligence_List::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_239A4210C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::intelligence::IsNewStyleCondition(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 23);
  if ((v1 & 0x80u) != 0) {
    uint64_t v1 = *(void *)(a1 + 8);
  }
  if (!v1) {
    return 0;
  }
  siri::intelligence::StringTrim(" \t\n\r", (const std::string *)a1, &v9);
  std::string::basic_string[abi:ne180100]<0>(__p, " ");
  char v3 = siri::intelligence::StringContains(&v9.__r_.__value_.__l.__data_, (char *)__p);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v9.__r_.__value_.__l.__data_);
    if (v3) {
      return 0;
    }
  }
  else if (v3)
  {
    return 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&v9, "$");
  if (siri::intelligence::StringContains((char **)a1, (char *)&v9))
  {
    uint64_t v4 = 0;
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "(");
    int v5 = siri::intelligence::StringContains((char **)a1, (char *)__p);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v4 = v5 ^ 1u;
  }
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_239A42234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::UpdateKeyValueParameterTo_1_0_2(siri::intelligence *this, protobuf::Intelligence_KeyValueParameter *a2)
{
  unsigned int v3 = *((_DWORD *)this + 4);
  if ((v3 & 4) != 0)
  {
    uint64_t v4 = *((void *)this + 17);
    if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
    {
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)uint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
      }
    }
    unsigned int v3 = *((_DWORD *)this + 4) & 0xFFFFFFFB;
    *((_DWORD *)this + 4) = v3;
  }
  if ((v3 & 0x20) != 0)
  {
    *((void *)this + 22) = *((void *)this + 20);
    *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
    int v5 = -161;
  }
  else
  {
    if ((v3 & 0x40) == 0) {
      goto LABEL_12;
    }
    *((double *)this + 22) = (double)*((uint64_t *)this + 21);
    *((void *)this + 21) = 0;
    int v5 = -193;
  }
  unsigned int v3 = v3 & v5 | 0x80;
  *((_DWORD *)this + 4) = v3;
LABEL_12:
  if ((v3 & 0x200) != 0)
  {
    *((_WORD *)this + 92) = *((unsigned __int8 *)this + 185);
    *((_DWORD *)this + 4) = v3 & 0xFFFFFCFF | 0x100;
  }
  if (*((int *)this + 8) >= 1)
  {
    int v6 = 0;
    while (1)
    {
      char v7 = (const protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 24, v6);
      char v8 = (int *)*((void *)this + 11);
      if (!v8) {
        break;
      }
      uint64_t v9 = *((int *)this + 20);
      int v10 = *v8;
      if ((int)v9 >= *v8)
      {
        if (v10 == *((_DWORD *)this + 21))
        {
LABEL_21:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 18, v10 + 1);
          char v8 = (int *)*((void *)this + 11);
          int v10 = *v8;
        }
        *char v8 = v10 + 1;
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*((google::protobuf::internal::ArenaImpl **)this + 9));
        uint64_t v12 = *((void *)this + 11);
        uint64_t v13 = *((int *)this + 20);
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v13 + 1;
        *(void *)(v12 + 8 * v13 + 8) = v11;
        goto LABEL_23;
      }
      *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 + 1;
      uint64_t v11 = *(protobuf::Intelligence_KeyValueParameter **)&v8[2 * v9 + 2];
LABEL_23:
      if (v7 != v11)
      {
        protobuf::Intelligence_KeyValueParameter::Clear(v11);
        protobuf::Intelligence_KeyValueParameter::MergeFrom(v11, v7);
      }
      if (++v6 >= *((_DWORD *)this + 8)) {
        goto LABEL_26;
      }
    }
    int v10 = *((_DWORD *)this + 21);
    goto LABEL_21;
  }
LABEL_26:
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 24);
  if (*((int *)this + 20) >= 1)
  {
    int v14 = 0;
    do
    {
      uint64_t v15 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 72, v14);
      siri::intelligence::UpdateKeyValueParameterTo_1_0_2(v15, v16);
      ++v14;
    }
    while (v14 < *((_DWORD *)this + 20));
  }
  if (*((int *)this + 14) >= 1)
  {
    int v17 = 0;
    do
    {
      uint64_t v18 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 48, v17);
      siri::intelligence::UpdateKeyValueParameterTo_1_0_2(v18, v19);
      ++v17;
    }
    while (v17 < *((_DWORD *)this + 14));
  }
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A42528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    unsigned int v3 = (protobuf::Intelligence_KeyValueParameter **)(*(void *)(a1 + 16) + 8);
    do
    {
      uint64_t v4 = *v3++;
      protobuf::Intelligence_KeyValueParameter::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_239A425E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1560);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A426B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1560);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A42798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Variable>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1560);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A42878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::intelligence::UpdateConditionEntryTo_1_0_3(siri::intelligence *this, protobuf::Intelligence_Condition_ConditionEntry *a2)
{
  unsigned int v3 = *((_DWORD *)this + 4);
  if (v3)
  {
    *((_DWORD *)this + 4) = v3 | 0x10;
    uint64_t v4 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 13);
    if (!v4)
    {
      uint64_t v4 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
      *((void *)this + 13) = v4;
    }
    siri::intelligence::CreateConditionKeyValueParameter_1_0_3((uint64_t)v4, *((void *)this + 9));
    uint64_t v5 = *((void *)this + 9);
    if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
    {
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)uint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
      }
    }
    unsigned int v3 = *((_DWORD *)this + 4) & 0xFFFFFFFE;
    *((_DWORD *)this + 4) = v3;
  }
  if ((v3 & 4) != 0)
  {
    *((_DWORD *)this + 4) = v3 | 0x20;
    char v6 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 14);
    if (!v6)
    {
      char v6 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
      *((void *)this + 14) = v6;
    }
    siri::intelligence::CreateConditionKeyValueParameter_1_0_3((uint64_t)v6, *((void *)this + 11));
    uint64_t v7 = *((void *)this + 11);
    if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string)
    {
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)uint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
      }
    }
    *((_DWORD *)this + 4) &= ~4u;
  }
  if (*((int *)this + 8) >= 1)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>((uint64_t)this + 24, v8);
      siri::intelligence::UpdateConditionEntryTo_1_0_3(v9, v10);
      ++v8;
    }
    while (v8 < *((_DWORD *)this + 8));
  }
  if (*((int *)this + 14) >= 1)
  {
    int v11 = 0;
    do
    {
      uint64_t v12 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>((uint64_t)this + 48, v11);
      siri::intelligence::UpdateConditionEntryTo_1_0_3(v12, v13);
      ++v11;
    }
    while (v11 < *((_DWORD *)this + 14));
  }
  int v14 = *((_DWORD *)this + 4);
  if ((v14 & 8) != 0)
  {
    uint64_t v15 = (siri::intelligence *)*((void *)this + 12);
    if (!v15)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 21511);
      uint64_t v16 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: !value || not_child_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
      uint64_t v15 = (siri::intelligence *)*((void *)this + 12);
      int v14 = *((_DWORD *)this + 4);
    }
    *((_DWORD *)this + 4) = v14 | 8;
    siri::intelligence::UpdateConditionEntryTo_1_0_3(v15, a2);
  }
}

void sub_239A42A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1560);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A42B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::intelligence::CreateConditionKeyValueParameter_1_0_3(uint64_t a1, uint64_t a2)
{
  siri::intelligence::GetLiteralType((std::string *)a2, &v30);
  size_t v4 = strlen(siri::intelligence::TYPE_STRING[0]);
  size_t v5 = v4;
  size_t v6 = v32;
  if ((char)v32 < 0)
  {
    size_t v8 = v31;
    if (v4 != v31)
    {
      uint64_t v9 = siri::intelligence::TYPE_BOOLEAN[0];
      size_t v10 = strlen(siri::intelligence::TYPE_BOOLEAN[0]);
      goto LABEL_15;
    }
    if (v4 == -1) {
      std::string::__throw_out_of_range[abi:ne180100]();
    }
    char v7 = v30;
  }
  else
  {
    if (v4 != v32)
    {
      uint64_t v9 = siri::intelligence::TYPE_BOOLEAN[0];
      size_t v10 = strlen(siri::intelligence::TYPE_BOOLEAN[0]);
      goto LABEL_11;
    }
    char v7 = (void **)&v30;
  }
  if (memcmp(v7, siri::intelligence::TYPE_STRING[0], v5))
  {
    uint64_t v9 = siri::intelligence::TYPE_BOOLEAN[0];
    size_t v10 = strlen(siri::intelligence::TYPE_BOOLEAN[0]);
    if ((v6 & 0x80) != 0)
    {
      size_t v8 = v31;
LABEL_15:
      if (v10 != v8)
      {
        uint64_t v12 = siri::intelligence::TYPE_NUMBER[0];
        size_t v13 = strlen(siri::intelligence::TYPE_NUMBER[0]);
        goto LABEL_27;
      }
      if (v8 == -1) {
        std::string::__throw_out_of_range[abi:ne180100]();
      }
      int v11 = v30;
LABEL_18:
      if (!memcmp(v11, v9, v8))
      {
        char v18 = siri::intelligence::StringToBool((const std::string *)a2, 0);
        *(_DWORD *)(a1 + 16) |= 0x100u;
        *(unsigned char *)(a1 + 184) = v18;
        goto LABEL_47;
      }
      uint64_t v12 = siri::intelligence::TYPE_NUMBER[0];
      size_t v13 = strlen(siri::intelligence::TYPE_NUMBER[0]);
      if ((v6 & 0x80) == 0)
      {
LABEL_20:
        if (v13 == v6)
        {
          int v14 = (void **)&v30;
          goto LABEL_30;
        }
        goto LABEL_31;
      }
      size_t v8 = v31;
LABEL_27:
      if (v13 == v8)
      {
        if (v8 == -1) {
          std::string::__throw_out_of_range[abi:ne180100]();
        }
        int v14 = v30;
        size_t v6 = v8;
LABEL_30:
        if (!memcmp(v14, v12, v6))
        {
          siri::intelligence::StringToDouble(a2, 0);
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(void *)(a1 + 176) = v24;
          goto LABEL_47;
        }
      }
LABEL_31:
      if (*(char *)(a2 + 23) < 0) {
        std::string::__init_copy_ctor_external(&v26, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
      }
      else {
        std::string v26 = *(std::string *)a2;
      }
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      char v29 = 0;
      siri::intelligence::Entity::FindNext((siri::intelligence::Entity *)&v26);
      if (v29)
      {
        siri::intelligence::Entity::GetName(&v26, &__p);
        *(_DWORD *)(a1 + 16) |= 8u;
        google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)(a1 + 144), (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v20 = a2;
        }
        else {
          uint64_t v20 = *(void *)a2;
        }
        siri::intelligence::Log::Error((siri::intelligence::Log *)"Unable to update old-style condition: %s", v19, v20);
        uint64_t v23 = *(uint64_t **)(a1 + 128);
        uint64_t v22 = a1 + 128;
        int v21 = (std::string *)v23;
        *(_DWORD *)(v22 - 112) |= 2u;
        if (v23 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v22, a2);
        }
        std::string::operator=(v21, (const std::string *)a2);
      }
      if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v26.__r_.__value_.__l.__data_);
      }
      goto LABEL_47;
    }
LABEL_11:
    if (v10 != v6)
    {
      uint64_t v12 = siri::intelligence::TYPE_NUMBER[0];
      size_t v13 = strlen(siri::intelligence::TYPE_NUMBER[0]);
      goto LABEL_20;
    }
    int v11 = (void **)&v30;
    size_t v8 = v6;
    goto LABEL_18;
  }
  char v17 = *(uint64_t **)(a1 + 128);
  uint64_t v16 = a1 + 128;
  uint64_t v15 = (std::string *)v17;
  *(_DWORD *)(v16 - 112) |= 2u;
  if (v17 == &google::protobuf::internal::fixed_address_empty_string) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v16, a2);
  }
  std::string::operator=(v15, (const std::string *)a2);
LABEL_47:
  if ((char)v32 < 0) {
    operator delete(v30);
  }
}

void sub_239A42E9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (*(char *)(v21 - 49) < 0) {
    operator delete(*(void **)(v21 - 72));
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1560);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
    size_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A42FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(signed int **this, uint64_t a2)
{
  if ((signed int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1632);
    size_t v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  unsigned int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    size_t v6 = (const protobuf::Intelligence_KeyValueParameter **)(*(void *)(a2 + 16) + 8);
    char v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((std::string *)this, (protobuf::Intelligence_KeyValueParameter **)v7, v6, v5, *this[2] - *((_DWORD *)this + 2));
    signed int v8 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v8;
    uint64_t v9 = this[2];
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
}

void sub_239A430A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(std::string *result, protobuf::Intelligence_KeyValueParameter **a2, const protobuf::Intelligence_KeyValueParameter **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (google::protobuf::internal::ArenaImpl **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    int v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      size_t v13 = v14;
      uint64_t v15 = *v12++;
      double result = google::protobuf::internal::GenericTypeHandler<protobuf::Intelligence_KeyValueParameter>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    char v18 = *v9;
    uint64_t v19 = &a2[a5];
    uint64_t v20 = &a3[a5];
    do
    {
      uint64_t v21 = *v20++;
      uint64_t v22 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(v18);
      double result = google::protobuf::internal::GenericTypeHandler<protobuf::Intelligence_KeyValueParameter>::Merge(v21, v22);
      *v19++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *google::protobuf::internal::GenericTypeHandler<protobuf::Intelligence_KeyValueParameter>::Merge(const protobuf::Intelligence_KeyValueParameter *a1, protobuf::Intelligence_KeyValueParameter *a2)
{
  return protobuf::Intelligence_KeyValueParameter::MergeFrom(a2, a1);
}

void google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(google::protobuf::internal::ArenaImpl **a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(a1);

  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unsigned int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3) {
          (*(void (**)(void))(*(void *)*v3 + 8))(*v3);
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_LegacyEvent>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    unsigned int v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A43308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<protobuf::Intelligence_InputGroup_LegacyEvent>::Merge(const protobuf::Intelligence_InputGroup_LegacyEvent *a1, protobuf::Intelligence_InputGroup_LegacyEvent *a2)
{
}

void google::protobuf::internal::GenericTypeHandler<protobuf::Intelligence_InputGroup>::Merge(const protobuf::Intelligence_InputGroup *a1, protobuf::Intelligence_InputGroup *a2)
{
}

void siri::intelligence::ConvertPositionalArgToDictionary(uint64_t a1, uint64_t a2, int a3, char *a4)
{
  if (*(_DWORD *)(a2 + 56) <= a3) {
    return;
  }
  signed int v8 = *(int **)(a1 + 88);
  if (!v8)
  {
    int v10 = *(_DWORD *)(a1 + 84);
    goto LABEL_8;
  }
  uint64_t v9 = *(int *)(a1 + 80);
  int v10 = *v8;
  if ((int)v9 >= *v8)
  {
    if (v10 != *(_DWORD *)(a1 + 84))
    {
LABEL_9:
      *signed int v8 = v10 + 1;
      int v11 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 72));
      uint64_t v12 = *(void *)(a1 + 88);
      uint64_t v13 = *(int *)(a1 + 80);
      *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v13 + 1;
      *(void *)(v12 + 8 * v13 + 8) = v11;
      goto LABEL_10;
    }
LABEL_8:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v10 + 1);
    signed int v8 = *(int **)(a1 + 88);
    int v10 = *v8;
    goto LABEL_9;
  }
  *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 + 1;
  int v11 = *(protobuf::Intelligence_KeyValueParameter **)&v8[2 * v9 + 2];
LABEL_10:
  uint64_t v14 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(a2 + 48, a3);
  if ((protobuf::Intelligence_KeyValueParameter *)v14 != v11)
  {
    uint64_t v15 = (const protobuf::Intelligence_KeyValueParameter *)v14;
    protobuf::Intelligence_KeyValueParameter::Clear(v11);
    protobuf::Intelligence_KeyValueParameter::MergeFrom(v11, v15);
  }
  if (a4[23] >= 0) {
    BOOL v16 = a4;
  }
  else {
    BOOL v16 = *(char **)a4;
  }

  protobuf::Intelligence_KeyValueParameter::set_key(v11, v16);
}

void protobuf::Intelligence_KeyValueParameter::set_key(protobuf::Intelligence_KeyValueParameter *this, char *__s)
{
  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 9508);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: value != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
  *((_DWORD *)this + 4) |= 1u;
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)this + 15, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
}

void sub_239A43520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void siri::intelligence::UpdateFunctionToParameterDictionary(siri::intelligence *this, protobuf::Intelligence_KeyValueParameter *a2)
{
  if ((*((unsigned char *)this + 16) & 0x10) == 0) {
    goto LABEL_186;
  }
  unsigned int v3 = (long long *)*((void *)this + 19);
  if (*((char *)v3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&v50, *(const std::string::value_type **)v3, *((void *)v3 + 1));
  }
  else
  {
    long long v4 = *v3;
    v50.__r_.__value_.__r.__words[2] = *((void *)v3 + 2);
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v4;
  }
  int v5 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = v50.__r_.__value_.__l.__size_;
    if (v50.__r_.__value_.__l.__size_ == 3)
    {
      if ((*(_WORD *)v50.__r_.__value_.__l.__data_ != 25185 || *(unsigned char *)(v50.__r_.__value_.__r.__words[0] + 2) != 115)
        && (*(_WORD *)v50.__r_.__value_.__l.__data_ != 25711 || *(unsigned char *)(v50.__r_.__value_.__r.__words[0] + 2) != 100))
      {
LABEL_54:
        int v11 = (std::string *)v50.__r_.__value_.__r.__words[0];
        if (*(_WORD *)v50.__r_.__value_.__l.__data_ == 25697 && *(unsigned char *)(v50.__r_.__value_.__r.__words[0] + 2) == 100) {
          goto LABEL_81;
        }
LABEL_58:
        int data_low = LOWORD(v11->__r_.__value_.__l.__data_);
        int v18 = v11->__r_.__value_.__s.__data_[2];
        if (data_low != 26989 || v18 != 110)
        {
          if ((v5 & 0x80) == 0)
          {
LABEL_63:
            if (v5 != 3)
            {
LABEL_87:
              if (v5 != 9)
              {
LABEL_95:
                if (v5 != 5)
                {
LABEL_121:
                  if (v5 != 10)
                  {
LABEL_130:
                    if (v5 != 8)
                    {
LABEL_141:
                      if (v5 != 8) {
                        goto LABEL_151;
                      }
                      uint64_t v12 = &v50;
LABEL_149:
                      if (v12->__r_.__value_.__r.__words[0] == 0x736E6961746E6F63)
                      {
                        std::string::basic_string[abi:ne180100]<0>(__p, "haystack");
                        siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 0, (char *)__p);
                        if (v49 < 0) {
                          operator delete(__p[0]);
                        }
                        std::string::basic_string[abi:ne180100]<0>(__p, "needle");
                        siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 1, (char *)__p);
                        if (v49 < 0) {
                          operator delete(__p[0]);
                        }
                        int v5 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
                        if ((*((unsigned char *)&v50.__r_.__value_.__s + 23) & 0x80) == 0) {
                          goto LABEL_151;
                        }
                      }
                      else if ((v5 & 0x80) == 0)
                      {
LABEL_151:
                        uint64_t v12 = &v50;
                        switch(v5)
                        {
                          case 5:
                            int v31 = v50.__r_.__value_.__s.__data_[4];
                            BOOL v32 = LODWORD(v50.__r_.__value_.__l.__data_) == 1953525093;
                            int v33 = 121;
                            goto LABEL_167;
                          case 6:
                            goto LABEL_153;
                          case 7:
                            int v31 = *(_DWORD *)((char *)v50.__r_.__value_.__r.__words + 3);
                            BOOL v32 = LODWORD(v50.__r_.__value_.__l.__data_) == 1768318308;
                            int v33 = 1684369001;
                            goto LABEL_167;
                          case 8:
                            goto LABEL_162;
                          case 9:
                            int v31 = v50.__r_.__value_.__s.__data_[8];
                            BOOL v32 = v50.__r_.__value_.__r.__words[0] == 0x656E696665646E75;
                            int v33 = 100;
                            goto LABEL_167;
                          default:
                            goto LABEL_186;
                        }
                        goto LABEL_186;
                      }
                      std::string::size_type v25 = v50.__r_.__value_.__l.__size_;
                      uint64_t v12 = (std::string *)v50.__r_.__value_.__r.__words[0];
LABEL_160:
                      switch(v25)
                      {
                        case 5uLL:
                          int v34 = v12->__r_.__value_.__s.__data_[4];
                          BOOL v35 = LODWORD(v12->__r_.__value_.__l.__data_) == 1953525093;
                          int v36 = 121;
                          goto LABEL_176;
                        case 6uLL:
                          int v34 = WORD2(v12->__r_.__value_.__r.__words[0]);
                          BOOL v35 = LODWORD(v12->__r_.__value_.__l.__data_) == 1735288172;
                          int v36 = 26740;
                          goto LABEL_176;
                        case 7uLL:
                          int v34 = *(_DWORD *)((char *)v12->__r_.__value_.__r.__words + 3);
                          BOOL v35 = LODWORD(v12->__r_.__value_.__l.__data_) == 1768318308;
                          int v36 = 1684369001;
                          goto LABEL_176;
                        case 8uLL:
LABEL_162:
                          if (v12->__r_.__value_.__r.__words[0] == 0x7974706D656E6F6ELL) {
                            goto LABEL_181;
                          }
                          if ((v5 & 0x80) != 0) {
                            goto LABEL_184;
                          }
                          goto LABEL_186;
                        case 9uLL:
                          int v34 = v12->__r_.__value_.__s.__data_[8];
                          BOOL v35 = v12->__r_.__value_.__r.__words[0] == 0x656E696665646E75;
                          int v36 = 100;
LABEL_176:
                          if (!v35 || v34 != v36) {
                            goto LABEL_185;
                          }
                          goto LABEL_181;
                        default:
                          goto LABEL_185;
                      }
                    }
                    uint64_t v12 = &v50;
LABEL_139:
                    if (v12->__r_.__value_.__r.__words[0] == 0x6874695773646E65)
                    {
                      std::string::basic_string[abi:ne180100]<0>(__p, "string");
                      siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 0, (char *)__p);
                      if (v49 < 0) {
                        operator delete(__p[0]);
                      }
                      std::string::basic_string[abi:ne180100]<0>(__p, "suffix");
                      siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 1, (char *)__p);
                      if (v49 < 0) {
                        operator delete(__p[0]);
                      }
                      int v5 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
                      if ((*((unsigned char *)&v50.__r_.__value_.__s + 23) & 0x80) == 0) {
                        goto LABEL_141;
                      }
                    }
                    else if ((v5 & 0x80) == 0)
                    {
                      goto LABEL_141;
                    }
                    std::string::size_type v25 = v50.__r_.__value_.__l.__size_;
                    uint64_t v12 = (std::string *)v50.__r_.__value_.__r.__words[0];
                    if (v50.__r_.__value_.__l.__size_ != 8) {
                      goto LABEL_160;
                    }
                    goto LABEL_149;
                  }
                  uint64_t v12 = &v50;
LABEL_125:
                  if (v12->__r_.__value_.__r.__words[0] == 0x6957737472617473
                    && LOWORD(v12->__r_.__value_.__r.__words[1]) == 26740)
                  {
                    std::string::basic_string[abi:ne180100]<0>(__p, "string");
                    siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 0, (char *)__p);
                    if (v49 < 0) {
                      operator delete(__p[0]);
                    }
                    std::string::basic_string[abi:ne180100]<0>(__p, "prefix");
                    siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 1, (char *)__p);
                    if (v49 < 0) {
                      operator delete(__p[0]);
                    }
                    int v5 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
                    if ((*((unsigned char *)&v50.__r_.__value_.__s + 23) & 0x80) == 0) {
                      goto LABEL_130;
                    }
                  }
                  else if ((v5 & 0x80) == 0)
                  {
                    goto LABEL_130;
                  }
                  std::string::size_type v25 = v50.__r_.__value_.__l.__size_;
                  uint64_t v12 = (std::string *)v50.__r_.__value_.__r.__words[0];
LABEL_138:
                  if (v25 != 8) {
                    goto LABEL_160;
                  }
                  goto LABEL_139;
                }
                if (LODWORD(v50.__r_.__value_.__l.__data_) == 1701867637 && v50.__r_.__value_.__s.__data_[4] == 114) {
                  goto LABEL_117;
                }
                uint64_t v12 = &v50;
                int v5 = 5;
LABEL_112:
                if (LODWORD(v12->__r_.__value_.__l.__data_) != 1702326124 || v12->__r_.__value_.__s.__data_[4] != 114)
                {
LABEL_120:
                  if ((v5 & 0x80) == 0) {
                    goto LABEL_121;
                  }
                  std::string::size_type v25 = v50.__r_.__value_.__l.__size_;
                  uint64_t v12 = (std::string *)v50.__r_.__value_.__r.__words[0];
LABEL_124:
                  if (v25 != 10) {
                    goto LABEL_138;
                  }
                  goto LABEL_125;
                }
LABEL_117:
                std::string::basic_string[abi:ne180100]<0>(__p, "string");
                siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 0, (char *)__p);
                if (v49 < 0) {
                  operator delete(__p[0]);
                }
                int v5 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
                goto LABEL_120;
              }
              uint64_t v12 = &v50;
LABEL_90:
              if (v12->__r_.__value_.__r.__words[0] == 0x6E496D6F646E6172 && v12->__r_.__value_.__s.__data_[8] == 116)
              {
                std::string::basic_string[abi:ne180100]<0>(__p, "minValue");
                siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 0, (char *)__p);
                if (v49 < 0) {
                  operator delete(__p[0]);
                }
                std::string::basic_string[abi:ne180100]<0>(__p, "maxValue");
                siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 1, (char *)__p);
                if (v49 < 0) {
                  operator delete(__p[0]);
                }
                int v5 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
                if ((*((unsigned char *)&v50.__r_.__value_.__s + 23) & 0x80) == 0) {
                  goto LABEL_95;
                }
              }
              else if ((v5 & 0x80) == 0)
              {
                goto LABEL_95;
              }
              std::string::size_type v25 = v50.__r_.__value_.__l.__size_;
              uint64_t v12 = (std::string *)v50.__r_.__value_.__r.__words[0];
LABEL_107:
              if (v25 != 5) {
                goto LABEL_124;
              }
              if (LODWORD(v12->__r_.__value_.__l.__data_) == 1701867637 && v12->__r_.__value_.__s.__data_[4] == 114) {
                goto LABEL_117;
              }
              goto LABEL_112;
            }
            uint64_t v20 = &v50;
            goto LABEL_76;
          }
LABEL_74:
          if (v50.__r_.__value_.__l.__size_ != 3) {
            goto LABEL_89;
          }
          uint64_t v20 = (std::string *)v50.__r_.__value_.__r.__words[0];
LABEL_76:
          int v22 = LOWORD(v20->__r_.__value_.__l.__data_);
          int v23 = v20->__r_.__value_.__s.__data_[2];
          if (v22 != 24941 || v23 != 120) {
            goto LABEL_86;
          }
        }
LABEL_81:
        std::string::basic_string[abi:ne180100]<0>(__p, "firstValue");
        siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 0, (char *)__p);
        if (v49 < 0) {
          operator delete(__p[0]);
        }
        std::string::basic_string[abi:ne180100]<0>(__p, "secondValue");
        siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 1, (char *)__p);
        if (v49 < 0) {
          operator delete(__p[0]);
        }
        int v5 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
LABEL_86:
        if ((v5 & 0x80) == 0) {
          goto LABEL_87;
        }
LABEL_89:
        std::string::size_type v25 = v50.__r_.__value_.__l.__size_;
        uint64_t v12 = (std::string *)v50.__r_.__value_.__r.__words[0];
        if (v50.__r_.__value_.__l.__size_ != 9) {
          goto LABEL_107;
        }
        goto LABEL_90;
      }
      goto LABEL_50;
    }
    if (v50.__r_.__value_.__l.__size_ != 4) {
      goto LABEL_65;
    }
    size_t v6 = (std::string *)v50.__r_.__value_.__r.__words[0];
    if (*(_DWORD *)v50.__r_.__value_.__l.__data_ != 1953657203) {
      goto LABEL_13;
    }
  }
  else
  {
    if (HIBYTE(v50.__r_.__value_.__r.__words[2]) == 3)
    {
      if ((LOWORD(v50.__r_.__value_.__l.__data_) != 25185 || v50.__r_.__value_.__s.__data_[2] != 115)
        && (LOWORD(v50.__r_.__value_.__l.__data_) != 25711 || v50.__r_.__value_.__s.__data_[2] != 100))
      {
LABEL_27:
        if (LOWORD(v50.__r_.__value_.__l.__data_) == 25697 && v50.__r_.__value_.__s.__data_[2] == 100) {
          goto LABEL_81;
        }
        int v11 = &v50;
        int v5 = 3;
        goto LABEL_58;
      }
      goto LABEL_50;
    }
    if (HIBYTE(v50.__r_.__value_.__r.__words[2]) != 4) {
      goto LABEL_15;
    }
    if (LODWORD(v50.__r_.__value_.__l.__data_) != 1953657203)
    {
      size_t v6 = &v50;
LABEL_13:
      if (LODWORD(v6->__r_.__value_.__l.__data_) != 1852143205)
      {
        if ((*((unsigned char *)&v50.__r_.__value_.__s + 23) & 0x80) == 0) {
          goto LABEL_15;
        }
LABEL_53:
        std::string::size_type size = v50.__r_.__value_.__l.__size_;
        if (v50.__r_.__value_.__l.__size_ == 3) {
          goto LABEL_54;
        }
LABEL_65:
        if (size == 6)
        {
          if (*(_DWORD *)v50.__r_.__value_.__l.__data_ != 1769367908
            || *(_WORD *)(v50.__r_.__value_.__r.__words[0] + 4) != 25956)
          {
            goto LABEL_74;
          }
        }
        else if (size != 8 {
               || *(void *)v50.__r_.__value_.__l.__data_ != 0x7463617274627573
        }
               && *(void *)v50.__r_.__value_.__l.__data_ != 0x796C7069746C756DLL)
        {
          goto LABEL_74;
        }
        goto LABEL_81;
      }
    }
  }
LABEL_50:
  std::string::basic_string[abi:ne180100]<0>(__p, "value");
  siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 0, (char *)__p);
  if (v49 < 0) {
    operator delete(__p[0]);
  }
  int v5 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
  if ((*((unsigned char *)&v50.__r_.__value_.__s + 23) & 0x80) != 0) {
    goto LABEL_53;
  }
LABEL_15:
  if (v5 == 8)
  {
    if (v50.__r_.__value_.__r.__words[0] != 0x7463617274627573
      && v50.__r_.__value_.__r.__words[0] != 0x796C7069746C756DLL)
    {
      uint64_t v12 = &v50;
      int v5 = 8;
      goto LABEL_139;
    }
    goto LABEL_81;
  }
  if (v5 != 6)
  {
    if (v5 != 3) {
      goto LABEL_63;
    }
    goto LABEL_27;
  }
  if (LODWORD(v50.__r_.__value_.__l.__data_) == 1769367908 && WORD2(v50.__r_.__value_.__r.__words[0]) == 25956) {
    goto LABEL_81;
  }
LABEL_153:
  int v31 = WORD2(v50.__r_.__value_.__r.__words[0]);
  BOOL v32 = LODWORD(v50.__r_.__value_.__l.__data_) == 1735288172;
  int v33 = 26740;
LABEL_167:
  if (v32 && v31 == v33)
  {
LABEL_181:
    std::string::basic_string[abi:ne180100]<0>(__p, "variable");
    siri::intelligence::SetFunctionArgumentKey((uint64_t)this, 0, (char *)__p);
    if (v49 < 0) {
      operator delete(__p[0]);
    }
    if ((*((unsigned char *)&v50.__r_.__value_.__s + 23) & 0x80) != 0)
    {
LABEL_184:
      uint64_t v12 = (std::string *)v50.__r_.__value_.__r.__words[0];
LABEL_185:
      operator delete(v12);
    }
  }
LABEL_186:
  if (*((int *)this + 14) >= 1)
  {
    int v39 = 0;
    do
    {
      uint64_t v40 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 48, v39);
      siri::intelligence::UpdateFunctionToParameterDictionary(v40, v41);
      ++v39;
    }
    while (v39 < *((_DWORD *)this + 14));
  }
  if (*((int *)this + 20) >= 1)
  {
    int v42 = 0;
    do
    {
      uint64_t v43 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 72, v42);
      siri::intelligence::UpdateFunctionToParameterDictionary(v43, v44);
      ++v42;
    }
    while (v42 < *((_DWORD *)this + 20));
  }
  if (*((int *)this + 26) >= 1)
  {
    int v45 = 0;
    do
    {
      uint64_t v46 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 96, v45);
      siri::intelligence::UpdateFunctionToParameterDictionary(v46, v47);
      ++v45;
    }
    while (v45 < *((_DWORD *)this + 26));
  }
}

void sub_239A43EAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::UpdateFunctionInCondition(siri::intelligence *this, protobuf::Intelligence_Condition_ConditionEntry *a2)
{
  int v3 = *((_DWORD *)this + 4);
  if ((v3 & 0x10) != 0)
  {
    long long v4 = (siri::intelligence *)*((void *)this + 13);
    if (!v4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 21242);
      int v5 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: !value || left_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
      long long v4 = (siri::intelligence *)*((void *)this + 13);
      int v3 = *((_DWORD *)this + 4);
    }
    *((_DWORD *)this + 4) = v3 | 0x10;
    siri::intelligence::UpdateFunctionToParameterDictionary(v4, a2);
    int v3 = *((_DWORD *)this + 4);
  }
  if ((v3 & 0x20) != 0)
  {
    if (!*((void *)this + 14))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 21373);
      size_t v6 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: !value || right_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v6->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
      int v3 = *((_DWORD *)this + 4);
    }
    *((_DWORD *)this + 4) = v3 | 0x10;
    char v7 = (siri::intelligence *)*((void *)this + 13);
    if (!v7)
    {
      char v7 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
      *((void *)this + 13) = v7;
    }
    siri::intelligence::UpdateFunctionToParameterDictionary(v7, a2);
    int v3 = *((_DWORD *)this + 4);
  }
  if ((v3 & 8) != 0)
  {
    signed int v8 = (siri::intelligence *)*((void *)this + 12);
    if (!v8)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 21511);
      uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: !value || not_child_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v9->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
      signed int v8 = (siri::intelligence *)*((void *)this + 12);
      int v3 = *((_DWORD *)this + 4);
    }
    *((_DWORD *)this + 4) = v3 | 8;
    siri::intelligence::UpdateFunctionInCondition(v8, a2);
  }
  if (*((int *)this + 8) >= 1)
  {
    int v10 = 0;
    do
    {
      int v11 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>((uint64_t)this + 24, v10);
      siri::intelligence::UpdateFunctionInCondition(v11, v12);
      ++v10;
    }
    while (v10 < *((_DWORD *)this + 8));
  }
  if (*((int *)this + 14) >= 1)
  {
    int v13 = 0;
    do
    {
      uint64_t v14 = (siri::intelligence *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>((uint64_t)this + 48, v13);
      siri::intelligence::UpdateFunctionInCondition(v14, v15);
      ++v13;
    }
    while (v13 < *((_DWORD *)this + 14));
  }
}

void sub_239A4412C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::intelligence::SetFunctionArgumentKey(uint64_t a1, int a2, char *a3)
{
  if (*(_DWORD *)(a1 + 104) > a2)
  {
    long long v4 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>(a1 + 96, a2);
    if (a3[23] >= 0) {
      int v5 = a3;
    }
    else {
      int v5 = *(char **)a3;
    }
    protobuf::Intelligence_KeyValueParameter::set_key(v4, v5);
  }
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    int v3 = (protobuf::Intelligence_InputGroup_Intent **)(*(void *)(a1 + 16) + 8);
    do
    {
      long long v4 = *v3++;
      protobuf::Intelligence_InputGroup_Intent::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_239A4424C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_NLParameters>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    long long v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A44324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Intent>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    int v3 = (protobuf::Intelligence_Intent **)(*(void *)(a1 + 16) + 8);
    do
    {
      long long v4 = *v3++;
      protobuf::Intelligence_Intent::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_239A443DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Event>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1560);
    long long v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1561);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A444B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<protobuf::Intelligence_NLParameters>::Merge(const protobuf::Intelligence_NLParameters *a1, protobuf::Intelligence_NLParameters *a2)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<std::string,void (*)(protobuf::Intelligence *)>>,std::pair<std::string,void (*)(protobuf::Intelligence *)>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = **(void **)(a1 + 8);
    for (uint64_t i = **(void **)(a1 + 16); i != v3; i -= 32)
    {
      if (*(char *)(i - 9) < 0) {
        operator delete(*(void **)(i - 32));
      }
    }
  }
  return a1;
}

void std::vector<std::pair<std::string,void (*)(protobuf::Intelligence *)>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  int v2 = (void **)**a1;
  if (v2)
  {
    long long v4 = (void **)v1[1];
    int v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        if (*((char *)v4 - 9) < 0) {
          operator delete(*(v4 - 4));
        }
        v4 -= 4;
      }
      while (v4 != v2);
      int v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>(uint64_t a1, long long *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(*(std::string **)(a1 + 8), *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(v3 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  *(void *)(a1 + 8) = v3 + 24;
}

void sub_239A44628(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::string>::__push_back_slow_path<std::string const&>(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  __v.__end_cap_.__value_ = (std::allocator<std::string> *)(a1 + 2);
  if (v9) {
    int v10 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v7, v9);
  }
  else {
    int v10 = 0;
  }
  std::__split_buffer<std::string>::pointer end = v10 + v4;
  __v.__first_ = v10;
  __v.__begin_ = end;
  __v.__end_ = end;
  __v.__end_cap_.__value_ = &v10[v9];
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(end, *(const std::string::value_type **)a2, *((void *)a2 + 1));
    std::__split_buffer<std::string>::pointer end = __v.__end_;
  }
  else
  {
    long long v12 = *a2;
    end->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&end->__r_.__value_.__l.__data_ = v12;
  }
  __v.__end_ = end + 1;
  std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a1, &__v);
  uint64_t v13 = a1[1];
  std::__split_buffer<std::string>::~__split_buffer(&__v);
  return v13;
}

void sub_239A44740(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

std::string *siri::intelligence::TestCase::TestCase(std::string *this, uint64_t a2, long long *a3, long long *a4)
{
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    this->__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v7;
  }
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this + 1, *(const std::string::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v8 = *a4;
    this[1].__r_.__value_.__r.__words[2] = *((void *)a4 + 2);
    *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = v8;
  }
  *(_OWORD *)&this[2].__r_.__value_.__l.__data_ = 0u;
  *(_OWORD *)&this[4].__r_.__value_.__r.__words[1] = 0u;
  std::string::size_type v30 = (int64x2_t *)&this[4].__r_.__value_.__r.__words[1];
  *(_OWORD *)&this[2].__r_.__value_.__r.__words[2] = 0u;
  *(_OWORD *)&this[3].__r_.__value_.__r.__words[1] = 0u;
  *(_OWORD *)&this[5].__r_.__value_.__l.__data_ = 0u;
  *(_OWORD *)&this[5].__r_.__value_.__r.__words[2] = 0u;
  if (a2)
  {
    std::string::operator=(this + 2, *(const std::string **)(a2 + 48));
    std::string::operator=(this + 3, *(const std::string **)(a2 + 56));
    int v9 = *(_DWORD *)(a2 + 16);
    BOOL v10 = (v9 & 4) == 0 || *(unsigned char *)(a2 + 64) != 0;
    this[4].__r_.__value_.__s.__data_[0] = v10;
    int v11 = (v9 & 8) != 0 ? *(_DWORD *)(a2 + 68) : 1;
    HIDWORD(this[4].__r_.__value_.__r.__words[0]) = v11;
    if (*(int *)(a2 + 32) >= 1)
    {
      int v12 = 0;
      do
      {
        uint64_t v13 = (const protobuf::FlowTest_Step *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::FlowTest_Step>::TypeHandler>(a2 + 24, v12);
        unint64_t v15 = this[4].__r_.__value_.__r.__words[2];
        std::string::pointer data = this[5].__r_.__value_.__l.__data_;
        if (v15 >= (unint64_t)data)
        {
          unint64_t v17 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v15 - v30->i64[0]) >> 4);
          unint64_t v18 = v17 + 1;
          if (v17 + 1 > 0x333333333333333) {
            std::vector<siri::intelligence::TestParseError>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v19 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&data[-v30->i64[0]] >> 4);
          if (2 * v19 > v18) {
            unint64_t v18 = 2 * v19;
          }
          if (v19 >= 0x199999999999999) {
            unint64_t v20 = 0x333333333333333;
          }
          else {
            unint64_t v20 = v18;
          }
          int v34 = this + 5;
          if (v20) {
            uint64_t v21 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<protobuf::FlowTest_Step>>((uint64_t)&this[5], v20);
          }
          else {
            uint64_t v21 = 0;
          }
          int v31 = v21;
          v32.i64[0] = (uint64_t)&v21[80 * v17];
          v32.i64[1] = v32.i64[0];
          std::string::size_type v33 = (std::string::size_type)&v21[80 * v20];
          protobuf::FlowTest_Step::FlowTest_Step((protobuf::FlowTest_Step *)v32.i64[0], v13);
          std::string::size_type v22 = v32.i64[0];
          uint64_t v16 = v32.i64[1] + 80;
          v32.i64[1] += 80;
          std::string::size_type size = this[4].__r_.__value_.__l.__size_;
          unint64_t v24 = this[4].__r_.__value_.__r.__words[2];
          if (v24 == size)
          {
            int64x2_t v27 = vdupq_n_s64(v24);
          }
          else
          {
            do
            {
              std::string::size_type v25 = v22 - 80;
              protobuf::FlowTest_Step::FlowTest_Step((protobuf::FlowTest_Step *)(v22 - 80));
              unint64_t v26 = v24 - 80;
              if (v22 != v24) {
                protobuf::FlowTest_Step::InternalSwap((protobuf::FlowTest_Step *)(v22 - 80), (protobuf::FlowTest_Step *)(v24 - 80));
              }
              v24 -= 80;
              v22 -= 80;
            }
            while (v26 != size);
            int64x2_t v27 = *v30;
            uint64_t v16 = v32.i64[1];
            std::string::size_type v22 = v25;
          }
          this[4].__r_.__value_.__l.__size_ = v22;
          this[4].__r_.__value_.__r.__words[2] = v16;
          int64x2_t v32 = v27;
          std::string::pointer v28 = this[5].__r_.__value_.__l.__data_;
          this[5].__r_.__value_.__r.__words[0] = v33;
          std::string::size_type v33 = (std::string::size_type)v28;
          int v31 = (char *)v27.i64[0];
          std::__split_buffer<protobuf::FlowTest_Step>::~__split_buffer((uint64_t)&v31);
        }
        else
        {
          protobuf::FlowTest_Step::FlowTest_Step((protobuf::FlowTest_Step *)this[4].__r_.__value_.__r.__words[2], v13);
          uint64_t v16 = v15 + 80;
          this[4].__r_.__value_.__r.__words[2] = v15 + 80;
        }
        this[4].__r_.__value_.__r.__words[2] = v16;
        ++v12;
      }
      while (v12 < *(_DWORD *)(a2 + 32));
    }
  }
  return this;
}

void sub_239A44A0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (*(char *)(v14 + 23) < 0) {
    operator delete(*(void **)v14);
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::TestCase::GetTemplateDir(siri::intelligence::TestCase *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)this, *((void *)this + 1));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)this;
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 2);
  }
}

void siri::intelligence::TestCase::GetFlowId(siri::intelligence::TestCase *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 47) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 3), *((void *)this + 4));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 24);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 5);
  }
}

void siri::intelligence::TestCase::GetFlowFilename(siri::intelligence::TestCase *this@<X0>, uint64_t a2@<X8>)
{
}

void siri::intelligence::TestCase::GetTestFilename(siri::intelligence::TestCase *this@<X0>, std::string *a2@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(v10, ".flowtest");
  std::string::basic_string[abi:ne180100]<0>(v4, ".flow");
  siri::intelligence::Configuration::GetPathFromFlowId((unsigned __int8 *)this + 24, (uint64_t)v4, v6);
  siri::intelligence::JoinPath((uint64_t)this, (uint64_t)v6, (uint64_t)__p);
  siri::intelligence::ChangeExtension((uint64_t)__p, (uint64_t)v10, a2);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  if (v7 < 0) {
    operator delete(v6[0]);
  }
  if (v5 < 0) {
    operator delete(v4[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
}

void sub_239A44BD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (*(char *)(v26 - 17) < 0) {
    operator delete(*(void **)(v26 - 40));
  }
  _Unwind_Resume(exception_object);
}

void siri::intelligence::TestCase::GetName(siri::intelligence::TestCase *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 71) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 6), *((void *)this + 7));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *((_OWORD *)this + 3);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 8);
  }
}

void siri::intelligence::TestCase::GetDescription(siri::intelligence::TestCase *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 95) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 9), *((void *)this + 10));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 72);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 11);
  }
}

void *siri::intelligence::TestCase::GetSteps@<X0>(siri::intelligence::TestCase *this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return std::vector<protobuf::FlowTest_Step>::__init_with_size[abi:ne180100]<protobuf::FlowTest_Step*,protobuf::FlowTest_Step*>(a2, *((void *)this + 13), *((void *)this + 14), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)this + 14) - *((void *)this + 13)) >> 4));
}

uint64_t siri::intelligence::TestCase::GetRepeat(siri::intelligence::TestCase *this)
{
  return *((unsigned int *)this + 25);
}

uint64_t siri::intelligence::TestCase::IsEnabled(siri::intelligence::TestCase *this)
{
  return *((unsigned __int8 *)this + 96);
}

BOOL siri::intelligence::TestCase::ShouldSkip(siri::intelligence::TestCase *this)
{
  return *((unsigned char *)this + 96) == 0;
}

void *siri::intelligence::TestCase::GetSkipReason@<X0>(siri::intelligence::TestCase *this@<X0>, void *a2@<X8>)
{
  if (*((unsigned char *)this + 96)) {
    uint64_t v2 = "";
  }
  else {
    uint64_t v2 = "test is disabled";
  }
  return std::string::basic_string[abi:ne180100]<0>(a2, v2);
}

void siri::intelligence::TestCase::ToString(siri::intelligence::TestCase *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 47) >= 0) {
    size_t v4 = *((unsigned __int8 *)this + 47);
  }
  else {
    size_t v4 = *((void *)this + 4);
  }
  char v5 = &v11;
  std::string::basic_string[abi:ne180100]((uint64_t)&v11, v4 + 2);
  if ((v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    char v5 = (std::string *)v11.__r_.__value_.__r.__words[0];
  }
  if (v4)
  {
    if (*((char *)this + 47) >= 0) {
      char v6 = (char *)this + 24;
    }
    else {
      char v6 = (char *)*((void *)this + 3);
    }
    memmove(v5, v6, v4);
  }
  strcpy((char *)v5 + v4, ": ");
  if (*((char *)this + 71) < 0) {
    std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)this + 6), *((void *)this + 7));
  }
  else {
    std::string __p = *(std::string *)((unsigned char *)this + 2);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  char v9 = std::string::append(&v11, (const std::string::value_type *)p_p, size);
  *a2 = *v9;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
}

void sub_239A44E28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__split_buffer<protobuf::FlowTest_Step>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    size_t v4 = *(void (***)(void))(i - 80);
    *(void *)(a1 + 16) = i - 80;
    (*v4)();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t YAML::Scanner::SimpleKey::SimpleKey(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)double result = v3;
  *(void *)(result + 16) = a3;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  return result;
}

{
  uint64_t v3;

  uint64_t v3 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)double result = v3;
  *(void *)(result + 16) = a3;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  return result;
}

void *YAML::Scanner::SimpleKey::Validate(void *this)
{
  uint64_t v1 = this[3];
  if (v1) {
    *(_DWORD *)(v1 + 8) = 0;
  }
  uint64_t v2 = (_DWORD *)this[4];
  if (v2) {
    *uint64_t v2 = 0;
  }
  uint64_t v3 = (_DWORD *)this[5];
  if (v3) {
    *uint64_t v3 = 0;
  }
  return this;
}

void *YAML::Scanner::SimpleKey::Invalidate(void *this)
{
  uint64_t v1 = this[3];
  if (v1) {
    *(_DWORD *)(v1 + 8) = 1;
  }
  uint64_t v2 = (_DWORD *)this[4];
  if (v2) {
    *uint64_t v2 = 1;
  }
  uint64_t v3 = (_DWORD *)this[5];
  if (v3) {
    *uint64_t v3 = 1;
  }
  return this;
}

BOOL YAML::Scanner::CanInsertPotentialSimpleKey(YAML::Scanner *this)
{
  if (!*((unsigned char *)this + 146)) {
    return 0;
  }
  uint64_t v1 = *((void *)this + 24);
  return !v1
      || *(void *)(*(void *)(*((void *)this + 20) + 8 * ((v1 + *((void *)this + 23) - 1) / 0x55uLL))
                   + 48 * ((v1 + *((void *)this + 23) - 1) % 0x55uLL)
                   + 16) != *((void *)this + 39);
}

BOOL YAML::Scanner::ExistsActiveSimpleKey(YAML::Scanner *this)
{
  uint64_t v1 = *((void *)this + 24);
  return v1
      && *(void *)(*(void *)(*((void *)this + 20) + 8 * ((v1 + *((void *)this + 23) - 1) / 0x55uLL))
                   + 48 * ((v1 + *((void *)this + 23) - 1) % 0x55uLL)
                   + 16) == *((void *)this + 39);
}

double YAML::Scanner::InsertPotentialSimpleKey(YAML::Scanner *this)
{
  if (YAML::Scanner::CanInsertPotentialSimpleKey(this))
  {
    int v3 = *((_DWORD *)this + 4);
    uint64_t v4 = *((void *)this + 39);
    uint64_t v14 = *((void *)this + 1);
    int v15 = v3;
    uint64_t v16 = v4;
    uint64_t v17 = 0;
    unint64_t v18 = 0;
    unint64_t v19 = 0;
    if (!v4)
    {
      uint64_t v5 = YAML::Scanner::PushIndentTo((uint64_t)this);
      uint64_t v17 = v5;
      if (v5)
      {
        *(_DWORD *)(v5 + 8) = 2;
        unint64_t v18 = *(_DWORD **)(v5 + 16);
        _DWORD *v18 = 2;
      }
    }
    uint64_t v6 = *((void *)this + 1);
    int v7 = *((_DWORD *)this + 4);
    *(void *)&long long v9 = 0xE00000000;
    *((void *)&v9 + 1) = v6;
    int v10 = v7;
    *(_OWORD *)std::string __p = 0u;
    memset(v12, 0, sizeof(v12));
    int v13 = 0;
    std::deque<YAML::Token>::push_back((void *)this + 12, &v9);
    unint64_t v20 = (void **)v12 + 1;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v20);
    if (SBYTE7(v12[0]) < 0) {
      operator delete(__p[0]);
    }
    unint64_t v8 = *((void *)this + 17) + *((void *)this + 16) - 1;
    unint64_t v19 = (_DWORD *)(*(void *)(*((void *)this + 13) + 8 * (v8 / 0x33)) + 80 * (v8 % 0x33));
    *unint64_t v19 = 2;
    *(void *)&double result = std::deque<YAML::Scanner::SimpleKey>::push_back((void *)this + 19, (uint64_t)&v14).n128_u64[0];
  }
  return result;
}

void sub_239A45148(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  YAML::Token::~Token((void **)va);
  _Unwind_Resume(a1);
}

void YAML::Token::~Token(void **this)
{
  uint64_t v2 = this + 6;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

void *YAML::Scanner::InvalidateSimpleKey(void *this)
{
  uint64_t v1 = this[24];
  if (v1)
  {
    uint64_t v2 = v1 - 1;
    unint64_t v3 = this[23] + v1 - 1;
    uint64_t v4 = *(void *)(this[20] + 8 * (v3 / 0x55));
    unint64_t v5 = v3 % 0x55;
    if (*(void *)(v4 + 48 * (v3 % 0x55) + 16) == this[39])
    {
      uint64_t v6 = *(void *)(v4 + 48 * v5 + 24);
      if (v6) {
        *(_DWORD *)(v6 + 8) = 1;
      }
      int v7 = *(_DWORD **)(v4 + 48 * v5 + 32);
      if (v7) {
        *int v7 = 1;
      }
      unint64_t v8 = *(_DWORD **)(v4 + 48 * v5 + 40);
      if (v8) {
        *unint64_t v8 = 1;
      }
      this[24] = v2;
      return (void *)std::deque<YAML::Scanner::SimpleKey>::__maybe_remove_back_spare[abi:ne180100](this + 19, 1);
    }
  }
  return this;
}

uint64_t YAML::Scanner::VerifySimpleKey(YAML::Scanner *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (!v1) {
    return 0;
  }
  uint64_t v3 = v1 - 1;
  unint64_t v4 = *(void *)(*((void *)this + 20) + 8 * ((*((void *)this + 23) + v3) / 0x55uLL))
     + 48 * ((*((void *)this + 23) + v3) % 0x55uLL);
  if (*(void *)(v4 + 16) != *((void *)this + 39)) {
    return 0;
  }
  uint64_t v6 = *(void *)(v4 + 24);
  unint64_t v5 = *(_DWORD **)(v4 + 32);
  int v7 = *(int **)(v4 + 40);
  int v8 = *(_DWORD *)v4;
  int v9 = *(_DWORD *)(v4 + 4);
  *((void *)this + 24) = v3;
  std::deque<YAML::Scanner::SimpleKey>::__maybe_remove_back_spare[abi:ne180100]((void *)this + 19, 1);
  if (*((_DWORD *)this + 3) == v9 && *((_DWORD *)this + 2) - v8 <= 1024)
  {
    if (v6) {
      *(_DWORD *)(v6 + 8) = 0;
    }
    if (v5) {
      *unint64_t v5 = 0;
    }
    uint64_t result = 1;
    if (v7)
    {
      int v11 = 0;
      goto LABEL_18;
    }
  }
  else
  {
    if (v6) {
      *(_DWORD *)(v6 + 8) = 1;
    }
    if (v5) {
      *unint64_t v5 = 1;
    }
    uint64_t result = 0;
    if (v7)
    {
      int v11 = 1;
LABEL_18:
      *int v7 = v11;
    }
  }
  return result;
}

uint64_t YAML::Scanner::PopAllSimpleKeys(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 192);
  if (v1)
  {
    uint64_t v2 = this;
    uint64_t v3 = (void *)(this + 152);
    do
    {
      *(void *)(v2 + 192) = v1 - 1;
      this = std::deque<YAML::Scanner::SimpleKey>::__maybe_remove_back_spare[abi:ne180100](v3, 1);
      uint64_t v1 = *(void *)(v2 + 192);
    }
    while (v1);
  }
  return this;
}

__n128 std::deque<YAML::Token>::push_back(void *a1, long long *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 51 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    std::deque<YAML::Token>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x33)) + 80 * (v7 % 0x33);
  long long v9 = *a2;
  *(_DWORD *)(v8 + 16) = *((_DWORD *)a2 + 4);
  *(_OWORD *)unint64_t v8 = v9;
  long long v10 = *(long long *)((char *)a2 + 24);
  *(void *)(v8 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((void *)a2 + 5);
  *(_OWORD *)(v8 + 24) = v10;
  *((void *)a2 + 4) = 0;
  *((void *)a2 + 5) = 0;
  *((void *)a2 + 3) = 0;
  *(void *)(v8 + 48) = 0;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = 0;
  __n128 result = (__n128)a2[3];
  *(__n128 *)(v8 + 48) = result;
  *(void *)(v8 + 64) = *((void *)a2 + 8);
  *((void *)a2 + 7) = 0;
  *((void *)a2 + 8) = 0;
  *((void *)a2 + 6) = 0;
  *(_DWORD *)(v8 + 72) = *((_DWORD *)a2 + 18);
  ++a1[5];
  return result;
}

void std::deque<YAML::Token>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x33;
  unint64_t v4 = v2 - 51;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    long long v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      int v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Token *>>(v5, v33);
      BOOL v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      uint64_t v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        uint64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)uint64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      long long v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFF0uLL);
      std::__split_buffer<YAML::Token *>::push_back(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFF0uLL);
    std::__split_buffer<YAML::Token *>::push_front((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    long long v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      int v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Token *>>((uint64_t)(a1 + 3), v46);
      BOOL v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        size_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)size_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      uint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  unint64_t v56 = a1 + 3;
  *(void *)&long long v54 = std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Token *>>((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFF0uLL);
  std::__split_buffer<YAML::Token *>::push_back(&v54, &v53);
  int64x2_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    std::__split_buffer<YAML::Token *>::push_front((uint64_t)&v54, v27);
  }
  char v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_239A45764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void std::__split_buffer<YAML::Token *>::push_back(void *a1, void *a2)
{
  uint64_t v5 = (char *)a1[3];
  uint64_t v4 = (uint64_t)(a1 + 3);
  uint64_t v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    unint64_t v7 = (char *)a1[1];
    uint64_t v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v18 = 1;
      }
      else {
        unint64_t v18 = (uint64_t)&v6[-*a1] >> 2;
      }
      unint64_t v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Token *>>(v4, v18);
      uint64_t v21 = &v19[8 * (v18 >> 2)];
      unint64_t v22 = (uint64_t *)a1[1];
      uint64_t v6 = v21;
      uint64_t v23 = a1[2] - (void)v22;
      if (v23)
      {
        uint64_t v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v24 = 8 * (v23 >> 3);
        unint64_t v25 = &v19[8 * (v18 >> 2)];
        do
        {
          uint64_t v26 = *v22++;
          *(void *)unint64_t v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      int64x2_t v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        uint64_t v6 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v9 = v8 >> 3;
      BOOL v10 = v8 >> 3 < -1;
      uint64_t v11 = (v8 >> 3) + 2;
      if (v10) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = v9 + 1;
      }
      uint64_t v13 = -(v12 >> 1);
      uint64_t v14 = v12 >> 1;
      uint64_t v15 = &v7[-8 * v14];
      int64_t v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        uint64_t v6 = (char *)a1[1];
      }
      uint64_t v17 = &v6[8 * v13];
      uint64_t v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(void *)uint64_t v6 = *a2;
  a1[2] += 8;
}

{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;

  uint64_t v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1) {
        int64_t v16 = 1;
      }
      else {
        int64_t v16 = (uint64_t)&v4[-*a1] >> 2;
      }
      uint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Token *>>(a1[4], v16);
      unint64_t v19 = &v17[8 * (v16 >> 2)];
      uint64_t v20 = (uint64_t *)a1[1];
      uint64_t v4 = v19;
      uint64_t v21 = a1[2] - (void)v20;
      if (v21)
      {
        uint64_t v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        unint64_t v22 = 8 * (v21 >> 3);
        uint64_t v23 = &v17[8 * (v16 >> 2)];
        do
        {
          uint64_t v24 = *v20++;
          *(void *)uint64_t v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      unint64_t v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        uint64_t v4 = (char *)a1[2];
      }
    }
    else
    {
      unint64_t v7 = v6 >> 3;
      uint64_t v8 = v6 >> 3 < -1;
      uint64_t v9 = (v6 >> 3) + 2;
      if (v8) {
        BOOL v10 = v9;
      }
      else {
        BOOL v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      uint64_t v12 = v10 >> 1;
      uint64_t v13 = &v5[-8 * v12];
      uint64_t v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        uint64_t v4 = (char *)a1[1];
      }
      uint64_t v15 = &v4[8 * v11];
      uint64_t v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(void *)uint64_t v4 = *a2;
  a1[2] += 8;
}

void std::__split_buffer<YAML::Token *>::push_front(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = a1 + 24;
    unint64_t v7 = *(unsigned char **)(a1 + 24);
    uint64_t v8 = *(unsigned char **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4) {
        unint64_t v12 = 1;
      }
      else {
        unint64_t v12 = (v7 - v4) >> 2;
      }
      uint64_t v13 = 2 * v12;
      uint64_t v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Token *>>(v6, v12);
      uint64_t v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      int64_t v16 = *(uint64_t **)(a1 + 8);
      uint64_t v17 = v5;
      uint64_t v18 = *(void *)(a1 + 16) - (void)v16;
      if (v18)
      {
        uint64_t v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v19 = 8 * (v18 >> 3);
        uint64_t v20 = v5;
        do
        {
          uint64_t v21 = *v16++;
          *(void *)uint64_t v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      unint64_t v22 = *(char **)a1;
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v9 = (v7 - v8) >> 3;
      if (v9 >= -1) {
        uint64_t v10 = v9 + 1;
      }
      else {
        uint64_t v10 = v9 + 2;
      }
      uint64_t v11 = v10 >> 1;
      uint64_t v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

{
  char *v4;
  char *v5;
  unsigned char *v6;
  unsigned char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;

  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = *(unsigned char **)(a1 + 16);
    unint64_t v7 = *(unsigned char **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4) {
        uint64_t v11 = 1;
      }
      else {
        uint64_t v11 = (v7 - v4) >> 2;
      }
      unint64_t v12 = 2 * v11;
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Token *>>(*(void *)(a1 + 32), v11);
      uint64_t v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v15 = *(uint64_t **)(a1 + 8);
      int64_t v16 = v5;
      uint64_t v17 = *(void *)(a1 + 16) - (void)v15;
      if (v17)
      {
        int64_t v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v18 = 8 * (v17 >> 3);
        uint64_t v19 = v5;
        do
        {
          uint64_t v20 = *v15++;
          *(void *)uint64_t v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      uint64_t v21 = *(char **)a1;
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v8 = (v7 - v6) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      uint64_t v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Token *>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a2);
}

__n128 std::deque<YAML::Scanner::SimpleKey>::push_back(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 85 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    std::deque<YAML::Scanner::SimpleKey>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x55)) + 48 * (v7 % 0x55);
  __n128 result = *(__n128 *)a2;
  long long v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v8 + 32) = v10;
  *(__n128 *)unint64_t v8 = result;
  ++a1[5];
  return result;
}

void std::deque<YAML::Scanner::SimpleKey>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x55;
  unint64_t v4 = v2 - 85;
  if (v3)
  {
    a1[4] = v4;
    uint64_t v5 = (void *)a1[1];
    uint64_t v6 = (char *)a1[2];
    uint64_t v9 = *v5;
    unint64_t v7 = (char *)(v5 + 1);
    uint64_t v8 = v9;
    a1[1] = v7;
    if (v6 != (char *)a1[3]) {
      goto LABEL_41;
    }
    uint64_t v10 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v38 = 1;
      }
      else {
        unint64_t v38 = (uint64_t)&v6[-*a1] >> 2;
      }
      uint64_t v39 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(v38);
      uint64_t v40 = &v39[8 * (v38 >> 2)];
      uint64_t v42 = &v39[8 * v41];
      uint64_t v43 = (uint64_t *)a1[1];
      uint64_t v6 = v40;
      uint64_t v44 = a1[2] - (void)v43;
      if (v44)
      {
        uint64_t v6 = &v40[v44 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v45 = 8 * (v44 >> 3);
        unint64_t v46 = &v39[8 * (v38 >> 2)];
        do
        {
          uint64_t v47 = *v43++;
          *(void *)unint64_t v46 = v47;
          v46 += 8;
          v45 -= 8;
        }
        while (v45);
      }
      goto LABEL_29;
    }
LABEL_5:
    uint64_t v11 = v10 >> 3;
    BOOL v12 = v10 >> 3 < -1;
    uint64_t v13 = (v10 >> 3) + 2;
    if (v12) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = v11 + 1;
    }
    uint64_t v15 = -(v14 >> 1);
    uint64_t v16 = v14 >> 1;
    uint64_t v17 = &v7[-8 * v16];
    int64_t v18 = v6 - v7;
    if (v6 != v7)
    {
      memmove(&v7[-8 * v16], v7, v6 - v7);
      unint64_t v7 = (char *)a1[1];
    }
    uint64_t v6 = &v17[v18];
    a1[1] = &v7[8 * v15];
    a1[2] = &v17[v18];
    goto LABEL_41;
  }
  uint64_t v20 = (char *)a1[2];
  uint64_t v19 = (char *)a1[3];
  uint64_t v21 = (char *)*a1;
  unint64_t v22 = (char *)a1[1];
  unint64_t v23 = (v20 - v22) >> 3;
  uint64_t v24 = (uint64_t)&v19[-*a1];
  if (v23 < v24 >> 3)
  {
    unint64_t v25 = operator new(0xFF0uLL);
    uint64_t v26 = v25;
    if (v19 != v20)
    {
      *(void *)uint64_t v20 = v25;
LABEL_42:
      a1[2] += 8;
      return;
    }
    if (v22 == v21)
    {
      if (v20 == v22) {
        unint64_t v49 = 1;
      }
      else {
        unint64_t v49 = (v19 - v22) >> 2;
      }
      uint64_t v50 = 2 * v49;
      size_t v51 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(v49);
      unint64_t v22 = &v51[(v50 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v53 = (uint64_t *)a1[1];
      long long v54 = v22;
      uint64_t v55 = a1[2] - (void)v53;
      if (v55)
      {
        long long v54 = &v22[v55 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v56 = 8 * (v55 >> 3);
        std::string::size_type v57 = &v51[(v50 + 6) & 0xFFFFFFFFFFFFFFF8];
        do
        {
          uint64_t v58 = *v53++;
          *(void *)std::string::size_type v57 = v58;
          v57 += 8;
          v56 -= 8;
        }
        while (v56);
      }
      std::string::size_type v59 = (char *)*a1;
      *a1 = v51;
      a1[1] = v22;
      a1[2] = v54;
      a1[3] = &v51[8 * v52];
      if (v59)
      {
        operator delete(v59);
        unint64_t v22 = (char *)a1[1];
      }
    }
    *((void *)v22 - 1) = v26;
    unint64_t v7 = (char *)a1[1];
    uint64_t v6 = (char *)a1[2];
    a1[1] = v7 - 8;
    uint64_t v8 = *((void *)v7 - 1);
    a1[1] = v7;
    if (v6 != (char *)a1[3])
    {
LABEL_41:
      *(void *)uint64_t v6 = v8;
      goto LABEL_42;
    }
    uint64_t v10 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v82 = 1;
      }
      else {
        unint64_t v82 = (uint64_t)&v6[-*a1] >> 2;
      }
      uint64_t v39 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(v82);
      uint64_t v40 = &v39[8 * (v82 >> 2)];
      uint64_t v42 = &v39[8 * v83];
      char v84 = (uint64_t *)a1[1];
      uint64_t v6 = v40;
      uint64_t v85 = a1[2] - (void)v84;
      if (v85)
      {
        uint64_t v6 = &v40[v85 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v86 = 8 * (v85 >> 3);
        BOOL v87 = &v39[8 * (v82 >> 2)];
        do
        {
          uint64_t v88 = *v84++;
          *(void *)BOOL v87 = v88;
          v87 += 8;
          v86 -= 8;
        }
        while (v86);
      }
LABEL_29:
      uint64_t v48 = (char *)*a1;
      *a1 = v39;
      a1[1] = v40;
      a1[2] = v6;
      a1[3] = v42;
      if (v48)
      {
        operator delete(v48);
        uint64_t v6 = (char *)a1[2];
      }
      goto LABEL_41;
    }
    goto LABEL_5;
  }
  uint64_t v27 = v24 >> 2;
  if (v19 == v21) {
    unint64_t v28 = 1;
  }
  else {
    unint64_t v28 = v27;
  }
  char v29 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(v28);
  uint64_t v31 = v30;
  long long v32 = operator new(0xFF0uLL);
  unint64_t v33 = &v29[8 * v23];
  int v34 = &v29[8 * v31];
  if (v23 == v31)
  {
    uint64_t v35 = 8 * v23;
    if (v20 - v22 < 1)
    {
      uint64_t v60 = v35 >> 2;
      if (v20 == v22) {
        unint64_t v61 = 1;
      }
      else {
        unint64_t v61 = v60;
      }
      std::string::size_type v62 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(v61);
      unint64_t v33 = &v62[8 * (v61 >> 2)];
      int v34 = &v62[8 * v63];
      if (v29) {
        operator delete(v29);
      }
      char v29 = v62;
    }
    else
    {
      uint64_t v36 = v35 >> 3;
      if (v36 >= -1) {
        unint64_t v37 = v36 + 1;
      }
      else {
        unint64_t v37 = v36 + 2;
      }
      v33 -= 8 * (v37 >> 1);
    }
  }
  *(void *)unint64_t v33 = v32;
  int v64 = v33 + 8;
  for (uint64_t i = a1[2]; i != a1[1]; i -= 8)
  {
    if (v33 == v29)
    {
      if (v64 >= v34)
      {
        if (v34 == v29) {
          unint64_t v70 = 1;
        }
        else {
          unint64_t v70 = (v34 - v29) >> 2;
        }
        uint64_t v71 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(v70);
        uint64_t v73 = v71;
        unint64_t v33 = &v71[(2 * v70 + 6) & 0xFFFFFFFFFFFFFFF8];
        uint64_t v75 = v64 - v29;
        BOOL v74 = v64 == v29;
        int v64 = v33;
        if (!v74)
        {
          int v64 = &v33[v75 & 0xFFFFFFFFFFFFFFF8];
          uint64_t v76 = 8 * (v75 >> 3);
          __n128 v77 = v33;
          uint64_t v78 = (uint64_t *)v29;
          do
          {
            uint64_t v79 = *v78++;
            *(void *)__n128 v77 = v79;
            v77 += 8;
            v76 -= 8;
          }
          while (v76);
        }
        int v34 = &v71[8 * v72];
        if (v29) {
          operator delete(v29);
        }
        char v29 = v73;
      }
      else
      {
        uint64_t v66 = (v34 - v64) >> 3;
        if (v66 >= -1) {
          uint64_t v67 = v66 + 1;
        }
        else {
          uint64_t v67 = v66 + 2;
        }
        uint64_t v68 = v67 >> 1;
        unint64_t v33 = &v29[8 * (v67 >> 1)];
        uint64_t v69 = v29;
        if (v64 != v29)
        {
          memmove(v33, v29, v64 - v29);
          uint64_t v69 = v64;
        }
        int v64 = &v69[8 * v68];
      }
    }
    uint64_t v80 = *(void *)(i - 8);
    *((void *)v33 - 1) = v80;
    v33 -= 8;
  }
  uint64_t v81 = (char *)*a1;
  *a1 = v29;
  a1[1] = v33;
  a1[2] = v64;
  a1[3] = v34;
  if (v81)
  {
    operator delete(v81);
  }
}

void sub_239A46138(_Unwind_Exception *a1)
{
  operator delete(v2);
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(unint64_t a1)
{
  if (a1 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a1);
}

uint64_t std::deque<YAML::Scanner::SimpleKey>::__maybe_remove_back_spare[abi:ne180100](void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = 85 * ((v2 - v3) >> 3) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x55) {
    a2 = 1;
  }
  if (v5 < 0xAA) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

void __cxx_global_array_dtor()
{
  uint64_t v0 = 0x1E0u;
  do
  {
    if (YAML::TokenNames[v0 - 1] < 0) {
      operator delete(*(void **)&YAML::TokenNames[v0 - 24]);
    }
    v0 -= 24;
  }
  while (v0);
}

void siri::intelligence::Activity::GetId(siri::intelligence::Activity *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)this, *((void *)this + 1));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)this;
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 2);
  }
}

std::string *siri::intelligence::Activity::SetName(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 1, a2);
}

void siri::intelligence::Activity::GetName(siri::intelligence::Activity *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 47) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 3), *((void *)this + 4));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 24);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 5);
  }
}

std::string *siri::intelligence::Activity::SetInputGroup(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 2, a2);
}

void siri::intelligence::Activity::GetInputGroup(siri::intelligence::Activity *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 71) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 6), *((void *)this + 7));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *((_OWORD *)this + 3);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 8);
  }
}

void siri::intelligence::Activity::SetResponseIds(std::vector<std::string> *a1, uint64_t a2)
{
  uint64_t v2 = a1 + 3;
  if (v2 != (std::vector<std::string> *)a2) {
    std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string*,std::string*>(v2, *(std::string **)a2, *(long long **)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3));
  }
}

std::string *siri::intelligence::Activity::GetResponseIds@<X0>(long long **this@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(a2, this[9], this[10], 0xAAAAAAAAAAAAAAABLL * (((char *)this[10] - (char *)this[9]) >> 3));
}

uint64_t siri::intelligence::Activity::UseGlobalInputGroup(siri::intelligence::Activity *this)
{
  return 1;
}

void YAML::Scanner::ScanDirective(YAML::Scanner *this)
{
  memset(v30, 0, 24);
  YAML::Scanner::PopAllIndents(this);
  for (uint64_t i = *((void *)this + 24); i; uint64_t i = *((void *)this + 24))
  {
    *((void *)this + 24) = i - 1;
    std::deque<YAML::Scanner::SimpleKey>::__maybe_remove_back_spare[abi:ne180100]((void *)this + 19, 1);
  }
  *((_WORD *)this + 73) = 0;
  uint64_t v3 = *((void *)this + 1);
  int v4 = *((_DWORD *)this + 4);
  *(void *)&long long v24 = 0;
  *((void *)&v24 + 1) = v3;
  int v25 = v4;
  *(_OWORD *)std::string __p = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  int v29 = 0;
  YAML::Stream::get(this);
  while (YAML::Stream::operator BOOL(this))
  {
    {
      if (v6)
      {
        int v7 = (YAML::Exp *)YAML::Exp::Blank(v6);
        uint64_t v8 = (int *)YAML::Exp::Break(v7);
        YAML::operator|((int *)v7, v8, (uint64_t)&YAML::Exp::BlankOrBreak(void)::e);
        __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::BlankOrBreak(void)::e, &dword_239A02000);
      }
    }
    v22.__r_.__value_.__r.__words[0] = 0;
    v22.__r_.__value_.__l.__size_ = (std::string::size_type)this;
    if ((YAML::RegEx::Match<YAML::StreamCharSource>((uint64_t)&YAML::Exp::BlankOrBreak(void)::e, (unint64_t *)&v22) & 0x80000000) == 0)break; {
    std::string::value_type v5 = YAML::Stream::get(this);
    }
    std::string::push_back((std::string *)__p, v5);
  }
  while (1)
  {
    while (1)
    {
      {
        if (v19)
        {
          uint64_t v20 = YAML::Exp::Space(v19);
          uint64_t v21 = YAML::Exp::Tab((YAML::Exp *)v20);
          YAML::operator|(v20, v21, (uint64_t)&YAML::Exp::Blank(void)::e);
          __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::Blank(void)::e, &dword_239A02000);
        }
      }
      v22.__r_.__value_.__r.__words[0] = 0;
      v22.__r_.__value_.__l.__size_ = (std::string::size_type)this;
      if ((YAML::RegEx::Match<YAML::StreamCharSource>((uint64_t)&YAML::Exp::Blank(void)::e, (unint64_t *)&v22) & 0x80000000) != 0) {
        break;
      }
      YAML::Stream::get(this);
    }
    BOOL v9 = YAML::Stream::operator BOOL(this);
    if (!v9) {
      break;
    }
    uint64_t v10 = YAML::Exp::Break((YAML::Exp *)v9);
    v22.__r_.__value_.__r.__words[0] = 0;
    v22.__r_.__value_.__l.__size_ = (std::string::size_type)this;
    if ((YAML::RegEx::Match<YAML::StreamCharSource>((uint64_t)v10, (unint64_t *)&v22) & 0x80000000) == 0) {
      break;
    }
    {
      YAML::Exp::Comment(void)::e = 1;
      word_268A0A884 = 35;
      qword_268A0A890 = 0;
      unk_268A0A898 = 0;
      qword_268A0A888 = 0;
      __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::Comment(void)::e, &dword_239A02000);
    }
    LODWORD(v22.__r_.__value_.__l.__data_) = YAML::Exp::Comment(void)::e;
    WORD2(v22.__r_.__value_.__r.__words[0]) = word_268A0A884;
    uint64_t v23 = 0;
    *(_OWORD *)&v22.__r_.__value_.__r.__words[1] = 0uLL;
    std::vector<YAML::RegEx>::__init_with_size[abi:ne180100]<YAML::RegEx*,YAML::RegEx*>(&v22.__r_.__value_.__l.__size_, (int *)qword_268A0A888, (int *)qword_268A0A890, (qword_268A0A890 - qword_268A0A888) >> 5);
    p_std::string::size_type size = 0;
    long long v32 = this;
    int v11 = YAML::RegEx::Match<YAML::StreamCharSource>((uint64_t)&v22, (unint64_t *)&p_size);
    p_std::string::size_type size = &v22.__r_.__value_.__l.__size_;
    std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_size);
    if ((v11 & 0x80000000) == 0) {
      break;
    }
    memset(&v22, 0, sizeof(v22));
    while (YAML::Stream::operator BOOL(this))
    {
      {
        if (v13)
        {
          uint64_t v14 = (YAML::Exp *)YAML::Exp::Blank(v13);
          uint64_t v15 = (int *)YAML::Exp::Break(v14);
          YAML::operator|((int *)v14, v15, (uint64_t)&YAML::Exp::BlankOrBreak(void)::e);
          __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::BlankOrBreak(void)::e, &dword_239A02000);
        }
      }
      p_std::string::size_type size = 0;
      long long v32 = this;
      if ((YAML::RegEx::Match<YAML::StreamCharSource>((uint64_t)&YAML::Exp::BlankOrBreak(void)::e, (unint64_t *)&p_size) & 0x80000000) == 0)break; {
      std::string::value_type v12 = YAML::Stream::get(this);
      }
      std::string::push_back(&v22, v12);
    }
    uint64_t v16 = (_OWORD *)v28;
    if ((unint64_t)v28 >= *((void *)&v28 + 1))
    {
      uint64_t v18 = std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v27 + 1, (long long *)&v22);
    }
    else
    {
      if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v28, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
      }
      else
      {
        long long v17 = *(_OWORD *)&v22.__r_.__value_.__l.__data_;
        *(void *)(v28 + 16) = *((void *)&v22.__r_.__value_.__l + 2);
        *uint64_t v16 = v17;
      }
      uint64_t v18 = (uint64_t)v16 + 24;
    }
    *(void *)&long long v28 = v18;
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
  }
  std::deque<YAML::Token>::push_back((void *)this + 12, &v24);
  v22.__r_.__value_.__r.__words[0] = (std::string::size_type)&v27 + 8;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v22);
  if (SBYTE7(v27) < 0) {
    operator delete(__p[0]);
  }
  *(void *)&long long v24 = v30;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v24);
}

void sub_239A46754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  a17 = &a27;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a17);
  _Unwind_Resume(a1);
}

void *YAML::Exp::BlankOrBreak(YAML::Exp *this)
{
  {
    if (v2)
    {
      uint64_t v3 = (YAML::Exp *)YAML::Exp::Blank(v2);
      int v4 = (int *)YAML::Exp::Break(v3);
      YAML::operator|((int *)v3, v4, (uint64_t)&YAML::Exp::BlankOrBreak(void)::e);
      __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::BlankOrBreak(void)::e, &dword_239A02000);
    }
  }
  return &YAML::Exp::BlankOrBreak(void)::e;
}

void sub_239A468A8(_Unwind_Exception *a1)
{
}

void *YAML::Exp::Blank(YAML::Exp *this)
{
  {
    if (v2)
    {
      uint64_t v3 = YAML::Exp::Space(v2);
      int v4 = YAML::Exp::Tab((YAML::Exp *)v3);
      YAML::operator|(v3, v4, (uint64_t)&YAML::Exp::Blank(void)::e);
      __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::Blank(void)::e, &dword_239A02000);
    }
  }
  return &YAML::Exp::Blank(void)::e;
}

void sub_239A46958(_Unwind_Exception *a1)
{
}

void *YAML::Exp::Break(YAML::Exp *this)
{
  {
    int v6 = 1;
    __int16 v7 = 10;
    memset(v8, 0, sizeof(v8));
    std::string::basic_string[abi:ne180100]<0>(__p, "\r\n");
    YAML::RegEx::RegEx((uint64_t)&v4, (char *)__p, 6);
    YAML::operator|(&v6, (int *)&v4, (uint64_t)&YAML::Exp::Break(void)::e);
    BOOL v9 = (void **)&v5;
    std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v9);
    if (v3 < 0) {
      operator delete(__p[0]);
    }
    int v4 = (void **)v8;
    std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v4);
    __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::Break(void)::e, &dword_239A02000);
  }
  return &YAML::Exp::Break(void)::e;
}

void sub_239A46A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  *(void *)(v16 - 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v15 + 8;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)(v16 - 40));
  if (a14 < 0) {
    operator delete(__p);
  }
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&a15);
  _Unwind_Resume(a1);
}

void *YAML::Exp::Comment(YAML::Exp *this)
{
  {
    __int16 v7 = this;
    this = v7;
    if (v6)
    {
      YAML::Exp::Comment(void)::e = 1;
      word_268A0A884 = 35;
      qword_268A0A890 = 0;
      unk_268A0A898 = 0;
      qword_268A0A888 = 0;
      __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::Comment(void)::e, &dword_239A02000);
      this = v7;
    }
  }
  *(_DWORD *)this = YAML::Exp::Comment(void)::e;
  *((_WORD *)this + 2) = word_268A0A884;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 1) = 0;
  uint64_t v1 = (void *)((char *)this + 8);
  uint64_t v2 = (int *)qword_268A0A888;
  char v3 = (int *)qword_268A0A890;
  unint64_t v4 = (qword_268A0A890 - qword_268A0A888) >> 5;

  return std::vector<YAML::RegEx>::__init_with_size[abi:ne180100]<YAML::RegEx*,YAML::RegEx*>(v1, v2, v3, v4);
}

void YAML::RegEx::~RegEx(YAML::RegEx *this)
{
  uint64_t v1 = (void **)((char *)this + 8);
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v1);
}

void YAML::Scanner::ScanDocStart(YAML::Scanner *this)
{
  YAML::Scanner::PopAllIndents(this);
  for (uint64_t i = *((void *)this + 24); i; uint64_t i = *((void *)this + 24))
  {
    *((void *)this + 24) = i - 1;
    std::deque<YAML::Scanner::SimpleKey>::__maybe_remove_back_spare[abi:ne180100]((void *)this + 19, 1);
  }
  *((_WORD *)this + 73) = 0;
  uint64_t v3 = *((void *)this + 1);
  int v4 = 3;
  int v5 = *((_DWORD *)this + 4);
  do
  {
    YAML::Stream::get(this);
    --v4;
  }
  while (v4);
  *(void *)&long long v6 = 0x100000000;
  *((void *)&v6 + 1) = v3;
  int v7 = v5;
  *(_OWORD *)std::string __p = 0u;
  memset(v9, 0, sizeof(v9));
  int v10 = 0;
  std::deque<YAML::Token>::push_back((void *)this + 12, &v6);
  int v11 = (void **)v9 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v11);
  if (SBYTE7(v9[0]) < 0) {
    operator delete(__p[0]);
  }
}

void sub_239A46CC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  YAML::Token::~Token((void **)va);
  _Unwind_Resume(a1);
}

void YAML::Scanner::ScanDocEnd(YAML::Scanner *this)
{
  YAML::Scanner::PopAllIndents(this);
  for (uint64_t i = *((void *)this + 24); i; uint64_t i = *((void *)this + 24))
  {
    *((void *)this + 24) = i - 1;
    std::deque<YAML::Scanner::SimpleKey>::__maybe_remove_back_spare[abi:ne180100]((void *)this + 19, 1);
  }
  *((_WORD *)this + 73) = 0;
  uint64_t v3 = *((void *)this + 1);
  int v4 = 3;
  int v5 = *((_DWORD *)this + 4);
  do
  {
    YAML::Stream::get(this);
    --v4;
  }
  while (v4);
  *(void *)&long long v6 = 0x200000000;
  *((void *)&v6 + 1) = v3;
  int v7 = v5;
  *(_OWORD *)std::string __p = 0u;
  memset(v9, 0, sizeof(v9));
  int v10 = 0;
  std::deque<YAML::Token>::push_back((void *)this + 12, &v6);
  int v11 = (void **)v9 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v11);
  if (SBYTE7(v9[0]) < 0) {
    operator delete(__p[0]);
  }
}

void sub_239A46DA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  YAML::Token::~Token((void **)va);
  _Unwind_Resume(a1);
}

void YAML::Scanner::ScanFlowStart(YAML::Scanner *this)
{
  YAML::Scanner::InsertPotentialSimpleKey(this);
  *((_WORD *)this + 73) = 1;
  uint64_t v2 = *((void *)this + 1);
  int v3 = *((_DWORD *)this + 4);
  BOOL v10 = YAML::Stream::get(this) == 91;
  std::deque<YAML::Scanner::FLOW_MARKER>::push_back((void *)this + 34, &v10);
  if (v10) {
    int v4 = 8;
  }
  else {
    int v4 = 9;
  }
  LODWORD(v5) = 0;
  DWORD1(v5) = v4;
  *((void *)&v5 + 1) = v2;
  int v6 = v3;
  *(_OWORD *)std::string __p = 0u;
  memset(v8, 0, sizeof(v8));
  int v9 = 0;
  std::deque<YAML::Token>::push_back((void *)this + 12, &v5);
  int v11 = (void **)v8 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v11);
  if (SBYTE7(v8[0]) < 0) {
    operator delete(__p[0]);
  }
}

void sub_239A46E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void YAML::Scanner::ScanFlowEnd(YAML::Scanner *this)
{
  uint64_t v2 = *((void *)this + 39);
  if (!v2)
  {
    exceptiostd::string::size_type n = __cxa_allocate_exception(0x38uLL);
    int v17 = *((_DWORD *)this + 4);
    int v25 = (void **)*((void *)this + 1);
    int v26 = v17;
    std::string::basic_string[abi:ne180100]<0>(&v19, "illegal flow end");
    YAML::Exception::Exception((uint64_t)exception, &v25, (uint64_t)&v19);
    void *exception = &unk_26ED2A588;
  }
  int v3 = *(_DWORD *)(*(void *)(*((void *)this + 35)
                             + (((unint64_t)(v2 + *((void *)this + 38) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                 + 4 * ((v2 + *((void *)this + 38) - 1) & 0x3FF));
  if (!v3)
  {
    if (YAML::Scanner::VerifySimpleKey(this))
    {
      uint64_t v4 = *((void *)this + 1);
      int v5 = *((_DWORD *)this + 4);
      *(void *)&long long v19 = 0xF00000000;
      *((void *)&v19 + 1) = v4;
      int v20 = v5;
      *(_OWORD *)std::string __p = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      int v24 = 0;
      std::deque<YAML::Token>::push_back((void *)this + 12, &v19);
      int v25 = (void **)&v22 + 1;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v25);
      if (SBYTE7(v22) < 0) {
        operator delete(__p[0]);
      }
      goto LABEL_9;
    }
    unint64_t v6 = *((void *)this + 39) + *((void *)this + 38) - 1;
    int v3 = *(_DWORD *)(*(void *)(*((void *)this + 35) + ((v6 >> 7) & 0x1FFFFFFFFFFFFF8)) + 4 * (v6 & 0x3FF));
  }
  if (v3 == 1) {
    YAML::Scanner::InvalidateSimpleKey(this);
  }
LABEL_9:
  *((_WORD *)this + 73) = 256;
  int v7 = *((_DWORD *)this + 4);
  int v25 = (void **)*((void *)this + 1);
  int v26 = v7;
  int v8 = YAML::Stream::get(this);
  uint64_t v9 = *((void *)this + 39) - 1;
  unint64_t v10 = v9 + *((void *)this + 38);
  uint64_t v11 = *((void *)this + 35);
  if (*(_DWORD *)(*(void *)(v11 + ((v10 >> 7) & 0x1FFFFFFFFFFFFF8)) + 4 * (v10 & 0x3FF)) != (v8 == 93))
  {
    uint64_t v18 = __cxa_allocate_exception(0x38uLL);
    std::string::basic_string[abi:ne180100]<0>(&v19, "illegal flow end");
    YAML::Exception::Exception((uint64_t)v18, &v25, (uint64_t)&v19);
    void *v18 = &unk_26ED2A588;
  }
  int v12 = v8;
  uint64_t v13 = *((void *)this + 36);
  *((void *)this + 39) = v9;
  if (v13 == v11) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = ((v13 - v11) << 7) - 1;
  }
  if (v14 - v10 >= 0x800)
  {
    operator delete(*(void **)(v13 - 8));
    *((void *)this + 36) -= 8;
  }
  if (v12 == 93) {
    int v15 = 10;
  }
  else {
    int v15 = 11;
  }
  LODWORD(v19) = 0;
  DWORD1(v19) = v15;
  *((void *)&v19 + 1) = v25;
  int v20 = v26;
  *(_OWORD *)std::string __p = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  int v24 = 0;
  std::deque<YAML::Token>::push_back((void *)this + 12, &v19);
  long long v27 = (void **)&v22 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v27);
  if (SBYTE7(v22) < 0) {
    operator delete(__p[0]);
  }
}

void sub_239A47180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

void YAML::Scanner::ScanFlowEntry(YAML::Scanner *this)
{
  uint64_t v2 = *((void *)this + 39);
  if (!v2) {
    goto LABEL_9;
  }
  int v3 = *(_DWORD *)(*(void *)(*((void *)this + 35)
                             + (((unint64_t)(v2 + *((void *)this + 38) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                 + 4 * ((v2 + *((void *)this + 38) - 1) & 0x3FF));
  if (!v3)
  {
    if (YAML::Scanner::VerifySimpleKey(this))
    {
      uint64_t v4 = *((void *)this + 1);
      int v5 = *((_DWORD *)this + 4);
      *(void *)&long long v9 = 0xF00000000;
      *((void *)&v9 + 1) = v4;
      int v10 = v5;
      *(_OWORD *)std::string __p = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      int v14 = 0;
      std::deque<YAML::Token>::push_back((void *)this + 12, &v9);
      int v15 = (void **)&v12 + 1;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v15);
      if (SBYTE7(v12) < 0) {
        operator delete(__p[0]);
      }
      goto LABEL_9;
    }
    unint64_t v6 = *((void *)this + 39) + *((void *)this + 38) - 1;
    int v3 = *(_DWORD *)(*(void *)(*((void *)this + 35) + ((v6 >> 7) & 0x1FFFFFFFFFFFFF8)) + 4 * (v6 & 0x3FF));
  }
  if (v3 == 1) {
    YAML::Scanner::InvalidateSimpleKey(this);
  }
LABEL_9:
  *((_WORD *)this + 73) = 1;
  uint64_t v7 = *((void *)this + 1);
  int v8 = *((_DWORD *)this + 4);
  YAML::Stream::get(this);
  *(void *)&long long v9 = 0xD00000000;
  *((void *)&v9 + 1) = v7;
  int v10 = v8;
  *(_OWORD *)std::string __p = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  int v14 = 0;
  std::deque<YAML::Token>::push_back((void *)this + 12, &v9);
  int v15 = (void **)&v12 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v15);
  if (SBYTE7(v12) < 0) {
    operator delete(__p[0]);
  }
}

void sub_239A47340(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  YAML::Token::~Token((void **)va);
  _Unwind_Resume(a1);
}

void YAML::Scanner::ScanBlockEntry(YAML::Scanner *this)
{
  if (*((void *)this + 39))
  {
    exceptiostd::string::size_type n = __cxa_allocate_exception(0x38uLL);
    int v5 = *((_DWORD *)this + 4);
    long long v13 = (void **)*((void *)this + 1);
    int v14 = v5;
    std::string::basic_string[abi:ne180100]<0>(&v8, "illegal block entry");
    YAML::Exception::Exception((uint64_t)exception, &v13, (uint64_t)&v8);
    void *exception = &unk_26ED2A588;
  }
  if (!*((unsigned char *)this + 146))
  {
    unint64_t v6 = __cxa_allocate_exception(0x38uLL);
    int v7 = *((_DWORD *)this + 4);
    long long v13 = (void **)*((void *)this + 1);
    int v14 = v7;
    std::string::basic_string[abi:ne180100]<0>(&v8, "illegal block entry");
    YAML::Exception::Exception((uint64_t)v6, &v13, (uint64_t)&v8);
    void *v6 = &unk_26ED2A588;
  }
  YAML::Scanner::PushIndentTo((uint64_t)this);
  *((_WORD *)this + 73) = 1;
  uint64_t v2 = *((void *)this + 1);
  int v3 = *((_DWORD *)this + 4);
  YAML::Stream::get(this);
  *(void *)&long long v8 = 0x700000000;
  *((void *)&v8 + 1) = v2;
  int v9 = v3;
  *(_OWORD *)std::string __p = 0u;
  memset(v11, 0, sizeof(v11));
  int v12 = 0;
  std::deque<YAML::Token>::push_back((void *)this + 12, &v8);
  long long v13 = (void **)v11 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v13);
  if (SBYTE7(v11[0]) < 0) {
    operator delete(__p[0]);
  }
}

void sub_239A47520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

void YAML::Scanner::ScanKey(YAML::Scanner *this)
{
  uint64_t v2 = *((void *)this + 39);
  if (!v2)
  {
    if (!*((unsigned char *)this + 146))
    {
      exceptiostd::string::size_type n = __cxa_allocate_exception(0x38uLL);
      unint64_t v6 = this;
      int v7 = exception;
      long long v8 = (void **)*((void *)v6 + 1);
      LODWORD(v6) = *((_DWORD *)v6 + 4);
      int v14 = v8;
      int v15 = (int)v6;
      std::string::basic_string[abi:ne180100]<0>(&v9, "illegal map key");
      YAML::Exception::Exception((uint64_t)v7, &v14, (uint64_t)&v9);
      *int v7 = &unk_26ED2A588;
    }
    YAML::Scanner::PushIndentTo((uint64_t)this);
    uint64_t v2 = *((void *)this + 39);
  }
  *((unsigned char *)this + 146) = v2 == 0;
  uint64_t v3 = *((void *)this + 1);
  int v4 = *((_DWORD *)this + 4);
  YAML::Stream::get(this);
  *(void *)&long long v9 = 0xE00000000;
  *((void *)&v9 + 1) = v3;
  int v10 = v4;
  *(_OWORD *)std::string __p = 0u;
  memset(v12, 0, sizeof(v12));
  int v13 = 0;
  std::deque<YAML::Token>::push_back((void *)this + 12, &v9);
  int v14 = (void **)v12 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v14);
  if (SBYTE7(v12[0]) < 0) {
    operator delete(__p[0]);
  }
}

void sub_239A476C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

void YAML::Scanner::ScanValue(YAML::Scanner *this)
{
  int v2 = YAML::Scanner::VerifySimpleKey(this);
  *((unsigned char *)this + 147) = 0;
  if (v2)
  {
    *((unsigned char *)this + 146) = 0;
  }
  else
  {
    uint64_t v3 = *((void *)this + 39);
    if (!v3)
    {
      if (!*((unsigned char *)this + 146))
      {
        exceptiostd::string::size_type n = __cxa_allocate_exception(0x38uLL);
        int v7 = this;
        long long v8 = exception;
        long long v9 = (void **)*((void *)v7 + 1);
        LODWORD(v7) = *((_DWORD *)v7 + 4);
        int v15 = v9;
        int v16 = (int)v7;
        std::string::basic_string[abi:ne180100]<0>(&v10, "illegal map value");
        YAML::Exception::Exception((uint64_t)v8, &v15, (uint64_t)&v10);
        *long long v8 = &unk_26ED2A588;
      }
      YAML::Scanner::PushIndentTo((uint64_t)this);
      uint64_t v3 = *((void *)this + 39);
    }
    *((unsigned char *)this + 146) = v3 == 0;
  }
  uint64_t v4 = *((void *)this + 1);
  int v5 = *((_DWORD *)this + 4);
  YAML::Stream::get(this);
  *(void *)&long long v10 = 0xF00000000;
  *((void *)&v10 + 1) = v4;
  int v11 = v5;
  *(_OWORD *)std::string __p = 0u;
  memset(v13, 0, sizeof(v13));
  int v14 = 0;
  std::deque<YAML::Token>::push_back((void *)this + 12, &v10);
  int v15 = (void **)v13 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v15);
  if (SBYTE7(v13[0]) < 0) {
    operator delete(__p[0]);
  }
}

void sub_239A4786C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

void YAML::Scanner::ScanAnchorOrAlias(void **this)
{
  memset(&__str, 0, sizeof(__str));
  YAML::Scanner::InsertPotentialSimpleKey((YAML::Scanner *)this);
  *((_WORD *)this + 73) = 0;
  int v2 = this[1];
  int v3 = *((_DWORD *)this + 4);
  int v4 = YAML::Stream::get((YAML::Stream *)this);
  while (YAML::Stream::operator BOOL(this))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_7, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&_MergedGlobals_7))
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "[]{},");
      unint64_t v6 = (YAML::Exp *)YAML::RegEx::RegEx((uint64_t)&v26, (char *)__p, 3);
      int v7 = (int *)YAML::Exp::BlankOrBreak(v6);
      YAML::operator|((int *)&v26, v7, (uint64_t)&v18);
      YAML::operator!((int *)&v18, (uint64_t)&unk_26AD86818);
      v29[0] = (void **)&v18 + 1;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](v29);
      v29[0] = (void **)&v27;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](v29);
      if (v25 < 0) {
        operator delete(__p[0]);
      }
      __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &unk_26AD86818, &dword_239A02000);
      __cxa_guard_release(&_MergedGlobals_7);
    }
    *(void *)&long long v18 = 0;
    *((void *)&v18 + 1) = this;
    if ((YAML::RegEx::Match<YAML::StreamCharSource>((uint64_t)&unk_26AD86818, (unint64_t *)&v18) & 0x80000000) != 0) {
      break;
    }
    std::string::value_type v5 = YAML::Stream::get((YAML::Stream *)this);
    std::string::push_back(&__str, v5);
  }
  std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (!size)
  {
    exceptiostd::string::size_type n = __cxa_allocate_exception(0x38uLL);
    int v11 = *((_DWORD *)this + 4);
    int v26 = this[1];
    int v27 = v11;
    if (v4 == 42) {
      int v12 = "alias not found after *";
    }
    else {
      int v12 = "anchor not found after &";
    }
    std::string::basic_string[abi:ne180100]<0>(&v18, v12);
    YAML::Exception::Exception((uint64_t)exception, &v26, (uint64_t)&v18);
    void *exception = &unk_26ED2A588;
  }
  if (YAML::Stream::operator BOOL(this))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD867E8, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26AD867E8))
    {
      int v13 = (YAML::Exp *)YAML::RegEx::RegEx((uint64_t)&v18, (char *)&v26, 3);
      int v14 = (int *)YAML::Exp::BlankOrBreak(v13);
      YAML::operator|((int *)&v18, v14, (uint64_t)&unk_26AD86838);
      __p[0] = (char *)&v18 + 8;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
      if (v28 < 0) {
        operator delete(v26);
      }
      __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &unk_26AD86838, &dword_239A02000);
      __cxa_guard_release(&qword_26AD867E8);
    }
    *(void *)&long long v18 = 0;
    *((void *)&v18 + 1) = this;
    if ((YAML::RegEx::Match<YAML::StreamCharSource>((uint64_t)&unk_26AD86838, (unint64_t *)&v18) & 0x80000000) != 0)
    {
      int v15 = __cxa_allocate_exception(0x38uLL);
      int v16 = *((_DWORD *)this + 4);
      int v26 = this[1];
      int v27 = v16;
      if (v4 == 42) {
        int v17 = "illegal character found while scanning alias";
      }
      else {
        int v17 = "illegal character found while scanning anchor";
      }
      std::string::basic_string[abi:ne180100]<0>(&v18, v17);
      YAML::Exception::Exception((uint64_t)v15, &v26, (uint64_t)&v18);
      void *v15 = &unk_26ED2A588;
    }
  }
  if (v4 == 42) {
    int v9 = 17;
  }
  else {
    int v9 = 16;
  }
  LODWORD(v18) = 0;
  DWORD1(v18) = v9;
  *((void *)&v18 + 1) = v2;
  int v19 = v3;
  *(_OWORD *)int v20 = 0u;
  memset(v21, 0, sizeof(v21));
  int v22 = 0;
  std::string::operator=((std::string *)v20, &__str);
  std::deque<YAML::Token>::push_back(this + 12, &v18);
  int v26 = (char *)v21 + 8;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v26);
  if (SBYTE7(v21[0]) < 0) {
    operator delete(v20[0]);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_239A47CB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (a39 < 0) {
    operator delete(__p);
  }
  __cxa_guard_abort(&qword_26AD867E8);
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(a1);
}

void YAML::Scanner::ScanTag(YAML::Scanner *this)
{
  YAML::Scanner::InsertPotentialSimpleKey(this);
  *((_WORD *)this + 73) = 0;
  uint64_t v2 = *((void *)this + 1);
  int v3 = *((_DWORD *)this + 4);
  *(void *)&long long v12 = 0x1200000000;
  *((void *)&v12 + 1) = v2;
  int v13 = v3;
  *(_OWORD *)std::string __p = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  int v17 = 0;
  YAML::Stream::get(this);
  if (YAML::Stream::operator BOOL(this)
    && *((void *)this + 8)
    && *(unsigned char *)(*(void *)(*((void *)this + 4) + ((*((void *)this + 7) >> 9) & 0x7FFFFFFFFFFFF8))
                + (*((void *)this + 7) & 0xFFFLL)) == 60)
  {
    YAML::ScanVerbatimTag(this, &__str);
    std::string::operator=((std::string *)__p, &__str);
    int v17 = 0;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    goto LABEL_31;
  }
  char v10 = 0;
  YAML::ScanTagHandle(this, (YAML::Stream *)&v10, &__str);
  std::string::operator=((std::string *)__p, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  int v4 = (void *)BYTE7(v15);
  if (!v10)
  {
    if (SBYTE7(v15) < 0) {
      int v4 = __p[1];
    }
    if (v4) {
      int v8 = 1;
    }
    else {
      int v8 = 4;
    }
    goto LABEL_30;
  }
  if (SBYTE7(v15) < 0) {
    int v4 = __p[1];
  }
  if (v4) {
    int v5 = 1;
  }
  else {
    int v5 = 2;
  }
  int v17 = v5;
  if (*((void *)this + 8)
    && *(unsigned char *)(*(void *)(*((void *)this + 4) + ((*((void *)this + 7) >> 9) & 0x7FFFFFFFFFFFF8))
                + (*((void *)this + 7) & 0xFFFLL)) == 33)
  {
    YAML::Stream::get(this);
    YAML::ScanTagSuffix(this, (uint64_t)&__str);
    unint64_t v6 = (_OWORD *)v16;
    if ((unint64_t)v16 >= *((void *)&v16 + 1))
    {
      uint64_t v9 = std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v15 + 1, (long long *)&__str);
    }
    else
    {
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v16, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
      }
      else
      {
        long long v7 = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
        *(void *)(v16 + 16) = *((void *)&__str.__r_.__value_.__l + 2);
        _OWORD *v6 = v7;
      }
      uint64_t v9 = (uint64_t)v6 + 24;
    }
    *(void *)&long long v16 = v9;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    int v8 = 3;
LABEL_30:
    int v17 = v8;
  }
LABEL_31:
  std::deque<YAML::Token>::push_back((void *)this + 12, &v12);
  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15 + 8;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__str);
  if (SBYTE7(v15) < 0) {
    operator delete(__p[0]);
  }
}

void sub_239A47FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  YAML::Token::~Token(&a16);
  _Unwind_Resume(a1);
}

void YAML::Scanner::ScanPlainScalar(YAML::Scanner *this)
{
  memset(&__str, 0, sizeof(__str));
  char v22 = 0;
  __int16 v21 = 0;
  char v27 = 0;
  if (*((void *)this + 39))
  {
    uint64_t v2 = &unk_26AD86858;
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD867F0, memory_order_acquire) & 1) == 0)
    {
      int v13 = &qword_26AD867F0;
      int v3 = (YAML::Exp *)__cxa_guard_acquire(&qword_26AD867F0);
      if (v3)
      {
        int v4 = (YAML::Exp *)YAML::Exp::EndScalarInFlow(v3);
        int v5 = (int *)YAML::Exp::BlankOrBreak(v4);
        YAML::Exp::Comment((YAML::Exp *)&v29);
        YAML::operator+(v5, (int *)&v29, (uint64_t)&v14);
        YAML::operator|((int *)v4, (int *)&v14, (uint64_t)&unk_26AD86858);
        p_std::string::size_type size = &v14.__r_.__value_.__l.__size_;
        std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_size);
        p_std::string::size_type size = (std::string::size_type *)v30;
        std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_size);
        uint64_t v2 = &unk_26AD86858;
LABEL_17:
        __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, v2, &dword_239A02000);
        __cxa_guard_release(v13);
      }
    }
  }
  else
  {
    uint64_t v2 = &unk_26AD86878;
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD867F8, memory_order_acquire) & 1) == 0)
    {
      int v13 = &qword_26AD867F8;
      char v10 = (YAML::Exp *)__cxa_guard_acquire(&qword_26AD867F8);
      if (v10)
      {
        int v11 = (YAML::Exp *)YAML::Exp::EndScalar(v10);
        long long v12 = (int *)YAML::Exp::BlankOrBreak(v11);
        YAML::Exp::Comment((YAML::Exp *)&v29);
        YAML::operator+(v12, (int *)&v29, (uint64_t)&v14);
        YAML::operator|((int *)v11, (int *)&v14, (uint64_t)&unk_26AD86878);
        p_std::string::size_type size = &v14.__r_.__value_.__l.__size_;
        std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_size);
        p_std::string::size_type size = (std::string::size_type *)v30;
        std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_size);
        uint64_t v2 = &unk_26AD86878;
        goto LABEL_17;
      }
    }
  }
  int v6 = 0;
  long long v18 = v2;
  char v19 = 0;
  if (!*((void *)this + 39))
  {
    uint64_t v7 = *((void *)this + 30);
    if (v7) {
      int v6 = **(_DWORD **)(*(void *)(*((void *)this + 26)
    }
                                   + (((unint64_t)(v7 + *((void *)this + 29) - 1) >> 6) & 0x3FFFFFFFFFFFFF8))
                       + 8 * ((v7 + *((void *)this + 29) - 1) & 0x1FF))
         + 1;
    else {
      int v6 = 1;
    }
  }
  int v20 = v6;
  int v23 = 2;
  HIBYTE(v21) = 1;
  char v24 = 1;
  uint64_t v25 = 0x1FFFFFFFFLL;
  int v26 = 2;
  YAML::Scanner::InsertPotentialSimpleKey(this);
  std::string::size_type v8 = *((void *)this + 1);
  int v9 = *((_DWORD *)this + 4);
  YAML::ScanScalar((std::string::size_type)this, (uint64_t)&v18, &v14);
  std::string __str = v14;
  *((unsigned char *)this + 146) = v27;
  *((unsigned char *)this + 147) = 0;
  v14.__r_.__value_.__r.__words[0] = 0x1300000000;
  v14.__r_.__value_.__l.__size_ = v8;
  LODWORD(v14.__r_.__value_.__r.__words[2]) = v9;
  *(_OWORD *)std::string __p = 0u;
  memset(v16, 0, sizeof(v16));
  int v17 = 0;
  std::string::operator=((std::string *)__p, &__str);
  std::deque<YAML::Token>::push_back((void *)this + 12, (long long *)&v14);
  int v29 = (void **)v16 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v29);
  if (SBYTE7(v16[0]) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_239A4830C(_Unwind_Exception *a1)
{
  *(void *)(v2 - 56) = v1 + 8;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)(v2 - 56));
  *(void *)(v2 - 56) = v2 - 80;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)(v2 - 56));
  __cxa_guard_abort(&qword_26AD867F8);
  _Unwind_Resume(a1);
}

void YAML::Scanner::ScanQuotedScalar(YAML::Scanner *this)
{
  memset(&__str, 0, sizeof(__str));
  if (*((void *)this + 8)) {
    int v2 = *(unsigned __int8 *)(*(void *)(*((void *)this + 4) + ((*((void *)this + 7) >> 9) & 0x7FFFFFFFFFFFF8))
  }
                            + (*((void *)this + 7) & 0xFFFLL));
  else {
    int v2 = 4;
  }
  long long v16 = 0;
  char v17 = 0;
  char v20 = 0;
  int v19 = 0;
  memset(v18, 0, 7);
  v21[0] = 0;
  *(void *)((char *)v21 + 5) = 0;
  if (v2 == 39)
  {
    LODWORD(v6.__r_.__value_.__l.__data_) = 1;
    WORD2(v6.__r_.__value_.__r.__words[0]) = 39;
    __p[0] = 0;
    *(_OWORD *)&v6.__r_.__value_.__r.__words[1] = 0uLL;
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD86800, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26AD86800))
    {
      std::string::basic_string[abi:ne180100]<0>(v23, "''");
      YAML::RegEx::RegEx((uint64_t)dword_26AD86898, (char *)v23, 6);
      if (v24 < 0) {
        operator delete(v23[0]);
      }
      __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, dword_26AD86898, &dword_239A02000);
      __cxa_guard_release(&qword_26AD86800);
    }
    YAML::operator!(dword_26AD86898, (uint64_t)&p_size);
    YAML::operator&((int *)&v6, (int *)&p_size, (uint64_t)&v12);
    v23[0] = (void **)&v11;
    std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](v23);
    p_std::string::size_type size = &v6.__r_.__value_.__l.__size_;
    std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_size);
    char v3 = 39;
  }
  else
  {
    int v12 = 1;
    char v13 = v2;
    char v14 = 0;
    char v3 = 92;
    memset(v15, 0, sizeof(v15));
  }
  long long v16 = &v12;
  char v17 = 1;
  BYTE2(v18[1]) = v3;
  v18[0] = 0;
  int v19 = 2;
  BYTE1(v18[1]) = 1;
  char v20 = 0;
  v21[0] = 0x200000000;
  YAML::Scanner::InsertPotentialSimpleKey(this);
  std::string::size_type v4 = *((void *)this + 1);
  int v5 = *((_DWORD *)this + 4);
  YAML::Stream::get(this);
  YAML::ScanScalar((std::string::size_type)this, (uint64_t)&v16, &v6);
  std::string __str = v6;
  *((_WORD *)this + 73) = 256;
  v6.__r_.__value_.__r.__words[0] = 0x1400000000;
  v6.__r_.__value_.__l.__size_ = v4;
  LODWORD(v6.__r_.__value_.__r.__words[2]) = v5;
  *(_OWORD *)std::string __p = 0u;
  memset(v8, 0, sizeof(v8));
  int v9 = 0;
  std::string::operator=((std::string *)__p, &__str);
  std::deque<YAML::Token>::push_back((void *)this + 12, (long long *)&v6);
  p_std::string::size_type size = (std::string::size_type *)v8 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_size);
  if (SBYTE7(v8[0]) < 0) {
    operator delete(__p[0]);
  }
  v6.__r_.__value_.__r.__words[0] = (std::string::size_type)v15;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&v6);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_239A48678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  if (*(char *)(v11 - 49) < 0) {
    operator delete(*(void **)(v11 - 72));
  }
  __cxa_guard_abort(&qword_26AD86800);
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void YAML::Scanner::ScanBlockScalar(YAML::Scanner *this)
{
  memset(&__str, 0, sizeof(__str));
  uint64_t v34 = 0;
  char v35 = 0;
  char v40 = 0;
  char v38 = 0;
  uint64_t v42 = 0;
  char v43 = 0;
  int v36 = 1;
  __int16 v37 = 1;
  std::string::size_type v2 = *((void *)this + 1);
  int v3 = *((_DWORD *)this + 4);
  BOOL v39 = YAML::Stream::get(this) == 62;
  int v41 = 0;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD86808, memory_order_acquire) & 1) == 0)
  {
    char v20 = (YAML::Exp *)__cxa_guard_acquire(&qword_26AD86808);
    if (v20)
    {
      YAML::Exp::ChompIndicator(v20);
      char v22 = YAML::Exp::Digit(v21);
      int v23 = (YAML::Exp *)YAML::operator+(dword_26AD868D8, v22, (uint64_t)&v47);
      char v24 = YAML::Exp::Digit(v23);
      YAML::Exp::ChompIndicator((YAML::Exp *)v24);
      YAML::operator+(v24, dword_26AD868D8, (uint64_t)&v45);
      uint64_t v25 = (YAML::Exp *)YAML::operator|(&v47, (int *)&v45, (uint64_t)&p_size);
      YAML::Exp::ChompIndicator(v25);
      int v26 = (YAML::Exp *)YAML::operator|((int *)&p_size, dword_26AD868D8, (uint64_t)&__p);
      char v27 = YAML::Exp::Digit(v26);
      YAML::operator|((int *)&__p, v27, (uint64_t)&unk_26AD868B8);
      v51[0] = (void **)&__p.__r_.__value_.__l.__size_;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](v51);
      v51[0] = (void **)&v50;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](v51);
      v51[0] = (void **)&v46;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](v51);
      uint64_t v45 = (void **)&v48;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v45);
      __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &unk_26AD868B8, &dword_239A02000);
      __cxa_guard_release(&qword_26AD86808);
    }
  }
  __p.__r_.__value_.__r.__words[0] = 0;
  __p.__r_.__value_.__l.__size_ = (std::string::size_type)this;
  int v4 = YAML::RegEx::Match<YAML::StreamCharSource>((uint64_t)&unk_26AD868B8, (unint64_t *)&__p);
  if (v4 >= 1)
  {
    while (1)
    {
      int v5 = YAML::Stream::get(this);
      int v6 = v5;
      if (v5 == 45)
      {
        int v41 = -1;
      }
      else if (v5 == 43)
      {
        int v41 = 1;
      }
      else
      {
        {
          YAML::Exp::Digit(void)::e = 2;
          word_268A0A7BC = 14640;
          qword_268A0A7C8 = 0;
          unk_268A0A7D0 = 0;
          qword_268A0A7C0 = 0;
          __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::Digit(void)::e, &dword_239A02000);
        }
        memset(&__p, 0, sizeof(__p));
        std::string::push_back(&__p, v6);
        int v7 = YAML::RegEx::Match((uint64_t)&YAML::Exp::Digit(void)::e, (char *)&__p);
        int v8 = v7;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(__p.__r_.__value_.__l.__data_);
          if ((v8 & 0x80000000) == 0)
          {
LABEL_12:
            if (v6 == 48)
            {
              exceptiostd::string::size_type n = __cxa_allocate_exception(0x38uLL);
              int v19 = *((_DWORD *)this + 4);
              p_std::string::size_type size = (std::string::size_type *)*((void *)this + 1);
              LODWORD(v5siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v19;
              std::string::basic_string[abi:ne180100]<0>(&__p, "cannot set zero indentation for a block scalar");
              YAML::Exception::Exception((uint64_t)exception, &p_size, (uint64_t)&__p);
              void *exception = &unk_26ED2A588;
            }
            int v36 = v6 - 48;
            LOBYTE(v37) = 0;
          }
        }
        else if ((v7 & 0x80000000) == 0)
        {
          goto LABEL_12;
        }
      }
      if (!--v4) {
        goto LABEL_21;
      }
    }
  }
  while (1)
  {
LABEL_21:
    {
      if (v9)
      {
        char v10 = YAML::Exp::Space(v9);
        uint64_t v11 = YAML::Exp::Tab((YAML::Exp *)v10);
        YAML::operator|(v10, v11, (uint64_t)&YAML::Exp::Blank(void)::e);
        __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::Blank(void)::e, &dword_239A02000);
      }
    }
    __p.__r_.__value_.__r.__words[0] = 0;
    __p.__r_.__value_.__l.__size_ = (std::string::size_type)this;
    if ((YAML::RegEx::Match<YAML::StreamCharSource>((uint64_t)&YAML::Exp::Blank(void)::e, (unint64_t *)&__p) & 0x80000000) != 0) {
      break;
    }
    YAML::Stream::get(this);
  }
  {
    YAML::Exp::Comment(void)::e = 1;
    word_268A0A884 = 35;
    qword_268A0A890 = 0;
    unk_268A0A898 = 0;
    qword_268A0A888 = 0;
    __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::Comment(void)::e, &dword_239A02000);
  }
  LODWORD(__p.__r_.__value_.__l.__data_) = YAML::Exp::Comment(void)::e;
  WORD2(__p.__r_.__value_.__r.__words[0]) = word_268A0A884;
  v31[0] = 0;
  *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = 0uLL;
  std::vector<YAML::RegEx>::__init_with_size[abi:ne180100]<YAML::RegEx*,YAML::RegEx*>(&__p.__r_.__value_.__l.__size_, (int *)qword_268A0A888, (int *)qword_268A0A890, (qword_268A0A890 - qword_268A0A888) >> 5);
  p_std::string::size_type size = 0;
  uint64_t v50 = this;
  int v12 = YAML::RegEx::Match<YAML::StreamCharSource>((uint64_t)&__p, (unint64_t *)&p_size);
  p_std::string::size_type size = &__p.__r_.__value_.__l.__size_;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_size);
  if ((v12 & 0x80000000) == 0)
  {
    for (BOOL i = YAML::Stream::operator BOOL(this); i; BOOL i = YAML::Stream::operator BOOL(this))
    {
      char v14 = YAML::Exp::Break((YAML::Exp *)i);
      __p.__r_.__value_.__r.__words[0] = 0;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)this;
      if ((YAML::RegEx::Match<YAML::StreamCharSource>((uint64_t)v14, (unint64_t *)&__p) & 0x80000000) == 0) {
        break;
      }
      YAML::Stream::get(this);
    }
  }
  BOOL v15 = YAML::Stream::operator BOOL(this);
  if (v15)
  {
    long long v16 = YAML::Exp::Break((YAML::Exp *)v15);
    __p.__r_.__value_.__r.__words[0] = 0;
    __p.__r_.__value_.__l.__size_ = (std::string::size_type)this;
    if ((YAML::RegEx::Match<YAML::StreamCharSource>((uint64_t)v16, (unint64_t *)&__p) & 0x80000000) != 0)
    {
      char v28 = __cxa_allocate_exception(0x38uLL);
      int v29 = *((_DWORD *)this + 4);
      p_std::string::size_type size = (std::string::size_type *)*((void *)this + 1);
      LODWORD(v5siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v29;
      std::string::basic_string[abi:ne180100]<0>(&__p, "unexpected character in block scalar");
      YAML::Exception::Exception((uint64_t)v28, &p_size, (uint64_t)&__p);
      void *v28 = &unk_26ED2A588;
    }
  }
  uint64_t v17 = *((void *)this + 30);
  if (!v17
    || (LODWORD(v17) = **(_DWORD **)(*(void *)(*((void *)this + 26)
                                               + (((unint64_t)(v17 + *((void *)this + 29) - 1) >> 6) & 0x3FFFFFFFFFFFFF8))
                                   + 8 * ((v17 + *((void *)this + 29) - 1) & 0x1FF)),
        (v17 & 0x80000000) == 0))
  {
    v36 += v17;
  }
  HIBYTE(v37) = 0;
  char v40 = 0;
  HIDWORD(v42) = 2;
  YAML::ScanScalar((std::string::size_type)this, (uint64_t)&v34, &__p);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  std::string __str = __p;
  *((_WORD *)this + 73) = 1;
  __p.__r_.__value_.__r.__words[0] = 0x1400000000;
  __p.__r_.__value_.__l.__size_ = v2;
  LODWORD(__p.__r_.__value_.__r.__words[2]) = v3;
  *(_OWORD *)uint64_t v31 = 0u;
  memset(v32, 0, sizeof(v32));
  int v33 = 0;
  std::string::operator=((std::string *)v31, &__str);
  std::deque<YAML::Token>::push_back((void *)this + 12, (long long *)&__p);
  p_std::string::size_type size = (std::string::size_type *)v32 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_size);
  if (SBYTE7(v32[0]) < 0) {
    operator delete(v31[0]);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_239A48DA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  *(void *)(v36 - 96) = &a36;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)(v36 - 96));
  a35 = v36 - 152;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&a35);
  __cxa_guard_abort(&qword_26AD86808);
  if (a33 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

int *YAML::Exp::Digit(YAML::Exp *this)
{
  {
    YAML::Exp::Digit(void)::e = 2;
    word_268A0A7BC = 14640;
    qword_268A0A7C8 = 0;
    unk_268A0A7D0 = 0;
    qword_268A0A7C0 = 0;
    __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::Digit(void)::e, &dword_239A02000);
  }
  return &YAML::Exp::Digit(void)::e;
}

int *YAML::Exp::Space(YAML::Exp *this)
{
  {
    YAML::Exp::Space(void)::e = 1;
    word_268A0A834 = 32;
    qword_268A0A840 = 0;
    unk_268A0A848 = 0;
    qword_268A0A838 = 0;
    __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::Space(void)::e, &dword_239A02000);
  }
  return &YAML::Exp::Space(void)::e;
}

int *YAML::Exp::Tab(YAML::Exp *this)
{
  {
    YAML::Exp::Tab(void)::e = 1;
    word_268A0A85C = 9;
    qword_268A0A868 = 0;
    unk_268A0A870 = 0;
    qword_268A0A860 = 0;
    __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::Tab(void)::e, &dword_239A02000);
  }
  return &YAML::Exp::Tab(void)::e;
}

void *std::vector<YAML::RegEx>::__init_with_size[abi:ne180100]<YAML::RegEx*,YAML::RegEx*>(void *result, int *a2, int *a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    std::vector<YAML::RegEx>::__vallocate[abi:ne180100](result, a4);
    __n128 result = (void *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<YAML::RegEx>,YAML::RegEx*,YAML::RegEx*,YAML::RegEx*>((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_239A490EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

char *std::vector<YAML::RegEx>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 59) {
    std::vector<YAML::RegEx>::__throw_length_error[abi:ne180100]();
  }
  __n128 result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::RegEx>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[32 * v4];
  return result;
}

void std::vector<YAML::RegEx>::__throw_length_error[abi:ne180100]()
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::RegEx>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(32 * a2);
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<YAML::RegEx>,YAML::RegEx*,YAML::RegEx*,YAML::RegEx*>(uint64_t a1, int *a2, int *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  _OWORD v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    int v6 = a2;
    do
    {
      int v7 = *v6;
      *(_WORD *)(v4 + 4) = *((_WORD *)v6 + 2);
      *(_DWORD *)uint64_t v4 = v7;
      *(void *)(v4 + 16) = 0;
      *(void *)(v4 + 24) = 0;
      *(void *)(v4 + 8) = 0;
      std::vector<YAML::RegEx>::__init_with_size[abi:ne180100]<YAML::RegEx*,YAML::RegEx*>(v4 + 8);
      uint64_t v4 = v12 + 32;
      v12 += 32;
      v6 += 8;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<YAML::RegEx>,YAML::RegEx*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v4;
}

void sub_239A49250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<YAML::RegEx>,YAML::RegEx*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<YAML::RegEx>,YAML::RegEx*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<YAML::RegEx>,YAML::RegEx*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  if (v1 != v2)
  {
    do
    {
      uint64_t v3 = v1 - 32;
      uint64_t v4 = (void **)(v1 - 24);
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v4);
      uint64_t v1 = v3;
    }
    while (v3 != v2);
  }
}

void std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    int v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        int v6 = v4 - 32;
        int v7 = v4 - 24;
        std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v7);
        uint64_t v4 = v6;
      }
      while (v6 != v2);
      int v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *YAML::Exp::EndScalarInFlow(YAML::Exp *this)
{
  {
    if (v2)
    {
      int v19 = 1;
      __int16 v20 = 58;
      memset(v21, 0, sizeof(v21));
      uint64_t v3 = (int *)YAML::Exp::BlankOrBreak(v2);
      int v12 = 0;
      __int16 v13 = 0;
      memset(v14, 0, sizeof(v14));
      YAML::operator|(v3, &v12, (uint64_t)&v15);
      std::string::basic_string[abi:ne180100]<0>(v8, ",]}");
      YAML::RegEx::RegEx((uint64_t)&v10, (char *)v8, 3);
      YAML::operator|(&v15, (int *)&v10, (uint64_t)&v17);
      YAML::operator+(&v19, (int *)&v17, (uint64_t)&v22);
      std::string::basic_string[abi:ne180100]<0>(__p, ",?[]{}");
      YAML::RegEx::RegEx((uint64_t)&v6, (char *)__p, 3);
      YAML::operator|(&v22, (int *)&v6, (uint64_t)&YAML::Exp::EndScalarInFlow(void)::e);
      char v24 = (void **)&v7;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v24);
      if (v5 < 0) {
        operator delete(__p[0]);
      }
      int v6 = (void **)&v23;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v6);
      int v6 = (void **)&v18;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v6);
      int v6 = (void **)&v11;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v6);
      if (v9 < 0) {
        operator delete(v8[0]);
      }
      char v10 = (void **)&v16;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v10);
      char v10 = (void **)v14;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v10);
      uint64_t v17 = (void **)v21;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v17);
      __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::EndScalarInFlow(void)::e, &dword_239A02000);
    }
  }
  return &YAML::Exp::EndScalarInFlow(void)::e;
}

void sub_239A49558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35)
{
  *(void *)(v37 - 56) = v36 + 8;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)(v37 - 56));
  if (a15 < 0) {
    operator delete(__p);
  }
  a16 = (uint64_t *)(v37 - 80);
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&a16);
  a16 = (uint64_t *)(v37 - 144);
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&a16);
  a16 = &a27;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&a16);
  if (a25 < 0) {
    operator delete(a20);
  }
  a26 = &a35;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&a26);
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)&a26);
  *(void *)(v37 - 152) = v35;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)(v37 - 152));
  _Unwind_Resume(a1);
}

void sub_239A49638()
{
}

void sub_239A49640()
{
}

void *YAML::Exp::EndScalar(YAML::Exp *this)
{
  {
    if (v2)
    {
      int v9 = 1;
      __int16 v10 = 58;
      memset(v11, 0, sizeof(v11));
      uint64_t v3 = (int *)YAML::Exp::BlankOrBreak(v2);
      int v4 = 0;
      __int16 v5 = 0;
      memset(v6, 0, sizeof(v6));
      YAML::operator|(v3, &v4, (uint64_t)&v7);
      YAML::operator+(&v9, (int *)&v7, (uint64_t)&YAML::Exp::EndScalar(void)::e);
      int v12 = (void **)&v8;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v12);
      int v12 = (void **)v6;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v12);
      uint64_t v7 = (void **)v11;
      std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100](&v7);
      __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &YAML::Exp::EndScalar(void)::e, &dword_239A02000);
    }
  }
  return &YAML::Exp::EndScalar(void)::e;
}

void sub_239A49758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  *(void *)(v8 - 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v7 + 8;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)(v8 - 40));
  *(void *)(v8 - 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v6;
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)(v8 - 40));
  std::vector<YAML::RegEx>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void YAML::Exp::ChompIndicator(YAML::Exp *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AD86810, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AD86810))
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "+-");
    YAML::RegEx::RegEx((uint64_t)&unk_26AD868D8, (char *)__p, 3);
    if (v2 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit((void (*)(void *))YAML::RegEx::~RegEx, &unk_26AD868D8, &dword_239A02000);
    __cxa_guard_release(&qword_26AD86810);
  }
}

void sub_239A49850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  __cxa_guard_abort(&qword_26AD86810);
  _Unwind_Resume(a1);
}

uint64_t YAML::RegEx::Match<YAML::StreamCharSource>(uint64_t a1, unint64_t *a2)
{
  unint64_t v5 = *a2;
  int v4 = (YAML::Stream *)a2[1];
  if (*((void *)v4 + 8) > v5 || YAML::Stream::_ReadAheadTo(v4, v5))
  {
    switch(*(_DWORD *)a1)
    {
      case 0:
        if (*(unsigned char *)(*(void *)(*(void *)(a2[1] + 32)
                                  + (((*(void *)(a2[1] + 56) + *a2) >> 9) & 0x7FFFFFFFFFFFF8))
                      + ((*(void *)(a2[1] + 56) + *a2) & 0xFFF)) == 4)
          return 0;
        else {
          return 0xFFFFFFFFLL;
        }
      case 1:
        if (*(unsigned __int8 *)(*(void *)(*(void *)(a2[1] + 32)
                                            + (((*(void *)(a2[1] + 56) + *a2) >> 9) & 0x7FFFFFFFFFFFF8))
                                + ((*(void *)(a2[1] + 56) + *a2) & 0xFFF)) == *(unsigned __int8 *)(a1 + 4))
          return 1;
        else {
          return 0xFFFFFFFFLL;
        }
      case 2:
        int v8 = *(char *)(*(void *)(*(void *)(a2[1] + 32)
                                 + (((*(void *)(a2[1] + 56) + *a2) >> 9) & 0x7FFFFFFFFFFFF8))
                     + ((*(void *)(a2[1] + 56) + *a2) & 0xFFF));
        uint64_t v7 = 0xFFFFFFFFLL;
        if (*(char *)(a1 + 4) <= v8)
        {
          if (*(char *)(a1 + 5) < v8) {
            return 0xFFFFFFFFLL;
          }
          else {
            return 1;
          }
        }
        return v7;
      case 3:
        uint64_t v9 = *(void *)(a1 + 8);
        if (*(void *)(a1 + 16) == v9) {
          return 0xFFFFFFFFLL;
        }
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          uint64_t v12 = YAML::RegEx::MatchUnchecked<YAML::StreamCharSource>(v9 + v10, a2);
          if ((v12 & 0x80000000) == 0) {
            break;
          }
          ++v11;
          uint64_t v9 = *(void *)(a1 + 8);
          v10 += 32;
          uint64_t v7 = 0xFFFFFFFFLL;
          if (v11 >= (*(void *)(a1 + 16) - v9) >> 5) {
            return v7;
          }
        }
        return v12;
      case 4:
        uint64_t v13 = *(void *)(a1 + 8);
        if (*(void *)(a1 + 16) == v13) {
          return 0xFFFFFFFFLL;
        }
        uint64_t v14 = 0;
        unint64_t v15 = 0;
        LODWORD(v7) = -1;
        break;
      case 5:
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v7 = 0xFFFFFFFFLL;
        if (v17 != *(void *)(a1 + 16))
        {
          if ((int)YAML::RegEx::MatchUnchecked<YAML::StreamCharSource>(v17, a2) >= 0) {
            return 0xFFFFFFFFLL;
          }
          else {
            return 1;
          }
        }
        return v7;
      case 6:
        uint64_t v18 = *(void *)(a1 + 8);
        if (*(void *)(a1 + 16) == v18) {
          return 0;
        }
        uint64_t v19 = 0;
        LODWORD(v7) = 0;
        unint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = v18 + v19;
          unint64_t v22 = a2[1];
          unint64_t v23 = *a2 + (int)v7;
          if ((int)(v7 + *a2) < 0 != __OFADD__(v7, *a2)) {
            unint64_t v23 = 0;
          }
          v26[0] = v23;
          v26[1] = v22;
          int v24 = YAML::RegEx::Match<YAML::StreamCharSource>(v21, v26);
          if (v24 == -1) {
            break;
          }
          uint64_t v7 = (v24 + v7);
          ++v20;
          uint64_t v18 = *(void *)(a1 + 8);
          v19 += 32;
          if (v20 >= (*(void *)(a1 + 16) - v18) >> 5) {
            return v7;
          }
        }
        return 0xFFFFFFFFLL;
      default:
        return 0xFFFFFFFFLL;
    }
    while (1)
    {
      unsigned int v16 = YAML::RegEx::MatchUnchecked<YAML::StreamCharSource>(v13 + v14, a2);
      if (v16 == -1) {
        break;
      }
      if (v15) {
        uint64_t v7 = v7;
      }
      else {
        uint64_t v7 = v16;
      }
      ++v15;
      uint64_t v13 = *(void *)(a1 + 8);
      v14 += 32;
      if (v15 >= (*(void *)(a1 + 16) - v13) >> 5) {
        return v7;
      }
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t YAML::RegEx::MatchUnchecked<YAML::StreamCharSource>(uint64_t a1, void *a2)
{
  switch(*(_DWORD *)a1)
  {
    case 0:
      if (*(unsigned char *)(*(void *)(*(void *)(a2[1] + 32)
                                + (((*(void *)(a2[1] + 56) + *a2) >> 9) & 0x7FFFFFFFFFFFF8))
                    + ((*(void *)(a2[1] + 56) + *a2) & 0xFFFLL)) == 4)
        uint64_t v4 = 0;
      else {
        uint64_t v4 = 0xFFFFFFFFLL;
      }
      break;
    case 1:
      if (*(unsigned __int8 *)(*(void *)(*(void *)(a2[1] + 32)
                                          + (((*(void *)(a2[1] + 56) + *a2) >> 9) & 0x7FFFFFFFFFFFF8))
                              + ((*(void *)(a2[1] + 56) + *a2) & 0xFFFLL)) == *(unsigned __int8 *)(a1 + 4))
        uint64_t v4 = 1;
      else {
        uint64_t v4 = 0xFFFFFFFFLL;
      }
      break;
    case 2:
      int v5 = *(char *)(*(void *)(*(void *)(a2[1] + 32)
                               + (((*(void *)(a2[1] + 56) + *a2) >> 9) & 0x7FFFFFFFFFFFF8))
                   + ((*(void *)(a2[1] + 56) + *a2) & 0xFFFLL));
      uint64_t v4 = 0xFFFFFFFFLL;
      if (*(char *)(a1 + 4) <= v5)
      {
        if (*(char *)(a1 + 5) < v5) {
          uint64_t v4 = 0xFFFFFFFFLL;
        }
        else {
          uint64_t v4 = 1;
        }
      }
      break;
    case 3:
      uint64_t v6 = *(void *)(a1 + 8);
      if (*(void *)(a1 + 16) == v6) {
        goto LABEL_37;
      }
      uint64_t v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = YAML::RegEx::MatchUnchecked<YAML::StreamCharSource>(v6 + v7, a2);
        if ((v9 & 0x80000000) == 0) {
          break;
        }
        ++v8;
        uint64_t v6 = *(void *)(a1 + 8);
        v7 += 32;
        if (v8 >= (*(void *)(a1 + 16) - v6) >> 5) {
          goto LABEL_37;
        }
      }
      uint64_t v4 = v9;
      break;
    case 4:
      uint64_t v10 = *(void *)(a1 + 8);
      if (*(void *)(a1 + 16) == v10) {
        goto LABEL_37;
      }
      uint64_t v11 = 0;
      unint64_t v12 = 0;
      LODWORD(v4) = -1;
      do
      {
        unsigned int v13 = YAML::RegEx::MatchUnchecked<YAML::StreamCharSource>(v10 + v11, a2);
        if (v13 == -1) {
          goto LABEL_37;
        }
        if (v12) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v13;
        }
        ++v12;
        uint64_t v10 = *(void *)(a1 + 8);
        v11 += 32;
      }
      while (v12 < (*(void *)(a1 + 16) - v10) >> 5);
      break;
    case 5:
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v4 = 0xFFFFFFFFLL;
      if (v14 != *(void *)(a1 + 16))
      {
        if ((int)YAML::RegEx::MatchUnchecked<YAML::StreamCharSource>(v14, a2) >= 0) {
          uint64_t v4 = 0xFFFFFFFFLL;
        }
        else {
          uint64_t v4 = 1;
        }
      }
      break;
    case 6:
      uint64_t v15 = *(void *)(a1 + 8);
      if (*(void *)(a1 + 16) == v15)
      {
        uint64_t v4 = 0;
      }
      else
      {
        uint64_t v16 = 0;
        LODWORD(v4) = 0;
        unint64_t v17 = 0;
        do
        {
          uint64_t v18 = v15 + v16;
          uint64_t v19 = a2[1];
          uint64_t v20 = *a2 + (int)v4;
          if ((int)(v4 + *a2) < 0 != __OFADD__(v4, *a2)) {
            uint64_t v20 = 0;
          }
          v23[0] = v20;
          v23[1] = v19;
          int v21 = YAML::RegEx::Match<YAML::StreamCharSource>(v18, v23);
          if (v21 == -1) {
            goto LABEL_37;
          }
          uint64_t v4 = (v21 + v4);
          ++v17;
          uint64_t v15 = *(void *)(a1 + 8);
          v16 += 32;
        }
        while (v17 < (*(void *)(a1 + 16) - v15) >> 5);
      }
      break;
    default:
LABEL_37:
      uint64_t v4 = 0xFFFFFFFFLL;
      break;
  }
  return v4;
}

uint64_t YAML::RegEx::Match(uint64_t a1, char *a2)
{
  uint64_t v2 = a2[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = *(char **)a2;
  }
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *((void *)a2 + 1);
  }
  *(void *)&long long v18 = v3;
  *((void *)&v18 + 1) = v2;
  uint64_t v19 = 0;
  if ((*(_DWORD *)a1 - 3) < 0xFFFFFFFE || v2 != 0)
  {
    switch(*(_DWORD *)a1)
    {
      case 0:
        if (v2) {
          return 0xFFFFFFFFLL;
        }
        else {
          return 0;
        }
      case 1:
        if (*v3 == *(unsigned char *)(a1 + 4)) {
          return 1;
        }
        else {
          return 0xFFFFFFFFLL;
        }
      case 2:
        int v11 = *v3;
        uint64_t v6 = 0xFFFFFFFFLL;
        if (*(char *)(a1 + 4) <= v11)
        {
          if (*(char *)(a1 + 5) < v11) {
            return 0xFFFFFFFFLL;
          }
          else {
            return 1;
          }
        }
        return v6;
      case 3:
        uint64_t v12 = *(void *)(a1 + 8);
        if (*(void *)(a1 + 16) == v12) {
          return 0xFFFFFFFFLL;
        }
        uint64_t v13 = 0;
        unint64_t v14 = 0;
        while (1)
        {
          uint64_t v15 = YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(v12 + v13, &v18);
          if ((v15 & 0x80000000) == 0) {
            break;
          }
          ++v14;
          uint64_t v12 = *(void *)(a1 + 8);
          v13 += 32;
          uint64_t v6 = 0xFFFFFFFFLL;
          if (v14 >= (*(void *)(a1 + 16) - v12) >> 5) {
            return v6;
          }
        }
        return v15;
      case 4:
        uint64_t v7 = *(void *)(a1 + 8);
        if (*(void *)(a1 + 16) == v7) {
          return 0xFFFFFFFFLL;
        }
        uint64_t v8 = 0;
        unint64_t v9 = 0;
        LODWORD(v6) = -1;
        break;
      case 5:
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v6 = 0xFFFFFFFFLL;
        if (v17 != *(void *)(a1 + 16))
        {
          if ((int)YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(v17, &v18) >= 0) {
            return 0xFFFFFFFFLL;
          }
          else {
            return 1;
          }
        }
        return v6;
      case 6:
        return YAML::RegEx::MatchOpSeq<YAML::StringCharSource>(a1, &v18);
      default:
        return 0xFFFFFFFFLL;
    }
    while (1)
    {
      unsigned int v10 = YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(v7 + v8, &v18);
      if (v10 == -1) {
        break;
      }
      if (v9) {
        uint64_t v6 = v6;
      }
      else {
        uint64_t v6 = v10;
      }
      ++v9;
      uint64_t v7 = *(void *)(a1 + 8);
      v8 += 32;
      if (v9 >= (*(void *)(a1 + 16) - v7) >> 5) {
        return v6;
      }
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(uint64_t a1, void *a2)
{
  switch(*(_DWORD *)a1)
  {
    case 0:
      if (a2[2] >= a2[1]) {
        return 0;
      }
      else {
        return 0xFFFFFFFFLL;
      }
    case 1:
      if (*(unsigned __int8 *)(*a2 + a2[2]) == *(unsigned __int8 *)(a1 + 4)) {
        return 1;
      }
      else {
        return 0xFFFFFFFFLL;
      }
    case 2:
      int v5 = *(char *)(*a2 + a2[2]);
      uint64_t v4 = 0xFFFFFFFFLL;
      if (*(char *)(a1 + 4) <= v5)
      {
        if (*(char *)(a1 + 5) < v5) {
          return 0xFFFFFFFFLL;
        }
        else {
          return 1;
        }
      }
      return v4;
    case 3:
      uint64_t v6 = *(void *)(a1 + 8);
      if (*(void *)(a1 + 16) == v6) {
        return 0xFFFFFFFFLL;
      }
      uint64_t v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(v6 + v7, a2);
        if ((v9 & 0x80000000) == 0) {
          break;
        }
        ++v8;
        uint64_t v6 = *(void *)(a1 + 8);
        v7 += 32;
        if (v8 >= (*(void *)(a1 + 16) - v6) >> 5) {
          return 0xFFFFFFFFLL;
        }
      }
      return v9;
    case 4:
      uint64_t v10 = *(void *)(a1 + 8);
      if (*(void *)(a1 + 16) == v10) {
        return 0xFFFFFFFFLL;
      }
      uint64_t v11 = 0;
      unint64_t v12 = 0;
      LODWORD(v4) = -1;
      while (1)
      {
        unsigned int v13 = YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(v10 + v11, a2);
        if (v13 == -1) {
          break;
        }
        if (v12) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v13;
        }
        ++v12;
        uint64_t v10 = *(void *)(a1 + 8);
        v11 += 32;
        if (v12 >= (*(void *)(a1 + 16) - v10) >> 5) {
          return v4;
        }
      }
      return 0xFFFFFFFFLL;
    case 5:
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v4 = 0xFFFFFFFFLL;
      if (v14 != *(void *)(a1 + 16))
      {
        if ((int)YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(v14, a2) >= 0) {
          return 0xFFFFFFFFLL;
        }
        else {
          return 1;
        }
      }
      return v4;
    case 6:
      uint64_t v15 = *(void *)(a1 + 8);
      if (*(void *)(a1 + 16) != v15)
      {
        unint64_t v16 = 0;
        LODWORD(v4) = 0;
        while (1)
        {
          uint64_t v17 = (_DWORD *)(v15 + 32 * v16);
          unint64_t v40 = a2[2];
          long long v39 = *(_OWORD *)a2;
          unint64_t v18 = v40 + (int)v4;
          if ((int)v4 + (int)v40 < 0 != __OFADD__(v4, v40)) {
            unint64_t v18 = 0;
          }
          unint64_t v40 = v18;
          switch(*v17)
          {
            case 0:
              if (v18 >= *((void *)&v39 + 1)) {
                int v19 = 0;
              }
              else {
                int v19 = -1;
              }
              goto LABEL_59;
            case 1:
              if (*(unsigned __int8 *)(v39 + v18) != *(unsigned __int8 *)(v15 + 32 * v16 + 4)) {
                return 0xFFFFFFFFLL;
              }
              goto LABEL_57;
            case 2:
              uint64_t v20 = v15 + 32 * v16;
              int v21 = *(char *)(v39 + v18);
              if (*(char *)(v20 + 4) > v21 || *(char *)(v20 + 5) < v21) {
                return 0xFFFFFFFFLL;
              }
              goto LABEL_57;
            case 3:
              uint64_t v22 = v15 + 32 * v16;
              uint64_t v25 = *(void *)(v22 + 8);
              int v24 = (uint64_t *)(v22 + 8);
              uint64_t v23 = v25;
              if (v24[1] == v25) {
                return 0xFFFFFFFFLL;
              }
              uint64_t v26 = 0;
              unint64_t v27 = 0;
              while (1)
              {
                int v28 = YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(v23 + v26, &v39);
                if ((v28 & 0x80000000) == 0) {
                  break;
                }
                ++v27;
                uint64_t v23 = *v24;
                v26 += 32;
                if (v27 >= (v24[1] - *v24) >> 5) {
                  return 0xFFFFFFFFLL;
                }
              }
              int v19 = v28;
              goto LABEL_60;
            case 4:
              uint64_t v29 = v15 + 32 * v16;
              uint64_t v32 = *(void *)(v29 + 8);
              uint64_t v31 = (uint64_t *)(v29 + 8);
              uint64_t v30 = v32;
              if (v31[1] == v32) {
                return 0xFFFFFFFFLL;
              }
              uint64_t v33 = 0;
              unint64_t v34 = 0;
              int v19 = -1;
              break;
            case 5:
              uint64_t v36 = v15 + 32 * v16;
              uint64_t v37 = *(void *)(v36 + 8);
              if (v37 == *(void *)(v36 + 16)
                || (YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(v37, &v39) & 0x80000000) == 0)
              {
                return 0xFFFFFFFFLL;
              }
LABEL_57:
              int v19 = 1;
              goto LABEL_60;
            case 6:
              int v19 = YAML::RegEx::MatchOpSeq<YAML::StringCharSource>((uint64_t)v17, &v39);
              goto LABEL_59;
            default:
              return 0xFFFFFFFFLL;
          }
          do
          {
            int v35 = YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(v30 + v33, &v39);
            if (v35 == -1) {
              return 0xFFFFFFFFLL;
            }
            if (!v34) {
              int v19 = v35;
            }
            ++v34;
            uint64_t v30 = *v31;
            v33 += 32;
          }
          while (v34 < (v31[1] - *v31) >> 5);
LABEL_59:
          if (v19 == -1) {
            return 0xFFFFFFFFLL;
          }
LABEL_60:
          uint64_t v4 = (v19 + v4);
          ++v16;
          uint64_t v15 = *(void *)(a1 + 8);
          if (v16 >= (*(void *)(a1 + 16) - v15) >> 5) {
            return v4;
          }
        }
      }
      return 0;
    default:
      return 0xFFFFFFFFLL;
  }
}

uint64_t YAML::RegEx::MatchOpSeq<YAML::StringCharSource>(uint64_t a1, long long *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 == v2) {
    return 0;
  }
  unint64_t v6 = 0;
  LODWORD(v7) = 0;
  do
  {
    unint64_t v30 = *((void *)a2 + 2);
    long long v29 = *a2;
    unint64_t v8 = v30 + (int)v7;
    if ((int)v7 + (int)v30 < 0 != __OFADD__(v7, v30)) {
      unint64_t v8 = 0;
    }
    unint64_t v30 = v8;
    switch(*(_DWORD *)(v2 + 32 * v6))
    {
      case 0:
        if (v8 >= *((void *)&v29 + 1)) {
          int v9 = 0;
        }
        else {
          int v9 = -1;
        }
        goto LABEL_31;
      case 1:
        if (*(unsigned __int8 *)(v29 + v8) != *(unsigned __int8 *)(v2 + 32 * v6 + 4)) {
          return 0xFFFFFFFFLL;
        }
        goto LABEL_14;
      case 2:
        uint64_t v10 = v2 + 32 * v6;
        int v11 = *(char *)(v29 + v8);
        if (*(char *)(v10 + 4) > v11 || *(char *)(v10 + 5) < v11) {
          return 0xFFFFFFFFLL;
        }
LABEL_14:
        int v9 = 1;
        goto LABEL_33;
      case 3:
        uint64_t v12 = v2 + 32 * v6;
        uint64_t v15 = *(void *)(v12 + 8);
        uint64_t v14 = (uint64_t *)(v12 + 8);
        uint64_t v13 = v15;
        if (v14[1] == v15) {
          return 0xFFFFFFFFLL;
        }
        uint64_t v16 = 0;
        unint64_t v17 = 0;
        while (1)
        {
          int v18 = YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(v13 + v16, &v29);
          if ((v18 & 0x80000000) == 0) {
            break;
          }
          ++v17;
          uint64_t v13 = *v14;
          v16 += 32;
          if (v17 >= (v14[1] - *v14) >> 5) {
            return 0xFFFFFFFFLL;
          }
        }
        int v9 = v18;
        goto LABEL_32;
      case 4:
        uint64_t v19 = v2 + 32 * v6;
        uint64_t v22 = *(void *)(v19 + 8);
        int v21 = (uint64_t *)(v19 + 8);
        uint64_t v20 = v22;
        if (v21[1] == v22) {
          return 0xFFFFFFFFLL;
        }
        uint64_t v23 = 0;
        unint64_t v24 = 0;
        int v9 = -1;
        break;
      case 5:
        uint64_t v26 = v2 + 32 * v6;
        uint64_t v27 = *(void *)(v26 + 8);
        if (v27 == *(void *)(v26 + 16)
          || (YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(v27, &v29) & 0x80000000) == 0)
        {
          return 0xFFFFFFFFLL;
        }
        int v9 = 1;
        goto LABEL_32;
      case 6:
        int v9 = YAML::RegEx::MatchOpSeq<YAML::StringCharSource>();
        goto LABEL_31;
      default:
        return 0xFFFFFFFFLL;
    }
    do
    {
      int v25 = YAML::RegEx::MatchUnchecked<YAML::StringCharSource>(v20 + v23, &v29);
      if (v25 == -1) {
        return 0xFFFFFFFFLL;
      }
      if (!v24) {
        int v9 = v25;
      }
      ++v24;
      uint64_t v20 = *v21;
      v23 += 32;
    }
    while (v24 < (v21[1] - *v21) >> 5);
LABEL_31:
    if (v9 == -1) {
      return 0xFFFFFFFFLL;
    }
LABEL_32:
    uint64_t v2 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(a1 + 16);
LABEL_33:
    uint64_t v7 = (v9 + v7);
    ++v6;
  }
  while (v6 < (v3 - v2) >> 5);
  return v7;
}

std::string *std::deque<YAML::Token>::push_back(void *a1, long long *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = 51 * ((v5 - v4) >> 3) - 1;
  if (v5 == v4) {
    uint64_t v6 = 0;
  }
  if (v6 == a1[5] + a1[4])
  {
    std::deque<YAML::Token>::__add_back_capacity(a1);
    uint64_t v4 = a1[1];
    uint64_t v5 = a1[2];
  }
  if (v5 == v4)
  {
    unint64_t v8 = 0;
  }
  else
  {
    unint64_t v7 = a1[5] + a1[4];
    unint64_t v8 = *(void *)(v4 + 8 * (v7 / 0x33)) + 80 * (v7 % 0x33);
  }
  long long v9 = *a2;
  *(_DWORD *)(v8 + 16) = *((_DWORD *)a2 + 4);
  *(_OWORD *)unint64_t v8 = v9;
  if (*((char *)a2 + 47) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v8 + 24), *((const std::string::value_type **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v10 = *(long long *)((char *)a2 + 24);
    *(void *)(v8 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((void *)a2 + 5);
    *(_OWORD *)(v8 + 24) = v10;
  }
  *(void *)(v8 + 48) = 0;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = 0;
  __n128 result = std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>((std::string *)(v8 + 48), *((long long **)a2 + 6), *((long long **)a2 + 7), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 7) - *((void *)a2 + 6)) >> 3));
  *(_DWORD *)(v8 + 72) = *((_DWORD *)a2 + 18);
  ++a1[5];
  return result;
}

void sub_239A4A634(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 47) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void std::deque<YAML::Scanner::FLOW_MARKER>::push_back(void *a1, _DWORD *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = ((v4 - v5) << 7) - 1;
  }
  uint64_t v7 = a1[5];
  unint64_t v8 = v7 + a1[4];
  if (v6 == v8)
  {
    std::deque<YAML::Scanner::FLOW_MARKER>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    uint64_t v7 = a1[5];
    unint64_t v8 = a1[4] + v7;
  }
  *(_DWORD *)(*(void *)(v5 + ((v8 >> 7) & 0x1FFFFFFFFFFFFF8)) + 4 * (v8 & 0x3FF)) = *a2;
  a1[5] = v7 + 1;
}

void std::deque<YAML::Scanner::FLOW_MARKER>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x400;
  unint64_t v4 = v2 - 1024;
  if (v3)
  {
    a1[4] = v4;
    uint64_t v5 = (void *)a1[1];
    uint64_t v6 = (char *)a1[2];
    uint64_t v9 = *v5;
    uint64_t v7 = (char *)(v5 + 1);
    uint64_t v8 = v9;
    a1[1] = v7;
    if (v6 != (char *)a1[3]) {
      goto LABEL_41;
    }
    uint64_t v10 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v38 = 1;
      }
      else {
        unint64_t v38 = (uint64_t)&v6[-*a1] >> 2;
      }
      long long v39 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(v38);
      unint64_t v40 = &v39[8 * (v38 >> 2)];
      uint64_t v42 = &v39[8 * v41];
      char v43 = (uint64_t *)a1[1];
      uint64_t v6 = v40;
      uint64_t v44 = a1[2] - (void)v43;
      if (v44)
      {
        uint64_t v6 = &v40[v44 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v45 = 8 * (v44 >> 3);
        uint64_t v46 = &v39[8 * (v38 >> 2)];
        do
        {
          uint64_t v47 = *v43++;
          *(void *)uint64_t v46 = v47;
          v46 += 8;
          v45 -= 8;
        }
        while (v45);
      }
      goto LABEL_29;
    }
LABEL_5:
    uint64_t v11 = v10 >> 3;
    BOOL v12 = v10 >> 3 < -1;
    uint64_t v13 = (v10 >> 3) + 2;
    if (v12) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = v11 + 1;
    }
    uint64_t v15 = -(v14 >> 1);
    uint64_t v16 = v14 >> 1;
    unint64_t v17 = &v7[-8 * v16];
    int64_t v18 = v6 - v7;
    if (v6 != v7)
    {
      memmove(&v7[-8 * v16], v7, v6 - v7);
      uint64_t v7 = (char *)a1[1];
    }
    uint64_t v6 = &v17[v18];
    a1[1] = &v7[8 * v15];
    a1[2] = &v17[v18];
    goto LABEL_41;
  }
  uint64_t v20 = (char *)a1[2];
  uint64_t v19 = (char *)a1[3];
  int v21 = (char *)*a1;
  uint64_t v22 = (char *)a1[1];
  unint64_t v23 = (v20 - v22) >> 3;
  uint64_t v24 = (uint64_t)&v19[-*a1];
  if (v23 < v24 >> 3)
  {
    int v25 = operator new(0x1000uLL);
    uint64_t v26 = v25;
    if (v19 != v20)
    {
      *(void *)uint64_t v20 = v25;
LABEL_42:
      a1[2] += 8;
      return;
    }
    if (v22 == v21)
    {
      if (v20 == v22) {
        unint64_t v49 = 1;
      }
      else {
        unint64_t v49 = (v19 - v22) >> 2;
      }
      uint64_t v50 = 2 * v49;
      size_t v51 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(v49);
      uint64_t v22 = &v51[(v50 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v53 = (uint64_t *)a1[1];
      long long v54 = v22;
      uint64_t v55 = a1[2] - (void)v53;
      if (v55)
      {
        long long v54 = &v22[v55 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v56 = 8 * (v55 >> 3);
        std::string::size_type v57 = &v51[(v50 + 6) & 0xFFFFFFFFFFFFFFF8];
        do
        {
          uint64_t v58 = *v53++;
          *(void *)std::string::size_type v57 = v58;
          v57 += 8;
          v56 -= 8;
        }
        while (v56);
      }
      std::string::size_type v59 = (char *)*a1;
      *a1 = v51;
      a1[1] = v22;
      a1[2] = v54;
      a1[3] = &v51[8 * v52];
      if (v59)
      {
        operator delete(v59);
        uint64_t v22 = (char *)a1[1];
      }
    }
    *((void *)v22 - 1) = v26;
    uint64_t v7 = (char *)a1[1];
    uint64_t v6 = (char *)a1[2];
    a1[1] = v7 - 8;
    uint64_t v8 = *((void *)v7 - 1);
    a1[1] = v7;
    if (v6 != (char *)a1[3])
    {
LABEL_41:
      *(void *)uint64_t v6 = v8;
      goto LABEL_42;
    }
    uint64_t v10 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v82 = 1;
      }
      else {
        unint64_t v82 = (uint64_t)&v6[-*a1] >> 2;
      }
      long long v39 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(v82);
      unint64_t v40 = &v39[8 * (v82 >> 2)];
      uint64_t v42 = &v39[8 * v83];
      char v84 = (uint64_t *)a1[1];
      uint64_t v6 = v40;
      uint64_t v85 = a1[2] - (void)v84;
      if (v85)
      {
        uint64_t v6 = &v40[v85 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v86 = 8 * (v85 >> 3);
        BOOL v87 = &v39[8 * (v82 >> 2)];
        do
        {
          uint64_t v88 = *v84++;
          *(void *)BOOL v87 = v88;
          v87 += 8;
          v86 -= 8;
        }
        while (v86);
      }
LABEL_29:
      uint64_t v48 = (char *)*a1;
      *a1 = v39;
      a1[1] = v40;
      a1[2] = v6;
      a1[3] = v42;
      if (v48)
      {
        operator delete(v48);
        uint64_t v6 = (char *)a1[2];
      }
      goto LABEL_41;
    }
    goto LABEL_5;
  }
  uint64_t v27 = v24 >> 2;
  if (v19 == v21) {
    unint64_t v28 = 1;
  }
  else {
    unint64_t v28 = v27;
  }
  long long v29 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(v28);
  uint64_t v31 = v30;
  uint64_t v32 = operator new(0x1000uLL);
  uint64_t v33 = &v29[8 * v23];
  unint64_t v34 = &v29[8 * v31];
  if (v23 == v31)
  {
    uint64_t v35 = 8 * v23;
    if (v20 - v22 < 1)
    {
      uint64_t v60 = v35 >> 2;
      if (v20 == v22) {
        unint64_t v61 = 1;
      }
      else {
        unint64_t v61 = v60;
      }
      std::string::size_type v62 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(v61);
      uint64_t v33 = &v62[8 * (v61 >> 2)];
      unint64_t v34 = &v62[8 * v63];
      if (v29) {
        operator delete(v29);
      }
      long long v29 = v62;
    }
    else
    {
      uint64_t v36 = v35 >> 3;
      if (v36 >= -1) {
        unint64_t v37 = v36 + 1;
      }
      else {
        unint64_t v37 = v36 + 2;
      }
      v33 -= 8 * (v37 >> 1);
    }
  }
  *(void *)uint64_t v33 = v32;
  int v64 = v33 + 8;
  for (uint64_t i = a1[2]; i != a1[1]; i -= 8)
  {
    if (v33 == v29)
    {
      if (v64 >= v34)
      {
        if (v34 == v29) {
          unint64_t v70 = 1;
        }
        else {
          unint64_t v70 = (v34 - v29) >> 2;
        }
        uint64_t v71 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<YAML::Scanner::SimpleKey *>>(v70);
        uint64_t v73 = v71;
        uint64_t v33 = &v71[(2 * v70 + 6) & 0xFFFFFFFFFFFFFFF8];
        uint64_t v75 = v64 - v29;
        BOOL v74 = v64 == v29;
        int v64 = v33;
        if (!v74)
        {
          int v64 = &v33[v75 & 0xFFFFFFFFFFFFFFF8];
          uint64_t v76 = 8 * (v75 >> 3);
          __n128 v77 = v33;
          uint64_t v78 = (uint64_t *)v29;
          do
          {
            uint64_t v79 = *v78++;
            *(void *)__n128 v77 = v79;
            v77 += 8;
            v76 -= 8;
          }
          while (v76);
        }
        unint64_t v34 = &v71[8 * v72];
        if (v29) {
          operator delete(v29);
        }
        long long v29 = v73;
      }
      else
      {
        uint64_t v66 = (v34 - v64) >> 3;
        if (v66 >= -1) {
          uint64_t v67 = v66 + 1;
        }
        else {
          uint64_t v67 = v66 + 2;
        }
        uint64_t v68 = v67 >> 1;
        uint64_t v33 = &v29[8 * (v67 >> 1)];
        uint64_t v69 = v29;
        if (v64 != v29)
        {
          memmove(v33, v29, v64 - v29);
          uint64_t v69 = v64;
        }
        int v64 = &v69[8 * v68];
      }
    }
    uint64_t v80 = *(void *)(i - 8);
    *((void *)v33 - 1) = v80;
    v33 -= 8;
  }
  uint64_t v81 = (char *)*a1;
  *a1 = v29;
  a1[1] = v33;
  a1[2] = v64;
  a1[3] = v34;
  if (v81)
  {
    operator delete(v81);
  }
}

void sub_239A4AB0C(_Unwind_Exception *a1)
{
  operator delete(v2);
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(a1);
}

void __cxx_global_array_dtor_0()
{
  uint64_t v0 = 0x1E0u;
  do
  {
    if (YAML::TokenNames[v0 - 1] < 0) {
      operator delete(*(void **)&YAML::TokenNames[v0 - 24]);
    }
    v0 -= 24;
  }
  while (v0);
}

void siri::intelligence::Undo::GetIdentifier(siri::intelligence::Undo *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)this, *((void *)this + 1));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)this;
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 2);
  }
}

void siri::intelligence::Undo::SetUserData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  unint64_t v4 = *(std::__shared_weak_count **)(a1 + 32);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v2;
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

uint64_t siri::intelligence::Undo::GetUserData@<X0>(uint64_t this@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(this + 32);
  *a2 = *(void *)(this + 24);
  a2[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return this;
}

void siri::intelligence::Undo::GetExpanded(const std::string *a1@<X0>, void *a2@<X8>)
{
  unint64_t v4 = (char *)operator new(0x40uLL);
  *((void *)v4 + 1) = 0;
  *((void *)v4 + 2) = 0;
  *(void *)unint64_t v4 = &unk_26ED27830;
  *(_OWORD *)(v4 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *((void *)v4 + 7) = 0;
  *(_OWORD *)(v4 + 24) = 0u;
  *a2 = v4 + 24;
  a2[1] = v4;
  std::string::operator=((std::string *)v4 + 1, a1);
  std::string::pointer data = a1[1].__r_.__value_.__l.__data_;
  if (!data) {
    return;
  }
  (*(void (**)(void **__return_ptr))(*(void *)data + 88))(&lpsrc);
  uint64_t v6 = lpsrc;
  if (!lpsrc
  {
    uint64_t v7 = 0;
    goto LABEL_7;
  }
  uint64_t v7 = v11;
  if (!v11)
  {
LABEL_7:
    char v8 = 1;
    goto LABEL_8;
  }
  char v8 = 0;
  atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
LABEL_8:
  uint64_t v9 = (std::__shared_weak_count *)*((void *)v4 + 7);
  *((void *)v4 + 6) = v6;
  *((void *)v4 + 7) = v7;
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
  if ((v8 & 1) == 0) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
}

void sub_239A4AD64(_Unwind_Exception *a1)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<siri::intelligence::Undo>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26ED27830;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<siri::intelligence::Undo>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26ED27830;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x23ECAACC0);
}

void std::__shared_ptr_emplace<siri::intelligence::Undo>::__on_zero_shared(uint64_t a1)
{
  std::allocator<siri::intelligence::NLParameters>::destroy[abi:ne180100]((uint64_t)&v1, a1 + 24);
}

uint64_t YAML::Exp::ParseHex(uint64_t result, _DWORD *a2)
{
  uint64_t v2 = *(unsigned __int8 *)(result + 23);
  int v3 = (char)v2;
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(result + 8);
  }
  if (!v2) {
    return 0;
  }
  unint64_t v4 = (void *)result;
  LODWORD(result) = 0;
  if (v3 < 0) {
    unint64_t v4 = (void *)*v4;
  }
  do
  {
    int v6 = *(char *)v4;
    unint64_t v4 = (void *)((char *)v4 + 1);
    int v5 = v6;
    if ((v6 - 97) >= 6)
    {
      if ((v5 - 65) >= 6)
      {
        if ((v5 - 48) >= 0xA)
        {
          exceptiostd::string::size_type n = __cxa_allocate_exception(0x38uLL);
          std::string::basic_string[abi:ne180100]<0>(v10, "bad character found while scanning hex number");
          YAML::Exception::Exception((uint64_t)exception, a2, (uint64_t)v10);
          void *exception = &unk_26ED2A588;
        }
        int v7 = -48;
      }
      else
      {
        int v7 = -55;
      }
    }
    else
    {
      int v7 = -87;
    }
    __n128 result = (v5 + 16 * result + v7);
    --v2;
  }
  while (v2);
  return result;
}

void sub_239A4AF40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t YAML::Exp::Str@<X0>(uint64_t this@<X0>, unsigned char *a2@<X8>)
{
  a2[23] = 1;
  *a2 = this;
  a2[1] = 0;
  return this;
}

void YAML::Exp::Escape(YAML::Exp *this@<X0>, YAML::Stream *a2@<X1>, uint64_t a3@<X8>)
{
  memset(&v32, 0, sizeof(v32));
  if ((int)a2 >= 1)
  {
    int v5 = (int)a2;
    do
    {
      std::string::value_type v6 = YAML::Stream::get(this);
      std::string::push_back(&v32, v6);
      --v5;
    }
    while (v5);
  }
  int v7 = *((_DWORD *)this + 4);
  v31.__r_.__value_.__r.__words[0] = *((void *)this + 1);
  LODWORD(v31.__r_.__value_.__r.__words[1]) = v7;
  unsigned int v8 = YAML::Exp::ParseHex((uint64_t)&v32, &v31);
  unsigned int v9 = v8;
  if (HIWORD(v8) > 0x10u || (v8 & 0xFFFFF800) == 55296)
  {
    std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)&v31);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v31.__r_.__value_.__r.__words[2], (uint64_t)"invalid unicode: ", 17);
    std::ostream::operator<<();
    exceptiostd::string::size_type n = __cxa_allocate_exception(0x38uLL);
    int v22 = *((_DWORD *)this + 4);
    v29.__r_.__value_.__r.__words[0] = *((void *)this + 1);
    LODWORD(v29.__r_.__value_.__r.__words[1]) = v22;
    std::stringbuf::str();
    YAML::Exception::Exception((uint64_t)exception, &v29, (uint64_t)&__s);
    void *exception = &unk_26ED2A588;
  }
  if (v8 <= 0x7F)
  {
    *(unsigned char *)(a3 + 23) = 1;
    *(_WORD *)a3 = v8;
    goto LABEL_37;
  }
  if (v8 > 0x7FF)
  {
    if (HIWORD(v8))
    {
      *((unsigned char *)&v29.__r_.__value_.__s + 23) = 1;
      LOWORD(v29.__r_.__value_.__l.__data_) = ((v8 >> 18) - 16);
      char v28 = 1;
      v27[0] = (v8 >> 12) & 0x3F | 0x80;
      v27[1] = 0;
      int v16 = std::string::append(&v29, v27, 1uLL);
      long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v17;
      v16->__r_.__value_.__l.__size_ = 0;
      v16->__r_.__value_.__r.__words[2] = 0;
      v16->__r_.__value_.__r.__words[0] = 0;
      char v26 = 1;
      v25[0] = (v9 >> 6) & 0x3F | 0x80;
      v25[1] = 0;
      int64_t v18 = std::string::append(&__s, v25, 1uLL);
      long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
      v31.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v19;
      v18->__r_.__value_.__l.__size_ = 0;
      v18->__r_.__value_.__r.__words[2] = 0;
      v18->__r_.__value_.__r.__words[0] = 0;
      char v24 = 1;
      LOWORD(__p) = v9 & 0x3F | 0x80;
      uint64_t v20 = std::string::append(&v31, (const std::string::value_type *)&__p, 1uLL);
      *(std::string *)a3 = *v20;
      v20->__r_.__value_.__l.__size_ = 0;
      v20->__r_.__value_.__r.__words[2] = 0;
      v20->__r_.__value_.__r.__words[0] = 0;
      if (v24 < 0) {
        operator delete(__p);
      }
      if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v31.__r_.__value_.__l.__data_);
      }
      if (v26 < 0) {
        operator delete(*(void **)v25);
      }
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s.__r_.__value_.__l.__data_);
      }
      if (v28 < 0) {
        operator delete(*(void **)v27);
      }
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
      {
        BOOL v12 = (void *)v29.__r_.__value_.__r.__words[0];
        goto LABEL_36;
      }
    }
    else
    {
      *((unsigned char *)&__s.__r_.__value_.__s + 23) = 1;
      LOWORD(__s.__r_.__value_.__l.__data_) = ((v8 >> 12) - 32);
      *((unsigned char *)&v29.__r_.__value_.__s + 23) = 1;
      LOWORD(v29.__r_.__value_.__l.__data_) = (v8 >> 6) & 0x3F | 0x80;
      uint64_t v13 = std::string::append(&__s, (const std::string::value_type *)&v29, 1uLL);
      long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
      v31.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v14;
      v13->__r_.__value_.__l.__size_ = 0;
      v13->__r_.__value_.__r.__words[2] = 0;
      v13->__r_.__value_.__r.__words[0] = 0;
      char v28 = 1;
      v27[0] = v9 & 0x3F | 0x80;
      v27[1] = 0;
      uint64_t v15 = std::string::append(&v31, v27, 1uLL);
      *(std::string *)a3 = *v15;
      v15->__r_.__value_.__l.__size_ = 0;
      v15->__r_.__value_.__r.__words[2] = 0;
      v15->__r_.__value_.__r.__words[0] = 0;
      if (v28 < 0) {
        operator delete(*(void **)v27);
      }
      if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v31.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v29.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      {
        BOOL v12 = (void *)__s.__r_.__value_.__r.__words[0];
        goto LABEL_36;
      }
    }
  }
  else
  {
    *((unsigned char *)&v31.__r_.__value_.__s + 23) = 1;
    LOWORD(v31.__r_.__value_.__l.__data_) = ((v8 >> 6) - 64);
    *((unsigned char *)&__s.__r_.__value_.__s + 23) = 1;
    LOWORD(__s.__r_.__value_.__l.__data_) = v8 & 0x3F | 0x80;
    uint64_t v11 = std::string::append(&v31, (const std::string::value_type *)&__s, 1uLL);
    *(std::string *)a3 = *v11;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__s.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
    {
      BOOL v12 = (void *)v31.__r_.__value_.__r.__words[0];
LABEL_36:
      operator delete(v12);
    }
  }
LABEL_37:
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v32.__r_.__value_.__l.__data_);
  }
}

void sub_239A4B388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (a38 < 0)
  {
    operator delete(__p);
    if ((v46 & 1) == 0)
    {
LABEL_6:
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a40);
      if (*(char *)(v47 - 49) < 0) {
        operator delete(*(void **)(v47 - 72));
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v46)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v45);
  goto LABEL_6;
}

void YAML::Exp::Escape(YAML::Exp *this@<X0>, uint64_t a2@<X8>)
{
  int v5 = YAML::Stream::get(this);
  int v6 = YAML::Stream::get(this);
  if (v5 != 39 || v6 != 39)
  {
    if (v6 > 91)
    {
      switch(v6)
      {
        case '\\':
          int v7 = "\\"";
          goto LABEL_4;
        case '_':
          int v7 = "\xA0";
          goto LABEL_4;
        case 'a':
          int v7 = "\a";
          goto LABEL_4;
        case 'b':
          int v7 = "\b";
          goto LABEL_4;
        case 'e':
          int v7 = "\x1B";
          goto LABEL_4;
        case 'f':
          int v7 = "\f";
          goto LABEL_4;
        case 'n':
          int v7 = "\n";
          goto LABEL_4;
        case 'r':
          int v7 = "\r";
          goto LABEL_4;
        case 't':
          goto LABEL_20;
        case 'u':
          uint64_t v8 = a2;
          unsigned int v9 = this;
          uint64_t v10 = 4;
          goto LABEL_38;
        case 'v':
          int v7 = "\v";
          goto LABEL_4;
        case 'x':
          uint64_t v8 = a2;
          unsigned int v9 = this;
          uint64_t v10 = 2;
          goto LABEL_38;
        default:
          goto LABEL_42;
      }
    }
    if (v6 > 46)
    {
      switch(v6)
      {
        case 'L':
          int v7 = "\u2028";
          goto LABEL_4;
        case 'M':
        case 'O':
        case 'Q':
        case 'R':
        case 'S':
        case 'T':
          break;
        case 'N':
          int v7 = "\x85";
          goto LABEL_4;
        case 'P':
          int v7 = "\u2029";
          goto LABEL_4;
        case 'U':
          uint64_t v8 = a2;
          unsigned int v9 = this;
          uint64_t v10 = 8;
LABEL_38:
          YAML::Exp::Escape(v9, (YAML::Stream *)v10, v8);
          return;
        default:
          if (v6 == 47)
          {
            int v7 = "/";
            goto LABEL_4;
          }
          if (v6 == 48)
          {
            *(unsigned char *)(a2 + 23) = 1;
            *(_WORD *)a2 = 0;
            return;
          }
          break;
      }
    }
    else if (v6 > 33)
    {
      if (v6 == 34)
      {
        int v7 = "\"";
        goto LABEL_4;
      }
      if (v6 == 39) {
        goto LABEL_3;
      }
    }
    else
    {
      if (v6 == 9)
      {
LABEL_20:
        int v7 = "\t";
        goto LABEL_4;
      }
      if (v6 == 32)
      {
        int v7 = " ";
        goto LABEL_4;
      }
    }
LABEL_42:
    std::string::value_type v11 = v6;
    std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v18);
    exceptiostd::string::size_type n = __cxa_allocate_exception(0x38uLL);
    int v13 = *((_DWORD *)this + 4);
    uint64_t v16 = *((void *)this + 1);
    int v17 = v13;
    std::string::basic_string[abi:ne180100]<0>(&v14, "unknown escape character: ");
    std::string::push_back(&v14, v11);
    std::string v15 = v14;
    memset(&v14, 0, sizeof(v14));
    YAML::Exception::Exception((uint64_t)exception, &v16, (uint64_t)&v15);
    void *exception = &unk_26ED2A588;
  }
LABEL_3:
  int v7 = "'";
LABEL_4:

  std::string::basic_string[abi:ne180100]<0>((void *)a2, v7);
}

void sub_239A4B7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,char a24)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v24 & 1) == 0)
    {
LABEL_8:
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a24);
      _Unwind_Resume(a1);
    }
  }
  else if (!v24)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v25);
  goto LABEL_8;
}

double siri::intelligence::Interjection::Interjection(siri::intelligence::Interjection *this)
{
  *(_DWORD *)this = 256;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  return result;
}

{
  double result;

  *(_DWORD *)this = 256;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  return result;
}

unsigned char *siri::intelligence::Interjection::SetUberMode(unsigned char *this, char a2)
{
  *this = a2;
  return this;
}

uint64_t siri::intelligence::Interjection::GetUberMode(siri::intelligence::Interjection *this)
{
  return *(unsigned __int8 *)this;
}

uint64_t siri::intelligence::Interjection::SetReturnWhenDone(uint64_t this, char a2)
{
  *(unsigned char *)(this + 1) = a2;
  return this;
}

uint64_t siri::intelligence::Interjection::GetReturnWhenDone(siri::intelligence::Interjection *this)
{
  return *((unsigned __int8 *)this + 1);
}

uint64_t siri::intelligence::Interjection::SetRepeatPrompt(uint64_t this, char a2)
{
  *(unsigned char *)(this + 2) = a2;
  return this;
}

uint64_t siri::intelligence::Interjection::GetRepeatPrompt(siri::intelligence::Interjection *this)
{
  return *((unsigned __int8 *)this + 2);
}

uint64_t siri::intelligence::Interjection::SetFollowFallback(uint64_t this, char a2)
{
  *(unsigned char *)(this + 3) = a2;
  return this;
}

uint64_t siri::intelligence::Interjection::GetFollowFallback(siri::intelligence::Interjection *this)
{
  return *((unsigned __int8 *)this + 3);
}

std::string *siri::intelligence::Interjection::SetSegueResponseId(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 8), a2);
}

void siri::intelligence::Interjection::GetSegueResponseId(siri::intelligence::Interjection *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 31) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 1), *((void *)this + 2));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 8);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 3);
  }
}

std::string *siri::intelligence::Interjection::SetReturnResponseId(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 32), a2);
}

void siri::intelligence::Interjection::GetReturnResponseId(siri::intelligence::Interjection *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 55) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 4), *((void *)this + 5));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *((_OWORD *)this + 2);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 6);
  }
}

void InitDefaultsscc_info_Intelligence_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence::Intelligence((protobuf::Intelligence *)&protobuf::_Intelligence_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_default_instance_, v4);
  qword_268A0B9D0 = (uint64_t)&protobuf::_Intelligence_Start_default_instance_;
}

void InitDefaultsscc_info_Intelligence_Activity_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Activity::Intelligence_Activity((protobuf::Intelligence_Activity *)&protobuf::_Intelligence_Activity_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Activity_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_BehaviorResponse_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_BehaviorResponse::Intelligence_BehaviorResponse((protobuf::Intelligence_BehaviorResponse *)&protobuf::_Intelligence_BehaviorResponse_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_BehaviorResponse_default_instance_, v4);
  qword_268A0ADB0 = (uint64_t)&protobuf::_Intelligence_Undo_default_instance_;
}

void InitDefaultsscc_info_Intelligence_Character_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Character::Intelligence_Character((protobuf::Intelligence_Character *)&protobuf::_Intelligence_Character_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Character_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_Condition_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Condition::Intelligence_Condition((protobuf::Intelligence_Condition *)&protobuf::_Intelligence_Condition_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Condition_default_instance_, v4);
  qword_268A0B7B0 = (uint64_t)&protobuf::_Intelligence_Condition_ConditionEntry_default_instance_;
}

void InitDefaultsscc_info_Intelligence_Condition_ConditionEntry_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Condition_ConditionEntry::Intelligence_Condition_ConditionEntry((protobuf::Intelligence_Condition_ConditionEntry *)&protobuf::_Intelligence_Condition_ConditionEntry_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Condition_ConditionEntry_default_instance_, v4);
  qword_268A0B780 = (uint64_t)&protobuf::_Intelligence_KeyValueParameter_default_instance_;
  unk_268A0B788 = &protobuf::_Intelligence_KeyValueParameter_default_instance_;
  qword_268A0B778 = (uint64_t)&protobuf::_Intelligence_Condition_ConditionEntry_default_instance_;
}

void InitDefaultsscc_info_Intelligence_Counter_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Counter::Intelligence_Counter((protobuf::Intelligence_Counter *)&protobuf::_Intelligence_Counter_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Counter_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_DialogResponse_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_DialogResponse::Intelligence_DialogResponse((protobuf::Intelligence_DialogResponse *)&protobuf::_Intelligence_DialogResponse_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_DialogResponse_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_Event_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Event::Intelligence_Event((protobuf::Intelligence_Event *)&protobuf::_Intelligence_Event_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Event_default_instance_, v4);
  qword_268A0B3F8 = (uint64_t)&protobuf::_Intelligence_NLParameters_default_instance_;
}

void InitDefaultsscc_info_Intelligence_Flag_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Flag::Intelligence_Flag((protobuf::Intelligence_Flag *)&protobuf::_Intelligence_Flag_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Flag_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_InputGroup_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_InputGroup::Intelligence_InputGroup((protobuf::Intelligence_InputGroup *)&protobuf::_Intelligence_InputGroup_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_InputGroup_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_InputGroup_Event_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_InputGroup_Event::Intelligence_InputGroup_Event((protobuf::Intelligence_InputGroup_Event *)&protobuf::_Intelligence_InputGroup_Event_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_InputGroup_Event_default_instance_, v4);
  qword_268A0AFB0 = (uint64_t)&protobuf::_Intelligence_InputGroup_Interjection_default_instance_;
}

void InitDefaultsscc_info_Intelligence_InputGroup_Fallback_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_InputGroup_Fallback::Intelligence_InputGroup_Fallback((protobuf::Intelligence_InputGroup_Fallback *)&protobuf::_Intelligence_InputGroup_Fallback_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_InputGroup_Fallback_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_InputGroup_Intent_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_InputGroup_Intent::Intelligence_InputGroup_Intent((protobuf::Intelligence_InputGroup_Intent *)&protobuf::_Intelligence_InputGroup_Intent_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_InputGroup_Intent_default_instance_, v4);
  qword_268A0AF60 = (uint64_t)&protobuf::_Intelligence_InputGroup_Interjection_default_instance_;
}

void InitDefaultsscc_info_Intelligence_InputGroup_Interjection_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_InputGroup_Interjection::Intelligence_InputGroup_Interjection((protobuf::Intelligence_InputGroup_Interjection *)&protobuf::_Intelligence_InputGroup_Interjection_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_InputGroup_Interjection_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_InputGroup_LegacyEvent_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_InputGroup_LegacyEvent::Intelligence_InputGroup_LegacyEvent((protobuf::Intelligence_InputGroup_LegacyEvent *)&protobuf::_Intelligence_InputGroup_LegacyEvent_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_InputGroup_LegacyEvent_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_Intent_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Intent::Intelligence_Intent((protobuf::Intelligence_Intent *)&protobuf::_Intelligence_Intent_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Intent_default_instance_, v4);
  qword_268A0B440 = (uint64_t)&protobuf::_Intelligence_NLParameters_default_instance_;
}

void InitDefaultsscc_info_Intelligence_KeyValueParameter_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_KeyValueParameter::Intelligence_KeyValueParameter((protobuf::Intelligence_KeyValueParameter *)&protobuf::_Intelligence_KeyValueParameter_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_KeyValueParameter_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_Label_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Label::Intelligence_Label((protobuf::Intelligence_Label *)&protobuf::_Intelligence_Label_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Label_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_List_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_List::Intelligence_List((protobuf::Intelligence_List *)&protobuf::_Intelligence_List_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_List_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_Meta_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Meta::Intelligence_Meta((protobuf::Intelligence_Meta *)&protobuf::_Intelligence_Meta_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Meta_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_NLParameters_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_NLParameters::Intelligence_NLParameters((protobuf::Intelligence_NLParameters *)&protobuf::_Intelligence_NLParameters_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_NLParameters_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_ReferenceResponse_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_ReferenceResponse::Intelligence_ReferenceResponse((protobuf::Intelligence_ReferenceResponse *)&protobuf::_Intelligence_ReferenceResponse_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_ReferenceResponse_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_ResponseGroup_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_ResponseGroup::Intelligence_ResponseGroup((protobuf::Intelligence_ResponseGroup *)&protobuf::_Intelligence_ResponseGroup_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_ResponseGroup_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_Start_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Start::Intelligence_Start((protobuf::Intelligence_Start *)&protobuf::_Intelligence_Start_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Start_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_State_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_State::Intelligence_State((protobuf::Intelligence_State *)&protobuf::_Intelligence_State_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_State_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_State_Event_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_State_Event::Intelligence_State_Event((protobuf::Intelligence_State_Event *)&protobuf::_Intelligence_State_Event_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_State_Event_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_State_ExecutionState_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_State_ExecutionState::Intelligence_State_ExecutionState((protobuf::Intelligence_State_ExecutionState *)&protobuf::_Intelligence_State_ExecutionState_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_State_ExecutionState_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_State_ExecutionState_Frame_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_State_ExecutionState_Frame::Intelligence_State_ExecutionState_Frame((protobuf::Intelligence_State_ExecutionState_Frame *)&protobuf::_Intelligence_State_ExecutionState_Frame_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_State_ExecutionState_Frame_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_State_ExecutionState_Frame_ResponseState_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::Intelligence_State_ExecutionState_Frame_ResponseState((protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *)&protobuf::_Intelligence_State_ExecutionState_Frame_ResponseState_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_State_ExecutionState_Frame_ResponseState_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_State_InputGroup_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_State_InputGroup::Intelligence_State_InputGroup((protobuf::Intelligence_State_InputGroup *)&protobuf::_Intelligence_State_InputGroup_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_State_InputGroup_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_State_Memory_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_State_Memory::Intelligence_State_Memory((protobuf::Intelligence_State_Memory *)&protobuf::_Intelligence_State_Memory_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_State_Memory_default_instance_, v4);
  qword_268A0B4A0 = (uint64_t)&protobuf::_Intelligence_State_Memory_Value_default_instance_;
}

void InitDefaultsscc_info_Intelligence_State_Memory_Value_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_State_Memory_Value::Intelligence_State_Memory_Value((protobuf::Intelligence_State_Memory_Value *)&protobuf::_Intelligence_State_Memory_Value_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_State_Memory_Value_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_State_Response_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_State_Response::Intelligence_State_Response((protobuf::Intelligence_State_Response *)&protobuf::_Intelligence_State_Response_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_State_Response_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_State_Timer_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_State_Timer::Intelligence_State_Timer((protobuf::Intelligence_State_Timer *)&protobuf::_Intelligence_State_Timer_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_State_Timer_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_Undo_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Undo::Intelligence_Undo((protobuf::Intelligence_Undo *)&protobuf::_Intelligence_Undo_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Undo_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_Utterance_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Utterance::Intelligence_Utterance((protobuf::Intelligence_Utterance *)&protobuf::_Intelligence_Utterance_default_instance_);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Utterance_default_instance_, v4);
}

void InitDefaultsscc_info_Intelligence_Variable_intelligence_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", a4);
  protobuf::Intelligence_Variable::Intelligence_Variable((protobuf::Intelligence_Variable *)&protobuf::_Intelligence_Variable_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&protobuf::_Intelligence_Variable_default_instance_, v4);
  qword_268A0B2D0 = (uint64_t)&protobuf::_Intelligence_KeyValueParameter_default_instance_;
}

protobuf::Intelligence_Meta *protobuf::Intelligence_Meta::Intelligence_Meta(protobuf::Intelligence_Meta *this)
{
  *(void *)this = &unk_26ED27880;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_Meta_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Meta_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_239A4CA3C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Meta *protobuf::Intelligence_Meta::Intelligence_Meta(protobuf::Intelligence_Meta *this, const protobuf::Intelligence_Meta *a2)
{
  *(void *)this = &unk_26ED27880;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    int v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    int v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  return this;
}

void sub_239A4CB0C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Meta::~Intelligence_Meta(protobuf::Intelligence_Meta *this)
{
  *(void *)this = &unk_26ED27880;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Meta::~Intelligence_Meta(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Meta::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Meta::default_instance(protobuf::Intelligence_Meta *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Meta_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Meta_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Meta_default_instance_;
}

void protobuf::Intelligence_Meta::Clear(protobuf::Intelligence_Meta *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  uint64_t v2 = *((void *)this + 3);
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    uint64_t v3 = *((void *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *((unsigned char *)this + 8);
  uint64_t v4 = (protobuf::Intelligence_Meta *)((char *)this + 8);
  *((_DWORD *)v4 + 2) = 0;
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v4);
  }
}

google::protobuf::internal *protobuf::Intelligence_Meta::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  BOOL v12 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v12, *((_DWORD *)this + 23));
  double result = v12;
  if ((v5 & 1) == 0)
  {
    while (1)
    {
      int v7 = (char *)result + 1;
      LODWORD(v8) = *(unsigned __int8 *)result;
      if ((*(char *)result & 0x80000000) == 0) {
        goto LABEL_5;
      }
      uint64_t v8 = (const char *)(v8 + (*v7 << 7) - 128);
      if ((*v7 & 0x80000000) == 0) {
        break;
      }
      double result = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(result, v8);
      BOOL v12 = result;
      if (!result) {
        return result;
      }
      int v7 = (std::string::value_type *)result;
LABEL_6:
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v10 = *(std::string **)(a1 + 32);
          if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 32, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          goto LABEL_19;
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v10 = *(std::string **)(a1 + 24);
        if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
LABEL_19:
        double result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v10, v7, (uint64_t)this);
        goto LABEL_20;
      }
      if (!v8 || (v8 & 7) == 4)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
        return (google::protobuf::internal *)v7;
      }
      double result = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v7, this);
LABEL_20:
      BOOL v12 = result;
      if (result)
      {
        int v11 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v12, *((_DWORD *)this + 23));
        double result = v12;
        if (!v11) {
          continue;
        }
      }
      return result;
    }
    int v7 = (char *)result + 2;
LABEL_5:
    BOOL v12 = (google::protobuf::internal *)v7;
    goto LABEL_6;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_Meta::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Meta *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = (unsigned __int8 *)a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 4), (char *)v4);
  }
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    int v11 = *(void **)v9;
    uint64_t v10 = *(void *)(v9 + 8);
  }
  else
  {
    LODWORD(v1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *(unsigned __int8 *)(v9 + 23);
    int v11 = (void *)v9;
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v12 = (int)v10;
    memcpy(v4, v11, (int)v10);
    v4 += v12;
    return v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v11, v10, v4);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(google::protobuf::io::EpsCopyOutputStream *a1, int a2, const void **a3, char *a4)
{
  if (*((char *)a3 + 23) < 0)
  {
    int64_t v4 = (int64_t)a3[1];
    if (v4 > 127) {
      goto LABEL_24;
    }
  }
  else
  {
    int64_t v4 = *((unsigned __int8 *)a3 + 23);
  }
  unsigned int v5 = 8 * a2;
  uint64_t v6 = 1;
  uint64_t v7 = 2;
  uint64_t v8 = 3;
  uint64_t v9 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v9 = 5;
  }
  if (v5 >= 0x200000) {
    uint64_t v8 = v9;
  }
  if (v5 >= 0x4000) {
    uint64_t v7 = v8;
  }
  if (v5 >= 0x80) {
    uint64_t v6 = v7;
  }
  if ((uint64_t)(*(void *)a1 + ~(unint64_t)&a4[v6] + 16) >= v4)
  {
    unsigned int v10 = v5 | 2;
    if ((v5 | 2) > 0x7F)
    {
      *a4 = v5 | 0x82;
      unsigned int v12 = v5 >> 7;
      if (v10 >> 14)
      {
        int v11 = (unsigned __int8 *)(a4 + 2);
        do
        {
          *(v11 - 1) = v12 | 0x80;
          unsigned int v13 = v12 >> 7;
          ++v11;
          unsigned int v14 = v12 >> 14;
          v12 >>= 7;
        }
        while (v14);
        *(v11 - 1) = v13;
      }
      else
      {
        a4[1] = v12;
        int v11 = (unsigned __int8 *)(a4 + 2);
      }
    }
    else
    {
      *a4 = v10;
      int v11 = (unsigned __int8 *)(a4 + 1);
    }
    unsigned __int8 *v11 = v4;
    std::string v15 = (char *)(v11 + 1);
    if (*((char *)a3 + 23) >= 0) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = *a3;
    }
    memcpy(v15, v16, v4);
    return (unsigned __int8 *)&v15[v4];
  }
LABEL_24:

  return google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a1, a2, (void **)a3, a4);
}

uint64_t protobuf::Intelligence_Meta::ByteSizeLong(protobuf::Intelligence_Meta *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = *((void *)this + 3);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v6 = *((void *)this + 4);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *((void *)this + 1);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0) {
      uint64_t v12 = *(void *)(v11 + 8);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    }
    v2 += v12;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void protobuf::Intelligence_Meta::CheckTypeAndMergeFrom(protobuf::Intelligence_Meta *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Meta::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Meta::MergeFrom(protobuf::Intelligence_Meta *this, const protobuf::Intelligence_Meta *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 973);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      unint64_t v11 = (std::string *)*((void *)this + 4);
      unsigned int v10 = (char *)this + 32;
      uint64_t v9 = v11;
      *((_DWORD *)v10 - 4) |= 2u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 4);
      if (v11 != v12)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v10, (uint64_t)v12);
        }
        std::string::operator=(v9, v12);
      }
    }
  }
}

void sub_239A4D318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Meta::CopyFrom(protobuf::Intelligence_Meta *this, const protobuf::Intelligence_Meta *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Meta::Clear(this);
    protobuf::Intelligence_Meta::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Meta::IsInitialized(protobuf::Intelligence_Meta *this)
{
  return 1;
}

__n128 protobuf::Intelligence_Meta::InternalSwap(protobuf::Intelligence_Meta *this, protobuf::Intelligence_Meta *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v25;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      uint64_t v8 = (__n128 *)(v4 & 0xFFFFFFFFFFFFFFFELL);
LABEL_7:
      unint64_t v9 = v8[1].n128_u64[0];
      __n128 result = *v8;
      unint64_t v11 = *(void *)(v7 + 16);
      *uint64_t v8 = *(__n128 *)v7;
      v8[1].n128_u64[0] = v11;
      *(__n128 *)unint64_t v7 = result;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v12 = (uint64_t *)*((void *)this + 3);
  }
  std::string v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    std::string v15 = *v14;
  }
  uint64_t v16 = v12[2];
  __n128 result = *(__n128 *)v12;
  uint64_t v17 = v15[2];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v15;
  _OWORD v12[2] = v17;
  *(__n128 *)std::string v15 = result;
  void v15[2] = v16;
LABEL_14:
  uint64_t v20 = (uint64_t *)*((void *)this + 4);
  int64_t v18 = (std::string **)((char *)this + 32);
  long long v19 = (std::string *)v20;
  int v21 = (std::string **)((char *)a2 + 32);
  if (v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    long long v19 = *v18;
  }
  int v22 = *v21;
  if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v22 = *v21;
  }
  std::string::size_type v23 = v19->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v19->__r_.__value_.__l.__data_;
  std::string::size_type v24 = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v19->__r_.__value_.__l.__data_ = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v19->__r_.__value_.__r.__words[2] = v24;
  *(__n128 *)&v22->__r_.__value_.__l.__data_ = result;
  v22->__r_.__value_.__r.__words[2] = v23;
  return result;
}

void *protobuf::Intelligence_Meta::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Meta");
}

protobuf::Intelligence_KeyValueParameter *protobuf::Intelligence_KeyValueParameter::Intelligence_KeyValueParameter(protobuf::Intelligence_KeyValueParameter *this)
{
  *(void *)this = &unk_26ED27910;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  if (atomic_load_explicit(scc_info_Intelligence_KeyValueParameter_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_KeyValueParameter_intelligence_2eproto);
  }
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 19) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((void *)this + 21) = 0;
  *((void *)this + 22) = 0;
  *((_WORD *)this + 92) = 0;
  return this;
}

void sub_239A4D5F8(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v1 + 12);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v1 + 9);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v1 + 6);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v1 + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_KeyValueParameter *protobuf::Intelligence_KeyValueParameter::Intelligence_KeyValueParameter(protobuf::Intelligence_KeyValueParameter *this, const protobuf::Intelligence_KeyValueParameter *a2)
{
  *(void *)this = &unk_26ED27910;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 3, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 6, (uint64_t)a2 + 48);
  *((void *)this + 9) = 0;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((void *)this + 11) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 9, (uint64_t)a2 + 72);
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 12, (uint64_t)a2 + 96);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 15);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 120, (uint64_t)v7);
    }
  }
  *((void *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)*((void *)a2 + 16);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 128, (uint64_t)v8);
    }
  }
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    unint64_t v9 = (uint64_t *)*((void *)a2 + 17);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 136, (uint64_t)v9);
    }
  }
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    unsigned int v10 = (uint64_t *)*((void *)a2 + 18);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 144, (uint64_t)v10);
    }
  }
  *((void *)this + 19) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x10) != 0)
  {
    unint64_t v11 = (uint64_t *)*((void *)a2 + 19);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 152, (uint64_t)v11);
    }
  }
  long long v12 = *((_OWORD *)a2 + 10);
  *(_OWORD *)((char *)this + 17siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *(_OWORD *)((char *)a2 + 170);
  *((_OWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v12;
  return this;
}

void sub_239A4D7DC(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v5);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v4);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v3);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_KeyValueParameter::~Intelligence_KeyValueParameter(protobuf::Intelligence_KeyValueParameter *this)
{
  *(void *)this = &unk_26ED27910;
  protobuf::Intelligence_KeyValueParameter::SharedDtor(this);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 12);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 9);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 6);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_KeyValueParameter::~Intelligence_KeyValueParameter(this);

  JUMPOUT(0x23ECAACC0);
}

void *protobuf::Intelligence_KeyValueParameter::SharedDtor(void *this)
{
  int v1 = this;
  uint64_t v2 = this[15];
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = v1[16];
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    this = (void *)MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = v1[17];
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    this = (void *)MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = v1[18];
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    this = (void *)MEMORY[0x23ECAACC0](v8, 0x1012C40EC159624);
  }
  uint64_t v10 = v1[19];
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    JUMPOUT(0x23ECAACC0);
  }
  return this;
}

uint64_t protobuf::Intelligence_KeyValueParameter::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_KeyValueParameter::default_instance(protobuf::Intelligence_KeyValueParameter *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_KeyValueParameter_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_KeyValueParameter_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_KeyValueParameter_default_instance_;
}

void protobuf::Intelligence_KeyValueParameter::Clear(protobuf::Intelligence_KeyValueParameter *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((char *)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((char *)this + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((char *)this + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((char *)this + 96);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x1F) != 0)
  {
    if ((v2 & 1) == 0)
    {
      if ((v2 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_12:
      uint64_t v4 = *((void *)this + 16);
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)uint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_16;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_16;
        }
      }
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_20:
      uint64_t v6 = *((void *)this + 18);
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)uint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v2 & 0x10) == 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v6 = 0;
        *(unsigned char *)(v6 + 23) = 0;
        if ((v2 & 0x10) == 0) {
          goto LABEL_27;
        }
      }
      goto LABEL_24;
    }
    uint64_t v3 = *((void *)this + 15);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_12;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    uint64_t v5 = *((void *)this + 17);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_20;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_27;
    }
LABEL_24:
    uint64_t v7 = *((void *)this + 19);
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_27:
  if ((v2 & 0xE0) != 0)
  {
    *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
    *((void *)this + 21) = 0;
    *((void *)this + 22) = 0;
  }
  if ((v2 & 0x300) != 0) {
    *((_WORD *)this + 92) = 0;
  }
  char v9 = *((unsigned char *)this + 8);
  uint64_t v8 = (protobuf::Intelligence_KeyValueParameter *)((char *)this + 8);
  *((_DWORD *)v8 + 2) = 0;
  if (v9)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v8);
  }
}

google::protobuf::internal *protobuf::Intelligence_KeyValueParameter::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v67 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v67, *((_DWORD *)this + 23)) & 1) == 0)
  {
    while (2)
    {
      TagFallbacstd::string::size_type k = (google::protobuf::internal *)((char *)v67 + 1);
      LODWORD(v8) = *(unsigned __int8 *)v67;
      if (*(char *)v67 < 0)
      {
        uint64_t v8 = (const char *)(v8 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallbacstd::string::size_type k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v67, v8);
          uint64_t v67 = TagFallback;
          if (!TagFallback) {
            goto LABEL_3;
          }
LABEL_8:
          switch(v8 >> 3)
          {
            case 1u:
              if (v8 != 10) {
                goto LABEL_103;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              char v9 = *(std::string **)(a1 + 120);
              if (v9 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_86;
              }
              uint64_t v10 = a1 + 120;
              goto LABEL_61;
            case 2u:
              if (v8 != 17) {
                goto LABEL_103;
              }
              uint64_t v12 = *(void *)TagFallback;
              unint64_t v11 = (google::protobuf::internal *)((char *)TagFallback + 8);
              v5 |= 0x20u;
              *(void *)(a1 + 16siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v12;
              goto LABEL_82;
            case 3u:
              if (v8 != 24) {
                goto LABEL_103;
              }
              v5 |= 0x40u;
              int v13 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v14 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_20;
              }
              int v15 = *(char *)v13;
              unint64_t v14 = v14 + (v15 << 7) - 128;
              if (v15 < 0)
              {
                unint64_t v61 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v14);
                uint64_t v67 = v61;
                *(void *)(a1 + 168) = v62;
                if (!v61) {
                  goto LABEL_113;
                }
              }
              else
              {
                int v13 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_20:
                uint64_t v67 = v13;
                *(void *)(a1 + 168) = v14;
              }
              goto LABEL_88;
            case 4u:
              if (v8 != 32) {
                goto LABEL_103;
              }
              v5 |= 0x200u;
              uint64_t v16 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v17 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_25;
              }
              int v18 = *(char *)v16;
              unint64_t v17 = v17 + (v18 << 7) - 128;
              if (v18 < 0)
              {
                uint64_t v63 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v17);
                uint64_t v67 = v63;
                *(unsigned char *)(a1 + 185) = v64 != 0;
                if (!v63) {
                  goto LABEL_113;
                }
              }
              else
              {
                uint64_t v16 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_25:
                uint64_t v67 = v16;
                *(unsigned char *)(a1 + 185) = v17 != 0;
              }
              goto LABEL_88;
            case 5u:
              if (v8 != 42) {
                goto LABEL_103;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              char v9 = *(std::string **)(a1 + 128);
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 128, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_86;
            case 6u:
              if (v8 != 50) {
                goto LABEL_103;
              }
              unint64_t v19 = (unint64_t)TagFallback - 1;
              while (1)
              {
                uint64_t v20 = (google::protobuf::internal *)(v19 + 1);
                uint64_t v67 = (google::protobuf::internal *)(v19 + 1);
                int v21 = *(int **)(a1 + 40);
                if (!v21) {
                  break;
                }
                uint64_t v22 = *(int *)(a1 + 32);
                int v23 = *v21;
                if ((int)v22 >= *v21)
                {
                  if (v23 == *(_DWORD *)(a1 + 36))
                  {
LABEL_36:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v23 + 1);
                    int v21 = *(int **)(a1 + 40);
                    int v23 = *v21;
                  }
                  int *v21 = v23 + 1;
                  unint64_t v25 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
                  LODWORD(v24) = v25;
                  uint64_t v26 = *(void *)(a1 + 40);
                  uint64_t v27 = *(int *)(a1 + 32);
                  *(_DWORD *)(a1 + 32) = v27 + 1;
                  *(void *)(v26 + 8 * v27 + 8) = v25;
                  uint64_t v20 = v67;
                  goto LABEL_38;
                }
                *(_DWORD *)(a1 + 32) = v22 + 1;
                uint64_t v24 = *(void *)&v21[2 * v22 + 2];
LABEL_38:
                unint64_t v19 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, v24, v20);
                uint64_t v67 = (google::protobuf::internal *)v19;
                if (!v19) {
                  goto LABEL_113;
                }
                if (*(void *)this <= v19 || *(unsigned char *)v19 != 50) {
                  goto LABEL_88;
                }
              }
              int v23 = *(_DWORD *)(a1 + 36);
              goto LABEL_36;
            case 7u:
              if (v8 != 58) {
                goto LABEL_103;
              }
              unint64_t v28 = (unint64_t)TagFallback - 1;
              while (1)
              {
                std::string v29 = (google::protobuf::internal *)(v28 + 1);
                uint64_t v67 = (google::protobuf::internal *)(v28 + 1);
                uint64_t v30 = *(int **)(a1 + 64);
                if (!v30) {
                  break;
                }
                uint64_t v31 = *(int *)(a1 + 56);
                int v32 = *v30;
                if ((int)v31 >= *v30)
                {
                  if (v32 == *(_DWORD *)(a1 + 60))
                  {
LABEL_49:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v32 + 1);
                    uint64_t v30 = *(int **)(a1 + 64);
                    int v32 = *v30;
                  }
                  *uint64_t v30 = v32 + 1;
                  unint64_t v34 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
                  LODWORD(v33) = v34;
                  uint64_t v35 = *(void *)(a1 + 64);
                  uint64_t v36 = *(int *)(a1 + 56);
                  *(_DWORD *)(a1 + 56) = v36 + 1;
                  *(void *)(v35 + 8 * v36 + 8) = v34;
                  std::string v29 = v67;
                  goto LABEL_51;
                }
                *(_DWORD *)(a1 + 56) = v31 + 1;
                uint64_t v33 = *(void *)&v30[2 * v31 + 2];
LABEL_51:
                unint64_t v28 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, v33, v29);
                uint64_t v67 = (google::protobuf::internal *)v28;
                if (!v28) {
                  goto LABEL_113;
                }
                if (*(void *)this <= v28 || *(unsigned char *)v28 != 58) {
                  goto LABEL_88;
                }
              }
              int v32 = *(_DWORD *)(a1 + 60);
              goto LABEL_49;
            case 8u:
              if (v8 != 66) {
                goto LABEL_103;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              char v9 = *(std::string **)(a1 + 136);
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 136, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_86;
            case 9u:
              if (v8 != 74) {
                goto LABEL_103;
              }
              *(_DWORD *)(a1 + 16) |= 8u;
              char v9 = *(std::string **)(a1 + 144);
              if (v9 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_86;
              }
              uint64_t v10 = a1 + 144;
LABEL_61:
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v10, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
            case 0xAu:
              if (v8 != 80) {
                goto LABEL_103;
              }
              v5 |= 0x100u;
              unint64_t v37 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v38 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_66;
              }
              int v39 = *(char *)v37;
              unint64_t v38 = v38 + (v39 << 7) - 128;
              if (v39 < 0)
              {
                uint64_t v65 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v38);
                uint64_t v67 = v65;
                *(unsigned char *)(a1 + 184) = v66 != 0;
                if (!v65) {
                  goto LABEL_113;
                }
              }
              else
              {
                unint64_t v37 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_66:
                uint64_t v67 = v37;
                *(unsigned char *)(a1 + 184) = v38 != 0;
              }
              goto LABEL_88;
            case 0xBu:
              if (v8 != 90) {
                goto LABEL_103;
              }
              unint64_t v40 = (unint64_t)TagFallback - 1;
              while (1)
              {
                uint64_t v41 = (google::protobuf::internal *)(v40 + 1);
                uint64_t v67 = (google::protobuf::internal *)(v40 + 1);
                uint64_t v42 = *(int **)(a1 + 88);
                if (!v42) {
                  break;
                }
                uint64_t v43 = *(int *)(a1 + 80);
                int v44 = *v42;
                if ((int)v43 >= *v42)
                {
                  if (v44 == *(_DWORD *)(a1 + 84))
                  {
LABEL_74:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v44 + 1);
                    uint64_t v42 = *(int **)(a1 + 88);
                    int v44 = *v42;
                  }
                  *uint64_t v42 = v44 + 1;
                  int v46 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 72));
                  LODWORD(v45) = v46;
                  uint64_t v47 = *(void *)(a1 + 88);
                  uint64_t v48 = *(int *)(a1 + 80);
                  *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v48 + 1;
                  *(void *)(v47 + 8 * v48 + 8) = v46;
                  uint64_t v41 = v67;
                  goto LABEL_76;
                }
                *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v43 + 1;
                uint64_t v45 = *(void *)&v42[2 * v43 + 2];
LABEL_76:
                unint64_t v40 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, v45, v41);
                uint64_t v67 = (google::protobuf::internal *)v40;
                if (!v40) {
                  goto LABEL_113;
                }
                if (*(void *)this <= v40 || *(unsigned char *)v40 != 90) {
                  goto LABEL_88;
                }
              }
              int v44 = *(_DWORD *)(a1 + 84);
              goto LABEL_74;
            case 0xCu:
              if (v8 != 97) {
                goto LABEL_103;
              }
              uint64_t v49 = *(void *)TagFallback;
              unint64_t v11 = (google::protobuf::internal *)((char *)TagFallback + 8);
              v5 |= 0x80u;
              *(void *)(a1 + 176) = v49;
LABEL_82:
              uint64_t v67 = v11;
              goto LABEL_88;
            case 0xDu:
              if (v8 != 106) {
                goto LABEL_103;
              }
              *(_DWORD *)(a1 + 16) |= 0x10u;
              char v9 = *(std::string **)(a1 + 152);
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 152, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_86:
              uint64_t v50 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v9, (std::string::value_type *)TagFallback, (uint64_t)this);
              goto LABEL_87;
            case 0xEu:
              if (v8 != 114) {
                goto LABEL_103;
              }
              unint64_t v51 = (unint64_t)TagFallback - 1;
              break;
            default:
LABEL_103:
              if (v8) {
                BOOL v60 = (v8 & 7) == 4;
              }
              else {
                BOOL v60 = 1;
              }
              if (v60)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
                goto LABEL_3;
              }
              uint64_t v50 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), TagFallback, this);
LABEL_87:
              uint64_t v67 = v50;
              if (!v50)
              {
LABEL_113:
                TagFallbacstd::string::size_type k = 0;
                goto LABEL_3;
              }
LABEL_88:
              if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v67, *((_DWORD *)this + 23)))goto LABEL_2; {
              continue;
              }
          }
          while (1)
          {
            uint64_t v52 = (google::protobuf::internal *)(v51 + 1);
            uint64_t v67 = (google::protobuf::internal *)(v51 + 1);
            uint64_t v53 = *(int **)(a1 + 112);
            if (!v53) {
              break;
            }
            uint64_t v54 = *(int *)(a1 + 104);
            int v55 = *v53;
            if ((int)v54 >= *v53)
            {
              if (v55 == *(_DWORD *)(a1 + 108))
              {
LABEL_97:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 96), v55 + 1);
                uint64_t v53 = *(int **)(a1 + 112);
                int v55 = *v53;
              }
              int *v53 = v55 + 1;
              std::string::size_type v57 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 96));
              LODWORD(v56) = v57;
              uint64_t v58 = *(void *)(a1 + 112);
              uint64_t v59 = *(int *)(a1 + 104);
              *(_DWORD *)(a1 + 104) = v59 + 1;
              *(void *)(v58 + 8 * v59 + 8) = v57;
              uint64_t v52 = v67;
              goto LABEL_99;
            }
            *(_DWORD *)(a1 + 104) = v54 + 1;
            uint64_t v56 = *(void *)&v53[2 * v54 + 2];
LABEL_99:
            unint64_t v51 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, v56, v52);
            uint64_t v67 = (google::protobuf::internal *)v51;
            if (!v51) {
              goto LABEL_113;
            }
            if (*(void *)this <= v51 || *(unsigned char *)v51 != 114) {
              goto LABEL_88;
            }
          }
          int v55 = *(_DWORD *)(a1 + 108);
          goto LABEL_97;
        }
        TagFallbacstd::string::size_type k = (google::protobuf::internal *)((char *)v67 + 2);
      }
      break;
    }
    uint64_t v67 = TagFallback;
    goto LABEL_8;
  }
LABEL_2:
  TagFallbacstd::string::size_type k = v67;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

char *google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(google::protobuf::internal::EpsCopyInputStream *this, uint64_t a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  uint64_t v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    __n128 result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    uint64_t v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  __n128 result = (char *)protobuf::Intelligence_KeyValueParameter::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

unsigned __int8 *protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_KeyValueParameter *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 15), a2);
    if ((v6 & 0x20) == 0)
    {
LABEL_3:
      if ((v6 & 0x40) == 0) {
        goto LABEL_4;
      }
LABEL_39:
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v24 = *((void *)this + 21);
      *uint64_t v4 = 24;
      if (v24 > 0x7F)
      {
        v4[1] = v24 | 0x80;
        unint64_t v45 = v24 >> 7;
        if (v24 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - 1) = v45 | 0x80;
            unint64_t v46 = v45 >> 7;
            ++v4;
            unint64_t v47 = v45 >> 14;
            v45 >>= 7;
          }
          while (v47);
          *(v4 - 1) = v46;
          if ((v6 & 0x200) != 0) {
            goto LABEL_87;
          }
        }
        else
        {
          std::string v4[2] = v45;
          v4 += 3;
          if ((v6 & 0x200) != 0) {
            goto LABEL_87;
          }
        }
      }
      else
      {
        v4[1] = v24;
        v4 += 2;
        if ((v6 & 0x200) != 0) {
          goto LABEL_87;
        }
      }
LABEL_5:
      if ((v6 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  uint64_t v23 = *((void *)this + 20);
  *uint64_t v4 = 17;
  *(void *)(v4 + 1) = v23;
  v4 += 9;
  if ((v6 & 0x40) != 0) {
    goto LABEL_39;
  }
LABEL_4:
  if ((v6 & 0x200) == 0) {
    goto LABEL_5;
  }
LABEL_87:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v48 = *((unsigned char *)this + 185);
  *uint64_t v4 = 32;
  v4[1] = v48;
  v4 += 2;
  if ((v6 & 2) != 0) {
LABEL_6:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 16), v4);
LABEL_7:
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      char v9 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 24, i);
      *uint64_t v4 = 50;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          int v11 = (unsigned __int8 *)(v4 + 3);
          do
          {
            *(v11 - 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          std::string v4[2] = v12;
          int v11 = (unsigned __int8 *)(v4 + 3);
        }
      }
      else
      {
        v4[1] = v10;
        int v11 = (unsigned __int8 *)(v4 + 2);
      }
      uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v9, v11, a3);
    }
  }
  int v15 = *((_DWORD *)this + 14);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v17 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 48, j);
      *uint64_t v4 = 58;
      unsigned int v18 = *((_DWORD *)v17 + 5);
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unsigned int v20 = v18 >> 7;
        if (v18 >> 14)
        {
          unint64_t v19 = (unsigned __int8 *)(v4 + 3);
          do
          {
            *(v19 - 1) = v20 | 0x80;
            unsigned int v21 = v20 >> 7;
            ++v19;
            unsigned int v22 = v20 >> 14;
            v20 >>= 7;
          }
          while (v22);
          *(v19 - 1) = v21;
        }
        else
        {
          std::string v4[2] = v20;
          unint64_t v19 = (unsigned __int8 *)(v4 + 3);
        }
      }
      else
      {
        v4[1] = v18;
        unint64_t v19 = (unsigned __int8 *)(v4 + 2);
      }
      uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v17, v19, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 17), v4);
    if ((v6 & 8) == 0)
    {
LABEL_33:
      if ((v6 & 0x100) == 0) {
        goto LABEL_49;
      }
      goto LABEL_46;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_33;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 9, *((const void ***)this + 18), v4);
  if ((v6 & 0x100) == 0) {
    goto LABEL_49;
  }
LABEL_46:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v25 = *((unsigned char *)this + 184);
  *uint64_t v4 = 80;
  v4[1] = v25;
  v4 += 2;
LABEL_49:
  int v26 = *((_DWORD *)this + 20);
  if (v26)
  {
    for (int k = 0; k != v26; ++k)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v28 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 72, k);
      *uint64_t v4 = 90;
      unsigned int v29 = *((_DWORD *)v28 + 5);
      if (v29 > 0x7F)
      {
        v4[1] = v29 | 0x80;
        unsigned int v31 = v29 >> 7;
        if (v29 >> 14)
        {
          uint64_t v30 = (unsigned __int8 *)(v4 + 3);
          do
          {
            *(v30 - 1) = v31 | 0x80;
            unsigned int v32 = v31 >> 7;
            ++v30;
            unsigned int v33 = v31 >> 14;
            v31 >>= 7;
          }
          while (v33);
          *(v30 - 1) = v32;
        }
        else
        {
          std::string v4[2] = v31;
          uint64_t v30 = (unsigned __int8 *)(v4 + 3);
        }
      }
      else
      {
        v4[1] = v29;
        uint64_t v30 = (unsigned __int8 *)(v4 + 2);
      }
      uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v28, v30, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v34 = *((void *)this + 22);
    *uint64_t v4 = 97;
    *(void *)(v4 + 1) = v34;
    v4 += 9;
  }
  if ((v6 & 0x10) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 13, *((const void ***)this + 19), v4);
  }
  int v35 = *((_DWORD *)this + 26);
  if (v35)
  {
    for (int m = 0; m != v35; ++m)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v37 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 96, m);
      *uint64_t v4 = 114;
      unsigned int v38 = *((_DWORD *)v37 + 5);
      if (v38 > 0x7F)
      {
        v4[1] = v38 | 0x80;
        unsigned int v40 = v38 >> 7;
        if (v38 >> 14)
        {
          int v39 = (unsigned __int8 *)(v4 + 3);
          do
          {
            *(v39 - 1) = v40 | 0x80;
            unsigned int v41 = v40 >> 7;
            ++v39;
            unsigned int v42 = v40 >> 14;
            v40 >>= 7;
          }
          while (v42);
          *(v39 - 1) = v41;
        }
        else
        {
          std::string v4[2] = v40;
          int v39 = (unsigned __int8 *)(v4 + 3);
        }
      }
      else
      {
        v4[1] = v38;
        int v39 = (unsigned __int8 *)(v4 + 2);
      }
      uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v37, v39, a3);
    }
  }
  uint64_t v43 = *((void *)this + 1);
  if ((v43 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v49 = v43 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v49 + 23) < 0)
  {
    unint64_t v51 = *(void **)v49;
    uint64_t v50 = *(void *)(v49 + 8);
  }
  else
  {
    LODWORD(v5siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *(unsigned __int8 *)(v49 + 23);
    unint64_t v51 = (void *)v49;
  }
  if (*(void *)a3 - (void)v4 >= (int)v50)
  {
    uint64_t v52 = (int)v50;
    memcpy(v4, v51, (int)v50);
    v4 += v52;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v51, v50, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_KeyValueParameter::ByteSizeLong(protobuf::Intelligence_KeyValueParameter *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (protobuf::Intelligence_KeyValueParameter **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    int v11 = (protobuf::Intelligence_KeyValueParameter **)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      uint64_t v14 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *((int *)this + 20);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *((void *)this + 11);
  if (v17) {
    unsigned int v18 = (protobuf::Intelligence_KeyValueParameter **)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      unsigned int v20 = *v18++;
      uint64_t v21 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *((int *)this + 26);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *((void *)this + 14);
  if (v24) {
    char v25 = (protobuf::Intelligence_KeyValueParameter **)(v24 + 8);
  }
  else {
    char v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  int v29 = *((_DWORD *)this + 4);
  if ((_BYTE)v29)
  {
    if (v29)
    {
      uint64_t v37 = *((void *)this + 15);
      uint64_t v38 = *(unsigned __int8 *)(v37 + 23);
      uint64_t v39 = *(void *)(v37 + 8);
      if ((v38 & 0x80u) == 0) {
        uint64_t v39 = v38;
      }
      v23 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v29 & 2) == 0)
      {
LABEL_30:
        if ((v29 & 4) == 0) {
          goto LABEL_31;
        }
        goto LABEL_58;
      }
    }
    else if ((v29 & 2) == 0)
    {
      goto LABEL_30;
    }
    uint64_t v40 = *((void *)this + 16);
    uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
    uint64_t v42 = *(void *)(v40 + 8);
    if ((v41 & 0x80u) == 0) {
      uint64_t v42 = v41;
    }
    v23 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 4) == 0)
    {
LABEL_31:
      if ((v29 & 8) == 0) {
        goto LABEL_32;
      }
      goto LABEL_61;
    }
LABEL_58:
    uint64_t v43 = *((void *)this + 17);
    uint64_t v44 = *(unsigned __int8 *)(v43 + 23);
    uint64_t v45 = *(void *)(v43 + 8);
    if ((v44 & 0x80u) == 0) {
      uint64_t v45 = v44;
    }
    v23 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 8) == 0)
    {
LABEL_32:
      if ((v29 & 0x10) == 0)
      {
LABEL_36:
        uint64_t v33 = v23 + 9;
        if ((v29 & 0x20) == 0) {
          uint64_t v33 = v23;
        }
        if ((v29 & 0x40) != 0) {
          v33 += ((9 * (__clz(*((void *)this + 21) | 1) ^ 0x3F) + 73) >> 6) + 1;
        }
        if ((v29 & 0x80) != 0) {
          uint64_t v23 = v33 + 9;
        }
        else {
          uint64_t v23 = v33;
        }
        goto LABEL_43;
      }
LABEL_33:
      uint64_t v30 = *((void *)this + 19);
      uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
      uint64_t v32 = *(void *)(v30 + 8);
      if ((v31 & 0x80u) == 0) {
        uint64_t v32 = v31;
      }
      v23 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
      goto LABEL_36;
    }
LABEL_61:
    uint64_t v46 = *((void *)this + 18);
    uint64_t v47 = *(unsigned __int8 *)(v46 + 23);
    uint64_t v48 = *(void *)(v46 + 8);
    if ((v47 & 0x80u) == 0) {
      uint64_t v48 = v47;
    }
    v23 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 0x10) == 0) {
      goto LABEL_36;
    }
    goto LABEL_33;
  }
LABEL_43:
  uint64_t v34 = v23 + 2;
  if ((v29 & 0x100) == 0) {
    uint64_t v34 = v23;
  }
  if ((v29 & 0x200) != 0) {
    v34 += 2;
  }
  if ((v29 & 0x300) != 0) {
    uint64_t result = v34;
  }
  else {
    uint64_t result = v23;
  }
  uint64_t v36 = *((void *)this + 1);
  if (v36)
  {
    unint64_t v49 = v36 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v49 + 23) < 0) {
      uint64_t v50 = *(void *)(v49 + 8);
    }
    else {
      uint64_t v50 = *(unsigned __int8 *)(v49 + 23);
    }
    result += v50;
  }
  *((_DWORD *)this + 5) = result;
  return result;
}

std::string *protobuf::Intelligence_KeyValueParameter::CheckTypeAndMergeFrom(protobuf::Intelligence_KeyValueParameter *this, const google::protobuf::MessageLite *lpsrc)
{
  return protobuf::Intelligence_KeyValueParameter::MergeFrom(this, lpsrc);
}

std::string *protobuf::Intelligence_KeyValueParameter::MergeFrom(protobuf::Intelligence_KeyValueParameter *this, const protobuf::Intelligence_KeyValueParameter *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 1550);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v18, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((protobuf::Intelligence_KeyValueParameter *)((char *)this + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((protobuf::Intelligence_KeyValueParameter *)((char *)this + 48));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((protobuf::Intelligence_KeyValueParameter *)((char *)this + 72));
  uint64_t result = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((protobuf::Intelligence_KeyValueParameter *)((char *)this + 96));
  int v7 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v7)
  {
    if (v7)
    {
      uint64_t result = (std::string *)((char *)this + 120);
      uint64_t v8 = (std::string *)*((void *)this + 15);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v9 = (const std::string *)*((void *)a2 + 15);
      if (v8 != v9)
      {
        if (v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)result, (uint64_t)v9);
        }
        uint64_t result = std::string::operator=(v8, v9);
      }
    }
    if ((v7 & 2) != 0)
    {
      uint64_t result = (std::string *)((char *)this + 128);
      uint64_t v10 = (std::string *)*((void *)this + 16);
      *((_DWORD *)this + 4) |= 2u;
      int v11 = (const std::string *)*((void *)a2 + 16);
      if (v10 != v11)
      {
        if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)result, (uint64_t)v11);
        }
        uint64_t result = std::string::operator=(v10, v11);
      }
    }
    if ((v7 & 4) != 0)
    {
      uint64_t result = (std::string *)((char *)this + 136);
      uint64_t v12 = (std::string *)*((void *)this + 17);
      *((_DWORD *)this + 4) |= 4u;
      unsigned int v13 = (const std::string *)*((void *)a2 + 17);
      if (v12 != v13)
      {
        if (v12 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)result, (uint64_t)v13);
        }
        uint64_t result = std::string::operator=(v12, v13);
      }
    }
    if ((v7 & 8) != 0)
    {
      uint64_t result = (std::string *)((char *)this + 144);
      uint64_t v14 = (std::string *)*((void *)this + 18);
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v15 = (const std::string *)*((void *)a2 + 18);
      if (v14 != v15)
      {
        if (v14 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)result, (uint64_t)v15);
        }
        uint64_t result = std::string::operator=(v14, v15);
      }
    }
    if ((v7 & 0x10) != 0)
    {
      uint64_t result = (std::string *)((char *)this + 152);
      uint64_t v16 = (std::string *)*((void *)this + 19);
      *((_DWORD *)this + 4) |= 0x10u;
      uint64_t v17 = (const std::string *)*((void *)a2 + 19);
      if (v16 != v17)
      {
        if (v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)result, (uint64_t)v17);
        }
        uint64_t result = std::string::operator=(v16, v17);
      }
    }
    if ((v7 & 0x20) != 0)
    {
      *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((void *)a2 + 20);
      if ((v7 & 0x40) == 0)
      {
LABEL_32:
        if ((v7 & 0x80) == 0)
        {
LABEL_34:
          *((_DWORD *)this + 4) |= v7;
          goto LABEL_35;
        }
LABEL_33:
        *((void *)this + 22) = *((void *)a2 + 22);
        goto LABEL_34;
      }
    }
    else if ((v7 & 0x40) == 0)
    {
      goto LABEL_32;
    }
    *((void *)this + 21) = *((void *)a2 + 21);
    if ((v7 & 0x80) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_35:
  if ((v7 & 0x300) != 0)
  {
    if ((v7 & 0x100) != 0) {
      *((unsigned char *)this + 184) = *((unsigned char *)a2 + 184);
    }
    if ((v7 & 0x200) != 0) {
      *((unsigned char *)this + 185) = *((unsigned char *)a2 + 185);
    }
    *((_DWORD *)this + 4) |= v7;
  }
  return result;
}

void sub_239A4F0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *protobuf::Intelligence_KeyValueParameter::CopyFrom(std::string *this, std::string *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (protobuf::Intelligence_KeyValueParameter *)this;
    protobuf::Intelligence_KeyValueParameter::Clear((protobuf::Intelligence_KeyValueParameter *)this);
    return protobuf::Intelligence_KeyValueParameter::MergeFrom(v4, (const protobuf::Intelligence_KeyValueParameter *)a2);
  }
  return this;
}

uint64_t protobuf::Intelligence_KeyValueParameter::IsInitialized(protobuf::Intelligence_KeyValueParameter *this)
{
  return 1;
}

double protobuf::Intelligence_KeyValueParameter::InternalSwap(protobuf::Intelligence_KeyValueParameter *this, protobuf::Intelligence_KeyValueParameter *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v46;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_40;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_40:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_KeyValueParameter *)((char *)this + 24), (protobuf::Intelligence_KeyValueParameter *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_KeyValueParameter *)((char *)this + 48), (protobuf::Intelligence_KeyValueParameter *)((char *)a2 + 48));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_KeyValueParameter *)((char *)this + 72), (protobuf::Intelligence_KeyValueParameter *)((char *)a2 + 72));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_KeyValueParameter *)((char *)this + 96), (protobuf::Intelligence_KeyValueParameter *)((char *)a2 + 96));
  unsigned int v13 = (uint64_t *)*((void *)this + 15);
  uint64_t v14 = (uint64_t **)((char *)a2 + 120);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 15, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v13 = (uint64_t *)*((void *)this + 15);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 15, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)unsigned int v13 = *(_OWORD *)v15;
  _OWORD v13[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  void v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 16);
  unsigned int v20 = (uint64_t **)((char *)a2 + 128);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 16);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  char v25 = (uint64_t *)*((void *)this + 17);
  uint64_t v26 = (uint64_t **)((char *)a2 + 136);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v25 = (uint64_t *)*((void *)this + 17);
  }
  uint64_t v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)char v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)uint64_t v27 = v29;
  v27[2] = v28;
LABEL_26:
  uint64_t v31 = (uint64_t *)*((void *)this + 18);
  uint64_t v32 = (uint64_t **)((char *)a2 + 144);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v31 = (uint64_t *)*((void *)this + 18);
  }
  uint64_t v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v33 = *v32;
  }
  uint64_t v34 = v31[2];
  long long v35 = *(_OWORD *)v31;
  uint64_t v36 = v33[2];
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v33;
  void v31[2] = v36;
  *(_OWORD *)uint64_t v33 = v35;
  std::string v33[2] = v34;
LABEL_32:
  uint64_t v37 = (uint64_t *)*((void *)this + 19);
  uint64_t v38 = (uint64_t **)((char *)a2 + 152);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_38;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 19, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v37 = (uint64_t *)*((void *)this + 19);
  }
  uint64_t v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 19, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v39 = *v38;
  }
  uint64_t v40 = v37[2];
  long long v41 = *(_OWORD *)v37;
  uint64_t v42 = v39[2];
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v39;
  v37[2] = v42;
  *(_OWORD *)uint64_t v39 = v41;
  v39[2] = v40;
LABEL_38:
  uint64_t v43 = *((void *)this + 20);
  *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((void *)a2 + 20);
  *((void *)a2 + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v43;
  uint64_t v44 = *((void *)this + 21);
  *((void *)this + 21) = *((void *)a2 + 21);
  *((void *)a2 + 21) = v44;
  double result = *((double *)this + 22);
  *((void *)this + 22) = *((void *)a2 + 22);
  *((double *)a2 + 22) = result;
  LOBYTE(v44) = *((unsigned char *)this + 184);
  *((unsigned char *)this + 184) = *((unsigned char *)a2 + 184);
  *((unsigned char *)a2 + 184) = v44;
  LOBYTE(v44) = *((unsigned char *)this + 185);
  *((unsigned char *)this + 185) = *((unsigned char *)a2 + 185);
  *((unsigned char *)a2 + 185) = v44;
  return result;
}

void *protobuf::Intelligence_KeyValueParameter::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.KeyValueParameter");
}

protobuf::Intelligence_Undo *protobuf::Intelligence_Undo::Intelligence_Undo(protobuf::Intelligence_Undo *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED279A0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_Undo_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Undo_intelligence_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_239A4F584(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Undo *protobuf::Intelligence_Undo::Intelligence_Undo(protobuf::Intelligence_Undo *this, const protobuf::Intelligence_Undo *a2)
{
  *(void *)this = &unk_26ED279A0;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 3, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 6);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v6);
    }
  }
  return this;
}

void sub_239A4F65C(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Undo::~Intelligence_Undo(protobuf::Intelligence_Undo *this)
{
  *(void *)this = &unk_26ED279A0;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Undo::~Intelligence_Undo(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Undo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Undo::default_instance(protobuf::Intelligence_Undo *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Undo_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Undo_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Undo_default_instance_;
}

void protobuf::Intelligence_Undo::Clear(protobuf::Intelligence_Undo *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 24);
  if (*((unsigned char *)this + 16))
  {
    uint64_t v2 = *((void *)this + 6);
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  char v4 = *((unsigned char *)this + 8);
  uint64_t v3 = (protobuf::Intelligence_Undo *)((char *)this + 8);
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v3);
  }
}

std::string::value_type *protobuf::Intelligence_Undo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v19 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v19, *((_DWORD *)this + 23));
  double result = (std::string::value_type *)v19;
  if ((v5 & 1) == 0)
  {
    while (1)
    {
      unint64_t v7 = result + 1;
      LODWORD(v8) = *result;
      if ((*result & 0x80000000) == 0) {
        goto LABEL_5;
      }
      unint64_t v8 = (const char *)(v8 + (*v7 << 7) - 128);
      if ((*v7 & 0x80000000) == 0) {
        break;
      }
      double result = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)result, v8);
      uint64_t v19 = (google::protobuf::internal *)result;
      if (!result) {
        return result;
      }
      unint64_t v7 = result;
LABEL_6:
      if (v8 >> 3 == 2)
      {
        if (v8 != 18) {
          goto LABEL_11;
        }
        double result = v7 - 1;
        while (2)
        {
          long long v10 = (google::protobuf::internal *)(result + 1);
          uint64_t v19 = (google::protobuf::internal *)(result + 1);
          uint64_t v11 = *(int **)(a1 + 40);
          if (v11)
          {
            uint64_t v12 = *(int *)(a1 + 32);
            int v13 = *v11;
            if ((int)v12 < *v11)
            {
              *(_DWORD *)(a1 + 32) = v12 + 1;
              uint64_t v14 = *(protobuf::Intelligence_KeyValueParameter **)&v11[2 * v12 + 2];
              goto LABEL_23;
            }
            if (v13 == *(_DWORD *)(a1 + 36))
            {
LABEL_21:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v13 + 1);
              uint64_t v11 = *(int **)(a1 + 40);
              int v13 = *v11;
            }
            int *v11 = v13 + 1;
            uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
            uint64_t v15 = *(void *)(a1 + 40);
            uint64_t v16 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 32) = v16 + 1;
            *(void *)(v15 + 8 * v16 + 8) = v14;
            long long v10 = v19;
LABEL_23:
            double result = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, (uint64_t)v14, v10);
            uint64_t v19 = (google::protobuf::internal *)result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *result != 18) {
              goto LABEL_31;
            }
            continue;
          }
          break;
        }
        int v13 = *(_DWORD *)(a1 + 36);
        goto LABEL_21;
      }
      if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        long long v17 = *(std::string **)(a1 + 48);
        if (v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 48, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        double result = google::protobuf::internal::InlineGreedyStringParser(v17, v7, (uint64_t)this);
        goto LABEL_30;
      }
LABEL_11:
      if (!v8 || (v8 & 7) == 4)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
        return v7;
      }
      double result = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v7, this);
LABEL_30:
      uint64_t v19 = (google::protobuf::internal *)result;
      if (!result) {
        return result;
      }
LABEL_31:
      int v18 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v19, *((_DWORD *)this + 23));
      double result = (std::string::value_type *)v19;
      if (v18) {
        return result;
      }
    }
    unint64_t v7 = result + 2;
LABEL_5:
    uint64_t v19 = (google::protobuf::internal *)v7;
    goto LABEL_6;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_Undo::InternalSerializeWithCachedSizesToArray(const void ***this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  if ((_BYTE)this[2]) {
    char v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, this[6], a2);
  }
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        char v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v8 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)(this + 3), i);
      *char v4 = 18;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        v4[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          long long v10 = v4 + 3;
          do
          {
            *(v10 - 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          std::string v4[2] = v11;
          long long v10 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v9;
        long long v10 = v4 + 2;
      }
      char v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v8, v10, a3);
    }
  }
  unint64_t v14 = (unint64_t)this[1];
  if ((v14 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    int v18 = *(void **)v16;
    uint64_t v17 = *(void *)(v16 + 8);
  }
  else
  {
    LODWORD(v17) = *(unsigned __int8 *)(v16 + 23);
    int v18 = (void *)v16;
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v19 = (int)v17;
    memcpy(v4, v18, (int)v17);
    v4 += v19;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v18, v17, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_Undo::ByteSizeLong(protobuf::Intelligence_Undo *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    char v4 = (protobuf::Intelligence_KeyValueParameter **)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 16))
  {
    uint64_t v8 = *((void *)this + 6);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *((void *)this + 1);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0) {
      uint64_t v14 = *(void *)(v13 + 8);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    }
    v2 += v14;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void protobuf::Intelligence_Undo::CheckTypeAndMergeFrom(protobuf::Intelligence_Undo *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Undo::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Undo::MergeFrom(protobuf::Intelligence_Undo *this, const protobuf::Intelligence_Undo *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 1828);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 3, (uint64_t)a2 + 24);
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v8 = (std::string *)*((void *)this + 6);
    uint64_t v7 = (char *)this + 48;
    int v6 = v8;
    *((_DWORD *)v7 - 8) |= 1u;
    uint64_t v9 = (const std::string *)*((void *)a2 + 6);
    if (v8 != v9)
    {
      if (v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)v9);
      }
      std::string::operator=(v6, v9);
    }
  }
}

void sub_239A4FE44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Undo::CopyFrom(protobuf::Intelligence_Undo *this, const protobuf::Intelligence_Undo *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Undo::Clear(this);
    protobuf::Intelligence_Undo::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Undo::IsInitialized(protobuf::Intelligence_Undo *this)
{
  return 1;
}

__n128 protobuf::Intelligence_Undo::InternalSwap(protobuf::Intelligence_Undo *this, protobuf::Intelligence_Undo *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v21;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_Undo *)((char *)this + 24), (protobuf::Intelligence_Undo *)((char *)a2 + 24));
  unint64_t v16 = (uint64_t *)*((void *)this + 6);
  uint64_t v14 = (std::string **)((char *)this + 48);
  uint64_t v15 = (std::string *)v16;
  uint64_t v17 = (std::string **)((char *)a2 + 48);
  if (v16 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  int v18 = *v17;
  if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v18 = *v17;
  }
  std::string::size_type v19 = v15->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v15->__r_.__value_.__l.__data_;
  std::string::size_type v20 = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v15->__r_.__value_.__r.__words[2] = v20;
  *(__n128 *)&v18->__r_.__value_.__l.__data_ = result;
  v18->__r_.__value_.__r.__words[2] = v19;
  return result;
}

void *protobuf::Intelligence_Undo::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Undo");
}

protobuf::Intelligence_DialogResponse *protobuf::Intelligence_DialogResponse::Intelligence_DialogResponse(protobuf::Intelligence_DialogResponse *this)
{
  *(void *)this = &unk_26ED27A30;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  if (atomic_load_explicit(scc_info_Intelligence_DialogResponse_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_DialogResponse_intelligence_2eproto);
  }
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 19) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 21) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 22) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 23) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 25) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 26) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 27) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 28) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 58) = 0;
  *((_WORD *)this + 118) = 0;
  return this;
}

void sub_239A500BC(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v1 + 12);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 9);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v1 + 6);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v1 + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_DialogResponse *protobuf::Intelligence_DialogResponse::Intelligence_DialogResponse(protobuf::Intelligence_DialogResponse *this, const protobuf::Intelligence_DialogResponse *a2)
{
  *(void *)this = &unk_26ED27A30;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 3, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 6, (uint64_t)a2 + 48);
  *((void *)this + 9) = 0;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((void *)this + 11) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, (uint64_t)a2 + 72);
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 12, (uint64_t)a2 + 96);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 15);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 120, (uint64_t)v7);
    }
  }
  *((void *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 16);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 128, (uint64_t)v8);
    }
  }
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 17);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 136, (uint64_t)v9);
    }
  }
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    long long v10 = (uint64_t *)*((void *)a2 + 18);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 144, (uint64_t)v10);
    }
  }
  *((void *)this + 19) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x10) != 0)
  {
    uint64_t v11 = (uint64_t *)*((void *)a2 + 19);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 152, (uint64_t)v11);
    }
  }
  *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x20) != 0)
  {
    int v12 = (uint64_t *)*((void *)a2 + 20);
    if (v12 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 160, (uint64_t)v12);
    }
  }
  *((void *)this + 21) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x40) != 0)
  {
    unint64_t v13 = (uint64_t *)*((void *)a2 + 21);
    if (v13 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 168, (uint64_t)v13);
    }
  }
  *((void *)this + 22) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x80) != 0)
  {
    uint64_t v14 = (uint64_t *)*((void *)a2 + 22);
    if (v14 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 176, (uint64_t)v14);
    }
  }
  *((void *)this + 23) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x100) != 0)
  {
    uint64_t v15 = (uint64_t *)*((void *)a2 + 23);
    if (v15 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 184, (uint64_t)v15);
    }
  }
  *((void *)this + 24) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x200) != 0)
  {
    unint64_t v16 = (uint64_t *)*((void *)a2 + 24);
    if (v16 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 192, (uint64_t)v16);
    }
  }
  *((void *)this + 25) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x400) != 0)
  {
    uint64_t v17 = (uint64_t *)*((void *)a2 + 25);
    if (v17 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 200, (uint64_t)v17);
    }
  }
  *((void *)this + 26) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x800) != 0)
  {
    int v18 = (uint64_t *)*((void *)a2 + 26);
    if (v18 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 208, (uint64_t)v18);
    }
  }
  *((void *)this + 27) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x1000) != 0)
  {
    std::string::size_type v19 = (uint64_t *)*((void *)a2 + 27);
    if (v19 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 216, (uint64_t)v19);
    }
  }
  *((void *)this + 28) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x2000) != 0)
  {
    std::string::size_type v20 = (uint64_t *)*((void *)a2 + 28);
    if (v20 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 224, (uint64_t)v20);
    }
  }
  int v21 = *((_DWORD *)a2 + 58);
  *((_WORD *)this + 118) = *((_WORD *)a2 + 118);
  *((_DWORD *)this + 58) = v21;
  return this;
}

void sub_239A503C0(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v5);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v4);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v3);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_DialogResponse::~Intelligence_DialogResponse(protobuf::Intelligence_DialogResponse *this)
{
  *(void *)this = &unk_26ED27A30;
  protobuf::Intelligence_DialogResponse::SharedDtor(this);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 12);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 72);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 6);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_DialogResponse::~Intelligence_DialogResponse(this);

  JUMPOUT(0x23ECAACC0);
}

void *protobuf::Intelligence_DialogResponse::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[15];
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = v1[16];
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    this = (void *)MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = v1[17];
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    this = (void *)MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = v1[18];
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    this = (void *)MEMORY[0x23ECAACC0](v8, 0x1012C40EC159624);
  }
  uint64_t v10 = v1[19];
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    this = (void *)MEMORY[0x23ECAACC0](v10, 0x1012C40EC159624);
  }
  uint64_t v11 = v1[20];
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    this = (void *)MEMORY[0x23ECAACC0](v11, 0x1012C40EC159624);
  }
  uint64_t v12 = v1[21];
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string && v12)
  {
    if (*(char *)(v12 + 23) < 0) {
      operator delete(*(void **)v12);
    }
    this = (void *)MEMORY[0x23ECAACC0](v12, 0x1012C40EC159624);
  }
  uint64_t v13 = v1[22];
  if ((uint64_t *)v13 != &google::protobuf::internal::fixed_address_empty_string && v13)
  {
    if (*(char *)(v13 + 23) < 0) {
      operator delete(*(void **)v13);
    }
    this = (void *)MEMORY[0x23ECAACC0](v13, 0x1012C40EC159624);
  }
  uint64_t v14 = v1[23];
  if ((uint64_t *)v14 != &google::protobuf::internal::fixed_address_empty_string && v14)
  {
    if (*(char *)(v14 + 23) < 0) {
      operator delete(*(void **)v14);
    }
    this = (void *)MEMORY[0x23ECAACC0](v14, 0x1012C40EC159624);
  }
  uint64_t v15 = v1[24];
  if ((uint64_t *)v15 != &google::protobuf::internal::fixed_address_empty_string && v15)
  {
    if (*(char *)(v15 + 23) < 0) {
      operator delete(*(void **)v15);
    }
    this = (void *)MEMORY[0x23ECAACC0](v15, 0x1012C40EC159624);
  }
  uint64_t v16 = v1[25];
  if ((uint64_t *)v16 != &google::protobuf::internal::fixed_address_empty_string && v16)
  {
    if (*(char *)(v16 + 23) < 0) {
      operator delete(*(void **)v16);
    }
    this = (void *)MEMORY[0x23ECAACC0](v16, 0x1012C40EC159624);
  }
  uint64_t v17 = v1[26];
  if ((uint64_t *)v17 != &google::protobuf::internal::fixed_address_empty_string && v17)
  {
    if (*(char *)(v17 + 23) < 0) {
      operator delete(*(void **)v17);
    }
    this = (void *)MEMORY[0x23ECAACC0](v17, 0x1012C40EC159624);
  }
  uint64_t v18 = v1[27];
  if ((uint64_t *)v18 != &google::protobuf::internal::fixed_address_empty_string && v18)
  {
    if (*(char *)(v18 + 23) < 0) {
      operator delete(*(void **)v18);
    }
    this = (void *)MEMORY[0x23ECAACC0](v18, 0x1012C40EC159624);
  }
  uint64_t v19 = v1[28];
  if ((uint64_t *)v19 != &google::protobuf::internal::fixed_address_empty_string && v19)
  {
    if (*(char *)(v19 + 23) < 0) {
      operator delete(*(void **)v19);
    }
    JUMPOUT(0x23ECAACC0);
  }
  return this;
}

uint64_t protobuf::Intelligence_DialogResponse::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_DialogResponse::default_instance(protobuf::Intelligence_DialogResponse *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_DialogResponse_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_DialogResponse_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_DialogResponse_default_instance_;
}

void protobuf::Intelligence_DialogResponse::Clear(protobuf::Intelligence_DialogResponse *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 96);
  int v2 = *((_DWORD *)this + 4);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) == 0)
    {
      if ((v2 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      uint64_t v4 = *((void *)this + 16);
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)uint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_23:
      uint64_t v6 = *((void *)this + 18);
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)uint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v2 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v6 = 0;
        *(unsigned char *)(v6 + 23) = 0;
        if ((v2 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
LABEL_31:
      uint64_t v8 = *((void *)this + 20);
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)uint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v2 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v2 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
LABEL_39:
      uint64_t v10 = *((void *)this + 22);
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)uint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
      }
      goto LABEL_42;
    }
    uint64_t v3 = *((void *)this + 15);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    uint64_t v5 = *((void *)this + 17);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    uint64_t v7 = *((void *)this + 19);
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_35:
    uint64_t v9 = *((void *)this + 21);
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    goto LABEL_39;
  }
LABEL_42:
  if ((v2 & 0x3F00) == 0) {
    goto LABEL_73;
  }
  if ((v2 & 0x100) == 0)
  {
    if ((v2 & 0x200) == 0) {
      goto LABEL_45;
    }
LABEL_54:
    uint64_t v12 = *((void *)this + 24);
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)uint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v2 & 0x400) != 0) {
        goto LABEL_58;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v2 & 0x400) != 0) {
        goto LABEL_58;
      }
    }
LABEL_46:
    if ((v2 & 0x800) == 0) {
      goto LABEL_47;
    }
LABEL_62:
    uint64_t v14 = *((void *)this + 26);
    if (*(char *)(v14 + 23) < 0)
    {
      **(unsigned char **)uint64_t v14 = 0;
      *(void *)(v14 + 8) = 0;
      if ((v2 & 0x1000) != 0) {
        goto LABEL_66;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v14 = 0;
      *(unsigned char *)(v14 + 23) = 0;
      if ((v2 & 0x1000) != 0) {
        goto LABEL_66;
      }
    }
LABEL_48:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_70;
  }
  uint64_t v11 = *((void *)this + 23);
  if (*(char *)(v11 + 23) < 0)
  {
    **(unsigned char **)uint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    if ((v2 & 0x200) != 0) {
      goto LABEL_54;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v2 & 0x200) != 0) {
      goto LABEL_54;
    }
  }
LABEL_45:
  if ((v2 & 0x400) == 0) {
    goto LABEL_46;
  }
LABEL_58:
  uint64_t v13 = *((void *)this + 25);
  if (*(char *)(v13 + 23) < 0)
  {
    **(unsigned char **)uint64_t v13 = 0;
    *(void *)(v13 + 8) = 0;
    if ((v2 & 0x800) != 0) {
      goto LABEL_62;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v13 = 0;
    *(unsigned char *)(v13 + 23) = 0;
    if ((v2 & 0x800) != 0) {
      goto LABEL_62;
    }
  }
LABEL_47:
  if ((v2 & 0x1000) == 0) {
    goto LABEL_48;
  }
LABEL_66:
  uint64_t v15 = *((void *)this + 27);
  if (*(char *)(v15 + 23) < 0)
  {
    **(unsigned char **)uint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    if ((v2 & 0x2000) == 0) {
      goto LABEL_73;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
    if ((v2 & 0x2000) == 0) {
      goto LABEL_73;
    }
  }
LABEL_70:
  uint64_t v16 = *((void *)this + 28);
  if (*(char *)(v16 + 23) < 0)
  {
    **(unsigned char **)uint64_t v16 = 0;
    *(void *)(v16 + 8) = 0;
  }
  else
  {
    *(unsigned char *)uint64_t v16 = 0;
    *(unsigned char *)(v16 + 23) = 0;
  }
LABEL_73:
  if ((v2 & 0xC000) != 0)
  {
    *((unsigned char *)this + 236) = 0;
    *((_DWORD *)this + 58) = 0;
  }
  char v18 = *((unsigned char *)this + 8);
  uint64_t v17 = (char *)this + 8;
  v17[229] = 0;
  *((_DWORD *)v17 + 2) = 0;
  if (v18)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear((google::protobuf::internal::InternalMetadataWithArenaLite *)v17);
  }
}

char *protobuf::Intelligence_DialogResponse::_InternalParse(uint64_t a1, char *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v62 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v62, *((_DWORD *)this + 23)) & 1) == 0)
  {
    uint64_t v8 = (uint64_t *)(a1 + 72);
    while (2)
    {
      TagFallbacint k = v62 + 1;
      LODWORD(v9) = *v62;
      if (*v62 < 0)
      {
        uint64_t v9 = (const char *)(v9 + (*TagFallback << 7) - 128);
        if (*TagFallback < 0)
        {
          TagFallbacint k = (char *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)v62, v9);
          uint64_t v62 = TagFallback;
          if (!TagFallback) {
            goto LABEL_3;
          }
LABEL_9:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 10) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v10 = *(std::string **)(a1 + 120);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 120;
              goto LABEL_112;
            case 2u:
              if (v9 != 18) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v10 = *(std::string **)(a1 + 128);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 128;
              goto LABEL_112;
            case 3u:
              if (v9 != 26) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              uint64_t v10 = *(std::string **)(a1 + 136);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 136;
              goto LABEL_112;
            case 4u:
              if (v9 != 34) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 8u;
              uint64_t v10 = *(std::string **)(a1 + 144);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 144;
              goto LABEL_112;
            case 5u:
              if (v9 != 42) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 0x10u;
              uint64_t v10 = *(std::string **)(a1 + 152);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 152;
              goto LABEL_112;
            case 6u:
              if (v9 != 48) {
                goto LABEL_130;
              }
              v5 |= 0x8000u;
              uint64_t v12 = TagFallback + 1;
              unint64_t v13 = *TagFallback;
              if ((*TagFallback & 0x80000000) == 0) {
                goto LABEL_31;
              }
              int v14 = *v12;
              unint64_t v13 = v13 + (v14 << 7) - 128;
              if (v14 < 0)
              {
                uint64_t v56 = (char *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, v13);
                uint64_t v62 = v56;
                *(unsigned char *)(a1 + 236) = v57 != 0;
                if (!v56) {
                  goto LABEL_140;
                }
              }
              else
              {
                uint64_t v12 = TagFallback + 2;
LABEL_31:
                uint64_t v62 = v12;
                *(unsigned char *)(a1 + 236) = v13 != 0;
              }
              goto LABEL_115;
            case 7u:
              if (v9 != 58) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 0x20u;
              uint64_t v10 = *(std::string **)(a1 + 160);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 160;
              goto LABEL_112;
            case 8u:
              if (v9 != 66) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 0x40u;
              uint64_t v10 = *(std::string **)(a1 + 168);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 168;
              goto LABEL_112;
            case 9u:
              if (v9 != 74) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 0x80u;
              uint64_t v10 = *(std::string **)(a1 + 176);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 176;
              goto LABEL_112;
            case 0xAu:
              if (v9 != 80) {
                goto LABEL_130;
              }
              v5 |= 0x4000u;
              uint64_t v16 = TagFallback + 1;
              LODWORD(v15) = *TagFallback;
              if ((v15 & 0x80) == 0) {
                goto LABEL_45;
              }
              int v17 = *v16;
              unint64_t v15 = v15 + (v17 << 7) - 128;
              if (v17 < 0)
              {
                uint64_t v58 = (char *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, v15);
                uint64_t v62 = v58;
                *(_DWORD *)(a1 + 232) = v59;
                if (!v58) {
                  goto LABEL_140;
                }
              }
              else
              {
                uint64_t v16 = TagFallback + 2;
LABEL_45:
                uint64_t v62 = v16;
                *(_DWORD *)(a1 + 232) = v15;
              }
              goto LABEL_115;
            case 0xBu:
              if (v9 != 90) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 0x100u;
              uint64_t v10 = *(std::string **)(a1 + 184);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 184;
              goto LABEL_112;
            case 0xCu:
              if (v9 != 98) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 0x200u;
              uint64_t v10 = *(std::string **)(a1 + 192);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 192;
              goto LABEL_112;
            case 0xDu:
              if (v9 != 106) {
                goto LABEL_130;
              }
              char v18 = TagFallback - 1;
              while (1)
              {
                uint64_t v19 = v18 + 1;
                uint64_t v62 = v18 + 1;
                std::string::size_type v20 = *(int **)(a1 + 40);
                if (!v20) {
                  break;
                }
                uint64_t v21 = *(int *)(a1 + 32);
                int v22 = *v20;
                if ((int)v21 >= *v20)
                {
                  if (v22 == *(_DWORD *)(a1 + 36))
                  {
LABEL_59:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v22 + 1);
                    std::string::size_type v20 = *(int **)(a1 + 40);
                    int v22 = *v20;
                  }
                  *std::string::size_type v20 = v22 + 1;
                  long long v23 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
                  uint64_t v24 = *(void *)(a1 + 40);
                  uint64_t v25 = *(int *)(a1 + 32);
                  *(_DWORD *)(a1 + 32) = v25 + 1;
                  *(void *)(v24 + 8 * v25 + 8) = v23;
                  uint64_t v19 = v62;
                  goto LABEL_61;
                }
                *(_DWORD *)(a1 + 32) = v21 + 1;
                long long v23 = *(protobuf::Intelligence_KeyValueParameter **)&v20[2 * v21 + 2];
LABEL_61:
                char v18 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, (uint64_t)v23, (google::protobuf::internal *)v19);
                uint64_t v62 = v18;
                if (!v18) {
                  goto LABEL_140;
                }
                if (*(void *)this <= (unint64_t)v18 || *v18 != 106) {
                  goto LABEL_115;
                }
              }
              int v22 = *(_DWORD *)(a1 + 36);
              goto LABEL_59;
            case 0xEu:
              if (v9 != 114) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 0x400u;
              uint64_t v10 = *(std::string **)(a1 + 200);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 200;
              goto LABEL_112;
            case 0xFu:
              if (v9 != 122) {
                goto LABEL_130;
              }
              uint64_t v26 = TagFallback - 1;
              while (1)
              {
                uint64_t v27 = v26 + 1;
                uint64_t v62 = v26 + 1;
                uint64_t v28 = *(int **)(a1 + 64);
                if (!v28) {
                  break;
                }
                uint64_t v29 = *(int *)(a1 + 56);
                int v30 = *v28;
                if ((int)v29 >= *v28)
                {
                  if (v30 == *(_DWORD *)(a1 + 60))
                  {
LABEL_75:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v30 + 1);
                    uint64_t v28 = *(int **)(a1 + 64);
                    int v30 = *v28;
                  }
                  int *v28 = v30 + 1;
                  uint64_t v31 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
                  uint64_t v32 = *(void *)(a1 + 64);
                  uint64_t v33 = *(int *)(a1 + 56);
                  *(_DWORD *)(a1 + 56) = v33 + 1;
                  *(void *)(v32 + 8 * v33 + 8) = v31;
                  uint64_t v27 = v62;
                  goto LABEL_77;
                }
                *(_DWORD *)(a1 + 56) = v29 + 1;
                uint64_t v31 = *(protobuf::Intelligence_KeyValueParameter **)&v28[2 * v29 + 2];
LABEL_77:
                uint64_t v26 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, (uint64_t)v31, (google::protobuf::internal *)v27);
                uint64_t v62 = v26;
                if (!v26) {
                  goto LABEL_140;
                }
                if (*(void *)this <= (unint64_t)v26 || *v26 != 122) {
                  goto LABEL_115;
                }
              }
              int v30 = *(_DWORD *)(a1 + 60);
              goto LABEL_75;
            case 0x10u:
              if (v9 != 130) {
                goto LABEL_130;
              }
              uint64_t v34 = TagFallback - 2;
              while (1)
              {
                long long v35 = v34 + 2;
                uint64_t v62 = v34 + 2;
                uint64_t v36 = *(int **)(a1 + 88);
                if (!v36) {
                  break;
                }
                uint64_t v37 = *(int *)(a1 + 80);
                int v38 = *v36;
                if ((int)v37 >= *v36)
                {
                  if (v38 == *(_DWORD *)(a1 + 84))
                  {
LABEL_88:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v38 + 1);
                    uint64_t v36 = *(int **)(a1 + 88);
                    int v38 = *v36;
                  }
                  *uint64_t v36 = v38 + 1;
                  uint64_t v40 = (atomic_ullong *)*v8;
                  if (!*v8) {
                    operator new();
                  }
                  if (v40[14]) {
                  unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v40, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
                  }
                  AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
                  AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
                  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
                  uint64_t v41 = *(void *)(a1 + 88);
                  uint64_t v42 = *(int *)(a1 + 80);
                  *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v42 + 1;
                  *(void *)(v41 + 8 * v42 + 8) = AlignedAndAddCleanup;
                  long long v35 = v62;
                  goto LABEL_94;
                }
                *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v37 + 1;
                unint64_t AlignedAndAddCleanup = *(std::string **)&v36[2 * v37 + 2];
LABEL_94:
                uint64_t v34 = google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v35, (uint64_t)this);
                uint64_t v62 = v34;
                if (!v34) {
                  goto LABEL_140;
                }
                if (*(void *)this <= (unint64_t)v34 || *(_WORD *)v34 != 386) {
                  goto LABEL_115;
                }
              }
              int v38 = *(_DWORD *)(a1 + 84);
              goto LABEL_88;
            case 0x11u:
              if (v9 != 138) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 0x800u;
              uint64_t v10 = *(std::string **)(a1 + 208);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 208;
              goto LABEL_112;
            case 0x12u:
              if (v9 != 146) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 0x1000u;
              uint64_t v10 = *(std::string **)(a1 + 216);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_113;
              }
              uint64_t v11 = a1 + 216;
              goto LABEL_112;
            case 0x13u:
              if (v9 != 152) {
                goto LABEL_130;
              }
              v5 |= 0x10000u;
              uint64_t v43 = TagFallback + 1;
              unint64_t v44 = *TagFallback;
              if ((*TagFallback & 0x80000000) == 0) {
                goto LABEL_108;
              }
              int v45 = *v43;
              unint64_t v44 = v44 + (v45 << 7) - 128;
              if (v45 < 0)
              {
                BOOL v60 = (char *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, v44);
                uint64_t v62 = v60;
                *(unsigned char *)(a1 + 237) = v61 != 0;
                if (!v60) {
                  goto LABEL_140;
                }
              }
              else
              {
                uint64_t v43 = TagFallback + 2;
LABEL_108:
                uint64_t v62 = v43;
                *(unsigned char *)(a1 + 237) = v44 != 0;
              }
              goto LABEL_115;
            case 0x14u:
              if (v9 != 162) {
                goto LABEL_130;
              }
              *(_DWORD *)(a1 + 16) |= 0x2000u;
              uint64_t v10 = *(std::string **)(a1 + 224);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                uint64_t v11 = a1 + 224;
LABEL_112:
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v11, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_113:
              unint64_t v46 = google::protobuf::internal::InlineGreedyStringParser(v10, TagFallback, (uint64_t)this);
              goto LABEL_114;
            case 0x15u:
              if (v9 != 170) {
                goto LABEL_130;
              }
              uint64_t v47 = TagFallback - 2;
              break;
            default:
LABEL_130:
              if (v9) {
                BOOL v55 = (v9 & 7) == 4;
              }
              else {
                BOOL v55 = 1;
              }
              if (v55)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 - 1;
                goto LABEL_3;
              }
              unint64_t v46 = (char *)google::protobuf::internal::UnknownFieldParse(v9, (unint64_t *)(a1 + 8), (google::protobuf::internal *)TagFallback, this);
LABEL_114:
              uint64_t v62 = v46;
              if (!v46)
              {
LABEL_140:
                TagFallbacint k = 0;
                goto LABEL_3;
              }
LABEL_115:
              if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v62, *((_DWORD *)this + 23)))goto LABEL_2; {
              continue;
              }
          }
          while (1)
          {
            uint64_t v48 = v47 + 2;
            uint64_t v62 = v47 + 2;
            unint64_t v49 = *(int **)(a1 + 112);
            if (!v49) {
              break;
            }
            uint64_t v50 = *(int *)(a1 + 104);
            int v51 = *v49;
            if ((int)v50 >= *v49)
            {
              if (v51 == *(_DWORD *)(a1 + 108))
              {
LABEL_124:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 96), v51 + 1);
                unint64_t v49 = *(int **)(a1 + 112);
                int v51 = *v49;
              }
              *unint64_t v49 = v51 + 1;
              uint64_t v52 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 96));
              uint64_t v53 = *(void *)(a1 + 112);
              uint64_t v54 = *(int *)(a1 + 104);
              *(_DWORD *)(a1 + 104) = v54 + 1;
              *(void *)(v53 + 8 * v54 + 8) = v52;
              uint64_t v48 = v62;
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 104) = v50 + 1;
            uint64_t v52 = *(protobuf::Intelligence_KeyValueParameter **)&v49[2 * v50 + 2];
LABEL_126:
            uint64_t v47 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, (uint64_t)v52, (google::protobuf::internal *)v48);
            uint64_t v62 = v47;
            if (!v47) {
              goto LABEL_140;
            }
            if (*(void *)this <= (unint64_t)v47 || *(_WORD *)v47 != 426) {
              goto LABEL_115;
            }
          }
          int v51 = *(_DWORD *)(a1 + 108);
          goto LABEL_124;
        }
        TagFallbacint k = v62 + 2;
      }
      break;
    }
    uint64_t v62 = TagFallback;
    goto LABEL_9;
  }
LABEL_2:
  TagFallbacint k = v62;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_DialogResponse::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_DialogResponse *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 15), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_74;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 16), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 17), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 18), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 19), v4);
  if ((v6 & 0x8000) == 0)
  {
LABEL_7:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_80;
  }
LABEL_77:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v38 = *((unsigned char *)this + 236);
  *uint64_t v4 = 48;
  v4[1] = v38;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_8:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((const void ***)this + 20), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_9:
    if ((v6 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 21), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_10:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_11;
    }
LABEL_83:
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v39 = *((int *)this + 58);
    *uint64_t v4 = 80;
    if (v39 > 0x7F)
    {
      v4[1] = v39 | 0x80;
      unint64_t v41 = v39 >> 7;
      if (v39 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - 1) = v41 | 0x80;
          unint64_t v42 = v41 >> 7;
          ++v4;
          unint64_t v43 = v41 >> 14;
          v41 >>= 7;
        }
        while (v43);
        *(v4 - 1) = v42;
        if ((v6 & 0x100) != 0) {
          goto LABEL_100;
        }
      }
      else
      {
        std::string v4[2] = v41;
        v4 += 3;
        if ((v6 & 0x100) != 0) {
          goto LABEL_100;
        }
      }
    }
    else
    {
      v4[1] = v39;
      v4 += 2;
      if ((v6 & 0x100) != 0) {
        goto LABEL_100;
      }
    }
LABEL_12:
    if ((v6 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_82:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 9, *((const void ***)this + 22), v4);
  if ((v6 & 0x4000) != 0) {
    goto LABEL_83;
  }
LABEL_11:
  if ((v6 & 0x100) == 0) {
    goto LABEL_12;
  }
LABEL_100:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 11, *((const void ***)this + 23), v4);
  if ((v6 & 0x200) != 0) {
LABEL_13:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 12, *((const void ***)this + 24), v4);
LABEL_14:
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v9 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 24, i);
      *uint64_t v4 = 106;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          uint64_t v11 = v4 + 3;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          std::string v4[2] = v12;
          uint64_t v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v9, v11, a3);
    }
  }
  if ((v6 & 0x400) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 14, *((const void ***)this + 25), v4);
  }
  int v15 = *((_DWORD *)this + 14);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v17 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 48, j);
      *uint64_t v4 = 122;
      unsigned int v18 = *((_DWORD *)v17 + 5);
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unsigned int v20 = v18 >> 7;
        if (v18 >> 14)
        {
          uint64_t v19 = v4 + 3;
          do
          {
            *(v19 - 1) = v20 | 0x80;
            unsigned int v21 = v20 >> 7;
            ++v19;
            unsigned int v22 = v20 >> 14;
            v20 >>= 7;
          }
          while (v22);
          *(v19 - 1) = v21;
        }
        else
        {
          std::string v4[2] = v20;
          uint64_t v19 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v18;
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v17, v19, a3);
    }
  }
  int v23 = *((_DWORD *)this + 20);
  if (v23 >= 1)
  {
    for (int k = 0; v23 != k; ++k)
    {
      uint64_t v25 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, k);
      if (*(char *)(v25 + 23) < 0)
      {
        int64_t v26 = *(void *)(v25 + 8);
        if (v26 > 127) {
          goto LABEL_52;
        }
      }
      else
      {
        int64_t v26 = *(unsigned __int8 *)(v25 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v26)
      {
        *(_WORD *)uint64_t v4 = 386;
        std::string v4[2] = v26;
        if (*(char *)(v25 + 23) >= 0) {
          uint64_t v27 = (const void *)v25;
        }
        else {
          uint64_t v27 = *(const void **)v25;
        }
        memcpy(v4 + 3, v27, v26);
        v4 += v26 + 3;
        continue;
      }
LABEL_52:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 16, v25, v4);
    }
  }
  if ((v6 & 0x800) != 0)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 17, *((const void ***)this + 26), v4);
    if ((v6 & 0x1000) == 0)
    {
LABEL_55:
      if ((v6 & 0x10000) == 0) {
        goto LABEL_56;
      }
      goto LABEL_90;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_55;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 18, *((const void ***)this + 27), v4);
  if ((v6 & 0x10000) == 0)
  {
LABEL_56:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_57;
  }
LABEL_90:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v40 = *((unsigned char *)this + 237);
  *(_WORD *)uint64_t v4 = 408;
  std::string v4[2] = v40;
  v4 += 3;
  if ((v6 & 0x2000) != 0) {
LABEL_57:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 20, *((const void ***)this + 28), v4);
LABEL_58:
  int v28 = *((_DWORD *)this + 26);
  if (v28)
  {
    for (int m = 0; m != v28; ++m)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v30 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 96, m);
      *(_WORD *)uint64_t v4 = 426;
      unsigned int v31 = *((_DWORD *)v30 + 5);
      if (v31 > 0x7F)
      {
        std::string v4[2] = v31 | 0x80;
        unsigned int v33 = v31 >> 7;
        if (v31 >> 14)
        {
          uint64_t v32 = v4 + 4;
          do
          {
            *(v32 - 1) = v33 | 0x80;
            unsigned int v34 = v33 >> 7;
            ++v32;
            unsigned int v35 = v33 >> 14;
            v33 >>= 7;
          }
          while (v35);
          *(v32 - 1) = v34;
        }
        else
        {
          v4[3] = v33;
          uint64_t v32 = v4 + 4;
        }
      }
      else
      {
        std::string v4[2] = v31;
        uint64_t v32 = v4 + 3;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v30, v32, a3);
    }
  }
  uint64_t v36 = *((void *)this + 1);
  if ((v36 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v44 = v36 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v44 + 23) < 0)
  {
    unint64_t v46 = *(void **)v44;
    uint64_t v45 = *(void *)(v44 + 8);
  }
  else
  {
    LODWORD(v45) = *(unsigned __int8 *)(v44 + 23);
    unint64_t v46 = (void *)v44;
  }
  if (*(void *)a3 - (void)v4 >= (int)v45)
  {
    uint64_t v47 = (int)v45;
    memcpy(v4, v46, (int)v45);
    v4 += v47;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v46, v45, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_DialogResponse::ByteSizeLong(protobuf::Intelligence_DialogResponse *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (protobuf::Intelligence_KeyValueParameter **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    uint64_t v11 = (protobuf::Intelligence_KeyValueParameter **)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      uint64_t v14 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *((unsigned int *)this + 20);
  uint64_t v16 = v9 + 2 * v15;
  if ((int)v15 >= 1)
  {
    int v17 = 0;
    do
    {
      uint64_t v18 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, v17);
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      if ((v19 & 0x80u) != 0) {
        uint64_t v19 = *(void *)(v18 + 8);
      }
      v16 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      ++v17;
    }
    while (v15 != v17);
  }
  uint64_t v20 = *((int *)this + 26);
  uint64_t v21 = v16 + 2 * v20;
  uint64_t v22 = *((void *)this + 14);
  if (v22) {
    int v23 = (protobuf::Intelligence_KeyValueParameter **)(v22 + 8);
  }
  else {
    int v23 = 0;
  }
  if (v20)
  {
    uint64_t v24 = 8 * v20;
    do
    {
      uint64_t v25 = *v23++;
      uint64_t v26 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v25);
      v21 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      v24 -= 8;
    }
    while (v24);
  }
  int v27 = *((_DWORD *)this + 4);
  if (!(_BYTE)v27) {
    goto LABEL_38;
  }
  if (v27)
  {
    uint64_t v36 = *((void *)this + 15);
    uint64_t v37 = *(unsigned __int8 *)(v36 + 23);
    uint64_t v38 = *(void *)(v36 + 8);
    if ((v37 & 0x80u) == 0) {
      uint64_t v38 = v37;
    }
    v21 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v27 & 2) == 0)
    {
LABEL_29:
      if ((v27 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_63;
    }
  }
  else if ((v27 & 2) == 0)
  {
    goto LABEL_29;
  }
  uint64_t v39 = *((void *)this + 16);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 23);
  uint64_t v41 = *(void *)(v39 + 8);
  if ((v40 & 0x80u) == 0) {
    uint64_t v41 = v40;
  }
  v21 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 4) == 0)
  {
LABEL_30:
    if ((v27 & 8) == 0) {
      goto LABEL_31;
    }
    goto LABEL_66;
  }
LABEL_63:
  uint64_t v42 = *((void *)this + 17);
  uint64_t v43 = *(unsigned __int8 *)(v42 + 23);
  uint64_t v44 = *(void *)(v42 + 8);
  if ((v43 & 0x80u) == 0) {
    uint64_t v44 = v43;
  }
  v21 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 8) == 0)
  {
LABEL_31:
    if ((v27 & 0x10) == 0) {
      goto LABEL_32;
    }
    goto LABEL_69;
  }
LABEL_66:
  uint64_t v45 = *((void *)this + 18);
  uint64_t v46 = *(unsigned __int8 *)(v45 + 23);
  uint64_t v47 = *(void *)(v45 + 8);
  if ((v46 & 0x80u) == 0) {
    uint64_t v47 = v46;
  }
  v21 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x10) == 0)
  {
LABEL_32:
    if ((v27 & 0x20) == 0) {
      goto LABEL_33;
    }
LABEL_72:
    uint64_t v51 = *((void *)this + 20);
    uint64_t v52 = *(unsigned __int8 *)(v51 + 23);
    uint64_t v53 = *(void *)(v51 + 8);
    if ((v52 & 0x80u) == 0) {
      uint64_t v53 = v52;
    }
    v21 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v27 & 0x40) == 0)
    {
LABEL_34:
      if ((v27 & 0x80) == 0) {
        goto LABEL_38;
      }
      goto LABEL_35;
    }
    goto LABEL_75;
  }
LABEL_69:
  uint64_t v48 = *((void *)this + 19);
  uint64_t v49 = *(unsigned __int8 *)(v48 + 23);
  uint64_t v50 = *(void *)(v48 + 8);
  if ((v49 & 0x80u) == 0) {
    uint64_t v50 = v49;
  }
  v21 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x20) != 0) {
    goto LABEL_72;
  }
LABEL_33:
  if ((v27 & 0x40) == 0) {
    goto LABEL_34;
  }
LABEL_75:
  uint64_t v54 = *((void *)this + 21);
  uint64_t v55 = *(unsigned __int8 *)(v54 + 23);
  uint64_t v56 = *(void *)(v54 + 8);
  if ((v55 & 0x80u) == 0) {
    uint64_t v56 = v55;
  }
  v21 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x80) != 0)
  {
LABEL_35:
    uint64_t v28 = *((void *)this + 22);
    uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
    uint64_t v30 = *(void *)(v28 + 8);
    if ((v29 & 0x80u) == 0) {
      uint64_t v30 = v29;
    }
    v21 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_38:
  if ((v27 & 0xFF00) == 0) {
    goto LABEL_52;
  }
  if ((v27 & 0x100) != 0)
  {
    uint64_t v57 = *((void *)this + 23);
    uint64_t v58 = *(unsigned __int8 *)(v57 + 23);
    uint64_t v59 = *(void *)(v57 + 8);
    if ((v58 & 0x80u) == 0) {
      uint64_t v59 = v58;
    }
    v21 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v27 & 0x200) == 0)
    {
LABEL_41:
      if ((v27 & 0x400) == 0) {
        goto LABEL_42;
      }
      goto LABEL_85;
    }
  }
  else if ((v27 & 0x200) == 0)
  {
    goto LABEL_41;
  }
  uint64_t v60 = *((void *)this + 24);
  uint64_t v61 = *(unsigned __int8 *)(v60 + 23);
  uint64_t v62 = *(void *)(v60 + 8);
  if ((v61 & 0x80u) == 0) {
    uint64_t v62 = v61;
  }
  v21 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x400) == 0)
  {
LABEL_42:
    if ((v27 & 0x800) == 0) {
      goto LABEL_43;
    }
    goto LABEL_88;
  }
LABEL_85:
  uint64_t v63 = *((void *)this + 25);
  uint64_t v64 = *(unsigned __int8 *)(v63 + 23);
  uint64_t v65 = *(void *)(v63 + 8);
  if ((v64 & 0x80u) == 0) {
    uint64_t v65 = v64;
  }
  v21 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x800) == 0)
  {
LABEL_43:
    if ((v27 & 0x1000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_91;
  }
LABEL_88:
  uint64_t v66 = *((void *)this + 26);
  uint64_t v67 = *(unsigned __int8 *)(v66 + 23);
  uint64_t v68 = *(void *)(v66 + 8);
  if ((v67 & 0x80u) == 0) {
    uint64_t v68 = v67;
  }
  v21 += v68 + ((9 * (__clz(v68 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v27 & 0x1000) == 0)
  {
LABEL_44:
    if ((v27 & 0x2000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_94;
  }
LABEL_91:
  uint64_t v69 = *((void *)this + 27);
  uint64_t v70 = *(unsigned __int8 *)(v69 + 23);
  uint64_t v71 = *(void *)(v69 + 8);
  if ((v70 & 0x80u) == 0) {
    uint64_t v71 = v70;
  }
  v21 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v27 & 0x2000) == 0)
  {
LABEL_45:
    if ((v27 & 0x4000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_46;
  }
LABEL_94:
  uint64_t v72 = *((void *)this + 28);
  uint64_t v73 = *(unsigned __int8 *)(v72 + 23);
  uint64_t v74 = *(void *)(v72 + 8);
  if ((v73 & 0x80u) == 0) {
    uint64_t v74 = v73;
  }
  v21 += v74 + ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v27 & 0x4000) == 0) {
    goto LABEL_50;
  }
LABEL_46:
  int v31 = *((_DWORD *)this + 58);
  uint64_t v32 = ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v31 >= 0) {
    uint64_t v33 = v32;
  }
  else {
    uint64_t v33 = 11;
  }
  v21 += v33;
LABEL_50:
  if ((v27 & 0x8000) != 0) {
    v21 += 2;
  }
LABEL_52:
  if ((v27 & 0x10000) != 0) {
    uint64_t result = v21 + 3;
  }
  else {
    uint64_t result = v21;
  }
  uint64_t v35 = *((void *)this + 1);
  if (v35)
  {
    unint64_t v75 = v35 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v75 + 23) < 0) {
      uint64_t v76 = *(void *)(v75 + 8);
    }
    else {
      uint64_t v76 = *(unsigned __int8 *)(v75 + 23);
    }
    result += v76;
  }
  *((_DWORD *)this + 5) = result;
  return result;
}

void protobuf::Intelligence_DialogResponse::CheckTypeAndMergeFrom(protobuf::Intelligence_DialogResponse *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_DialogResponse::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_DialogResponse::MergeFrom(protobuf::Intelligence_DialogResponse *this, const protobuf::Intelligence_DialogResponse *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v37, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 2639);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v37, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v36, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v37[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 3, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 6, (uint64_t)a2 + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, (uint64_t)a2 + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 12, (uint64_t)a2 + 96);
  int v6 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v6)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 15);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 15);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 120, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 16);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 16);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 128, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 17);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 17);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 136, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      unsigned int v13 = (std::string *)*((void *)this + 18);
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v14 = (const std::string *)*((void *)a2 + 18);
      if (v13 != v14)
      {
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 144, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      uint64_t v15 = (std::string *)*((void *)this + 19);
      *((_DWORD *)this + 4) |= 0x10u;
      uint64_t v16 = (const std::string *)*((void *)a2 + 19);
      if (v15 != v16)
      {
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 152, (uint64_t)v16);
        }
        std::string::operator=(v15, v16);
      }
    }
    if ((v6 & 0x20) != 0)
    {
      int v17 = (std::string *)*((void *)this + 20);
      *((_DWORD *)this + 4) |= 0x20u;
      uint64_t v18 = (const std::string *)*((void *)a2 + 20);
      if (v17 != v18)
      {
        if (v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 160, (uint64_t)v18);
        }
        std::string::operator=(v17, v18);
      }
    }
    if ((v6 & 0x40) != 0)
    {
      uint64_t v19 = (std::string *)*((void *)this + 21);
      *((_DWORD *)this + 4) |= 0x40u;
      uint64_t v20 = (const std::string *)*((void *)a2 + 21);
      if (v19 != v20)
      {
        if (v19 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 168, (uint64_t)v20);
        }
        std::string::operator=(v19, v20);
      }
    }
    if ((v6 & 0x80) != 0)
    {
      uint64_t v21 = (std::string *)*((void *)this + 22);
      *((_DWORD *)this + 4) |= 0x80u;
      uint64_t v22 = (const std::string *)*((void *)a2 + 22);
      if (v21 != v22)
      {
        if (v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 176, (uint64_t)v22);
        }
        std::string::operator=(v21, v22);
      }
    }
  }
  if ((v6 & 0xFF00) != 0)
  {
    if ((v6 & 0x100) != 0)
    {
      int v23 = (std::string *)*((void *)this + 23);
      *((_DWORD *)this + 4) |= 0x100u;
      uint64_t v24 = (const std::string *)*((void *)a2 + 23);
      if (v23 != v24)
      {
        if (v23 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 184, (uint64_t)v24);
        }
        std::string::operator=(v23, v24);
      }
    }
    if ((v6 & 0x200) != 0)
    {
      uint64_t v25 = (std::string *)*((void *)this + 24);
      *((_DWORD *)this + 4) |= 0x200u;
      uint64_t v26 = (const std::string *)*((void *)a2 + 24);
      if (v25 != v26)
      {
        if (v25 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 192, (uint64_t)v26);
        }
        std::string::operator=(v25, v26);
      }
    }
    if ((v6 & 0x400) != 0)
    {
      int v27 = (std::string *)*((void *)this + 25);
      *((_DWORD *)this + 4) |= 0x400u;
      uint64_t v28 = (const std::string *)*((void *)a2 + 25);
      if (v27 != v28)
      {
        if (v27 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 200, (uint64_t)v28);
        }
        std::string::operator=(v27, v28);
      }
    }
    if ((v6 & 0x800) != 0)
    {
      uint64_t v29 = (std::string *)*((void *)this + 26);
      *((_DWORD *)this + 4) |= 0x800u;
      uint64_t v30 = (const std::string *)*((void *)a2 + 26);
      if (v29 != v30)
      {
        if (v29 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 208, (uint64_t)v30);
        }
        std::string::operator=(v29, v30);
      }
    }
    if ((v6 & 0x1000) != 0)
    {
      int v31 = (std::string *)*((void *)this + 27);
      *((_DWORD *)this + 4) |= 0x1000u;
      uint64_t v32 = (const std::string *)*((void *)a2 + 27);
      if (v31 != v32)
      {
        if (v31 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 216, (uint64_t)v32);
        }
        std::string::operator=(v31, v32);
      }
    }
    if ((v6 & 0x2000) != 0)
    {
      uint64_t v33 = (std::string *)*((void *)this + 28);
      *((_DWORD *)this + 4) |= 0x2000u;
      unsigned int v34 = (const std::string *)*((void *)a2 + 28);
      if (v33 != v34)
      {
        if (v33 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 224, (uint64_t)v34);
        }
        std::string::operator=(v33, v34);
      }
    }
    if ((v6 & 0x4000) != 0) {
      *((_DWORD *)this + 58) = *((_DWORD *)a2 + 58);
    }
    if ((v6 & 0x8000) != 0) {
      *((unsigned char *)this + 236) = *((unsigned char *)a2 + 236);
    }
    *((_DWORD *)this + 4) |= v6;
  }
  if ((v6 & 0x10000) != 0)
  {
    char v35 = *((unsigned char *)a2 + 237);
    *((_DWORD *)this + 4) |= 0x10000u;
    *((unsigned char *)this + 237) = v35;
  }
}

void sub_239A526B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_DialogResponse::CopyFrom(protobuf::Intelligence_DialogResponse *this, const protobuf::Intelligence_DialogResponse *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_DialogResponse::Clear(this);
    protobuf::Intelligence_DialogResponse::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_DialogResponse::IsInitialized(protobuf::Intelligence_DialogResponse *this)
{
  return 1;
}

void protobuf::Intelligence_DialogResponse::InternalSwap(protobuf::Intelligence_DialogResponse *this, protobuf::Intelligence_DialogResponse *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v98;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_94;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_94:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_DialogResponse *)((char *)this + 24), (protobuf::Intelligence_DialogResponse *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_DialogResponse *)((char *)this + 48), (protobuf::Intelligence_DialogResponse *)((char *)a2 + 48));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_DialogResponse *)((char *)this + 72), (protobuf::Intelligence_DialogResponse *)((char *)a2 + 72));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_DialogResponse *)((char *)this + 96), (protobuf::Intelligence_DialogResponse *)((char *)a2 + 96));
  unsigned int v13 = (uint64_t *)*((void *)this + 15);
  uint64_t v14 = (uint64_t **)((char *)a2 + 120);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 15, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v13 = (uint64_t *)*((void *)this + 15);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 15, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)unsigned int v13 = *(_OWORD *)v15;
  _OWORD v13[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  void v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 16);
  uint64_t v20 = (uint64_t **)((char *)a2 + 128);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 16);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  uint64_t v25 = (uint64_t *)*((void *)this + 17);
  uint64_t v26 = (uint64_t **)((char *)a2 + 136);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v25 = (uint64_t *)*((void *)this + 17);
  }
  int v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)int v27 = v29;
  v27[2] = v28;
LABEL_26:
  int v31 = (uint64_t *)*((void *)this + 18);
  uint64_t v32 = (uint64_t **)((char *)a2 + 144);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v31 = (uint64_t *)*((void *)this + 18);
  }
  uint64_t v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v33 = *v32;
  }
  uint64_t v34 = v31[2];
  long long v35 = *(_OWORD *)v31;
  uint64_t v36 = v33[2];
  *(_OWORD *)int v31 = *(_OWORD *)v33;
  void v31[2] = v36;
  *(_OWORD *)uint64_t v33 = v35;
  std::string v33[2] = v34;
LABEL_32:
  uint64_t v37 = (uint64_t *)*((void *)this + 19);
  uint64_t v38 = (uint64_t **)((char *)a2 + 152);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_38;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 19, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v37 = (uint64_t *)*((void *)this + 19);
  }
  uint64_t v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 19, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v39 = *v38;
  }
  uint64_t v40 = v37[2];
  long long v41 = *(_OWORD *)v37;
  uint64_t v42 = v39[2];
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v39;
  std::string v37[2] = v42;
  *(_OWORD *)uint64_t v39 = v41;
  v39[2] = v40;
LABEL_38:
  uint64_t v43 = (uint64_t *)*((void *)this + 20);
  uint64_t v44 = (uint64_t **)((char *)a2 + 160);
  if (v43 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v44 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_44;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 20, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v43 = (uint64_t *)*((void *)this + 20);
  }
  uint64_t v45 = *v44;
  if (*v44 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 20, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v45 = *v44;
  }
  uint64_t v46 = v43[2];
  long long v47 = *(_OWORD *)v43;
  uint64_t v48 = v45[2];
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v45;
  v43[2] = v48;
  *(_OWORD *)uint64_t v45 = v47;
  v45[2] = v46;
LABEL_44:
  uint64_t v49 = (uint64_t *)*((void *)this + 21);
  uint64_t v50 = (uint64_t **)((char *)a2 + 168);
  if (v49 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v50 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_50;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 21, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v49 = (uint64_t *)*((void *)this + 21);
  }
  uint64_t v51 = *v50;
  if (*v50 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 21, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v51 = *v50;
  }
  uint64_t v52 = v49[2];
  long long v53 = *(_OWORD *)v49;
  uint64_t v54 = v51[2];
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v51;
  v49[2] = v54;
  *(_OWORD *)uint64_t v51 = v53;
  v51[2] = v52;
LABEL_50:
  uint64_t v55 = (uint64_t *)*((void *)this + 22);
  uint64_t v56 = (uint64_t **)((char *)a2 + 176);
  if (v55 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v56 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_56;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 22, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v55 = (uint64_t *)*((void *)this + 22);
  }
  uint64_t v57 = *v56;
  if (*v56 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 22, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v57 = *v56;
  }
  uint64_t v58 = v55[2];
  long long v59 = *(_OWORD *)v55;
  uint64_t v60 = v57[2];
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v57;
  v55[2] = v60;
  *(_OWORD *)uint64_t v57 = v59;
  v57[2] = v58;
LABEL_56:
  uint64_t v61 = (uint64_t *)*((void *)this + 23);
  uint64_t v62 = (uint64_t **)((char *)a2 + 184);
  if (v61 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v62 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_62;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 23, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v61 = (uint64_t *)*((void *)this + 23);
  }
  uint64_t v63 = *v62;
  if (*v62 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 23, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v63 = *v62;
  }
  uint64_t v64 = v61[2];
  long long v65 = *(_OWORD *)v61;
  uint64_t v66 = v63[2];
  *(_OWORD *)uint64_t v61 = *(_OWORD *)v63;
  v61[2] = v66;
  *(_OWORD *)uint64_t v63 = v65;
  v63[2] = v64;
LABEL_62:
  uint64_t v67 = (uint64_t *)*((void *)this + 24);
  uint64_t v68 = (uint64_t **)((char *)a2 + 192);
  if (v67 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v68 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_68;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 24, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v67 = (uint64_t *)*((void *)this + 24);
  }
  uint64_t v69 = *v68;
  if (*v68 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 24, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v69 = *v68;
  }
  uint64_t v70 = v67[2];
  long long v71 = *(_OWORD *)v67;
  uint64_t v72 = v69[2];
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v69;
  std::string v67[2] = v72;
  *(_OWORD *)uint64_t v69 = v71;
  v69[2] = v70;
LABEL_68:
  uint64_t v73 = (uint64_t *)*((void *)this + 25);
  uint64_t v74 = (uint64_t **)((char *)a2 + 200);
  if (v73 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v74 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_74;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 25, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v73 = (uint64_t *)*((void *)this + 25);
  }
  unint64_t v75 = *v74;
  if (*v74 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 25, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v75 = *v74;
  }
  uint64_t v76 = v73[2];
  long long v77 = *(_OWORD *)v73;
  uint64_t v78 = v75[2];
  *(_OWORD *)uint64_t v73 = *(_OWORD *)v75;
  v73[2] = v78;
  *(_OWORD *)unint64_t v75 = v77;
  v75[2] = v76;
LABEL_74:
  uint64_t v79 = (uint64_t *)*((void *)this + 26);
  uint64_t v80 = (uint64_t **)((char *)a2 + 208);
  if (v79 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v80 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_80;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 26, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v79 = (uint64_t *)*((void *)this + 26);
  }
  uint64_t v81 = *v80;
  if (*v80 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 26, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v81 = *v80;
  }
  uint64_t v82 = v79[2];
  long long v83 = *(_OWORD *)v79;
  uint64_t v84 = v81[2];
  *(_OWORD *)uint64_t v79 = *(_OWORD *)v81;
  v79[2] = v84;
  *(_OWORD *)uint64_t v81 = v83;
  v81[2] = v82;
LABEL_80:
  uint64_t v85 = (uint64_t *)*((void *)this + 27);
  uint64_t v86 = (uint64_t **)((char *)a2 + 216);
  if (v85 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v86 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_86;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 27, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v85 = (uint64_t *)*((void *)this + 27);
  }
  BOOL v87 = *v86;
  if (*v86 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 27, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    BOOL v87 = *v86;
  }
  uint64_t v88 = v85[2];
  long long v89 = *(_OWORD *)v85;
  uint64_t v90 = v87[2];
  *(_OWORD *)uint64_t v85 = *(_OWORD *)v87;
  v85[2] = v90;
  *(_OWORD *)BOOL v87 = v89;
  v87[2] = v88;
LABEL_86:
  uint64_t v91 = (uint64_t *)*((void *)this + 28);
  uint64_t v92 = (uint64_t **)((char *)a2 + 224);
  if (v91 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v92 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_92;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 28, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v91 = (uint64_t *)*((void *)this + 28);
  }
  uint64_t v93 = *v92;
  if (*v92 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 28, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v93 = *v92;
  }
  uint64_t v94 = v91[2];
  long long v95 = *(_OWORD *)v91;
  uint64_t v96 = v93[2];
  *(_OWORD *)uint64_t v91 = *(_OWORD *)v93;
  v91[2] = v96;
  *(_OWORD *)uint64_t v93 = v95;
  v93[2] = v94;
LABEL_92:
  int v97 = *((_DWORD *)this + 58);
  *((_DWORD *)this + 58) = *((_DWORD *)a2 + 58);
  *((_DWORD *)a2 + 58) = v97;
  LOBYTE(v97) = *((unsigned char *)this + 236);
  *((unsigned char *)this + 236) = *((unsigned char *)a2 + 236);
  *((unsigned char *)a2 + 236) = v97;
  LOBYTE(v97) = *((unsigned char *)this + 237);
  *((unsigned char *)this + 237) = *((unsigned char *)a2 + 237);
  *((unsigned char *)a2 + 237) = v97;
}

void *protobuf::Intelligence_DialogResponse::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.DialogResponse");
}

void protobuf::Intelligence_BehaviorResponse::InitAsDefaultInstance(protobuf::Intelligence_BehaviorResponse *this)
{
  qword_268A0ADB0 = (uint64_t)&protobuf::_Intelligence_Undo_default_instance_;
}

uint64_t protobuf::Intelligence_BehaviorResponse::_Internal::undo(protobuf::Intelligence_BehaviorResponse::_Internal *this, const protobuf::Intelligence_BehaviorResponse *a2)
{
  return *((void *)this + 19);
}

protobuf::Intelligence_BehaviorResponse *protobuf::Intelligence_BehaviorResponse::Intelligence_BehaviorResponse(protobuf::Intelligence_BehaviorResponse *this)
{
  *(void *)this = &unk_26ED27AC0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  if (atomic_load_explicit(scc_info_Intelligence_BehaviorResponse_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_BehaviorResponse_intelligence_2eproto);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 19) = 0;
  *((unsigned char *)this + 16siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  return this;
}

void sub_239A52FE0(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 48);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_BehaviorResponse *protobuf::Intelligence_BehaviorResponse::Intelligence_BehaviorResponse(protobuf::Intelligence_BehaviorResponse *this, const protobuf::Intelligence_BehaviorResponse *a2)
{
  *(void *)this = &unk_26ED27AC0;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 3, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 9);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v7);
    }
  }
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 10);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v8);
    }
  }
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 11);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v9);
    }
  }
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    long long v10 = (uint64_t *)*((void *)a2 + 12);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 96, (uint64_t)v10);
    }
  }
  *((void *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x10) != 0)
  {
    uint64_t v11 = (uint64_t *)*((void *)a2 + 13);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 104, (uint64_t)v11);
    }
  }
  *((void *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x20) != 0)
  {
    int v12 = (uint64_t *)*((void *)a2 + 14);
    if (v12 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 112, (uint64_t)v12);
    }
  }
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x40) != 0)
  {
    unsigned int v13 = (uint64_t *)*((void *)a2 + 15);
    if (v13 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 120, (uint64_t)v13);
    }
  }
  *((void *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x80) != 0)
  {
    uint64_t v14 = (uint64_t *)*((void *)a2 + 16);
    if (v14 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 128, (uint64_t)v14);
    }
  }
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x100) != 0)
  {
    uint64_t v15 = (uint64_t *)*((void *)a2 + 17);
    if (v15 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 136, (uint64_t)v15);
    }
  }
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x200) != 0)
  {
    uint64_t v16 = (uint64_t *)*((void *)a2 + 18);
    if (v16 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 144, (uint64_t)v16);
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (!*((void *)a2 + 19))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 12082);
      long long v17 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: !value || undo_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v17->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 19) = 0;
  *((unsigned char *)this + 16siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 160);
  return this;
}

void sub_239A53290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v5);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v4);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v3);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_BehaviorResponse::~Intelligence_BehaviorResponse(protobuf::Intelligence_BehaviorResponse *this)
{
  *(void *)this = &unk_26ED27AC0;
  uint64_t v2 = *((void *)this + 9);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 10);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 11);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 12);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x23ECAACC0](v8, 0x1012C40EC159624);
  }
  uint64_t v10 = *((void *)this + 13);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    MEMORY[0x23ECAACC0](v10, 0x1012C40EC159624);
  }
  uint64_t v11 = *((void *)this + 14);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    MEMORY[0x23ECAACC0](v11, 0x1012C40EC159624);
  }
  uint64_t v12 = *((void *)this + 15);
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string && v12)
  {
    if (*(char *)(v12 + 23) < 0) {
      operator delete(*(void **)v12);
    }
    MEMORY[0x23ECAACC0](v12, 0x1012C40EC159624);
  }
  uint64_t v13 = *((void *)this + 16);
  if ((uint64_t *)v13 != &google::protobuf::internal::fixed_address_empty_string && v13)
  {
    if (*(char *)(v13 + 23) < 0) {
      operator delete(*(void **)v13);
    }
    MEMORY[0x23ECAACC0](v13, 0x1012C40EC159624);
  }
  uint64_t v14 = *((void *)this + 17);
  if ((uint64_t *)v14 != &google::protobuf::internal::fixed_address_empty_string && v14)
  {
    if (*(char *)(v14 + 23) < 0) {
      operator delete(*(void **)v14);
    }
    MEMORY[0x23ECAACC0](v14, 0x1012C40EC159624);
  }
  uint64_t v15 = *((void *)this + 18);
  if ((uint64_t *)v15 != &google::protobuf::internal::fixed_address_empty_string && v15)
  {
    if (*(char *)(v15 + 23) < 0) {
      operator delete(*(void **)v15);
    }
    MEMORY[0x23ECAACC0](v15, 0x1012C40EC159624);
  }
  if (this != (protobuf::Intelligence_BehaviorResponse *)&protobuf::_Intelligence_BehaviorResponse_default_instance_)
  {
    uint64_t v16 = *((void *)this + 19);
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 48);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_BehaviorResponse::~Intelligence_BehaviorResponse(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_BehaviorResponse::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_BehaviorResponse::default_instance(protobuf::Intelligence_BehaviorResponse *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_BehaviorResponse_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_BehaviorResponse_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_BehaviorResponse_default_instance_;
}

void protobuf::Intelligence_BehaviorResponse::Clear(protobuf::Intelligence_BehaviorResponse *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48);
  int v2 = *((_DWORD *)this + 4);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) == 0)
    {
      if ((v2 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      uint64_t v4 = *((void *)this + 10);
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)uint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_23:
      uint64_t v6 = *((void *)this + 12);
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)uint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v2 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v6 = 0;
        *(unsigned char *)(v6 + 23) = 0;
        if ((v2 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
LABEL_31:
      uint64_t v8 = *((void *)this + 14);
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)uint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v2 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v2 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
LABEL_39:
      uint64_t v10 = *((void *)this + 16);
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)uint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
      }
      goto LABEL_42;
    }
    uint64_t v3 = *((void *)this + 9);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    uint64_t v5 = *((void *)this + 11);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    uint64_t v7 = *((void *)this + 13);
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_35:
    uint64_t v9 = *((void *)this + 15);
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    goto LABEL_39;
  }
LABEL_42:
  if ((v2 & 0x700) == 0) {
    goto LABEL_58;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v11 = *((void *)this + 17);
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)uint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v2 & 0x200) != 0) {
        goto LABEL_51;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v2 & 0x200) != 0) {
        goto LABEL_51;
      }
    }
LABEL_45:
    if ((v2 & 0x400) == 0) {
      goto LABEL_58;
    }
    goto LABEL_55;
  }
  if ((v2 & 0x200) == 0) {
    goto LABEL_45;
  }
LABEL_51:
  uint64_t v12 = *((void *)this + 18);
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)uint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    if ((v2 & 0x400) == 0) {
      goto LABEL_58;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v2 & 0x400) == 0) {
      goto LABEL_58;
    }
  }
LABEL_55:
  uint64_t v13 = (protobuf::Intelligence_Undo *)*((void *)this + 19);
  if (!v13)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 2979);
    uint64_t v14 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: undo_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v14->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    uint64_t v13 = (protobuf::Intelligence_Undo *)*((void *)this + 19);
  }
  protobuf::Intelligence_Undo::Clear(v13);
LABEL_58:
  char v16 = *((unsigned char *)this + 8);
  uint64_t v15 = (char *)this + 8;
  v15[152] = 0;
  *((_DWORD *)v15 + 2) = 0;
  if (v16) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear((google::protobuf::internal::InternalMetadataWithArenaLite *)v15);
  }
}

void sub_239A538F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *protobuf::Intelligence_BehaviorResponse::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  long long v47 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v47, *((_DWORD *)this + 23)) & 1) == 0)
  {
    uint64_t v8 = (uint64_t *)(a1 + 48);
    while (2)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v47 + 1);
      LODWORD(v9) = *(unsigned __int8 *)v47;
      if (*(char *)v47 < 0)
      {
        uint64_t v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v47, v9);
          long long v47 = TagFallback;
          if (!TagFallback) {
            goto LABEL_3;
          }
LABEL_9:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 10) {
                goto LABEL_87;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v10 = *(std::string **)(a1 + 72);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_78;
              }
              uint64_t v11 = a1 + 72;
              goto LABEL_77;
            case 2u:
              if (v9 != 18) {
                goto LABEL_87;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v10 = *(std::string **)(a1 + 80);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_78;
              }
              uint64_t v11 = a1 + 80;
              goto LABEL_77;
            case 3u:
              if (v9 != 26) {
                goto LABEL_87;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              uint64_t v10 = *(std::string **)(a1 + 88);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_78;
              }
              uint64_t v11 = a1 + 88;
              goto LABEL_77;
            case 4u:
              if (v9 != 34) {
                goto LABEL_87;
              }
              *(_DWORD *)(a1 + 16) |= 8u;
              uint64_t v10 = *(std::string **)(a1 + 96);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_78;
              }
              uint64_t v11 = a1 + 96;
              goto LABEL_77;
            case 5u:
              if (v9 != 42) {
                goto LABEL_87;
              }
              *(_DWORD *)(a1 + 16) |= 0x10u;
              uint64_t v10 = *(std::string **)(a1 + 104);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_78;
              }
              uint64_t v11 = a1 + 104;
              goto LABEL_77;
            case 6u:
              if (v9 != 48) {
                goto LABEL_87;
              }
              v5 |= 0x800u;
              uint64_t v12 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v13 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_31;
              }
              int v14 = *(char *)v12;
              unint64_t v13 = v13 + (v14 << 7) - 128;
              if (v14 < 0)
              {
                uint64_t v45 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v13);
                long long v47 = v45;
                *(unsigned char *)(a1 + 16siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v46 != 0;
                if (!v45) {
                  goto LABEL_99;
                }
              }
              else
              {
                uint64_t v12 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_31:
                long long v47 = v12;
                *(unsigned char *)(a1 + 16siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v13 != 0;
              }
              goto LABEL_80;
            case 7u:
              if (v9 != 58) {
                goto LABEL_87;
              }
              *(_DWORD *)(a1 + 16) |= 0x20u;
              uint64_t v10 = *(std::string **)(a1 + 112);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_78;
              }
              uint64_t v11 = a1 + 112;
              goto LABEL_77;
            case 8u:
              if (v9 != 66) {
                goto LABEL_87;
              }
              *(_DWORD *)(a1 + 16) |= 0x40u;
              uint64_t v10 = *(std::string **)(a1 + 120);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_78;
              }
              uint64_t v11 = a1 + 120;
              goto LABEL_77;
            case 9u:
              if (v9 != 74) {
                goto LABEL_87;
              }
              *(_DWORD *)(a1 + 16) |= 0x80u;
              uint64_t v10 = *(std::string **)(a1 + 128);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_78;
              }
              uint64_t v11 = a1 + 128;
              goto LABEL_77;
            case 0xAu:
              if (v9 != 82) {
                goto LABEL_87;
              }
              uint64_t v15 = (char *)TagFallback - 1;
              while (1)
              {
                char v16 = (google::protobuf::internal *)(v15 + 1);
                long long v47 = (google::protobuf::internal *)(v15 + 1);
                char v17 = *(int **)(a1 + 40);
                if (!v17) {
                  break;
                }
                uint64_t v18 = *(int *)(a1 + 32);
                int v19 = *v17;
                if ((int)v18 >= *v17)
                {
                  if (v19 == *(_DWORD *)(a1 + 36))
                  {
LABEL_48:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v19 + 1);
                    char v17 = *(int **)(a1 + 40);
                    int v19 = *v17;
                  }
                  *char v17 = v19 + 1;
                  uint64_t v20 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
                  uint64_t v21 = *(void *)(a1 + 40);
                  uint64_t v22 = *(int *)(a1 + 32);
                  *(_DWORD *)(a1 + 32) = v22 + 1;
                  *(void *)(v21 + 8 * v22 + 8) = v20;
                  char v16 = v47;
                  goto LABEL_50;
                }
                *(_DWORD *)(a1 + 32) = v18 + 1;
                uint64_t v20 = *(protobuf::Intelligence_KeyValueParameter **)&v17[2 * v18 + 2];
LABEL_50:
                uint64_t v15 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, (uint64_t)v20, v16);
                long long v47 = (google::protobuf::internal *)v15;
                if (!v15) {
                  goto LABEL_99;
                }
                if (*(void *)this <= (unint64_t)v15 || *v15 != 82) {
                  goto LABEL_80;
                }
              }
              int v19 = *(_DWORD *)(a1 + 36);
              goto LABEL_48;
            case 0xBu:
              if (v9 != 90) {
                goto LABEL_87;
              }
              long long v23 = (char *)TagFallback - 1;
              break;
            case 0xCu:
              if (v9 != 98) {
                goto LABEL_87;
              }
              *(_DWORD *)(a1 + 16) |= 0x100u;
              uint64_t v10 = *(std::string **)(a1 + 136);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_78;
              }
              uint64_t v11 = a1 + 136;
              goto LABEL_77;
            case 0xDu:
              if (v9 != 106) {
                goto LABEL_87;
              }
              *(_DWORD *)(a1 + 16) |= 0x200u;
              uint64_t v10 = *(std::string **)(a1 + 144);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                uint64_t v11 = a1 + 144;
LABEL_77:
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v11, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_78:
              uint64_t v32 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v10, (std::string::value_type *)TagFallback, (uint64_t)this);
              goto LABEL_79;
            case 0xEu:
              if (v9 != 114) {
                goto LABEL_87;
              }
              *(_DWORD *)(a1 + 16) |= 0x400u;
              uint64_t v33 = *(protobuf::Intelligence_Undo **)(a1 + 152);
              if (!v33)
              {
                uint64_t v33 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Undo>(0);
                *(void *)(a1 + 152) = v33;
                TagFallbacint k = v47;
              }
              unsigned int v34 = *(unsigned __int8 *)TagFallback;
              if (*(char *)TagFallback < 0)
              {
                SizeFallbacint k = google::protobuf::internal::ReadSizeFallback(TagFallback, (const char *)*(unsigned __int8 *)TagFallback);
                if (!SizeFallback) {
                  goto LABEL_99;
                }
                long long v35 = SizeFallback;
                unsigned int v34 = v38;
              }
              else
              {
                long long v35 = (char *)TagFallback + 1;
              }
              int v39 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v35, v34);
              int v40 = *((_DWORD *)this + 22);
              BOOL v41 = __OFSUB__(v40--, 1);
              *((_DWORD *)this + 22) = v40;
              if (v40 < 0 != v41) {
                goto LABEL_99;
              }
              int v42 = v39;
              uint64_t v43 = protobuf::Intelligence_Undo::_InternalParse((uint64_t)v33, (google::protobuf::internal *)v35, this);
              if (!v43) {
                goto LABEL_99;
              }
              ++*((_DWORD *)this + 22);
              if (*((_DWORD *)this + 20)) {
                goto LABEL_99;
              }
              int v44 = *((_DWORD *)this + 7) + v42;
              *((_DWORD *)this + 7) = v44;
              *(void *)this = *((void *)this + 1) + (v44 & (v44 >> 31));
              long long v47 = (google::protobuf::internal *)v43;
              goto LABEL_80;
            default:
LABEL_87:
              if (v9) {
                BOOL v36 = (v9 & 7) == 4;
              }
              else {
                BOOL v36 = 1;
              }
              if (v36)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 - 1;
                goto LABEL_3;
              }
              uint64_t v32 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, (unint64_t *)(a1 + 8), TagFallback, this);
LABEL_79:
              long long v47 = v32;
              if (!v32)
              {
LABEL_99:
                TagFallbacint k = 0;
                goto LABEL_3;
              }
LABEL_80:
              if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v47, *((_DWORD *)this + 23)))goto LABEL_2; {
              continue;
              }
          }
          while (1)
          {
            uint64_t v24 = v23 + 1;
            long long v47 = (google::protobuf::internal *)(v23 + 1);
            uint64_t v25 = *(int **)(a1 + 64);
            if (!v25) {
              break;
            }
            uint64_t v26 = *(int *)(a1 + 56);
            int v27 = *v25;
            if ((int)v26 >= *v25)
            {
              if (v27 == *(_DWORD *)(a1 + 60))
              {
LABEL_61:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v27 + 1);
                uint64_t v25 = *(int **)(a1 + 64);
                int v27 = *v25;
              }
              *uint64_t v25 = v27 + 1;
              long long v29 = (atomic_ullong *)*v8;
              if (!*v8) {
                operator new();
              }
              if (v29[14]) {
              unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v29, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
              }
              AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
              AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
              AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
              uint64_t v30 = *(void *)(a1 + 64);
              uint64_t v31 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v31 + 1;
              *(void *)(v30 + 8 * v31 + 8) = AlignedAndAddCleanup;
              uint64_t v24 = (std::string::value_type *)v47;
              goto LABEL_67;
            }
            *(_DWORD *)(a1 + 56) = v26 + 1;
            unint64_t AlignedAndAddCleanup = *(std::string **)&v25[2 * v26 + 2];
LABEL_67:
            long long v23 = google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v24, (uint64_t)this);
            long long v47 = (google::protobuf::internal *)v23;
            if (!v23) {
              goto LABEL_99;
            }
            if (*(void *)this <= (unint64_t)v23 || *v23 != 90) {
              goto LABEL_80;
            }
          }
          int v27 = *(_DWORD *)(a1 + 60);
          goto LABEL_61;
        }
        TagFallbacint k = (google::protobuf::internal *)((char *)v47 + 2);
      }
      break;
    }
    long long v47 = TagFallback;
    goto LABEL_9;
  }
LABEL_2:
  TagFallbacint k = v47;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_BehaviorResponse::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_BehaviorResponse *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 9), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_42;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 10), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 11), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 12), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 13), v4);
  if ((v6 & 0x800) == 0)
  {
LABEL_7:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_48;
  }
LABEL_45:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v20 = *((unsigned char *)this + 160);
  *uint64_t v4 = 48;
  v4[1] = v20;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_8:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((const void ***)this + 14), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_9:
    if ((v6 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_49:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 15), v4);
  if ((v6 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 9, *((const void ***)this + 16), v4);
LABEL_11:
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v9 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 24, i);
      *uint64_t v4 = 82;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          uint64_t v11 = v4 + 3;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          std::string v4[2] = v12;
          uint64_t v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v9, v11, a3);
    }
  }
  int v15 = *((_DWORD *)this + 14);
  if (v15 >= 1)
  {
    for (int j = 0; v15 != j; ++j)
    {
      uint64_t v17 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, j);
      if (*(char *)(v17 + 23) < 0)
      {
        int64_t v18 = *(void *)(v17 + 8);
        if (v18 > 127) {
          goto LABEL_35;
        }
      }
      else
      {
        int64_t v18 = *(unsigned __int8 *)(v17 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v18)
      {
        *uint64_t v4 = 90;
        v4[1] = v18;
        if (*(char *)(v17 + 23) >= 0) {
          int v19 = (const void *)v17;
        }
        else {
          int v19 = *(const void **)v17;
        }
        memcpy(v4 + 2, v19, v18);
        v4 += v18 + 2;
        continue;
      }
LABEL_35:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 11, v17, v4);
    }
  }
  if ((v6 & 0x100) != 0)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 12, *((const void ***)this + 17), v4);
    if ((v6 & 0x200) == 0)
    {
LABEL_38:
      if ((v6 & 0x400) == 0) {
        goto LABEL_63;
      }
      goto LABEL_53;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_38;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 13, *((const void ***)this + 18), v4);
  if ((v6 & 0x400) == 0) {
    goto LABEL_63;
  }
LABEL_53:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  uint64_t v21 = *((void *)this + 19);
  *uint64_t v4 = 114;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  if (v22 > 0x7F)
  {
    v4[1] = v22 | 0x80;
    unsigned int v24 = v22 >> 7;
    if (v22 >> 14)
    {
      long long v23 = v4 + 3;
      do
      {
        *(v23 - 1) = v24 | 0x80;
        unsigned int v25 = v24 >> 7;
        ++v23;
        unsigned int v26 = v24 >> 14;
        v24 >>= 7;
      }
      while (v26);
      *(v23 - 1) = v25;
    }
    else
    {
      std::string v4[2] = v24;
      long long v23 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v22;
    long long v23 = v4 + 2;
  }
  uint64_t v4 = (char *)protobuf::Intelligence_Undo::InternalSerializeWithCachedSizesToArray((const void ***)v21, v23, a3);
LABEL_63:
  uint64_t v27 = *((void *)this + 1);
  if ((v27 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v29 + 23) < 0)
  {
    uint64_t v31 = *(void **)v29;
    uint64_t v30 = *(void *)(v29 + 8);
  }
  else
  {
    LODWORD(v3siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *(unsigned __int8 *)(v29 + 23);
    uint64_t v31 = (void *)v29;
  }
  if (*(void *)a3 - (void)v4 >= (int)v30)
  {
    uint64_t v32 = (int)v30;
    memcpy(v4, v31, (int)v30);
    v4 += v32;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v31, v30, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_BehaviorResponse::ByteSizeLong(protobuf::Intelligence_BehaviorResponse *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (protobuf::Intelligence_KeyValueParameter **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((unsigned int *)this + 14);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    int v10 = 0;
    do
    {
      uint64_t v11 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, v10);
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      if ((v12 & 0x80u) != 0) {
        uint64_t v12 = *(void *)(v11 + 8);
      }
      v9 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      ++v10;
    }
    while (v8 != v10);
  }
  int v13 = *((_DWORD *)this + 4);
  if (!(_BYTE)v13) {
    goto LABEL_26;
  }
  if (v13)
  {
    uint64_t v20 = *((void *)this + 9);
    uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
    uint64_t v22 = *(void *)(v20 + 8);
    if ((v21 & 0x80u) == 0) {
      uint64_t v22 = v21;
    }
    v9 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v13 & 2) == 0)
    {
LABEL_17:
      if ((v13 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_41;
    }
  }
  else if ((v13 & 2) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v23 = *((void *)this + 10);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
  uint64_t v25 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    uint64_t v25 = v24;
  }
  v9 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 4) == 0)
  {
LABEL_18:
    if ((v13 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v26 = *((void *)this + 11);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
  uint64_t v28 = *(void *)(v26 + 8);
  if ((v27 & 0x80u) == 0) {
    uint64_t v28 = v27;
  }
  v9 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 8) == 0)
  {
LABEL_19:
    if ((v13 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_47;
  }
LABEL_44:
  uint64_t v29 = *((void *)this + 12);
  uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
  uint64_t v31 = *(void *)(v29 + 8);
  if ((v30 & 0x80u) == 0) {
    uint64_t v31 = v30;
  }
  v9 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x10) == 0)
  {
LABEL_20:
    if ((v13 & 0x20) == 0) {
      goto LABEL_21;
    }
LABEL_50:
    uint64_t v35 = *((void *)this + 14);
    uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
    uint64_t v37 = *(void *)(v35 + 8);
    if ((v36 & 0x80u) == 0) {
      uint64_t v37 = v36;
    }
    v9 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v13 & 0x40) == 0)
    {
LABEL_22:
      if ((v13 & 0x80) == 0) {
        goto LABEL_26;
      }
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_47:
  uint64_t v32 = *((void *)this + 13);
  uint64_t v33 = *(unsigned __int8 *)(v32 + 23);
  uint64_t v34 = *(void *)(v32 + 8);
  if ((v33 & 0x80u) == 0) {
    uint64_t v34 = v33;
  }
  v9 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x20) != 0) {
    goto LABEL_50;
  }
LABEL_21:
  if ((v13 & 0x40) == 0) {
    goto LABEL_22;
  }
LABEL_53:
  uint64_t v38 = *((void *)this + 15);
  uint64_t v39 = *(unsigned __int8 *)(v38 + 23);
  uint64_t v40 = *(void *)(v38 + 8);
  if ((v39 & 0x80u) == 0) {
    uint64_t v40 = v39;
  }
  v9 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x80) != 0)
  {
LABEL_23:
    uint64_t v14 = *((void *)this + 16);
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v9 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_26:
  if ((v13 & 0xF00) == 0) {
    goto LABEL_33;
  }
  if ((v13 & 0x100) != 0)
  {
    uint64_t v41 = *((void *)this + 17);
    uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
    uint64_t v43 = *(void *)(v41 + 8);
    if ((v42 & 0x80u) == 0) {
      uint64_t v43 = v42;
    }
    v9 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v13 & 0x200) == 0)
    {
LABEL_29:
      if ((v13 & 0x400) == 0) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }
  }
  else if ((v13 & 0x200) == 0)
  {
    goto LABEL_29;
  }
  uint64_t v44 = *((void *)this + 18);
  uint64_t v45 = *(unsigned __int8 *)(v44 + 23);
  uint64_t v46 = *(void *)(v44 + 8);
  if ((v45 & 0x80u) == 0) {
    uint64_t v46 = v45;
  }
  v9 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x400) == 0) {
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v17 = protobuf::Intelligence_Undo::ByteSizeLong(*((protobuf::Intelligence_Undo **)this + 19));
  v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_31:
  if ((v13 & 0x800) != 0) {
    v9 += 2;
  }
LABEL_33:
  uint64_t v18 = *((void *)this + 1);
  if (v18)
  {
    unint64_t v47 = v18 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v47 + 23) < 0) {
      uint64_t v48 = *(void *)(v47 + 8);
    }
    else {
      uint64_t v48 = *(unsigned __int8 *)(v47 + 23);
    }
    v9 += v48;
  }
  *((_DWORD *)this + 5) = v9;
  return v9;
}

void protobuf::Intelligence_BehaviorResponse::CheckTypeAndMergeFrom(protobuf::Intelligence_BehaviorResponse *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_BehaviorResponse::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_BehaviorResponse::MergeFrom(protobuf::Intelligence_BehaviorResponse *this, const protobuf::Intelligence_BehaviorResponse *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v30, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 3355);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v30, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v29, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v30[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 3, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  int v6 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v6)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 9);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 9);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 10);
      *((_DWORD *)this + 4) |= 2u;
      int v10 = (const std::string *)*((void *)a2 + 10);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 11);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 11);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      int v13 = (std::string *)*((void *)this + 12);
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v14 = (const std::string *)*((void *)a2 + 12);
      if (v13 != v14)
      {
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 96, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      uint64_t v15 = (std::string *)*((void *)this + 13);
      *((_DWORD *)this + 4) |= 0x10u;
      uint64_t v16 = (const std::string *)*((void *)a2 + 13);
      if (v15 != v16)
      {
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 104, (uint64_t)v16);
        }
        std::string::operator=(v15, v16);
      }
    }
    if ((v6 & 0x20) != 0)
    {
      uint64_t v17 = (std::string *)*((void *)this + 14);
      *((_DWORD *)this + 4) |= 0x20u;
      uint64_t v18 = (const std::string *)*((void *)a2 + 14);
      if (v17 != v18)
      {
        if (v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 112, (uint64_t)v18);
        }
        std::string::operator=(v17, v18);
      }
    }
    if ((v6 & 0x40) != 0)
    {
      int v19 = (std::string *)*((void *)this + 15);
      *((_DWORD *)this + 4) |= 0x40u;
      uint64_t v20 = (const std::string *)*((void *)a2 + 15);
      if (v19 != v20)
      {
        if (v19 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 120, (uint64_t)v20);
        }
        std::string::operator=(v19, v20);
      }
    }
    if ((v6 & 0x80) != 0)
    {
      uint64_t v21 = (std::string *)*((void *)this + 16);
      *((_DWORD *)this + 4) |= 0x80u;
      uint64_t v22 = (const std::string *)*((void *)a2 + 16);
      if (v21 != v22)
      {
        if (v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 128, (uint64_t)v22);
        }
        std::string::operator=(v21, v22);
      }
    }
  }
  if ((v6 & 0xF00) != 0)
  {
    if ((v6 & 0x100) != 0)
    {
      uint64_t v23 = (std::string *)*((void *)this + 17);
      *((_DWORD *)this + 4) |= 0x100u;
      uint64_t v24 = (const std::string *)*((void *)a2 + 17);
      if (v23 != v24)
      {
        if (v23 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 136, (uint64_t)v24);
        }
        std::string::operator=(v23, v24);
      }
    }
    if ((v6 & 0x200) != 0)
    {
      uint64_t v25 = (std::string *)*((void *)this + 18);
      *((_DWORD *)this + 4) |= 0x200u;
      uint64_t v26 = (const std::string *)*((void *)a2 + 18);
      if (v25 != v26)
      {
        if (v25 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 144, (uint64_t)v26);
        }
        std::string::operator=(v25, v26);
      }
    }
    if ((v6 & 0x400) != 0)
    {
      *((_DWORD *)this + 4) |= 0x400u;
      uint64_t v27 = (protobuf::Intelligence_Undo *)*((void *)this + 19);
      if (!v27)
      {
        uint64_t v27 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Undo>(0);
        *((void *)this + 19) = v27;
      }
      if (*((void *)a2 + 19)) {
        uint64_t v28 = (const protobuf::Intelligence_Undo *)*((void *)a2 + 19);
      }
      else {
        uint64_t v28 = (const protobuf::Intelligence_Undo *)&protobuf::_Intelligence_Undo_default_instance_;
      }
      protobuf::Intelligence_Undo::MergeFrom(v27, v28);
    }
    if ((v6 & 0x800) != 0) {
      *((unsigned char *)this + 16siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 160);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_239A54CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_BehaviorResponse::CopyFrom(protobuf::Intelligence_BehaviorResponse *this, const protobuf::Intelligence_BehaviorResponse *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_BehaviorResponse::Clear(this);
    protobuf::Intelligence_BehaviorResponse::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_BehaviorResponse::IsInitialized(protobuf::Intelligence_BehaviorResponse *this)
{
  return 1;
}

void protobuf::Intelligence_BehaviorResponse::InternalSwap(protobuf::Intelligence_BehaviorResponse *this, protobuf::Intelligence_BehaviorResponse *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v74;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_70;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_70:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_BehaviorResponse *)((char *)this + 24), (protobuf::Intelligence_BehaviorResponse *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_BehaviorResponse *)((char *)this + 48), (protobuf::Intelligence_BehaviorResponse *)((char *)a2 + 48));
  int v13 = (uint64_t *)*((void *)this + 9);
  uint64_t v14 = (uint64_t **)((char *)a2 + 72);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v13 = (uint64_t *)*((void *)this + 9);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)int v13 = *(_OWORD *)v15;
  _OWORD v13[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  void v15[2] = v16;
LABEL_14:
  int v19 = (uint64_t *)*((void *)this + 10);
  uint64_t v20 = (uint64_t **)((char *)a2 + 80);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v19 = (uint64_t *)*((void *)this + 10);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)int v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  uint64_t v25 = (uint64_t *)*((void *)this + 11);
  uint64_t v26 = (uint64_t **)((char *)a2 + 88);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v25 = (uint64_t *)*((void *)this + 11);
  }
  uint64_t v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)uint64_t v27 = v29;
  v27[2] = v28;
LABEL_26:
  uint64_t v31 = (uint64_t *)*((void *)this + 12);
  uint64_t v32 = (uint64_t **)((char *)a2 + 96);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 12, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v31 = (uint64_t *)*((void *)this + 12);
  }
  uint64_t v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 12, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v33 = *v32;
  }
  uint64_t v34 = v31[2];
  long long v35 = *(_OWORD *)v31;
  uint64_t v36 = v33[2];
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v33;
  void v31[2] = v36;
  *(_OWORD *)uint64_t v33 = v35;
  std::string v33[2] = v34;
LABEL_32:
  uint64_t v37 = (uint64_t *)*((void *)this + 13);
  uint64_t v38 = (uint64_t **)((char *)a2 + 104);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_38;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 13, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v37 = (uint64_t *)*((void *)this + 13);
  }
  uint64_t v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 13, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v39 = *v38;
  }
  uint64_t v40 = v37[2];
  long long v41 = *(_OWORD *)v37;
  uint64_t v42 = v39[2];
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v39;
  std::string v37[2] = v42;
  *(_OWORD *)uint64_t v39 = v41;
  v39[2] = v40;
LABEL_38:
  uint64_t v43 = (uint64_t *)*((void *)this + 14);
  uint64_t v44 = (uint64_t **)((char *)a2 + 112);
  if (v43 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v44 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_44;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v43 = (uint64_t *)*((void *)this + 14);
  }
  uint64_t v45 = *v44;
  if (*v44 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v45 = *v44;
  }
  uint64_t v46 = v43[2];
  long long v47 = *(_OWORD *)v43;
  uint64_t v48 = v45[2];
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v45;
  v43[2] = v48;
  *(_OWORD *)uint64_t v45 = v47;
  v45[2] = v46;
LABEL_44:
  uint64_t v49 = (uint64_t *)*((void *)this + 15);
  uint64_t v50 = (uint64_t **)((char *)a2 + 120);
  if (v49 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v50 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_50;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 15, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v49 = (uint64_t *)*((void *)this + 15);
  }
  uint64_t v51 = *v50;
  if (*v50 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 15, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v51 = *v50;
  }
  uint64_t v52 = v49[2];
  long long v53 = *(_OWORD *)v49;
  uint64_t v54 = v51[2];
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v51;
  v49[2] = v54;
  *(_OWORD *)uint64_t v51 = v53;
  v51[2] = v52;
LABEL_50:
  uint64_t v55 = (uint64_t *)*((void *)this + 16);
  uint64_t v56 = (uint64_t **)((char *)a2 + 128);
  if (v55 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v56 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_56;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v55 = (uint64_t *)*((void *)this + 16);
  }
  uint64_t v57 = *v56;
  if (*v56 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v57 = *v56;
  }
  uint64_t v58 = v55[2];
  long long v59 = *(_OWORD *)v55;
  uint64_t v60 = v57[2];
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v57;
  v55[2] = v60;
  *(_OWORD *)uint64_t v57 = v59;
  v57[2] = v58;
LABEL_56:
  uint64_t v61 = (uint64_t *)*((void *)this + 17);
  uint64_t v62 = (uint64_t **)((char *)a2 + 136);
  if (v61 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v62 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_62;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v61 = (uint64_t *)*((void *)this + 17);
  }
  uint64_t v63 = *v62;
  if (*v62 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v63 = *v62;
  }
  uint64_t v64 = v61[2];
  long long v65 = *(_OWORD *)v61;
  uint64_t v66 = v63[2];
  *(_OWORD *)uint64_t v61 = *(_OWORD *)v63;
  v61[2] = v66;
  *(_OWORD *)uint64_t v63 = v65;
  v63[2] = v64;
LABEL_62:
  uint64_t v67 = (uint64_t *)*((void *)this + 18);
  uint64_t v68 = (uint64_t **)((char *)a2 + 144);
  if (v67 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v68 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_68;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v67 = (uint64_t *)*((void *)this + 18);
  }
  uint64_t v69 = *v68;
  if (*v68 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v69 = *v68;
  }
  uint64_t v70 = v67[2];
  long long v71 = *(_OWORD *)v67;
  uint64_t v72 = v69[2];
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v69;
  std::string v67[2] = v72;
  *(_OWORD *)uint64_t v69 = v71;
  v69[2] = v70;
LABEL_68:
  uint64_t v73 = *((void *)this + 19);
  *((void *)this + 19) = *((void *)a2 + 19);
  *((void *)a2 + 19) = v73;
  LOBYTE(v73) = *((unsigned char *)this + 160);
  *((unsigned char *)this + 16siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 160);
  *((unsigned char *)a2 + 16siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v73;
}

void *protobuf::Intelligence_BehaviorResponse::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.BehaviorResponse");
}

protobuf::Intelligence_ReferenceResponse *protobuf::Intelligence_ReferenceResponse::Intelligence_ReferenceResponse(protobuf::Intelligence_ReferenceResponse *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED27B50;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_ReferenceResponse_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_ReferenceResponse_intelligence_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *((unsigned char *)this + 136) = 0;
  return this;
}

void sub_239A55394(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_ReferenceResponse *protobuf::Intelligence_ReferenceResponse::Intelligence_ReferenceResponse(protobuf::Intelligence_ReferenceResponse *this, const protobuf::Intelligence_ReferenceResponse *a2)
{
  *(void *)this = &unk_26ED27B50;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 6);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v7);
    }
  }
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 7);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v8);
    }
  }
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 8);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v9);
    }
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    long long v10 = (uint64_t *)*((void *)a2 + 9);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v10);
    }
  }
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x10) != 0)
  {
    uint64_t v11 = (uint64_t *)*((void *)a2 + 10);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v11);
    }
  }
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x20) != 0)
  {
    int v12 = (uint64_t *)*((void *)a2 + 11);
    if (v12 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v12);
    }
  }
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x40) != 0)
  {
    int v13 = (uint64_t *)*((void *)a2 + 12);
    if (v13 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 96, (uint64_t)v13);
    }
  }
  *((void *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x80) != 0)
  {
    uint64_t v14 = (uint64_t *)*((void *)a2 + 13);
    if (v14 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 104, (uint64_t)v14);
    }
  }
  *((void *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x100) != 0)
  {
    uint64_t v15 = (uint64_t *)*((void *)a2 + 14);
    if (v15 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 112, (uint64_t)v15);
    }
  }
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x200) != 0)
  {
    uint64_t v16 = (uint64_t *)*((void *)a2 + 15);
    if (v16 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 120, (uint64_t)v16);
    }
  }
  *((void *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x400) != 0)
  {
    long long v17 = (uint64_t *)*((void *)a2 + 16);
    if (v17 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 128, (uint64_t)v17);
    }
  }
  *((unsigned char *)this + 136) = *((unsigned char *)a2 + 136);
  return this;
}

void sub_239A555BC(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_ReferenceResponse::~Intelligence_ReferenceResponse(protobuf::Intelligence_ReferenceResponse *this)
{
  *(void *)this = &unk_26ED27B50;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 8);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 9);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x23ECAACC0](v8, 0x1012C40EC159624);
  }
  uint64_t v10 = *((void *)this + 10);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    MEMORY[0x23ECAACC0](v10, 0x1012C40EC159624);
  }
  uint64_t v11 = *((void *)this + 11);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    MEMORY[0x23ECAACC0](v11, 0x1012C40EC159624);
  }
  uint64_t v12 = *((void *)this + 12);
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string && v12)
  {
    if (*(char *)(v12 + 23) < 0) {
      operator delete(*(void **)v12);
    }
    MEMORY[0x23ECAACC0](v12, 0x1012C40EC159624);
  }
  uint64_t v13 = *((void *)this + 13);
  if ((uint64_t *)v13 != &google::protobuf::internal::fixed_address_empty_string && v13)
  {
    if (*(char *)(v13 + 23) < 0) {
      operator delete(*(void **)v13);
    }
    MEMORY[0x23ECAACC0](v13, 0x1012C40EC159624);
  }
  uint64_t v14 = *((void *)this + 14);
  if ((uint64_t *)v14 != &google::protobuf::internal::fixed_address_empty_string && v14)
  {
    if (*(char *)(v14 + 23) < 0) {
      operator delete(*(void **)v14);
    }
    MEMORY[0x23ECAACC0](v14, 0x1012C40EC159624);
  }
  uint64_t v15 = *((void *)this + 15);
  if ((uint64_t *)v15 != &google::protobuf::internal::fixed_address_empty_string && v15)
  {
    if (*(char *)(v15 + 23) < 0) {
      operator delete(*(void **)v15);
    }
    MEMORY[0x23ECAACC0](v15, 0x1012C40EC159624);
  }
  uint64_t v16 = *((void *)this + 16);
  if ((uint64_t *)v16 != &google::protobuf::internal::fixed_address_empty_string && v16)
  {
    if (*(char *)(v16 + 23) < 0) {
      operator delete(*(void **)v16);
    }
    MEMORY[0x23ECAACC0](v16, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_ReferenceResponse::~Intelligence_ReferenceResponse(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_ReferenceResponse::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_ReferenceResponse::default_instance(protobuf::Intelligence_ReferenceResponse *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_ReferenceResponse_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_ReferenceResponse_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_ReferenceResponse_default_instance_;
}

void protobuf::Intelligence_ReferenceResponse::Clear(protobuf::Intelligence_ReferenceResponse *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  int v2 = *((_DWORD *)this + 4);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) == 0)
    {
      if ((v2 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      uint64_t v4 = *((void *)this + 7);
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)uint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_23:
      uint64_t v6 = *((void *)this + 9);
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)uint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v2 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v6 = 0;
        *(unsigned char *)(v6 + 23) = 0;
        if ((v2 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
LABEL_31:
      uint64_t v8 = *((void *)this + 11);
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)uint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v2 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v2 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
LABEL_39:
      uint64_t v10 = *((void *)this + 13);
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)uint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
      }
      goto LABEL_42;
    }
    uint64_t v3 = *((void *)this + 6);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    uint64_t v5 = *((void *)this + 8);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    uint64_t v7 = *((void *)this + 10);
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_35:
    uint64_t v9 = *((void *)this + 12);
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    goto LABEL_39;
  }
LABEL_42:
  if ((v2 & 0x700) == 0) {
    goto LABEL_58;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v11 = *((void *)this + 14);
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)uint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v2 & 0x200) != 0) {
        goto LABEL_51;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v2 & 0x200) != 0) {
        goto LABEL_51;
      }
    }
LABEL_45:
    if ((v2 & 0x400) == 0) {
      goto LABEL_58;
    }
    goto LABEL_55;
  }
  if ((v2 & 0x200) == 0) {
    goto LABEL_45;
  }
LABEL_51:
  uint64_t v12 = *((void *)this + 15);
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)uint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    if ((v2 & 0x400) == 0) {
      goto LABEL_58;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v2 & 0x400) == 0) {
      goto LABEL_58;
    }
  }
LABEL_55:
  uint64_t v13 = *((void *)this + 16);
  if (*(char *)(v13 + 23) < 0)
  {
    **(unsigned char **)uint64_t v13 = 0;
    *(void *)(v13 + 8) = 0;
  }
  else
  {
    *(unsigned char *)uint64_t v13 = 0;
    *(unsigned char *)(v13 + 23) = 0;
  }
LABEL_58:
  char v15 = *((unsigned char *)this + 8);
  uint64_t v14 = (char *)this + 8;
  v14[128] = 0;
  *((_DWORD *)v14 + 2) = 0;
  if (v15)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear((google::protobuf::internal::InternalMetadataWithArenaLite *)v14);
  }
}

google::protobuf::internal *protobuf::Intelligence_ReferenceResponse::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v28 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v28, *((_DWORD *)this + 23)) & 1) == 0)
  {
    uint64_t v8 = (uint64_t *)(a1 + 24);
    while (2)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v28 + 1);
      LODWORD(v9) = *(unsigned __int8 *)v28;
      if (*(char *)v28 < 0)
      {
        uint64_t v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v28, v9);
          uint64_t v28 = TagFallback;
          if (!TagFallback) {
            goto LABEL_3;
          }
LABEL_9:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 10) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v10 = *(std::string **)(a1 + 48);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 48, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_68;
            case 2u:
              if (v9 != 18) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v10 = *(std::string **)(a1 + 56);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 56, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_68;
            case 3u:
              if (v9 != 26) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              uint64_t v10 = *(std::string **)(a1 + 64);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 64, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_68;
            case 4u:
              if (v9 != 34) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 16) |= 8u;
              uint64_t v10 = *(std::string **)(a1 + 72);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_68;
              }
              uint64_t v11 = a1 + 72;
              goto LABEL_67;
            case 5u:
              if (v9 != 42) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 16) |= 0x10u;
              uint64_t v10 = *(std::string **)(a1 + 80);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_68;
              }
              uint64_t v11 = a1 + 80;
              goto LABEL_67;
            case 6u:
              if (v9 != 48) {
                goto LABEL_72;
              }
              v5 |= 0x800u;
              uint64_t v12 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v13 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_31;
              }
              int v14 = *(char *)v12;
              unint64_t v13 = v13 + (v14 << 7) - 128;
              if (v14 < 0)
              {
                uint64_t v26 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v13);
                uint64_t v28 = v26;
                *(unsigned char *)(a1 + 136) = v27 != 0;
                if (!v26) {
                  goto LABEL_78;
                }
              }
              else
              {
                uint64_t v12 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_31:
                uint64_t v28 = v12;
                *(unsigned char *)(a1 + 136) = v13 != 0;
              }
              goto LABEL_70;
            case 7u:
              if (v9 != 58) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 16) |= 0x20u;
              uint64_t v10 = *(std::string **)(a1 + 88);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_68;
              }
              uint64_t v11 = a1 + 88;
              goto LABEL_67;
            case 8u:
              if (v9 != 66) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 16) |= 0x40u;
              uint64_t v10 = *(std::string **)(a1 + 96);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_68;
              }
              uint64_t v11 = a1 + 96;
              goto LABEL_67;
            case 9u:
              if (v9 != 74) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 16) |= 0x80u;
              uint64_t v10 = *(std::string **)(a1 + 104);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_68;
              }
              uint64_t v11 = a1 + 104;
              goto LABEL_67;
            case 0xAu:
              if (v9 != 82) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 16) |= 0x100u;
              uint64_t v10 = *(std::string **)(a1 + 112);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_68;
              }
              uint64_t v11 = a1 + 112;
              goto LABEL_67;
            case 0xBu:
              if (v9 != 90) {
                goto LABEL_72;
              }
              char v15 = (char *)TagFallback - 1;
              break;
            case 0xCu:
              if (v9 != 98) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 16) |= 0x200u;
              uint64_t v10 = *(std::string **)(a1 + 120);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_68;
              }
              uint64_t v11 = a1 + 120;
              goto LABEL_67;
            case 0xDu:
              if (v9 != 106) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 16) |= 0x400u;
              uint64_t v10 = *(std::string **)(a1 + 128);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                uint64_t v11 = a1 + 128;
LABEL_67:
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v11, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_68:
              uint64_t v24 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v10, (std::string::value_type *)TagFallback, (uint64_t)this);
              goto LABEL_69;
            default:
LABEL_72:
              if (v9) {
                BOOL v25 = (v9 & 7) == 4;
              }
              else {
                BOOL v25 = 1;
              }
              if (v25)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 - 1;
                goto LABEL_3;
              }
              uint64_t v24 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, (unint64_t *)(a1 + 8), TagFallback, this);
LABEL_69:
              uint64_t v28 = v24;
              if (!v24)
              {
LABEL_78:
                TagFallbacint k = 0;
                goto LABEL_3;
              }
LABEL_70:
              if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v28, *((_DWORD *)this + 23)))goto LABEL_2; {
              continue;
              }
          }
          while (1)
          {
            uint64_t v16 = v15 + 1;
            uint64_t v28 = (google::protobuf::internal *)(v15 + 1);
            long long v17 = *(int **)(a1 + 40);
            if (!v17) {
              break;
            }
            uint64_t v18 = *(int *)(a1 + 32);
            int v19 = *v17;
            if ((int)v18 >= *v17)
            {
              if (v19 == *(_DWORD *)(a1 + 36))
              {
LABEL_51:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v19 + 1);
                long long v17 = *(int **)(a1 + 40);
                int v19 = *v17;
              }
              *long long v17 = v19 + 1;
              uint64_t v21 = (atomic_ullong *)*v8;
              if (!*v8) {
                operator new();
              }
              if (v21[14]) {
              unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v21, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
              }
              AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
              AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
              AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
              uint64_t v22 = *(void *)(a1 + 40);
              uint64_t v23 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + 32) = v23 + 1;
              *(void *)(v22 + 8 * v23 + 8) = AlignedAndAddCleanup;
              uint64_t v16 = (std::string::value_type *)v28;
              goto LABEL_57;
            }
            *(_DWORD *)(a1 + 32) = v18 + 1;
            unint64_t AlignedAndAddCleanup = *(std::string **)&v17[2 * v18 + 2];
LABEL_57:
            char v15 = google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v16, (uint64_t)this);
            uint64_t v28 = (google::protobuf::internal *)v15;
            if (!v15) {
              goto LABEL_78;
            }
            if (*(void *)this <= (unint64_t)v15 || *v15 != 90) {
              goto LABEL_70;
            }
          }
          int v19 = *(_DWORD *)(a1 + 36);
          goto LABEL_51;
        }
        TagFallbacint k = (google::protobuf::internal *)((char *)v28 + 2);
      }
      break;
    }
    uint64_t v28 = TagFallback;
    goto LABEL_9;
  }
LABEL_2:
  TagFallbacint k = v28;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_ReferenceResponse::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_ReferenceResponse *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 6), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 7), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 8), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 9), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 10), v4);
  if ((v6 & 0x800) == 0)
  {
LABEL_7:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_36:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v14 = *((unsigned char *)this + 136);
  *uint64_t v4 = 48;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_8:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((const void ***)this + 11), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_9:
    if ((v6 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 12), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_10:
    if ((v6 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_41:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 9, *((const void ***)this + 13), v4);
  if ((v6 & 0x100) != 0) {
LABEL_11:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 10, *((const void ***)this + 14), v4);
LABEL_12:
  int v7 = *((_DWORD *)this + 8);
  if (v7 >= 1)
  {
    for (int i = 0; v7 != i; ++i)
    {
      uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, i);
      if (*(char *)(v9 + 23) < 0)
      {
        int64_t v10 = *(void *)(v9 + 8);
        if (v10 > 127) {
          goto LABEL_24;
        }
      }
      else
      {
        int64_t v10 = *(unsigned __int8 *)(v9 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v10)
      {
        *uint64_t v4 = 90;
        v4[1] = v10;
        if (*(char *)(v9 + 23) >= 0) {
          uint64_t v11 = (const void *)v9;
        }
        else {
          uint64_t v11 = *(const void **)v9;
        }
        memcpy(v4 + 2, v11, v10);
        v4 += v10 + 2;
        continue;
      }
LABEL_24:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 11, v9, v4);
    }
  }
  if ((v6 & 0x200) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 12, *((const void ***)this + 15), v4);
  }
  if ((v6 & 0x400) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 13, *((const void ***)this + 16), v4);
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v15 = v12 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    long long v17 = *(void **)v15;
    uint64_t v16 = *(void *)(v15 + 8);
  }
  else
  {
    LODWORD(v16) = *(unsigned __int8 *)(v15 + 23);
    long long v17 = (void *)v15;
  }
  if (*(void *)a3 - (void)v4 >= (int)v16)
  {
    uint64_t v18 = (int)v16;
    memcpy(v4, v17, (int)v16);
    v4 += v18;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v17, v16, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_ReferenceResponse::ByteSizeLong(protobuf::Intelligence_ReferenceResponse *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 8);
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v3);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      if ((v6 & 0x80u) != 0) {
        uint64_t v6 = *(void *)(v5 + 8);
      }
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  int v7 = *((_DWORD *)this + 4);
  if (!(_BYTE)v7) {
    goto LABEL_20;
  }
  if (v7)
  {
    uint64_t v16 = *((void *)this + 6);
    uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
    uint64_t v18 = *(void *)(v16 + 8);
    if ((v17 & 0x80u) == 0) {
      uint64_t v18 = v17;
    }
    v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 2) == 0)
    {
LABEL_11:
      if ((v7 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_37;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_11;
  }
  uint64_t v19 = *((void *)this + 7);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 4) == 0)
  {
LABEL_12:
    if ((v7 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_37:
  uint64_t v22 = *((void *)this + 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v4 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 8) == 0)
  {
LABEL_13:
    if ((v7 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }
LABEL_40:
  uint64_t v25 = *((void *)this + 9);
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  v4 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x10) == 0)
  {
LABEL_14:
    if ((v7 & 0x20) == 0) {
      goto LABEL_15;
    }
LABEL_46:
    uint64_t v31 = *((void *)this + 11);
    uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
    uint64_t v33 = *(void *)(v31 + 8);
    if ((v32 & 0x80u) == 0) {
      uint64_t v33 = v32;
    }
    v4 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 0x40) == 0)
    {
LABEL_16:
      if ((v7 & 0x80) == 0) {
        goto LABEL_20;
      }
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_43:
  uint64_t v28 = *((void *)this + 10);
  uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
  uint64_t v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    uint64_t v30 = v29;
  }
  v4 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x20) != 0) {
    goto LABEL_46;
  }
LABEL_15:
  if ((v7 & 0x40) == 0) {
    goto LABEL_16;
  }
LABEL_49:
  uint64_t v34 = *((void *)this + 12);
  uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
  uint64_t v36 = *(void *)(v34 + 8);
  if ((v35 & 0x80u) == 0) {
    uint64_t v36 = v35;
  }
  v4 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x80) != 0)
  {
LABEL_17:
    uint64_t v8 = *((void *)this + 13);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_20:
  if ((v7 & 0xF00) == 0) {
    goto LABEL_29;
  }
  if ((v7 & 0x100) == 0)
  {
    if ((v7 & 0x200) == 0) {
      goto LABEL_23;
    }
LABEL_56:
    uint64_t v40 = *((void *)this + 15);
    uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
    uint64_t v42 = *(void *)(v40 + 8);
    if ((v41 & 0x80u) == 0) {
      uint64_t v42 = v41;
    }
    v4 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 0x400) == 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
  uint64_t v37 = *((void *)this + 14);
  uint64_t v38 = *(unsigned __int8 *)(v37 + 23);
  uint64_t v39 = *(void *)(v37 + 8);
  if ((v38 & 0x80u) == 0) {
    uint64_t v39 = v38;
  }
  v4 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x200) != 0) {
    goto LABEL_56;
  }
LABEL_23:
  if ((v7 & 0x400) != 0)
  {
LABEL_24:
    uint64_t v11 = *((void *)this + 16);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_27:
  if ((v7 & 0x800) != 0) {
    v4 += 2;
  }
LABEL_29:
  uint64_t v14 = *((void *)this + 1);
  if (v14)
  {
    unint64_t v43 = v14 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v43 + 23) < 0) {
      uint64_t v44 = *(void *)(v43 + 8);
    }
    else {
      uint64_t v44 = *(unsigned __int8 *)(v43 + 23);
    }
    v4 += v44;
  }
  *((_DWORD *)this + 5) = v4;
  return v4;
}

void protobuf::Intelligence_ReferenceResponse::CheckTypeAndMergeFrom(protobuf::Intelligence_ReferenceResponse *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_ReferenceResponse::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_ReferenceResponse::MergeFrom(protobuf::Intelligence_ReferenceResponse *this, const protobuf::Intelligence_ReferenceResponse *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v30, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 3998);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v30, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v29, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v30[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  int v6 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v6)
  {
    if (v6)
    {
      int v7 = (std::string *)*((void *)this + 6);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 6);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 7);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 7);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 8);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 8);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      uint64_t v13 = (std::string *)*((void *)this + 9);
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v14 = (const std::string *)*((void *)a2 + 9);
      if (v13 != v14)
      {
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      unint64_t v15 = (std::string *)*((void *)this + 10);
      *((_DWORD *)this + 4) |= 0x10u;
      uint64_t v16 = (const std::string *)*((void *)a2 + 10);
      if (v15 != v16)
      {
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v16);
        }
        std::string::operator=(v15, v16);
      }
    }
    if ((v6 & 0x20) != 0)
    {
      uint64_t v17 = (std::string *)*((void *)this + 11);
      *((_DWORD *)this + 4) |= 0x20u;
      uint64_t v18 = (const std::string *)*((void *)a2 + 11);
      if (v17 != v18)
      {
        if (v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v18);
        }
        std::string::operator=(v17, v18);
      }
    }
    if ((v6 & 0x40) != 0)
    {
      uint64_t v19 = (std::string *)*((void *)this + 12);
      *((_DWORD *)this + 4) |= 0x40u;
      uint64_t v20 = (const std::string *)*((void *)a2 + 12);
      if (v19 != v20)
      {
        if (v19 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 96, (uint64_t)v20);
        }
        std::string::operator=(v19, v20);
      }
    }
    if ((v6 & 0x80) != 0)
    {
      uint64_t v21 = (std::string *)*((void *)this + 13);
      *((_DWORD *)this + 4) |= 0x80u;
      uint64_t v22 = (const std::string *)*((void *)a2 + 13);
      if (v21 != v22)
      {
        if (v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 104, (uint64_t)v22);
        }
        std::string::operator=(v21, v22);
      }
    }
  }
  if ((v6 & 0xF00) != 0)
  {
    if ((v6 & 0x100) != 0)
    {
      uint64_t v23 = (std::string *)*((void *)this + 14);
      *((_DWORD *)this + 4) |= 0x100u;
      uint64_t v24 = (const std::string *)*((void *)a2 + 14);
      if (v23 != v24)
      {
        if (v23 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 112, (uint64_t)v24);
        }
        std::string::operator=(v23, v24);
      }
    }
    if ((v6 & 0x200) != 0)
    {
      uint64_t v25 = (std::string *)*((void *)this + 15);
      *((_DWORD *)this + 4) |= 0x200u;
      uint64_t v26 = (const std::string *)*((void *)a2 + 15);
      if (v25 != v26)
      {
        if (v25 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 120, (uint64_t)v26);
        }
        std::string::operator=(v25, v26);
      }
    }
    if ((v6 & 0x400) != 0)
    {
      uint64_t v27 = (std::string *)*((void *)this + 16);
      *((_DWORD *)this + 4) |= 0x400u;
      uint64_t v28 = (const std::string *)*((void *)a2 + 16);
      if (v27 != v28)
      {
        if (v27 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 128, (uint64_t)v28);
        }
        std::string::operator=(v27, v28);
      }
    }
    if ((v6 & 0x800) != 0) {
      *((unsigned char *)this + 136) = *((unsigned char *)a2 + 136);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_239A56C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_ReferenceResponse::CopyFrom(protobuf::Intelligence_ReferenceResponse *this, const protobuf::Intelligence_ReferenceResponse *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_ReferenceResponse::Clear(this);
    protobuf::Intelligence_ReferenceResponse::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_ReferenceResponse::IsInitialized(protobuf::Intelligence_ReferenceResponse *this)
{
  return 1;
}

void protobuf::Intelligence_ReferenceResponse::InternalSwap(protobuf::Intelligence_ReferenceResponse *this, protobuf::Intelligence_ReferenceResponse *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v80;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_76;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_76:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_ReferenceResponse *)((char *)this + 24), (protobuf::Intelligence_ReferenceResponse *)((char *)a2 + 24));
  uint64_t v13 = (uint64_t *)*((void *)this + 6);
  uint64_t v14 = (uint64_t **)((char *)a2 + 48);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v13 = (uint64_t *)*((void *)this + 6);
  }
  unint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v15;
  _OWORD v13[2] = v18;
  *(_OWORD *)unint64_t v15 = v17;
  void v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 7);
  uint64_t v20 = (uint64_t **)((char *)a2 + 56);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 7);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  uint64_t v25 = (uint64_t *)*((void *)this + 8);
  uint64_t v26 = (uint64_t **)((char *)a2 + 64);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v25 = (uint64_t *)*((void *)this + 8);
  }
  uint64_t v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)uint64_t v27 = v29;
  v27[2] = v28;
LABEL_26:
  uint64_t v31 = (uint64_t *)*((void *)this + 9);
  uint64_t v32 = (uint64_t **)((char *)a2 + 72);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v31 = (uint64_t *)*((void *)this + 9);
  }
  uint64_t v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v33 = *v32;
  }
  uint64_t v34 = v31[2];
  long long v35 = *(_OWORD *)v31;
  uint64_t v36 = v33[2];
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v33;
  void v31[2] = v36;
  *(_OWORD *)uint64_t v33 = v35;
  std::string v33[2] = v34;
LABEL_32:
  uint64_t v37 = (uint64_t *)*((void *)this + 10);
  uint64_t v38 = (uint64_t **)((char *)a2 + 80);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_38;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v37 = (uint64_t *)*((void *)this + 10);
  }
  uint64_t v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v39 = *v38;
  }
  uint64_t v40 = v37[2];
  long long v41 = *(_OWORD *)v37;
  uint64_t v42 = v39[2];
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v39;
  std::string v37[2] = v42;
  *(_OWORD *)uint64_t v39 = v41;
  v39[2] = v40;
LABEL_38:
  unint64_t v43 = (uint64_t *)*((void *)this + 11);
  uint64_t v44 = (uint64_t **)((char *)a2 + 88);
  if (v43 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v44 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_44;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v43 = (uint64_t *)*((void *)this + 11);
  }
  uint64_t v45 = *v44;
  if (*v44 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v45 = *v44;
  }
  uint64_t v46 = v43[2];
  long long v47 = *(_OWORD *)v43;
  uint64_t v48 = v45[2];
  *(_OWORD *)unint64_t v43 = *(_OWORD *)v45;
  v43[2] = v48;
  *(_OWORD *)uint64_t v45 = v47;
  v45[2] = v46;
LABEL_44:
  uint64_t v49 = (uint64_t *)*((void *)this + 12);
  uint64_t v50 = (uint64_t **)((char *)a2 + 96);
  if (v49 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v50 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_50;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 12, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v49 = (uint64_t *)*((void *)this + 12);
  }
  uint64_t v51 = *v50;
  if (*v50 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 12, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v51 = *v50;
  }
  uint64_t v52 = v49[2];
  long long v53 = *(_OWORD *)v49;
  uint64_t v54 = v51[2];
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v51;
  v49[2] = v54;
  *(_OWORD *)uint64_t v51 = v53;
  v51[2] = v52;
LABEL_50:
  uint64_t v55 = (uint64_t *)*((void *)this + 13);
  uint64_t v56 = (uint64_t **)((char *)a2 + 104);
  if (v55 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v56 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_56;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 13, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v55 = (uint64_t *)*((void *)this + 13);
  }
  uint64_t v57 = *v56;
  if (*v56 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 13, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v57 = *v56;
  }
  uint64_t v58 = v55[2];
  long long v59 = *(_OWORD *)v55;
  uint64_t v60 = v57[2];
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v57;
  v55[2] = v60;
  *(_OWORD *)uint64_t v57 = v59;
  v57[2] = v58;
LABEL_56:
  uint64_t v61 = (uint64_t *)*((void *)this + 14);
  uint64_t v62 = (uint64_t **)((char *)a2 + 112);
  if (v61 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v62 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_62;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v61 = (uint64_t *)*((void *)this + 14);
  }
  uint64_t v63 = *v62;
  if (*v62 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v63 = *v62;
  }
  uint64_t v64 = v61[2];
  long long v65 = *(_OWORD *)v61;
  uint64_t v66 = v63[2];
  *(_OWORD *)uint64_t v61 = *(_OWORD *)v63;
  v61[2] = v66;
  *(_OWORD *)uint64_t v63 = v65;
  v63[2] = v64;
LABEL_62:
  uint64_t v67 = (uint64_t *)*((void *)this + 15);
  uint64_t v68 = (uint64_t **)((char *)a2 + 120);
  if (v67 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v68 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_68;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 15, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v67 = (uint64_t *)*((void *)this + 15);
  }
  uint64_t v69 = *v68;
  if (*v68 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 15, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v69 = *v68;
  }
  uint64_t v70 = v67[2];
  long long v71 = *(_OWORD *)v67;
  uint64_t v72 = v69[2];
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v69;
  std::string v67[2] = v72;
  *(_OWORD *)uint64_t v69 = v71;
  v69[2] = v70;
LABEL_68:
  uint64_t v73 = (uint64_t *)*((void *)this + 16);
  unint64_t v74 = (uint64_t **)((char *)a2 + 128);
  if (v73 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v74 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_74;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v73 = (uint64_t *)*((void *)this + 16);
  }
  unint64_t v75 = *v74;
  if (*v74 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v75 = *v74;
  }
  uint64_t v76 = v73[2];
  long long v77 = *(_OWORD *)v73;
  uint64_t v78 = v75[2];
  *(_OWORD *)uint64_t v73 = *(_OWORD *)v75;
  v73[2] = v78;
  *(_OWORD *)unint64_t v75 = v77;
  v75[2] = v76;
LABEL_74:
  char v79 = *((unsigned char *)this + 136);
  *((unsigned char *)this + 136) = *((unsigned char *)a2 + 136);
  *((unsigned char *)a2 + 136) = v79;
}

void *protobuf::Intelligence_ReferenceResponse::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.ReferenceResponse");
}

protobuf::Intelligence_ResponseGroup *protobuf::Intelligence_ResponseGroup::Intelligence_ResponseGroup(protobuf::Intelligence_ResponseGroup *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED27BE0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_ResponseGroup_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_ResponseGroup_intelligence_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  *((unsigned char *)this + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  return this;
}

void sub_239A573C4(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_ResponseGroup *protobuf::Intelligence_ResponseGroup::Intelligence_ResponseGroup(protobuf::Intelligence_ResponseGroup *this, const protobuf::Intelligence_ResponseGroup *a2)
{
  *(void *)this = &unk_26ED27BE0;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 6);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v7);
    }
  }
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 7);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v8);
    }
  }
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 8);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v9);
    }
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    long long v10 = (uint64_t *)*((void *)a2 + 9);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v10);
    }
  }
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x10) != 0)
  {
    uint64_t v11 = (uint64_t *)*((void *)a2 + 10);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v11);
    }
  }
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x20) != 0)
  {
    int v12 = (uint64_t *)*((void *)a2 + 11);
    if (v12 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v12);
    }
  }
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x40) != 0)
  {
    uint64_t v13 = (uint64_t *)*((void *)a2 + 12);
    if (v13 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 96, (uint64_t)v13);
    }
  }
  *((void *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x80) != 0)
  {
    uint64_t v14 = (uint64_t *)*((void *)a2 + 13);
    if (v14 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 104, (uint64_t)v14);
    }
  }
  *((void *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x100) != 0)
  {
    unint64_t v15 = (uint64_t *)*((void *)a2 + 14);
    if (v15 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 112, (uint64_t)v15);
    }
  }
  *((unsigned char *)this + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 120);
  return this;
}

void sub_239A575AC(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_ResponseGroup::~Intelligence_ResponseGroup(protobuf::Intelligence_ResponseGroup *this)
{
  *(void *)this = &unk_26ED27BE0;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 8);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 9);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x23ECAACC0](v8, 0x1012C40EC159624);
  }
  uint64_t v10 = *((void *)this + 10);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    MEMORY[0x23ECAACC0](v10, 0x1012C40EC159624);
  }
  uint64_t v11 = *((void *)this + 11);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    MEMORY[0x23ECAACC0](v11, 0x1012C40EC159624);
  }
  uint64_t v12 = *((void *)this + 12);
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string && v12)
  {
    if (*(char *)(v12 + 23) < 0) {
      operator delete(*(void **)v12);
    }
    MEMORY[0x23ECAACC0](v12, 0x1012C40EC159624);
  }
  uint64_t v13 = *((void *)this + 13);
  if ((uint64_t *)v13 != &google::protobuf::internal::fixed_address_empty_string && v13)
  {
    if (*(char *)(v13 + 23) < 0) {
      operator delete(*(void **)v13);
    }
    MEMORY[0x23ECAACC0](v13, 0x1012C40EC159624);
  }
  uint64_t v14 = *((void *)this + 14);
  if ((uint64_t *)v14 != &google::protobuf::internal::fixed_address_empty_string && v14)
  {
    if (*(char *)(v14 + 23) < 0) {
      operator delete(*(void **)v14);
    }
    MEMORY[0x23ECAACC0](v14, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_ResponseGroup::~Intelligence_ResponseGroup(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_ResponseGroup::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_ResponseGroup::default_instance(protobuf::Intelligence_ResponseGroup *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_ResponseGroup_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_ResponseGroup_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_ResponseGroup_default_instance_;
}

void protobuf::Intelligence_ResponseGroup::Clear(protobuf::Intelligence_ResponseGroup *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  int v2 = *((_DWORD *)this + 4);
  if (!(_BYTE)v2) {
    goto LABEL_41;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 6);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    uint64_t v5 = *((void *)this + 8);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    uint64_t v7 = *((void *)this + 10);
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_35:
    uint64_t v9 = *((void *)this + 12);
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_41;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_41;
      }
    }
    goto LABEL_39;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  uint64_t v4 = *((void *)this + 7);
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)uint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_23:
  uint64_t v6 = *((void *)this + 9);
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)uint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_27;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_27;
    }
  }
LABEL_7:
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_31:
  uint64_t v8 = *((void *)this + 11);
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)uint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v2 & 0x40) != 0) {
      goto LABEL_35;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x40) != 0) {
      goto LABEL_35;
    }
  }
LABEL_9:
  if ((v2 & 0x80) == 0) {
    goto LABEL_41;
  }
LABEL_39:
  uint64_t v10 = *((void *)this + 13);
  if (*(char *)(v10 + 23) < 0)
  {
    **(unsigned char **)uint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_46;
    }
    goto LABEL_42;
  }
  *(unsigned char *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 23) = 0;
LABEL_41:
  if ((v2 & 0x100) == 0) {
    goto LABEL_46;
  }
LABEL_42:
  uint64_t v11 = *((void *)this + 14);
  if (*(char *)(v11 + 23) < 0)
  {
    **(unsigned char **)uint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
  }
  else
  {
    *(unsigned char *)uint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
  }
LABEL_46:
  char v13 = *((unsigned char *)this + 8);
  uint64_t v12 = (char *)this + 8;
  v12[112] = 0;
  *((_DWORD *)v12 + 2) = 0;
  if (v13)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear((google::protobuf::internal::InternalMetadataWithArenaLite *)v12);
  }
}

google::protobuf::internal *protobuf::Intelligence_ResponseGroup::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v28 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v28, *((_DWORD *)this + 23)) & 1) == 0)
  {
    uint64_t v8 = (uint64_t *)(a1 + 24);
    while (2)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v28 + 1);
      LODWORD(v9) = *(unsigned __int8 *)v28;
      if (*(char *)v28 < 0)
      {
        uint64_t v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v28, v9);
          uint64_t v28 = TagFallback;
          if (!TagFallback) {
            goto LABEL_3;
          }
LABEL_9:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 10) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v10 = *(std::string **)(a1 + 48);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 48, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_62;
            case 2u:
              if (v9 != 18) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v10 = *(std::string **)(a1 + 56);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 56, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_62;
            case 3u:
              if (v9 != 26) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              uint64_t v10 = *(std::string **)(a1 + 64);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 64, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_62;
            case 4u:
              if (v9 != 34) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 8u;
              uint64_t v10 = *(std::string **)(a1 + 72);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_62;
              }
              uint64_t v11 = a1 + 72;
              goto LABEL_61;
            case 5u:
              if (v9 != 42) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 0x10u;
              uint64_t v10 = *(std::string **)(a1 + 80);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_62;
              }
              uint64_t v11 = a1 + 80;
              goto LABEL_61;
            case 6u:
              if (v9 != 48) {
                goto LABEL_66;
              }
              v5 |= 0x200u;
              uint64_t v12 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v13 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_31;
              }
              int v14 = *(char *)v12;
              unint64_t v13 = v13 + (v14 << 7) - 128;
              if (v14 < 0)
              {
                uint64_t v26 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v13);
                uint64_t v28 = v26;
                *(unsigned char *)(a1 + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v27 != 0;
                if (!v26) {
                  goto LABEL_72;
                }
              }
              else
              {
                uint64_t v12 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_31:
                uint64_t v28 = v12;
                *(unsigned char *)(a1 + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v13 != 0;
              }
              goto LABEL_64;
            case 7u:
              if (v9 != 58) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 0x20u;
              uint64_t v10 = *(std::string **)(a1 + 88);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_62;
              }
              uint64_t v11 = a1 + 88;
              goto LABEL_61;
            case 8u:
              if (v9 != 66) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 0x40u;
              uint64_t v10 = *(std::string **)(a1 + 96);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_62;
              }
              uint64_t v11 = a1 + 96;
              goto LABEL_61;
            case 9u:
              if (v9 != 74) {
                goto LABEL_66;
              }
              unint64_t v15 = (char *)TagFallback - 1;
              break;
            case 0xAu:
              if (v9 != 82) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 0x80u;
              uint64_t v10 = *(std::string **)(a1 + 104);
              if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_62;
              }
              uint64_t v11 = a1 + 104;
              goto LABEL_61;
            case 0xBu:
              if (v9 != 90) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 0x100u;
              uint64_t v10 = *(std::string **)(a1 + 112);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                uint64_t v11 = a1 + 112;
LABEL_61:
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v11, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_62:
              uint64_t v24 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v10, (std::string::value_type *)TagFallback, (uint64_t)this);
              goto LABEL_63;
            default:
LABEL_66:
              if (v9) {
                BOOL v25 = (v9 & 7) == 4;
              }
              else {
                BOOL v25 = 1;
              }
              if (v25)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 - 1;
                goto LABEL_3;
              }
              uint64_t v24 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, (unint64_t *)(a1 + 8), TagFallback, this);
LABEL_63:
              uint64_t v28 = v24;
              if (!v24)
              {
LABEL_72:
                TagFallbacint k = 0;
                goto LABEL_3;
              }
LABEL_64:
              if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v28, *((_DWORD *)this + 23)))goto LABEL_2; {
              continue;
              }
          }
          while (1)
          {
            uint64_t v16 = v15 + 1;
            uint64_t v28 = (google::protobuf::internal *)(v15 + 1);
            long long v17 = *(int **)(a1 + 40);
            if (!v17) {
              break;
            }
            uint64_t v18 = *(int *)(a1 + 32);
            int v19 = *v17;
            if ((int)v18 >= *v17)
            {
              if (v19 == *(_DWORD *)(a1 + 36))
              {
LABEL_45:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v19 + 1);
                long long v17 = *(int **)(a1 + 40);
                int v19 = *v17;
              }
              *long long v17 = v19 + 1;
              uint64_t v21 = (atomic_ullong *)*v8;
              if (!*v8) {
                operator new();
              }
              if (v21[14]) {
              unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v21, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
              }
              AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
              AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
              AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
              uint64_t v22 = *(void *)(a1 + 40);
              uint64_t v23 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + 32) = v23 + 1;
              *(void *)(v22 + 8 * v23 + 8) = AlignedAndAddCleanup;
              uint64_t v16 = (std::string::value_type *)v28;
              goto LABEL_51;
            }
            *(_DWORD *)(a1 + 32) = v18 + 1;
            unint64_t AlignedAndAddCleanup = *(std::string **)&v17[2 * v18 + 2];
LABEL_51:
            unint64_t v15 = google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v16, (uint64_t)this);
            uint64_t v28 = (google::protobuf::internal *)v15;
            if (!v15) {
              goto LABEL_72;
            }
            if (*(void *)this <= (unint64_t)v15 || *v15 != 74) {
              goto LABEL_64;
            }
          }
          int v19 = *(_DWORD *)(a1 + 36);
          goto LABEL_45;
        }
        TagFallbacint k = (google::protobuf::internal *)((char *)v28 + 2);
      }
      break;
    }
    uint64_t v28 = TagFallback;
    goto LABEL_9;
  }
LABEL_2:
  TagFallbacint k = v28;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_ResponseGroup::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_ResponseGroup *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 6), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_31;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 7), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 8), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 9), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 10), v4);
  if ((v6 & 0x200) == 0)
  {
LABEL_7:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_34:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v14 = *((unsigned char *)this + 120);
  *uint64_t v4 = 48;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_8:
    if ((v6 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_37:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((const void ***)this + 11), v4);
  if ((v6 & 0x40) != 0) {
LABEL_9:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 12), v4);
LABEL_10:
  int v7 = *((_DWORD *)this + 8);
  if (v7 >= 1)
  {
    for (int i = 0; v7 != i; ++i)
    {
      uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, i);
      if (*(char *)(v9 + 23) < 0)
      {
        int64_t v10 = *(void *)(v9 + 8);
        if (v10 > 127) {
          goto LABEL_22;
        }
      }
      else
      {
        int64_t v10 = *(unsigned __int8 *)(v9 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v10)
      {
        *uint64_t v4 = 74;
        v4[1] = v10;
        if (*(char *)(v9 + 23) >= 0) {
          uint64_t v11 = (const void *)v9;
        }
        else {
          uint64_t v11 = *(const void **)v9;
        }
        memcpy(v4 + 2, v11, v10);
        v4 += v10 + 2;
        continue;
      }
LABEL_22:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 9, v9, v4);
    }
  }
  if ((v6 & 0x80) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 10, *((const void ***)this + 13), v4);
  }
  if ((v6 & 0x100) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 11, *((const void ***)this + 14), v4);
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v15 = v12 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    long long v17 = *(void **)v15;
    uint64_t v16 = *(void *)(v15 + 8);
  }
  else
  {
    LODWORD(v16) = *(unsigned __int8 *)(v15 + 23);
    long long v17 = (void *)v15;
  }
  if (*(void *)a3 - (void)v4 >= (int)v16)
  {
    uint64_t v18 = (int)v16;
    memcpy(v4, v17, (int)v16);
    v4 += v18;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v17, v16, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_ResponseGroup::ByteSizeLong(protobuf::Intelligence_ResponseGroup *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 8);
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v3);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      if ((v6 & 0x80u) != 0) {
        uint64_t v6 = *(void *)(v5 + 8);
      }
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  int v7 = *((_DWORD *)this + 4);
  if (!(_BYTE)v7) {
    goto LABEL_20;
  }
  if (v7)
  {
    uint64_t v16 = *((void *)this + 6);
    uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
    uint64_t v18 = *(void *)(v16 + 8);
    if ((v17 & 0x80u) == 0) {
      uint64_t v18 = v17;
    }
    v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 2) == 0)
    {
LABEL_11:
      if ((v7 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_35;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_11;
  }
  uint64_t v19 = *((void *)this + 7);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 4) == 0)
  {
LABEL_12:
    if ((v7 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_35:
  uint64_t v22 = *((void *)this + 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v4 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 8) == 0)
  {
LABEL_13:
    if ((v7 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_38:
  uint64_t v25 = *((void *)this + 9);
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  v4 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x10) == 0)
  {
LABEL_14:
    if ((v7 & 0x20) == 0) {
      goto LABEL_15;
    }
LABEL_44:
    uint64_t v31 = *((void *)this + 11);
    uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
    uint64_t v33 = *(void *)(v31 + 8);
    if ((v32 & 0x80u) == 0) {
      uint64_t v33 = v32;
    }
    v4 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 0x40) == 0)
    {
LABEL_16:
      if ((v7 & 0x80) == 0) {
        goto LABEL_20;
      }
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_41:
  uint64_t v28 = *((void *)this + 10);
  uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
  uint64_t v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    uint64_t v30 = v29;
  }
  v4 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x20) != 0) {
    goto LABEL_44;
  }
LABEL_15:
  if ((v7 & 0x40) == 0) {
    goto LABEL_16;
  }
LABEL_47:
  uint64_t v34 = *((void *)this + 12);
  uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
  uint64_t v36 = *(void *)(v34 + 8);
  if ((v35 & 0x80u) == 0) {
    uint64_t v36 = v35;
  }
  v4 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x80) != 0)
  {
LABEL_17:
    uint64_t v8 = *((void *)this + 13);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_20:
  if ((v7 & 0x300) != 0)
  {
    if ((v7 & 0x100) != 0)
    {
      uint64_t v11 = *((void *)this + 14);
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 0x200) != 0) {
      v4 += 2;
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if (v14)
  {
    unint64_t v37 = v14 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v37 + 23) < 0) {
      uint64_t v38 = *(void *)(v37 + 8);
    }
    else {
      uint64_t v38 = *(unsigned __int8 *)(v37 + 23);
    }
    v4 += v38;
  }
  *((_DWORD *)this + 5) = v4;
  return v4;
}

void protobuf::Intelligence_ResponseGroup::CheckTypeAndMergeFrom(protobuf::Intelligence_ResponseGroup *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_ResponseGroup::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_ResponseGroup::MergeFrom(protobuf::Intelligence_ResponseGroup *this, const protobuf::Intelligence_ResponseGroup *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 4575);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v25, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v26[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  int v6 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v6)
  {
    if (v6)
    {
      int v7 = (std::string *)*((void *)this + 6);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 6);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 7);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 7);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 8);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 8);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      uint64_t v13 = (std::string *)*((void *)this + 9);
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v14 = (const std::string *)*((void *)a2 + 9);
      if (v13 != v14)
      {
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      unint64_t v15 = (std::string *)*((void *)this + 10);
      *((_DWORD *)this + 4) |= 0x10u;
      uint64_t v16 = (const std::string *)*((void *)a2 + 10);
      if (v15 != v16)
      {
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v16);
        }
        std::string::operator=(v15, v16);
      }
    }
    if ((v6 & 0x20) != 0)
    {
      uint64_t v17 = (std::string *)*((void *)this + 11);
      *((_DWORD *)this + 4) |= 0x20u;
      uint64_t v18 = (const std::string *)*((void *)a2 + 11);
      if (v17 != v18)
      {
        if (v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v18);
        }
        std::string::operator=(v17, v18);
      }
    }
    if ((v6 & 0x40) != 0)
    {
      uint64_t v19 = (std::string *)*((void *)this + 12);
      *((_DWORD *)this + 4) |= 0x40u;
      uint64_t v20 = (const std::string *)*((void *)a2 + 12);
      if (v19 != v20)
      {
        if (v19 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 96, (uint64_t)v20);
        }
        std::string::operator=(v19, v20);
      }
    }
    if ((v6 & 0x80) != 0)
    {
      uint64_t v21 = (std::string *)*((void *)this + 13);
      *((_DWORD *)this + 4) |= 0x80u;
      uint64_t v22 = (const std::string *)*((void *)a2 + 13);
      if (v21 != v22)
      {
        if (v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 104, (uint64_t)v22);
        }
        std::string::operator=(v21, v22);
      }
    }
  }
  if ((v6 & 0x300) != 0)
  {
    if ((v6 & 0x100) != 0)
    {
      uint64_t v23 = (std::string *)*((void *)this + 14);
      *((_DWORD *)this + 4) |= 0x100u;
      uint64_t v24 = (const std::string *)*((void *)a2 + 14);
      if (v23 != v24)
      {
        if (v23 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 112, (uint64_t)v24);
        }
        std::string::operator=(v23, v24);
      }
    }
    if ((v6 & 0x200) != 0) {
      *((unsigned char *)this + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 120);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_239A589C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_ResponseGroup::CopyFrom(protobuf::Intelligence_ResponseGroup *this, const protobuf::Intelligence_ResponseGroup *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_ResponseGroup::Clear(this);
    protobuf::Intelligence_ResponseGroup::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_ResponseGroup::IsInitialized(protobuf::Intelligence_ResponseGroup *this)
{
  return 1;
}

void protobuf::Intelligence_ResponseGroup::InternalSwap(protobuf::Intelligence_ResponseGroup *this, protobuf::Intelligence_ResponseGroup *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v68;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_64;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_64:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_ResponseGroup *)((char *)this + 24), (protobuf::Intelligence_ResponseGroup *)((char *)a2 + 24));
  uint64_t v13 = (uint64_t *)*((void *)this + 6);
  uint64_t v14 = (uint64_t **)((char *)a2 + 48);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v13 = (uint64_t *)*((void *)this + 6);
  }
  unint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v15;
  _OWORD v13[2] = v18;
  *(_OWORD *)unint64_t v15 = v17;
  void v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 7);
  uint64_t v20 = (uint64_t **)((char *)a2 + 56);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 7);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  char v25 = (uint64_t *)*((void *)this + 8);
  uint64_t v26 = (uint64_t **)((char *)a2 + 64);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v25 = (uint64_t *)*((void *)this + 8);
  }
  uint64_t v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)char v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)uint64_t v27 = v29;
  v27[2] = v28;
LABEL_26:
  uint64_t v31 = (uint64_t *)*((void *)this + 9);
  uint64_t v32 = (uint64_t **)((char *)a2 + 72);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v31 = (uint64_t *)*((void *)this + 9);
  }
  uint64_t v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v33 = *v32;
  }
  uint64_t v34 = v31[2];
  long long v35 = *(_OWORD *)v31;
  uint64_t v36 = v33[2];
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v33;
  void v31[2] = v36;
  *(_OWORD *)uint64_t v33 = v35;
  std::string v33[2] = v34;
LABEL_32:
  unint64_t v37 = (uint64_t *)*((void *)this + 10);
  uint64_t v38 = (uint64_t **)((char *)a2 + 80);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_38;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v37 = (uint64_t *)*((void *)this + 10);
  }
  uint64_t v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v39 = *v38;
  }
  uint64_t v40 = v37[2];
  long long v41 = *(_OWORD *)v37;
  uint64_t v42 = v39[2];
  *(_OWORD *)unint64_t v37 = *(_OWORD *)v39;
  std::string v37[2] = v42;
  *(_OWORD *)uint64_t v39 = v41;
  v39[2] = v40;
LABEL_38:
  unint64_t v43 = (uint64_t *)*((void *)this + 11);
  uint64_t v44 = (uint64_t **)((char *)a2 + 88);
  if (v43 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v44 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_44;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v43 = (uint64_t *)*((void *)this + 11);
  }
  uint64_t v45 = *v44;
  if (*v44 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v45 = *v44;
  }
  uint64_t v46 = v43[2];
  long long v47 = *(_OWORD *)v43;
  uint64_t v48 = v45[2];
  *(_OWORD *)unint64_t v43 = *(_OWORD *)v45;
  v43[2] = v48;
  *(_OWORD *)uint64_t v45 = v47;
  v45[2] = v46;
LABEL_44:
  uint64_t v49 = (uint64_t *)*((void *)this + 12);
  uint64_t v50 = (uint64_t **)((char *)a2 + 96);
  if (v49 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v50 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_50;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 12, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v49 = (uint64_t *)*((void *)this + 12);
  }
  uint64_t v51 = *v50;
  if (*v50 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 12, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v51 = *v50;
  }
  uint64_t v52 = v49[2];
  long long v53 = *(_OWORD *)v49;
  uint64_t v54 = v51[2];
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v51;
  v49[2] = v54;
  *(_OWORD *)uint64_t v51 = v53;
  v51[2] = v52;
LABEL_50:
  uint64_t v55 = (uint64_t *)*((void *)this + 13);
  uint64_t v56 = (uint64_t **)((char *)a2 + 104);
  if (v55 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v56 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_56;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 13, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v55 = (uint64_t *)*((void *)this + 13);
  }
  uint64_t v57 = *v56;
  if (*v56 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 13, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v57 = *v56;
  }
  uint64_t v58 = v55[2];
  long long v59 = *(_OWORD *)v55;
  uint64_t v60 = v57[2];
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v57;
  v55[2] = v60;
  *(_OWORD *)uint64_t v57 = v59;
  v57[2] = v58;
LABEL_56:
  uint64_t v61 = (uint64_t *)*((void *)this + 14);
  uint64_t v62 = (uint64_t **)((char *)a2 + 112);
  if (v61 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v62 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_62;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v61 = (uint64_t *)*((void *)this + 14);
  }
  uint64_t v63 = *v62;
  if (*v62 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v63 = *v62;
  }
  uint64_t v64 = v61[2];
  long long v65 = *(_OWORD *)v61;
  uint64_t v66 = v63[2];
  *(_OWORD *)uint64_t v61 = *(_OWORD *)v63;
  v61[2] = v66;
  *(_OWORD *)uint64_t v63 = v65;
  v63[2] = v64;
LABEL_62:
  char v67 = *((unsigned char *)this + 120);
  *((unsigned char *)this + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 120);
  *((unsigned char *)a2 + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v67;
}

void *protobuf::Intelligence_ResponseGroup::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.ResponseGroup");
}

protobuf::Intelligence_InputGroup_Interjection *protobuf::Intelligence_InputGroup_Interjection::Intelligence_InputGroup_Interjection(protobuf::Intelligence_InputGroup_Interjection *this)
{
  *(void *)this = &unk_26ED27C70;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_InputGroup_Interjection_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_InputGroup_Interjection_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((unsigned char *)this + 44) = 0;
  return this;
}

void sub_239A59004(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_InputGroup_Interjection *protobuf::Intelligence_InputGroup_Interjection::Intelligence_InputGroup_Interjection(protobuf::Intelligence_InputGroup_Interjection *this, const protobuf::Intelligence_InputGroup_Interjection *a2)
{
  *(void *)this = &unk_26ED27C70;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  int v8 = *((_DWORD *)a2 + 10);
  *((unsigned char *)this + 44) = *((unsigned char *)a2 + 44);
  *((_DWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8;
  return this;
}

void sub_239A590E4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_InputGroup_Interjection::~Intelligence_InputGroup_Interjection(protobuf::Intelligence_InputGroup_Interjection *this)
{
  *(void *)this = &unk_26ED27C70;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_InputGroup_Interjection::~Intelligence_InputGroup_Interjection(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_InputGroup_Interjection::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_InputGroup_Interjection::default_instance(protobuf::Intelligence_InputGroup_Interjection *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_InputGroup_Interjection_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_InputGroup_Interjection_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_InputGroup_Interjection_default_instance_;
}

void protobuf::Intelligence_InputGroup_Interjection::Clear(protobuf::Intelligence_InputGroup_Interjection *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      uint64_t v2 = *((void *)this + 3);
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v3 = *((void *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0x7C) != 0)
  {
    *((unsigned char *)this + 44) = 0;
    *((_DWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  }
  char v5 = *((unsigned char *)this + 8);
  uint64_t v4 = (protobuf::Intelligence_InputGroup_Interjection *)((char *)this + 8);
  *((_DWORD *)v4 + 2) = 0;
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v4);
  }
}

google::protobuf::internal *protobuf::Intelligence_InputGroup_Interjection::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  unint64_t v37 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v37, *((_DWORD *)this + 23)) & 1) == 0)
  {
    while (1)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v37 + 1);
      LODWORD(v8) = *(unsigned __int8 *)v37;
      if (*(char *)v37 < 0)
      {
        int v8 = (const char *)(v8 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v37, v8);
          unint64_t v37 = TagFallback;
          if (!TagFallback) {
            goto LABEL_3;
          }
          goto LABEL_8;
        }
        TagFallbacint k = (google::protobuf::internal *)((char *)v37 + 2);
      }
      unint64_t v37 = TagFallback;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_43;
          }
          v5 |= 4u;
          uint64_t v9 = (google::protobuf::internal *)((char *)TagFallback + 1);
          unint64_t v10 = *(unsigned __int8 *)TagFallback;
          if ((*(char *)TagFallback & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v11 = *(char *)v9;
          unint64_t v10 = v10 + (v11 << 7) - 128;
          if ((v11 & 0x80000000) == 0)
          {
            uint64_t v9 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_13:
            unint64_t v37 = v9;
            *(unsigned char *)(a1 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v10 != 0;
            goto LABEL_49;
          }
          uint64_t v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v10);
          unint64_t v37 = v27;
          *(unsigned char *)(a1 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v28 != 0;
          if (v27) {
            goto LABEL_49;
          }
          goto LABEL_60;
        case 2u:
          if (v8 != 16) {
            goto LABEL_43;
          }
          v5 |= 8u;
          int v12 = (google::protobuf::internal *)((char *)TagFallback + 1);
          unint64_t v13 = *(unsigned __int8 *)TagFallback;
          if ((*(char *)TagFallback & 0x80000000) == 0) {
            goto LABEL_20;
          }
          int v14 = *(char *)v12;
          unint64_t v13 = v13 + (v14 << 7) - 128;
          if (v14 < 0)
          {
            long long v29 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v13);
            unint64_t v37 = v29;
            *(unsigned char *)(a1 + 41) = v30 != 0;
            if (!v29) {
              goto LABEL_60;
            }
          }
          else
          {
            int v12 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_20:
            unint64_t v37 = v12;
            *(unsigned char *)(a1 + 41) = v13 != 0;
          }
          goto LABEL_49;
        case 3u:
          if (v8 != 24) {
            goto LABEL_43;
          }
          v5 |= 0x10u;
          unint64_t v15 = (google::protobuf::internal *)((char *)TagFallback + 1);
          unint64_t v16 = *(unsigned __int8 *)TagFallback;
          if ((*(char *)TagFallback & 0x80000000) == 0) {
            goto LABEL_25;
          }
          int v17 = *(char *)v15;
          unint64_t v16 = v16 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            uint64_t v31 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v16);
            unint64_t v37 = v31;
            *(unsigned char *)(a1 + 42) = v32 != 0;
            if (!v31) {
              goto LABEL_60;
            }
          }
          else
          {
            unint64_t v15 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_25:
            unint64_t v37 = v15;
            *(unsigned char *)(a1 + 42) = v16 != 0;
          }
          goto LABEL_49;
        case 4u:
          if (v8 != 32) {
            goto LABEL_43;
          }
          v5 |= 0x40u;
          uint64_t v18 = (google::protobuf::internal *)((char *)TagFallback + 1);
          unint64_t v19 = *(unsigned __int8 *)TagFallback;
          if ((*(char *)TagFallback & 0x80000000) == 0) {
            goto LABEL_30;
          }
          int v20 = *(char *)v18;
          unint64_t v19 = v19 + (v20 << 7) - 128;
          if (v20 < 0)
          {
            uint64_t v33 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v19);
            unint64_t v37 = v33;
            *(unsigned char *)(a1 + 44) = v34 != 0;
            if (!v33) {
              goto LABEL_60;
            }
          }
          else
          {
            uint64_t v18 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_30:
            unint64_t v37 = v18;
            *(unsigned char *)(a1 + 44) = v19 != 0;
          }
          goto LABEL_49;
        case 5u:
          if (v8 != 42) {
            goto LABEL_43;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v21 = *(std::string **)(a1 + 24);
          if (v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          goto LABEL_42;
        case 6u:
          if (v8 != 48) {
            goto LABEL_43;
          }
          v5 |= 0x20u;
          uint64_t v22 = (google::protobuf::internal *)((char *)TagFallback + 1);
          unint64_t v23 = *(unsigned __int8 *)TagFallback;
          if ((*(char *)TagFallback & 0x80000000) == 0) {
            goto LABEL_38;
          }
          int v24 = *(char *)v22;
          unint64_t v23 = v23 + (v24 << 7) - 128;
          if (v24 < 0)
          {
            long long v35 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v23);
            unint64_t v37 = v35;
            *(unsigned char *)(a1 + 43) = v36 != 0;
            if (!v35) {
              goto LABEL_60;
            }
          }
          else
          {
            uint64_t v22 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_38:
            unint64_t v37 = v22;
            *(unsigned char *)(a1 + 43) = v23 != 0;
          }
          goto LABEL_49;
        case 7u:
          if (v8 != 58) {
            goto LABEL_43;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v21 = *(std::string **)(a1 + 32);
          if (v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 32, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
LABEL_42:
          char v25 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v21, (std::string::value_type *)TagFallback, (uint64_t)this);
          goto LABEL_48;
        default:
LABEL_43:
          if (v8) {
            BOOL v26 = (v8 & 7) == 4;
          }
          else {
            BOOL v26 = 1;
          }
          if (v26)
          {
            *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
            goto LABEL_3;
          }
          char v25 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), TagFallback, this);
LABEL_48:
          unint64_t v37 = v25;
          if (!v25)
          {
LABEL_60:
            TagFallbacint k = 0;
            goto LABEL_3;
          }
LABEL_49:
          if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v37, *((_DWORD *)this + 23)))goto LABEL_2; {
          break;
          }
      }
    }
  }
LABEL_2:
  TagFallbacint k = v37;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_InputGroup_Interjection::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_InputGroup_Interjection *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    char v9 = *((unsigned char *)this + 40);
    *uint64_t v4 = 8;
    v4[1] = v9;
    v4 += 2;
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v10 = *((unsigned char *)this + 41);
  *uint64_t v4 = 16;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x10) == 0)
  {
LABEL_4:
    if ((v6 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_17:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v11 = *((unsigned char *)this + 42);
  *uint64_t v4 = 24;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_5:
    if ((v6 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_20:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v12 = *((unsigned char *)this + 44);
  *uint64_t v4 = 32;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 1) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 3), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_24:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v13 = *((unsigned char *)this + 43);
  *uint64_t v4 = 48;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 2) != 0) {
LABEL_8:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((const void ***)this + 4), v4);
LABEL_9:
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v14 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    unint64_t v16 = *(void **)v14;
    uint64_t v15 = *(void *)(v14 + 8);
  }
  else
  {
    LODWORD(v15) = *(unsigned __int8 *)(v14 + 23);
    unint64_t v16 = (void *)v14;
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v17 = (int)v15;
    memcpy(v4, v16, (int)v15);
    v4 += v17;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v16, v15, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_InputGroup_Interjection::ByteSizeLong(protobuf::Intelligence_InputGroup_Interjection *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_23;
  }
  if (v1)
  {
    uint64_t v4 = *((void *)this + 3);
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = *((void *)this + 4);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x10) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x20) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x40) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_23:
  uint64_t v10 = *((void *)this + 1);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0) {
      uint64_t v13 = *(void *)(v12 + 8);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    }
    v3 += v13;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void protobuf::Intelligence_InputGroup_Interjection::CheckTypeAndMergeFrom(protobuf::Intelligence_InputGroup_Interjection *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_InputGroup_Interjection::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_InputGroup_Interjection::MergeFrom(protobuf::Intelligence_InputGroup_Interjection *this, const protobuf::Intelligence_InputGroup_Interjection *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 4982);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x7F) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 4);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 4);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      *((unsigned char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 40);
      if ((v6 & 8) == 0)
      {
LABEL_18:
        if ((v6 & 0x10) == 0) {
          goto LABEL_19;
        }
        goto LABEL_26;
      }
    }
    else if ((v6 & 8) == 0)
    {
      goto LABEL_18;
    }
    *((unsigned char *)this + 41) = *((unsigned char *)a2 + 41);
    if ((v6 & 0x10) == 0)
    {
LABEL_19:
      if ((v6 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_27;
    }
LABEL_26:
    *((unsigned char *)this + 42) = *((unsigned char *)a2 + 42);
    if ((v6 & 0x20) == 0)
    {
LABEL_20:
      if ((v6 & 0x40) == 0)
      {
LABEL_22:
        *((_DWORD *)this + 4) |= v6;
        return;
      }
LABEL_21:
      *((unsigned char *)this + 44) = *((unsigned char *)a2 + 44);
      goto LABEL_22;
    }
LABEL_27:
    *((unsigned char *)this + 43) = *((unsigned char *)a2 + 43);
    if ((v6 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
}

void sub_239A59C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_InputGroup_Interjection::CopyFrom(protobuf::Intelligence_InputGroup_Interjection *this, const protobuf::Intelligence_InputGroup_Interjection *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_InputGroup_Interjection::Clear(this);
    protobuf::Intelligence_InputGroup_Interjection::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_InputGroup_Interjection::IsInitialized(protobuf::Intelligence_InputGroup_Interjection *this)
{
  return 1;
}

void protobuf::Intelligence_InputGroup_Interjection::InternalSwap(protobuf::Intelligence_InputGroup_Interjection *this, protobuf::Intelligence_InputGroup_Interjection *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v30;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  unint64_t v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  unint64_t v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v12 = (uint64_t *)*((void *)this + 3);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v12[2];
  long long v17 = *(_OWORD *)v12;
  uint64_t v18 = v15[2];
  *(_OWORD *)unint64_t v12 = *(_OWORD *)v15;
  std::string v12[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  void v15[2] = v16;
LABEL_14:
  unint64_t v19 = (uint64_t *)*((void *)this + 4);
  int v20 = (uint64_t **)((char *)a2 + 32);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v19 = (uint64_t *)*((void *)this + 4);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)unint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  char v25 = *((unsigned char *)this + 40);
  *((unsigned char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 40);
  *((unsigned char *)a2 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v25;
  char v26 = *((unsigned char *)this + 41);
  *((unsigned char *)this + 41) = *((unsigned char *)a2 + 41);
  *((unsigned char *)a2 + 41) = v26;
  char v27 = *((unsigned char *)this + 42);
  *((unsigned char *)this + 42) = *((unsigned char *)a2 + 42);
  *((unsigned char *)a2 + 42) = v27;
  char v28 = *((unsigned char *)this + 43);
  *((unsigned char *)this + 43) = *((unsigned char *)a2 + 43);
  *((unsigned char *)a2 + 43) = v28;
  char v29 = *((unsigned char *)this + 44);
  *((unsigned char *)this + 44) = *((unsigned char *)a2 + 44);
  *((unsigned char *)a2 + 44) = v29;
}

void *protobuf::Intelligence_InputGroup_Interjection::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.InputGroup.Interjection");
}

void protobuf::Intelligence_InputGroup_Intent::InitAsDefaultInstance(protobuf::Intelligence_InputGroup_Intent *this)
{
  qword_268A0AF60 = (uint64_t)&protobuf::_Intelligence_InputGroup_Interjection_default_instance_;
}

uint64_t protobuf::Intelligence_InputGroup_Intent::_Internal::interjection_settings(protobuf::Intelligence_InputGroup_Intent::_Internal *this, const protobuf::Intelligence_InputGroup_Intent *a2)
{
  return *((void *)this + 12);
}

protobuf::Intelligence_InputGroup_Intent *protobuf::Intelligence_InputGroup_Intent::Intelligence_InputGroup_Intent(protobuf::Intelligence_InputGroup_Intent *this)
{
  *(void *)this = &unk_26ED27D00;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  if (atomic_load_explicit(scc_info_Intelligence_InputGroup_Intent_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_InputGroup_Intent_intelligence_2eproto);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 12) = 0;
  return this;
}

void sub_239A59F40(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 48);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_InputGroup_Intent *protobuf::Intelligence_InputGroup_Intent::Intelligence_InputGroup_Intent(protobuf::Intelligence_InputGroup_Intent *this, const protobuf::Intelligence_InputGroup_Intent *a2)
{
  *(void *)this = &unk_26ED27D00;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 9);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v7);
    }
  }
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 10);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v8);
    }
  }
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 11);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v9);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (!*((void *)a2 + 12))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 14635);
      long long v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: !value || interjection_settings_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 12) = 0;
  return this;
}

void sub_239A5A108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v5);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v4);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v3);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_InputGroup_Intent::~Intelligence_InputGroup_Intent(protobuf::Intelligence_InputGroup_Intent *this)
{
  *(void *)this = &unk_26ED27D00;
  uint64_t v2 = *((void *)this + 9);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 10);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 11);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  if (this != (protobuf::Intelligence_InputGroup_Intent *)&protobuf::_Intelligence_InputGroup_Intent_default_instance_)
  {
    uint64_t v8 = *((void *)this + 12);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 48);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_InputGroup_Intent::~Intelligence_InputGroup_Intent(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_InputGroup_Intent::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_InputGroup_Intent::default_instance(protobuf::Intelligence_InputGroup_Intent *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_InputGroup_Intent_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_InputGroup_Intent_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_InputGroup_Intent_default_instance_;
}

void protobuf::Intelligence_InputGroup_Intent::Clear(protobuf::Intelligence_InputGroup_Intent *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_11:
    uint64_t v4 = *((void *)this + 10);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_15;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  uint64_t v3 = *((void *)this + 9);
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_11;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_11;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  uint64_t v5 = *((void *)this + 11);
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)uint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_22;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_22;
    }
  }
LABEL_19:
  uint64_t v6 = (protobuf::Intelligence_InputGroup_Interjection *)*((void *)this + 12);
  if (!v6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 5156);
    unint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: interjection_settings_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    uint64_t v6 = (protobuf::Intelligence_InputGroup_Interjection *)*((void *)this + 12);
  }
  protobuf::Intelligence_InputGroup_Interjection::Clear(v6);
LABEL_22:
  char v9 = *((unsigned char *)this + 8);
  uint64_t v8 = (protobuf::Intelligence_InputGroup_Intent *)((char *)this + 8);
  *((_DWORD *)v8 + 2) = 0;
  if (v9) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v8);
  }
}

void sub_239A5A48C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string::value_type *protobuf::Intelligence_InputGroup_Intent::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v31 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v31, *((_DWORD *)this + 23));
  uint64_t result = (std::string::value_type *)v31;
  if ((v5 & 1) == 0)
  {
    unint64_t v7 = (uint64_t *)(a1 + 48);
    uint64_t v8 = (uint64_t *)(a1 + 24);
    while (2)
    {
      char v9 = result + 1;
      LODWORD(v1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *result;
      if (*result < 0)
      {
        char v10 = (const char *)(v10 + (*v9 << 7) - 128);
        if (*v9 < 0)
        {
          uint64_t result = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)result, v10);
          uint64_t v31 = (google::protobuf::internal *)result;
          if (!result) {
            return result;
          }
          char v9 = result;
LABEL_8:
          switch(v10 >> 3)
          {
            case 1u:
              if (v10 != 10) {
                goto LABEL_57;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v11 = *(std::string **)(a1 + 72);
              if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 72, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_35;
            case 2u:
              if (v10 != 18) {
                goto LABEL_57;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v11 = *(std::string **)(a1 + 80);
              if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 80, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_35;
            case 3u:
              if (v10 != 26) {
                goto LABEL_57;
              }
              uint64_t result = v9 - 1;
              while (1)
              {
                char v12 = result + 1;
                uint64_t v31 = (google::protobuf::internal *)(result + 1);
                int v13 = *(int **)(a1 + 40);
                if (!v13) {
                  break;
                }
                uint64_t v14 = *(int *)(a1 + 32);
                int v15 = *v13;
                if ((int)v14 >= *v13)
                {
                  if (v15 == *(_DWORD *)(a1 + 36))
                  {
LABEL_22:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v15 + 1);
                    int v13 = *(int **)(a1 + 40);
                    int v15 = *v13;
                  }
                  int *v13 = v15 + 1;
                  long long v17 = (atomic_ullong *)*v8;
                  if (!*v8) {
                    operator new();
                  }
                  if (v17[14]) {
                  unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v17, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
                  }
                  AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
                  AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
                  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
                  uint64_t v18 = *(void *)(a1 + 40);
                  uint64_t v19 = *(int *)(a1 + 32);
                  *(_DWORD *)(a1 + 32) = v19 + 1;
                  *(void *)(v18 + 8 * v19 + 8) = AlignedAndAddCleanup;
                  char v12 = (std::string::value_type *)v31;
                  goto LABEL_28;
                }
                *(_DWORD *)(a1 + 32) = v14 + 1;
                unint64_t AlignedAndAddCleanup = *(std::string **)&v13[2 * v14 + 2];
LABEL_28:
                uint64_t result = google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v12, (uint64_t)this);
                uint64_t v31 = (google::protobuf::internal *)result;
                if (!result) {
                  return result;
                }
                if (*(void *)this <= (unint64_t)result || *result != 26) {
                  goto LABEL_63;
                }
              }
              int v15 = *(_DWORD *)(a1 + 36);
              goto LABEL_22;
            case 4u:
              if (v10 != 34) {
                goto LABEL_57;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              uint64_t v11 = *(std::string **)(a1 + 88);
              if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 88, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_35:
              uint64_t result = google::protobuf::internal::InlineGreedyStringParser(v11, v9, (uint64_t)this);
              goto LABEL_62;
            case 5u:
              if (v10 != 42) {
                goto LABEL_57;
              }
              *(_DWORD *)(a1 + 16) |= 8u;
              int v20 = *(protobuf::Intelligence_InputGroup_Interjection **)(a1 + 96);
              if (!v20)
              {
                int v20 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Interjection>(0);
                *(void *)(a1 + 96) = v20;
                char v9 = (std::string::value_type *)v31;
              }
              uint64_t result = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_InputGroup_Interjection>(this, (uint64_t)v20, (google::protobuf::internal *)v9);
              goto LABEL_62;
            case 6u:
              if (v10 != 50) {
                goto LABEL_57;
              }
              uint64_t result = v9 - 1;
              break;
            default:
LABEL_57:
              if (v10) {
                BOOL v29 = (v10 & 7) == 4;
              }
              else {
                BOOL v29 = 1;
              }
              if (v29)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v10 - 1;
                return v9;
              }
              uint64_t result = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse(v10, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v9, this);
LABEL_62:
              uint64_t v31 = (google::protobuf::internal *)result;
              if (!result) {
                return result;
              }
LABEL_63:
              int v30 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v31, *((_DWORD *)this + 23));
              uint64_t result = (std::string::value_type *)v31;
              if (v30) {
                return result;
              }
              continue;
          }
          while (1)
          {
            uint64_t v21 = result + 1;
            uint64_t v31 = (google::protobuf::internal *)(result + 1);
            uint64_t v22 = *(int **)(a1 + 64);
            if (!v22) {
              break;
            }
            uint64_t v23 = *(int *)(a1 + 56);
            int v24 = *v22;
            if ((int)v23 >= *v22)
            {
              if (v24 == *(_DWORD *)(a1 + 60))
              {
LABEL_47:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v24 + 1);
                uint64_t v22 = *(int **)(a1 + 64);
                int v24 = *v22;
              }
              int *v22 = v24 + 1;
              char v26 = (atomic_ullong *)*v7;
              if (!*v7) {
                operator new();
              }
              if (v26[14]) {
              char v25 = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v26, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
              }
              v25->__r_.__value_.__r.__words[0] = 0;
              v25->__r_.__value_.__l.__size_ = 0;
              v25->__r_.__value_.__r.__words[2] = 0;
              uint64_t v27 = *(void *)(a1 + 64);
              uint64_t v28 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v28 + 1;
              *(void *)(v27 + 8 * v28 + 8) = v25;
              uint64_t v21 = (std::string::value_type *)v31;
              goto LABEL_53;
            }
            *(_DWORD *)(a1 + 56) = v23 + 1;
            char v25 = *(std::string **)&v22[2 * v23 + 2];
LABEL_53:
            uint64_t result = google::protobuf::internal::InlineGreedyStringParser(v25, v21, (uint64_t)this);
            uint64_t v31 = (google::protobuf::internal *)result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *result != 50) {
              goto LABEL_63;
            }
          }
          int v24 = *(_DWORD *)(a1 + 60);
          goto LABEL_47;
        }
        char v9 = result + 2;
      }
      break;
    }
    uint64_t v31 = (google::protobuf::internal *)v9;
    goto LABEL_8;
  }
  return result;
}

char *google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_InputGroup_Interjection>(google::protobuf::internal::EpsCopyInputStream *this, uint64_t a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  unint64_t v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    uint64_t v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = (char *)protobuf::Intelligence_InputGroup_Interjection::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

unsigned __int8 *protobuf::Intelligence_InputGroup_Intent::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_InputGroup_Intent *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 9), a2);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 10), v4);
  }
  int v7 = *((_DWORD *)this + 8);
  if (v7 >= 1)
  {
    for (int i = 0; v7 != i; ++i)
    {
      uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, i);
      if (*(char *)(v9 + 23) < 0)
      {
        int64_t v10 = *(void *)(v9 + 8);
        if (v10 > 127) {
          goto LABEL_17;
        }
      }
      else
      {
        int64_t v10 = *(unsigned __int8 *)(v9 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v10)
      {
        *uint64_t v4 = 26;
        v4[1] = v10;
        if (*(char *)(v9 + 23) >= 0) {
          int v11 = (const void *)v9;
        }
        else {
          int v11 = *(const void **)v9;
        }
        memcpy(v4 + 2, v11, v10);
        v4 += v10 + 2;
        continue;
      }
LABEL_17:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 3, v9, v4);
    }
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 11), v4);
  }
  if ((v6 & 8) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    int v12 = (protobuf::Intelligence_InputGroup_Interjection *)*((void *)this + 12);
    *uint64_t v4 = 42;
    unsigned int v13 = *((_DWORD *)v12 + 5);
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v15 = v13 >> 7;
      if (v13 >> 14)
      {
        int v14 = v4 + 3;
        do
        {
          *(v14 - 1) = v15 | 0x80;
          unsigned int v16 = v15 >> 7;
          ++v14;
          unsigned int v17 = v15 >> 14;
          v15 >>= 7;
        }
        while (v17);
        *(v14 - 1) = v16;
      }
      else
      {
        std::string v4[2] = v15;
        int v14 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v13;
      int v14 = v4 + 2;
    }
    uint64_t v4 = (char *)protobuf::Intelligence_InputGroup_Interjection::InternalSerializeWithCachedSizesToArray(v12, v14, a3);
  }
  int v18 = *((_DWORD *)this + 14);
  if (v18 >= 1)
  {
    for (int j = 0; v18 != j; ++j)
    {
      uint64_t v20 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, j);
      if (*(char *)(v20 + 23) < 0)
      {
        int64_t v21 = *(void *)(v20 + 8);
        if (v21 > 127) {
          goto LABEL_43;
        }
      }
      else
      {
        int64_t v21 = *(unsigned __int8 *)(v20 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v21)
      {
        *uint64_t v4 = 50;
        v4[1] = v21;
        if (*(char *)(v20 + 23) >= 0) {
          uint64_t v22 = (const void *)v20;
        }
        else {
          uint64_t v22 = *(const void **)v20;
        }
        memcpy(v4 + 2, v22, v21);
        v4 += v21 + 2;
        continue;
      }
LABEL_43:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 6, v20, v4);
    }
  }
  uint64_t v23 = *((void *)this + 1);
  if ((v23 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v25 + 23) < 0)
  {
    uint64_t v27 = *(void **)v25;
    uint64_t v26 = *(void *)(v25 + 8);
  }
  else
  {
    LODWORD(v26) = *(unsigned __int8 *)(v25 + 23);
    uint64_t v27 = (void *)v25;
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v28 = (int)v26;
    memcpy(v4, v27, (int)v26);
    v4 += v28;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v27, v26, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_InputGroup_Intent::ByteSizeLong(protobuf::Intelligence_InputGroup_Intent *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 8);
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v3);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      if ((v6 & 0x80u) != 0) {
        uint64_t v6 = *(void *)(v5 + 8);
      }
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  uint64_t v7 = *((unsigned int *)this + 14);
  uint64_t v8 = v4 + v7;
  if ((int)v7 >= 1)
  {
    int v9 = 0;
    do
    {
      uint64_t v10 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, v9);
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      if ((v11 & 0x80u) != 0) {
        uint64_t v11 = *(void *)(v10 + 8);
      }
      v8 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      ++v9;
    }
    while (v7 != v9);
  }
  int v12 = *((_DWORD *)this + 4);
  if ((v12 & 0xF) == 0) {
    goto LABEL_19;
  }
  if ((v12 & 1) == 0)
  {
    if ((v12 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_24:
    uint64_t v19 = *((void *)this + 10);
    uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
    uint64_t v21 = *(void *)(v19 + 8);
    if ((v20 & 0x80u) == 0) {
      uint64_t v21 = v20;
    }
    v8 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v12 & 4) == 0)
    {
LABEL_17:
      if ((v12 & 8) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_27;
  }
  uint64_t v16 = *((void *)this + 9);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v8 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v12 & 2) != 0) {
    goto LABEL_24;
  }
LABEL_16:
  if ((v12 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_27:
  uint64_t v22 = *((void *)this + 11);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v8 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v12 & 8) != 0)
  {
LABEL_18:
    uint64_t v13 = protobuf::Intelligence_InputGroup_Interjection::ByteSizeLong(*((protobuf::Intelligence_InputGroup_Interjection **)this
                                                                       + 12));
    v8 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_19:
  uint64_t v14 = *((void *)this + 1);
  if (v14)
  {
    unint64_t v25 = v14 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v25 + 23) < 0) {
      uint64_t v26 = *(void *)(v25 + 8);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
    }
    v8 += v26;
  }
  *((_DWORD *)this + 5) = v8;
  return v8;
}

void protobuf::Intelligence_InputGroup_Intent::CheckTypeAndMergeFrom(protobuf::Intelligence_InputGroup_Intent *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_InputGroup_Intent::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_InputGroup_Intent::MergeFrom(protobuf::Intelligence_InputGroup_Intent *this, const protobuf::Intelligence_InputGroup_Intent *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 5369);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0xF) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 9);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 9);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      int v9 = (std::string *)*((void *)this + 10);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 10);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 11);
      *((_DWORD *)this + 4) |= 4u;
      int v12 = (const std::string *)*((void *)a2 + 11);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v13 = (protobuf::Intelligence_InputGroup_Interjection *)*((void *)this + 12);
      if (!v13)
      {
        uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Interjection>(0);
        *((void *)this + 12) = v13;
      }
      if (*((void *)a2 + 12)) {
        uint64_t v14 = (const protobuf::Intelligence_InputGroup_Interjection *)*((void *)a2 + 12);
      }
      else {
        uint64_t v14 = (const protobuf::Intelligence_InputGroup_Interjection *)&protobuf::_Intelligence_InputGroup_Interjection_default_instance_;
      }
      protobuf::Intelligence_InputGroup_Interjection::MergeFrom(v13, v14);
    }
  }
}

void sub_239A5B1C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_InputGroup_Intent::CopyFrom(protobuf::Intelligence_InputGroup_Intent *this, const protobuf::Intelligence_InputGroup_Intent *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_InputGroup_Intent::Clear(this);
    protobuf::Intelligence_InputGroup_Intent::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_InputGroup_Intent::IsInitialized(protobuf::Intelligence_InputGroup_Intent *this)
{
  return 1;
}

void protobuf::Intelligence_InputGroup_Intent::InternalSwap(protobuf::Intelligence_InputGroup_Intent *this, protobuf::Intelligence_InputGroup_Intent *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v32;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_28:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_InputGroup_Intent *)((char *)this + 24), (protobuf::Intelligence_InputGroup_Intent *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_InputGroup_Intent *)((char *)this + 48), (protobuf::Intelligence_InputGroup_Intent *)((char *)a2 + 48));
  uint64_t v13 = (uint64_t *)*((void *)this + 9);
  uint64_t v14 = (uint64_t **)((char *)a2 + 72);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v13 = (uint64_t *)*((void *)this + 9);
  }
  char v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v15;
  std::string v13[2] = v18;
  *(_OWORD *)char v15 = v17;
  void v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 10);
  uint64_t v20 = (uint64_t **)((char *)a2 + 80);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 10);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  unint64_t v25 = (uint64_t *)*((void *)this + 11);
  uint64_t v26 = (uint64_t **)((char *)a2 + 88);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v25 = (uint64_t *)*((void *)this + 11);
  }
  uint64_t v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)unint64_t v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)uint64_t v27 = v29;
  v27[2] = v28;
LABEL_26:
  uint64_t v31 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v31;
}

void *protobuf::Intelligence_InputGroup_Intent::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.InputGroup.Intent");
}

void protobuf::Intelligence_InputGroup_Event::InitAsDefaultInstance(protobuf::Intelligence_InputGroup_Event *this)
{
  qword_268A0AFB0 = (uint64_t)&protobuf::_Intelligence_InputGroup_Interjection_default_instance_;
}

uint64_t protobuf::Intelligence_InputGroup_Event::_Internal::interjection_settings(protobuf::Intelligence_InputGroup_Event::_Internal *this, const protobuf::Intelligence_InputGroup_Event *a2)
{
  return *((void *)this + 9);
}

protobuf::Intelligence_InputGroup_Event *protobuf::Intelligence_InputGroup_Event::Intelligence_InputGroup_Event(protobuf::Intelligence_InputGroup_Event *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED27D90;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_InputGroup_Event_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_InputGroup_Event_intelligence_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 9) = 0;
  return this;
}

void sub_239A5B544(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_InputGroup_Event *protobuf::Intelligence_InputGroup_Event::Intelligence_InputGroup_Event(protobuf::Intelligence_InputGroup_Event *this, const protobuf::Intelligence_InputGroup_Event *a2)
{
  *(void *)this = &unk_26ED27D90;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 6);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v7);
    }
  }
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 7);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v8);
    }
  }
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 8);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v9);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (!*((void *)a2 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 15060);
      long long v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: !value || interjection_settings_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 9) = 0;
  return this;
}

void sub_239A5B6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v4);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v3);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_InputGroup_Event::~Intelligence_InputGroup_Event(protobuf::Intelligence_InputGroup_Event *this)
{
  *(void *)this = &unk_26ED27D90;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 8);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  if (this != (protobuf::Intelligence_InputGroup_Event *)&protobuf::_Intelligence_InputGroup_Event_default_instance_)
  {
    uint64_t v8 = *((void *)this + 9);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_InputGroup_Event::~Intelligence_InputGroup_Event(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_InputGroup_Event::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_InputGroup_Event::default_instance(protobuf::Intelligence_InputGroup_Event *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_InputGroup_Event_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_InputGroup_Event_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_InputGroup_Event_default_instance_;
}

void protobuf::Intelligence_InputGroup_Event::Clear(protobuf::Intelligence_InputGroup_Event *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_11:
    uint64_t v4 = *((void *)this + 7);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_15;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  uint64_t v3 = *((void *)this + 6);
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_11;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_11;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  uint64_t v5 = *((void *)this + 8);
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)uint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_22;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_22;
    }
  }
LABEL_19:
  uint64_t v6 = (protobuf::Intelligence_InputGroup_Interjection *)*((void *)this + 9);
  if (!v6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 5534);
    unint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: interjection_settings_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    uint64_t v6 = (protobuf::Intelligence_InputGroup_Interjection *)*((void *)this + 9);
  }
  protobuf::Intelligence_InputGroup_Interjection::Clear(v6);
LABEL_22:
  char v9 = *((unsigned char *)this + 8);
  uint64_t v8 = (protobuf::Intelligence_InputGroup_Event *)((char *)this + 8);
  *((_DWORD *)v8 + 2) = 0;
  if (v9) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v8);
  }
}

void sub_239A5BA44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *protobuf::Intelligence_InputGroup_Event::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v22 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v22, *((_DWORD *)this + 23));
  uint64_t result = v22;
  if ((v5 & 1) == 0)
  {
    unint64_t v7 = (uint64_t *)(a1 + 24);
    while (2)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)result + 1);
      LODWORD(v9) = *(unsigned __int8 *)result;
      if (*(char *)result < 0)
      {
        char v9 = (const char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
        if (*(char *)v8 < 0)
        {
          uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(result, v9);
          uint64_t v22 = result;
          if (!result) {
            return result;
          }
          uint64_t v8 = result;
LABEL_8:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 10) {
                goto LABEL_40;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              char v10 = *(std::string **)(a1 + 48);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 48, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_39;
            case 4u:
              if (v9 != 34) {
                goto LABEL_40;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              char v10 = *(std::string **)(a1 + 56);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 56, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_39;
            case 5u:
              if (v9 != 42) {
                goto LABEL_40;
              }
              *(_DWORD *)(a1 + 16) |= 8u;
              uint64_t v11 = *(protobuf::Intelligence_InputGroup_Interjection **)(a1 + 72);
              if (!v11)
              {
                uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Interjection>(0);
                *(void *)(a1 + 72) = v11;
                uint64_t v8 = v22;
              }
              uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_InputGroup_Interjection>(this, (uint64_t)v11, v8);
              goto LABEL_45;
            case 6u:
              if (v9 != 50) {
                goto LABEL_40;
              }
              uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
              break;
            case 7u:
              if (v9 != 58) {
                goto LABEL_40;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              char v10 = *(std::string **)(a1 + 64);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 64, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_39:
              uint64_t result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v10, (std::string::value_type *)v8, (uint64_t)this);
              goto LABEL_45;
            default:
LABEL_40:
              if (v9) {
                BOOL v20 = (v9 & 7) == 4;
              }
              else {
                BOOL v20 = 1;
              }
              if (v20)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 - 1;
                return v8;
              }
              uint64_t result = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, (unint64_t *)(a1 + 8), v8, this);
LABEL_45:
              uint64_t v22 = result;
              if (!result) {
                return result;
              }
LABEL_46:
              int v21 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v22, *((_DWORD *)this + 23));
              uint64_t result = v22;
              if (v21) {
                return result;
              }
              continue;
          }
          while (1)
          {
            char v12 = (char *)result + 1;
            uint64_t v22 = (google::protobuf::internal *)((char *)result + 1);
            uint64_t v13 = *(int **)(a1 + 40);
            if (!v13) {
              break;
            }
            uint64_t v14 = *(int *)(a1 + 32);
            int v15 = *v13;
            if ((int)v14 >= *v13)
            {
              if (v15 == *(_DWORD *)(a1 + 36))
              {
LABEL_26:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v15 + 1);
                uint64_t v13 = *(int **)(a1 + 40);
                int v15 = *v13;
              }
              int *v13 = v15 + 1;
              long long v17 = (atomic_ullong *)*v7;
              if (!*v7) {
                operator new();
              }
              if (v17[14]) {
              unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v17, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
              }
              AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
              AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
              AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
              uint64_t v18 = *(void *)(a1 + 40);
              uint64_t v19 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + 32) = v19 + 1;
              *(void *)(v18 + 8 * v19 + 8) = AlignedAndAddCleanup;
              char v12 = (std::string::value_type *)v22;
              goto LABEL_32;
            }
            *(_DWORD *)(a1 + 32) = v14 + 1;
            unint64_t AlignedAndAddCleanup = *(std::string **)&v13[2 * v14 + 2];
LABEL_32:
            uint64_t result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v12, (uint64_t)this);
            uint64_t v22 = result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 50) {
              goto LABEL_46;
            }
          }
          int v15 = *(_DWORD *)(a1 + 36);
          goto LABEL_26;
        }
        uint64_t v8 = (google::protobuf::internal *)((char *)result + 2);
      }
      break;
    }
    uint64_t v22 = v8;
    goto LABEL_8;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_InputGroup_Event::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_InputGroup_Event *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 6), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_17;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 7), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_17;
  }
LABEL_7:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v7 = (protobuf::Intelligence_InputGroup_Interjection *)*((void *)this + 9);
  *uint64_t v4 = 42;
  unsigned int v8 = *((_DWORD *)v7 + 5);
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    unsigned int v10 = v8 >> 7;
    if (v8 >> 14)
    {
      char v9 = v4 + 3;
      do
      {
        *(v9 - 1) = v10 | 0x80;
        unsigned int v11 = v10 >> 7;
        ++v9;
        unsigned int v12 = v10 >> 14;
        v10 >>= 7;
      }
      while (v12);
      *(v9 - 1) = v11;
    }
    else
    {
      std::string v4[2] = v10;
      char v9 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v8;
    char v9 = v4 + 2;
  }
  uint64_t v4 = (char *)protobuf::Intelligence_InputGroup_Interjection::InternalSerializeWithCachedSizesToArray(v7, v9, a3);
LABEL_17:
  int v13 = *((_DWORD *)this + 8);
  if (v13 >= 1)
  {
    for (int i = 0; v13 != i; ++i)
    {
      uint64_t v15 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, i);
      if (*(char *)(v15 + 23) < 0)
      {
        int64_t v16 = *(void *)(v15 + 8);
        if (v16 > 127) {
          goto LABEL_29;
        }
      }
      else
      {
        int64_t v16 = *(unsigned __int8 *)(v15 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v16)
      {
        *uint64_t v4 = 50;
        v4[1] = v16;
        if (*(char *)(v15 + 23) >= 0) {
          long long v17 = (const void *)v15;
        }
        else {
          long long v17 = *(const void **)v15;
        }
        memcpy(v4 + 2, v17, v16);
        v4 += v16 + 2;
        continue;
      }
LABEL_29:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 6, v15, v4);
    }
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((const void ***)this + 8), v4);
  }
  uint64_t v18 = *((void *)this + 1);
  if ((v18 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v20 + 23) < 0)
  {
    uint64_t v22 = *(void **)v20;
    uint64_t v21 = *(void *)(v20 + 8);
  }
  else
  {
    LODWORD(v21) = *(unsigned __int8 *)(v20 + 23);
    uint64_t v22 = (void *)v20;
  }
  if (*(void *)a3 - (void)v4 >= (int)v21)
  {
    uint64_t v23 = (int)v21;
    memcpy(v4, v22, (int)v21);
    v4 += v23;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v22, v21, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_InputGroup_Event::ByteSizeLong(protobuf::Intelligence_InputGroup_Event *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 8);
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v3);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      if ((v6 & 0x80u) != 0) {
        uint64_t v6 = *(void *)(v5 + 8);
      }
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  int v7 = *((_DWORD *)this + 4);
  if ((v7 & 0xF) == 0) {
    goto LABEL_14;
  }
  if ((v7 & 1) == 0)
  {
    if ((v7 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_19:
    uint64_t v14 = *((void *)this + 7);
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 4) == 0)
    {
LABEL_12:
      if ((v7 & 8) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    goto LABEL_22;
  }
  uint64_t v11 = *((void *)this + 6);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 2) != 0) {
    goto LABEL_19;
  }
LABEL_11:
  if ((v7 & 4) == 0) {
    goto LABEL_12;
  }
LABEL_22:
  uint64_t v17 = *((void *)this + 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 8) != 0)
  {
LABEL_13:
    uint64_t v8 = protobuf::Intelligence_InputGroup_Interjection::ByteSizeLong(*((protobuf::Intelligence_InputGroup_Interjection **)this
                                                                      + 9));
    v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v9 = *((void *)this + 1);
  if (v9)
  {
    unint64_t v20 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v20 + 23) < 0) {
      uint64_t v21 = *(void *)(v20 + 8);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
    }
    v4 += v21;
  }
  *((_DWORD *)this + 5) = v4;
  return v4;
}

void protobuf::Intelligence_InputGroup_Event::CheckTypeAndMergeFrom(protobuf::Intelligence_InputGroup_Event *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_InputGroup_Event::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_InputGroup_Event::MergeFrom(protobuf::Intelligence_InputGroup_Event *this, const protobuf::Intelligence_InputGroup_Event *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 5721);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0xF) != 0)
  {
    if (v6)
    {
      int v7 = (std::string *)*((void *)this + 6);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 6);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 7);
      *((_DWORD *)this + 4) |= 2u;
      unsigned int v10 = (const std::string *)*((void *)a2 + 7);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 8);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 8);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v13 = (protobuf::Intelligence_InputGroup_Interjection *)*((void *)this + 9);
      if (!v13)
      {
        uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Interjection>(0);
        *((void *)this + 9) = v13;
      }
      if (*((void *)a2 + 9)) {
        uint64_t v14 = (const protobuf::Intelligence_InputGroup_Interjection *)*((void *)a2 + 9);
      }
      else {
        uint64_t v14 = (const protobuf::Intelligence_InputGroup_Interjection *)&protobuf::_Intelligence_InputGroup_Interjection_default_instance_;
      }
      protobuf::Intelligence_InputGroup_Interjection::MergeFrom(v13, v14);
    }
  }
}

void sub_239A5C488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_InputGroup_Event::CopyFrom(protobuf::Intelligence_InputGroup_Event *this, const protobuf::Intelligence_InputGroup_Event *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_InputGroup_Event::Clear(this);
    protobuf::Intelligence_InputGroup_Event::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_InputGroup_Event::IsInitialized(protobuf::Intelligence_InputGroup_Event *this)
{
  return 1;
}

void protobuf::Intelligence_InputGroup_Event::InternalSwap(protobuf::Intelligence_InputGroup_Event *this, protobuf::Intelligence_InputGroup_Event *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v32;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_28:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_InputGroup_Event *)((char *)this + 24), (protobuf::Intelligence_InputGroup_Event *)((char *)a2 + 24));
  uint64_t v13 = (uint64_t *)*((void *)this + 6);
  uint64_t v14 = (uint64_t **)((char *)a2 + 48);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v13 = (uint64_t *)*((void *)this + 6);
  }
  char v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v15;
  std::string v13[2] = v18;
  *(_OWORD *)char v15 = v17;
  void v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 7);
  unint64_t v20 = (uint64_t **)((char *)a2 + 56);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 7);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  unint64_t v25 = (uint64_t *)*((void *)this + 8);
  uint64_t v26 = (uint64_t **)((char *)a2 + 64);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v25 = (uint64_t *)*((void *)this + 8);
  }
  uint64_t v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)unint64_t v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)uint64_t v27 = v29;
  v27[2] = v28;
LABEL_26:
  uint64_t v31 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v31;
}

void *protobuf::Intelligence_InputGroup_Event::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.InputGroup.Event");
}

protobuf::Intelligence_InputGroup_Fallback *protobuf::Intelligence_InputGroup_Fallback::Intelligence_InputGroup_Fallback(protobuf::Intelligence_InputGroup_Fallback *this)
{
  *(void *)this = &unk_26ED27E20;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  if (atomic_load_explicit(scc_info_Intelligence_InputGroup_Fallback_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_InputGroup_Fallback_intelligence_2eproto);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_239A5C7E0(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v2 + 48);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v2 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_InputGroup_Fallback *protobuf::Intelligence_InputGroup_Fallback::Intelligence_InputGroup_Fallback(protobuf::Intelligence_InputGroup_Fallback *this, const protobuf::Intelligence_InputGroup_Fallback *a2)
{
  *(void *)this = &unk_26ED27E20;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 9);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v6);
    }
  }
  return this;
}

void sub_239A5C8E4(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v3);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_InputGroup_Fallback::~Intelligence_InputGroup_Fallback(protobuf::Intelligence_InputGroup_Fallback *this)
{
  *(void *)this = &unk_26ED27E20;
  uint64_t v2 = *((void *)this + 9);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 48);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_InputGroup_Fallback::~Intelligence_InputGroup_Fallback(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_InputGroup_Fallback::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_InputGroup_Fallback::default_instance(protobuf::Intelligence_InputGroup_Fallback *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_InputGroup_Fallback_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_InputGroup_Fallback_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_InputGroup_Fallback_default_instance_;
}

void protobuf::Intelligence_InputGroup_Fallback::Clear(protobuf::Intelligence_InputGroup_Fallback *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48);
  if (*((unsigned char *)this + 16))
  {
    uint64_t v2 = *((void *)this + 9);
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  char v4 = *((unsigned char *)this + 8);
  uint64_t v3 = (protobuf::Intelligence_InputGroup_Fallback *)((char *)this + 8);
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v3);
  }
}

std::string::value_type *protobuf::Intelligence_InputGroup_Fallback::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v31 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v31, *((_DWORD *)this + 23));
  uint64_t result = (std::string::value_type *)v31;
  if ((v5 & 1) == 0)
  {
    unint64_t v7 = (uint64_t *)(a1 + 48);
    unint64_t v8 = (uint64_t *)(a1 + 24);
    while (1)
    {
      uint64_t v9 = result + 1;
      LODWORD(v1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *result;
      if ((*result & 0x80000000) == 0) {
        goto LABEL_7;
      }
      long long v10 = (const char *)(v10 + (*v9 << 7) - 128);
      if ((*v9 & 0x80000000) == 0) {
        break;
      }
      uint64_t result = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)result, v10);
      uint64_t v31 = (google::protobuf::internal *)result;
      if (!result) {
        return result;
      }
      uint64_t v9 = result;
LABEL_8:
      unsigned int v11 = v10 >> 3;
      if (v10 >> 3 == 5)
      {
        if (v10 != 42) {
          goto LABEL_14;
        }
        uint64_t result = v9 - 1;
        while (2)
        {
          uint64_t v13 = result + 1;
          uint64_t v31 = (google::protobuf::internal *)(result + 1);
          uint64_t v14 = *(int **)(a1 + 64);
          if (v14)
          {
            uint64_t v15 = *(int *)(a1 + 56);
            int v16 = *v14;
            if ((int)v15 < *v14)
            {
              *(_DWORD *)(a1 + 56) = v15 + 1;
              unint64_t AlignedAndAddCleanup = *(std::string **)&v14[2 * v15 + 2];
              goto LABEL_30;
            }
            if (v16 == *(_DWORD *)(a1 + 60))
            {
LABEL_24:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v16 + 1);
              uint64_t v14 = *(int **)(a1 + 64);
              int v16 = *v14;
            }
            *uint64_t v14 = v16 + 1;
            uint64_t v18 = (atomic_ullong *)*v7;
            if (!*v7) {
              operator new();
            }
            if (v18[14]) {
            unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v18, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
            }
            AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
            AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
            AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
            uint64_t v19 = *(void *)(a1 + 64);
            uint64_t v20 = *(int *)(a1 + 56);
            *(_DWORD *)(a1 + 56) = v20 + 1;
            *(void *)(v19 + 8 * v20 + 8) = AlignedAndAddCleanup;
            uint64_t v13 = (std::string::value_type *)v31;
LABEL_30:
            uint64_t result = google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v13, (uint64_t)this);
            uint64_t v31 = (google::protobuf::internal *)result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *result != 42) {
              goto LABEL_39;
            }
            continue;
          }
          break;
        }
        int v16 = *(_DWORD *)(a1 + 60);
        goto LABEL_24;
      }
      if (v11 != 2)
      {
        if (v11 != 1 || v10 != 10) {
          goto LABEL_14;
        }
        uint64_t result = v9 - 1;
        while (1)
        {
          long long v23 = result + 1;
          uint64_t v31 = (google::protobuf::internal *)(result + 1);
          uint64_t v24 = *(int **)(a1 + 40);
          if (!v24) {
            break;
          }
          uint64_t v25 = *(int *)(a1 + 32);
          int v26 = *v24;
          if ((int)v25 >= *v24)
          {
            if (v26 == *(_DWORD *)(a1 + 36))
            {
LABEL_47:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v26 + 1);
              uint64_t v24 = *(int **)(a1 + 40);
              int v26 = *v24;
            }
            *uint64_t v24 = v26 + 1;
            uint64_t v28 = (atomic_ullong *)*v8;
            if (!*v8) {
              operator new();
            }
            if (v28[14]) {
            uint64_t v27 = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v28, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
            }
            v27->__r_.__value_.__r.__words[0] = 0;
            v27->__r_.__value_.__l.__size_ = 0;
            v27->__r_.__value_.__r.__words[2] = 0;
            uint64_t v29 = *(void *)(a1 + 40);
            uint64_t v30 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 32) = v30 + 1;
            *(void *)(v29 + 8 * v30 + 8) = v27;
            long long v23 = (std::string::value_type *)v31;
            goto LABEL_53;
          }
          *(_DWORD *)(a1 + 32) = v25 + 1;
          uint64_t v27 = *(std::string **)&v24[2 * v25 + 2];
LABEL_53:
          uint64_t result = google::protobuf::internal::InlineGreedyStringParser(v27, v23, (uint64_t)this);
          uint64_t v31 = (google::protobuf::internal *)result;
          if (!result) {
            return result;
          }
          if (*(void *)this <= (unint64_t)result || *result != 10) {
            goto LABEL_39;
          }
        }
        int v26 = *(_DWORD *)(a1 + 36);
        goto LABEL_47;
      }
      if (v10 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(std::string **)(a1 + 72);
        if (v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 72, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t result = google::protobuf::internal::InlineGreedyStringParser(v21, v9, (uint64_t)this);
        goto LABEL_38;
      }
LABEL_14:
      if (!v10 || (v10 & 7) == 4)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v10 - 1;
        return v9;
      }
      uint64_t result = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse(v10, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v9, this);
LABEL_38:
      uint64_t v31 = (google::protobuf::internal *)result;
      if (!result) {
        return result;
      }
LABEL_39:
      int v22 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v31, *((_DWORD *)this + 23));
      uint64_t result = (std::string::value_type *)v31;
      if (v22) {
        return result;
      }
    }
    uint64_t v9 = result + 2;
LABEL_7:
    uint64_t v31 = (google::protobuf::internal *)v9;
    goto LABEL_8;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_InputGroup_Fallback::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_InputGroup_Fallback *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6 >= 1)
  {
    for (int i = 0; v6 != i; ++i)
    {
      uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, i);
      if (*(char *)(v8 + 23) < 0)
      {
        int64_t v9 = *(void *)(v8 + 8);
        if (v9 > 127) {
          goto LABEL_13;
        }
      }
      else
      {
        int64_t v9 = *(unsigned __int8 *)(v8 + 23);
      }
      if (*(void *)a3 - (void)a2 + 14 >= v9)
      {
        *a2 = 10;
        a2[1] = v9;
        if (*(char *)(v8 + 23) >= 0) {
          long long v10 = (const void *)v8;
        }
        else {
          long long v10 = *(const void **)v8;
        }
        memcpy(a2 + 2, v10, v9);
        a2 += v9 + 2;
        continue;
      }
LABEL_13:
      a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 1, v8, a2);
    }
  }
  if (*((unsigned char *)this + 16)) {
    a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 9), a2);
  }
  int v11 = *((_DWORD *)this + 14);
  if (v11 >= 1)
  {
    for (int j = 0; v11 != j; ++j)
    {
      uint64_t v13 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, j);
      if (*(char *)(v13 + 23) < 0)
      {
        int64_t v14 = *(void *)(v13 + 8);
        if (v14 > 127) {
          goto LABEL_28;
        }
      }
      else
      {
        int64_t v14 = *(unsigned __int8 *)(v13 + 23);
      }
      if (*(void *)a3 - (void)a2 + 14 >= v14)
      {
        *a2 = 42;
        a2[1] = v14;
        if (*(char *)(v13 + 23) >= 0) {
          uint64_t v15 = (const void *)v13;
        }
        else {
          uint64_t v15 = *(const void **)v13;
        }
        memcpy(a2 + 2, v15, v14);
        a2 += v14 + 2;
        continue;
      }
LABEL_28:
      a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 5, v13, a2);
    }
  }
  uint64_t v16 = *((void *)this + 1);
  if ((v16 & 1) == 0) {
    return (unsigned __int8 *)a2;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v18 + 23) < 0)
  {
    uint64_t v20 = *(void **)v18;
    uint64_t v19 = *(void *)(v18 + 8);
  }
  else
  {
    LODWORD(v19) = *(unsigned __int8 *)(v18 + 23);
    uint64_t v20 = (void *)v18;
  }
  if (*(void *)a3 - (void)a2 >= (int)v19)
  {
    uint64_t v21 = (int)v19;
    memcpy(a2, v20, (int)v19);
    a2 += v21;
    return (unsigned __int8 *)a2;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v20, v19, (unsigned __int8 *)a2);
}

uint64_t protobuf::Intelligence_InputGroup_Fallback::ByteSizeLong(protobuf::Intelligence_InputGroup_Fallback *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 8);
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v3);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      if ((v6 & 0x80u) != 0) {
        uint64_t v6 = *(void *)(v5 + 8);
      }
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  uint64_t v7 = *((unsigned int *)this + 14);
  uint64_t v8 = v4 + v7;
  if ((int)v7 >= 1)
  {
    int v9 = 0;
    do
    {
      uint64_t v10 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, v9);
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      if ((v11 & 0x80u) != 0) {
        uint64_t v11 = *(void *)(v10 + 8);
      }
      v8 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      ++v9;
    }
    while (v7 != v9);
  }
  if (*((unsigned char *)this + 16))
  {
    uint64_t v12 = *((void *)this + 9);
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v8 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v15 = *((void *)this + 1);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v17 + 23) < 0) {
      uint64_t v18 = *(void *)(v17 + 8);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    }
    v8 += v18;
  }
  *((_DWORD *)this + 5) = v8;
  return v8;
}

void protobuf::Intelligence_InputGroup_Fallback::CheckTypeAndMergeFrom(protobuf::Intelligence_InputGroup_Fallback *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_InputGroup_Fallback::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_InputGroup_Fallback::MergeFrom(protobuf::Intelligence_InputGroup_Fallback *this, const protobuf::Intelligence_InputGroup_Fallback *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 5988);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v8 = (std::string *)*((void *)this + 9);
    uint64_t v7 = (char *)this + 72;
    uint64_t v6 = v8;
    *((_DWORD *)v7 - 14) |= 1u;
    int v9 = (const std::string *)*((void *)a2 + 9);
    if (v8 != v9)
    {
      if (v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)v9);
      }
      std::string::operator=(v6, v9);
    }
  }
}

void sub_239A5D3CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_InputGroup_Fallback::CopyFrom(protobuf::Intelligence_InputGroup_Fallback *this, const protobuf::Intelligence_InputGroup_Fallback *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_InputGroup_Fallback::Clear(this);
    protobuf::Intelligence_InputGroup_Fallback::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_InputGroup_Fallback::IsInitialized(protobuf::Intelligence_InputGroup_Fallback *this)
{
  return 1;
}

__n128 protobuf::Intelligence_InputGroup_Fallback::InternalSwap(protobuf::Intelligence_InputGroup_Fallback *this, protobuf::Intelligence_InputGroup_Fallback *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v21;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_InputGroup_Fallback *)((char *)this + 24), (protobuf::Intelligence_InputGroup_Fallback *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_InputGroup_Fallback *)((char *)this + 48), (protobuf::Intelligence_InputGroup_Fallback *)((char *)a2 + 48));
  uint64_t v16 = (uint64_t *)*((void *)this + 9);
  uint64_t v14 = (std::string **)((char *)this + 72);
  uint64_t v15 = (std::string *)v16;
  unint64_t v17 = (std::string **)((char *)a2 + 72);
  if (v16 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v18 = *v17;
  if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v18 = *v17;
  }
  std::string::size_type v19 = v15->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v15->__r_.__value_.__l.__data_;
  std::string::size_type v20 = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v15->__r_.__value_.__r.__words[2] = v20;
  *(__n128 *)&v18->__r_.__value_.__l.__data_ = result;
  v18->__r_.__value_.__r.__words[2] = v19;
  return result;
}

void *protobuf::Intelligence_InputGroup_Fallback::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.InputGroup.Fallback");
}

protobuf::Intelligence_InputGroup_LegacyEvent *protobuf::Intelligence_InputGroup_LegacyEvent::Intelligence_InputGroup_LegacyEvent(protobuf::Intelligence_InputGroup_LegacyEvent *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED27EB0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_InputGroup_LegacyEvent_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_InputGroup_LegacyEvent_intelligence_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_239A5D61C(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_InputGroup_LegacyEvent *protobuf::Intelligence_InputGroup_LegacyEvent::Intelligence_InputGroup_LegacyEvent(protobuf::Intelligence_InputGroup_LegacyEvent *this, const protobuf::Intelligence_InputGroup_LegacyEvent *a2)
{
  *(void *)this = &unk_26ED27EB0;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 6);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v7);
    }
  }
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 7);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v8);
    }
  }
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 8);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v9);
    }
  }
  return this;
}

void sub_239A5D73C(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_InputGroup_LegacyEvent::~Intelligence_InputGroup_LegacyEvent(protobuf::Intelligence_InputGroup_LegacyEvent *this)
{
  *(void *)this = &unk_26ED27EB0;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 8);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_InputGroup_LegacyEvent::~Intelligence_InputGroup_LegacyEvent(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_InputGroup_LegacyEvent::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_InputGroup_LegacyEvent::default_instance(protobuf::Intelligence_InputGroup_LegacyEvent *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_InputGroup_LegacyEvent_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_InputGroup_LegacyEvent_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_InputGroup_LegacyEvent_default_instance_;
}

void protobuf::Intelligence_InputGroup_LegacyEvent::Clear(protobuf::Intelligence_InputGroup_LegacyEvent *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 7) != 0)
  {
    if ((v2 & 1) == 0)
    {
      if ((v2 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      uint64_t v4 = *((void *)this + 7);
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)uint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v2 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if ((v2 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    uint64_t v3 = *((void *)this + 6);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    uint64_t v5 = *((void *)this + 8);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_17:
  char v7 = *((unsigned char *)this + 8);
  uint64_t v6 = (protobuf::Intelligence_InputGroup_LegacyEvent *)((char *)this + 8);
  *((_DWORD *)v6 + 2) = 0;
  if (v7)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v6);
  }
}

std::string::value_type *protobuf::Intelligence_InputGroup_LegacyEvent::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  unint64_t v21 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v21, *((_DWORD *)this + 23));
  __n128 result = (std::string::value_type *)v21;
  if ((v5 & 1) == 0)
  {
    char v7 = (uint64_t *)(a1 + 24);
    while (2)
    {
      unint64_t v8 = result + 1;
      LODWORD(v9) = *result;
      if (*result < 0)
      {
        uint64_t v9 = (const char *)(v9 + (*v8 << 7) - 128);
        if (*v8 < 0)
        {
          __n128 result = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)result, v9);
          unint64_t v21 = (google::protobuf::internal *)result;
          if (!result) {
            return result;
          }
          unint64_t v8 = result;
LABEL_8:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 10) {
                goto LABEL_36;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              long long v10 = *(std::string **)(a1 + 48);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 48, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_18;
            case 2u:
              if (v9 != 18) {
                goto LABEL_36;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              long long v10 = *(std::string **)(a1 + 56);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 56, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_18;
            case 3u:
              if (v9 != 26) {
                goto LABEL_36;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              long long v10 = *(std::string **)(a1 + 64);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 64, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_18:
              __n128 result = google::protobuf::internal::InlineGreedyStringParser(v10, v8, (uint64_t)this);
              goto LABEL_41;
            case 4u:
              if (v9 != 34) {
                goto LABEL_36;
              }
              __n128 result = v8 - 1;
              break;
            default:
LABEL_36:
              if (v9) {
                BOOL v19 = (v9 & 7) == 4;
              }
              else {
                BOOL v19 = 1;
              }
              if (v19)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 - 1;
                return v8;
              }
              __n128 result = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse(v9, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v8, this);
LABEL_41:
              unint64_t v21 = (google::protobuf::internal *)result;
              if (!result) {
                return result;
              }
LABEL_42:
              int v20 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v21, *((_DWORD *)this + 23));
              __n128 result = (std::string::value_type *)v21;
              if (v20) {
                return result;
              }
              continue;
          }
          while (1)
          {
            uint64_t v11 = result + 1;
            unint64_t v21 = (google::protobuf::internal *)(result + 1);
            int v12 = *(int **)(a1 + 40);
            if (!v12) {
              break;
            }
            uint64_t v13 = *(int *)(a1 + 32);
            int v14 = *v12;
            if ((int)v13 >= *v12)
            {
              if (v14 == *(_DWORD *)(a1 + 36))
              {
LABEL_26:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v14 + 1);
                int v12 = *(int **)(a1 + 40);
                int v14 = *v12;
              }
              *int v12 = v14 + 1;
              uint64_t v16 = (atomic_ullong *)*v7;
              if (!*v7) {
                operator new();
              }
              if (v16[14]) {
              unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v16, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
              }
              AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
              AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
              AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
              uint64_t v17 = *(void *)(a1 + 40);
              uint64_t v18 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + 32) = v18 + 1;
              *(void *)(v17 + 8 * v18 + 8) = AlignedAndAddCleanup;
              uint64_t v11 = (std::string::value_type *)v21;
              goto LABEL_32;
            }
            *(_DWORD *)(a1 + 32) = v13 + 1;
            unint64_t AlignedAndAddCleanup = *(std::string **)&v12[2 * v13 + 2];
LABEL_32:
            __n128 result = google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v11, (uint64_t)this);
            unint64_t v21 = (google::protobuf::internal *)result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *result != 34) {
              goto LABEL_42;
            }
          }
          int v14 = *(_DWORD *)(a1 + 36);
          goto LABEL_26;
        }
        unint64_t v8 = result + 2;
      }
      break;
    }
    unint64_t v21 = (google::protobuf::internal *)v8;
    goto LABEL_8;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_InputGroup_LegacyEvent::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_InputGroup_LegacyEvent *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 6), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 7), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 8), v4);
LABEL_5:
  int v7 = *((_DWORD *)this + 8);
  if (v7 >= 1)
  {
    for (int i = 0; v7 != i; ++i)
    {
      uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, i);
      if (*(char *)(v9 + 23) < 0)
      {
        int64_t v10 = *(void *)(v9 + 8);
        if (v10 > 127) {
          goto LABEL_17;
        }
      }
      else
      {
        int64_t v10 = *(unsigned __int8 *)(v9 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v10)
      {
        *uint64_t v4 = 34;
        v4[1] = v10;
        if (*(char *)(v9 + 23) >= 0) {
          uint64_t v11 = (const void *)v9;
        }
        else {
          uint64_t v11 = *(const void **)v9;
        }
        memcpy(v4 + 2, v11, v10);
        v4 += v10 + 2;
        continue;
      }
LABEL_17:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 4, v9, v4);
    }
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    uint64_t v16 = *(void **)v14;
    uint64_t v15 = *(void *)(v14 + 8);
  }
  else
  {
    LODWORD(v15) = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = (void *)v14;
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v17 = (int)v15;
    memcpy(v4, v16, (int)v15);
    v4 += v17;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v16, v15, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_InputGroup_LegacyEvent::ByteSizeLong(protobuf::Intelligence_InputGroup_LegacyEvent *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 8);
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v3);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      if ((v6 & 0x80u) != 0) {
        uint64_t v6 = *(void *)(v5 + 8);
      }
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  int v7 = *((_DWORD *)this + 4);
  if ((v7 & 7) != 0)
  {
    if (v7)
    {
      uint64_t v13 = *((void *)this + 6);
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v7 & 2) == 0)
      {
LABEL_11:
        if ((v7 & 4) == 0) {
          goto LABEL_15;
        }
        goto LABEL_12;
      }
    }
    else if ((v7 & 2) == 0)
    {
      goto LABEL_11;
    }
    uint64_t v16 = *((void *)this + 7);
    uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
    uint64_t v18 = *(void *)(v16 + 8);
    if ((v17 & 0x80u) == 0) {
      uint64_t v18 = v17;
    }
    v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 4) != 0)
    {
LABEL_12:
      uint64_t v8 = *((void *)this + 8);
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_15:
  uint64_t v11 = *((void *)this + 1);
  if (v11)
  {
    unint64_t v19 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v19 + 23) < 0) {
      uint64_t v20 = *(void *)(v19 + 8);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
    }
    v4 += v20;
  }
  *((_DWORD *)this + 5) = v4;
  return v4;
}

void protobuf::Intelligence_InputGroup_LegacyEvent::CheckTypeAndMergeFrom(protobuf::Intelligence_InputGroup_LegacyEvent *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_InputGroup_LegacyEvent::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_InputGroup_LegacyEvent::MergeFrom(protobuf::Intelligence_InputGroup_LegacyEvent *this, const protobuf::Intelligence_InputGroup_LegacyEvent *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 6278);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      int v7 = (std::string *)*((void *)this + 6);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 6);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 7);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 7);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v13 = (std::string *)*((void *)this + 8);
      uint64_t v12 = (char *)this + 64;
      uint64_t v11 = v13;
      *((_DWORD *)v12 - 12) |= 4u;
      uint64_t v14 = (const std::string *)*((void *)a2 + 8);
      if (v13 != v14)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v12, (uint64_t)v14);
        }
        std::string::operator=(v11, v14);
      }
    }
  }
}

void sub_239A5E2B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_InputGroup_LegacyEvent::CopyFrom(protobuf::Intelligence_InputGroup_LegacyEvent *this, const protobuf::Intelligence_InputGroup_LegacyEvent *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_InputGroup_LegacyEvent::Clear(this);
    protobuf::Intelligence_InputGroup_LegacyEvent::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_InputGroup_LegacyEvent::IsInitialized(protobuf::Intelligence_InputGroup_LegacyEvent *this)
{
  return 1;
}

__n128 protobuf::Intelligence_InputGroup_LegacyEvent::InternalSwap(protobuf::Intelligence_InputGroup_LegacyEvent *this, protobuf::Intelligence_InputGroup_LegacyEvent *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v31;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_28:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_InputGroup_LegacyEvent *)((char *)this + 24), (protobuf::Intelligence_InputGroup_LegacyEvent *)((char *)a2 + 24));
  uint64_t v14 = (uint64_t *)*((void *)this + 6);
  char v15 = (uint64_t **)((char *)a2 + 48);
  if (v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v15 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v14 = (uint64_t *)*((void *)this + 6);
  }
  uint64_t v16 = *v15;
  if (*v15 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v16 = *v15;
  }
  uint64_t v17 = v14[2];
  __n128 result = *(__n128 *)v14;
  uint64_t v18 = v16[2];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v16;
  std::string v14[2] = v18;
  *(__n128 *)uint64_t v16 = result;
  std::string v16[2] = v17;
LABEL_14:
  unint64_t v19 = (uint64_t *)*((void *)this + 7);
  uint64_t v20 = (uint64_t **)((char *)a2 + 56);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v19 = (uint64_t *)*((void *)this + 7);
  }
  unint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  __n128 result = *(__n128 *)v19;
  uint64_t v23 = v21[2];
  *(_OWORD *)unint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v23;
  *(__n128 *)unint64_t v21 = result;
  void v21[2] = v22;
LABEL_20:
  int v26 = (uint64_t *)*((void *)this + 8);
  uint64_t v24 = (std::string **)((char *)this + 64);
  uint64_t v25 = (std::string *)v26;
  uint64_t v27 = (std::string **)((char *)a2 + 64);
  if (v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v27 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v24, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v25 = *v24;
  }
  uint64_t v28 = *v27;
  if (*v27 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v27, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v28 = *v27;
  }
  std::string::size_type v29 = v25->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v25->__r_.__value_.__l.__data_;
  std::string::size_type v30 = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25->__r_.__value_.__l.__data_ = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v25->__r_.__value_.__r.__words[2] = v30;
  *(__n128 *)&v28->__r_.__value_.__l.__data_ = result;
  v28->__r_.__value_.__r.__words[2] = v29;
  return result;
}

void *protobuf::Intelligence_InputGroup_LegacyEvent::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.InputGroup.LegacyEvent");
}

protobuf::Intelligence_InputGroup *protobuf::Intelligence_InputGroup::Intelligence_InputGroup(protobuf::Intelligence_InputGroup *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED27F40;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *((void *)this + 17) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_InputGroup_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_InputGroup_intelligence_2eproto);
  }
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 19) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 42) = 0;
  *((unsigned char *)this + 172) = 0;
  return this;
}

void sub_239A5E620(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 15));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v2 + 12);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 9));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 6));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 3));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_InputGroup *protobuf::Intelligence_InputGroup::Intelligence_InputGroup(protobuf::Intelligence_InputGroup *this, const protobuf::Intelligence_InputGroup *a2)
{
  *(void *)this = &unk_26ED27F40;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Fallback>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  *((void *)this + 9) = 0;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((void *)this + 11) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_LegacyEvent>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 12, (uint64_t)a2 + 96);
  *((void *)this + 15) = 0;
  *((void *)this + 16) = 0;
  *((void *)this + 17) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Event>::TypeHandler>((int **)this + 15, (uint64_t)a2 + 120);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 18);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 144, (uint64_t)v7);
    }
  }
  *((void *)this + 19) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 19);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 152, (uint64_t)v8);
    }
  }
  *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 20);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 160, (uint64_t)v9);
    }
  }
  int v10 = *((_DWORD *)a2 + 42);
  *((unsigned char *)this + 172) = *((unsigned char *)a2 + 172);
  *((_DWORD *)this + 42) = v10;
  return this;
}

void sub_239A5E7F0(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v6);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v5);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v4);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v3);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_InputGroup::~Intelligence_InputGroup(protobuf::Intelligence_InputGroup *this)
{
  *(void *)this = &unk_26ED27F40;
  uint64_t v2 = *((void *)this + 18);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 19);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 20);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_InputGroup *)((char *)this + 120));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 12);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_InputGroup *)((char *)this + 72));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_InputGroup *)((char *)this + 48));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_InputGroup *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_InputGroup::~Intelligence_InputGroup(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_InputGroup::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_InputGroup::default_instance(protobuf::Intelligence_InputGroup *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_InputGroup_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_InputGroup_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_InputGroup_default_instance_;
}

void protobuf::Intelligence_InputGroup::Clear(protobuf::Intelligence_InputGroup *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::TypeHandler>((uint64_t)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Fallback>::TypeHandler>((uint64_t)this + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_LegacyEvent>::TypeHandler>((uint64_t)this + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 96);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Event>::TypeHandler>((uint64_t)this + 120);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 7) != 0)
  {
    if ((v2 & 1) == 0)
    {
      if ((v2 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      uint64_t v4 = *((void *)this + 19);
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)uint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v2 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if ((v2 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    uint64_t v3 = *((void *)this + 18);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    uint64_t v5 = *((void *)this + 20);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_17:
  if ((v2 & 0xF8) != 0)
  {
    *((unsigned char *)this + 172) = 0;
    *((_DWORD *)this + 42) = 0;
  }
  char v7 = *((unsigned char *)this + 8);
  uint64_t v6 = (protobuf::Intelligence_InputGroup *)((char *)this + 8);
  *((_DWORD *)v6 + 2) = 0;
  if (v7)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v6);
  }
}

google::protobuf::internal *protobuf::Intelligence_InputGroup::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v115 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v115, *((_DWORD *)this + 23)) & 1) == 0)
  {
    while (2)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v115 + 1);
      LODWORD(v7) = *(unsigned __int8 *)v115;
      if (*(char *)v115 < 0)
      {
        char v7 = (const char *)(v7 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v115, v7);
          uint64_t v115 = TagFallback;
          if (!TagFallback) {
            goto LABEL_153;
          }
LABEL_7:
          switch(v7 >> 3)
          {
            case 1u:
              if (v7 != 10) {
                goto LABEL_135;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              unint64_t v8 = *(std::string **)(a1 + 144);
              if (v8 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_92;
              }
              uint64_t v9 = a1 + 144;
              goto LABEL_91;
            case 2u:
              if (v7 != 18) {
                goto LABEL_135;
              }
              int v10 = (char *)TagFallback - 1;
              while (2)
              {
                uint64_t v11 = (google::protobuf::internal *)(v10 + 1);
                uint64_t v115 = v11;
                int v12 = *(int **)(a1 + 40);
                if (!v12)
                {
                  int v14 = *(_DWORD *)(a1 + 36);
LABEL_20:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v14 + 1);
                  int v12 = *(int **)(a1 + 40);
                  int v14 = *v12;
                  goto LABEL_21;
                }
                uint64_t v13 = *(int *)(a1 + 32);
                int v14 = *v12;
                if ((int)v13 < *v12)
                {
                  *(_DWORD *)(a1 + 32) = v13 + 1;
                  char v15 = *(protobuf::Intelligence_InputGroup_Intent **)&v12[2 * v13 + 2];
                  goto LABEL_22;
                }
                if (v14 == *(_DWORD *)(a1 + 36)) {
                  goto LABEL_20;
                }
LABEL_21:
                *int v12 = v14 + 1;
                char v15 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Intent>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
                uint64_t v16 = *(void *)(a1 + 40);
                uint64_t v17 = *(int *)(a1 + 32);
                *(_DWORD *)(a1 + 32) = v17 + 1;
                *(void *)(v16 + 8 * v17 + 8) = v15;
                uint64_t v11 = v115;
LABEL_22:
                unsigned int v18 = *(unsigned __int8 *)v11;
                if (*(char *)v11 < 0)
                {
                  SizeFallbacint k = google::protobuf::internal::ReadSizeFallback(v11, (const char *)*(unsigned __int8 *)v11);
                  if (!SizeFallback) {
                    goto LABEL_152;
                  }
                  unint64_t v19 = SizeFallback;
                  unsigned int v18 = v21;
                }
                else
                {
                  unint64_t v19 = (char *)v11 + 1;
                }
                int v22 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v19, v18);
                int v23 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v23--, 1);
                *((_DWORD *)this + 22) = v23;
                if (v23 < 0 == v24)
                {
                  int v25 = v22;
                  int v10 = protobuf::Intelligence_InputGroup_Intent::_InternalParse((uint64_t)v15, (google::protobuf::internal *)v19, this);
                  if (v10)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v26 = *((_DWORD *)this + 7) + v25;
                      *((_DWORD *)this + 7) = v26;
                      unint64_t v27 = *((void *)this + 1) + (v26 & (v26 >> 31));
                      *(void *)this = v27;
                      uint64_t v115 = (google::protobuf::internal *)v10;
                      if (v27 <= (unint64_t)v10 || *v10 != 18) {
                        goto LABEL_141;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_152;
              }
            case 3u:
              if (v7 != 26) {
                goto LABEL_135;
              }
              uint64_t v28 = (char *)TagFallback - 1;
              while (2)
              {
                std::string::size_type v29 = (google::protobuf::internal *)(v28 + 1);
                uint64_t v115 = v29;
                std::string::size_type v30 = *(int **)(a1 + 64);
                if (!v30)
                {
                  int v32 = *(_DWORD *)(a1 + 60);
LABEL_39:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v32 + 1);
                  std::string::size_type v30 = *(int **)(a1 + 64);
                  int v32 = *v30;
                  goto LABEL_40;
                }
                uint64_t v31 = *(int *)(a1 + 56);
                int v32 = *v30;
                if ((int)v31 < *v30)
                {
                  *(_DWORD *)(a1 + 56) = v31 + 1;
                  uint64_t v33 = *(protobuf::Intelligence_InputGroup_Fallback **)&v30[2 * v31 + 2];
                  goto LABEL_41;
                }
                if (v32 == *(_DWORD *)(a1 + 60)) {
                  goto LABEL_39;
                }
LABEL_40:
                *std::string::size_type v30 = v32 + 1;
                uint64_t v33 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Fallback>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
                uint64_t v34 = *(void *)(a1 + 64);
                uint64_t v35 = *(int *)(a1 + 56);
                *(_DWORD *)(a1 + 56) = v35 + 1;
                *(void *)(v34 + 8 * v35 + 8) = v33;
                std::string::size_type v29 = v115;
LABEL_41:
                unsigned int v36 = *(unsigned __int8 *)v29;
                if (*(char *)v29 < 0)
                {
                  uint64_t v38 = google::protobuf::internal::ReadSizeFallback(v29, (const char *)*(unsigned __int8 *)v29);
                  if (!v38) {
                    goto LABEL_152;
                  }
                  unint64_t v37 = v38;
                  unsigned int v36 = v39;
                }
                else
                {
                  unint64_t v37 = (char *)v29 + 1;
                }
                int v40 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v37, v36);
                int v41 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v41--, 1);
                *((_DWORD *)this + 22) = v41;
                if (v41 < 0 == v24)
                {
                  int v42 = v40;
                  uint64_t v28 = protobuf::Intelligence_InputGroup_Fallback::_InternalParse((uint64_t)v33, (google::protobuf::internal *)v37, this);
                  if (v28)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v43 = *((_DWORD *)this + 7) + v42;
                      *((_DWORD *)this + 7) = v43;
                      unint64_t v44 = *((void *)this + 1) + (v43 & (v43 >> 31));
                      *(void *)this = v44;
                      uint64_t v115 = (google::protobuf::internal *)v28;
                      if (v44 <= (unint64_t)v28 || *v28 != 26) {
                        goto LABEL_141;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_152;
              }
            case 4u:
              if (v7 != 34) {
                goto LABEL_135;
              }
              uint64_t v45 = (char *)TagFallback - 1;
              while (2)
              {
                uint64_t v46 = (google::protobuf::internal *)(v45 + 1);
                uint64_t v115 = v46;
                long long v47 = *(int **)(a1 + 88);
                if (!v47)
                {
                  int v49 = *(_DWORD *)(a1 + 84);
LABEL_58:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v49 + 1);
                  long long v47 = *(int **)(a1 + 88);
                  int v49 = *v47;
                  goto LABEL_59;
                }
                uint64_t v48 = *(int *)(a1 + 80);
                int v49 = *v47;
                if ((int)v48 < *v47)
                {
                  *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v48 + 1;
                  uint64_t v50 = *(protobuf::Intelligence_InputGroup_LegacyEvent **)&v47[2 * v48 + 2];
                  goto LABEL_60;
                }
                if (v49 == *(_DWORD *)(a1 + 84)) {
                  goto LABEL_58;
                }
LABEL_59:
                *long long v47 = v49 + 1;
                uint64_t v50 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_LegacyEvent>(*(google::protobuf::internal::ArenaImpl **)(a1 + 72));
                uint64_t v51 = *(void *)(a1 + 88);
                uint64_t v52 = *(int *)(a1 + 80);
                *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v52 + 1;
                *(void *)(v51 + 8 * v52 + 8) = v50;
                uint64_t v46 = v115;
LABEL_60:
                unsigned int v53 = *(unsigned __int8 *)v46;
                if (*(char *)v46 < 0)
                {
                  uint64_t v55 = google::protobuf::internal::ReadSizeFallback(v46, (const char *)*(unsigned __int8 *)v46);
                  if (!v55) {
                    goto LABEL_152;
                  }
                  uint64_t v54 = v55;
                  unsigned int v53 = v56;
                }
                else
                {
                  uint64_t v54 = (char *)v46 + 1;
                }
                int v57 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v54, v53);
                int v58 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v58--, 1);
                *((_DWORD *)this + 22) = v58;
                if (v58 < 0 == v24)
                {
                  int v59 = v57;
                  uint64_t v45 = protobuf::Intelligence_InputGroup_LegacyEvent::_InternalParse((uint64_t)v50, (google::protobuf::internal *)v54, this);
                  if (v45)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v60 = *((_DWORD *)this + 7) + v59;
                      *((_DWORD *)this + 7) = v60;
                      unint64_t v61 = *((void *)this + 1) + (v60 & (v60 >> 31));
                      *(void *)this = v61;
                      uint64_t v115 = (google::protobuf::internal *)v45;
                      if (v61 <= (unint64_t)v45 || *v45 != 34) {
                        goto LABEL_141;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_152;
              }
            case 5u:
              if (v7 != 40) {
                goto LABEL_135;
              }
              v5 |= 0x10u;
              uint64_t v62 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v63 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_74;
              }
              int v64 = *(char *)v62;
              unint64_t v63 = v63 + (v64 << 7) - 128;
              if (v64 < 0)
              {
                int v104 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v63);
                uint64_t v115 = v104;
                *(unsigned char *)(a1 + 169) = v105 != 0;
                if (!v104) {
                  goto LABEL_152;
                }
              }
              else
              {
                uint64_t v62 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_74:
                uint64_t v115 = v62;
                *(unsigned char *)(a1 + 169) = v63 != 0;
              }
              goto LABEL_141;
            case 6u:
              if (v7 != 50) {
                goto LABEL_135;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              unint64_t v8 = *(std::string **)(a1 + 152);
              if (v8 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_92;
              }
              uint64_t v9 = a1 + 152;
              goto LABEL_91;
            case 7u:
              if (v7 != 56) {
                goto LABEL_135;
              }
              v5 |= 0x20u;
              long long v65 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v66 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_82;
              }
              int v67 = *(char *)v65;
              unint64_t v66 = v66 + (v67 << 7) - 128;
              if (v67 < 0)
              {
                uint64_t v106 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v66);
                uint64_t v115 = v106;
                *(unsigned char *)(a1 + 17siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v107 != 0;
                if (!v106) {
                  goto LABEL_152;
                }
              }
              else
              {
                long long v65 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_82:
                uint64_t v115 = v65;
                *(unsigned char *)(a1 + 17siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v66 != 0;
              }
              goto LABEL_141;
            case 8u:
              if (v7 != 64) {
                goto LABEL_135;
              }
              v5 |= 8u;
              unint64_t v68 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v69 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_87;
              }
              int v70 = *(char *)v68;
              unint64_t v69 = v69 + (v70 << 7) - 128;
              if (v70 < 0)
              {
                uint64_t v108 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v69);
                uint64_t v115 = v108;
                *(unsigned char *)(a1 + 168) = v109 != 0;
                if (!v108) {
                  goto LABEL_152;
                }
              }
              else
              {
                unint64_t v68 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_87:
                uint64_t v115 = v68;
                *(unsigned char *)(a1 + 168) = v69 != 0;
              }
              goto LABEL_141;
            case 9u:
              if (v7 != 74) {
                goto LABEL_135;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              unint64_t v8 = *(std::string **)(a1 + 160);
              if (v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                uint64_t v9 = a1 + 160;
LABEL_91:
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v9, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_92:
              long long v71 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v8, (std::string::value_type *)TagFallback, (uint64_t)this);
              goto LABEL_140;
            case 0xAu:
              if (v7 != 82) {
                goto LABEL_135;
              }
              uint64_t v72 = (char *)TagFallback - 1;
              break;
            case 0xBu:
              if (v7 != 90) {
                goto LABEL_135;
              }
              unint64_t v80 = (google::protobuf::internal *)((char *)TagFallback - 1);
              while (2)
              {
                uint64_t v81 = (google::protobuf::internal *)((char *)v80 + 1);
                uint64_t v115 = v81;
                uint64_t v82 = *(int **)(a1 + 136);
                if (v82)
                {
                  uint64_t v83 = *(int *)(a1 + 128);
                  int v84 = *v82;
                  if ((int)v83 < *v82)
                  {
                    *(_DWORD *)(a1 + 128) = v83 + 1;
                    uint64_t v85 = *(protobuf::Intelligence_InputGroup_Event **)&v82[2 * v83 + 2];
                    goto LABEL_115;
                  }
                  if (v84 != *(_DWORD *)(a1 + 132))
                  {
LABEL_114:
                    *uint64_t v82 = v84 + 1;
                    uint64_t v85 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Event>(*(google::protobuf::internal::ArenaImpl **)(a1 + 120));
                    uint64_t v86 = *(void *)(a1 + 136);
                    uint64_t v87 = *(int *)(a1 + 128);
                    *(_DWORD *)(a1 + 128) = v87 + 1;
                    *(void *)(v86 + 8 * v87 + 8) = v85;
                    uint64_t v81 = v115;
LABEL_115:
                    unsigned int v88 = *(unsigned __int8 *)v81;
                    if (*(char *)v81 < 0)
                    {
                      uint64_t v90 = google::protobuf::internal::ReadSizeFallback(v81, (const char *)*(unsigned __int8 *)v81);
                      if (!v90) {
                        goto LABEL_152;
                      }
                      long long v89 = v90;
                      unsigned int v88 = v91;
                    }
                    else
                    {
                      long long v89 = (char *)v81 + 1;
                    }
                    int v92 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v89, v88);
                    int v93 = *((_DWORD *)this + 22);
                    BOOL v24 = __OFSUB__(v93--, 1);
                    *((_DWORD *)this + 22) = v93;
                    if (v93 < 0 == v24)
                    {
                      int v94 = v92;
                      unint64_t v80 = protobuf::Intelligence_InputGroup_Event::_InternalParse((uint64_t)v85, (google::protobuf::internal *)v89, this);
                      if (v80)
                      {
                        ++*((_DWORD *)this + 22);
                        if (!*((_DWORD *)this + 20))
                        {
                          int v95 = *((_DWORD *)this + 7) + v94;
                          *((_DWORD *)this + 7) = v95;
                          unint64_t v96 = *((void *)this + 1) + (v95 & (v95 >> 31));
                          *(void *)this = v96;
                          uint64_t v115 = v80;
                          if (v96 <= (unint64_t)v80 || *(unsigned char *)v80 != 90) {
                            goto LABEL_141;
                          }
                          continue;
                        }
                      }
                    }
LABEL_152:
                    TagFallbacint k = 0;
                    goto LABEL_153;
                  }
                }
                else
                {
                  int v84 = *(_DWORD *)(a1 + 132);
                }
                break;
              }
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 120), v84 + 1);
              uint64_t v82 = *(int **)(a1 + 136);
              int v84 = *v82;
              goto LABEL_114;
            case 0xCu:
              if (v7 != 96) {
                goto LABEL_135;
              }
              v5 |= 0x80u;
              int v97 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v98 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_129;
              }
              int v99 = *(char *)v97;
              unint64_t v98 = v98 + (v99 << 7) - 128;
              if (v99 < 0)
              {
                int v110 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v98);
                uint64_t v115 = v110;
                *(unsigned char *)(a1 + 172) = v111 != 0;
                if (!v110) {
                  goto LABEL_152;
                }
              }
              else
              {
                int v97 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_129:
                uint64_t v115 = v97;
                *(unsigned char *)(a1 + 172) = v98 != 0;
              }
              goto LABEL_141;
            case 0xDu:
              if (v7 != 104) {
                goto LABEL_135;
              }
              v5 |= 0x40u;
              BOOL v100 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v101 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_134;
              }
              int v102 = *(char *)v100;
              unint64_t v101 = v101 + (v102 << 7) - 128;
              if (v102 < 0)
              {
                int v112 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v101);
                uint64_t v115 = v112;
                *(unsigned char *)(a1 + 171) = v113 != 0;
                if (!v112) {
                  goto LABEL_152;
                }
              }
              else
              {
                BOOL v100 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_134:
                uint64_t v115 = v100;
                *(unsigned char *)(a1 + 171) = v101 != 0;
              }
              goto LABEL_141;
            default:
LABEL_135:
              if (v7) {
                BOOL v103 = (v7 & 7) == 4;
              }
              else {
                BOOL v103 = 1;
              }
              if (v103)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v7 - 1;
                goto LABEL_153;
              }
              long long v71 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v7, (unint64_t *)(a1 + 8), TagFallback, this);
LABEL_140:
              uint64_t v115 = v71;
              if (!v71) {
                goto LABEL_152;
              }
LABEL_141:
              if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v115, *((_DWORD *)this + 23)))goto LABEL_2; {
              continue;
              }
          }
          while (1)
          {
            uint64_t v73 = (google::protobuf::internal *)(v72 + 1);
            uint64_t v115 = (google::protobuf::internal *)(v72 + 1);
            unint64_t v74 = *(int **)(a1 + 112);
            if (!v74) {
              break;
            }
            uint64_t v75 = *(int *)(a1 + 104);
            int v76 = *v74;
            if ((int)v75 >= *v74)
            {
              if (v76 == *(_DWORD *)(a1 + 108))
              {
LABEL_100:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 96), v76 + 1);
                unint64_t v74 = *(int **)(a1 + 112);
                int v76 = *v74;
              }
              *unint64_t v74 = v76 + 1;
              long long v77 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 96));
              uint64_t v78 = *(void *)(a1 + 112);
              uint64_t v79 = *(int *)(a1 + 104);
              *(_DWORD *)(a1 + 104) = v79 + 1;
              *(void *)(v78 + 8 * v79 + 8) = v77;
              uint64_t v73 = v115;
              goto LABEL_102;
            }
            *(_DWORD *)(a1 + 104) = v75 + 1;
            long long v77 = *(protobuf::Intelligence_KeyValueParameter **)&v74[2 * v75 + 2];
LABEL_102:
            uint64_t v72 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, (uint64_t)v77, v73);
            uint64_t v115 = (google::protobuf::internal *)v72;
            if (!v72) {
              goto LABEL_152;
            }
            if (*(void *)this <= (unint64_t)v72 || *v72 != 82) {
              goto LABEL_141;
            }
          }
          int v76 = *(_DWORD *)(a1 + 108);
          goto LABEL_100;
        }
        TagFallbacint k = (google::protobuf::internal *)((char *)v115 + 2);
      }
      break;
    }
    uint64_t v115 = TagFallback;
    goto LABEL_7;
  }
LABEL_2:
  TagFallbacint k = v115;
LABEL_153:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_InputGroup::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_InputGroup *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 18), a2);
  }
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v9 = (protobuf::Intelligence_InputGroup_Intent *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::TypeHandler>((uint64_t)this + 24, i);
      *uint64_t v4 = 18;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          uint64_t v11 = v4 + 3;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          std::string v4[2] = v12;
          uint64_t v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_InputGroup_Intent::InternalSerializeWithCachedSizesToArray(v9, v11, a3);
    }
  }
  int v15 = *((_DWORD *)this + 14);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v17 = (protobuf::Intelligence_InputGroup_Fallback *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Fallback>::TypeHandler>((uint64_t)this + 48, j);
      *uint64_t v4 = 26;
      unsigned int v18 = *((_DWORD *)v17 + 5);
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unsigned int v20 = v18 >> 7;
        if (v18 >> 14)
        {
          unint64_t v19 = v4 + 3;
          do
          {
            *(v19 - 1) = v20 | 0x80;
            unsigned int v21 = v20 >> 7;
            ++v19;
            unsigned int v22 = v20 >> 14;
            v20 >>= 7;
          }
          while (v22);
          *(v19 - 1) = v21;
        }
        else
        {
          std::string v4[2] = v20;
          unint64_t v19 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v18;
        unint64_t v19 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_InputGroup_Fallback::InternalSerializeWithCachedSizesToArray(v17, v19, a3);
    }
  }
  int v23 = *((_DWORD *)this + 20);
  if (v23)
  {
    for (int k = 0; k != v23; ++k)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v25 = (protobuf::Intelligence_InputGroup_LegacyEvent *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_LegacyEvent>::TypeHandler>((uint64_t)this + 72, k);
      *uint64_t v4 = 34;
      unsigned int v26 = *((_DWORD *)v25 + 5);
      if (v26 > 0x7F)
      {
        v4[1] = v26 | 0x80;
        unsigned int v28 = v26 >> 7;
        if (v26 >> 14)
        {
          unint64_t v27 = v4 + 3;
          do
          {
            *(v27 - 1) = v28 | 0x80;
            unsigned int v29 = v28 >> 7;
            ++v27;
            unsigned int v30 = v28 >> 14;
            v28 >>= 7;
          }
          while (v30);
          *(v27 - 1) = v29;
        }
        else
        {
          std::string v4[2] = v28;
          unint64_t v27 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v26;
        unint64_t v27 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_InputGroup_LegacyEvent::InternalSerializeWithCachedSizesToArray(v25, v27, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v51 = *((unsigned char *)this + 169);
    *uint64_t v4 = 40;
    v4[1] = v51;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_41:
      if ((v6 & 0x20) == 0) {
        goto LABEL_42;
      }
      goto LABEL_83;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_41;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 19), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_42:
    if ((v6 & 8) == 0) {
      goto LABEL_43;
    }
    goto LABEL_86;
  }
LABEL_83:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v52 = *((unsigned char *)this + 170);
  *uint64_t v4 = 56;
  v4[1] = v52;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_43:
    if ((v6 & 4) == 0) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
LABEL_86:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v53 = *((unsigned char *)this + 168);
  *uint64_t v4 = 64;
  v4[1] = v53;
  v4 += 2;
  if ((v6 & 4) != 0) {
LABEL_44:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 9, *((const void ***)this + 20), v4);
LABEL_45:
  int v31 = *((_DWORD *)this + 26);
  if (v31)
  {
    for (int m = 0; m != v31; ++m)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v33 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 96, m);
      *uint64_t v4 = 82;
      unsigned int v34 = *((_DWORD *)v33 + 5);
      if (v34 > 0x7F)
      {
        v4[1] = v34 | 0x80;
        unsigned int v36 = v34 >> 7;
        if (v34 >> 14)
        {
          uint64_t v35 = v4 + 3;
          do
          {
            *(v35 - 1) = v36 | 0x80;
            unsigned int v37 = v36 >> 7;
            ++v35;
            unsigned int v38 = v36 >> 14;
            v36 >>= 7;
          }
          while (v38);
          *(v35 - 1) = v37;
        }
        else
        {
          std::string v4[2] = v36;
          uint64_t v35 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v34;
        uint64_t v35 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v33, v35, a3);
    }
  }
  int v39 = *((_DWORD *)this + 32);
  if (v39)
  {
    for (int n = 0; n != v39; ++n)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v41 = (protobuf::Intelligence_InputGroup_Event *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Event>::TypeHandler>((uint64_t)this + 120, n);
      *uint64_t v4 = 90;
      unsigned int v42 = *((_DWORD *)v41 + 5);
      if (v42 > 0x7F)
      {
        v4[1] = v42 | 0x80;
        unsigned int v44 = v42 >> 7;
        if (v42 >> 14)
        {
          int v43 = v4 + 3;
          do
          {
            *(v43 - 1) = v44 | 0x80;
            unsigned int v45 = v44 >> 7;
            ++v43;
            unsigned int v46 = v44 >> 14;
            v44 >>= 7;
          }
          while (v46);
          *(v43 - 1) = v45;
        }
        else
        {
          std::string v4[2] = v44;
          int v43 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v42;
        int v43 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_InputGroup_Event::InternalSerializeWithCachedSizesToArray(v41, v43, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v47 = *((unsigned char *)this + 172);
    *uint64_t v4 = 96;
    v4[1] = v47;
    v4 += 2;
  }
  if ((v6 & 0x40) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v48 = *((unsigned char *)this + 171);
    *uint64_t v4 = 104;
    v4[1] = v48;
    v4 += 2;
  }
  uint64_t v49 = *((void *)this + 1);
  if ((v49 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v54 = v49 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v54 + 23) < 0)
  {
    unsigned int v56 = *(void **)v54;
    uint64_t v55 = *(void *)(v54 + 8);
  }
  else
  {
    LODWORD(v55) = *(unsigned __int8 *)(v54 + 23);
    unsigned int v56 = (void *)v54;
  }
  if (*(void *)a3 - (void)v4 >= (int)v55)
  {
    uint64_t v57 = (int)v55;
    memcpy(v4, v56, (int)v55);
    v4 += v57;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v56, v55, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_InputGroup::ByteSizeLong(protobuf::Intelligence_InputGroup *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (protobuf::Intelligence_InputGroup_Intent **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_InputGroup_Intent::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    uint64_t v11 = (protobuf::Intelligence_InputGroup_Fallback **)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      uint64_t v14 = protobuf::Intelligence_InputGroup_Fallback::ByteSizeLong(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *((int *)this + 20);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *((void *)this + 11);
  if (v17) {
    unsigned int v18 = (protobuf::Intelligence_InputGroup_LegacyEvent **)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      unsigned int v20 = *v18++;
      uint64_t v21 = protobuf::Intelligence_InputGroup_LegacyEvent::ByteSizeLong(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *((int *)this + 26);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *((void *)this + 14);
  if (v24) {
    int v25 = (protobuf::Intelligence_KeyValueParameter **)(v24 + 8);
  }
  else {
    int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      unint64_t v27 = *v25++;
      uint64_t v28 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *((int *)this + 32);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *((void *)this + 17);
  if (v31) {
    int v32 = (protobuf::Intelligence_InputGroup_Event **)(v31 + 8);
  }
  else {
    int v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      unsigned int v34 = *v32++;
      uint64_t v35 = protobuf::Intelligence_InputGroup_Event::ByteSizeLong(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  if (*((unsigned char *)this + 16))
  {
    if (*((unsigned char *)this + 16))
    {
      uint64_t v42 = *((void *)this + 18);
      uint64_t v43 = *(unsigned __int8 *)(v42 + 23);
      uint64_t v44 = *(void *)(v42 + 8);
      if ((v43 & 0x80u) == 0) {
        uint64_t v44 = v43;
      }
      v30 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((*((unsigned char *)this + 16) & 2) == 0)
      {
LABEL_36:
        if ((*((unsigned char *)this + 16) & 4) == 0)
        {
LABEL_40:
          uint64_t v39 = v30 + 2;
          if ((*((unsigned char *)this + 16) & 8) == 0) {
            uint64_t v39 = v30;
          }
          if ((*((unsigned char *)this + 16) & 0x10) != 0) {
            v39 += 2;
          }
          if ((*((unsigned char *)this + 16) & 0x20) != 0) {
            v39 += 2;
          }
          if ((*((unsigned char *)this + 16) & 0x40) != 0) {
            v39 += 2;
          }
          if ((*((unsigned char *)this + 16) & 0x80) != 0) {
            uint64_t v30 = v39 + 2;
          }
          else {
            uint64_t v30 = v39;
          }
          goto LABEL_51;
        }
LABEL_37:
        uint64_t v36 = *((void *)this + 20);
        uint64_t v37 = *(unsigned __int8 *)(v36 + 23);
        uint64_t v38 = *(void *)(v36 + 8);
        if ((v37 & 0x80u) == 0) {
          uint64_t v38 = v37;
        }
        v30 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
        goto LABEL_40;
      }
    }
    else if ((*((unsigned char *)this + 16) & 2) == 0)
    {
      goto LABEL_36;
    }
    uint64_t v45 = *((void *)this + 19);
    uint64_t v46 = *(unsigned __int8 *)(v45 + 23);
    uint64_t v47 = *(void *)(v45 + 8);
    if ((v46 & 0x80u) == 0) {
      uint64_t v47 = v46;
    }
    v30 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*((unsigned char *)this + 16) & 4) == 0) {
      goto LABEL_40;
    }
    goto LABEL_37;
  }
LABEL_51:
  uint64_t v40 = *((void *)this + 1);
  if (v40)
  {
    unint64_t v48 = v40 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v48 + 23) < 0) {
      uint64_t v49 = *(void *)(v48 + 8);
    }
    else {
      uint64_t v49 = *(unsigned __int8 *)(v48 + 23);
    }
    v30 += v49;
  }
  *((_DWORD *)this + 5) = v30;
  return v30;
}

void protobuf::Intelligence_InputGroup::CheckTypeAndMergeFrom(protobuf::Intelligence_InputGroup *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_InputGroup::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_InputGroup::MergeFrom(protobuf::Intelligence_InputGroup *this, const protobuf::Intelligence_InputGroup *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 6819);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Fallback>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_LegacyEvent>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 12, (uint64_t)a2 + 96);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Event>::TypeHandler>((int **)this + 15, (uint64_t)a2 + 120);
  int v6 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v6)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 18);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 18);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 144, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 19);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 19);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 152, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 20);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 20);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 160, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      *((unsigned char *)this + 168) = *((unsigned char *)a2 + 168);
      if ((v6 & 0x10) == 0)
      {
LABEL_22:
        if ((v6 & 0x20) == 0) {
          goto LABEL_23;
        }
        goto LABEL_31;
      }
    }
    else if ((v6 & 0x10) == 0)
    {
      goto LABEL_22;
    }
    *((unsigned char *)this + 169) = *((unsigned char *)a2 + 169);
    if ((v6 & 0x20) == 0)
    {
LABEL_23:
      if ((v6 & 0x40) == 0) {
        goto LABEL_24;
      }
      goto LABEL_32;
    }
LABEL_31:
    *((unsigned char *)this + 17siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 170);
    if ((v6 & 0x40) == 0)
    {
LABEL_24:
      if ((v6 & 0x80) == 0)
      {
LABEL_26:
        *((_DWORD *)this + 4) |= v6;
        return;
      }
LABEL_25:
      *((unsigned char *)this + 172) = *((unsigned char *)a2 + 172);
      goto LABEL_26;
    }
LABEL_32:
    *((unsigned char *)this + 171) = *((unsigned char *)a2 + 171);
    if ((v6 & 0x80) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
}

void sub_239A6012C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_InputGroup::CopyFrom(protobuf::Intelligence_InputGroup *this, const protobuf::Intelligence_InputGroup *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_InputGroup::Clear(this);
    protobuf::Intelligence_InputGroup::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_InputGroup::IsInitialized(protobuf::Intelligence_InputGroup *this)
{
  return 1;
}

void protobuf::Intelligence_InputGroup::InternalSwap(protobuf::Intelligence_InputGroup *this, protobuf::Intelligence_InputGroup *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v36;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_28:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_InputGroup *)((char *)this + 24), (protobuf::Intelligence_InputGroup *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_InputGroup *)((char *)this + 48), (protobuf::Intelligence_InputGroup *)((char *)a2 + 48));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_InputGroup *)((char *)this + 72), (protobuf::Intelligence_InputGroup *)((char *)a2 + 72));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_InputGroup *)((char *)this + 96), (protobuf::Intelligence_InputGroup *)((char *)a2 + 96));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_InputGroup *)((char *)this + 120), (protobuf::Intelligence_InputGroup *)((char *)a2 + 120));
  char v13 = (uint64_t *)*((void *)this + 18);
  uint64_t v14 = (uint64_t **)((char *)a2 + 144);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 18);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  std::string v13[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  void v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 19);
  unsigned int v20 = (uint64_t **)((char *)a2 + 152);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 19, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 19);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 19, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  int v25 = (uint64_t *)*((void *)this + 20);
  uint64_t v26 = (uint64_t **)((char *)a2 + 160);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 20, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v25 = (uint64_t *)*((void *)this + 20);
  }
  unint64_t v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 20, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)int v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)unint64_t v27 = v29;
  v27[2] = v28;
LABEL_26:
  char v31 = *((unsigned char *)this + 168);
  *((unsigned char *)this + 168) = *((unsigned char *)a2 + 168);
  *((unsigned char *)a2 + 168) = v31;
  char v32 = *((unsigned char *)this + 169);
  *((unsigned char *)this + 169) = *((unsigned char *)a2 + 169);
  *((unsigned char *)a2 + 169) = v32;
  char v33 = *((unsigned char *)this + 170);
  *((unsigned char *)this + 17siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 170);
  *((unsigned char *)a2 + 17siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v33;
  char v34 = *((unsigned char *)this + 171);
  *((unsigned char *)this + 171) = *((unsigned char *)a2 + 171);
  *((unsigned char *)a2 + 171) = v34;
  char v35 = *((unsigned char *)this + 172);
  *((unsigned char *)this + 172) = *((unsigned char *)a2 + 172);
  *((unsigned char *)a2 + 172) = v35;
}

void *protobuf::Intelligence_InputGroup::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.InputGroup");
}

protobuf::Intelligence_Activity *protobuf::Intelligence_Activity::Intelligence_Activity(protobuf::Intelligence_Activity *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED27FD0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_Activity_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Activity_intelligence_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_239A604F8(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Activity *protobuf::Intelligence_Activity::Intelligence_Activity(protobuf::Intelligence_Activity *this, const protobuf::Intelligence_Activity *a2)
{
  *(void *)this = &unk_26ED27FD0;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 6);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v7);
    }
  }
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 7);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v8);
    }
  }
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 8);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v9);
    }
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    long long v10 = (uint64_t *)*((void *)a2 + 9);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v10);
    }
  }
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x10) != 0)
  {
    uint64_t v11 = (uint64_t *)*((void *)a2 + 10);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v11);
    }
  }
  return this;
}

void sub_239A60658(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Activity::~Intelligence_Activity(protobuf::Intelligence_Activity *this)
{
  *(void *)this = &unk_26ED27FD0;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 8);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 9);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x23ECAACC0](v8, 0x1012C40EC159624);
  }
  uint64_t v10 = *((void *)this + 10);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    MEMORY[0x23ECAACC0](v10, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Activity::~Intelligence_Activity(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Activity::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Activity::default_instance(protobuf::Intelligence_Activity *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Activity_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Activity_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Activity_default_instance_;
}

void protobuf::Intelligence_Activity::Clear(protobuf::Intelligence_Activity *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x1F) != 0)
  {
    if ((v2 & 1) == 0)
    {
      if ((v2 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_12:
      uint64_t v4 = *((void *)this + 7);
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)uint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_16;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_16;
        }
      }
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_20:
      uint64_t v6 = *((void *)this + 9);
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)uint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v2 & 0x10) == 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v6 = 0;
        *(unsigned char *)(v6 + 23) = 0;
        if ((v2 & 0x10) == 0) {
          goto LABEL_27;
        }
      }
      goto LABEL_24;
    }
    uint64_t v3 = *((void *)this + 6);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_12;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    uint64_t v5 = *((void *)this + 8);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_20;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_27;
    }
LABEL_24:
    uint64_t v7 = *((void *)this + 10);
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_27:
  char v9 = *((unsigned char *)this + 8);
  uint64_t v8 = (protobuf::Intelligence_Activity *)((char *)this + 8);
  *((_DWORD *)v8 + 2) = 0;
  if (v9)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v8);
  }
}

std::string::value_type *protobuf::Intelligence_Activity::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v21 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v21, *((_DWORD *)this + 23));
  __n128 result = (std::string::value_type *)v21;
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = (uint64_t *)(a1 + 24);
    while (2)
    {
      uint64_t v8 = result + 1;
      LODWORD(v9) = *result;
      if (*result < 0)
      {
        char v9 = (const char *)(v9 + (*v8 << 7) - 128);
        if (*v8 < 0)
        {
          __n128 result = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)result, v9);
          uint64_t v21 = (google::protobuf::internal *)result;
          if (!result) {
            return result;
          }
          uint64_t v8 = result;
LABEL_8:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 10) {
                goto LABEL_45;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v10 = *(std::string **)(a1 + 48);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 48, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_41;
            case 2u:
              if (v9 != 18) {
                goto LABEL_45;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v10 = *(std::string **)(a1 + 56);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 56, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_41;
            case 3u:
              if (v9 != 26) {
                goto LABEL_45;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              uint64_t v10 = *(std::string **)(a1 + 64);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 64, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_41;
            case 4u:
              if (v9 != 34) {
                goto LABEL_45;
              }
              __n128 result = v8 - 1;
              break;
            case 5u:
              if (v9 != 42) {
                goto LABEL_45;
              }
              *(_DWORD *)(a1 + 16) |= 8u;
              uint64_t v10 = *(std::string **)(a1 + 72);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 72, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_41;
            case 6u:
              if (v9 != 50) {
                goto LABEL_45;
              }
              *(_DWORD *)(a1 + 16) |= 0x10u;
              uint64_t v10 = *(std::string **)(a1 + 80);
              if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 80, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_41:
              __n128 result = google::protobuf::internal::InlineGreedyStringParser(v10, v8, (uint64_t)this);
              goto LABEL_42;
            default:
LABEL_45:
              if (v9) {
                BOOL v20 = (v9 & 7) == 4;
              }
              else {
                BOOL v20 = 1;
              }
              if (v20)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 - 1;
                return v8;
              }
              __n128 result = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse(v9, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v8, this);
LABEL_42:
              uint64_t v21 = (google::protobuf::internal *)result;
              if (!result) {
                return result;
              }
LABEL_43:
              int v19 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v21, *((_DWORD *)this + 23));
              __n128 result = (std::string::value_type *)v21;
              if (v19) {
                return result;
              }
              continue;
          }
          while (1)
          {
            uint64_t v11 = result + 1;
            uint64_t v21 = (google::protobuf::internal *)(result + 1);
            int v12 = *(int **)(a1 + 40);
            if (!v12) {
              break;
            }
            uint64_t v13 = *(int *)(a1 + 32);
            int v14 = *v12;
            if ((int)v13 >= *v12)
            {
              if (v14 == *(_DWORD *)(a1 + 36))
              {
LABEL_25:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v14 + 1);
                int v12 = *(int **)(a1 + 40);
                int v14 = *v12;
              }
              *int v12 = v14 + 1;
              uint64_t v16 = (atomic_ullong *)*v7;
              if (!*v7) {
                operator new();
              }
              if (v16[14]) {
              unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v16, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
              }
              AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
              AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
              AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
              uint64_t v17 = *(void *)(a1 + 40);
              uint64_t v18 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + 32) = v18 + 1;
              *(void *)(v17 + 8 * v18 + 8) = AlignedAndAddCleanup;
              uint64_t v11 = (std::string::value_type *)v21;
              goto LABEL_31;
            }
            *(_DWORD *)(a1 + 32) = v13 + 1;
            unint64_t AlignedAndAddCleanup = *(std::string **)&v12[2 * v13 + 2];
LABEL_31:
            __n128 result = google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v11, (uint64_t)this);
            uint64_t v21 = (google::protobuf::internal *)result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *result != 34) {
              goto LABEL_43;
            }
          }
          int v14 = *(_DWORD *)(a1 + 36);
          goto LABEL_25;
        }
        uint64_t v8 = result + 2;
      }
      break;
    }
    uint64_t v21 = (google::protobuf::internal *)v8;
    goto LABEL_8;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_Activity::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Activity *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 6), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 7), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 8), v4);
LABEL_5:
  int v7 = *((_DWORD *)this + 8);
  if (v7 >= 1)
  {
    for (int i = 0; v7 != i; ++i)
    {
      uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, i);
      if (*(char *)(v9 + 23) < 0)
      {
        int64_t v10 = *(void *)(v9 + 8);
        if (v10 > 127) {
          goto LABEL_17;
        }
      }
      else
      {
        int64_t v10 = *(unsigned __int8 *)(v9 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v10)
      {
        *uint64_t v4 = 34;
        v4[1] = v10;
        if (*(char *)(v9 + 23) >= 0) {
          uint64_t v11 = (const void *)v9;
        }
        else {
          uint64_t v11 = *(const void **)v9;
        }
        memcpy(v4 + 2, v11, v10);
        v4 += v10 + 2;
        continue;
      }
LABEL_17:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 4, v9, v4);
    }
  }
  if ((v6 & 8) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 9), v4);
  }
  if ((v6 & 0x10) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 10), v4);
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    uint64_t v16 = *(void **)v14;
    uint64_t v15 = *(void *)(v14 + 8);
  }
  else
  {
    LODWORD(v15) = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = (void *)v14;
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v17 = (int)v15;
    memcpy(v4, v16, (int)v15);
    v4 += v17;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v16, v15, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_Activity::ByteSizeLong(protobuf::Intelligence_Activity *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 8);
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v3);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      if ((v6 & 0x80u) != 0) {
        uint64_t v6 = *(void *)(v5 + 8);
      }
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  int v7 = *((_DWORD *)this + 4);
  if ((v7 & 0x1F) == 0) {
    goto LABEL_17;
  }
  if (v7)
  {
    uint64_t v13 = *((void *)this + 6);
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 2) == 0)
    {
LABEL_11:
      if ((v7 & 4) == 0) {
        goto LABEL_12;
      }
LABEL_25:
      uint64_t v19 = *((void *)this + 8);
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v7 & 8) == 0)
      {
LABEL_13:
        if ((v7 & 0x10) == 0) {
          goto LABEL_17;
        }
        goto LABEL_14;
      }
      goto LABEL_28;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_11;
  }
  uint64_t v16 = *((void *)this + 7);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 4) != 0) {
    goto LABEL_25;
  }
LABEL_12:
  if ((v7 & 8) == 0) {
    goto LABEL_13;
  }
LABEL_28:
  uint64_t v22 = *((void *)this + 9);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v4 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x10) != 0)
  {
LABEL_14:
    uint64_t v8 = *((void *)this + 10);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  uint64_t v11 = *((void *)this + 1);
  if (v11)
  {
    unint64_t v25 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v25 + 23) < 0) {
      uint64_t v26 = *(void *)(v25 + 8);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
    }
    v4 += v26;
  }
  *((_DWORD *)this + 5) = v4;
  return v4;
}

void protobuf::Intelligence_Activity::CheckTypeAndMergeFrom(protobuf::Intelligence_Activity *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Activity::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Activity::MergeFrom(protobuf::Intelligence_Activity *this, const protobuf::Intelligence_Activity *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 7215);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x1F) != 0)
  {
    if (v6)
    {
      int v7 = (std::string *)*((void *)this + 6);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 6);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 7);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 7);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 8);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 8);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      uint64_t v13 = (std::string *)*((void *)this + 9);
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v14 = (const std::string *)*((void *)a2 + 9);
      if (v13 != v14)
      {
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      uint64_t v17 = (std::string *)*((void *)this + 10);
      uint64_t v16 = (char *)this + 80;
      uint64_t v15 = v17;
      *((_DWORD *)v16 - 16) |= 0x10u;
      uint64_t v18 = (const std::string *)*((void *)a2 + 10);
      if (v17 != v18)
      {
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v16, (uint64_t)v18);
        }
        std::string::operator=(v15, v18);
      }
    }
  }
}

void sub_239A61470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Activity::CopyFrom(protobuf::Intelligence_Activity *this, const protobuf::Intelligence_Activity *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Activity::Clear(this);
    protobuf::Intelligence_Activity::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Activity::IsInitialized(protobuf::Intelligence_Activity *this)
{
  return 1;
}

__n128 protobuf::Intelligence_Activity::InternalSwap(protobuf::Intelligence_Activity *this, protobuf::Intelligence_Activity *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v41;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_40;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_40:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_Activity *)((char *)this + 24), (protobuf::Intelligence_Activity *)((char *)a2 + 24));
  uint64_t v14 = (uint64_t *)*((void *)this + 6);
  uint64_t v15 = (uint64_t **)((char *)a2 + 48);
  if (v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v15 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v14 = (uint64_t *)*((void *)this + 6);
  }
  uint64_t v16 = *v15;
  if (*v15 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v16 = *v15;
  }
  uint64_t v17 = v14[2];
  __n128 result = *(__n128 *)v14;
  uint64_t v18 = v16[2];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v16;
  std::string v14[2] = v18;
  *(__n128 *)uint64_t v16 = result;
  std::string v16[2] = v17;
LABEL_14:
  char v19 = (uint64_t *)*((void *)this + 7);
  uint64_t v20 = (uint64_t **)((char *)a2 + 56);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v19 = (uint64_t *)*((void *)this + 7);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  __n128 result = *(__n128 *)v19;
  uint64_t v23 = v21[2];
  *(_OWORD *)char v19 = *(_OWORD *)v21;
  std::string v19[2] = v23;
  *(__n128 *)uint64_t v21 = result;
  void v21[2] = v22;
LABEL_20:
  uint64_t v24 = (uint64_t *)*((void *)this + 8);
  unint64_t v25 = (uint64_t **)((char *)a2 + 64);
  if (v24 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v25 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v24 = (uint64_t *)*((void *)this + 8);
  }
  uint64_t v26 = *v25;
  if (*v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v26 = *v25;
  }
  uint64_t v27 = v24[2];
  __n128 result = *(__n128 *)v24;
  uint64_t v28 = v26[2];
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v26;
  v24[2] = v28;
  *(__n128 *)uint64_t v26 = result;
  std::string v26[2] = v27;
LABEL_26:
  long long v29 = (uint64_t *)*((void *)this + 9);
  uint64_t v30 = (uint64_t **)((char *)a2 + 72);
  if (v29 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v30 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    long long v29 = (uint64_t *)*((void *)this + 9);
  }
  char v31 = *v30;
  if (*v30 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v31 = *v30;
  }
  uint64_t v32 = v29[2];
  __n128 result = *(__n128 *)v29;
  uint64_t v33 = v31[2];
  *(_OWORD *)long long v29 = *(_OWORD *)v31;
  v29[2] = v33;
  *(__n128 *)char v31 = result;
  void v31[2] = v32;
LABEL_32:
  unint64_t v36 = (uint64_t *)*((void *)this + 10);
  char v34 = (std::string **)((char *)this + 80);
  char v35 = (std::string *)v36;
  uint64_t v37 = (std::string **)((char *)a2 + 80);
  if (v36 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v37 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v34, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v35 = *v34;
  }
  uint64_t v38 = *v37;
  if (*v37 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v37, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v38 = *v37;
  }
  std::string::size_type v39 = v35->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v35->__r_.__value_.__l.__data_;
  std::string::size_type v40 = v38->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35->__r_.__value_.__l.__data_ = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
  v35->__r_.__value_.__r.__words[2] = v40;
  *(__n128 *)&v38->__r_.__value_.__l.__data_ = result;
  v38->__r_.__value_.__r.__words[2] = v39;
  return result;
}

void *protobuf::Intelligence_Activity::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Activity");
}

protobuf::Intelligence_Utterance *protobuf::Intelligence_Utterance::Intelligence_Utterance(protobuf::Intelligence_Utterance *this)
{
  *(void *)this = &unk_26ED28060;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_Utterance_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Utterance_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  return this;
}

void sub_239A618A4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Utterance *protobuf::Intelligence_Utterance::Intelligence_Utterance(protobuf::Intelligence_Utterance *this, const protobuf::Intelligence_Utterance *a2)
{
  *(void *)this = &unk_26ED28060;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  *((_DWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((_DWORD *)a2 + 10);
  return this;
}

void sub_239A6197C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Utterance::~Intelligence_Utterance(protobuf::Intelligence_Utterance *this)
{
  *(void *)this = &unk_26ED28060;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Utterance::~Intelligence_Utterance(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Utterance::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Utterance::default_instance(protobuf::Intelligence_Utterance *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Utterance_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Utterance_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Utterance_default_instance_;
}

void protobuf::Intelligence_Utterance::Clear(protobuf::Intelligence_Utterance *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  uint64_t v2 = *((void *)this + 3);
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    uint64_t v3 = *((void *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *((unsigned char *)this + 8);
  uint64_t v4 = (protobuf::Intelligence_Utterance *)((char *)this + 8);
  *((_DWORD *)v4 + 8) = 0;
  *((_DWORD *)v4 + 2) = 0;
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v4);
  }
}

google::protobuf::internal *protobuf::Intelligence_Utterance::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char v19 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v19, *((_DWORD *)this + 23)) & 1) == 0)
  {
    while (1)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v19 + 1);
      LODWORD(v8) = *(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unint64_t v8 = (const char *)(v8 + (*(unsigned __int8 *)TagFallback << 7) - 128);
      if ((*(char *)TagFallback & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, v8);
      char v19 = TagFallback;
      if (!TagFallback) {
        goto LABEL_3;
      }
LABEL_8:
      unsigned int v9 = v8 >> 3;
      if (v8 >> 3 != 3)
      {
        if (v9 == 2)
        {
          if (v8 != 18) {
            goto LABEL_14;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v16 = *(std::string **)(a1 + 32);
          if (v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 32, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
        }
        else
        {
          if (v9 != 1 || v8 != 10)
          {
LABEL_14:
            if (v8) {
              BOOL v11 = (v8 & 7) == 4;
            }
            else {
              BOOL v11 = 1;
            }
            if (v11)
            {
              *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
              goto LABEL_3;
            }
            int v12 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), TagFallback, this);
            goto LABEL_30;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v16 = *(std::string **)(a1 + 24);
          if (v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
        }
        int v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v16, (std::string::value_type *)TagFallback, (uint64_t)this);
LABEL_30:
        char v19 = v12;
        if (!v12) {
          goto LABEL_36;
        }
        goto LABEL_31;
      }
      if (v8 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v14 = (google::protobuf::internal *)((char *)TagFallback + 1);
      LODWORD(v13) = *(unsigned __int8 *)TagFallback;
      if ((v13 & 0x80) == 0) {
        goto LABEL_23;
      }
      int v15 = *(char *)v14;
      unint64_t v13 = v13 + (v15 << 7) - 128;
      if ((v15 & 0x80000000) == 0)
      {
        uint64_t v14 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_23:
        char v19 = v14;
        *(_DWORD *)(a1 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v13;
        goto LABEL_31;
      }
      uint64_t v17 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v13);
      char v19 = v17;
      *(_DWORD *)(a1 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v18;
      if (!v17)
      {
LABEL_36:
        TagFallbacint k = 0;
        goto LABEL_3;
      }
LABEL_31:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v19, *((_DWORD *)this + 23)))goto LABEL_2; {
    }
      }
    TagFallbacint k = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_7:
    char v19 = TagFallback;
    goto LABEL_8;
  }
LABEL_2:
  TagFallbacint k = v19;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_Utterance::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Utterance *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_16;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 4), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v7 = *((int *)this + 10);
  *uint64_t v4 = 24;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - 1) = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        ++v4;
        unint64_t v10 = v8 >> 14;
        v8 >>= 7;
      }
      while (v10);
      *(v4 - 1) = v9;
    }
    else
    {
      std::string v4[2] = v8;
      v4 += 3;
    }
  }
  else
  {
    v4[1] = v7;
    v4 += 2;
  }
LABEL_16:
  uint64_t v11 = *((void *)this + 1);
  if ((v11 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v13 + 23) < 0)
  {
    int v15 = *(void **)v13;
    uint64_t v14 = *(void *)(v13 + 8);
  }
  else
  {
    LODWORD(v14) = *(unsigned __int8 *)(v13 + 23);
    int v15 = (void *)v13;
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v16 = (int)v14;
    memcpy(v4, v15, (int)v14);
    v4 += v16;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v15, v14, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_Utterance::ByteSizeLong(protobuf::Intelligence_Utterance *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    uint64_t v3 = *((void *)this + 3);
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v6 = *((void *)this + 4);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v9 = *((_DWORD *)this + 10);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
LABEL_17:
  uint64_t v11 = *((void *)this + 1);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0) {
      uint64_t v14 = *(void *)(v13 + 8);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    }
    v2 += v14;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void protobuf::Intelligence_Utterance::CheckTypeAndMergeFrom(protobuf::Intelligence_Utterance *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Utterance::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Utterance::MergeFrom(protobuf::Intelligence_Utterance *this, const protobuf::Intelligence_Utterance *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 7497);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      int v9 = (std::string *)*((void *)this + 4);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 4);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0) {
      *((_DWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((_DWORD *)a2 + 10);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_239A621BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Utterance::CopyFrom(protobuf::Intelligence_Utterance *this, const protobuf::Intelligence_Utterance *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Utterance::Clear(this);
    protobuf::Intelligence_Utterance::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Utterance::IsInitialized(protobuf::Intelligence_Utterance *this)
{
  return 1;
}

void protobuf::Intelligence_Utterance::InternalSwap(protobuf::Intelligence_Utterance *this, protobuf::Intelligence_Utterance *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v26;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  uint64_t v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v12 = (uint64_t *)*((void *)this + 3);
  }
  int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v15 = *v14;
  }
  uint64_t v16 = v12[2];
  long long v17 = *(_OWORD *)v12;
  uint64_t v18 = v15[2];
  *(_OWORD *)int v12 = *(_OWORD *)v15;
  std::string v12[2] = v18;
  *(_OWORD *)int v15 = v17;
  void v15[2] = v16;
LABEL_14:
  char v19 = (uint64_t *)*((void *)this + 4);
  uint64_t v20 = (uint64_t **)((char *)a2 + 32);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v19 = (uint64_t *)*((void *)this + 4);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)char v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  int v25 = *((_DWORD *)this + 10);
  *((_DWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v25;
}

void *protobuf::Intelligence_Utterance::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Utterance");
}

protobuf::Intelligence_Character *protobuf::Intelligence_Character::Intelligence_Character(protobuf::Intelligence_Character *this)
{
  *(void *)this = &unk_26ED280F0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_Character_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Character_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_239A6247C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Character *protobuf::Intelligence_Character::Intelligence_Character(protobuf::Intelligence_Character *this, const protobuf::Intelligence_Character *a2)
{
  *(void *)this = &unk_26ED280F0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 4) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 5);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 40, (uint64_t)v8);
    }
  }
  return this;
}

void sub_239A6256C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Character::~Intelligence_Character(protobuf::Intelligence_Character *this)
{
  *(void *)this = &unk_26ED280F0;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 5);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Character::~Intelligence_Character(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Character::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Character::default_instance(protobuf::Intelligence_Character *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Character_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Character_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Character_default_instance_;
}

void protobuf::Intelligence_Character::Clear(protobuf::Intelligence_Character *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    uint64_t v2 = *((void *)this + 3);
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    uint64_t v4 = *((void *)this + 5);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  uint64_t v3 = *((void *)this + 4);
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *((unsigned char *)this + 8);
  int v5 = (protobuf::Intelligence_Character *)((char *)this + 8);
  *((_DWORD *)v5 + 2) = 0;
  if (v6) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v5);
  }
}

google::protobuf::internal *protobuf::Intelligence_Character::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  int v13 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v13, *((_DWORD *)this + 23));
  __n128 result = v13;
  if ((v5 & 1) == 0)
  {
    while (1)
    {
      unint64_t v7 = (char *)result + 1;
      LODWORD(v8) = *(unsigned __int8 *)result;
      if ((*(char *)result & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unint64_t v8 = (const char *)(v8 + (*v7 << 7) - 128);
      if ((*v7 & 0x80000000) == 0) {
        break;
      }
      __n128 result = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(result, v8);
      int v13 = result;
      if (!result) {
        return result;
      }
      unint64_t v7 = (std::string::value_type *)result;
LABEL_7:
      unsigned int v9 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 == 26)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v11 = *(std::string **)(a1 + 40);
          if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 40, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          goto LABEL_24;
        }
      }
      else if (v9 == 2)
      {
        if (v8 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v11 = *(std::string **)(a1 + 32);
          if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 32, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          goto LABEL_24;
        }
      }
      else if (v9 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(std::string **)(a1 + 24);
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
LABEL_24:
        __n128 result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v11, v7, (uint64_t)this);
        goto LABEL_25;
      }
      if (!v8 || (v8 & 7) == 4)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
        return (google::protobuf::internal *)v7;
      }
      __n128 result = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v7, this);
LABEL_25:
      int v13 = result;
      if (result)
      {
        int v12 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v13, *((_DWORD *)this + 23));
        __n128 result = v13;
        if (!v12) {
          continue;
        }
      }
      return result;
    }
    unint64_t v7 = (char *)result + 2;
LABEL_6:
    int v13 = (google::protobuf::internal *)v7;
    goto LABEL_7;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_Character::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Character *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = (unsigned __int8 *)a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 4), (char *)v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 5), (char *)v4);
LABEL_5:
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    uint64_t v11 = *(void **)v9;
    uint64_t v10 = *(void *)(v9 + 8);
  }
  else
  {
    LODWORD(v1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = (void *)v9;
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v12 = (int)v10;
    memcpy(v4, v11, (int)v10);
    v4 += v12;
    return v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v11, v10, v4);
}

uint64_t protobuf::Intelligence_Character::ByteSizeLong(protobuf::Intelligence_Character *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    uint64_t v3 = *((void *)this + 3);
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v6 = *((void *)this + 4);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    uint64_t v9 = *((void *)this + 5);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *((void *)this + 1);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v14 + 23) < 0) {
      uint64_t v15 = *(void *)(v14 + 8);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    }
    v2 += v15;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void protobuf::Intelligence_Character::CheckTypeAndMergeFrom(protobuf::Intelligence_Character *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Character::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Character::MergeFrom(protobuf::Intelligence_Character *this, const protobuf::Intelligence_Character *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 7769);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 4);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 4);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      int v13 = (std::string *)*((void *)this + 5);
      uint64_t v12 = (char *)this + 40;
      uint64_t v11 = v13;
      *((_DWORD *)v12 - 6) |= 4u;
      unint64_t v14 = (const std::string *)*((void *)a2 + 5);
      if (v13 != v14)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v12, (uint64_t)v14);
        }
        std::string::operator=(v11, v14);
      }
    }
  }
}

void sub_239A62DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Character::CopyFrom(protobuf::Intelligence_Character *this, const protobuf::Intelligence_Character *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Character::Clear(this);
    protobuf::Intelligence_Character::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Character::IsInitialized(protobuf::Intelligence_Character *this)
{
  return 1;
}

__n128 protobuf::Intelligence_Character::InternalSwap(protobuf::Intelligence_Character *this, protobuf::Intelligence_Character *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v30;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      uint64_t v8 = (__n128 *)(v4 & 0xFFFFFFFFFFFFFFFELL);
LABEL_7:
      unint64_t v9 = v8[1].n128_u64[0];
      __n128 result = *v8;
      unint64_t v11 = *(void *)(v7 + 16);
      *uint64_t v8 = *(__n128 *)v7;
      v8[1].n128_u64[0] = v11;
      *(__n128 *)unint64_t v7 = result;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_28:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  unint64_t v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v12 = (uint64_t *)*((void *)this + 3);
  }
  char v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v15 = *v14;
  }
  uint64_t v16 = v12[2];
  __n128 result = *(__n128 *)v12;
  uint64_t v17 = v15[2];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v15;
  std::string v12[2] = v17;
  *(__n128 *)char v15 = result;
  void v15[2] = v16;
LABEL_14:
  uint64_t v18 = (uint64_t *)*((void *)this + 4);
  char v19 = (uint64_t **)((char *)a2 + 32);
  if (v18 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v19 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v18 = (uint64_t *)*((void *)this + 4);
  }
  uint64_t v20 = *v19;
  if (*v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v20 = *v19;
  }
  uint64_t v21 = v18[2];
  __n128 result = *(__n128 *)v18;
  uint64_t v22 = v20[2];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
  std::string v18[2] = v22;
  *(__n128 *)uint64_t v20 = result;
  std::string v20[2] = v21;
LABEL_20:
  int v25 = (uint64_t *)*((void *)this + 5);
  long long v23 = (std::string **)((char *)this + 40);
  uint64_t v24 = (std::string *)v25;
  unint64_t v26 = (std::string **)((char *)a2 + 40);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v23, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v24 = *v23;
  }
  uint64_t v27 = *v26;
  if (*v26 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v26, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v27 = *v26;
  }
  std::string::size_type v28 = v24->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v24->__r_.__value_.__l.__data_;
  std::string::size_type v29 = v27->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24->__r_.__value_.__l.__data_ = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  v24->__r_.__value_.__r.__words[2] = v29;
  *(__n128 *)&v27->__r_.__value_.__l.__data_ = result;
  v27->__r_.__value_.__r.__words[2] = v28;
  return result;
}

void *protobuf::Intelligence_Character::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Character");
}

protobuf::Intelligence_Counter *protobuf::Intelligence_Counter::Intelligence_Counter(protobuf::Intelligence_Counter *this)
{
  *(void *)this = &unk_26ED28180;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_Counter_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Counter_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  return this;
}

void sub_239A630DC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Counter *protobuf::Intelligence_Counter::Intelligence_Counter(protobuf::Intelligence_Counter *this, const protobuf::Intelligence_Counter *a2)
{
  *(void *)this = &unk_26ED28180;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v5 = (uint64_t *)*((void *)a2 + 3);
    if (v5 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v5);
    }
  }
  *((void *)this + 4) = *((void *)a2 + 4);
  return this;
}

void sub_239A63194(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Counter::~Intelligence_Counter(protobuf::Intelligence_Counter *this)
{
  *(void *)this = &unk_26ED28180;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Counter::~Intelligence_Counter(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Counter::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Counter::default_instance(protobuf::Intelligence_Counter *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Counter_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Counter_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Counter_default_instance_;
}

void protobuf::Intelligence_Counter::Clear(protobuf::Intelligence_Counter *this)
{
  if (*((unsigned char *)this + 16))
  {
    uint64_t v1 = *((void *)this + 3);
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *((unsigned char *)this + 8);
  uint64_t v2 = (char *)this + 8;
  *((void *)v2 + 3) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear((google::protobuf::internal::InternalMetadataWithArenaLite *)v2);
  }
}

char *protobuf::Intelligence_Counter::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  int v13 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v13, *((_DWORD *)this + 23)) & 1) == 0)
  {
    while (1)
    {
      TagFallbacint k = (char *)v13 + 1;
      LODWORD(v8) = *(unsigned __int8 *)v13;
      if ((*(char *)v13 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      uint64_t v8 = (const char *)(v8 + (*TagFallback << 7) - 128);
      if ((*TagFallback & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (char *)google::protobuf::internal::ReadTagFallback(v13, v8);
      int v13 = (google::protobuf::internal *)TagFallback;
      if (!TagFallback) {
        goto LABEL_3;
      }
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 == 17)
        {
          v5 |= 2u;
          *(void *)(a1 + 32) = *(void *)TagFallback;
          int v13 = (google::protobuf::internal *)(TagFallback + 8);
          goto LABEL_24;
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(std::string **)(a1 + 24);
        if (v12 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unint64_t v11 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, TagFallback, (uint64_t)this);
        goto LABEL_23;
      }
      if (v8) {
        BOOL v10 = (v8 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
        goto LABEL_3;
      }
      unint64_t v11 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), (google::protobuf::internal *)TagFallback, this);
LABEL_23:
      int v13 = v11;
      if (!v11)
      {
        TagFallbacint k = 0;
        goto LABEL_3;
      }
LABEL_24:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v13, *((_DWORD *)this + 23)))goto LABEL_2; {
    }
      }
    TagFallbacint k = (char *)v13 + 2;
LABEL_7:
    int v13 = (google::protobuf::internal *)TagFallback;
    goto LABEL_8;
  }
LABEL_2:
  TagFallbacint k = (char *)v13;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_Counter::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Counter *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
  }
  if ((v6 & 2) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v7 = *((void *)this + 4);
    *uint64_t v4 = 17;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  uint64_t v8 = *((void *)this + 1);
  if ((v8 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v10 + 23) < 0)
  {
    uint64_t v12 = *(void **)v10;
    uint64_t v11 = *(void *)(v10 + 8);
  }
  else
  {
    LODWORD(v11) = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = (void *)v10;
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v13 = (int)v11;
    memcpy(v4, v12, (int)v11);
    v4 += v13;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v12, v11, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_Counter::ByteSizeLong(protobuf::Intelligence_Counter *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      uint64_t v4 = *((void *)this + 3);
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 9;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *((void *)this + 1);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0) {
      uint64_t v10 = *(void *)(v9 + 8);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    }
    v3 += v10;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void protobuf::Intelligence_Counter::CheckTypeAndMergeFrom(protobuf::Intelligence_Counter *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Counter::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Counter::MergeFrom(protobuf::Intelligence_Counter *this, const protobuf::Intelligence_Counter *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 8001);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0) {
      *((void *)this + 4) = *((void *)a2 + 4);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_239A637B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Counter::CopyFrom(protobuf::Intelligence_Counter *this, const protobuf::Intelligence_Counter *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Counter::Clear(this);
    protobuf::Intelligence_Counter::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Counter::IsInitialized(protobuf::Intelligence_Counter *this)
{
  return 1;
}

double protobuf::Intelligence_Counter::InternalSwap(protobuf::Intelligence_Counter *this, protobuf::Intelligence_Counter *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v20;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  unint64_t v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v12 = (uint64_t *)*((void *)this + 3);
  }
  char v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v15 = *v14;
  }
  uint64_t v16 = v12[2];
  long long v17 = *(_OWORD *)v12;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v15;
  std::string v12[2] = v18;
  *(_OWORD *)char v15 = v17;
  void v15[2] = v16;
LABEL_14:
  double result = *((double *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((double *)a2 + 4) = result;
  return result;
}

void *protobuf::Intelligence_Counter::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Counter");
}

protobuf::Intelligence_Flag *protobuf::Intelligence_Flag::Intelligence_Flag(protobuf::Intelligence_Flag *this)
{
  *(void *)this = &unk_26ED28210;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_Flag_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Flag_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((unsigned char *)this + 32) = 0;
  return this;
}

void sub_239A639FC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Flag *protobuf::Intelligence_Flag::Intelligence_Flag(protobuf::Intelligence_Flag *this, const protobuf::Intelligence_Flag *a2)
{
  *(void *)this = &unk_26ED28210;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v5 = (uint64_t *)*((void *)a2 + 3);
    if (v5 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v5);
    }
  }
  *((unsigned char *)this + 32) = *((unsigned char *)a2 + 32);
  return this;
}

void sub_239A63AB4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Flag::~Intelligence_Flag(protobuf::Intelligence_Flag *this)
{
  *(void *)this = &unk_26ED28210;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Flag::~Intelligence_Flag(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Flag::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Flag::default_instance(protobuf::Intelligence_Flag *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Flag_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Flag_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Flag_default_instance_;
}

void protobuf::Intelligence_Flag::Clear(protobuf::Intelligence_Flag *this)
{
  if (*((unsigned char *)this + 16))
  {
    uint64_t v1 = *((void *)this + 3);
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *((unsigned char *)this + 8);
  uint64_t v2 = (char *)this + 8;
  v2[24] = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear((google::protobuf::internal::InternalMetadataWithArenaLite *)v2);
  }
}

google::protobuf::internal *protobuf::Intelligence_Flag::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v18, *((_DWORD *)this + 23)) & 1) == 0)
  {
    while (1)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v18 + 1);
      LODWORD(v8) = *(unsigned __int8 *)v18;
      if ((*(char *)v18 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unint64_t v8 = (const char *)(v8 + (*(unsigned __int8 *)TagFallback << 7) - 128);
      if ((*(char *)TagFallback & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v18, v8);
      uint64_t v18 = TagFallback;
      if (!TagFallback) {
        goto LABEL_3;
      }
LABEL_8:
      if (v8 >> 3 != 2)
      {
        if (v8 >> 3 == 1 && v8 == 10)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          char v15 = *(std::string **)(a1 + 24);
          if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          uint64_t v11 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v15, (std::string::value_type *)TagFallback, (uint64_t)this);
        }
        else
        {
LABEL_13:
          if (v8) {
            BOOL v10 = (v8 & 7) == 4;
          }
          else {
            BOOL v10 = 1;
          }
          if (v10)
          {
            *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
            goto LABEL_3;
          }
          uint64_t v11 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), TagFallback, this);
        }
        uint64_t v18 = v11;
        if (!v11) {
          goto LABEL_32;
        }
        goto LABEL_27;
      }
      if (v8 != 16) {
        goto LABEL_13;
      }
      v5 |= 2u;
      uint64_t v12 = (google::protobuf::internal *)((char *)TagFallback + 1);
      unint64_t v13 = *(unsigned __int8 *)TagFallback;
      if ((*(char *)TagFallback & 0x80000000) == 0) {
        goto LABEL_22;
      }
      int v14 = *(char *)v12;
      unint64_t v13 = v13 + (v14 << 7) - 128;
      if ((v14 & 0x80000000) == 0)
      {
        uint64_t v12 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_22:
        uint64_t v18 = v12;
        *(unsigned char *)(a1 + 32) = v13 != 0;
        goto LABEL_27;
      }
      uint64_t v16 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v13);
      uint64_t v18 = v16;
      *(unsigned char *)(a1 + 32) = v17 != 0;
      if (!v16)
      {
LABEL_32:
        TagFallbacint k = 0;
        goto LABEL_3;
      }
LABEL_27:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v18, *((_DWORD *)this + 23)))goto LABEL_2; {
    }
      }
    TagFallbacint k = (google::protobuf::internal *)((char *)v18 + 2);
LABEL_7:
    uint64_t v18 = TagFallback;
    goto LABEL_8;
  }
LABEL_2:
  TagFallbacint k = v18;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_Flag::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Flag *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
  }
  if ((v6 & 2) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v7 = *((unsigned char *)this + 32);
    *uint64_t v4 = 16;
    v4[1] = v7;
    v4 += 2;
  }
  uint64_t v8 = *((void *)this + 1);
  if ((v8 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v10 + 23) < 0)
  {
    uint64_t v12 = *(void **)v10;
    uint64_t v11 = *(void *)(v10 + 8);
  }
  else
  {
    LODWORD(v11) = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = (void *)v10;
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v13 = (int)v11;
    memcpy(v4, v12, (int)v11);
    v4 += v13;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v12, v11, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_Flag::ByteSizeLong(protobuf::Intelligence_Flag *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      uint64_t v4 = *((void *)this + 3);
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *((void *)this + 1);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0) {
      uint64_t v10 = *(void *)(v9 + 8);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    }
    v3 += v10;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void protobuf::Intelligence_Flag::CheckTypeAndMergeFrom(protobuf::Intelligence_Flag *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Flag::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Flag::MergeFrom(protobuf::Intelligence_Flag *this, const protobuf::Intelligence_Flag *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 8226);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0) {
      *((unsigned char *)this + 32) = *((unsigned char *)a2 + 32);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_239A64120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Flag::CopyFrom(protobuf::Intelligence_Flag *this, const protobuf::Intelligence_Flag *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Flag::Clear(this);
    protobuf::Intelligence_Flag::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Flag::IsInitialized(protobuf::Intelligence_Flag *this)
{
  return 1;
}

void protobuf::Intelligence_Flag::InternalSwap(protobuf::Intelligence_Flag *this, protobuf::Intelligence_Flag *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v20;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  int v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v12 = (uint64_t *)*((void *)this + 3);
  }
  char v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v15 = *v14;
  }
  uint64_t v16 = v12[2];
  long long v17 = *(_OWORD *)v12;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v15;
  std::string v12[2] = v18;
  *(_OWORD *)char v15 = v17;
  void v15[2] = v16;
LABEL_14:
  char v19 = *((unsigned char *)this + 32);
  *((unsigned char *)this + 32) = *((unsigned char *)a2 + 32);
  *((unsigned char *)a2 + 32) = v19;
}

void *protobuf::Intelligence_Flag::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Flag");
}

protobuf::Intelligence_Label *protobuf::Intelligence_Label::Intelligence_Label(protobuf::Intelligence_Label *this)
{
  *(void *)this = &unk_26ED282A0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_Label_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Label_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_239A64360(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Label *protobuf::Intelligence_Label::Intelligence_Label(protobuf::Intelligence_Label *this, const protobuf::Intelligence_Label *a2)
{
  *(void *)this = &unk_26ED282A0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  return this;
}

void sub_239A64430(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Label::~Intelligence_Label(protobuf::Intelligence_Label *this)
{
  *(void *)this = &unk_26ED282A0;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Label::~Intelligence_Label(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Label::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Label::default_instance(protobuf::Intelligence_Label *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Label_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Label_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Label_default_instance_;
}

void protobuf::Intelligence_Label::Clear(protobuf::Intelligence_Label *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  uint64_t v2 = *((void *)this + 3);
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    uint64_t v3 = *((void *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *((unsigned char *)this + 8);
  uint64_t v4 = (protobuf::Intelligence_Label *)((char *)this + 8);
  *((_DWORD *)v4 + 2) = 0;
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v4);
  }
}

google::protobuf::internal *protobuf::Intelligence_Label::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v12 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v12, *((_DWORD *)this + 23));
  double result = v12;
  if ((v5 & 1) == 0)
  {
    while (1)
    {
      unint64_t v7 = (char *)result + 1;
      LODWORD(v8) = *(unsigned __int8 *)result;
      if ((*(char *)result & 0x80000000) == 0) {
        goto LABEL_5;
      }
      unint64_t v8 = (const char *)(v8 + (*v7 << 7) - 128);
      if ((*v7 & 0x80000000) == 0) {
        break;
      }
      double result = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(result, v8);
      uint64_t v12 = result;
      if (!result) {
        return result;
      }
      unint64_t v7 = (std::string::value_type *)result;
LABEL_6:
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          long long v10 = *(std::string **)(a1 + 32);
          if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 32, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          goto LABEL_19;
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        long long v10 = *(std::string **)(a1 + 24);
        if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
LABEL_19:
        double result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v10, v7, (uint64_t)this);
        goto LABEL_20;
      }
      if (!v8 || (v8 & 7) == 4)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
        return (google::protobuf::internal *)v7;
      }
      double result = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v7, this);
LABEL_20:
      uint64_t v12 = result;
      if (result)
      {
        int v11 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v12, *((_DWORD *)this + 23));
        double result = v12;
        if (!v11) {
          continue;
        }
      }
      return result;
    }
    unint64_t v7 = (char *)result + 2;
LABEL_5:
    uint64_t v12 = (google::protobuf::internal *)v7;
    goto LABEL_6;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_Label::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Label *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = (unsigned __int8 *)a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 4), (char *)v4);
  }
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    int v11 = *(void **)v9;
    uint64_t v10 = *(void *)(v9 + 8);
  }
  else
  {
    LODWORD(v1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *(unsigned __int8 *)(v9 + 23);
    int v11 = (void *)v9;
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v12 = (int)v10;
    memcpy(v4, v11, (int)v10);
    v4 += v12;
    return v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v11, v10, v4);
}

uint64_t protobuf::Intelligence_Label::ByteSizeLong(protobuf::Intelligence_Label *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = *((void *)this + 3);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v6 = *((void *)this + 4);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *((void *)this + 1);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0) {
      uint64_t v12 = *(void *)(v11 + 8);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    }
    v2 += v12;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void protobuf::Intelligence_Label::CheckTypeAndMergeFrom(protobuf::Intelligence_Label *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Label::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Label::MergeFrom(protobuf::Intelligence_Label *this, const protobuf::Intelligence_Label *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 8460);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      unint64_t v11 = (std::string *)*((void *)this + 4);
      uint64_t v10 = (char *)this + 32;
      uint64_t v9 = v11;
      *((_DWORD *)v10 - 4) |= 2u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 4);
      if (v11 != v12)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v10, (uint64_t)v12);
        }
        std::string::operator=(v9, v12);
      }
    }
  }
}

void sub_239A64B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Label::CopyFrom(protobuf::Intelligence_Label *this, const protobuf::Intelligence_Label *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Label::Clear(this);
    protobuf::Intelligence_Label::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Label::IsInitialized(protobuf::Intelligence_Label *this)
{
  return 1;
}

__n128 protobuf::Intelligence_Label::InternalSwap(protobuf::Intelligence_Label *this, protobuf::Intelligence_Label *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v25;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      uint64_t v8 = (__n128 *)(v4 & 0xFFFFFFFFFFFFFFFELL);
LABEL_7:
      unint64_t v9 = v8[1].n128_u64[0];
      __n128 result = *v8;
      unint64_t v11 = *(void *)(v7 + 16);
      *uint64_t v8 = *(__n128 *)v7;
      v8[1].n128_u64[0] = v11;
      *(__n128 *)unint64_t v7 = result;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  int v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v12 = (uint64_t *)*((void *)this + 3);
  }
  char v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v15 = *v14;
  }
  uint64_t v16 = v12[2];
  __n128 result = *(__n128 *)v12;
  uint64_t v17 = v15[2];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v15;
  std::string v12[2] = v17;
  *(__n128 *)char v15 = result;
  void v15[2] = v16;
LABEL_14:
  unint64_t v20 = (uint64_t *)*((void *)this + 4);
  uint64_t v18 = (std::string **)((char *)this + 32);
  char v19 = (std::string *)v20;
  uint64_t v21 = (std::string **)((char *)a2 + 32);
  if (v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v19 = *v18;
  }
  uint64_t v22 = *v21;
  if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v22 = *v21;
  }
  std::string::size_type v23 = v19->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v19->__r_.__value_.__l.__data_;
  std::string::size_type v24 = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v19->__r_.__value_.__l.__data_ = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v19->__r_.__value_.__r.__words[2] = v24;
  *(__n128 *)&v22->__r_.__value_.__l.__data_ = result;
  v22->__r_.__value_.__r.__words[2] = v23;
  return result;
}

void *protobuf::Intelligence_Label::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Label");
}

protobuf::Intelligence_List *protobuf::Intelligence_List::Intelligence_List(protobuf::Intelligence_List *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED28330;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_List_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_List_intelligence_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_239A64DC8(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_List *protobuf::Intelligence_List::Intelligence_List(protobuf::Intelligence_List *this, const protobuf::Intelligence_List *a2)
{
  *(void *)this = &unk_26ED28330;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 6);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v6);
    }
  }
  return this;
}

void sub_239A64EA0(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_List::~Intelligence_List(protobuf::Intelligence_List *this)
{
  *(void *)this = &unk_26ED28330;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_List::~Intelligence_List(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_List::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_List::default_instance(protobuf::Intelligence_List *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_List_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_List_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_List_default_instance_;
}

void protobuf::Intelligence_List::Clear(protobuf::Intelligence_List *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  if (*((unsigned char *)this + 16))
  {
    uint64_t v2 = *((void *)this + 6);
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  char v4 = *((unsigned char *)this + 8);
  uint64_t v3 = (protobuf::Intelligence_List *)((char *)this + 8);
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v3);
  }
}

std::string::value_type *protobuf::Intelligence_List::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v21 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v21, *((_DWORD *)this + 23));
  __n128 result = (std::string::value_type *)v21;
  if ((v5 & 1) == 0)
  {
    unint64_t v7 = (uint64_t *)(a1 + 24);
    while (1)
    {
      uint64_t v8 = result + 1;
      LODWORD(v9) = *result;
      if ((*result & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unint64_t v9 = (const char *)(v9 + (*v8 << 7) - 128);
      if ((*v8 & 0x80000000) == 0) {
        break;
      }
      __n128 result = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)result, v9);
      uint64_t v21 = (google::protobuf::internal *)result;
      if (!result) {
        return result;
      }
      uint64_t v8 = result;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 18) {
          goto LABEL_13;
        }
        __n128 result = v8 - 1;
        while (2)
        {
          unint64_t v11 = result + 1;
          uint64_t v21 = (google::protobuf::internal *)(result + 1);
          uint64_t v12 = *(int **)(a1 + 40);
          if (v12)
          {
            uint64_t v13 = *(int *)(a1 + 32);
            int v14 = *v12;
            if ((int)v13 < *v12)
            {
              *(_DWORD *)(a1 + 32) = v13 + 1;
              unint64_t AlignedAndAddCleanup = *(std::string **)&v12[2 * v13 + 2];
              goto LABEL_29;
            }
            if (v14 == *(_DWORD *)(a1 + 36))
            {
LABEL_23:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v14 + 1);
              uint64_t v12 = *(int **)(a1 + 40);
              int v14 = *v12;
            }
            *uint64_t v12 = v14 + 1;
            uint64_t v16 = (atomic_ullong *)*v7;
            if (!*v7) {
              operator new();
            }
            if (v16[14]) {
            unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v16, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
            }
            AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
            AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
            AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
            uint64_t v17 = *(void *)(a1 + 40);
            uint64_t v18 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 32) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = AlignedAndAddCleanup;
            unint64_t v11 = (std::string::value_type *)v21;
LABEL_29:
            __n128 result = google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v11, (uint64_t)this);
            uint64_t v21 = (google::protobuf::internal *)result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *result != 18) {
              goto LABEL_37;
            }
            continue;
          }
          break;
        }
        int v14 = *(_DWORD *)(a1 + 36);
        goto LABEL_23;
      }
      if (v9 >> 3 == 1 && v9 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        char v19 = *(std::string **)(a1 + 48);
        if (v19 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 48, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        __n128 result = google::protobuf::internal::InlineGreedyStringParser(v19, v8, (uint64_t)this);
        goto LABEL_36;
      }
LABEL_13:
      if (!v9 || (v9 & 7) == 4)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 - 1;
        return v8;
      }
      __n128 result = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse(v9, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v8, this);
LABEL_36:
      uint64_t v21 = (google::protobuf::internal *)result;
      if (!result) {
        return result;
      }
LABEL_37:
      int v20 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v21, *((_DWORD *)this + 23));
      __n128 result = (std::string::value_type *)v21;
      if (v20) {
        return result;
      }
    }
    uint64_t v8 = result + 2;
LABEL_7:
    uint64_t v21 = (google::protobuf::internal *)v8;
    goto LABEL_8;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_List::InternalSerializeWithCachedSizesToArray(const void ***this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  if ((_BYTE)this[2]) {
    char v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, this[6], a2);
  }
  int v6 = *((_DWORD *)this + 8);
  if (v6 >= 1)
  {
    for (int i = 0; v6 != i; ++i)
    {
      uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)(this + 3), i);
      if (*(char *)(v8 + 23) < 0)
      {
        int64_t v9 = *(void *)(v8 + 8);
        if (v9 > 127) {
          goto LABEL_15;
        }
      }
      else
      {
        int64_t v9 = *(unsigned __int8 *)(v8 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v9)
      {
        *char v4 = 18;
        v4[1] = v9;
        if (*(char *)(v8 + 23) >= 0) {
          uint64_t v10 = (const void *)v8;
        }
        else {
          uint64_t v10 = *(const void **)v8;
        }
        memcpy(v4 + 2, v10, v9);
        v4 += v9 + 2;
        continue;
      }
LABEL_15:
      char v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 2, v8, v4);
    }
  }
  unint64_t v11 = (unint64_t)this[1];
  if ((v11 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v13 + 23) < 0)
  {
    char v15 = *(void **)v13;
    uint64_t v14 = *(void *)(v13 + 8);
  }
  else
  {
    LODWORD(v14) = *(unsigned __int8 *)(v13 + 23);
    char v15 = (void *)v13;
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v16 = (int)v14;
    memcpy(v4, v15, (int)v14);
    v4 += v16;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v15, v14, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_List::ByteSizeLong(protobuf::Intelligence_List *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 8);
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v3);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      if ((v6 & 0x80u) != 0) {
        uint64_t v6 = *(void *)(v5 + 8);
      }
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  if (*((unsigned char *)this + 16))
  {
    uint64_t v7 = *((void *)this + 6);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *((void *)this + 1);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0) {
      uint64_t v13 = *(void *)(v12 + 8);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    }
    v4 += v13;
  }
  *((_DWORD *)this + 5) = v4;
  return v4;
}

void protobuf::Intelligence_List::CheckTypeAndMergeFrom(protobuf::Intelligence_List *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_List::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_List::MergeFrom(protobuf::Intelligence_List *this, const protobuf::Intelligence_List *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 8687);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v8 = (std::string *)*((void *)this + 6);
    uint64_t v7 = (char *)this + 48;
    uint64_t v6 = v8;
    *((_DWORD *)v7 - 8) |= 1u;
    uint64_t v9 = (const std::string *)*((void *)a2 + 6);
    if (v8 != v9)
    {
      if (v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)v9);
      }
      std::string::operator=(v6, v9);
    }
  }
}

void sub_239A65710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_List::CopyFrom(protobuf::Intelligence_List *this, const protobuf::Intelligence_List *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_List::Clear(this);
    protobuf::Intelligence_List::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_List::IsInitialized(protobuf::Intelligence_List *this)
{
  return 1;
}

__n128 protobuf::Intelligence_List::InternalSwap(protobuf::Intelligence_List *this, protobuf::Intelligence_List *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v21;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_List *)((char *)this + 24), (protobuf::Intelligence_List *)((char *)a2 + 24));
  uint64_t v16 = (uint64_t *)*((void *)this + 6);
  uint64_t v14 = (std::string **)((char *)this + 48);
  char v15 = (std::string *)v16;
  uint64_t v17 = (std::string **)((char *)a2 + 48);
  if (v16 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v15 = *v14;
  }
  uint64_t v18 = *v17;
  if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v18 = *v17;
  }
  std::string::size_type v19 = v15->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v15->__r_.__value_.__l.__data_;
  std::string::size_type v20 = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v15->__r_.__value_.__r.__words[2] = v20;
  *(__n128 *)&v18->__r_.__value_.__l.__data_ = result;
  v18->__r_.__value_.__r.__words[2] = v19;
  return result;
}

void *protobuf::Intelligence_List::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.List");
}

void protobuf::Intelligence_Variable::InitAsDefaultInstance(protobuf::Intelligence_Variable *this)
{
  qword_268A0B2D0 = (uint64_t)&protobuf::_Intelligence_KeyValueParameter_default_instance_;
}

uint64_t protobuf::Intelligence_Variable::_Internal::default_value(protobuf::Intelligence_Variable::_Internal *this, const protobuf::Intelligence_Variable *a2)
{
  return *((void *)this + 13);
}

protobuf::Intelligence_Variable *protobuf::Intelligence_Variable::Intelligence_Variable(protobuf::Intelligence_Variable *this)
{
  *(void *)this = &unk_26ED283C0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  if (atomic_load_explicit(scc_info_Intelligence_Variable_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Variable_intelligence_2eproto);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((_WORD *)this + 6siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  return this;
}

void sub_239A65978(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)(v1 + 48));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Variable *protobuf::Intelligence_Variable::Intelligence_Variable(protobuf::Intelligence_Variable *this, const protobuf::Intelligence_Variable *a2)
{
  *(void *)this = &unk_26ED283C0;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 3, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 6, (uint64_t)a2 + 48);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 9);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v7);
    }
  }
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 10);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v8);
    }
  }
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 11);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v9);
    }
  }
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    long long v10 = (uint64_t *)*((void *)a2 + 12);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 96, (uint64_t)v10);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (!*((void *)a2 + 13))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 17756);
      uint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: !value || default_value_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 13) = 0;
  uint64_t v12 = *((void *)a2 + 14);
  *((_WORD *)this + 6siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((_WORD *)a2 + 60);
  *((void *)this + 14) = v12;
  return this;
}

void sub_239A65B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v5);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v4);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v3);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Variable::~Intelligence_Variable(protobuf::Intelligence_Variable *this)
{
  *(void *)this = &unk_26ED283C0;
  protobuf::Intelligence_Variable::SharedDtor(this);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 6);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Variable::~Intelligence_Variable(this);

  JUMPOUT(0x23ECAACC0);
}

void *protobuf::Intelligence_Variable::SharedDtor(void *this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = this[9];
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *(void *)(v1 + 80);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    this = (void *)MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *(void *)(v1 + 88);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    this = (void *)MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = *(void *)(v1 + 96);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    this = (void *)MEMORY[0x23ECAACC0](v8, 0x1012C40EC159624);
  }
  if ((_UNKNOWN *)v1 != &protobuf::_Intelligence_Variable_default_instance_)
  {
    this = *(void **)(v1 + 104);
    if (this)
    {
      long long v10 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v10();
    }
  }
  return this;
}

uint64_t protobuf::Intelligence_Variable::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Variable::default_instance(protobuf::Intelligence_Variable *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Variable_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Variable_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Variable_default_instance_;
}

void protobuf::Intelligence_Variable::Clear(protobuf::Intelligence_Variable *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 48);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_27;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    uint64_t v4 = *((void *)this + 10);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_16;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_20:
    uint64_t v6 = *((void *)this + 12);
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)uint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 0x10) == 0) {
        goto LABEL_27;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 0x10) == 0) {
        goto LABEL_27;
      }
    }
    goto LABEL_24;
  }
  uint64_t v3 = *((void *)this + 9);
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_12;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_12;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_16:
  uint64_t v5 = *((void *)this + 11);
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)uint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_20;
    }
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_27;
  }
LABEL_24:
  unint64_t v7 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 13);
  if (!v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 8859);
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: default_value_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
    unint64_t v7 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 13);
  }
  protobuf::Intelligence_KeyValueParameter::Clear(v7);
LABEL_27:
  if ((v2 & 0xE0) != 0)
  {
    *((_WORD *)this + 6siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
    *((void *)this + 14) = 0;
  }
  char v10 = *((unsigned char *)this + 8);
  uint64_t v9 = (protobuf::Intelligence_Variable *)((char *)this + 8);
  *((_DWORD *)v9 + 2) = 0;
  if (v10) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v9);
  }
}

void sub_239A65FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *protobuf::Intelligence_Variable::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  std::string::size_type v39 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v39, *((_DWORD *)this + 23)) & 1) == 0)
  {
    while (2)
    {
      TagFallbacint k = (char *)v39 + 1;
      LODWORD(v8) = *(unsigned __int8 *)v39;
      if (*(char *)v39 < 0)
      {
        uint64_t v8 = (const char *)(v8 + (*TagFallback << 7) - 128);
        if (*TagFallback < 0)
        {
          TagFallbacint k = (char *)google::protobuf::internal::ReadTagFallback(v39, v8);
          std::string::size_type v39 = (google::protobuf::internal *)TagFallback;
          if (!TagFallback) {
            goto LABEL_3;
          }
LABEL_8:
          switch(v8 >> 3)
          {
            case 1u:
              if (v8 != 10) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v9 = *(std::string **)(a1 + 72);
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 72, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_23;
            case 2u:
              if (v8 != 18) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v9 = *(std::string **)(a1 + 80);
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 80, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_23;
            case 3u:
              if (v8 != 26) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              uint64_t v9 = *(std::string **)(a1 + 88);
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 88, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_23;
            case 4u:
              if (v8 != 34) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 8u;
              uint64_t v9 = *(std::string **)(a1 + 96);
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 96, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_23:
              char v10 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v9, TagFallback, (uint64_t)this);
              goto LABEL_71;
            case 5u:
              if (v8 != 41) {
                goto LABEL_66;
              }
              v5 |= 0x20u;
              *(void *)(a1 + 112) = *(void *)TagFallback;
              std::string::size_type v39 = (google::protobuf::internal *)(TagFallback + 8);
              goto LABEL_72;
            case 6u:
              if (v8 != 48) {
                goto LABEL_66;
              }
              v5 |= 0x80u;
              char v11 = (google::protobuf::internal *)(TagFallback + 1);
              unint64_t v12 = *TagFallback;
              if ((*TagFallback & 0x80000000) == 0) {
                goto LABEL_30;
              }
              int v13 = *(char *)v11;
              unint64_t v12 = v12 + (v13 << 7) - 128;
              if (v13 < 0)
              {
                char v35 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, v12);
                std::string::size_type v39 = v35;
                *(unsigned char *)(a1 + 121) = v36 != 0;
                if (!v35) {
                  goto LABEL_77;
                }
              }
              else
              {
                char v11 = (google::protobuf::internal *)(TagFallback + 2);
LABEL_30:
                std::string::size_type v39 = v11;
                *(unsigned char *)(a1 + 121) = v12 != 0;
              }
              goto LABEL_72;
            case 7u:
              if (v8 != 58) {
                goto LABEL_66;
              }
              char v14 = TagFallback - 1;
              while (1)
              {
                char v15 = (google::protobuf::internal *)(v14 + 1);
                std::string::size_type v39 = (google::protobuf::internal *)(v14 + 1);
                uint64_t v16 = *(int **)(a1 + 40);
                if (!v16) {
                  break;
                }
                uint64_t v17 = *(int *)(a1 + 32);
                int v18 = *v16;
                if ((int)v17 >= *v16)
                {
                  if (v18 == *(_DWORD *)(a1 + 36))
                  {
LABEL_38:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v18 + 1);
                    uint64_t v16 = *(int **)(a1 + 40);
                    int v18 = *v16;
                  }
                  *uint64_t v16 = v18 + 1;
                  std::string::size_type v19 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
                  uint64_t v20 = *(void *)(a1 + 40);
                  uint64_t v21 = *(int *)(a1 + 32);
                  *(_DWORD *)(a1 + 32) = v21 + 1;
                  *(void *)(v20 + 8 * v21 + 8) = v19;
                  char v15 = v39;
                  goto LABEL_40;
                }
                *(_DWORD *)(a1 + 32) = v17 + 1;
                std::string::size_type v19 = *(protobuf::Intelligence_KeyValueParameter **)&v16[2 * v17 + 2];
LABEL_40:
                char v14 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, (uint64_t)v19, v15);
                std::string::size_type v39 = (google::protobuf::internal *)v14;
                if (!v14) {
                  goto LABEL_77;
                }
                if (*(void *)this <= (unint64_t)v14 || *v14 != 58) {
                  goto LABEL_72;
                }
              }
              int v18 = *(_DWORD *)(a1 + 36);
              goto LABEL_38;
            case 8u:
              if (v8 != 66) {
                goto LABEL_66;
              }
              uint64_t v22 = TagFallback - 1;
              break;
            case 9u:
              if (v8 != 74) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) |= 0x10u;
              unint64_t v30 = *(protobuf::Intelligence_KeyValueParameter **)(a1 + 104);
              if (!v30)
              {
                unint64_t v30 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
                *(void *)(a1 + 104) = v30;
                TagFallbacint k = (char *)v39;
              }
              char v10 = (google::protobuf::internal *)google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, (uint64_t)v30, (google::protobuf::internal *)TagFallback);
              goto LABEL_71;
            case 0xAu:
              if (v8 != 80) {
                goto LABEL_66;
              }
              v5 |= 0x40u;
              char v31 = (google::protobuf::internal *)(TagFallback + 1);
              unint64_t v32 = *TagFallback;
              if ((*TagFallback & 0x80000000) == 0) {
                goto LABEL_65;
              }
              int v33 = *(char *)v31;
              unint64_t v32 = v32 + (v33 << 7) - 128;
              if (v33 < 0)
              {
                uint64_t v37 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, v32);
                std::string::size_type v39 = v37;
                *(unsigned char *)(a1 + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v38 != 0;
                if (!v37) {
                  goto LABEL_77;
                }
              }
              else
              {
                char v31 = (google::protobuf::internal *)(TagFallback + 2);
LABEL_65:
                std::string::size_type v39 = v31;
                *(unsigned char *)(a1 + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v32 != 0;
              }
              goto LABEL_72;
            default:
LABEL_66:
              if (v8) {
                BOOL v34 = (v8 & 7) == 4;
              }
              else {
                BOOL v34 = 1;
              }
              if (v34)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
                goto LABEL_3;
              }
              char v10 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), (google::protobuf::internal *)TagFallback, this);
LABEL_71:
              std::string::size_type v39 = v10;
              if (!v10)
              {
LABEL_77:
                TagFallbacint k = 0;
                goto LABEL_3;
              }
LABEL_72:
              if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v39, *((_DWORD *)this + 23)))goto LABEL_2; {
              continue;
              }
          }
          while (1)
          {
            std::string::size_type v23 = (google::protobuf::internal *)(v22 + 1);
            std::string::size_type v39 = (google::protobuf::internal *)(v22 + 1);
            std::string::size_type v24 = *(int **)(a1 + 64);
            if (!v24) {
              break;
            }
            uint64_t v25 = *(int *)(a1 + 56);
            int v26 = *v24;
            if ((int)v25 >= *v24)
            {
              if (v26 == *(_DWORD *)(a1 + 60))
              {
LABEL_51:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v26 + 1);
                std::string::size_type v24 = *(int **)(a1 + 64);
                int v26 = *v24;
              }
              *std::string::size_type v24 = v26 + 1;
              uint64_t v27 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
              uint64_t v28 = *(void *)(a1 + 64);
              uint64_t v29 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v29 + 1;
              *(void *)(v28 + 8 * v29 + 8) = v27;
              std::string::size_type v23 = v39;
              goto LABEL_53;
            }
            *(_DWORD *)(a1 + 56) = v25 + 1;
            uint64_t v27 = *(protobuf::Intelligence_KeyValueParameter **)&v24[2 * v25 + 2];
LABEL_53:
            uint64_t v22 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, (uint64_t)v27, v23);
            std::string::size_type v39 = (google::protobuf::internal *)v22;
            if (!v22) {
              goto LABEL_77;
            }
            if (*(void *)this <= (unint64_t)v22 || *v22 != 66) {
              goto LABEL_72;
            }
          }
          int v26 = *(_DWORD *)(a1 + 60);
          goto LABEL_51;
        }
        TagFallbacint k = (char *)v39 + 2;
      }
      break;
    }
    std::string::size_type v39 = (google::protobuf::internal *)TagFallback;
    goto LABEL_8;
  }
LABEL_2:
  TagFallbacint k = (char *)v39;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_Variable::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Variable *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 9), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 10), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 11), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 12), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  uint64_t v7 = *((void *)this + 14);
  *uint64_t v4 = 41;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 0x80) != 0)
  {
LABEL_15:
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v8 = *((unsigned char *)this + 121);
    *uint64_t v4 = 48;
    v4[1] = v8;
    v4 += 2;
  }
LABEL_18:
  int v9 = *((_DWORD *)this + 8);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      char v11 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 24, i);
      *uint64_t v4 = 58;
      unsigned int v12 = *((_DWORD *)v11 + 5);
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unsigned int v14 = v12 >> 7;
        if (v12 >> 14)
        {
          int v13 = v4 + 3;
          do
          {
            *(v13 - 1) = v14 | 0x80;
            unsigned int v15 = v14 >> 7;
            ++v13;
            unsigned int v16 = v14 >> 14;
            v14 >>= 7;
          }
          while (v16);
          *(v13 - 1) = v15;
        }
        else
        {
          std::string v4[2] = v14;
          int v13 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v12;
        int v13 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v11, v13, a3);
    }
  }
  int v17 = *((_DWORD *)this + 14);
  if (v17)
  {
    for (int j = 0; j != v17; ++j)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      std::string::size_type v19 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 48, j);
      *uint64_t v4 = 66;
      unsigned int v20 = *((_DWORD *)v19 + 5);
      if (v20 > 0x7F)
      {
        v4[1] = v20 | 0x80;
        unsigned int v22 = v20 >> 7;
        if (v20 >> 14)
        {
          uint64_t v21 = v4 + 3;
          do
          {
            *(v21 - 1) = v22 | 0x80;
            unsigned int v23 = v22 >> 7;
            ++v21;
            unsigned int v24 = v22 >> 14;
            v22 >>= 7;
          }
          while (v24);
          *(v21 - 1) = v23;
        }
        else
        {
          std::string v4[2] = v22;
          uint64_t v21 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v20;
        uint64_t v21 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v19, v21, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v25 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 13);
    *uint64_t v4 = 74;
    unsigned int v26 = *((_DWORD *)v25 + 5);
    if (v26 > 0x7F)
    {
      v4[1] = v26 | 0x80;
      unsigned int v28 = v26 >> 7;
      if (v26 >> 14)
      {
        uint64_t v27 = v4 + 3;
        do
        {
          *(v27 - 1) = v28 | 0x80;
          unsigned int v29 = v28 >> 7;
          ++v27;
          unsigned int v30 = v28 >> 14;
          v28 >>= 7;
        }
        while (v30);
        *(v27 - 1) = v29;
      }
      else
      {
        std::string v4[2] = v28;
        uint64_t v27 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v26;
      uint64_t v27 = v4 + 2;
    }
    uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v25, v27, a3);
  }
  if ((v6 & 0x40) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v31 = *((unsigned char *)this + 120);
    *uint64_t v4 = 80;
    v4[1] = v31;
    v4 += 2;
  }
  uint64_t v32 = *((void *)this + 1);
  if ((v32 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v34 + 23) < 0)
  {
    uint64_t v36 = *(void **)v34;
    uint64_t v35 = *(void *)(v34 + 8);
  }
  else
  {
    LODWORD(v35) = *(unsigned __int8 *)(v34 + 23);
    uint64_t v36 = (void *)v34;
  }
  if (*(void *)a3 - (void)v4 >= (int)v35)
  {
    uint64_t v37 = (int)v35;
    memcpy(v4, v36, (int)v35);
    v4 += v37;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v36, v35, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_Variable::ByteSizeLong(protobuf::Intelligence_Variable *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (protobuf::Intelligence_KeyValueParameter **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    char v11 = (protobuf::Intelligence_KeyValueParameter **)(v10 + 8);
  }
  else {
    char v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      int v13 = *v11++;
      uint64_t v14 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  char v15 = *((unsigned char *)this + 16);
  if (v15)
  {
    if (*((unsigned char *)this + 16))
    {
      uint64_t v20 = *((void *)this + 9);
      uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
      uint64_t v22 = *(void *)(v20 + 8);
      if ((v21 & 0x80u) == 0) {
        uint64_t v22 = v21;
      }
      v9 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((*((unsigned char *)this + 16) & 2) == 0)
      {
LABEL_18:
        if ((*((unsigned char *)this + 16) & 4) == 0) {
          goto LABEL_19;
        }
        goto LABEL_37;
      }
    }
    else if ((*((unsigned char *)this + 16) & 2) == 0)
    {
      goto LABEL_18;
    }
    uint64_t v23 = *((void *)this + 10);
    uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
    uint64_t v25 = *(void *)(v23 + 8);
    if ((v24 & 0x80u) == 0) {
      uint64_t v25 = v24;
    }
    v9 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*((unsigned char *)this + 16) & 4) == 0)
    {
LABEL_19:
      if ((*((unsigned char *)this + 16) & 8) == 0) {
        goto LABEL_20;
      }
      goto LABEL_40;
    }
LABEL_37:
    uint64_t v26 = *((void *)this + 11);
    uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
    uint64_t v28 = *(void *)(v26 + 8);
    if ((v27 & 0x80u) == 0) {
      uint64_t v28 = v27;
    }
    v9 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*((unsigned char *)this + 16) & 8) == 0)
    {
LABEL_20:
      if ((*((unsigned char *)this + 16) & 0x10) == 0)
      {
LABEL_22:
        uint64_t v17 = v9 + 9;
        if ((v15 & 0x20) == 0) {
          uint64_t v17 = v9;
        }
        if ((v15 & 0x40) != 0) {
          v17 += 2;
        }
        if (v15 < 0) {
          uint64_t v9 = v17 + 2;
        }
        else {
          uint64_t v9 = v17;
        }
        goto LABEL_29;
      }
LABEL_21:
      uint64_t v16 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(*((protobuf::Intelligence_KeyValueParameter **)this
                                                                   + 13));
      v9 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      goto LABEL_22;
    }
LABEL_40:
    uint64_t v29 = *((void *)this + 12);
    uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
    uint64_t v31 = *(void *)(v29 + 8);
    if ((v30 & 0x80u) == 0) {
      uint64_t v31 = v30;
    }
    v9 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*((unsigned char *)this + 16) & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_29:
  uint64_t v18 = *((void *)this + 1);
  if (v18)
  {
    unint64_t v32 = v18 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v32 + 23) < 0) {
      uint64_t v33 = *(void *)(v32 + 8);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(v32 + 23);
    }
    v9 += v33;
  }
  *((_DWORD *)this + 5) = v9;
  return v9;
}

void protobuf::Intelligence_Variable::CheckTypeAndMergeFrom(protobuf::Intelligence_Variable *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Variable::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Variable::MergeFrom(protobuf::Intelligence_Variable *this, const protobuf::Intelligence_Variable *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 9156);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 3, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 6, (uint64_t)a2 + 48);
  int v6 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v6)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 9);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 9);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 10);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 10);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      char v11 = (std::string *)*((void *)this + 11);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 11);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      int v13 = (std::string *)*((void *)this + 12);
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v14 = (const std::string *)*((void *)a2 + 12);
      if (v13 != v14)
      {
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 96, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      *((_DWORD *)this + 4) |= 0x10u;
      char v15 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 13);
      if (!v15)
      {
        char v15 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
        *((void *)this + 13) = v15;
      }
      if (*((void *)a2 + 13)) {
        uint64_t v16 = (const protobuf::Intelligence_KeyValueParameter *)*((void *)a2 + 13);
      }
      else {
        uint64_t v16 = (const protobuf::Intelligence_KeyValueParameter *)&protobuf::_Intelligence_KeyValueParameter_default_instance_;
      }
      protobuf::Intelligence_KeyValueParameter::MergeFrom(v15, v16);
      if ((v6 & 0x20) == 0)
      {
LABEL_28:
        if ((v6 & 0x40) == 0) {
          goto LABEL_29;
        }
        goto LABEL_40;
      }
    }
    else if ((v6 & 0x20) == 0)
    {
      goto LABEL_28;
    }
    *((void *)this + 14) = *((void *)a2 + 14);
    if ((v6 & 0x40) == 0)
    {
LABEL_29:
      if ((v6 & 0x80) == 0)
      {
LABEL_31:
        *((_DWORD *)this + 4) |= v6;
        return;
      }
LABEL_30:
      *((unsigned char *)this + 121) = *((unsigned char *)a2 + 121);
      goto LABEL_31;
    }
LABEL_40:
    *((unsigned char *)this + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 120);
    if ((v6 & 0x80) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
}

void sub_239A66EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Variable::CopyFrom(protobuf::Intelligence_Variable *this, const protobuf::Intelligence_Variable *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Variable::Clear(this);
    protobuf::Intelligence_Variable::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Variable::IsInitialized(protobuf::Intelligence_Variable *this)
{
  return 1;
}

double protobuf::Intelligence_Variable::InternalSwap(protobuf::Intelligence_Variable *this, protobuf::Intelligence_Variable *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v39;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_34;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_34:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_Variable *)((char *)this + 24), (protobuf::Intelligence_Variable *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_Variable *)((char *)this + 48), (protobuf::Intelligence_Variable *)((char *)a2 + 48));
  int v13 = (uint64_t *)*((void *)this + 9);
  uint64_t v14 = (uint64_t **)((char *)a2 + 72);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v13 = (uint64_t *)*((void *)this + 9);
  }
  char v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)int v13 = *(_OWORD *)v15;
  std::string v13[2] = v18;
  *(_OWORD *)char v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  std::string::size_type v19 = (uint64_t *)*((void *)this + 10);
  uint64_t v20 = (uint64_t **)((char *)a2 + 80);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    std::string::size_type v19 = (uint64_t *)*((void *)this + 10);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)std::string::size_type v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  uint64_t v25 = (uint64_t *)*((void *)this + 11);
  uint64_t v26 = (uint64_t **)((char *)a2 + 88);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v25 = (uint64_t *)*((void *)this + 11);
  }
  uint64_t v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)uint64_t v27 = v29;
  v27[2] = v28;
LABEL_26:
  uint64_t v31 = (uint64_t *)*((void *)this + 12);
  unint64_t v32 = (uint64_t **)((char *)a2 + 96);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 12, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v31 = (uint64_t *)*((void *)this + 12);
  }
  uint64_t v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 12, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v33 = *v32;
  }
  uint64_t v34 = v31[2];
  long long v35 = *(_OWORD *)v31;
  uint64_t v36 = v33[2];
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v33;
  void v31[2] = v36;
  *(_OWORD *)uint64_t v33 = v35;
  std::string v33[2] = v34;
LABEL_32:
  uint64_t v37 = *((void *)this + 13);
  *((void *)this + 13) = *((void *)a2 + 13);
  *((void *)a2 + 13) = v37;
  double result = *((double *)this + 14);
  *((void *)this + 14) = *((void *)a2 + 14);
  *((double *)a2 + 14) = result;
  LOBYTE(v37) = *((unsigned char *)this + 120);
  *((unsigned char *)this + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 120);
  *((unsigned char *)a2 + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v37;
  LOBYTE(v37) = *((unsigned char *)this + 121);
  *((unsigned char *)this + 121) = *((unsigned char *)a2 + 121);
  *((unsigned char *)a2 + 121) = v37;
  return result;
}

void *protobuf::Intelligence_Variable::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Variable");
}

protobuf::Intelligence_Start *protobuf::Intelligence_Start::Intelligence_Start(protobuf::Intelligence_Start *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED28450;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_Start_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Start_intelligence_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_239A672AC(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Start *protobuf::Intelligence_Start::Intelligence_Start(protobuf::Intelligence_Start *this, const protobuf::Intelligence_Start *a2)
{
  *(void *)this = &unk_26ED28450;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 6);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v6);
    }
  }
  return this;
}

void sub_239A67384(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Start::~Intelligence_Start(protobuf::Intelligence_Start *this)
{
  *(void *)this = &unk_26ED28450;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Start::~Intelligence_Start(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Start::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Start::default_instance(protobuf::Intelligence_Start *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Start_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Start_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Start_default_instance_;
}

void protobuf::Intelligence_Start::Clear(protobuf::Intelligence_Start *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  if (*((unsigned char *)this + 16))
  {
    uint64_t v2 = *((void *)this + 6);
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  char v4 = *((unsigned char *)this + 8);
  uint64_t v3 = (protobuf::Intelligence_Start *)((char *)this + 8);
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v3);
  }
}

std::string::value_type *protobuf::Intelligence_Start::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v21 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v21, *((_DWORD *)this + 23));
  double result = (std::string::value_type *)v21;
  if ((v5 & 1) == 0)
  {
    unint64_t v7 = (uint64_t *)(a1 + 24);
    while (1)
    {
      unint64_t v8 = result + 1;
      LODWORD(v9) = *result;
      if ((*result & 0x80000000) == 0) {
        goto LABEL_7;
      }
      uint64_t v9 = (const char *)(v9 + (*v8 << 7) - 128);
      if ((*v8 & 0x80000000) == 0) {
        break;
      }
      double result = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)result, v9);
      uint64_t v21 = (google::protobuf::internal *)result;
      if (!result) {
        return result;
      }
      unint64_t v8 = result;
LABEL_8:
      if (v9 >> 3 != 2)
      {
        if (v9 >> 3 != 1 || v9 != 10) {
          goto LABEL_13;
        }
        double result = v8 - 1;
        while (2)
        {
          int v13 = result + 1;
          uint64_t v21 = (google::protobuf::internal *)(result + 1);
          uint64_t v14 = *(int **)(a1 + 40);
          if (v14)
          {
            uint64_t v15 = *(int *)(a1 + 32);
            int v16 = *v14;
            if ((int)v15 < *v14)
            {
              *(_DWORD *)(a1 + 32) = v15 + 1;
              unint64_t AlignedAndAddCleanup = *(std::string **)&v14[2 * v15 + 2];
              goto LABEL_35;
            }
            if (v16 == *(_DWORD *)(a1 + 36))
            {
LABEL_29:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v16 + 1);
              uint64_t v14 = *(int **)(a1 + 40);
              int v16 = *v14;
            }
            *uint64_t v14 = v16 + 1;
            uint64_t v18 = (atomic_ullong *)*v7;
            if (!*v7) {
              operator new();
            }
            if (v18[14]) {
            unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v18, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
            }
            AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
            AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
            AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
            uint64_t v19 = *(void *)(a1 + 40);
            uint64_t v20 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 32) = v20 + 1;
            *(void *)(v19 + 8 * v20 + 8) = AlignedAndAddCleanup;
            int v13 = (std::string::value_type *)v21;
LABEL_35:
            double result = google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v13, (uint64_t)this);
            uint64_t v21 = (google::protobuf::internal *)result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *result != 10) {
              goto LABEL_21;
            }
            continue;
          }
          break;
        }
        int v16 = *(_DWORD *)(a1 + 36);
        goto LABEL_29;
      }
      if (v9 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(std::string **)(a1 + 48);
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 48, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        double result = google::protobuf::internal::InlineGreedyStringParser(v11, v8, (uint64_t)this);
        goto LABEL_20;
      }
LABEL_13:
      if (!v9 || (v9 & 7) == 4)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 - 1;
        return v8;
      }
      double result = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse(v9, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v8, this);
LABEL_20:
      uint64_t v21 = (google::protobuf::internal *)result;
      if (!result) {
        return result;
      }
LABEL_21:
      int v12 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v21, *((_DWORD *)this + 23));
      double result = (std::string::value_type *)v21;
      if (v12) {
        return result;
      }
    }
    unint64_t v8 = result + 2;
LABEL_7:
    uint64_t v21 = (google::protobuf::internal *)v8;
    goto LABEL_8;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_Start::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Start *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6 >= 1)
  {
    for (int i = 0; v6 != i; ++i)
    {
      uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, i);
      if (*(char *)(v8 + 23) < 0)
      {
        int64_t v9 = *(void *)(v8 + 8);
        if (v9 > 127) {
          goto LABEL_13;
        }
      }
      else
      {
        int64_t v9 = *(unsigned __int8 *)(v8 + 23);
      }
      if (*(void *)a3 - (void)a2 + 14 >= v9)
      {
        *a2 = 10;
        a2[1] = v9;
        if (*(char *)(v8 + 23) >= 0) {
          long long v10 = (const void *)v8;
        }
        else {
          long long v10 = *(const void **)v8;
        }
        memcpy(a2 + 2, v10, v9);
        a2 += v9 + 2;
        continue;
      }
LABEL_13:
      a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 1, v8, a2);
    }
  }
  if (*((unsigned char *)this + 16)) {
    a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 6), a2);
  }
  uint64_t v11 = *((void *)this + 1);
  if ((v11 & 1) == 0) {
    return (unsigned __int8 *)a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v13 + 23) < 0)
  {
    uint64_t v15 = *(void **)v13;
    uint64_t v14 = *(void *)(v13 + 8);
  }
  else
  {
    LODWORD(v14) = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = (void *)v13;
  }
  if (*(void *)a3 - (void)a2 >= (int)v14)
  {
    uint64_t v16 = (int)v14;
    memcpy(a2, v15, (int)v14);
    a2 += v16;
    return (unsigned __int8 *)a2;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v15, v14, (unsigned __int8 *)a2);
}

uint64_t protobuf::Intelligence_Start::ByteSizeLong(protobuf::Intelligence_Start *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 8);
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v3);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      if ((v6 & 0x80u) != 0) {
        uint64_t v6 = *(void *)(v5 + 8);
      }
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  if (*((unsigned char *)this + 16))
  {
    uint64_t v7 = *((void *)this + 6);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *((void *)this + 1);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0) {
      uint64_t v13 = *(void *)(v12 + 8);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    }
    v4 += v13;
  }
  *((_DWORD *)this + 5) = v4;
  return v4;
}

void protobuf::Intelligence_Start::CheckTypeAndMergeFrom(protobuf::Intelligence_Start *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Start::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Start::MergeFrom(protobuf::Intelligence_Start *this, const protobuf::Intelligence_Start *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 9416);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v8 = (std::string *)*((void *)this + 6);
    uint64_t v7 = (char *)this + 48;
    uint64_t v6 = v8;
    *((_DWORD *)v7 - 8) |= 1u;
    uint64_t v9 = (const std::string *)*((void *)a2 + 6);
    if (v8 != v9)
    {
      if (v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)v9);
      }
      std::string::operator=(v6, v9);
    }
  }
}

void sub_239A67BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Start::CopyFrom(protobuf::Intelligence_Start *this, const protobuf::Intelligence_Start *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Start::Clear(this);
    protobuf::Intelligence_Start::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Start::IsInitialized(protobuf::Intelligence_Start *this)
{
  return 1;
}

__n128 protobuf::Intelligence_Start::InternalSwap(protobuf::Intelligence_Start *this, protobuf::Intelligence_Start *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v21;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_Start *)((char *)this + 24), (protobuf::Intelligence_Start *)((char *)a2 + 24));
  uint64_t v16 = (uint64_t *)*((void *)this + 6);
  uint64_t v14 = (std::string **)((char *)this + 48);
  uint64_t v15 = (std::string *)v16;
  long long v17 = (std::string **)((char *)a2 + 48);
  if (v16 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v18 = *v17;
  if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v18 = *v17;
  }
  std::string::size_type v19 = v15->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v15->__r_.__value_.__l.__data_;
  std::string::size_type v20 = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v15->__r_.__value_.__r.__words[2] = v20;
  *(__n128 *)&v18->__r_.__value_.__l.__data_ = result;
  v18->__r_.__value_.__r.__words[2] = v19;
  return result;
}

void *protobuf::Intelligence_Start::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Start");
}

protobuf::Intelligence_NLParameters *protobuf::Intelligence_NLParameters::Intelligence_NLParameters(protobuf::Intelligence_NLParameters *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED284E0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_NLParameters_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_NLParameters_intelligence_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_239A67E34(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_NLParameters *protobuf::Intelligence_NLParameters::Intelligence_NLParameters(protobuf::Intelligence_NLParameters *this, const protobuf::Intelligence_NLParameters *a2)
{
  *(void *)this = &unk_26ED284E0;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 3, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 6);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v6);
    }
  }
  return this;
}

void sub_239A67F0C(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_NLParameters::~Intelligence_NLParameters(protobuf::Intelligence_NLParameters *this)
{
  *(void *)this = &unk_26ED284E0;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_NLParameters::~Intelligence_NLParameters(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_NLParameters::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_NLParameters::default_instance(protobuf::Intelligence_NLParameters *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_NLParameters_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_NLParameters_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_NLParameters_default_instance_;
}

void protobuf::Intelligence_NLParameters::Clear(protobuf::Intelligence_NLParameters *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)this + 24);
  if (*((unsigned char *)this + 16))
  {
    uint64_t v2 = *((void *)this + 6);
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  char v4 = *((unsigned char *)this + 8);
  int v3 = (protobuf::Intelligence_NLParameters *)((char *)this + 8);
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v3);
  }
}

std::string::value_type *protobuf::Intelligence_NLParameters::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  std::string::size_type v19 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v19, *((_DWORD *)this + 23));
  __n128 result = (std::string::value_type *)v19;
  if ((v5 & 1) == 0)
  {
    while (1)
    {
      unint64_t v7 = result + 1;
      LODWORD(v8) = *result;
      if ((*result & 0x80000000) == 0) {
        goto LABEL_5;
      }
      unint64_t v8 = (const char *)(v8 + (*v7 << 7) - 128);
      if ((*v7 & 0x80000000) == 0) {
        break;
      }
      __n128 result = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)result, v8);
      std::string::size_type v19 = (google::protobuf::internal *)result;
      if (!result) {
        return result;
      }
      unint64_t v7 = result;
LABEL_6:
      if (v8 >> 3 == 2)
      {
        if (v8 != 18) {
          goto LABEL_11;
        }
        __n128 result = v7 - 1;
        while (2)
        {
          long long v10 = (google::protobuf::internal *)(result + 1);
          std::string::size_type v19 = (google::protobuf::internal *)(result + 1);
          uint64_t v11 = *(int **)(a1 + 40);
          if (v11)
          {
            uint64_t v12 = *(int *)(a1 + 32);
            int v13 = *v11;
            if ((int)v12 < *v11)
            {
              *(_DWORD *)(a1 + 32) = v12 + 1;
              uint64_t v14 = *(protobuf::Intelligence_KeyValueParameter **)&v11[2 * v12 + 2];
              goto LABEL_23;
            }
            if (v13 == *(_DWORD *)(a1 + 36))
            {
LABEL_21:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v13 + 1);
              uint64_t v11 = *(int **)(a1 + 40);
              int v13 = *v11;
            }
            int *v11 = v13 + 1;
            uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
            uint64_t v15 = *(void *)(a1 + 40);
            uint64_t v16 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 32) = v16 + 1;
            *(void *)(v15 + 8 * v16 + 8) = v14;
            long long v10 = v19;
LABEL_23:
            __n128 result = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, (uint64_t)v14, v10);
            std::string::size_type v19 = (google::protobuf::internal *)result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *result != 18) {
              goto LABEL_31;
            }
            continue;
          }
          break;
        }
        int v13 = *(_DWORD *)(a1 + 36);
        goto LABEL_21;
      }
      if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        long long v17 = *(std::string **)(a1 + 48);
        if (v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 48, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        __n128 result = google::protobuf::internal::InlineGreedyStringParser(v17, v7, (uint64_t)this);
        goto LABEL_30;
      }
LABEL_11:
      if (!v8 || (v8 & 7) == 4)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
        return v7;
      }
      __n128 result = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v7, this);
LABEL_30:
      std::string::size_type v19 = (google::protobuf::internal *)result;
      if (!result) {
        return result;
      }
LABEL_31:
      int v18 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v19, *((_DWORD *)this + 23));
      __n128 result = (std::string::value_type *)v19;
      if (v18) {
        return result;
      }
    }
    unint64_t v7 = result + 2;
LABEL_5:
    std::string::size_type v19 = (google::protobuf::internal *)v7;
    goto LABEL_6;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_NLParameters::InternalSerializeWithCachedSizesToArray(const void ***this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  if ((_BYTE)this[2]) {
    char v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, this[6], a2);
  }
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        char v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v8 = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((uint64_t)(this + 3), i);
      *char v4 = 18;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        v4[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          long long v10 = v4 + 3;
          do
          {
            *(v10 - 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          std::string v4[2] = v11;
          long long v10 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v9;
        long long v10 = v4 + 2;
      }
      char v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v8, v10, a3);
    }
  }
  unint64_t v14 = (unint64_t)this[1];
  if ((v14 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    int v18 = *(void **)v16;
    uint64_t v17 = *(void *)(v16 + 8);
  }
  else
  {
    LODWORD(v17) = *(unsigned __int8 *)(v16 + 23);
    int v18 = (void *)v16;
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v19 = (int)v17;
    memcpy(v4, v18, (int)v17);
    v4 += v19;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v18, v17, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_NLParameters::ByteSizeLong(protobuf::Intelligence_NLParameters *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    char v4 = (protobuf::Intelligence_KeyValueParameter **)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 16))
  {
    uint64_t v8 = *((void *)this + 6);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *((void *)this + 1);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0) {
      uint64_t v14 = *(void *)(v13 + 8);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    }
    v2 += v14;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void protobuf::Intelligence_NLParameters::CheckTypeAndMergeFrom(protobuf::Intelligence_NLParameters *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_NLParameters::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_NLParameters::MergeFrom(protobuf::Intelligence_NLParameters *this, const protobuf::Intelligence_NLParameters *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 9637);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_KeyValueParameter>::TypeHandler>((signed int **)this + 3, (uint64_t)a2 + 24);
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v8 = (std::string *)*((void *)this + 6);
    uint64_t v7 = (char *)this + 48;
    int v6 = v8;
    *((_DWORD *)v7 - 8) |= 1u;
    uint64_t v9 = (const std::string *)*((void *)a2 + 6);
    if (v8 != v9)
    {
      if (v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)v9);
      }
      std::string::operator=(v6, v9);
    }
  }
}

void sub_239A686F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_NLParameters::CopyFrom(protobuf::Intelligence_NLParameters *this, const protobuf::Intelligence_NLParameters *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_NLParameters::Clear(this);
    protobuf::Intelligence_NLParameters::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_NLParameters::IsInitialized(protobuf::Intelligence_NLParameters *this)
{
  return 1;
}

__n128 protobuf::Intelligence_NLParameters::InternalSwap(protobuf::Intelligence_NLParameters *this, protobuf::Intelligence_NLParameters *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v21;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_NLParameters *)((char *)this + 24), (protobuf::Intelligence_NLParameters *)((char *)a2 + 24));
  unint64_t v16 = (uint64_t *)*((void *)this + 6);
  uint64_t v14 = (std::string **)((char *)this + 48);
  uint64_t v15 = (std::string *)v16;
  uint64_t v17 = (std::string **)((char *)a2 + 48);
  if (v16 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  int v18 = *v17;
  if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v18 = *v17;
  }
  std::string::size_type v19 = v15->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v15->__r_.__value_.__l.__data_;
  std::string::size_type v20 = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v15->__r_.__value_.__r.__words[2] = v20;
  *(__n128 *)&v18->__r_.__value_.__l.__data_ = result;
  v18->__r_.__value_.__r.__words[2] = v19;
  return result;
}

void *protobuf::Intelligence_NLParameters::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.NLParameters");
}

void protobuf::Intelligence_Event::InitAsDefaultInstance(protobuf::Intelligence_Event *this)
{
  qword_268A0B3F8 = (uint64_t)&protobuf::_Intelligence_NLParameters_default_instance_;
}

uint64_t protobuf::Intelligence_Event::_Internal::nl_producer(protobuf::Intelligence_Event::_Internal *this, const protobuf::Intelligence_Event *a2)
{
  return *((void *)this + 20);
}

protobuf::Intelligence_Event *protobuf::Intelligence_Event::Intelligence_Event(protobuf::Intelligence_Event *this)
{
  *(void *)this = &unk_26ED28570;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  if (atomic_load_explicit(scc_info_Intelligence_Event_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Event_intelligence_2eproto);
  }
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 19) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  return this;
}

void sub_239A6896C(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v2 + 96);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v2 + 72);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v2 + 48);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Event *protobuf::Intelligence_Event::Intelligence_Event(protobuf::Intelligence_Event *this, const protobuf::Intelligence_Event *a2)
{
  *(void *)this = &unk_26ED28570;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_NLParameters>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  *((void *)this + 9) = 0;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((void *)this + 11) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, (uint64_t)a2 + 72);
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 96, (uint64_t)a2 + 96);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 15);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 120, (uint64_t)v7);
    }
  }
  *((void *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 16);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 128, (uint64_t)v8);
    }
  }
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 17);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 136, (uint64_t)v9);
    }
  }
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    long long v10 = (uint64_t *)*((void *)a2 + 18);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 144, (uint64_t)v10);
    }
  }
  *((void *)this + 19) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x10) != 0)
  {
    uint64_t v11 = (uint64_t *)*((void *)a2 + 19);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 152, (uint64_t)v11);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (!*((void *)a2 + 20))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 18904);
      int v12 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: !value || nl_producer_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  return this;
}

void sub_239A68BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v7);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v6);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v5);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v4);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v3);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Event::~Intelligence_Event(protobuf::Intelligence_Event *this)
{
  *(void *)this = &unk_26ED28570;
  uint64_t v2 = *((void *)this + 15);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 16);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 17);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 18);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x23ECAACC0](v8, 0x1012C40EC159624);
  }
  uint64_t v10 = *((void *)this + 19);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    MEMORY[0x23ECAACC0](v10, 0x1012C40EC159624);
  }
  if (this != (protobuf::Intelligence_Event *)&protobuf::_Intelligence_Event_default_instance_)
  {
    uint64_t v11 = *((void *)this + 20);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 96);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 72);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 48);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_Event *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Event::~Intelligence_Event(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Event::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Event::default_instance(protobuf::Intelligence_Event *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Event_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Event_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Event_default_instance_;
}

void protobuf::Intelligence_Event::Clear(protobuf::Intelligence_Event *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_NLParameters>::TypeHandler>((uint64_t)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 96);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_32;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_13:
    uint64_t v4 = *((void *)this + 16);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_17;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_21:
    uint64_t v6 = *((void *)this + 18);
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)uint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 0x10) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 0x10) != 0) {
        goto LABEL_25;
      }
    }
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_32;
    }
    goto LABEL_29;
  }
  uint64_t v3 = *((void *)this + 15);
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_13;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_17:
  uint64_t v5 = *((void *)this + 17);
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)uint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_21;
    }
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_25:
  uint64_t v7 = *((void *)this + 19);
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)uint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v2 & 0x20) == 0) {
      goto LABEL_32;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 0x20) == 0) {
      goto LABEL_32;
    }
  }
LABEL_29:
  uint64_t v8 = (protobuf::Intelligence_NLParameters *)*((void *)this + 20);
  if (!v8)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 9811);
    uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: nl_producer_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    uint64_t v8 = (protobuf::Intelligence_NLParameters *)*((void *)this + 20);
  }
  protobuf::Intelligence_NLParameters::Clear(v8);
LABEL_32:
  char v11 = *((unsigned char *)this + 8);
  uint64_t v10 = (protobuf::Intelligence_Event *)((char *)this + 8);
  *((_DWORD *)v10 + 2) = 0;
  if (v11) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v10);
  }
}

void sub_239A69068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *protobuf::Intelligence_Event::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  unint64_t v48 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v48, *((_DWORD *)this + 23));
  __n128 result = v48;
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = (uint64_t *)(a1 + 96);
    uint64_t v8 = (uint64_t *)(a1 + 72);
    uint64_t v9 = (uint64_t *)(a1 + 48);
    while (2)
    {
      uint64_t v10 = (google::protobuf::internal *)((char *)result + 1);
      LODWORD(v11) = *(unsigned __int8 *)result;
      if (*(char *)result < 0)
      {
        char v11 = (const char *)(v11 + (*(unsigned __int8 *)v10 << 7) - 128);
        if (*(char *)v10 < 0)
        {
          __n128 result = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(result, v11);
          unint64_t v48 = result;
          if (!result) {
            return result;
          }
          uint64_t v10 = result;
LABEL_8:
          switch(v11 >> 3)
          {
            case 1u:
              if (v11 != 10) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              char v12 = *(std::string **)(a1 + 120);
              if (v12 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 120, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_78;
            case 3u:
              if (v11 != 26) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              char v12 = *(std::string **)(a1 + 128);
              if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_78;
              }
              uint64_t v13 = a1 + 128;
              goto LABEL_77;
            case 6u:
              if (v11 != 50) {
                goto LABEL_99;
              }
              __n128 result = (google::protobuf::internal *)((char *)v10 - 1);
              while (1)
              {
                char v14 = (google::protobuf::internal *)((char *)result + 1);
                unint64_t v48 = (google::protobuf::internal *)((char *)result + 1);
                uint64_t v15 = *(int **)(a1 + 40);
                if (!v15) {
                  break;
                }
                uint64_t v16 = *(int *)(a1 + 32);
                int v17 = *v15;
                if ((int)v16 >= *v15)
                {
                  if (v17 == *(_DWORD *)(a1 + 36))
                  {
LABEL_24:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v17 + 1);
                    uint64_t v15 = *(int **)(a1 + 40);
                    int v17 = *v15;
                  }
                  int *v15 = v17 + 1;
                  int v18 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_NLParameters>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
                  uint64_t v19 = *(void *)(a1 + 40);
                  uint64_t v20 = *(int *)(a1 + 32);
                  *(_DWORD *)(a1 + 32) = v20 + 1;
                  *(void *)(v19 + 8 * v20 + 8) = v18;
                  char v14 = v48;
                  goto LABEL_26;
                }
                *(_DWORD *)(a1 + 32) = v16 + 1;
                int v18 = *(protobuf::Intelligence_NLParameters **)&v15[2 * v16 + 2];
LABEL_26:
                __n128 result = (google::protobuf::internal *)google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_NLParameters>(this, (uint64_t)v18, v14);
                unint64_t v48 = result;
                if (!result) {
                  return result;
                }
                if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 50) {
                  goto LABEL_80;
                }
              }
              int v17 = *(_DWORD *)(a1 + 36);
              goto LABEL_24;
            case 7u:
              if (v11 != 58) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 16) |= 0x20u;
              unint64_t v21 = *(protobuf::Intelligence_NLParameters **)(a1 + 160);
              if (!v21)
              {
                unint64_t v21 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_NLParameters>(0);
                *(void *)(a1 + 16siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v21;
                uint64_t v10 = v48;
              }
              __n128 result = (google::protobuf::internal *)google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_NLParameters>(this, (uint64_t)v21, v10);
              goto LABEL_79;
            case 8u:
              if (v11 != 66) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              char v12 = *(std::string **)(a1 + 136);
              if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_78;
              }
              uint64_t v13 = a1 + 136;
              goto LABEL_77;
            case 9u:
              if (v11 != 74) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 16) |= 8u;
              char v12 = *(std::string **)(a1 + 144);
              if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_78;
              }
              uint64_t v13 = a1 + 144;
              goto LABEL_77;
            case 0xAu:
              if (v11 != 82) {
                goto LABEL_99;
              }
              __n128 result = (google::protobuf::internal *)((char *)v10 - 1);
              while (1)
              {
                uint64_t v22 = (char *)result + 1;
                unint64_t v48 = (google::protobuf::internal *)((char *)result + 1);
                long long v23 = *(int **)(a1 + 64);
                if (!v23) {
                  break;
                }
                uint64_t v24 = *(int *)(a1 + 56);
                int v25 = *v23;
                if ((int)v24 >= *v23)
                {
                  if (v25 == *(_DWORD *)(a1 + 60))
                  {
LABEL_47:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v25 + 1);
                    long long v23 = *(int **)(a1 + 64);
                    int v25 = *v23;
                  }
                  *long long v23 = v25 + 1;
                  uint64_t v27 = (atomic_ullong *)*v9;
                  if (!*v9) {
                    operator new();
                  }
                  if (v27[14]) {
                  unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v27, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
                  }
                  AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
                  AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
                  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
                  uint64_t v28 = *(void *)(a1 + 64);
                  uint64_t v29 = *(int *)(a1 + 56);
                  *(_DWORD *)(a1 + 56) = v29 + 1;
                  *(void *)(v28 + 8 * v29 + 8) = AlignedAndAddCleanup;
                  uint64_t v22 = (std::string::value_type *)v48;
                  goto LABEL_53;
                }
                *(_DWORD *)(a1 + 56) = v24 + 1;
                unint64_t AlignedAndAddCleanup = *(std::string **)&v23[2 * v24 + 2];
LABEL_53:
                __n128 result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v22, (uint64_t)this);
                unint64_t v48 = result;
                if (!result) {
                  return result;
                }
                if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 82) {
                  goto LABEL_80;
                }
              }
              int v25 = *(_DWORD *)(a1 + 60);
              goto LABEL_47;
            case 0xBu:
              if (v11 != 90) {
                goto LABEL_99;
              }
              __n128 result = (google::protobuf::internal *)((char *)v10 - 1);
              while (1)
              {
                uint64_t v30 = (char *)result + 1;
                unint64_t v48 = (google::protobuf::internal *)((char *)result + 1);
                uint64_t v31 = *(int **)(a1 + 88);
                if (!v31) {
                  break;
                }
                uint64_t v32 = *(int *)(a1 + 80);
                int v33 = *v31;
                if ((int)v32 >= *v31)
                {
                  if (v33 == *(_DWORD *)(a1 + 84))
                  {
LABEL_64:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v33 + 1);
                    uint64_t v31 = *(int **)(a1 + 88);
                    int v33 = *v31;
                  }
                  *uint64_t v31 = v33 + 1;
                  long long v35 = (atomic_ullong *)*v8;
                  if (!*v8) {
                    operator new();
                  }
                  if (v35[14]) {
                  uint64_t v34 = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v35, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
                  }
                  v34->__r_.__value_.__r.__words[0] = 0;
                  v34->__r_.__value_.__l.__size_ = 0;
                  v34->__r_.__value_.__r.__words[2] = 0;
                  uint64_t v36 = *(void *)(a1 + 88);
                  uint64_t v37 = *(int *)(a1 + 80);
                  *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v37 + 1;
                  *(void *)(v36 + 8 * v37 + 8) = v34;
                  uint64_t v30 = (std::string::value_type *)v48;
                  goto LABEL_70;
                }
                *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v32 + 1;
                uint64_t v34 = *(std::string **)&v31[2 * v32 + 2];
LABEL_70:
                __n128 result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v34, v30, (uint64_t)this);
                unint64_t v48 = result;
                if (!result) {
                  return result;
                }
                if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 90) {
                  goto LABEL_80;
                }
              }
              int v33 = *(_DWORD *)(a1 + 84);
              goto LABEL_64;
            case 0xCu:
              if (v11 != 98) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 16) |= 0x10u;
              char v12 = *(std::string **)(a1 + 152);
              if (v12 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                uint64_t v13 = a1 + 152;
LABEL_77:
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v13, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_78:
              __n128 result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, (std::string::value_type *)v10, (uint64_t)this);
              goto LABEL_79;
            case 0xDu:
              if (v11 != 106) {
                goto LABEL_99;
              }
              __n128 result = (google::protobuf::internal *)((char *)v10 - 1);
              break;
            default:
LABEL_99:
              if (v11) {
                BOOL v47 = (v11 & 7) == 4;
              }
              else {
                BOOL v47 = 1;
              }
              if (v47)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v11 - 1;
                return v10;
              }
              __n128 result = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v11, (unint64_t *)(a1 + 8), v10, this);
LABEL_79:
              unint64_t v48 = result;
              if (!result) {
                return result;
              }
LABEL_80:
              int v38 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v48, *((_DWORD *)this + 23));
              __n128 result = v48;
              if (v38) {
                return result;
              }
              continue;
          }
          while (1)
          {
            unint64_t v39 = (char *)result + 1;
            unint64_t v48 = (google::protobuf::internal *)((char *)result + 1);
            std::string::size_type v40 = *(int **)(a1 + 112);
            if (!v40) {
              break;
            }
            uint64_t v41 = *(int *)(a1 + 104);
            int v42 = *v40;
            if ((int)v41 >= *v40)
            {
              if (v42 == *(_DWORD *)(a1 + 108))
              {
LABEL_89:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 96), v42 + 1);
                std::string::size_type v40 = *(int **)(a1 + 112);
                int v42 = *v40;
              }
              *std::string::size_type v40 = v42 + 1;
              uint64_t v44 = (atomic_ullong *)*v7;
              if (!*v7) {
                operator new();
              }
              if (v44[14]) {
              uint64_t v43 = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v44, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
              }
              v43->__r_.__value_.__r.__words[0] = 0;
              v43->__r_.__value_.__l.__size_ = 0;
              v43->__r_.__value_.__r.__words[2] = 0;
              uint64_t v45 = *(void *)(a1 + 112);
              uint64_t v46 = *(int *)(a1 + 104);
              *(_DWORD *)(a1 + 104) = v46 + 1;
              *(void *)(v45 + 8 * v46 + 8) = v43;
              unint64_t v39 = (std::string::value_type *)v48;
              goto LABEL_95;
            }
            *(_DWORD *)(a1 + 104) = v41 + 1;
            uint64_t v43 = *(std::string **)&v40[2 * v41 + 2];
LABEL_95:
            __n128 result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v43, v39, (uint64_t)this);
            unint64_t v48 = result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 106) {
              goto LABEL_80;
            }
          }
          int v42 = *(_DWORD *)(a1 + 108);
          goto LABEL_89;
        }
        uint64_t v10 = (google::protobuf::internal *)((char *)result + 2);
      }
      break;
    }
    unint64_t v48 = v10;
    goto LABEL_8;
  }
  return result;
}

char *google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_NLParameters>(google::protobuf::internal::EpsCopyInputStream *this, uint64_t a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  uint64_t v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    __n128 result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    uint64_t v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  __n128 result = protobuf::Intelligence_NLParameters::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

unsigned __int8 *protobuf::Intelligence_Event::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Event *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 15), a2);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 16), v4);
  }
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_NLParameters>::TypeHandler>((uint64_t)this + 24, i);
      *uint64_t v4 = 50;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          int v11 = v4 + 3;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          std::string v4[2] = v12;
          int v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        int v11 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_NLParameters::InternalSerializeWithCachedSizesToArray((const void ***)v9, v11, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v32 = *((void *)this + 20);
    *uint64_t v4 = 58;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    if (v33 > 0x7F)
    {
      v4[1] = v33 | 0x80;
      unsigned int v35 = v33 >> 7;
      if (v33 >> 14)
      {
        uint64_t v34 = v4 + 3;
        do
        {
          *(v34 - 1) = v35 | 0x80;
          unsigned int v36 = v35 >> 7;
          ++v34;
          unsigned int v37 = v35 >> 14;
          v35 >>= 7;
        }
        while (v37);
        *(v34 - 1) = v36;
      }
      else
      {
        std::string v4[2] = v35;
        uint64_t v34 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v33;
      uint64_t v34 = v4 + 2;
    }
    uint64_t v4 = (char *)protobuf::Intelligence_NLParameters::InternalSerializeWithCachedSizesToArray((const void ***)v32, v34, a3);
    if ((v6 & 4) == 0)
    {
LABEL_19:
      if ((v6 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 17), v4);
  if ((v6 & 8) != 0) {
LABEL_20:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 9, *((const void ***)this + 18), v4);
LABEL_21:
  int v15 = *((_DWORD *)this + 14);
  if (v15 >= 1)
  {
    for (int j = 0; v15 != j; ++j)
    {
      uint64_t v17 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, j);
      if (*(char *)(v17 + 23) < 0)
      {
        int64_t v18 = *(void *)(v17 + 8);
        if (v18 > 127) {
          goto LABEL_33;
        }
      }
      else
      {
        int64_t v18 = *(unsigned __int8 *)(v17 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v18)
      {
        *uint64_t v4 = 82;
        v4[1] = v18;
        if (*(char *)(v17 + 23) >= 0) {
          uint64_t v19 = (const void *)v17;
        }
        else {
          uint64_t v19 = *(const void **)v17;
        }
        memcpy(v4 + 2, v19, v18);
        v4 += v18 + 2;
        continue;
      }
LABEL_33:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 10, v17, v4);
    }
  }
  int v20 = *((_DWORD *)this + 20);
  if (v20 >= 1)
  {
    for (int k = 0; v20 != k; ++k)
    {
      uint64_t v22 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, k);
      if (*(char *)(v22 + 23) < 0)
      {
        int64_t v23 = *(void *)(v22 + 8);
        if (v23 > 127) {
          goto LABEL_46;
        }
      }
      else
      {
        int64_t v23 = *(unsigned __int8 *)(v22 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v23)
      {
        *uint64_t v4 = 90;
        v4[1] = v23;
        if (*(char *)(v22 + 23) >= 0) {
          uint64_t v24 = (const void *)v22;
        }
        else {
          uint64_t v24 = *(const void **)v22;
        }
        memcpy(v4 + 2, v24, v23);
        v4 += v23 + 2;
        continue;
      }
LABEL_46:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 11, v22, v4);
    }
  }
  if ((v6 & 0x10) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 12, *((const void ***)this + 19), v4);
  }
  int v25 = *((_DWORD *)this + 26);
  if (v25 >= 1)
  {
    for (int m = 0; v25 != m; ++m)
    {
      uint64_t v27 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 96, m);
      if (*(char *)(v27 + 23) < 0)
      {
        int64_t v28 = *(void *)(v27 + 8);
        if (v28 > 127) {
          goto LABEL_61;
        }
      }
      else
      {
        int64_t v28 = *(unsigned __int8 *)(v27 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v28)
      {
        *uint64_t v4 = 106;
        v4[1] = v28;
        if (*(char *)(v27 + 23) >= 0) {
          uint64_t v29 = (const void *)v27;
        }
        else {
          uint64_t v29 = *(const void **)v27;
        }
        memcpy(v4 + 2, v29, v28);
        v4 += v28 + 2;
        continue;
      }
LABEL_61:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 13, v27, v4);
    }
  }
  uint64_t v30 = *((void *)this + 1);
  if ((v30 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v38 = v30 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v38 + 23) < 0)
  {
    std::string::size_type v40 = *(void **)v38;
    uint64_t v39 = *(void *)(v38 + 8);
  }
  else
  {
    LODWORD(v39) = *(unsigned __int8 *)(v38 + 23);
    std::string::size_type v40 = (void *)v38;
  }
  if (*(void *)a3 - (void)v4 >= (int)v39)
  {
    uint64_t v41 = (int)v39;
    memcpy(v4, v40, (int)v39);
    v4 += v41;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v40, v39, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_Event::ByteSizeLong(protobuf::Intelligence_Event *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (protobuf::Intelligence_NLParameters **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_NLParameters::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((unsigned int *)this + 14);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    int v10 = 0;
    do
    {
      uint64_t v11 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, v10);
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      if ((v12 & 0x80u) != 0) {
        uint64_t v12 = *(void *)(v11 + 8);
      }
      v9 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      ++v10;
    }
    while (v8 != v10);
  }
  uint64_t v13 = *((unsigned int *)this + 20);
  uint64_t v14 = v9 + v13;
  if ((int)v13 >= 1)
  {
    int v15 = 0;
    do
    {
      uint64_t v16 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, v15);
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      if ((v17 & 0x80u) != 0) {
        uint64_t v17 = *(void *)(v16 + 8);
      }
      v14 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      ++v15;
    }
    while (v13 != v15);
  }
  uint64_t v18 = *((unsigned int *)this + 26);
  uint64_t v19 = v14 + v18;
  if ((int)v18 >= 1)
  {
    int v20 = 0;
    do
    {
      uint64_t v21 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 96, v20);
      uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
      if ((v22 & 0x80u) != 0) {
        uint64_t v22 = *(void *)(v21 + 8);
      }
      v19 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      ++v20;
    }
    while (v18 != v20);
  }
  int v23 = *((_DWORD *)this + 4);
  if ((v23 & 0x3F) == 0) {
    goto LABEL_32;
  }
  if (v23)
  {
    uint64_t v27 = *((void *)this + 15);
    uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
    uint64_t v29 = *(void *)(v27 + 8);
    if ((v28 & 0x80u) == 0) {
      uint64_t v29 = v28;
    }
    v19 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 2) == 0)
    {
LABEL_27:
      if ((v23 & 4) == 0) {
        goto LABEL_28;
      }
      goto LABEL_40;
    }
  }
  else if ((v23 & 2) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v30 = *((void *)this + 16);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
  uint64_t v32 = *(void *)(v30 + 8);
  if ((v31 & 0x80u) == 0) {
    uint64_t v32 = v31;
  }
  v19 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v23 & 4) == 0)
  {
LABEL_28:
    if ((v23 & 8) == 0) {
      goto LABEL_29;
    }
LABEL_43:
    uint64_t v36 = *((void *)this + 18);
    uint64_t v37 = *(unsigned __int8 *)(v36 + 23);
    uint64_t v38 = *(void *)(v36 + 8);
    if ((v37 & 0x80u) == 0) {
      uint64_t v38 = v37;
    }
    v19 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 0x10) == 0)
    {
LABEL_30:
      if ((v23 & 0x20) == 0) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    goto LABEL_46;
  }
LABEL_40:
  uint64_t v33 = *((void *)this + 17);
  uint64_t v34 = *(unsigned __int8 *)(v33 + 23);
  uint64_t v35 = *(void *)(v33 + 8);
  if ((v34 & 0x80u) == 0) {
    uint64_t v35 = v34;
  }
  v19 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v23 & 8) != 0) {
    goto LABEL_43;
  }
LABEL_29:
  if ((v23 & 0x10) == 0) {
    goto LABEL_30;
  }
LABEL_46:
  uint64_t v39 = *((void *)this + 19);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 23);
  uint64_t v41 = *(void *)(v39 + 8);
  if ((v40 & 0x80u) == 0) {
    uint64_t v41 = v40;
  }
  v19 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v23 & 0x20) != 0)
  {
LABEL_31:
    uint64_t v24 = protobuf::Intelligence_NLParameters::ByteSizeLong(*((protobuf::Intelligence_NLParameters **)this + 20));
    v19 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_32:
  uint64_t v25 = *((void *)this + 1);
  if (v25)
  {
    unint64_t v42 = v25 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v42 + 23) < 0) {
      uint64_t v43 = *(void *)(v42 + 8);
    }
    else {
      uint64_t v43 = *(unsigned __int8 *)(v42 + 23);
    }
    v19 += v43;
  }
  *((_DWORD *)this + 5) = v19;
  return v19;
}

void protobuf::Intelligence_Event::CheckTypeAndMergeFrom(protobuf::Intelligence_Event *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Event::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Event::MergeFrom(protobuf::Intelligence_Event *this, const protobuf::Intelligence_Event *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 10117);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_NLParameters>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, (uint64_t)a2 + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 96, (uint64_t)a2 + 96);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x3F) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 15);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 15);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 120, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 16);
      *((_DWORD *)this + 4) |= 2u;
      int v10 = (const std::string *)*((void *)a2 + 16);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 128, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 17);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 17);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 136, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      uint64_t v13 = (std::string *)*((void *)this + 18);
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v14 = (const std::string *)*((void *)a2 + 18);
      if (v13 != v14)
      {
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 144, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      int v15 = (std::string *)*((void *)this + 19);
      *((_DWORD *)this + 4) |= 0x10u;
      uint64_t v16 = (const std::string *)*((void *)a2 + 19);
      if (v15 != v16)
      {
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 152, (uint64_t)v16);
        }
        std::string::operator=(v15, v16);
      }
    }
    if ((v6 & 0x20) != 0)
    {
      *((_DWORD *)this + 4) |= 0x20u;
      uint64_t v17 = (protobuf::Intelligence_NLParameters *)*((void *)this + 20);
      if (!v17)
      {
        uint64_t v17 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_NLParameters>(0);
        *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v17;
      }
      if (*((void *)a2 + 20)) {
        uint64_t v18 = (const protobuf::Intelligence_NLParameters *)*((void *)a2 + 20);
      }
      else {
        uint64_t v18 = (const protobuf::Intelligence_NLParameters *)&protobuf::_Intelligence_NLParameters_default_instance_;
      }
      protobuf::Intelligence_NLParameters::MergeFrom(v17, v18);
    }
  }
}

void sub_239A6A39C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Event::CopyFrom(protobuf::Intelligence_Event *this, const protobuf::Intelligence_Event *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Event::Clear(this);
    protobuf::Intelligence_Event::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Event::IsInitialized(protobuf::Intelligence_Event *this)
{
  return 1;
}

void protobuf::Intelligence_Event::InternalSwap(protobuf::Intelligence_Event *this, protobuf::Intelligence_Event *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v44;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_40;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_40:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_Event *)((char *)this + 24), (protobuf::Intelligence_Event *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_Event *)((char *)this + 48), (protobuf::Intelligence_Event *)((char *)a2 + 48));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_Event *)((char *)this + 72), (protobuf::Intelligence_Event *)((char *)a2 + 72));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_Event *)((char *)this + 96), (protobuf::Intelligence_Event *)((char *)a2 + 96));
  uint64_t v13 = (uint64_t *)*((void *)this + 15);
  uint64_t v14 = (uint64_t **)((char *)a2 + 120);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 15, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v13 = (uint64_t *)*((void *)this + 15);
  }
  int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 15, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v15;
  std::string v13[2] = v18;
  *(_OWORD *)int v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  char v19 = (uint64_t *)*((void *)this + 16);
  int v20 = (uint64_t **)((char *)a2 + 128);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v19 = (uint64_t *)*((void *)this + 16);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)char v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  uint64_t v25 = (uint64_t *)*((void *)this + 17);
  uint64_t v26 = (uint64_t **)((char *)a2 + 136);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v25 = (uint64_t *)*((void *)this + 17);
  }
  uint64_t v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)uint64_t v27 = v29;
  v27[2] = v28;
LABEL_26:
  uint64_t v31 = (uint64_t *)*((void *)this + 18);
  uint64_t v32 = (uint64_t **)((char *)a2 + 144);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v31 = (uint64_t *)*((void *)this + 18);
  }
  uint64_t v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v33 = *v32;
  }
  uint64_t v34 = v31[2];
  long long v35 = *(_OWORD *)v31;
  uint64_t v36 = v33[2];
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v33;
  void v31[2] = v36;
  *(_OWORD *)uint64_t v33 = v35;
  std::string v33[2] = v34;
LABEL_32:
  uint64_t v37 = (uint64_t *)*((void *)this + 19);
  uint64_t v38 = (uint64_t **)((char *)a2 + 152);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_38;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 19, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v37 = (uint64_t *)*((void *)this + 19);
  }
  uint64_t v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 19, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v39 = *v38;
  }
  uint64_t v40 = v37[2];
  long long v41 = *(_OWORD *)v37;
  uint64_t v42 = v39[2];
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v39;
  std::string v37[2] = v42;
  *(_OWORD *)uint64_t v39 = v41;
  v39[2] = v40;
LABEL_38:
  uint64_t v43 = *((void *)this + 20);
  *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((void *)a2 + 20);
  *((void *)a2 + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v43;
}

void *protobuf::Intelligence_Event::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Event");
}

void protobuf::Intelligence_Intent::InitAsDefaultInstance(protobuf::Intelligence_Intent *this)
{
  qword_268A0B440 = (uint64_t)&protobuf::_Intelligence_NLParameters_default_instance_;
}

uint64_t protobuf::Intelligence_Intent::_Internal::nl_producer(protobuf::Intelligence_Intent::_Internal *this, const protobuf::Intelligence_Intent *a2)
{
  return *((void *)this + 8);
}

protobuf::Intelligence_Intent *protobuf::Intelligence_Intent::Intelligence_Intent(protobuf::Intelligence_Intent *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED28600;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_Intent_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Intent_intelligence_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = 0;
  return this;
}

void sub_239A6A830(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Intent *protobuf::Intelligence_Intent::Intelligence_Intent(protobuf::Intelligence_Intent *this, const protobuf::Intelligence_Intent *a2)
{
  *(void *)this = &unk_26ED28600;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_NLParameters>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 6);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v7);
    }
  }
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 7);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v8);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (!*((void *)a2 + 8))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 19149);
      uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: !value || nl_producer_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 8) = 0;
  return this;
}

void sub_239A6A9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v4);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v3);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Intent::~Intelligence_Intent(protobuf::Intelligence_Intent *this)
{
  *(void *)this = &unk_26ED28600;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  if (this != (protobuf::Intelligence_Intent *)&protobuf::_Intelligence_Intent_default_instance_)
  {
    uint64_t v6 = *((void *)this + 8);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
  }
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_Intent *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Intent::~Intelligence_Intent(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Intent::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Intent::default_instance(protobuf::Intelligence_Intent *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Intent_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Intent_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Intent_default_instance_;
}

void protobuf::Intelligence_Intent::Clear(protobuf::Intelligence_Intent *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_NLParameters>::TypeHandler>((uint64_t)this + 24);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 7) == 0) {
    goto LABEL_17;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 6);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  uint64_t v4 = *((void *)this + 7);
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)uint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
  }
LABEL_14:
  uint64_t v5 = (protobuf::Intelligence_NLParameters *)*((void *)this + 8);
  if (!v5)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 10286);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: nl_producer_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    uint64_t v5 = (protobuf::Intelligence_NLParameters *)*((void *)this + 8);
  }
  protobuf::Intelligence_NLParameters::Clear(v5);
LABEL_17:
  char v8 = *((unsigned char *)this + 8);
  unint64_t v7 = (protobuf::Intelligence_Intent *)((char *)this + 8);
  *((_DWORD *)v7 + 2) = 0;
  if (v8) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v7);
  }
}

void sub_239A6ACA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string::value_type *protobuf::Intelligence_Intent::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  int v20 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v20, *((_DWORD *)this + 23));
  __n128 result = (std::string::value_type *)v20;
  if ((v5 & 1) == 0)
  {
    while (2)
    {
      unint64_t v7 = result + 1;
      LODWORD(v8) = *result;
      if (*result < 0)
      {
        char v8 = (const char *)(v8 + (*v7 << 7) - 128);
        if (*v7 < 0)
        {
          __n128 result = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)result, v8);
          int v20 = (google::protobuf::internal *)result;
          if (!result) {
            return result;
          }
          unint64_t v7 = result;
LABEL_7:
          switch(v8 >> 3)
          {
            case 1u:
              if (v8 != 10) {
                goto LABEL_32;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              char v9 = *(std::string **)(a1 + 48);
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 48, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_14;
            case 3u:
              if (v8 != 26) {
                goto LABEL_32;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              char v9 = *(std::string **)(a1 + 56);
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 56, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_14:
              __n128 result = google::protobuf::internal::InlineGreedyStringParser(v9, v7, (uint64_t)this);
              goto LABEL_37;
            case 6u:
              if (v8 != 50) {
                goto LABEL_32;
              }
              __n128 result = v7 - 1;
              break;
            case 7u:
              if (v8 != 58) {
                goto LABEL_32;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              long long v17 = *(protobuf::Intelligence_NLParameters **)(a1 + 64);
              if (!v17)
              {
                long long v17 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_NLParameters>(0);
                *(void *)(a1 + 64) = v17;
                unint64_t v7 = (std::string::value_type *)v20;
              }
              __n128 result = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_NLParameters>(this, (uint64_t)v17, (google::protobuf::internal *)v7);
              goto LABEL_37;
            default:
LABEL_32:
              if (v8) {
                BOOL v18 = (v8 & 7) == 4;
              }
              else {
                BOOL v18 = 1;
              }
              if (v18)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
                return v7;
              }
              __n128 result = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v7, this);
LABEL_37:
              int v20 = (google::protobuf::internal *)result;
              if (!result) {
                return result;
              }
LABEL_38:
              int v19 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v20, *((_DWORD *)this + 23));
              __n128 result = (std::string::value_type *)v20;
              if (v19) {
                return result;
              }
              continue;
          }
          while (1)
          {
            long long v10 = (google::protobuf::internal *)(result + 1);
            int v20 = (google::protobuf::internal *)(result + 1);
            char v11 = *(int **)(a1 + 40);
            if (!v11) {
              break;
            }
            uint64_t v12 = *(int *)(a1 + 32);
            int v13 = *v11;
            if ((int)v12 >= *v11)
            {
              if (v13 == *(_DWORD *)(a1 + 36))
              {
LABEL_22:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v13 + 1);
                char v11 = *(int **)(a1 + 40);
                int v13 = *v11;
              }
              int *v11 = v13 + 1;
              uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_NLParameters>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
              uint64_t v15 = *(void *)(a1 + 40);
              uint64_t v16 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + 32) = v16 + 1;
              *(void *)(v15 + 8 * v16 + 8) = v14;
              long long v10 = v20;
              goto LABEL_24;
            }
            *(_DWORD *)(a1 + 32) = v12 + 1;
            uint64_t v14 = *(protobuf::Intelligence_NLParameters **)&v11[2 * v12 + 2];
LABEL_24:
            __n128 result = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_NLParameters>(this, (uint64_t)v14, v10);
            int v20 = (google::protobuf::internal *)result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *result != 50) {
              goto LABEL_38;
            }
          }
          int v13 = *(_DWORD *)(a1 + 36);
          goto LABEL_22;
        }
        unint64_t v7 = result + 2;
      }
      break;
    }
    int v20 = (google::protobuf::internal *)v7;
    goto LABEL_7;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_Intent::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Intent *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 6), a2);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 7), v4);
  }
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_NLParameters>::TypeHandler>((uint64_t)this + 24, i);
      *uint64_t v4 = 50;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          char v11 = v4 + 3;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          std::string v4[2] = v12;
          char v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        char v11 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_NLParameters::InternalSerializeWithCachedSizesToArray((const void ***)v9, v11, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v15 = *((void *)this + 8);
    *uint64_t v4 = 58;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v18 = v16 >> 7;
      if (v16 >> 14)
      {
        long long v17 = v4 + 3;
        do
        {
          *(v17 - 1) = v18 | 0x80;
          unsigned int v19 = v18 >> 7;
          ++v17;
          unsigned int v20 = v18 >> 14;
          v18 >>= 7;
        }
        while (v20);
        *(v17 - 1) = v19;
      }
      else
      {
        std::string v4[2] = v18;
        long long v17 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v16;
      long long v17 = v4 + 2;
    }
    uint64_t v4 = (char *)protobuf::Intelligence_NLParameters::InternalSerializeWithCachedSizesToArray((const void ***)v15, v17, a3);
  }
  uint64_t v21 = *((void *)this + 1);
  if ((v21 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v23 + 23) < 0)
  {
    uint64_t v25 = *(void **)v23;
    uint64_t v24 = *(void *)(v23 + 8);
  }
  else
  {
    LODWORD(v24) = *(unsigned __int8 *)(v23 + 23);
    uint64_t v25 = (void *)v23;
  }
  if (*(void *)a3 - (void)v4 >= (int)v24)
  {
    uint64_t v26 = (int)v24;
    memcpy(v4, v25, (int)v24);
    v4 += v26;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v25, v24, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_Intent::ByteSizeLong(protobuf::Intelligence_Intent *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (protobuf::Intelligence_NLParameters **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_NLParameters::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *((_DWORD *)this + 4);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v12 = *((void *)this + 6);
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t v15 = *((void *)this + 7);
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0)
    {
LABEL_13:
      uint64_t v9 = protobuf::Intelligence_NLParameters::ByteSizeLong(*((protobuf::Intelligence_NLParameters **)this + 8));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_14:
  uint64_t v10 = *((void *)this + 1);
  if (v10)
  {
    unint64_t v18 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v18 + 23) < 0) {
      uint64_t v19 = *(void *)(v18 + 8);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
    }
    v2 += v19;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void protobuf::Intelligence_Intent::CheckTypeAndMergeFrom(protobuf::Intelligence_Intent *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Intent::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Intent::MergeFrom(protobuf::Intelligence_Intent *this, const protobuf::Intelligence_Intent *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 10454);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_NLParameters>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 6);
      *((_DWORD *)this + 4) |= 1u;
      int v8 = (const std::string *)*((void *)a2 + 6);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 7);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 7);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      *((_DWORD *)this + 4) |= 4u;
      char v11 = (protobuf::Intelligence_NLParameters *)*((void *)this + 8);
      if (!v11)
      {
        char v11 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_NLParameters>(0);
        *((void *)this + 8) = v11;
      }
      if (*((void *)a2 + 8)) {
        uint64_t v12 = (const protobuf::Intelligence_NLParameters *)*((void *)a2 + 8);
      }
      else {
        uint64_t v12 = (const protobuf::Intelligence_NLParameters *)&protobuf::_Intelligence_NLParameters_default_instance_;
      }
      protobuf::Intelligence_NLParameters::MergeFrom(v11, v12);
    }
  }
}

void sub_239A6B578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Intent::CopyFrom(protobuf::Intelligence_Intent *this, const protobuf::Intelligence_Intent *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Intent::Clear(this);
    protobuf::Intelligence_Intent::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Intent::IsInitialized(protobuf::Intelligence_Intent *this)
{
  return 1;
}

void protobuf::Intelligence_Intent::InternalSwap(protobuf::Intelligence_Intent *this, protobuf::Intelligence_Intent *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v26;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_Intent *)((char *)this + 24), (protobuf::Intelligence_Intent *)((char *)a2 + 24));
  char v13 = (uint64_t *)*((void *)this + 6);
  uint64_t v14 = (uint64_t **)((char *)a2 + 48);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 6);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  std::string v13[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 7);
  unsigned int v20 = (uint64_t **)((char *)a2 + 56);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 7);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  uint64_t v25 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v25;
}

void *protobuf::Intelligence_Intent::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Intent");
}

protobuf::Intelligence_State_Memory_Value *protobuf::Intelligence_State_Memory_Value::Intelligence_State_Memory_Value(protobuf::Intelligence_State_Memory_Value *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED28690;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_State_Memory_Value_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_Memory_Value_intelligence_2eproto);
  }
  return this;
}

void sub_239A6B844(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_Memory_Value *protobuf::Intelligence_State_Memory_Value::Intelligence_State_Memory_Value(protobuf::Intelligence_State_Memory_Value *this, const protobuf::Intelligence_State_Memory_Value *a2)
{
  *(void *)this = &unk_26ED28690;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

void sub_239A6B8F4(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_Memory_Value::~Intelligence_State_Memory_Value(protobuf::Intelligence_State_Memory_Value *this)
{
  *(void *)this = &unk_26ED28690;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;

  *(void *)this = &unk_26ED28690;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;
  uint64_t vars8;

  *(void *)this = &unk_26ED28690;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_State_Memory_Value::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_State_Memory_Value::default_instance(protobuf::Intelligence_State_Memory_Value *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_State_Memory_Value_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_Memory_Value_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_State_Memory_Value_default_instance_;
}

void protobuf::Intelligence_State_Memory_Value::Clear(protobuf::Intelligence_State_Memory_Value *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  char v3 = *((unsigned char *)this + 8);
  uint64_t v2 = (protobuf::Intelligence_State_Memory_Value *)((char *)this + 8);
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v2);
  }
}

google::protobuf::internal *protobuf::Intelligence_State_Memory_Value::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  unsigned int v20 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v20, *((_DWORD *)this + 23));
  __n128 result = v20;
  if ((v5 & 1) == 0)
  {
    unint64_t v7 = (uint64_t *)(a1 + 24);
    while (1)
    {
      unint64_t v8 = (google::protobuf::internal *)((char *)result + 1);
      LODWORD(v9) = *(unsigned __int8 *)result;
      if ((*(char *)result & 0x80000000) == 0) {
        goto LABEL_6;
      }
      uint64_t v9 = (const char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      __n128 result = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(result, v9);
      unsigned int v20 = result;
      if (!result) {
        return result;
      }
      unint64_t v8 = result;
LABEL_7:
      if (v9 == 10)
      {
        __n128 result = (google::protobuf::internal *)((char *)v8 - 1);
        while (1)
        {
          int v12 = (char *)result + 1;
          unsigned int v20 = (google::protobuf::internal *)((char *)result + 1);
          char v13 = *(int **)(a1 + 40);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 32);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 36))
            {
LABEL_21:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v15 + 1);
              char v13 = *(int **)(a1 + 40);
              int v15 = *v13;
            }
            int *v13 = v15 + 1;
            long long v17 = (atomic_ullong *)*v7;
            if (!*v7) {
              operator new();
            }
            if (v17[14]) {
            unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v17, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
            }
            AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
            AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
            AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
            uint64_t v18 = *(void *)(a1 + 40);
            uint64_t v19 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 32) = v19 + 1;
            *(void *)(v18 + 8 * v19 + 8) = AlignedAndAddCleanup;
            int v12 = (std::string::value_type *)v20;
            goto LABEL_27;
          }
          *(_DWORD *)(a1 + 32) = v14 + 1;
          unint64_t AlignedAndAddCleanup = *(std::string **)&v13[2 * v14 + 2];
LABEL_27:
          __n128 result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v12, (uint64_t)this);
          unsigned int v20 = result;
          if (!result) {
            return result;
          }
          if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 10) {
            goto LABEL_13;
          }
        }
        int v15 = *(_DWORD *)(a1 + 36);
        goto LABEL_21;
      }
      if (v9) {
        BOOL v10 = (v9 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 - 1;
        return v8;
      }
      __n128 result = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, (unint64_t *)(a1 + 8), v8, this);
      unsigned int v20 = result;
      if (!result) {
        return result;
      }
LABEL_13:
      int v11 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v20, *((_DWORD *)this + 23));
      __n128 result = v20;
      if (v11) {
        return result;
      }
    }
    unint64_t v8 = (google::protobuf::internal *)((char *)result + 2);
LABEL_6:
    unsigned int v20 = v8;
    goto LABEL_7;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_State_Memory_Value::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_State_Memory_Value *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6 >= 1)
  {
    for (int i = 0; v6 != i; ++i)
    {
      uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, i);
      if (*(char *)(v8 + 23) < 0)
      {
        int64_t v9 = *(void *)(v8 + 8);
        if (v9 > 127) {
          goto LABEL_13;
        }
      }
      else
      {
        int64_t v9 = *(unsigned __int8 *)(v8 + 23);
      }
      if (*(void *)a3 - (void)a2 + 14 >= v9)
      {
        *a2 = 10;
        a2[1] = v9;
        if (*(char *)(v8 + 23) >= 0) {
          BOOL v10 = (const void *)v8;
        }
        else {
          BOOL v10 = *(const void **)v8;
        }
        memcpy(a2 + 2, v10, v9);
        a2 += v9 + 2;
        continue;
      }
LABEL_13:
      a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 1, v8, a2);
    }
  }
  uint64_t v11 = *((void *)this + 1);
  if ((v11 & 1) == 0) {
    return (unsigned __int8 *)a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v13 + 23) < 0)
  {
    int v15 = *(void **)v13;
    uint64_t v14 = *(void *)(v13 + 8);
  }
  else
  {
    LODWORD(v14) = *(unsigned __int8 *)(v13 + 23);
    int v15 = (void *)v13;
  }
  if (*(void *)a3 - (void)a2 >= (int)v14)
  {
    uint64_t v16 = (int)v14;
    memcpy(a2, v15, (int)v14);
    a2 += v16;
    return (unsigned __int8 *)a2;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v15, v14, (unsigned __int8 *)a2);
}

uint64_t protobuf::Intelligence_State_Memory_Value::ByteSizeLong(protobuf::Intelligence_State_Memory_Value *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 8);
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v3);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      if ((v6 & 0x80u) != 0) {
        uint64_t v6 = *(void *)(v5 + 8);
      }
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  uint64_t v7 = *((void *)this + 1);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0) {
      uint64_t v10 = *(void *)(v9 + 8);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    }
    v4 += v10;
  }
  *((_DWORD *)this + 5) = v4;
  return v4;
}

void protobuf::Intelligence_State_Memory_Value::CheckTypeAndMergeFrom(protobuf::Intelligence_State_Memory_Value *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_State_Memory_Value::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_State_Memory_Value::MergeFrom(protobuf::Intelligence_State_Memory_Value *this, const protobuf::Intelligence_State_Memory_Value *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 10650);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
}

void sub_239A6C06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_Memory_Value::CopyFrom(protobuf::Intelligence_State_Memory_Value *this, const protobuf::Intelligence_State_Memory_Value *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_State_Memory_Value::Clear(this);
    protobuf::Intelligence_State_Memory_Value::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_State_Memory_Value::IsInitialized(protobuf::Intelligence_State_Memory_Value *this)
{
  return 1;
}

void protobuf::Intelligence_State_Memory_Value::InternalSwap(protobuf::Intelligence_State_Memory_Value *this, protobuf::Intelligence_State_Memory_Value *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v13;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_12:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;

  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_State_Memory_Value *)((char *)this + 24), (protobuf::Intelligence_State_Memory_Value *)((char *)a2 + 24));
}

void *protobuf::Intelligence_State_Memory_Value::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.State.Memory.Value");
}

void protobuf::Intelligence_State_Memory::InitAsDefaultInstance(protobuf::Intelligence_State_Memory *this)
{
  qword_268A0B4A0 = (uint64_t)&protobuf::_Intelligence_State_Memory_Value_default_instance_;
}

uint64_t protobuf::Intelligence_State_Memory::_Internal::values(protobuf::Intelligence_State_Memory::_Internal *this, const protobuf::Intelligence_State_Memory *a2)
{
  return *((void *)this + 5);
}

protobuf::Intelligence_State_Memory *protobuf::Intelligence_State_Memory::Intelligence_State_Memory(protobuf::Intelligence_State_Memory *this)
{
  *(void *)this = &unk_26ED28720;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_State_Memory_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_Memory_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 5) = 0;
  *((unsigned char *)this + 48) = 0;
  return this;
}

void sub_239A6C248(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_Memory *protobuf::Intelligence_State_Memory::Intelligence_State_Memory(protobuf::Intelligence_State_Memory *this, const protobuf::Intelligence_State_Memory *a2)
{
  *(void *)this = &unk_26ED28720;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  if ((v5 & 4) != 0)
  {
    if (!*((void *)a2 + 5))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 19433);
      unint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: !value || values_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 5) = 0;
  *((unsigned char *)this + 48) = *((unsigned char *)a2 + 48);
  return this;
}

void sub_239A6C3A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v3);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_Memory::~Intelligence_State_Memory(protobuf::Intelligence_State_Memory *this)
{
  *(void *)this = &unk_26ED28720;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  if (this != (protobuf::Intelligence_State_Memory *)&protobuf::_Intelligence_State_Memory_default_instance_)
  {
    uint64_t v6 = *((void *)this + 5);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_State_Memory::~Intelligence_State_Memory(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_State_Memory::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_State_Memory::default_instance(protobuf::Intelligence_State_Memory *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_State_Memory_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_Memory_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_State_Memory_default_instance_;
}

void protobuf::Intelligence_State_Memory::Clear(protobuf::Intelligence_State_Memory *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 7) == 0) {
    goto LABEL_17;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 3);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  uint64_t v4 = *((void *)this + 4);
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)uint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
  }
LABEL_14:
  int v5 = (protobuf::Intelligence_State_Memory_Value *)*((void *)this + 5);
  if (!v5)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 10780);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: values_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    int v5 = (protobuf::Intelligence_State_Memory_Value *)*((void *)this + 5);
  }
  protobuf::Intelligence_State_Memory_Value::Clear(v5);
LABEL_17:
  char v8 = *((unsigned char *)this + 8);
  unint64_t v7 = (char *)this + 8;
  v7[40] = 0;
  *((_DWORD *)v7 + 2) = 0;
  if (v8) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear((google::protobuf::internal::InternalMetadataWithArenaLite *)v7);
  }
}

void sub_239A6C674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *protobuf::Intelligence_State_Memory::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v28 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v28, *((_DWORD *)this + 23)) & 1) == 0)
  {
    while (1)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v28 + 1);
      LODWORD(v8) = *(unsigned __int8 *)v28;
      if (*(char *)v28 < 0)
      {
        char v8 = (const char *)(v8 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v28, v8);
          uint64_t v28 = TagFallback;
          if (!TagFallback) {
            goto LABEL_3;
          }
          goto LABEL_8;
        }
        TagFallbacint k = (google::protobuf::internal *)((char *)v28 + 2);
      }
      uint64_t v28 = TagFallback;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_26;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          char v9 = *(std::string **)(a1 + 24);
          if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          goto LABEL_15;
        case 2u:
          if (v8 != 18) {
            goto LABEL_26;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          char v9 = *(std::string **)(a1 + 32);
          if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 32, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
LABEL_15:
          char v10 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v9, (std::string::value_type *)TagFallback, (uint64_t)this);
          goto LABEL_31;
        case 3u:
          if (v8 != 26) {
            goto LABEL_26;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v11 = *(protobuf::Intelligence_State_Memory_Value **)(a1 + 40);
          if (!v11)
          {
            uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Memory_Value>(0);
            *(void *)(a1 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v11;
            TagFallbacint k = v28;
          }
          unsigned int v12 = *(unsigned __int8 *)TagFallback;
          if (*(char *)TagFallback < 0)
          {
            SizeFallbacint k = google::protobuf::internal::ReadSizeFallback(TagFallback, (const char *)*(unsigned __int8 *)TagFallback);
            if (!SizeFallback) {
              goto LABEL_44;
            }
            unint64_t v13 = SizeFallback;
            unsigned int v12 = v19;
          }
          else
          {
            unint64_t v13 = (char *)TagFallback + 1;
          }
          int v20 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v13, v12);
          int v21 = *((_DWORD *)this + 22);
          BOOL v22 = __OFSUB__(v21--, 1);
          *((_DWORD *)this + 22) = v21;
          if (v21 < 0 != v22) {
            goto LABEL_44;
          }
          int v23 = v20;
          uint64_t v24 = protobuf::Intelligence_State_Memory_Value::_InternalParse((uint64_t)v11, (google::protobuf::internal *)v13, this);
          if (!v24) {
            goto LABEL_44;
          }
          ++*((_DWORD *)this + 22);
          if (*((_DWORD *)this + 20)) {
            goto LABEL_44;
          }
          int v25 = *((_DWORD *)this + 7) + v23;
          *((_DWORD *)this + 7) = v25;
          *(void *)this = *((void *)this + 1) + (v25 & (v25 >> 31));
          uint64_t v28 = v24;
          goto LABEL_41;
        case 4u:
          if (v8 != 32) {
            goto LABEL_26;
          }
          v5 |= 8u;
          uint64_t v14 = (google::protobuf::internal *)((char *)TagFallback + 1);
          unint64_t v15 = *(unsigned __int8 *)TagFallback;
          if ((*(char *)TagFallback & 0x80000000) == 0) {
            goto LABEL_25;
          }
          int v16 = *(char *)v14;
          unint64_t v15 = v15 + (v16 << 7) - 128;
          if (v16 < 0)
          {
            unint64_t v26 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v15);
            uint64_t v28 = v26;
            *(unsigned char *)(a1 + 48) = v27 != 0;
            if (!v26) {
              goto LABEL_44;
            }
          }
          else
          {
            uint64_t v14 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_25:
            uint64_t v28 = v14;
            *(unsigned char *)(a1 + 48) = v15 != 0;
          }
          goto LABEL_41;
        default:
LABEL_26:
          if (v8) {
            BOOL v17 = (v8 & 7) == 4;
          }
          else {
            BOOL v17 = 1;
          }
          if (v17)
          {
            *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
            goto LABEL_3;
          }
          char v10 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), TagFallback, this);
LABEL_31:
          uint64_t v28 = v10;
          if (!v10)
          {
LABEL_44:
            TagFallbacint k = 0;
            goto LABEL_3;
          }
LABEL_41:
          if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v28, *((_DWORD *)this + 23)))goto LABEL_2; {
          break;
          }
      }
    }
  }
LABEL_2:
  TagFallbacint k = v28;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_State_Memory::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_State_Memory *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 4), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
LABEL_8:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v7 = (protobuf::Intelligence_State_Memory_Value *)*((void *)this + 5);
  *uint64_t v4 = 26;
  unsigned int v8 = *((_DWORD *)v7 + 5);
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    unsigned int v10 = v8 >> 7;
    if (v8 >> 14)
    {
      char v9 = v4 + 3;
      do
      {
        *(v9 - 1) = v10 | 0x80;
        unsigned int v11 = v10 >> 7;
        ++v9;
        unsigned int v12 = v10 >> 14;
        v10 >>= 7;
      }
      while (v12);
      *(v9 - 1) = v11;
    }
    else
    {
      std::string v4[2] = v10;
      char v9 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v8;
    char v9 = v4 + 2;
  }
  uint64_t v4 = (char *)protobuf::Intelligence_State_Memory_Value::InternalSerializeWithCachedSizesToArray(v7, v9, a3);
  if ((v6 & 8) != 0)
  {
LABEL_18:
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v13 = *((unsigned char *)this + 48);
    *uint64_t v4 = 32;
    v4[1] = v13;
    v4 += 2;
  }
LABEL_21:
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    uint64_t v18 = *(void **)v16;
    uint64_t v17 = *(void *)(v16 + 8);
  }
  else
  {
    LODWORD(v17) = *(unsigned __int8 *)(v16 + 23);
    uint64_t v18 = (void *)v16;
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v19 = (int)v17;
    memcpy(v4, v18, (int)v17);
    v4 += v19;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v18, v17, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_State_Memory::ByteSizeLong(protobuf::Intelligence_State_Memory *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if (v2)
  {
    uint64_t v5 = *((void *)this + 3);
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = *((void *)this + 4);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = protobuf::Intelligence_State_Memory_Value::ByteSizeLong(*((protobuf::Intelligence_State_Memory_Value **)this
                                                                  + 5));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_17:
  uint64_t v12 = *((void *)this + 1);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0) {
      uint64_t v14 = *(void *)(v13 + 8);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    }
    result += v14;
  }
  *((_DWORD *)this + 5) = result;
  return result;
}

void protobuf::Intelligence_State_Memory::CheckTypeAndMergeFrom(protobuf::Intelligence_State_Memory *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_State_Memory::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_State_Memory::MergeFrom(protobuf::Intelligence_State_Memory *this, const protobuf::Intelligence_State_Memory *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 10941);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0xF) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 4);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 4);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v11 = (protobuf::Intelligence_State_Memory_Value *)*((void *)this + 5);
      if (!v11)
      {
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Memory_Value>(0);
        *((void *)this + 5) = v11;
      }
      if (*((void *)a2 + 5)) {
        uint64_t v12 = (const protobuf::Intelligence_State_Memory_Value *)*((void *)a2 + 5);
      }
      else {
        uint64_t v12 = (const protobuf::Intelligence_State_Memory_Value *)&protobuf::_Intelligence_State_Memory_Value_default_instance_;
      }
      protobuf::Intelligence_State_Memory_Value::MergeFrom(v11, v12);
    }
    if ((v6 & 8) != 0) {
      *((unsigned char *)this + 48) = *((unsigned char *)a2 + 48);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_239A6CEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_Memory::CopyFrom(protobuf::Intelligence_State_Memory *this, const protobuf::Intelligence_State_Memory *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_State_Memory::Clear(this);
    protobuf::Intelligence_State_Memory::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_State_Memory::IsInitialized(protobuf::Intelligence_State_Memory *this)
{
  return 1;
}

void protobuf::Intelligence_State_Memory::InternalSwap(protobuf::Intelligence_State_Memory *this, protobuf::Intelligence_State_Memory *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v26;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  uint64_t v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v12 = (uint64_t *)*((void *)this + 3);
  }
  unint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v15 = *v14;
  }
  uint64_t v16 = v12[2];
  long long v17 = *(_OWORD *)v12;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v15;
  std::string v12[2] = v18;
  *(_OWORD *)unint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 4);
  int v20 = (uint64_t **)((char *)a2 + 32);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 4);
  }
  int v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)int v21 = v23;
  void v21[2] = v22;
LABEL_20:
  uint64_t v25 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v25;
  LOBYTE(v25) = *((unsigned char *)this + 48);
  *((unsigned char *)this + 48) = *((unsigned char *)a2 + 48);
  *((unsigned char *)a2 + 48) = v25;
}

void *protobuf::Intelligence_State_Memory::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.State.Memory");
}

protobuf::Intelligence_State_InputGroup *protobuf::Intelligence_State_InputGroup::Intelligence_State_InputGroup(protobuf::Intelligence_State_InputGroup *this)
{
  *(void *)this = &unk_26ED287B0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_State_InputGroup_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_InputGroup_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_239A6D180(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_InputGroup *protobuf::Intelligence_State_InputGroup::Intelligence_State_InputGroup(protobuf::Intelligence_State_InputGroup *this, const protobuf::Intelligence_State_InputGroup *a2)
{
  *(void *)this = &unk_26ED287B0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v5 = (uint64_t *)*((void *)a2 + 3);
    if (v5 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v5);
    }
  }
  return this;
}

void sub_239A6D230(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_InputGroup::~Intelligence_State_InputGroup(protobuf::Intelligence_State_InputGroup *this)
{
  *(void *)this = &unk_26ED287B0;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_State_InputGroup::~Intelligence_State_InputGroup(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_State_InputGroup::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_State_InputGroup::default_instance(protobuf::Intelligence_State_InputGroup *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_State_InputGroup_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_InputGroup_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_State_InputGroup_default_instance_;
}

void protobuf::Intelligence_State_InputGroup::Clear(protobuf::Intelligence_State_InputGroup *this)
{
  if (*((unsigned char *)this + 16))
  {
    uint64_t v1 = *((void *)this + 3);
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *((unsigned char *)this + 8);
  uint64_t v2 = (protobuf::Intelligence_State_InputGroup *)((char *)this + 8);
  *((_DWORD *)v2 + 2) = 0;
  if (v3) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v2);
  }
}

google::protobuf::internal *protobuf::Intelligence_State_InputGroup::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v12 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v12, *((_DWORD *)this + 23));
  uint64_t result = v12;
  if ((v5 & 1) == 0)
  {
    while (1)
    {
      unint64_t v7 = (char *)result + 1;
      LODWORD(v8) = *(unsigned __int8 *)result;
      if ((*(char *)result & 0x80000000) == 0) {
        goto LABEL_5;
      }
      unint64_t v8 = (const char *)(v8 + (*v7 << 7) - 128);
      if ((*v7 & 0x80000000) == 0) {
        break;
      }
      uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(result, v8);
      uint64_t v12 = result;
      if (!result) {
        return result;
      }
      unint64_t v7 = (std::string::value_type *)result;
LABEL_6:
      if (v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        long long v10 = *(std::string **)(a1 + 24);
        if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v10, v7, (uint64_t)this);
      }
      else
      {
        if (v8) {
          BOOL v9 = (v8 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
          return (google::protobuf::internal *)v7;
        }
        uint64_t result = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v7, this);
      }
      uint64_t v12 = result;
      if (result)
      {
        int v11 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v12, *((_DWORD *)this + 23));
        uint64_t result = v12;
        if (!v11) {
          continue;
        }
      }
      return result;
    }
    unint64_t v7 = (char *)result + 2;
LABEL_5:
    uint64_t v12 = (google::protobuf::internal *)v7;
    goto LABEL_6;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_State_InputGroup::InternalSerializeWithCachedSizesToArray(const void ***this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = (unsigned __int8 *)a2;
  if ((_BYTE)this[2]) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, this[3], a2);
  }
  unint64_t v6 = (unint64_t)this[1];
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    long long v10 = *(void **)v8;
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else
  {
    LODWORD(v9) = *(unsigned __int8 *)(v8 + 23);
    long long v10 = (void *)v8;
  }
  if (*(void *)a3 - (void)v4 >= (int)v9)
  {
    uint64_t v11 = (int)v9;
    memcpy(v4, v10, (int)v9);
    v4 += v11;
    return v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v10, v9, v4);
}

uint64_t protobuf::Intelligence_State_InputGroup::ByteSizeLong(protobuf::Intelligence_State_InputGroup *this)
{
  if (*((unsigned char *)this + 16))
  {
    uint64_t v2 = *((void *)this + 3);
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *((void *)this + 1);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0) {
      uint64_t v8 = *(void *)(v7 + 8);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    }
    v1 += v8;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

void protobuf::Intelligence_State_InputGroup::CheckTypeAndMergeFrom(protobuf::Intelligence_State_InputGroup *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_State_InputGroup::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_State_InputGroup::MergeFrom(protobuf::Intelligence_State_InputGroup *this, const protobuf::Intelligence_State_InputGroup *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 11149);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v8 = (std::string *)*((void *)this + 3);
    unint64_t v7 = (char *)this + 24;
    unint64_t v6 = v8;
    *((_DWORD *)v7 - 2) |= 1u;
    uint64_t v9 = (const std::string *)*((void *)a2 + 3);
    if (v8 != v9)
    {
      if (v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)v9);
      }
      std::string::operator=(v6, v9);
    }
  }
}

void sub_239A6D784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_InputGroup::CopyFrom(protobuf::Intelligence_State_InputGroup *this, const protobuf::Intelligence_State_InputGroup *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_State_InputGroup::Clear(this);
    protobuf::Intelligence_State_InputGroup::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_State_InputGroup::IsInitialized(protobuf::Intelligence_State_InputGroup *this)
{
  return 1;
}

__n128 protobuf::Intelligence_State_InputGroup::InternalSwap(protobuf::Intelligence_State_InputGroup *this, protobuf::Intelligence_State_InputGroup *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v20;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      uint64_t v8 = (__n128 *)(v4 & 0xFFFFFFFFFFFFFFFELL);
LABEL_7:
      unint64_t v9 = v8[1].n128_u64[0];
      __n128 result = *v8;
      unint64_t v11 = *(void *)(v7 + 16);
      *uint64_t v8 = *(__n128 *)v7;
      v8[1].n128_u64[0] = v11;
      *(__n128 *)unint64_t v7 = result;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v14 = (uint64_t *)*((void *)this + 3);
  uint64_t v12 = (std::string **)((char *)this + 24);
  int v13 = (std::string *)v14;
  int v15 = *((_DWORD *)v12 - 2);
  *((_DWORD *)v12 - 2) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v15;
  uint64_t v16 = (std::string **)((char *)a2 + 24);
  if (v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v12, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v13 = *v12;
  }
  long long v17 = *v16;
  if (*v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    long long v17 = *v16;
  }
  std::string::size_type v18 = v13->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v13->__r_.__value_.__l.__data_;
  std::string::size_type v19 = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v13->__r_.__value_.__l.__data_ = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v13->__r_.__value_.__r.__words[2] = v19;
  *(__n128 *)&v17->__r_.__value_.__l.__data_ = result;
  v17->__r_.__value_.__r.__words[2] = v18;
  return result;
}

void *protobuf::Intelligence_State_InputGroup::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.State.InputGroup");
}

protobuf::Intelligence_State_Event *protobuf::Intelligence_State_Event::Intelligence_State_Event(protobuf::Intelligence_State_Event *this)
{
  *(void *)this = &unk_26ED28840;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_State_Event_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_Event_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  return this;
}

void sub_239A6D9A8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_Event *protobuf::Intelligence_State_Event::Intelligence_State_Event(protobuf::Intelligence_State_Event *this, const protobuf::Intelligence_State_Event *a2)
{
  *(void *)this = &unk_26ED28840;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v5 = (uint64_t *)*((void *)a2 + 3);
    if (v5 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v5);
    }
  }
  *((void *)this + 4) = *((void *)a2 + 4);
  return this;
}

void sub_239A6DA60(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_Event::~Intelligence_State_Event(protobuf::Intelligence_State_Event *this)
{
  *(void *)this = &unk_26ED28840;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_State_Event::~Intelligence_State_Event(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_State_Event::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_State_Event::default_instance(protobuf::Intelligence_State_Event *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_State_Event_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_Event_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_State_Event_default_instance_;
}

void protobuf::Intelligence_State_Event::Clear(protobuf::Intelligence_State_Event *this)
{
  if (*((unsigned char *)this + 16))
  {
    uint64_t v1 = *((void *)this + 3);
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *((unsigned char *)this + 8);
  uint64_t v2 = (char *)this + 8;
  *((void *)v2 + 3) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear((google::protobuf::internal::InternalMetadataWithArenaLite *)v2);
  }
}

char *protobuf::Intelligence_State_Event::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  int v13 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v13, *((_DWORD *)this + 23)) & 1) == 0)
  {
    while (1)
    {
      TagFallbacint k = (char *)v13 + 1;
      LODWORD(v8) = *(unsigned __int8 *)v13;
      if ((*(char *)v13 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      uint64_t v8 = (const char *)(v8 + (*TagFallback << 7) - 128);
      if ((*TagFallback & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (char *)google::protobuf::internal::ReadTagFallback(v13, v8);
      int v13 = (google::protobuf::internal *)TagFallback;
      if (!TagFallback) {
        goto LABEL_3;
      }
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 == 17)
        {
          v5 |= 2u;
          *(void *)(a1 + 32) = *(void *)TagFallback;
          int v13 = (google::protobuf::internal *)(TagFallback + 8);
          goto LABEL_24;
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(std::string **)(a1 + 24);
        if (v12 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unint64_t v11 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, TagFallback, (uint64_t)this);
        goto LABEL_23;
      }
      if (v8) {
        BOOL v10 = (v8 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
        goto LABEL_3;
      }
      unint64_t v11 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), (google::protobuf::internal *)TagFallback, this);
LABEL_23:
      int v13 = v11;
      if (!v11)
      {
        TagFallbacint k = 0;
        goto LABEL_3;
      }
LABEL_24:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v13, *((_DWORD *)this + 23)))goto LABEL_2; {
    }
      }
    TagFallbacint k = (char *)v13 + 2;
LABEL_7:
    int v13 = (google::protobuf::internal *)TagFallback;
    goto LABEL_8;
  }
LABEL_2:
  TagFallbacint k = (char *)v13;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_State_Event::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_State_Event *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
  }
  if ((v6 & 2) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v7 = *((void *)this + 4);
    *uint64_t v4 = 17;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  uint64_t v8 = *((void *)this + 1);
  if ((v8 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v10 + 23) < 0)
  {
    uint64_t v12 = *(void **)v10;
    uint64_t v11 = *(void *)(v10 + 8);
  }
  else
  {
    LODWORD(v11) = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = (void *)v10;
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v13 = (int)v11;
    memcpy(v4, v12, (int)v11);
    v4 += v13;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v12, v11, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_State_Event::ByteSizeLong(protobuf::Intelligence_State_Event *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      uint64_t v4 = *((void *)this + 3);
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 9;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *((void *)this + 1);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0) {
      uint64_t v10 = *(void *)(v9 + 8);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    }
    v3 += v10;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void protobuf::Intelligence_State_Event::CheckTypeAndMergeFrom(protobuf::Intelligence_State_Event *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_State_Event::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_State_Event::MergeFrom(protobuf::Intelligence_State_Event *this, const protobuf::Intelligence_State_Event *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 11366);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0) {
      *((void *)this + 4) = *((void *)a2 + 4);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_239A6E084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_Event::CopyFrom(protobuf::Intelligence_State_Event *this, const protobuf::Intelligence_State_Event *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_State_Event::Clear(this);
    protobuf::Intelligence_State_Event::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_State_Event::IsInitialized(protobuf::Intelligence_State_Event *this)
{
  return 1;
}

double protobuf::Intelligence_State_Event::InternalSwap(protobuf::Intelligence_State_Event *this, protobuf::Intelligence_State_Event *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v20;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  uint64_t v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v12 = (uint64_t *)*((void *)this + 3);
  }
  int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v15 = *v14;
  }
  uint64_t v16 = v12[2];
  long long v17 = *(_OWORD *)v12;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v15;
  std::string v12[2] = v18;
  *(_OWORD *)int v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  double result = *((double *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((double *)a2 + 4) = result;
  return result;
}

void *protobuf::Intelligence_State_Event::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.State.Event");
}

protobuf::Intelligence_State_Response *protobuf::Intelligence_State_Response::Intelligence_State_Response(protobuf::Intelligence_State_Response *this)
{
  *(void *)this = &unk_26ED288D0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_State_Response_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_Response_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  return this;
}

void sub_239A6E2C8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_Response *protobuf::Intelligence_State_Response::Intelligence_State_Response(protobuf::Intelligence_State_Response *this, const protobuf::Intelligence_State_Response *a2)
{
  *(void *)this = &unk_26ED288D0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v5 = (uint64_t *)*((void *)a2 + 3);
    if (v5 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v5);
    }
  }
  uint64_t v6 = *((void *)a2 + 4);
  *((_DWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((_DWORD *)a2 + 10);
  *((void *)this + 4) = v6;
  return this;
}

void sub_239A6E388(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_Response::~Intelligence_State_Response(protobuf::Intelligence_State_Response *this)
{
  *(void *)this = &unk_26ED288D0;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_State_Response::~Intelligence_State_Response(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_State_Response::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_State_Response::default_instance(protobuf::Intelligence_State_Response *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_State_Response_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_Response_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_State_Response_default_instance_;
}

void protobuf::Intelligence_State_Response::Clear(protobuf::Intelligence_State_Response *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    uint64_t v2 = *((void *)this + 3);
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0)
  {
    *((_DWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
    *((void *)this + 4) = 0;
  }
  char v4 = *((unsigned char *)this + 8);
  uint64_t v3 = (protobuf::Intelligence_State_Response *)((char *)this + 8);
  *((_DWORD *)v3 + 2) = 0;
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v3);
  }
}

google::protobuf::internal *protobuf::Intelligence_State_Response::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  std::string::size_type v19 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v19, *((_DWORD *)this + 23)) & 1) == 0)
  {
    while (1)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v19 + 1);
      LODWORD(v8) = *(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unint64_t v8 = (const char *)(v8 + (*(unsigned __int8 *)TagFallback << 7) - 128);
      if ((*(char *)TagFallback & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, v8);
      std::string::size_type v19 = TagFallback;
      if (!TagFallback) {
        goto LABEL_3;
      }
LABEL_8:
      unsigned int v9 = v8 >> 3;
      if (v8 >> 3 != 3)
      {
        if (v9 == 2)
        {
          if (v8 == 17)
          {
            v5 |= 2u;
            *(void *)(a1 + 32) = *(void *)TagFallback;
            std::string::size_type v19 = (google::protobuf::internal *)((char *)TagFallback + 8);
            goto LABEL_30;
          }
LABEL_14:
          if (v8) {
            BOOL v11 = (v8 & 7) == 4;
          }
          else {
            BOOL v11 = 1;
          }
          if (v11)
          {
            *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
            goto LABEL_3;
          }
          uint64_t v12 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), TagFallback, this);
        }
        else
        {
          if (v9 != 1 || v8 != 10) {
            goto LABEL_14;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v16 = *(std::string **)(a1 + 24);
          if (v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          uint64_t v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v16, (std::string::value_type *)TagFallback, (uint64_t)this);
        }
        std::string::size_type v19 = v12;
        if (!v12) {
          goto LABEL_35;
        }
        goto LABEL_30;
      }
      if (v8 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v14 = (google::protobuf::internal *)((char *)TagFallback + 1);
      LODWORD(v13) = *(unsigned __int8 *)TagFallback;
      if ((v13 & 0x80) == 0) {
        goto LABEL_23;
      }
      int v15 = *(char *)v14;
      unint64_t v13 = v13 + (v15 << 7) - 128;
      if ((v15 & 0x80000000) == 0)
      {
        uint64_t v14 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_23:
        std::string::size_type v19 = v14;
        *(_DWORD *)(a1 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v13;
        goto LABEL_30;
      }
      long long v17 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v13);
      std::string::size_type v19 = v17;
      *(_DWORD *)(a1 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v18;
      if (!v17)
      {
LABEL_35:
        TagFallbacint k = 0;
        goto LABEL_3;
      }
LABEL_30:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v19, *((_DWORD *)this + 23)))goto LABEL_2; {
    }
      }
    TagFallbacint k = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_7:
    std::string::size_type v19 = TagFallback;
    goto LABEL_8;
  }
LABEL_2:
  TagFallbacint k = v19;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_State_Response::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_State_Response *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    char v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if ((unint64_t)v4 >= *(void *)a3) {
    char v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  uint64_t v7 = *((void *)this + 4);
  *char v4 = 17;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 4) != 0)
  {
LABEL_9:
    if ((unint64_t)v4 >= *(void *)a3) {
      char v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v8 = *((int *)this + 10);
    *char v4 = 24;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      if (v8 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - 1) = v9 | 0x80;
          unint64_t v10 = v9 >> 7;
          ++v4;
          unint64_t v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v4 - 1) = v10;
      }
      else
      {
        std::string v4[2] = v9;
        v4 += 3;
      }
    }
    else
    {
      v4[1] = v8;
      v4 += 2;
    }
  }
LABEL_18:
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    uint64_t v16 = *(void **)v14;
    uint64_t v15 = *(void *)(v14 + 8);
  }
  else
  {
    LODWORD(v15) = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = (void *)v14;
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v17 = (int)v15;
    memcpy(v4, v16, (int)v15);
    v4 += v17;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v16, v15, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_State_Response::ByteSizeLong(protobuf::Intelligence_State_Response *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 7) != 0)
  {
    if (v1)
    {
      uint64_t v3 = *((void *)this + 3);
      uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v5 = *(void *)(v3 + 8);
      if ((v4 & 0x80u) == 0) {
        uint64_t v5 = v4;
      }
      uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0)
    {
      int v6 = *((_DWORD *)this + 10);
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v6 >= 0) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 11;
      }
      v2 += v8;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v9 = *((void *)this + 1);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0) {
      uint64_t v12 = *(void *)(v11 + 8);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    }
    v2 += v12;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void protobuf::Intelligence_State_Response::CheckTypeAndMergeFrom(protobuf::Intelligence_State_Response *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_State_Response::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_State_Response::MergeFrom(protobuf::Intelligence_State_Response *this, const protobuf::Intelligence_State_Response *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 11623);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0) {
      *((void *)this + 4) = *((void *)a2 + 4);
    }
    if ((v6 & 4) != 0) {
      *((_DWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((_DWORD *)a2 + 10);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_239A6EAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_Response::CopyFrom(protobuf::Intelligence_State_Response *this, const protobuf::Intelligence_State_Response *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_State_Response::Clear(this);
    protobuf::Intelligence_State_Response::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_State_Response::IsInitialized(protobuf::Intelligence_State_Response *this)
{
  return 1;
}

double protobuf::Intelligence_State_Response::InternalSwap(protobuf::Intelligence_State_Response *this, protobuf::Intelligence_State_Response *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v21;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  unint64_t v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v12 = (uint64_t *)*((void *)this + 3);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v12[2];
  long long v17 = *(_OWORD *)v12;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v15;
  std::string v12[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  double result = *((double *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((double *)a2 + 4) = result;
  int v20 = *((_DWORD *)this + 10);
  *((_DWORD *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v20;
  return result;
}

void *protobuf::Intelligence_State_Response::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.State.Response");
}

protobuf::Intelligence_State_Timer *protobuf::Intelligence_State_Timer::Intelligence_State_Timer(protobuf::Intelligence_State_Timer *this)
{
  *(void *)this = &unk_26ED28960;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_State_Timer_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_Timer_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 5) = 0;
  *((unsigned char *)this + 48) = 0;
  return this;
}

void sub_239A6ED40(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_Timer *protobuf::Intelligence_State_Timer::Intelligence_State_Timer(protobuf::Intelligence_State_Timer *this, const protobuf::Intelligence_State_Timer *a2)
{
  *(void *)this = &unk_26ED28960;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  uint64_t v8 = *((void *)a2 + 5);
  *((unsigned char *)this + 48) = *((unsigned char *)a2 + 48);
  *((void *)this + 5) = v8;
  return this;
}

void sub_239A6EE20(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_Timer::~Intelligence_State_Timer(protobuf::Intelligence_State_Timer *this)
{
  *(void *)this = &unk_26ED28960;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_State_Timer::~Intelligence_State_Timer(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_State_Timer::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_State_Timer::default_instance(protobuf::Intelligence_State_Timer *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_State_Timer_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_Timer_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_State_Timer_default_instance_;
}

void protobuf::Intelligence_State_Timer::Clear(protobuf::Intelligence_State_Timer *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      uint64_t v2 = *((void *)this + 3);
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v3 = *((void *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0)
  {
    *((unsigned char *)this + 48) = 0;
    *((void *)this + 5) = 0;
  }
  char v5 = *((unsigned char *)this + 8);
  uint64_t v4 = (protobuf::Intelligence_State_Timer *)((char *)this + 8);
  *((_DWORD *)v4 + 2) = 0;
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v4);
  }
}

char *protobuf::Intelligence_State_Timer::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  long long v17 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v17, *((_DWORD *)this + 23)) & 1) == 0)
  {
    while (1)
    {
      TagFallbacint k = (char *)v17 + 1;
      LODWORD(v8) = *(unsigned __int8 *)v17;
      if (*(char *)v17 < 0)
      {
        uint64_t v8 = (const char *)(v8 + (*TagFallback << 7) - 128);
        if (*TagFallback < 0)
        {
          TagFallbacint k = (char *)google::protobuf::internal::ReadTagFallback(v17, v8);
          long long v17 = (google::protobuf::internal *)TagFallback;
          if (!TagFallback) {
            goto LABEL_3;
          }
          goto LABEL_8;
        }
        TagFallbacint k = (char *)v17 + 2;
      }
      long long v17 = (google::protobuf::internal *)TagFallback;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_23;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v9 = *(std::string **)(a1 + 24);
          if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          goto LABEL_15;
        case 2u:
          if (v8 != 18) {
            goto LABEL_23;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v9 = *(std::string **)(a1 + 32);
          if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 32, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
LABEL_15:
          long long v10 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v9, TagFallback, (uint64_t)this);
          goto LABEL_28;
        case 3u:
          if (v8 != 25) {
            goto LABEL_23;
          }
          v5 |= 4u;
          *(void *)(a1 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *(void *)TagFallback;
          long long v17 = (google::protobuf::internal *)(TagFallback + 8);
          goto LABEL_29;
        case 4u:
          if (v8 != 32) {
            goto LABEL_23;
          }
          v5 |= 8u;
          uint64_t v11 = (google::protobuf::internal *)(TagFallback + 1);
          unint64_t v12 = *TagFallback;
          if ((*TagFallback & 0x80000000) == 0) {
            goto LABEL_22;
          }
          int v13 = *(char *)v11;
          unint64_t v12 = v12 + (v13 << 7) - 128;
          if (v13 < 0)
          {
            uint64_t v15 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, v12);
            long long v17 = v15;
            *(unsigned char *)(a1 + 48) = v16 != 0;
            if (!v15) {
              goto LABEL_34;
            }
          }
          else
          {
            uint64_t v11 = (google::protobuf::internal *)(TagFallback + 2);
LABEL_22:
            long long v17 = v11;
            *(unsigned char *)(a1 + 48) = v12 != 0;
          }
          goto LABEL_29;
        default:
LABEL_23:
          if (v8) {
            BOOL v14 = (v8 & 7) == 4;
          }
          else {
            BOOL v14 = 1;
          }
          if (v14)
          {
            *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
            goto LABEL_3;
          }
          long long v10 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), (google::protobuf::internal *)TagFallback, this);
LABEL_28:
          long long v17 = v10;
          if (!v10)
          {
LABEL_34:
            TagFallbacint k = 0;
            goto LABEL_3;
          }
LABEL_29:
          if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v17, *((_DWORD *)this + 23)))goto LABEL_2; {
          break;
          }
      }
    }
  }
LABEL_2:
  TagFallbacint k = (char *)v17;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_State_Timer::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_State_Timer *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 4), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
LABEL_8:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  uint64_t v7 = *((void *)this + 5);
  *uint64_t v4 = 25;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 8) != 0)
  {
LABEL_11:
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v8 = *((unsigned char *)this + 48);
    *uint64_t v4 = 32;
    v4[1] = v8;
    v4 += 2;
  }
LABEL_14:
  uint64_t v9 = *((void *)this + 1);
  if ((v9 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    int v13 = *(void **)v11;
    uint64_t v12 = *(void *)(v11 + 8);
  }
  else
  {
    LODWORD(v12) = *(unsigned __int8 *)(v11 + 23);
    int v13 = (void *)v11;
  }
  if (*(void *)a3 - (void)v4 >= (int)v12)
  {
    uint64_t v14 = (int)v12;
    memcpy(v4, v13, (int)v12);
    v4 += v14;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v13, v12, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_State_Timer::ByteSizeLong(protobuf::Intelligence_State_Timer *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    uint64_t v4 = *((void *)this + 3);
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = *((void *)this + 4);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0) {
    v2 += 9;
  }
  if ((v1 & 8) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_17:
  uint64_t v10 = *((void *)this + 1);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0) {
      uint64_t v13 = *(void *)(v12 + 8);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    }
    v3 += v13;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void protobuf::Intelligence_State_Timer::CheckTypeAndMergeFrom(protobuf::Intelligence_State_Timer *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_State_Timer::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_State_Timer::MergeFrom(protobuf::Intelligence_State_Timer *this, const protobuf::Intelligence_State_Timer *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 11916);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0xF) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 4);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 4);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0) {
      *((void *)this + 5) = *((void *)a2 + 5);
    }
    if ((v6 & 8) != 0) {
      *((unsigned char *)this + 48) = *((unsigned char *)a2 + 48);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_239A6F6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_Timer::CopyFrom(protobuf::Intelligence_State_Timer *this, const protobuf::Intelligence_State_Timer *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_State_Timer::Clear(this);
    protobuf::Intelligence_State_Timer::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_State_Timer::IsInitialized(protobuf::Intelligence_State_Timer *this)
{
  return 1;
}

double protobuf::Intelligence_State_Timer::InternalSwap(protobuf::Intelligence_State_Timer *this, protobuf::Intelligence_State_Timer *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v27;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  unint64_t v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  uint64_t v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v12 = (uint64_t *)*((void *)this + 3);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v12[2];
  long long v17 = *(_OWORD *)v12;
  uint64_t v18 = v15[2];
  *(_OWORD *)unint64_t v12 = *(_OWORD *)v15;
  std::string v12[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  std::string::size_type v19 = (uint64_t *)*((void *)this + 4);
  int v20 = (uint64_t **)((char *)a2 + 32);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    std::string::size_type v19 = (uint64_t *)*((void *)this + 4);
  }
  unint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)std::string::size_type v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)unint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  double result = *((double *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((double *)a2 + 5) = result;
  char v26 = *((unsigned char *)this + 48);
  *((unsigned char *)this + 48) = *((unsigned char *)a2 + 48);
  *((unsigned char *)a2 + 48) = v26;
  return result;
}

void *protobuf::Intelligence_State_Timer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.State.Timer");
}

protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::Intelligence_State_ExecutionState_Frame_ResponseState(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this)
{
  *(void *)this = &unk_26ED289F0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_State_ExecutionState_Frame_ResponseState_intelligence_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_ExecutionState_Frame_ResponseState_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((_WORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((unsigned char *)this + 42) = 0;
  return this;
}

void sub_239A6F978(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::Intelligence_State_ExecutionState_Frame_ResponseState(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this, const protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *a2)
{
  *(void *)this = &unk_26ED289F0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  __int16 v8 = *((_WORD *)a2 + 20);
  *((unsigned char *)this + 42) = *((unsigned char *)a2 + 42);
  *((_WORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8;
  return this;
}

void sub_239A6FA58(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::~Intelligence_State_ExecutionState_Frame_ResponseState(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this)
{
  *(void *)this = &unk_26ED289F0;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::~Intelligence_State_ExecutionState_Frame_ResponseState(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::default_instance(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_State_ExecutionState_Frame_ResponseState_intelligence_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_ExecutionState_Frame_ResponseState_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_State_ExecutionState_Frame_ResponseState_default_instance_;
}

void protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::Clear(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  uint64_t v2 = *((void *)this + 3);
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    uint64_t v3 = *((void *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *((unsigned char *)this + 8);
  uint64_t v4 = (char *)this + 8;
  v4[34] = 0;
  *((_WORD *)v4 + 16) = 0;
  *((_DWORD *)v4 + 2) = 0;
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear((google::protobuf::internal::InternalMetadataWithArenaLite *)v4);
  }
}

google::protobuf::internal *protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  unint64_t v27 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v27, *((_DWORD *)this + 23)) & 1) == 0)
  {
    while (1)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v27 + 1);
      LODWORD(v8) = *(unsigned __int8 *)v27;
      if (*(char *)v27 < 0)
      {
        __int16 v8 = (const char *)(v8 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v27, v8);
          unint64_t v27 = TagFallback;
          if (!TagFallback) {
            goto LABEL_3;
          }
          goto LABEL_8;
        }
        TagFallbacint k = (google::protobuf::internal *)((char *)v27 + 2);
      }
      unint64_t v27 = TagFallback;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_31;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v9 = *(std::string **)(a1 + 24);
          if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          goto LABEL_25;
        case 2u:
          if (v8 != 16) {
            goto LABEL_31;
          }
          v5 |= 4u;
          long long v10 = (google::protobuf::internal *)((char *)TagFallback + 1);
          unint64_t v11 = *(unsigned __int8 *)TagFallback;
          if ((*(char *)TagFallback & 0x80000000) == 0) {
            goto LABEL_16;
          }
          int v12 = *(char *)v10;
          unint64_t v11 = v11 + (v12 << 7) - 128;
          if (v12 < 0)
          {
            unint64_t v21 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v11);
            unint64_t v27 = v21;
            *(unsigned char *)(a1 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v22 != 0;
            if (!v21) {
              goto LABEL_46;
            }
          }
          else
          {
            long long v10 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_16:
            unint64_t v27 = v10;
            *(unsigned char *)(a1 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v11 != 0;
          }
          goto LABEL_37;
        case 3u:
          if (v8 != 24) {
            goto LABEL_31;
          }
          v5 |= 8u;
          int v13 = (google::protobuf::internal *)((char *)TagFallback + 1);
          unint64_t v14 = *(unsigned __int8 *)TagFallback;
          if ((*(char *)TagFallback & 0x80000000) == 0) {
            goto LABEL_21;
          }
          int v15 = *(char *)v13;
          unint64_t v14 = v14 + (v15 << 7) - 128;
          if (v15 < 0)
          {
            long long v23 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v14);
            unint64_t v27 = v23;
            *(unsigned char *)(a1 + 41) = v24 != 0;
            if (!v23) {
              goto LABEL_46;
            }
          }
          else
          {
            int v13 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_21:
            unint64_t v27 = v13;
            *(unsigned char *)(a1 + 41) = v14 != 0;
          }
          goto LABEL_37;
        case 4u:
          if (v8 != 34) {
            goto LABEL_31;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v9 = *(std::string **)(a1 + 32);
          if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 32, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
LABEL_25:
          uint64_t v16 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v9, (std::string::value_type *)TagFallback, (uint64_t)this);
          goto LABEL_36;
        case 5u:
          if (v8 != 40) {
            goto LABEL_31;
          }
          v5 |= 0x10u;
          long long v17 = (google::protobuf::internal *)((char *)TagFallback + 1);
          unint64_t v18 = *(unsigned __int8 *)TagFallback;
          if ((*(char *)TagFallback & 0x80000000) == 0) {
            goto LABEL_30;
          }
          int v19 = *(char *)v17;
          unint64_t v18 = v18 + (v19 << 7) - 128;
          if (v19 < 0)
          {
            uint64_t v25 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v18);
            unint64_t v27 = v25;
            *(unsigned char *)(a1 + 42) = v26 != 0;
            if (!v25) {
              goto LABEL_46;
            }
          }
          else
          {
            long long v17 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_30:
            unint64_t v27 = v17;
            *(unsigned char *)(a1 + 42) = v18 != 0;
          }
          goto LABEL_37;
        default:
LABEL_31:
          if (v8) {
            BOOL v20 = (v8 & 7) == 4;
          }
          else {
            BOOL v20 = 1;
          }
          if (v20)
          {
            *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
            goto LABEL_3;
          }
          uint64_t v16 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), TagFallback, this);
LABEL_36:
          unint64_t v27 = v16;
          if (!v16)
          {
LABEL_46:
            TagFallbacint k = 0;
            goto LABEL_3;
          }
LABEL_37:
          if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v27, *((_DWORD *)this + 23)))goto LABEL_2; {
          break;
          }
      }
    }
  }
LABEL_2:
  TagFallbacint k = v27;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

unsigned __int8 *protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v7 = *((unsigned char *)this + 40);
  *uint64_t v4 = 16;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v8 = *((unsigned char *)this + 41);
  *uint64_t v4 = 24;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 4), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_18;
  }
LABEL_15:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v9 = *((unsigned char *)this + 42);
  *uint64_t v4 = 40;
  v4[1] = v9;
  v4 += 2;
LABEL_18:
  uint64_t v10 = *((void *)this + 1);
  if ((v10 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    unint64_t v14 = *(void **)v12;
    uint64_t v13 = *(void *)(v12 + 8);
  }
  else
  {
    LODWORD(v13) = *(unsigned __int8 *)(v12 + 23);
    unint64_t v14 = (void *)v12;
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v15 = (int)v13;
    memcpy(v4, v14, (int)v13);
    v4 += v15;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v14, v13, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::ByteSizeLong(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if (v1)
  {
    uint64_t v4 = *((void *)this + 3);
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = *((void *)this + 4);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x10) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_19:
  uint64_t v10 = *((void *)this + 1);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0) {
      uint64_t v13 = *(void *)(v12 + 8);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    }
    v3 += v13;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::CheckTypeAndMergeFrom(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::MergeFrom(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this, const protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 12235);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x1F) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 4);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 4);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      *((unsigned char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 40);
      if ((v6 & 8) == 0)
      {
LABEL_18:
        if ((v6 & 0x10) == 0)
        {
LABEL_20:
          *((_DWORD *)this + 4) |= v6;
          return;
        }
LABEL_19:
        *((unsigned char *)this + 42) = *((unsigned char *)a2 + 42);
        goto LABEL_20;
      }
    }
    else if ((v6 & 8) == 0)
    {
      goto LABEL_18;
    }
    *((unsigned char *)this + 41) = *((unsigned char *)a2 + 41);
    if ((v6 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
}

void sub_239A703F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::CopyFrom(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this, const protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::Clear(this);
    protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::IsInitialized(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this)
{
  return 1;
}

void protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::InternalSwap(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this, protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v28;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  unint64_t v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  unint64_t v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v12 = (uint64_t *)*((void *)this + 3);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v12[2];
  long long v17 = *(_OWORD *)v12;
  uint64_t v18 = v15[2];
  *(_OWORD *)unint64_t v12 = *(_OWORD *)v15;
  std::string v12[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  int v19 = (uint64_t *)*((void *)this + 4);
  BOOL v20 = (uint64_t **)((char *)a2 + 32);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v19 = (uint64_t *)*((void *)this + 4);
  }
  unint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)int v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)unint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  char v25 = *((unsigned char *)this + 40);
  *((unsigned char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *((unsigned char *)a2 + 40);
  *((unsigned char *)a2 + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v25;
  char v26 = *((unsigned char *)this + 41);
  *((unsigned char *)this + 41) = *((unsigned char *)a2 + 41);
  *((unsigned char *)a2 + 41) = v26;
  char v27 = *((unsigned char *)this + 42);
  *((unsigned char *)this + 42) = *((unsigned char *)a2 + 42);
  *((unsigned char *)a2 + 42) = v27;
}

void *protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.State.ExecutionState.Frame.ResponseState");
}

protobuf::Intelligence_State_ExecutionState_Frame *protobuf::Intelligence_State_ExecutionState_Frame::Intelligence_State_ExecutionState_Frame(protobuf::Intelligence_State_ExecutionState_Frame *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED28A80;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_State_ExecutionState_Frame_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_ExecutionState_Frame_intelligence_2eproto);
  }
  return this;
}

void sub_239A706D0(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_ExecutionState_Frame *protobuf::Intelligence_State_ExecutionState_Frame::Intelligence_State_ExecutionState_Frame(protobuf::Intelligence_State_ExecutionState_Frame *this, const protobuf::Intelligence_State_ExecutionState_Frame *a2)
{
  *(void *)this = &unk_26ED28A80;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_ExecutionState_Frame_ResponseState>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

void sub_239A70780(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_ExecutionState_Frame::~Intelligence_State_ExecutionState_Frame(protobuf::Intelligence_State_ExecutionState_Frame *this)
{
  *(void *)this = &unk_26ED28A80;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_State_ExecutionState_Frame *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;

  *(void *)this = &unk_26ED28A80;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_State_ExecutionState_Frame *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;
  uint64_t vars8;

  *(void *)this = &unk_26ED28A80;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_State_ExecutionState_Frame *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_State_ExecutionState_Frame::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_State_ExecutionState_Frame::default_instance(protobuf::Intelligence_State_ExecutionState_Frame *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_State_ExecutionState_Frame_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_ExecutionState_Frame_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_State_ExecutionState_Frame_default_instance_;
}

void protobuf::Intelligence_State_ExecutionState_Frame::Clear(protobuf::Intelligence_State_ExecutionState_Frame *this)
{
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((v2 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  else if (v2)
  {
    uint64_t v3 = (protobuf::Intelligence_State_ExecutionState_Frame_ResponseState **)(*((void *)this + 5) + 8);
    do
    {
      unint64_t v4 = *v3++;
      protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  char v7 = *((unsigned char *)this + 8);
  uint64_t v6 = (protobuf::Intelligence_State_ExecutionState_Frame *)((char *)this + 8);
  *((_DWORD *)v6 + 2) = 0;
  if (v7)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v6);
  }
}

void sub_239A709DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *protobuf::Intelligence_State_ExecutionState_Frame::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char v27 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v27, *((_DWORD *)this + 23));
  double result = v27;
  if ((v5 & 1) == 0)
  {
    while (1)
    {
      char v7 = (google::protobuf::internal *)((char *)result + 1);
      LODWORD(v8) = *(unsigned __int8 *)result;
      if ((*(char *)result & 0x80000000) == 0) {
        goto LABEL_5;
      }
      char v8 = (const char *)(v8 + (*(unsigned __int8 *)v7 << 7) - 128);
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      double result = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(result, v8);
      char v27 = result;
      if (!result) {
        return result;
      }
      char v7 = result;
LABEL_6:
      if (v8 == 10)
      {
        double result = (google::protobuf::internal *)((char *)v7 - 1);
        while (1)
        {
          long long v10 = (google::protobuf::internal *)((char *)result + 1);
          char v27 = v10;
          uint64_t v11 = *(int **)(a1 + 40);
          if (!v11) {
            break;
          }
          uint64_t v12 = *(int *)(a1 + 32);
          int v13 = *v11;
          if ((int)v12 >= *v11)
          {
            if (v13 == *(_DWORD *)(a1 + 36))
            {
LABEL_19:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v13 + 1);
              uint64_t v11 = *(int **)(a1 + 40);
              int v13 = *v11;
            }
            int *v11 = v13 + 1;
            unint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_ExecutionState_Frame_ResponseState>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
            uint64_t v15 = *(void *)(a1 + 40);
            uint64_t v16 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 32) = v16 + 1;
            *(void *)(v15 + 8 * v16 + 8) = v14;
            long long v10 = v27;
            goto LABEL_21;
          }
          *(_DWORD *)(a1 + 32) = v12 + 1;
          unint64_t v14 = *(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState **)&v11[2 * v12 + 2];
LABEL_21:
          unsigned int v17 = *(unsigned __int8 *)v10;
          if (*(char *)v10 < 0)
          {
            double result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v10, (const char *)*(unsigned __int8 *)v10);
            if (!result) {
              return result;
            }
            uint64_t v18 = (char *)result;
            unsigned int v17 = v19;
          }
          else
          {
            uint64_t v18 = (char *)v10 + 1;
          }
          int v20 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v18, v17);
          int v21 = *((_DWORD *)this + 22);
          BOOL v22 = __OFSUB__(v21--, 1);
          *((_DWORD *)this + 22) = v21;
          if (v21 < 0 != v22) {
            return 0;
          }
          int v23 = v20;
          double result = protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::_InternalParse((uint64_t)v14, (google::protobuf::internal *)v18, this);
          if (!result) {
            return result;
          }
          ++*((_DWORD *)this + 22);
          if (*((_DWORD *)this + 20)) {
            return 0;
          }
          int v24 = *((_DWORD *)this + 7) + v23;
          *((_DWORD *)this + 7) = v24;
          unint64_t v25 = *((void *)this + 1) + (v24 & (v24 >> 31));
          *(void *)this = v25;
          char v27 = result;
          if (v25 <= (unint64_t)result || *(unsigned char *)result != 10) {
            goto LABEL_30;
          }
        }
        int v13 = *(_DWORD *)(a1 + 36);
        goto LABEL_19;
      }
      if (v8) {
        BOOL v9 = (v8 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
        return v7;
      }
      double result = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), v7, this);
      char v27 = result;
      if (!result) {
        return result;
      }
LABEL_30:
      int v26 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v27, *((_DWORD *)this + 23));
      double result = v27;
      if (v26) {
        return result;
      }
    }
    char v7 = (google::protobuf::internal *)((char *)result + 2);
LABEL_5:
    char v27 = v7;
    goto LABEL_6;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_State_ExecutionState_Frame::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_State_ExecutionState_Frame *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if ((unint64_t)a2 >= *(void *)a3) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      char v8 = (protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_ExecutionState_Frame_ResponseState>::TypeHandler>((uint64_t)this + 24, i);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          long long v10 = (unsigned __int8 *)(a2 + 3);
          do
          {
            *(v10 - 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          a2[2] = v11;
          long long v10 = (unsigned __int8 *)(a2 + 3);
        }
      }
      else
      {
        a2[1] = v9;
        long long v10 = (unsigned __int8 *)(a2 + 2);
      }
      a2 = (char *)protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::InternalSerializeWithCachedSizesToArray(v8, (char *)v10, a3);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (unsigned __int8 *)a2;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    uint64_t v18 = *(void **)v16;
    uint64_t v17 = *(void *)(v16 + 8);
  }
  else
  {
    LODWORD(v17) = *(unsigned __int8 *)(v16 + 23);
    uint64_t v18 = (void *)v16;
  }
  if (*(void *)a3 - (void)a2 >= (int)v17)
  {
    uint64_t v19 = (int)v17;
    memcpy(a2, v18, (int)v17);
    a2 += v19;
    return (unsigned __int8 *)a2;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v18, v17, (unsigned __int8 *)a2);
}

uint64_t protobuf::Intelligence_State_ExecutionState_Frame::ByteSizeLong(protobuf::Intelligence_State_ExecutionState_Frame *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    unint64_t v4 = (protobuf::Intelligence_State_ExecutionState_Frame_ResponseState **)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((void *)this + 1);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0) {
      uint64_t v11 = *(void *)(v10 + 8);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    }
    v2 += v11;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void protobuf::Intelligence_State_ExecutionState_Frame::CheckTypeAndMergeFrom(protobuf::Intelligence_State_ExecutionState_Frame *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_State_ExecutionState_Frame::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_State_ExecutionState_Frame::MergeFrom(protobuf::Intelligence_State_ExecutionState_Frame *this, const protobuf::Intelligence_State_ExecutionState_Frame *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 12439);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_ExecutionState_Frame_ResponseState>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
}

void sub_239A70F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_ExecutionState_Frame::CopyFrom(protobuf::Intelligence_State_ExecutionState_Frame *this, const protobuf::Intelligence_State_ExecutionState_Frame *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_State_ExecutionState_Frame::Clear(this);
    protobuf::Intelligence_State_ExecutionState_Frame::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_State_ExecutionState_Frame::IsInitialized(protobuf::Intelligence_State_ExecutionState_Frame *this)
{
  return 1;
}

void protobuf::Intelligence_State_ExecutionState_Frame::InternalSwap(protobuf::Intelligence_State_ExecutionState_Frame *this, protobuf::Intelligence_State_ExecutionState_Frame *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v13;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_12:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;

  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_State_ExecutionState_Frame *)((char *)this + 24), (protobuf::Intelligence_State_ExecutionState_Frame *)((char *)a2 + 24));
}

void *protobuf::Intelligence_State_ExecutionState_Frame::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.State.ExecutionState.Frame");
}

protobuf::Intelligence_State_ExecutionState *protobuf::Intelligence_State_ExecutionState::Intelligence_State_ExecutionState(protobuf::Intelligence_State_ExecutionState *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_26ED28B10;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_State_ExecutionState_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_ExecutionState_intelligence_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = 0;
  *((unsigned char *)this + 96) = 0;
  return this;
}

void sub_239A71170(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_ExecutionState *protobuf::Intelligence_State_ExecutionState::Intelligence_State_ExecutionState(protobuf::Intelligence_State_ExecutionState *this, const protobuf::Intelligence_State_ExecutionState *a2)
{
  *(void *)this = &unk_26ED28B10;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_ExecutionState_Frame>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 6);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v7);
    }
  }
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 7);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v8);
    }
  }
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 8);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v9);
    }
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    long long v10 = (uint64_t *)*((void *)a2 + 9);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v10);
    }
  }
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x10) != 0)
  {
    uint64_t v11 = (uint64_t *)*((void *)a2 + 10);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v11);
    }
  }
  uint64_t v12 = *((void *)a2 + 11);
  *((unsigned char *)this + 96) = *((unsigned char *)a2 + 96);
  *((void *)this + 11) = v12;
  return this;
}

void sub_239A712E0(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_ExecutionState::~Intelligence_State_ExecutionState(protobuf::Intelligence_State_ExecutionState *this)
{
  *(void *)this = &unk_26ED28B10;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 8);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 9);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x23ECAACC0](v8, 0x1012C40EC159624);
  }
  uint64_t v10 = *((void *)this + 10);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    MEMORY[0x23ECAACC0](v10, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_State_ExecutionState *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_State_ExecutionState::~Intelligence_State_ExecutionState(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_State_ExecutionState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_State_ExecutionState::default_instance(protobuf::Intelligence_State_ExecutionState *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_State_ExecutionState_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_ExecutionState_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_State_ExecutionState_default_instance_;
}

void protobuf::Intelligence_State_ExecutionState::Clear(protobuf::Intelligence_State_ExecutionState *this)
{
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((v2 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  else if (v2)
  {
    uint64_t v3 = (protobuf::Intelligence_State_ExecutionState_Frame **)(*((void *)this + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      protobuf::Intelligence_State_ExecutionState_Frame::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 0x1F) != 0)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_10;
      }
LABEL_18:
      uint64_t v8 = *((void *)this + 7);
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)uint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_22;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_22;
        }
      }
LABEL_11:
      if ((v6 & 8) == 0) {
        goto LABEL_12;
      }
LABEL_26:
      uint64_t v10 = *((void *)this + 9);
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)uint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        if ((v6 & 0x10) == 0) {
          goto LABEL_33;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
        if ((v6 & 0x10) == 0) {
          goto LABEL_33;
        }
      }
      goto LABEL_30;
    }
    uint64_t v7 = *((void *)this + 6);
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_18;
      }
    }
LABEL_10:
    if ((v6 & 4) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t v9 = *((void *)this + 8);
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_26;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_26;
      }
    }
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_33;
    }
LABEL_30:
    uint64_t v11 = *((void *)this + 10);
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)uint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
    }
  }
LABEL_33:
  if ((v6 & 0x60) != 0)
  {
    *((unsigned char *)this + 96) = 0;
    *((void *)this + 11) = 0;
  }
  char v13 = *((unsigned char *)this + 8);
  uint64_t v12 = (protobuf::Intelligence_State_ExecutionState *)((char *)this + 8);
  *((_DWORD *)v12 + 2) = 0;
  if (v13)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v12);
  }
}

void sub_239A716DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *protobuf::Intelligence_State_ExecutionState::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v36 = a2;
  int v5 = 0;
  if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v36, *((_DWORD *)this + 23)))
  {
LABEL_2:
    TagFallbacint k = (char *)v36;
    goto LABEL_63;
  }
  while (2)
  {
    TagFallbacint k = (char *)v36 + 1;
    LODWORD(v7) = *(unsigned __int8 *)v36;
    if (*(char *)v36 < 0)
    {
      uint64_t v7 = (const char *)(v7 + (*TagFallback << 7) - 128);
      if (*TagFallback < 0)
      {
        TagFallbacint k = (char *)google::protobuf::internal::ReadTagFallback(v36, v7);
        uint64_t v36 = (google::protobuf::internal *)TagFallback;
        if (!TagFallback) {
          goto LABEL_63;
        }
        goto LABEL_7;
      }
      TagFallbacint k = (char *)v36 + 2;
    }
    uint64_t v36 = (google::protobuf::internal *)TagFallback;
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v8 = *(std::string **)(a1 + 48);
        if (v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 48, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_52;
      case 2u:
        if (v7 != 18) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v8 = *(std::string **)(a1 + 56);
        if (v8 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_52;
        }
        uint64_t v9 = a1 + 56;
        goto LABEL_51;
      case 3u:
        if (v7 != 24) {
          goto LABEL_56;
        }
        v5 |= 0x40u;
        uint64_t v10 = (google::protobuf::internal *)(TagFallback + 1);
        unint64_t v11 = *TagFallback;
        if ((*TagFallback & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v12 = *(char *)v10;
        unint64_t v11 = v11 + (v12 << 7) - 128;
        if (v12 < 0)
        {
          uint64_t v33 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, v11);
          uint64_t v36 = v33;
          *(unsigned char *)(a1 + 96) = v34 != 0;
          if (!v33) {
            goto LABEL_62;
          }
        }
        else
        {
          uint64_t v10 = (google::protobuf::internal *)(TagFallback + 2);
LABEL_20:
          uint64_t v36 = v10;
          *(unsigned char *)(a1 + 96) = v11 != 0;
        }
        goto LABEL_54;
      case 4u:
        if (v7 != 34) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v8 = *(std::string **)(a1 + 64);
        if (v8 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_52;
        }
        uint64_t v9 = a1 + 64;
        goto LABEL_51;
      case 5u:
        if (v7 != 42) {
          goto LABEL_56;
        }
        char v13 = (google::protobuf::internal *)(TagFallback - 1);
        while (2)
        {
          char v14 = (google::protobuf::internal *)((char *)v13 + 1);
          uint64_t v36 = v14;
          uint64_t v15 = *(int **)(a1 + 40);
          if (!v15)
          {
            int v17 = *(_DWORD *)(a1 + 36);
LABEL_31:
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v17 + 1);
            uint64_t v15 = *(int **)(a1 + 40);
            int v17 = *v15;
            goto LABEL_32;
          }
          uint64_t v16 = *(int *)(a1 + 32);
          int v17 = *v15;
          if ((int)v16 < *v15)
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            uint64_t v18 = *(protobuf::Intelligence_State_ExecutionState_Frame **)&v15[2 * v16 + 2];
            goto LABEL_33;
          }
          if (v17 == *(_DWORD *)(a1 + 36)) {
            goto LABEL_31;
          }
LABEL_32:
          int *v15 = v17 + 1;
          uint64_t v18 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_ExecutionState_Frame>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
          uint64_t v19 = *(void *)(a1 + 40);
          uint64_t v20 = *(int *)(a1 + 32);
          *(_DWORD *)(a1 + 32) = v20 + 1;
          *(void *)(v19 + 8 * v20 + 8) = v18;
          char v14 = v36;
LABEL_33:
          unsigned int v21 = *(unsigned __int8 *)v14;
          if (*(char *)v14 < 0)
          {
            SizeFallbacint k = google::protobuf::internal::ReadSizeFallback(v14, (const char *)*(unsigned __int8 *)v14);
            if (!SizeFallback) {
              break;
            }
            BOOL v22 = SizeFallback;
            unsigned int v21 = v24;
          }
          else
          {
            BOOL v22 = (char *)v14 + 1;
          }
          int v25 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v22, v21);
          int v26 = *((_DWORD *)this + 22);
          BOOL v27 = __OFSUB__(v26--, 1);
          *((_DWORD *)this + 22) = v26;
          if (v26 < 0 == v27)
          {
            int v28 = v25;
            char v13 = protobuf::Intelligence_State_ExecutionState_Frame::_InternalParse((uint64_t)v18, (google::protobuf::internal *)v22, this);
            if (v13)
            {
              ++*((_DWORD *)this + 22);
              if (!*((_DWORD *)this + 20))
              {
                int v29 = *((_DWORD *)this + 7) + v28;
                *((_DWORD *)this + 7) = v29;
                unint64_t v30 = *((void *)this + 1) + (v29 & (v29 >> 31));
                *(void *)this = v30;
                uint64_t v36 = v13;
                if (v30 <= (unint64_t)v13 || *(unsigned char *)v13 != 42) {
                  goto LABEL_54;
                }
                continue;
              }
            }
          }
          break;
        }
LABEL_62:
        TagFallbacint k = 0;
LABEL_63:
        *(_DWORD *)(a1 + 16) |= v5;
        return TagFallback;
      case 6u:
        if (v7 != 50) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v8 = *(std::string **)(a1 + 72);
        if (v8 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_52;
        }
        uint64_t v9 = a1 + 72;
        goto LABEL_51;
      case 7u:
        if (v7 != 57) {
          goto LABEL_56;
        }
        v5 |= 0x20u;
        *(void *)(a1 + 88) = *(void *)TagFallback;
        uint64_t v36 = (google::protobuf::internal *)(TagFallback + 8);
        goto LABEL_54;
      case 8u:
        if (v7 != 66) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v8 = *(std::string **)(a1 + 80);
        if (v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          uint64_t v9 = a1 + 80;
LABEL_51:
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v9, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
LABEL_52:
        uint64_t v31 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v8, TagFallback, (uint64_t)this);
        goto LABEL_53;
      default:
LABEL_56:
        if (v7) {
          BOOL v32 = (v7 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (v32)
        {
          *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v7 - 1;
          goto LABEL_63;
        }
        uint64_t v31 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v7, (unint64_t *)(a1 + 8), (google::protobuf::internal *)TagFallback, this);
LABEL_53:
        uint64_t v36 = v31;
        if (!v31) {
          goto LABEL_62;
        }
LABEL_54:
        if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v36, *((_DWORD *)this + 23)))goto LABEL_2; {
        continue;
        }
    }
  }
}

unsigned __int8 *protobuf::Intelligence_State_ExecutionState::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_State_ExecutionState *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 6), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 7), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_26:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v17 = *((unsigned char *)this + 96);
  *uint64_t v4 = 24;
  v4[1] = v17;
  v4 += 2;
  if ((v6 & 4) != 0) {
LABEL_5:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 8), v4);
LABEL_6:
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v9 = (protobuf::Intelligence_State_ExecutionState_Frame *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_ExecutionState_Frame>::TypeHandler>((uint64_t)this + 24, i);
      *uint64_t v4 = 42;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          unint64_t v11 = v4 + 3;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          std::string v4[2] = v12;
          unint64_t v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        unint64_t v11 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_State_ExecutionState_Frame::InternalSerializeWithCachedSizesToArray(v9, v11, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 9), v4);
    if ((v6 & 0x20) == 0)
    {
LABEL_20:
      if ((v6 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_20;
  }
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  uint64_t v18 = *((void *)this + 11);
  *uint64_t v4 = 57;
  *(void *)(v4 + 1) = v18;
  v4 += 9;
  if ((v6 & 0x10) != 0) {
LABEL_21:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 10), v4);
LABEL_22:
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v19 = v15 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v19 + 23) < 0)
  {
    unsigned int v21 = *(void **)v19;
    uint64_t v20 = *(void *)(v19 + 8);
  }
  else
  {
    LODWORD(v2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *(unsigned __int8 *)(v19 + 23);
    unsigned int v21 = (void *)v19;
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v22 = (int)v20;
    memcpy(v4, v21, (int)v20);
    v4 += v22;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v21, v20, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_State_ExecutionState::ByteSizeLong(protobuf::Intelligence_State_ExecutionState *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (protobuf::Intelligence_State_ExecutionState_Frame **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_State_ExecutionState_Frame::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *((_DWORD *)this + 4);
  if ((v8 & 0x7F) == 0) {
    goto LABEL_23;
  }
  if (v8)
  {
    uint64_t v15 = *((void *)this + 6);
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_31;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v18 = *((void *)this + 7);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t v24 = *((void *)this + 9);
    uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v26 = *(void *)(v24 + 8);
    if ((v25 & 0x80u) == 0) {
      uint64_t v26 = v25;
    }
    v2 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_31:
  uint64_t v21 = *((void *)this + 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v2 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0) {
    goto LABEL_34;
  }
LABEL_14:
  if ((v8 & 0x10) != 0)
  {
LABEL_15:
    uint64_t v9 = *((void *)this + 10);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_18:
  uint64_t v12 = v2 + 9;
  if ((v8 & 0x20) == 0) {
    uint64_t v12 = v2;
  }
  if ((v8 & 0x40) != 0) {
    uint64_t v2 = v12 + 2;
  }
  else {
    uint64_t v2 = v12;
  }
LABEL_23:
  uint64_t v13 = *((void *)this + 1);
  if (v13)
  {
    unint64_t v27 = v13 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v27 + 23) < 0) {
      uint64_t v28 = *(void *)(v27 + 8);
    }
    else {
      uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
    }
    v2 += v28;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void protobuf::Intelligence_State_ExecutionState::CheckTypeAndMergeFrom(protobuf::Intelligence_State_ExecutionState *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_State_ExecutionState::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_State_ExecutionState::MergeFrom(protobuf::Intelligence_State_ExecutionState *this, const protobuf::Intelligence_State_ExecutionState *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 12841);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_ExecutionState_Frame>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x7F) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 6);
      *((_DWORD *)this + 4) |= 1u;
      int v8 = (const std::string *)*((void *)a2 + 6);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 7);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 7);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 8);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 8);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      uint64_t v13 = (std::string *)*((void *)this + 9);
      *((_DWORD *)this + 4) |= 8u;
      unsigned int v14 = (const std::string *)*((void *)a2 + 9);
      if (v13 != v14)
      {
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      uint64_t v15 = (std::string *)*((void *)this + 10);
      *((_DWORD *)this + 4) |= 0x10u;
      uint64_t v16 = (const std::string *)*((void *)a2 + 10);
      if (v15 != v16)
      {
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v16);
        }
        std::string::operator=(v15, v16);
      }
    }
    if ((v6 & 0x20) != 0) {
      *((void *)this + 11) = *((void *)a2 + 11);
    }
    if ((v6 & 0x40) != 0) {
      *((unsigned char *)this + 96) = *((unsigned char *)a2 + 96);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_239A722E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State_ExecutionState::CopyFrom(protobuf::Intelligence_State_ExecutionState *this, const protobuf::Intelligence_State_ExecutionState *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_State_ExecutionState::Clear(this);
    protobuf::Intelligence_State_ExecutionState::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_State_ExecutionState::IsInitialized(protobuf::Intelligence_State_ExecutionState *this)
{
  return 1;
}

double protobuf::Intelligence_State_ExecutionState::InternalSwap(protobuf::Intelligence_State_ExecutionState *this, protobuf::Intelligence_State_ExecutionState *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v45;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_40;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_40:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_State_ExecutionState *)((char *)this + 24), (protobuf::Intelligence_State_ExecutionState *)((char *)a2 + 24));
  uint64_t v13 = (uint64_t *)*((void *)this + 6);
  unsigned int v14 = (uint64_t **)((char *)a2 + 48);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v13 = (uint64_t *)*((void *)this + 6);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v15;
  std::string v13[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 7);
  uint64_t v20 = (uint64_t **)((char *)a2 + 56);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 7);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  uint64_t v25 = (uint64_t *)*((void *)this + 8);
  uint64_t v26 = (uint64_t **)((char *)a2 + 64);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v25 = (uint64_t *)*((void *)this + 8);
  }
  unint64_t v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)unint64_t v27 = v29;
  v27[2] = v28;
LABEL_26:
  uint64_t v31 = (uint64_t *)*((void *)this + 9);
  BOOL v32 = (uint64_t **)((char *)a2 + 72);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v31 = (uint64_t *)*((void *)this + 9);
  }
  uint64_t v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v33 = *v32;
  }
  uint64_t v34 = v31[2];
  long long v35 = *(_OWORD *)v31;
  uint64_t v36 = v33[2];
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v33;
  void v31[2] = v36;
  *(_OWORD *)uint64_t v33 = v35;
  std::string v33[2] = v34;
LABEL_32:
  uint64_t v37 = (uint64_t *)*((void *)this + 10);
  uint64_t v38 = (uint64_t **)((char *)a2 + 80);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_38;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v37 = (uint64_t *)*((void *)this + 10);
  }
  uint64_t v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v39 = *v38;
  }
  uint64_t v40 = v37[2];
  long long v41 = *(_OWORD *)v37;
  uint64_t v42 = v39[2];
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v39;
  std::string v37[2] = v42;
  *(_OWORD *)uint64_t v39 = v41;
  v39[2] = v40;
LABEL_38:
  double result = *((double *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((double *)a2 + 11) = result;
  char v44 = *((unsigned char *)this + 96);
  *((unsigned char *)this + 96) = *((unsigned char *)a2 + 96);
  *((unsigned char *)a2 + 96) = v44;
  return result;
}

void *protobuf::Intelligence_State_ExecutionState::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.State.ExecutionState");
}

protobuf::Intelligence_State *protobuf::Intelligence_State::Intelligence_State(protobuf::Intelligence_State *this)
{
  *(void *)this = &unk_26ED28BA0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 12siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((void *)this + 25) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_State_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_intelligence_2eproto);
  }
  *((void *)this + 26) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 27) = 0;
  *((void *)this + 28) = 0;
  *((void *)this + 29) = 0;
  return this;
}

void sub_239A72788(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 184));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 160));
  google::protobuf::RepeatedField<int>::~RepeatedField(v2 + 144);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 120));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 96));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 72));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 48));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State *protobuf::Intelligence_State::Intelligence_State(protobuf::Intelligence_State *this, const protobuf::Intelligence_State *a2)
{
  *(void *)this = &unk_26ED28BA0;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Memory>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Memory>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  *((void *)this + 9) = 0;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((void *)this + 11) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Response>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_ExecutionState>::TypeHandler>((int **)this + 12, (uint64_t)a2 + 96);
  *((void *)this + 15) = 0;
  *((void *)this + 16) = 0;
  *((void *)this + 17) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_InputGroup>::TypeHandler>((int **)this + 15, (uint64_t)a2 + 120);
  google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)this + 144, (int *)a2 + 36);
  *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((void *)this + 21) = 0;
  *((void *)this + 22) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Timer>::TypeHandler>((int **)this + 20, (uint64_t)a2 + 160);
  *((void *)this + 23) = 0;
  *((void *)this + 24) = 0;
  *((void *)this + 25) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Event>::TypeHandler>((int **)this + 23, (uint64_t)a2 + 184);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 26) = &google::protobuf::internal::fixed_address_empty_string;
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 26);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 208, (uint64_t)v6);
    }
  }
  long long v7 = *(_OWORD *)((char *)a2 + 216);
  *((void *)this + 29) = *((void *)a2 + 29);
  *(_OWORD *)((char *)this + 216) = v7;
  return this;
}

void sub_239A72988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, google::protobuf::internal::RepeatedPtrFieldBase *a10)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v11);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v17);
  google::protobuf::RepeatedField<int>::~RepeatedField(v16);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v15);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v14);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v13);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v12);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(a10);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v10);
  _Unwind_Resume(a1);
}

void sub_239A72A14()
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v0);
  JUMPOUT(0x239A729ECLL);
}

void sub_239A72A24()
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v0);
  JUMPOUT(0x239A729F4);
}

void sub_239A72A34()
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v0);
  JUMPOUT(0x239A729FCLL);
}

void sub_239A72A44()
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v0);
  JUMPOUT(0x239A72A04);
}

void protobuf::Intelligence_State::~Intelligence_State(protobuf::Intelligence_State *this)
{
  *(void *)this = &unk_26ED28BA0;
  uint64_t v2 = *((void *)this + 26);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_State *)((char *)this + 184));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_State *)((char *)this + 160));
  google::protobuf::RepeatedField<int>::~RepeatedField((char *)this + 144);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_State *)((char *)this + 120));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_State *)((char *)this + 96));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_State *)((char *)this + 72));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_State *)((char *)this + 48));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_State *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_State::~Intelligence_State(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_State::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_State::default_instance(protobuf::Intelligence_State *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_State_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_State_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_State_default_instance_;
}

void protobuf::Intelligence_State::Clear(protobuf::Intelligence_State *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Memory>::TypeHandler>((uint64_t)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Memory>::TypeHandler>((uint64_t)this + 48);
  uint64_t v2 = *((unsigned int *)this + 20);
  if ((v2 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
  }
  else if (v2)
  {
    uint64_t v3 = (protobuf::Intelligence_State_Response **)(*((void *)this + 11) + 8);
    do
    {
      unint64_t v4 = *v3++;
      protobuf::Intelligence_State_Response::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 26);
  if ((v6 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
  }
  else if (v6)
  {
    long long v7 = (protobuf::Intelligence_State_ExecutionState **)(*((void *)this + 14) + 8);
    do
    {
      unint64_t v8 = *v7++;
      protobuf::Intelligence_State_ExecutionState::Clear(v8);
      --v6;
    }
    while (v6);
    *((_DWORD *)this + 26) = 0;
  }
  uint64_t v10 = *((unsigned int *)this + 32);
  if ((v10 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v13 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v13->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
  }
  else if (v10)
  {
    uint64_t v11 = (protobuf::Intelligence_State_InputGroup **)(*((void *)this + 17) + 8);
    do
    {
      int v12 = *v11++;
      protobuf::Intelligence_State_InputGroup::Clear(v12);
      --v10;
    }
    while (v10);
    *((_DWORD *)this + 32) = 0;
  }
  *((_DWORD *)this + 36) = 0;
  uint64_t v14 = *((unsigned int *)this + 42);
  if ((v14 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    long long v17 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v17->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
  }
  else if (v14)
  {
    uint64_t v15 = (protobuf::Intelligence_State_Timer **)(*((void *)this + 22) + 8);
    do
    {
      uint64_t v16 = *v15++;
      protobuf::Intelligence_State_Timer::Clear(v16);
      --v14;
    }
    while (v14);
    *((_DWORD *)this + 42) = 0;
  }
  uint64_t v18 = *((unsigned int *)this + 48);
  if ((v18 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v21 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v21->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
  }
  else if (v18)
  {
    uint64_t v19 = (protobuf::Intelligence_State_Event **)(*((void *)this + 25) + 8);
    do
    {
      uint64_t v20 = *v19++;
      protobuf::Intelligence_State_Event::Clear(v20);
      --v18;
    }
    while (v18);
    *((_DWORD *)this + 48) = 0;
  }
  int v22 = *((_DWORD *)this + 4);
  if (v22)
  {
    uint64_t v23 = *((void *)this + 26);
    if (*(char *)(v23 + 23) < 0)
    {
      **(unsigned char **)uint64_t v23 = 0;
      *(void *)(v23 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v23 = 0;
      *(unsigned char *)(v23 + 23) = 0;
    }
  }
  if ((v22 & 0xE) != 0)
  {
    *((void *)this + 27) = 0;
    *((void *)this + 28) = 0;
    *((void *)this + 29) = 0;
  }
  char v25 = *((unsigned char *)this + 8);
  uint64_t v24 = (protobuf::Intelligence_State *)((char *)this + 8);
  *((_DWORD *)v24 + 2) = 0;
  if (v25)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v24);
  }
}

void sub_239A72E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *protobuf::Intelligence_State::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v127 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v127, *((_DWORD *)this + 23)) & 1) == 0)
  {
    long long v7 = (int *)(a1 + 144);
    while (2)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v127 + 1);
      LODWORD(v8) = *(unsigned __int8 *)v127;
      if (*(char *)v127 < 0)
      {
        unint64_t v8 = (const char *)(v8 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v127, v8);
          uint64_t v127 = TagFallback;
          if (!TagFallback) {
            goto LABEL_166;
          }
          goto LABEL_8;
        }
        TagFallbacint k = (google::protobuf::internal *)((char *)v127 + 2);
      }
      uint64_t v127 = TagFallback;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_157;
          }
          uint64_t v9 = (char *)TagFallback - 1;
          while (1)
          {
            uint64_t v10 = (google::protobuf::internal *)(v9 + 1);
            uint64_t v127 = (google::protobuf::internal *)(v9 + 1);
            uint64_t v11 = *(int **)(a1 + 40);
            if (!v11) {
              break;
            }
            uint64_t v12 = *(int *)(a1 + 32);
            int v13 = *v11;
            if ((int)v12 >= *v11)
            {
              if (v13 == *(_DWORD *)(a1 + 36))
              {
LABEL_16:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v13 + 1);
                uint64_t v11 = *(int **)(a1 + 40);
                int v13 = *v11;
              }
              int *v11 = v13 + 1;
              uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Memory>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
              uint64_t v15 = *(void *)(a1 + 40);
              uint64_t v16 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + 32) = v16 + 1;
              *(void *)(v15 + 8 * v16 + 8) = v14;
              uint64_t v10 = v127;
              goto LABEL_18;
            }
            *(_DWORD *)(a1 + 32) = v12 + 1;
            uint64_t v14 = *(protobuf::Intelligence_State_Memory **)&v11[2 * v12 + 2];
LABEL_18:
            uint64_t v9 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_State_Memory>(this, (uint64_t)v14, v10);
            uint64_t v127 = (google::protobuf::internal *)v9;
            if (!v9) {
              goto LABEL_165;
            }
            if (*(void *)this <= (unint64_t)v9 || *v9 != 10) {
              goto LABEL_163;
            }
          }
          int v13 = *(_DWORD *)(a1 + 36);
          goto LABEL_16;
        case 2u:
          if (v8 != 18) {
            goto LABEL_157;
          }
          long long v17 = (char *)TagFallback - 1;
          while (1)
          {
            uint64_t v18 = (google::protobuf::internal *)(v17 + 1);
            uint64_t v127 = (google::protobuf::internal *)(v17 + 1);
            uint64_t v19 = *(int **)(a1 + 64);
            if (!v19) {
              break;
            }
            uint64_t v20 = *(int *)(a1 + 56);
            int v21 = *v19;
            if ((int)v20 >= *v19)
            {
              if (v21 == *(_DWORD *)(a1 + 60))
              {
LABEL_31:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v21 + 1);
                uint64_t v19 = *(int **)(a1 + 64);
                int v21 = *v19;
              }
              *uint64_t v19 = v21 + 1;
              int v22 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Memory>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
              uint64_t v23 = *(void *)(a1 + 64);
              uint64_t v24 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v24 + 1;
              *(void *)(v23 + 8 * v24 + 8) = v22;
              uint64_t v18 = v127;
              goto LABEL_33;
            }
            *(_DWORD *)(a1 + 56) = v20 + 1;
            int v22 = *(protobuf::Intelligence_State_Memory **)&v19[2 * v20 + 2];
LABEL_33:
            long long v17 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_State_Memory>(this, (uint64_t)v22, v18);
            uint64_t v127 = (google::protobuf::internal *)v17;
            if (!v17) {
              goto LABEL_165;
            }
            if (*(void *)this <= (unint64_t)v17 || *v17 != 18) {
              goto LABEL_163;
            }
          }
          int v21 = *(_DWORD *)(a1 + 60);
          goto LABEL_31;
        case 3u:
          if (v8 != 26) {
            goto LABEL_157;
          }
          char v25 = (google::protobuf::internal *)((char *)TagFallback - 1);
          while (2)
          {
            char v26 = (google::protobuf::internal *)((char *)v25 + 1);
            uint64_t v127 = v26;
            unint64_t v27 = *(int **)(a1 + 88);
            if (v27)
            {
              uint64_t v28 = *(int *)(a1 + 80);
              int v29 = *v27;
              if ((int)v28 < *v27)
              {
                *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v28 + 1;
                uint64_t v30 = *(protobuf::Intelligence_State_Response **)&v27[2 * v28 + 2];
                goto LABEL_46;
              }
              if (v29 != *(_DWORD *)(a1 + 84))
              {
LABEL_45:
                *unint64_t v27 = v29 + 1;
                uint64_t v30 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Response>(*(google::protobuf::internal::ArenaImpl **)(a1 + 72));
                uint64_t v31 = *(void *)(a1 + 88);
                uint64_t v32 = *(int *)(a1 + 80);
                *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v32 + 1;
                *(void *)(v31 + 8 * v32 + 8) = v30;
                char v26 = v127;
LABEL_46:
                unsigned int v33 = *(unsigned __int8 *)v26;
                if (*(char *)v26 < 0)
                {
                  SizeFallbacint k = google::protobuf::internal::ReadSizeFallback(v26, (const char *)*(unsigned __int8 *)v26);
                  if (!SizeFallback) {
                    goto LABEL_165;
                  }
                  uint64_t v34 = SizeFallback;
                  unsigned int v33 = v36;
                }
                else
                {
                  uint64_t v34 = (char *)v26 + 1;
                }
                int v37 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v34, v33);
                int v38 = *((_DWORD *)this + 22);
                BOOL v39 = __OFSUB__(v38--, 1);
                *((_DWORD *)this + 22) = v38;
                if (v38 < 0 == v39)
                {
                  int v40 = v37;
                  char v25 = protobuf::Intelligence_State_Response::_InternalParse((uint64_t)v30, (google::protobuf::internal *)v34, this);
                  if (v25)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v41 = *((_DWORD *)this + 7) + v40;
                      *((_DWORD *)this + 7) = v41;
                      unint64_t v42 = *((void *)this + 1) + (v41 & (v41 >> 31));
                      *(void *)this = v42;
                      uint64_t v127 = v25;
                      if (v42 <= (unint64_t)v25 || *(unsigned char *)v25 != 26) {
                        goto LABEL_163;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_165;
              }
            }
            else
            {
              int v29 = *(_DWORD *)(a1 + 84);
            }
            break;
          }
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v29 + 1);
          unint64_t v27 = *(int **)(a1 + 88);
          int v29 = *v27;
          goto LABEL_45;
        case 4u:
          if (v8 != 34) {
            goto LABEL_157;
          }
          uint64_t v43 = (char *)TagFallback - 1;
          while (2)
          {
            char v44 = (google::protobuf::internal *)(v43 + 1);
            uint64_t v127 = v44;
            unint64_t v45 = *(int **)(a1 + 112);
            if (v45)
            {
              uint64_t v46 = *(int *)(a1 + 104);
              int v47 = *v45;
              if ((int)v46 < *v45)
              {
                *(_DWORD *)(a1 + 104) = v46 + 1;
                unint64_t v48 = *(protobuf::Intelligence_State_ExecutionState **)&v45[2 * v46 + 2];
                goto LABEL_65;
              }
              if (v47 != *(_DWORD *)(a1 + 108))
              {
LABEL_64:
                *unint64_t v45 = v47 + 1;
                unint64_t v48 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_ExecutionState>(*(google::protobuf::internal::ArenaImpl **)(a1 + 96));
                uint64_t v49 = *(void *)(a1 + 112);
                uint64_t v50 = *(int *)(a1 + 104);
                *(_DWORD *)(a1 + 104) = v50 + 1;
                *(void *)(v49 + 8 * v50 + 8) = v48;
                char v44 = v127;
LABEL_65:
                unsigned int v51 = *(unsigned __int8 *)v44;
                if (*(char *)v44 < 0)
                {
                  char v53 = google::protobuf::internal::ReadSizeFallback(v44, (const char *)*(unsigned __int8 *)v44);
                  if (!v53) {
                    goto LABEL_165;
                  }
                  char v52 = v53;
                  unsigned int v51 = v54;
                }
                else
                {
                  char v52 = (char *)v44 + 1;
                }
                int v55 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v52, v51);
                int v56 = *((_DWORD *)this + 22);
                BOOL v39 = __OFSUB__(v56--, 1);
                *((_DWORD *)this + 22) = v56;
                if (v56 < 0 == v39)
                {
                  int v57 = v55;
                  uint64_t v43 = protobuf::Intelligence_State_ExecutionState::_InternalParse((uint64_t)v48, (google::protobuf::internal *)v52, this);
                  if (v43)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v58 = *((_DWORD *)this + 7) + v57;
                      *((_DWORD *)this + 7) = v58;
                      unint64_t v59 = *((void *)this + 1) + (v58 & (v58 >> 31));
                      *(void *)this = v59;
                      uint64_t v127 = (google::protobuf::internal *)v43;
                      if (v59 <= (unint64_t)v43 || *v43 != 34) {
                        goto LABEL_163;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_165;
              }
            }
            else
            {
              int v47 = *(_DWORD *)(a1 + 108);
            }
            break;
          }
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 96), v47 + 1);
          unint64_t v45 = *(int **)(a1 + 112);
          int v47 = *v45;
          goto LABEL_64;
        case 5u:
          if (v8 != 42) {
            goto LABEL_157;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          int v60 = *(std::string **)(a1 + 208);
          if (v60 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 208, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          unint64_t v61 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v60, (std::string::value_type *)TagFallback, (uint64_t)this);
          goto LABEL_162;
        case 6u:
          if (v8 != 50) {
            goto LABEL_157;
          }
          uint64_t v62 = (google::protobuf::internal *)((char *)TagFallback - 1);
          while (2)
          {
            unint64_t v63 = (google::protobuf::internal *)((char *)v62 + 1);
            uint64_t v127 = v63;
            int v64 = *(int **)(a1 + 136);
            if (v64)
            {
              uint64_t v65 = *(int *)(a1 + 128);
              int v66 = *v64;
              if ((int)v65 < *v64)
              {
                *(_DWORD *)(a1 + 128) = v65 + 1;
                int v67 = *(protobuf::Intelligence_State_InputGroup **)&v64[2 * v65 + 2];
                goto LABEL_88;
              }
              if (v66 != *(_DWORD *)(a1 + 132))
              {
LABEL_87:
                int *v64 = v66 + 1;
                int v67 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_InputGroup>(*(google::protobuf::internal::ArenaImpl **)(a1 + 120));
                uint64_t v68 = *(void *)(a1 + 136);
                uint64_t v69 = *(int *)(a1 + 128);
                *(_DWORD *)(a1 + 128) = v69 + 1;
                *(void *)(v68 + 8 * v69 + 8) = v67;
                unint64_t v63 = v127;
LABEL_88:
                unsigned int v70 = *(unsigned __int8 *)v63;
                if (*(char *)v63 < 0)
                {
                  uint64_t v72 = google::protobuf::internal::ReadSizeFallback(v63, (const char *)*(unsigned __int8 *)v63);
                  if (!v72) {
                    goto LABEL_165;
                  }
                  long long v71 = v72;
                  unsigned int v70 = v73;
                }
                else
                {
                  long long v71 = (char *)v63 + 1;
                }
                int v74 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v71, v70);
                int v75 = *((_DWORD *)this + 22);
                BOOL v39 = __OFSUB__(v75--, 1);
                *((_DWORD *)this + 22) = v75;
                if (v75 < 0 == v39)
                {
                  int v76 = v74;
                  uint64_t v62 = protobuf::Intelligence_State_InputGroup::_InternalParse((uint64_t)v67, (google::protobuf::internal *)v71, this);
                  if (v62)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v77 = *((_DWORD *)this + 7) + v76;
                      *((_DWORD *)this + 7) = v77;
                      unint64_t v78 = *((void *)this + 1) + (v77 & (v77 >> 31));
                      *(void *)this = v78;
                      uint64_t v127 = v62;
                      if (v78 <= (unint64_t)v62 || *(unsigned char *)v62 != 50) {
                        goto LABEL_163;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_165;
              }
            }
            else
            {
              int v66 = *(_DWORD *)(a1 + 132);
            }
            break;
          }
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 120), v66 + 1);
          int v64 = *(int **)(a1 + 136);
          int v66 = *v64;
          goto LABEL_87;
        case 7u:
          if (v8 == 56)
          {
            uint64_t v79 = (google::protobuf::internal *)((char *)TagFallback - 1);
            while (1)
            {
              uint64_t v127 = (google::protobuf::internal *)((char *)v79 + 1);
              int v80 = *((unsigned __int8 *)v79 + 1);
              uint64_t v81 = (google::protobuf::internal *)((char *)v79 + 2);
              if (*((char *)v79 + 1) < 0)
              {
                int v82 = v80 + (*(unsigned __int8 *)v81 << 7);
                int v80 = v82 - 128;
                if (*(char *)v81 < 0)
                {
                  uint64_t v81 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)((char *)v79 + 1), (v82 - 128));
                  int v80 = v83;
                }
                else
                {
                  uint64_t v81 = (google::protobuf::internal *)((char *)v79 + 3);
                }
              }
              uint64_t v127 = v81;
              int v84 = *(_DWORD *)(a1 + 144);
              if (v84 == *(_DWORD *)(a1 + 148)) {
                google::protobuf::RepeatedField<int>::Reserve((int *)(a1 + 144), v84 + 1);
              }
              uint64_t v85 = google::protobuf::RepeatedField<int>::elements(a1 + 144);
              uint64_t v86 = *v7;
              *long long v7 = v86 + 1;
              *(_DWORD *)(v85 + 4 * v86) = v80;
              uint64_t v79 = v127;
              if (!v127) {
                goto LABEL_165;
              }
              if (*(void *)this <= (unint64_t)v127 || *(unsigned char *)v127 != 56) {
                goto LABEL_163;
              }
            }
          }
          if (v8 == 58)
          {
            unint64_t v61 = (google::protobuf::internal *)google::protobuf::internal::PackedInt32Parser((int *)(a1 + 144), TagFallback, this);
          }
          else
          {
LABEL_157:
            if (v8) {
              BOOL v125 = (v8 & 7) == 4;
            }
            else {
              BOOL v125 = 1;
            }
            if (v125)
            {
              *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
              goto LABEL_166;
            }
            unint64_t v61 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), TagFallback, this);
          }
LABEL_162:
          uint64_t v127 = v61;
          if (!v61) {
            goto LABEL_165;
          }
LABEL_163:
          if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v127, *((_DWORD *)this + 23)))break; {
          continue;
          }
        case 9u:
          if (v8 != 73) {
            goto LABEL_157;
          }
          uint64_t v88 = *(void *)TagFallback;
          uint64_t v87 = (google::protobuf::internal *)((char *)TagFallback + 8);
          v5 |= 2u;
          *(void *)(a1 + 216) = v88;
          goto LABEL_135;
        case 0xAu:
          if (v8 != 82) {
            goto LABEL_157;
          }
          long long v89 = (char *)TagFallback - 1;
          while (2)
          {
            uint64_t v90 = (google::protobuf::internal *)(v89 + 1);
            uint64_t v127 = v90;
            unsigned int v91 = *(int **)(a1 + 176);
            if (!v91)
            {
              int v93 = *(_DWORD *)(a1 + 172);
LABEL_119:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 160), v93 + 1);
              unsigned int v91 = *(int **)(a1 + 176);
              int v93 = *v91;
              goto LABEL_120;
            }
            uint64_t v92 = *(int *)(a1 + 168);
            int v93 = *v91;
            if ((int)v92 < *v91)
            {
              *(_DWORD *)(a1 + 168) = v92 + 1;
              int v94 = *(protobuf::Intelligence_State_Timer **)&v91[2 * v92 + 2];
              goto LABEL_121;
            }
            if (v93 == *(_DWORD *)(a1 + 172)) {
              goto LABEL_119;
            }
LABEL_120:
            *unsigned int v91 = v93 + 1;
            int v94 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Timer>(*(google::protobuf::internal::ArenaImpl **)(a1 + 160));
            uint64_t v95 = *(void *)(a1 + 176);
            uint64_t v96 = *(int *)(a1 + 168);
            *(_DWORD *)(a1 + 168) = v96 + 1;
            *(void *)(v95 + 8 * v96 + 8) = v94;
            uint64_t v90 = v127;
LABEL_121:
            unsigned int v97 = *(unsigned __int8 *)v90;
            if (*(char *)v90 < 0)
            {
              int v99 = google::protobuf::internal::ReadSizeFallback(v90, (const char *)*(unsigned __int8 *)v90);
              if (!v99) {
                goto LABEL_165;
              }
              unint64_t v98 = v99;
              unsigned int v97 = v100;
            }
            else
            {
              unint64_t v98 = (char *)v90 + 1;
            }
            int v101 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v98, v97);
            int v102 = *((_DWORD *)this + 22);
            BOOL v39 = __OFSUB__(v102--, 1);
            *((_DWORD *)this + 22) = v102;
            if (v102 < 0 == v39)
            {
              int v103 = v101;
              long long v89 = protobuf::Intelligence_State_Timer::_InternalParse((uint64_t)v94, (google::protobuf::internal *)v98, this);
              if (v89)
              {
                ++*((_DWORD *)this + 22);
                if (!*((_DWORD *)this + 20))
                {
                  int v104 = *((_DWORD *)this + 7) + v103;
                  *((_DWORD *)this + 7) = v104;
                  unint64_t v105 = *((void *)this + 1) + (v104 & (v104 >> 31));
                  *(void *)this = v105;
                  uint64_t v127 = (google::protobuf::internal *)v89;
                  if (v105 <= (unint64_t)v89 || *v89 != 82) {
                    goto LABEL_163;
                  }
                  continue;
                }
              }
            }
            goto LABEL_165;
          }
        case 0xCu:
          if (v8 != 97) {
            goto LABEL_157;
          }
          uint64_t v106 = *(void *)TagFallback;
          uint64_t v87 = (google::protobuf::internal *)((char *)TagFallback + 8);
          v5 |= 4u;
          *(void *)(a1 + 224) = v106;
          goto LABEL_135;
        case 0xDu:
          if (v8 != 105) {
            goto LABEL_157;
          }
          uint64_t v107 = *(void *)TagFallback;
          uint64_t v87 = (google::protobuf::internal *)((char *)TagFallback + 8);
          v5 |= 8u;
          *(void *)(a1 + 232) = v107;
LABEL_135:
          uint64_t v127 = v87;
          goto LABEL_163;
        case 0xEu:
          if (v8 != 114) {
            goto LABEL_157;
          }
          uint64_t v108 = (char *)TagFallback - 1;
          while (2)
          {
            uint64_t v109 = (google::protobuf::internal *)(v108 + 1);
            uint64_t v127 = v109;
            int v110 = *(int **)(a1 + 200);
            if (v110)
            {
              uint64_t v111 = *(int *)(a1 + 192);
              int v112 = *v110;
              if ((int)v111 < *v110)
              {
                *(_DWORD *)(a1 + 192) = v111 + 1;
                uint64_t v113 = *(protobuf::Intelligence_State_Event **)&v110[2 * v111 + 2];
                goto LABEL_145;
              }
              if (v112 != *(_DWORD *)(a1 + 196))
              {
LABEL_144:
                *int v110 = v112 + 1;
                uint64_t v113 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Event>(*(google::protobuf::internal::ArenaImpl **)(a1 + 184));
                uint64_t v114 = *(void *)(a1 + 200);
                uint64_t v115 = *(int *)(a1 + 192);
                *(_DWORD *)(a1 + 192) = v115 + 1;
                *(void *)(v114 + 8 * v115 + 8) = v113;
                uint64_t v109 = v127;
LABEL_145:
                unsigned int v116 = *(unsigned __int8 *)v109;
                if (*(char *)v109 < 0)
                {
                  int v118 = google::protobuf::internal::ReadSizeFallback(v109, (const char *)*(unsigned __int8 *)v109);
                  if (!v118) {
                    goto LABEL_165;
                  }
                  int v117 = v118;
                  unsigned int v116 = v119;
                }
                else
                {
                  int v117 = (char *)v109 + 1;
                }
                int v120 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v117, v116);
                int v121 = *((_DWORD *)this + 22);
                BOOL v39 = __OFSUB__(v121--, 1);
                *((_DWORD *)this + 22) = v121;
                if (v121 < 0 == v39)
                {
                  int v122 = v120;
                  uint64_t v108 = protobuf::Intelligence_State_Event::_InternalParse((uint64_t)v113, (google::protobuf::internal *)v117, this);
                  if (v108)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v123 = *((_DWORD *)this + 7) + v122;
                      *((_DWORD *)this + 7) = v123;
                      unint64_t v124 = *((void *)this + 1) + (v123 & (v123 >> 31));
                      *(void *)this = v124;
                      uint64_t v127 = (google::protobuf::internal *)v108;
                      if (v124 <= (unint64_t)v108 || *v108 != 114) {
                        goto LABEL_163;
                      }
                      continue;
                    }
                  }
                }
LABEL_165:
                TagFallbacint k = 0;
                goto LABEL_166;
              }
            }
            else
            {
              int v112 = *(_DWORD *)(a1 + 196);
            }
            break;
          }
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 184), v112 + 1);
          int v110 = *(int **)(a1 + 200);
          int v112 = *v110;
          goto LABEL_144;
        default:
          goto LABEL_157;
      }
      break;
    }
  }
  TagFallbacint k = v127;
LABEL_166:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

char *google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_State_Memory>(google::protobuf::internal::EpsCopyInputStream *this, uint64_t a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  long long v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    double result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    unint64_t v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    unint64_t v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  double result = (char *)protobuf::Intelligence_State_Memory::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

unsigned __int8 *protobuf::Intelligence_State::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_State *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if ((unint64_t)a2 >= *(void *)a3) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      }
      unint64_t v8 = (protobuf::Intelligence_State_Memory *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Memory>::TypeHandler>((uint64_t)this + 24, i);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 3;
          do
          {
            *(v10 - 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          a2[2] = v11;
          int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        int v10 = a2 + 2;
      }
      a2 = protobuf::Intelligence_State_Memory::InternalSerializeWithCachedSizesToArray(v8, (char *)v10, a3);
    }
  }
  int v14 = *((_DWORD *)this + 14);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if ((unint64_t)a2 >= *(void *)a3) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      }
      uint64_t v16 = (protobuf::Intelligence_State_Memory *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Memory>::TypeHandler>((uint64_t)this + 48, j);
      *a2 = 18;
      unsigned int v17 = *((_DWORD *)v16 + 5);
      if (v17 > 0x7F)
      {
        a2[1] = v17 | 0x80;
        unsigned int v19 = v17 >> 7;
        if (v17 >> 14)
        {
          uint64_t v18 = a2 + 3;
          do
          {
            *(v18 - 1) = v19 | 0x80;
            unsigned int v20 = v19 >> 7;
            ++v18;
            unsigned int v21 = v19 >> 14;
            v19 >>= 7;
          }
          while (v21);
          *(v18 - 1) = v20;
        }
        else
        {
          a2[2] = v19;
          uint64_t v18 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v17;
        uint64_t v18 = a2 + 2;
      }
      a2 = protobuf::Intelligence_State_Memory::InternalSerializeWithCachedSizesToArray(v16, (char *)v18, a3);
    }
  }
  int v22 = *((_DWORD *)this + 20);
  if (v22)
  {
    for (int k = 0; k != v22; ++k)
    {
      if ((unint64_t)a2 >= *(void *)a3) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      }
      uint64_t v24 = (protobuf::Intelligence_State_Response *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Response>::TypeHandler>((uint64_t)this + 72, k);
      *a2 = 26;
      unsigned int v25 = *((_DWORD *)v24 + 5);
      if (v25 > 0x7F)
      {
        a2[1] = v25 | 0x80;
        unsigned int v27 = v25 >> 7;
        if (v25 >> 14)
        {
          char v26 = a2 + 3;
          do
          {
            *(v26 - 1) = v27 | 0x80;
            unsigned int v28 = v27 >> 7;
            ++v26;
            unsigned int v29 = v27 >> 14;
            v27 >>= 7;
          }
          while (v29);
          *(v26 - 1) = v28;
        }
        else
        {
          a2[2] = v27;
          char v26 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v25;
        char v26 = a2 + 2;
      }
      a2 = protobuf::Intelligence_State_Response::InternalSerializeWithCachedSizesToArray(v24, (char *)v26, a3);
    }
  }
  int v30 = *((_DWORD *)this + 26);
  if (v30)
  {
    int v31 = 0;
    while ((unint64_t)a2 < *(void *)a3)
    {
      if (v31 < 0) {
        goto LABEL_41;
      }
LABEL_42:
      if (*((_DWORD *)this + 26) <= v31)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v83, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
        unsigned int v33 = google::protobuf::internal::LogMessage::operator<<(v83, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v82, (const char **)&v33->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v83[0].__r_.__value_.__l.__data_);
      }
      uint64_t v34 = *(protobuf::Intelligence_State_ExecutionState **)(*((void *)this + 14) + 8 * v31 + 8);
      *a2 = 34;
      unsigned int v35 = *((_DWORD *)v34 + 5);
      if (v35 > 0x7F)
      {
        a2[1] = v35 | 0x80;
        unsigned int v37 = v35 >> 7;
        if (v35 >> 14)
        {
          unsigned int v36 = a2 + 3;
          do
          {
            *(v36 - 1) = v37 | 0x80;
            unsigned int v38 = v37 >> 7;
            ++v36;
            unsigned int v39 = v37 >> 14;
            v37 >>= 7;
          }
          while (v39);
          *(v36 - 1) = v38;
        }
        else
        {
          a2[2] = v37;
          unsigned int v36 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v35;
        unsigned int v36 = a2 + 2;
      }
      a2 = protobuf::Intelligence_State_ExecutionState::InternalSerializeWithCachedSizesToArray(v34, (char *)v36, a3);
      if (++v31 == v30) {
        goto LABEL_55;
      }
    }
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    if ((v31 & 0x80000000) == 0) {
      goto LABEL_42;
    }
LABEL_41:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v83, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v32 = google::protobuf::internal::LogMessage::operator<<(v83, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v82, (const char **)&v32->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v83[0].__r_.__value_.__l.__data_);
    goto LABEL_42;
  }
LABEL_55:
  int v40 = *((_DWORD *)this + 4);
  if (v40) {
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 26), (char *)a2);
  }
  int v41 = *((_DWORD *)this + 32);
  if (v41)
  {
    for (int m = 0; m != v41; ++m)
    {
      if ((unint64_t)a2 >= *(void *)a3) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      }
      uint64_t v43 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_InputGroup>::TypeHandler>((uint64_t)this + 120, m);
      *a2 = 50;
      unsigned int v44 = *(_DWORD *)(v43 + 20);
      if (v44 > 0x7F)
      {
        a2[1] = v44 | 0x80;
        unsigned int v46 = v44 >> 7;
        if (v44 >> 14)
        {
          unint64_t v45 = a2 + 3;
          do
          {
            *(v45 - 1) = v46 | 0x80;
            unsigned int v47 = v46 >> 7;
            ++v45;
            unsigned int v48 = v46 >> 14;
            v46 >>= 7;
          }
          while (v48);
          *(v45 - 1) = v47;
        }
        else
        {
          a2[2] = v46;
          unint64_t v45 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v44;
        unint64_t v45 = a2 + 2;
      }
      a2 = protobuf::Intelligence_State_InputGroup::InternalSerializeWithCachedSizesToArray((const void ***)v43, (char *)v45, a3);
    }
  }
  int v49 = *((_DWORD *)this + 36);
  if (v49 >= 1)
  {
    for (int n = 0; n != v49; ++n)
    {
      if ((unint64_t)a2 >= *(void *)a3) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      }
      unint64_t v51 = *(int *)google::protobuf::RepeatedField<int>::Get((_DWORD *)this + 36, n);
      *a2 = 56;
      if (v51 > 0x7F)
      {
        a2[1] = v51 | 0x80;
        unint64_t v52 = v51 >> 7;
        if (v51 >> 14)
        {
          a2 += 3;
          do
          {
            *(a2 - 1) = v52 | 0x80;
            unint64_t v53 = v52 >> 7;
            ++a2;
            unint64_t v54 = v52 >> 14;
            v52 >>= 7;
          }
          while (v54);
          *(a2 - 1) = v53;
        }
        else
        {
          a2[2] = v52;
          a2 += 3;
        }
      }
      else
      {
        a2[1] = v51;
        a2 += 2;
      }
    }
  }
  if ((v40 & 2) != 0)
  {
    if ((unint64_t)a2 >= *(void *)a3) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    }
    uint64_t v55 = *((void *)this + 27);
    *a2 = 73;
    *(void *)(a2 + 1) = v55;
    a2 += 9;
  }
  int v56 = *((_DWORD *)this + 42);
  if (v56)
  {
    int v57 = 0;
    while ((unint64_t)a2 < *(void *)a3)
    {
      if (v57 < 0) {
        goto LABEL_89;
      }
LABEL_90:
      if (*((_DWORD *)this + 42) <= v57)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v83, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
        unint64_t v59 = google::protobuf::internal::LogMessage::operator<<(v83, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v82, (const char **)&v59->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v83[0].__r_.__value_.__l.__data_);
      }
      int v60 = *(protobuf::Intelligence_State_Timer **)(*((void *)this + 22) + 8 * v57 + 8);
      *a2 = 82;
      unsigned int v61 = *((_DWORD *)v60 + 5);
      if (v61 > 0x7F)
      {
        a2[1] = v61 | 0x80;
        unsigned int v63 = v61 >> 7;
        if (v61 >> 14)
        {
          uint64_t v62 = a2 + 3;
          do
          {
            *(v62 - 1) = v63 | 0x80;
            unsigned int v64 = v63 >> 7;
            ++v62;
            unsigned int v65 = v63 >> 14;
            v63 >>= 7;
          }
          while (v65);
          *(v62 - 1) = v64;
        }
        else
        {
          a2[2] = v63;
          uint64_t v62 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v61;
        uint64_t v62 = a2 + 2;
      }
      a2 = protobuf::Intelligence_State_Timer::InternalSerializeWithCachedSizesToArray(v60, (char *)v62, a3);
      if (++v57 == v56) {
        goto LABEL_103;
      }
    }
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    if ((v57 & 0x80000000) == 0) {
      goto LABEL_90;
    }
LABEL_89:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v83, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    int v58 = google::protobuf::internal::LogMessage::operator<<(v83, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v82, (const char **)&v58->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v83[0].__r_.__value_.__l.__data_);
    goto LABEL_90;
  }
LABEL_103:
  if ((v40 & 4) != 0)
  {
    if ((unint64_t)a2 >= *(void *)a3) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    }
    uint64_t v66 = *((void *)this + 28);
    *a2 = 97;
    *(void *)(a2 + 1) = v66;
    a2 += 9;
  }
  if ((v40 & 8) != 0)
  {
    if ((unint64_t)a2 >= *(void *)a3) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    }
    uint64_t v67 = *((void *)this + 29);
    *a2 = 105;
    *(void *)(a2 + 1) = v67;
    a2 += 9;
  }
  int v68 = *((_DWORD *)this + 48);
  if (v68)
  {
    for (iint i = 0; ii != v68; ++ii)
    {
      if ((unint64_t)a2 >= *(void *)a3) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      }
      unsigned int v70 = (protobuf::Intelligence_State_Event *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Event>::TypeHandler>((uint64_t)this + 184, ii);
      *a2 = 114;
      unsigned int v71 = *((_DWORD *)v70 + 5);
      if (v71 > 0x7F)
      {
        a2[1] = v71 | 0x80;
        unsigned int v73 = v71 >> 7;
        if (v71 >> 14)
        {
          uint64_t v72 = a2 + 3;
          do
          {
            *(v72 - 1) = v73 | 0x80;
            unsigned int v74 = v73 >> 7;
            ++v72;
            unsigned int v75 = v73 >> 14;
            v73 >>= 7;
          }
          while (v75);
          *(v72 - 1) = v74;
        }
        else
        {
          a2[2] = v73;
          uint64_t v72 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v71;
        uint64_t v72 = a2 + 2;
      }
      a2 = protobuf::Intelligence_State_Event::InternalSerializeWithCachedSizesToArray(v70, (char *)v72, a3);
    }
  }
  uint64_t v76 = *((void *)this + 1);
  if ((v76 & 1) == 0) {
    return a2;
  }
  unint64_t v78 = v76 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v78 + 23) < 0)
  {
    int v80 = *(void **)v78;
    uint64_t v79 = *(void *)(v78 + 8);
  }
  else
  {
    LODWORD(v79) = *(unsigned __int8 *)(v78 + 23);
    int v80 = (void *)v78;
  }
  if (*(void *)a3 - (void)a2 >= (int)v79)
  {
    uint64_t v81 = (int)v79;
    memcpy(a2, v80, (int)v79);
    a2 += v81;
    return a2;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v80, v79, a2);
}

void sub_239A74300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t protobuf::Intelligence_State::ByteSizeLong(protobuf::Intelligence_State *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    unint64_t v4 = (protobuf::Intelligence_State_Memory **)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_State_Memory::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    unsigned int v11 = (protobuf::Intelligence_State_Memory **)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      uint64_t v14 = protobuf::Intelligence_State_Memory::ByteSizeLong(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *((int *)this + 20);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *((void *)this + 11);
  if (v17) {
    uint64_t v18 = (protobuf::Intelligence_State_Response **)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      unsigned int v20 = *v18++;
      uint64_t v21 = protobuf::Intelligence_State_Response::ByteSizeLong(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *((int *)this + 26);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *((void *)this + 14);
  if (v24) {
    unsigned int v25 = (protobuf::Intelligence_State_ExecutionState **)(v24 + 8);
  }
  else {
    unsigned int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      unsigned int v27 = *v25++;
      uint64_t v28 = protobuf::Intelligence_State_ExecutionState::ByteSizeLong(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *((int *)this + 32);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *((void *)this + 17);
  if (v31) {
    uint64_t v32 = (protobuf::Intelligence_State_InputGroup **)(v31 + 8);
  }
  else {
    uint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = protobuf::Intelligence_State_InputGroup::ByteSizeLong(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = google::protobuf::internal::WireFormatLite::Int32Size((int *)this + 36);
  uint64_t v37 = *((int *)this + 42);
  uint64_t v38 = v36 + v37 + v30 + *((unsigned int *)this + 36);
  uint64_t v39 = *((void *)this + 22);
  if (v39) {
    int v40 = (protobuf::Intelligence_State_Timer **)(v39 + 8);
  }
  else {
    int v40 = 0;
  }
  if (v37)
  {
    uint64_t v41 = 8 * v37;
    do
    {
      unint64_t v42 = *v40++;
      uint64_t v43 = protobuf::Intelligence_State_Timer::ByteSizeLong(v42);
      v38 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6);
      v41 -= 8;
    }
    while (v41);
  }
  uint64_t v44 = *((int *)this + 48);
  uint64_t v45 = v38 + v44;
  uint64_t v46 = *((void *)this + 25);
  if (v46) {
    unsigned int v47 = (protobuf::Intelligence_State_Event **)(v46 + 8);
  }
  else {
    unsigned int v47 = 0;
  }
  if (v44)
  {
    uint64_t v48 = 8 * v44;
    do
    {
      int v49 = *v47++;
      uint64_t v50 = protobuf::Intelligence_State_Event::ByteSizeLong(v49);
      v45 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6);
      v48 -= 8;
    }
    while (v48);
  }
  int v51 = *((_DWORD *)this + 4);
  if ((v51 & 0xF) != 0)
  {
    if (v51)
    {
      uint64_t v52 = *((void *)this + 26);
      uint64_t v53 = *(unsigned __int8 *)(v52 + 23);
      uint64_t v54 = *(void *)(v52 + 8);
      if ((v53 & 0x80u) == 0) {
        uint64_t v54 = v53;
      }
      v45 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v55 = v45 + 9;
    if ((v51 & 2) == 0) {
      uint64_t v55 = v45;
    }
    if ((v51 & 4) != 0) {
      v55 += 9;
    }
    if ((v51 & 8) != 0) {
      uint64_t v45 = v55 + 9;
    }
    else {
      uint64_t v45 = v55;
    }
  }
  uint64_t v56 = *((void *)this + 1);
  if (v56)
  {
    unint64_t v58 = v56 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v58 + 23) < 0) {
      uint64_t v59 = *(void *)(v58 + 8);
    }
    else {
      uint64_t v59 = *(unsigned __int8 *)(v58 + 23);
    }
    v45 += v59;
  }
  *((_DWORD *)this + 5) = v45;
  return v45;
}

void protobuf::Intelligence_State::CheckTypeAndMergeFrom(protobuf::Intelligence_State *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_State::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_State::MergeFrom(protobuf::Intelligence_State *this, const protobuf::Intelligence_State *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 13383);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Memory>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Memory>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Response>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_ExecutionState>::TypeHandler>((int **)this + 12, (uint64_t)a2 + 96);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_InputGroup>::TypeHandler>((int **)this + 15, (uint64_t)a2 + 120);
  google::protobuf::RepeatedField<int>::MergeFrom((int *)this + 36, (int *)a2 + 36);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Timer>::TypeHandler>((int **)this + 20, (uint64_t)a2 + 160);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Event>::TypeHandler>((int **)this + 23, (uint64_t)a2 + 184);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0xF) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 26);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 26);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 208, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      *((void *)this + 27) = *((void *)a2 + 27);
      if ((v6 & 4) == 0)
      {
LABEL_12:
        if ((v6 & 8) == 0)
        {
LABEL_14:
          *((_DWORD *)this + 4) |= v6;
          return;
        }
LABEL_13:
        *((void *)this + 29) = *((void *)a2 + 29);
        goto LABEL_14;
      }
    }
    else if ((v6 & 4) == 0)
    {
      goto LABEL_12;
    }
    *((void *)this + 28) = *((void *)a2 + 28);
    if ((v6 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
}

void sub_239A7485C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_State::CopyFrom(protobuf::Intelligence_State *this, const protobuf::Intelligence_State *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_State::Clear(this);
    protobuf::Intelligence_State::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_State::IsInitialized(protobuf::Intelligence_State *this)
{
  return 1;
}

double protobuf::Intelligence_State::InternalSwap(protobuf::Intelligence_State *this, protobuf::Intelligence_State *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v22;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_State *)((char *)this + 24), (protobuf::Intelligence_State *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_State *)((char *)this + 48), (protobuf::Intelligence_State *)((char *)a2 + 48));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_State *)((char *)this + 72), (protobuf::Intelligence_State *)((char *)a2 + 72));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_State *)((char *)this + 96), (protobuf::Intelligence_State *)((char *)a2 + 96));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_State *)((char *)this + 120), (protobuf::Intelligence_State *)((char *)a2 + 120));
  google::protobuf::RepeatedField<int>::InternalSwap((uint64_t)this + 144, (uint64_t)a2 + 144);
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_State *)((char *)this + 160), (protobuf::Intelligence_State *)((char *)a2 + 160));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_State *)((char *)this + 184), (protobuf::Intelligence_State *)((char *)a2 + 184));
  unsigned int v13 = (uint64_t *)*((void *)this + 26);
  uint64_t v14 = (uint64_t **)((char *)a2 + 208);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 26, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v13 = (uint64_t *)*((void *)this + 26);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 26, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)unsigned int v13 = *(_OWORD *)v15;
  std::string v13[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v19 = *((void *)this + 27);
  *((void *)this + 27) = *((void *)a2 + 27);
  *((void *)a2 + 27) = v19;
  uint64_t v20 = *((void *)this + 28);
  *((void *)this + 28) = *((void *)a2 + 28);
  *((void *)a2 + 28) = v20;
  double result = *((double *)this + 29);
  *((void *)this + 29) = *((void *)a2 + 29);
  *((double *)a2 + 29) = result;
  return result;
}

void *protobuf::Intelligence_State::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.State");
}

void protobuf::Intelligence_Condition_ConditionEntry::InitAsDefaultInstance(protobuf::Intelligence_Condition_ConditionEntry *this)
{
  qword_268A0B780 = (uint64_t)&protobuf::_Intelligence_KeyValueParameter_default_instance_;
  unk_268A0B788 = &protobuf::_Intelligence_KeyValueParameter_default_instance_;
  qword_268A0B778 = (uint64_t)&protobuf::_Intelligence_Condition_ConditionEntry_default_instance_;
}

uint64_t protobuf::Intelligence_Condition_ConditionEntry::_Internal::left(protobuf::Intelligence_Condition_ConditionEntry::_Internal *this, const protobuf::Intelligence_Condition_ConditionEntry *a2)
{
  return *((void *)this + 13);
}

uint64_t protobuf::Intelligence_Condition_ConditionEntry::_Internal::right(protobuf::Intelligence_Condition_ConditionEntry::_Internal *this, const protobuf::Intelligence_Condition_ConditionEntry *a2)
{
  return *((void *)this + 14);
}

uint64_t protobuf::Intelligence_Condition_ConditionEntry::_Internal::not_child(protobuf::Intelligence_Condition_ConditionEntry::_Internal *this, const protobuf::Intelligence_Condition_ConditionEntry *a2)
{
  return *((void *)this + 12);
}

protobuf::Intelligence_Condition_ConditionEntry *protobuf::Intelligence_Condition_ConditionEntry::Intelligence_Condition_ConditionEntry(protobuf::Intelligence_Condition_ConditionEntry *this)
{
  *(void *)this = &unk_26ED28C30;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  if (atomic_load_explicit(scc_info_Intelligence_Condition_ConditionEntry_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Condition_ConditionEntry_intelligence_2eproto);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  return this;
}

void sub_239A74B68(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 48));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Condition_ConditionEntry *protobuf::Intelligence_Condition_ConditionEntry::Intelligence_Condition_ConditionEntry(protobuf::Intelligence_Condition_ConditionEntry *this, const protobuf::Intelligence_Condition_ConditionEntry *a2)
{
  *(void *)this = &unk_26ED28C30;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 9);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v7);
    }
  }
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 10);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v8);
    }
  }
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 11);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v9);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (!*((void *)a2 + 12))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 21511);
      long long v10 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: !value || not_child_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 12) = 0;
  if ((v6 & 0x10) != 0)
  {
    if (!*((void *)a2 + 13))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 21242);
      uint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: !value || left_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 13) = 0;
  if ((v6 & 0x20) != 0)
  {
    if (!*((void *)a2 + 14))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 21373);
      int v12 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: !value || right_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 14) = 0;
  return this;
}

void sub_239A74E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v5);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField(v4);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v3);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Condition_ConditionEntry::~Intelligence_Condition_ConditionEntry(protobuf::Intelligence_Condition_ConditionEntry *this)
{
  *(void *)this = &unk_26ED28C30;
  uint64_t v2 = *((void *)this + 9);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 10);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x23ECAACC0](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 11);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x23ECAACC0](v6, 0x1012C40EC159624);
  }
  if (this != (protobuf::Intelligence_Condition_ConditionEntry *)&protobuf::_Intelligence_Condition_ConditionEntry_default_instance_)
  {
    uint64_t v8 = *((void *)this + 12);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 13);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = *((void *)this + 14);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
  }
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_Condition_ConditionEntry *)((char *)this + 48));
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::~RepeatedPtrField((protobuf::Intelligence_Condition_ConditionEntry *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Condition_ConditionEntry::~Intelligence_Condition_ConditionEntry(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Condition_ConditionEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Condition_ConditionEntry::default_instance(protobuf::Intelligence_Condition_ConditionEntry *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Condition_ConditionEntry_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Condition_ConditionEntry_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Condition_ConditionEntry_default_instance_;
}

void protobuf::Intelligence_Condition_ConditionEntry::Clear(protobuf::Intelligence_Condition_ConditionEntry *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>((uint64_t)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>((uint64_t)this + 48);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_30;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 9);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_13;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_13;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_17:
    uint64_t v5 = *((void *)this + 11);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_21;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_13:
  uint64_t v4 = *((void *)this + 10);
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)uint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_17;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_17;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_21:
  uint64_t v6 = (protobuf::Intelligence_Condition_ConditionEntry *)*((void *)this + 12);
  if (!v6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 13593);
    unint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: not_child_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    uint64_t v6 = (protobuf::Intelligence_Condition_ConditionEntry *)*((void *)this + 12);
  }
  protobuf::Intelligence_Condition_ConditionEntry::Clear(v6);
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v8 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 13);
  if (!v8)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 13597);
    uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: left_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    uint64_t v8 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 13);
  }
  protobuf::Intelligence_KeyValueParameter::Clear(v8);
  if ((v2 & 0x20) != 0)
  {
LABEL_27:
    uint64_t v10 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 14);
    if (!v10)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 13601);
      uint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: right_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
      uint64_t v10 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 14);
    }
    protobuf::Intelligence_KeyValueParameter::Clear(v10);
  }
LABEL_30:
  char v13 = *((unsigned char *)this + 8);
  int v12 = (protobuf::Intelligence_Condition_ConditionEntry *)((char *)this + 8);
  *((_DWORD *)v12 + 2) = 0;
  if (v13) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v12);
  }
}

void sub_239A752D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string::value_type *protobuf::Intelligence_Condition_ConditionEntry::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v31 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v31, *((_DWORD *)this + 23));
  double result = (std::string::value_type *)v31;
  if ((v5 & 1) == 0)
  {
    while (2)
    {
      unint64_t v7 = result + 1;
      LODWORD(v8) = *result;
      if (*result < 0)
      {
        uint64_t v8 = (const char *)(v8 + (*v7 << 7) - 128);
        if (*v7 < 0)
        {
          double result = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)result, v8);
          uint64_t v31 = (google::protobuf::internal *)result;
          if (!result) {
            return result;
          }
          unint64_t v7 = result;
LABEL_6:
          switch(v8 >> 3)
          {
            case 2u:
              if (v8 != 18) {
                goto LABEL_57;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v9 = *(std::string **)(a1 + 72);
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 72, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_18;
            case 3u:
              if (v8 != 26) {
                goto LABEL_57;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v9 = *(std::string **)(a1 + 80);
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 80, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_18;
            case 4u:
              if (v8 != 34) {
                goto LABEL_57;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              uint64_t v9 = *(std::string **)(a1 + 88);
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 88, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_18:
              double result = google::protobuf::internal::InlineGreedyStringParser(v9, v7, (uint64_t)this);
              goto LABEL_62;
            case 5u:
              if (v8 != 42) {
                goto LABEL_57;
              }
              double result = v7 - 1;
              while (1)
              {
                uint64_t v10 = (google::protobuf::internal *)(result + 1);
                uint64_t v31 = (google::protobuf::internal *)(result + 1);
                uint64_t v11 = *(int **)(a1 + 40);
                if (!v11) {
                  break;
                }
                uint64_t v12 = *(int *)(a1 + 32);
                int v13 = *v11;
                if ((int)v12 >= *v11)
                {
                  if (v13 == *(_DWORD *)(a1 + 36))
                  {
LABEL_26:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v13 + 1);
                    uint64_t v11 = *(int **)(a1 + 40);
                    int v13 = *v11;
                  }
                  int *v11 = v13 + 1;
                  uint64_t v15 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition_ConditionEntry>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
                  LODWORD(v14) = v15;
                  uint64_t v16 = *(void *)(a1 + 40);
                  uint64_t v17 = *(int *)(a1 + 32);
                  *(_DWORD *)(a1 + 32) = v17 + 1;
                  *(void *)(v16 + 8 * v17 + 8) = v15;
                  uint64_t v10 = v31;
                  goto LABEL_28;
                }
                *(_DWORD *)(a1 + 32) = v12 + 1;
                uint64_t v14 = *(void *)&v11[2 * v12 + 2];
LABEL_28:
                double result = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_Condition_ConditionEntry>(this, v14, v10);
                uint64_t v31 = (google::protobuf::internal *)result;
                if (!result) {
                  return result;
                }
                if (*(void *)this <= (unint64_t)result || *result != 42) {
                  goto LABEL_63;
                }
              }
              int v13 = *(_DWORD *)(a1 + 36);
              goto LABEL_26;
            case 6u:
              if (v8 != 50) {
                goto LABEL_57;
              }
              double result = v7 - 1;
              break;
            case 7u:
              if (v8 != 58) {
                goto LABEL_57;
              }
              *(_DWORD *)(a1 + 16) |= 8u;
              uint64_t v26 = *(void *)(a1 + 96);
              if (!v26)
              {
                unsigned int v27 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition_ConditionEntry>(0);
                LODWORD(v26) = v27;
                *(void *)(a1 + 96) = v27;
                unint64_t v7 = (std::string::value_type *)v31;
              }
              double result = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_Condition_ConditionEntry>(this, v26, (google::protobuf::internal *)v7);
              goto LABEL_62;
            case 8u:
              if (v8 != 66) {
                goto LABEL_57;
              }
              *(_DWORD *)(a1 + 16) |= 0x10u;
              uint64_t v28 = *(protobuf::Intelligence_KeyValueParameter **)(a1 + 104);
              if (v28) {
                goto LABEL_56;
              }
              uint64_t v28 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
              *(void *)(a1 + 104) = v28;
              goto LABEL_55;
            case 9u:
              if (v8 != 74) {
                goto LABEL_57;
              }
              *(_DWORD *)(a1 + 16) |= 0x20u;
              uint64_t v28 = *(protobuf::Intelligence_KeyValueParameter **)(a1 + 112);
              if (v28) {
                goto LABEL_56;
              }
              uint64_t v28 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
              *(void *)(a1 + 112) = v28;
LABEL_55:
              unint64_t v7 = (std::string::value_type *)v31;
LABEL_56:
              double result = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_KeyValueParameter>(this, (uint64_t)v28, (google::protobuf::internal *)v7);
              goto LABEL_62;
            default:
LABEL_57:
              if (v8) {
                BOOL v29 = (v8 & 7) == 4;
              }
              else {
                BOOL v29 = 1;
              }
              if (v29)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
                return v7;
              }
              double result = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), (google::protobuf::internal *)v7, this);
LABEL_62:
              uint64_t v31 = (google::protobuf::internal *)result;
              if (!result) {
                return result;
              }
LABEL_63:
              int v30 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v31, *((_DWORD *)this + 23));
              double result = (std::string::value_type *)v31;
              if (v30) {
                return result;
              }
              continue;
          }
          while (1)
          {
            uint64_t v18 = (google::protobuf::internal *)(result + 1);
            uint64_t v31 = (google::protobuf::internal *)(result + 1);
            uint64_t v19 = *(int **)(a1 + 64);
            if (!v19) {
              break;
            }
            uint64_t v20 = *(int *)(a1 + 56);
            int v21 = *v19;
            if ((int)v20 >= *v19)
            {
              if (v21 == *(_DWORD *)(a1 + 60))
              {
LABEL_39:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v21 + 1);
                uint64_t v19 = *(int **)(a1 + 64);
                int v21 = *v19;
              }
              *uint64_t v19 = v21 + 1;
              uint64_t v23 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition_ConditionEntry>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
              LODWORD(v22) = v23;
              uint64_t v24 = *(void *)(a1 + 64);
              uint64_t v25 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v25 + 1;
              *(void *)(v24 + 8 * v25 + 8) = v23;
              uint64_t v18 = v31;
              goto LABEL_41;
            }
            *(_DWORD *)(a1 + 56) = v20 + 1;
            uint64_t v22 = *(void *)&v19[2 * v20 + 2];
LABEL_41:
            double result = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_Condition_ConditionEntry>(this, v22, v18);
            uint64_t v31 = (google::protobuf::internal *)result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *result != 50) {
              goto LABEL_63;
            }
          }
          int v21 = *(_DWORD *)(a1 + 60);
          goto LABEL_39;
        }
        unint64_t v7 = result + 2;
      }
      break;
    }
    uint64_t v31 = (google::protobuf::internal *)v7;
    goto LABEL_6;
  }
  return result;
}

char *google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_Condition_ConditionEntry>(google::protobuf::internal::EpsCopyInputStream *this, uint64_t a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  unint64_t v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    double result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    uint64_t v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  double result = protobuf::Intelligence_Condition_ConditionEntry::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

unsigned __int8 *protobuf::Intelligence_Condition_ConditionEntry::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Condition_ConditionEntry *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 9), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 10), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 11), v4);
LABEL_5:
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v9 = (protobuf::Intelligence_Condition_ConditionEntry *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>((uint64_t)this + 24, i);
      *uint64_t v4 = 42;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          int v11 = (unsigned __int8 *)(v4 + 3);
          do
          {
            *(v11 - 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          std::string v4[2] = v12;
          int v11 = (unsigned __int8 *)(v4 + 3);
        }
      }
      else
      {
        v4[1] = v10;
        int v11 = (unsigned __int8 *)(v4 + 2);
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Condition_ConditionEntry::InternalSerializeWithCachedSizesToArray(v9, v11, a3);
    }
  }
  int v15 = *((_DWORD *)this + 14);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v17 = (protobuf::Intelligence_Condition_ConditionEntry *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>((uint64_t)this + 48, j);
      *uint64_t v4 = 50;
      unsigned int v18 = *((_DWORD *)v17 + 5);
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unsigned int v20 = v18 >> 7;
        if (v18 >> 14)
        {
          uint64_t v19 = (unsigned __int8 *)(v4 + 3);
          do
          {
            *(v19 - 1) = v20 | 0x80;
            unsigned int v21 = v20 >> 7;
            ++v19;
            unsigned int v22 = v20 >> 14;
            v20 >>= 7;
          }
          while (v22);
          *(v19 - 1) = v21;
        }
        else
        {
          std::string v4[2] = v20;
          uint64_t v19 = (unsigned __int8 *)(v4 + 3);
        }
      }
      else
      {
        v4[1] = v18;
        uint64_t v19 = (unsigned __int8 *)(v4 + 2);
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Condition_ConditionEntry::InternalSerializeWithCachedSizesToArray(v17, v19, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v23 = (protobuf::Intelligence_Condition_ConditionEntry *)*((void *)this + 12);
    *uint64_t v4 = 58;
    unsigned int v24 = *((_DWORD *)v23 + 5);
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unsigned int v26 = v24 >> 7;
      if (v24 >> 14)
      {
        uint64_t v25 = (unsigned __int8 *)(v4 + 3);
        do
        {
          *(v25 - 1) = v26 | 0x80;
          unsigned int v27 = v26 >> 7;
          ++v25;
          unsigned int v28 = v26 >> 14;
          v26 >>= 7;
        }
        while (v28);
        *(v25 - 1) = v27;
      }
      else
      {
        std::string v4[2] = v26;
        uint64_t v25 = (unsigned __int8 *)(v4 + 3);
      }
    }
    else
    {
      v4[1] = v24;
      uint64_t v25 = (unsigned __int8 *)(v4 + 2);
    }
    uint64_t v4 = (char *)protobuf::Intelligence_Condition_ConditionEntry::InternalSerializeWithCachedSizesToArray(v23, v25, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_31:
      if ((v6 & 0x20) == 0) {
        goto LABEL_66;
      }
      goto LABEL_56;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_31;
  }
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  BOOL v29 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 13);
  *uint64_t v4 = 66;
  unsigned int v30 = *((_DWORD *)v29 + 5);
  if (v30 > 0x7F)
  {
    v4[1] = v30 | 0x80;
    unsigned int v32 = v30 >> 7;
    if (v30 >> 14)
    {
      uint64_t v31 = v4 + 3;
      do
      {
        *(v31 - 1) = v32 | 0x80;
        unsigned int v33 = v32 >> 7;
        ++v31;
        unsigned int v34 = v32 >> 14;
        v32 >>= 7;
      }
      while (v34);
      *(v31 - 1) = v33;
    }
    else
    {
      std::string v4[2] = v32;
      uint64_t v31 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v30;
    uint64_t v31 = v4 + 2;
  }
  uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v29, v31, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_56:
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v35 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 14);
    *uint64_t v4 = 74;
    unsigned int v36 = *((_DWORD *)v35 + 5);
    if (v36 > 0x7F)
    {
      v4[1] = v36 | 0x80;
      unsigned int v38 = v36 >> 7;
      if (v36 >> 14)
      {
        uint64_t v37 = v4 + 3;
        do
        {
          *(v37 - 1) = v38 | 0x80;
          unsigned int v39 = v38 >> 7;
          ++v37;
          unsigned int v40 = v38 >> 14;
          v38 >>= 7;
        }
        while (v40);
        *(v37 - 1) = v39;
      }
      else
      {
        std::string v4[2] = v38;
        uint64_t v37 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v36;
      uint64_t v37 = v4 + 2;
    }
    uint64_t v4 = (char *)protobuf::Intelligence_KeyValueParameter::InternalSerializeWithCachedSizesToArray(v35, v37, a3);
  }
LABEL_66:
  uint64_t v41 = *((void *)this + 1);
  if ((v41 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v43 = v41 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v43 + 23) < 0)
  {
    uint64_t v45 = *(void **)v43;
    uint64_t v44 = *(void *)(v43 + 8);
  }
  else
  {
    LODWORD(v44) = *(unsigned __int8 *)(v43 + 23);
    uint64_t v45 = (void *)v43;
  }
  if (*(void *)a3 - (void)v4 >= (int)v44)
  {
    uint64_t v46 = (int)v44;
    memcpy(v4, v45, (int)v44);
    v4 += v46;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v45, v44, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_Condition_ConditionEntry::ByteSizeLong(protobuf::Intelligence_Condition_ConditionEntry *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (protobuf::Intelligence_Condition_ConditionEntry **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_Condition_ConditionEntry::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    int v11 = (protobuf::Intelligence_Condition_ConditionEntry **)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      uint64_t v14 = protobuf::Intelligence_Condition_ConditionEntry::ByteSizeLong(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *((_DWORD *)this + 4);
  if ((v15 & 0x3F) == 0) {
    goto LABEL_23;
  }
  if (v15)
  {
    uint64_t v19 = *((void *)this + 9);
    uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
    uint64_t v21 = *(void *)(v19 + 8);
    if ((v20 & 0x80u) == 0) {
      uint64_t v21 = v20;
    }
    v9 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 2) == 0)
    {
LABEL_18:
      if ((v15 & 4) == 0) {
        goto LABEL_19;
      }
      goto LABEL_31;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v22 = *((void *)this + 10);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v9 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 4) == 0)
  {
LABEL_19:
    if ((v15 & 8) == 0) {
      goto LABEL_20;
    }
LABEL_34:
    uint64_t v28 = protobuf::Intelligence_Condition_ConditionEntry::ByteSizeLong(*((protobuf::Intelligence_Condition_ConditionEntry **)this
                                                                        + 12));
    v9 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x10) == 0)
    {
LABEL_21:
      if ((v15 & 0x20) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_35;
  }
LABEL_31:
  uint64_t v25 = *((void *)this + 11);
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  v9 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 8) != 0) {
    goto LABEL_34;
  }
LABEL_20:
  if ((v15 & 0x10) == 0) {
    goto LABEL_21;
  }
LABEL_35:
  uint64_t v29 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(*((protobuf::Intelligence_KeyValueParameter **)this + 13));
  v9 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x20) != 0)
  {
LABEL_22:
    uint64_t v16 = protobuf::Intelligence_KeyValueParameter::ByteSizeLong(*((protobuf::Intelligence_KeyValueParameter **)this + 14));
    v9 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_23:
  uint64_t v17 = *((void *)this + 1);
  if (v17)
  {
    unint64_t v30 = v17 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v30 + 23) < 0) {
      uint64_t v31 = *(void *)(v30 + 8);
    }
    else {
      uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
    }
    v9 += v31;
  }
  *((_DWORD *)this + 5) = v9;
  return v9;
}

void protobuf::Intelligence_Condition_ConditionEntry::CheckTypeAndMergeFrom(protobuf::Intelligence_Condition_ConditionEntry *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Condition_ConditionEntry::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Condition_ConditionEntry::MergeFrom(protobuf::Intelligence_Condition_ConditionEntry *this, const protobuf::Intelligence_Condition_ConditionEntry *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 13860);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x3F) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 9);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 9);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 10);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 10);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      int v11 = (std::string *)*((void *)this + 11);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 11);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      *((_DWORD *)this + 4) |= 8u;
      unsigned int v13 = (protobuf::Intelligence_Condition_ConditionEntry *)*((void *)this + 12);
      if (!v13)
      {
        unsigned int v13 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition_ConditionEntry>(0);
        *((void *)this + 12) = v13;
      }
      if (*((void *)a2 + 12)) {
        uint64_t v14 = (const protobuf::Intelligence_Condition_ConditionEntry *)*((void *)a2 + 12);
      }
      else {
        uint64_t v14 = (const protobuf::Intelligence_Condition_ConditionEntry *)&protobuf::_Intelligence_Condition_ConditionEntry_default_instance_;
      }
      protobuf::Intelligence_Condition_ConditionEntry::MergeFrom(v13, v14);
    }
    if ((v6 & 0x10) != 0)
    {
      *((_DWORD *)this + 4) |= 0x10u;
      int v15 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 13);
      if (!v15)
      {
        int v15 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
        *((void *)this + 13) = v15;
      }
      if (*((void *)a2 + 13)) {
        uint64_t v16 = (const protobuf::Intelligence_KeyValueParameter *)*((void *)a2 + 13);
      }
      else {
        uint64_t v16 = (const protobuf::Intelligence_KeyValueParameter *)&protobuf::_Intelligence_KeyValueParameter_default_instance_;
      }
      protobuf::Intelligence_KeyValueParameter::MergeFrom(v15, v16);
    }
    if ((v6 & 0x20) != 0)
    {
      *((_DWORD *)this + 4) |= 0x20u;
      uint64_t v17 = (protobuf::Intelligence_KeyValueParameter *)*((void *)this + 14);
      if (!v17)
      {
        uint64_t v17 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
        *((void *)this + 14) = v17;
      }
      if (*((void *)a2 + 14)) {
        unsigned int v18 = (const protobuf::Intelligence_KeyValueParameter *)*((void *)a2 + 14);
      }
      else {
        unsigned int v18 = (const protobuf::Intelligence_KeyValueParameter *)&protobuf::_Intelligence_KeyValueParameter_default_instance_;
      }
      protobuf::Intelligence_KeyValueParameter::MergeFrom(v17, v18);
    }
  }
}

void sub_239A761D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Condition_ConditionEntry::CopyFrom(protobuf::Intelligence_Condition_ConditionEntry *this, const protobuf::Intelligence_Condition_ConditionEntry *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Condition_ConditionEntry::Clear(this);
    protobuf::Intelligence_Condition_ConditionEntry::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Condition_ConditionEntry::IsInitialized(protobuf::Intelligence_Condition_ConditionEntry *this)
{
  return 1;
}

void protobuf::Intelligence_Condition_ConditionEntry::InternalSwap(protobuf::Intelligence_Condition_ConditionEntry *this, protobuf::Intelligence_Condition_ConditionEntry *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v34;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_28:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_Condition_ConditionEntry *)((char *)this + 24), (protobuf::Intelligence_Condition_ConditionEntry *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence_Condition_ConditionEntry *)((char *)this + 48), (protobuf::Intelligence_Condition_ConditionEntry *)((char *)a2 + 48));
  unsigned int v13 = (uint64_t *)*((void *)this + 9);
  uint64_t v14 = (uint64_t **)((char *)a2 + 72);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v13 = (uint64_t *)*((void *)this + 9);
  }
  int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)unsigned int v13 = *(_OWORD *)v15;
  std::string v13[2] = v18;
  *(_OWORD *)int v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  char v19 = (uint64_t *)*((void *)this + 10);
  uint64_t v20 = (uint64_t **)((char *)a2 + 80);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v19 = (uint64_t *)*((void *)this + 10);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)char v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  void v21[2] = v22;
LABEL_20:
  uint64_t v25 = (uint64_t *)*((void *)this + 11);
  uint64_t v26 = (uint64_t **)((char *)a2 + 88);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v25 = (uint64_t *)*((void *)this + 11);
  }
  uint64_t v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)uint64_t v27 = v29;
  std::string v27[2] = v28;
LABEL_26:
  uint64_t v31 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v31;
  uint64_t v32 = *((void *)this + 13);
  *((void *)this + 13) = *((void *)a2 + 13);
  *((void *)a2 + 13) = v32;
  uint64_t v33 = *((void *)this + 14);
  *((void *)this + 14) = *((void *)a2 + 14);
  *((void *)a2 + 14) = v33;
}

void *protobuf::Intelligence_Condition_ConditionEntry::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Condition.ConditionEntry");
}

void protobuf::Intelligence_Condition::InitAsDefaultInstance(protobuf::Intelligence_Condition *this)
{
  qword_268A0B7B0 = (uint64_t)&protobuf::_Intelligence_Condition_ConditionEntry_default_instance_;
}

uint64_t protobuf::Intelligence_Condition::_Internal::condition(protobuf::Intelligence_Condition::_Internal *this, const protobuf::Intelligence_Condition *a2)
{
  return *((void *)this + 4);
}

protobuf::Intelligence_Condition *protobuf::Intelligence_Condition::Intelligence_Condition(protobuf::Intelligence_Condition *this)
{
  *(void *)this = &unk_26ED28CC0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Intelligence_Condition_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Condition_intelligence_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  return this;
}

void sub_239A76560(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Condition *protobuf::Intelligence_Condition::Intelligence_Condition(protobuf::Intelligence_Condition *this, const protobuf::Intelligence_Condition *a2)
{
  *(void *)this = &unk_26ED28CC0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  if ((v5 & 2) != 0)
  {
    if (!*((void *)a2 + 4))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 21788);
      unint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: !value || condition_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 4) = 0;
  return this;
}

void sub_239A76694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v3);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Condition::~Intelligence_Condition(protobuf::Intelligence_Condition *this)
{
  *(void *)this = &unk_26ED28CC0;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  if (this != (protobuf::Intelligence_Condition *)&protobuf::_Intelligence_Condition_default_instance_)
  {
    uint64_t v4 = *((void *)this + 4);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence_Condition::~Intelligence_Condition(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence_Condition::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence_Condition::default_instance(protobuf::Intelligence_Condition *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_Condition_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_Condition_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_Condition_default_instance_;
}

void protobuf::Intelligence_Condition::Clear(protobuf::Intelligence_Condition *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 3);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) == 0) {
        goto LABEL_9;
      }
      goto LABEL_6;
    }
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_9;
  }
LABEL_6:
  uint64_t v4 = (protobuf::Intelligence_Condition_ConditionEntry *)*((void *)this + 4);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 14007);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: condition_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
    uint64_t v4 = (protobuf::Intelligence_Condition_ConditionEntry *)*((void *)this + 4);
  }
  protobuf::Intelligence_Condition_ConditionEntry::Clear(v4);
LABEL_9:
  char v7 = *((unsigned char *)this + 8);
  uint64_t v6 = (protobuf::Intelligence_Condition *)((char *)this + 8);
  *((_DWORD *)v6 + 2) = 0;
  if (v7) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v6);
  }
}

void sub_239A768E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *protobuf::Intelligence_Condition::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  unsigned int v13 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v13, *((_DWORD *)this + 23));
  double result = v13;
  if ((v5 & 1) == 0)
  {
    while (1)
    {
      char v7 = (google::protobuf::internal *)((char *)result + 1);
      LODWORD(v8) = *(unsigned __int8 *)result;
      if ((*(char *)result & 0x80000000) == 0) {
        goto LABEL_5;
      }
      char v8 = (const char *)(v8 + (*(unsigned __int8 *)v7 << 7) - 128);
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      double result = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(result, v8);
      unsigned int v13 = result;
      if (!result) {
        return result;
      }
      char v7 = result;
LABEL_6:
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          long long v10 = *(protobuf::Intelligence_Condition_ConditionEntry **)(a1 + 32);
          if (!v10)
          {
            long long v10 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition_ConditionEntry>(0);
            *(void *)(a1 + 32) = v10;
            char v7 = v13;
          }
          double result = (google::protobuf::internal *)google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_Condition_ConditionEntry>(this, (uint64_t)v10, v7);
          goto LABEL_21;
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(std::string **)(a1 + 24);
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 24, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        double result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v11, (std::string::value_type *)v7, (uint64_t)this);
        goto LABEL_21;
      }
      if (!v8 || (v8 & 7) == 4)
      {
        *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v8 - 1;
        return v7;
      }
      double result = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v8, (unint64_t *)(a1 + 8), v7, this);
LABEL_21:
      unsigned int v13 = result;
      if (result)
      {
        int v12 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v13, *((_DWORD *)this + 23));
        double result = v13;
        if (!v12) {
          continue;
        }
      }
      return result;
    }
    char v7 = (google::protobuf::internal *)((char *)result + 2);
LABEL_5:
    unsigned int v13 = v7;
    goto LABEL_6;
  }
  return result;
}

unsigned __int8 *protobuf::Intelligence_Condition::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence_Condition *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
  }
  if ((v6 & 2) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v7 = (protobuf::Intelligence_Condition_ConditionEntry *)*((void *)this + 4);
    *uint64_t v4 = 18;
    unsigned int v8 = *((_DWORD *)v7 + 5);
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        char v9 = v4 + 3;
        do
        {
          *(v9 - 1) = v10 | 0x80;
          unsigned int v11 = v10 >> 7;
          ++v9;
          unsigned int v12 = v10 >> 14;
          v10 >>= 7;
        }
        while (v12);
        *(v9 - 1) = v11;
      }
      else
      {
        std::string v4[2] = v10;
        char v9 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v8;
      char v9 = v4 + 2;
    }
    uint64_t v4 = (char *)protobuf::Intelligence_Condition_ConditionEntry::InternalSerializeWithCachedSizesToArray(v7, v9, a3);
  }
  uint64_t v13 = *((void *)this + 1);
  if ((v13 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    long long v17 = *(void **)v15;
    uint64_t v16 = *(void *)(v15 + 8);
  }
  else
  {
    LODWORD(v16) = *(unsigned __int8 *)(v15 + 23);
    long long v17 = (void *)v15;
  }
  if (*(void *)a3 - (void)v4 >= (int)v16)
  {
    uint64_t v18 = (int)v16;
    memcpy(v4, v17, (int)v16);
    v4 += v18;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v17, v16, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence_Condition::ByteSizeLong(protobuf::Intelligence_Condition *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = protobuf::Intelligence_Condition_ConditionEntry::ByteSizeLong(*((protobuf::Intelligence_Condition_ConditionEntry **)this
                                                                       + 4));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  uint64_t v4 = *((void *)this + 3);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *((void *)this + 1);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0) {
      uint64_t v11 = *(void *)(v10 + 8);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    }
    v3 += v11;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void protobuf::Intelligence_Condition::CheckTypeAndMergeFrom(protobuf::Intelligence_Condition *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence_Condition::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence_Condition::MergeFrom(protobuf::Intelligence_Condition *this, const protobuf::Intelligence_Condition *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 14128);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      *((_DWORD *)this + 4) |= 2u;
      char v9 = (protobuf::Intelligence_Condition_ConditionEntry *)*((void *)this + 4);
      if (!v9)
      {
        char v9 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition_ConditionEntry>(0);
        *((void *)this + 4) = v9;
      }
      if (*((void *)a2 + 4)) {
        unint64_t v10 = (const protobuf::Intelligence_Condition_ConditionEntry *)*((void *)a2 + 4);
      }
      else {
        unint64_t v10 = (const protobuf::Intelligence_Condition_ConditionEntry *)&protobuf::_Intelligence_Condition_ConditionEntry_default_instance_;
      }
      protobuf::Intelligence_Condition_ConditionEntry::MergeFrom(v9, v10);
    }
  }
}

void sub_239A76E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence_Condition::CopyFrom(protobuf::Intelligence_Condition *this, const protobuf::Intelligence_Condition *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence_Condition::Clear(this);
    protobuf::Intelligence_Condition::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence_Condition::IsInitialized(protobuf::Intelligence_Condition *this)
{
  return 1;
}

void protobuf::Intelligence_Condition::InternalSwap(protobuf::Intelligence_Condition *this, protobuf::Intelligence_Condition *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v20;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  unsigned int v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  uint64_t v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v12 = (uint64_t *)*((void *)this + 3);
  }
  unint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v15 = *v14;
  }
  uint64_t v16 = v12[2];
  long long v17 = *(_OWORD *)v12;
  uint64_t v18 = v15[2];
  *(_OWORD *)unsigned int v12 = *(_OWORD *)v15;
  std::string v12[2] = v18;
  *(_OWORD *)unint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
}

void *protobuf::Intelligence_Condition::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence.Condition");
}

void protobuf::Intelligence::InitAsDefaultInstance(protobuf::Intelligence *this)
{
  qword_268A0B9D0 = (uint64_t)&protobuf::_Intelligence_Start_default_instance_;
}

uint64_t protobuf::Intelligence::_Internal::start(protobuf::Intelligence::_Internal *this, const protobuf::Intelligence *a2)
{
  return *((void *)this + 67);
}

protobuf::Intelligence *protobuf::Intelligence::Intelligence(protobuf::Intelligence *this)
{
  *(void *)this = &unk_26ED28D50;
  bzero((char *)this + 8, 0x208uLL);
  if (atomic_load_explicit(scc_info_Intelligence_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_intelligence_2eproto);
  }
  *((void *)this + 66) = &google::protobuf::internal::fixed_address_empty_string;
  *((unsigned char *)this + 552) = 0;
  *(_OWORD *)((char *)this + 536) = 0u;
  return this;
}

void sub_239A77124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _Unwind_Exception *exception_object)
{
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Event>::~RepeatedPtrField(v21 + 63);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v21 + 60);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v21 + 57);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::~RepeatedPtrField(v21 + 54);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::~RepeatedPtrField(v21 + 51);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Variable>::~RepeatedPtrField(v21 + 48);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_List>::~RepeatedPtrField(v21 + 45);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Label>::~RepeatedPtrField(v21 + 42);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Flag>::~RepeatedPtrField(v21 + 39);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Counter>::~RepeatedPtrField(v21 + 36);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition>::~RepeatedPtrField(v21 + 33);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Intent>::~RepeatedPtrField(v21 + 30);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Character>::~RepeatedPtrField(v21 + 27);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Utterance>::~RepeatedPtrField(v21 + 24);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::~RepeatedPtrField(v21 + 21);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::~RepeatedPtrField(v21 + 18);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::~RepeatedPtrField(v21 + 15);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_ReferenceResponse>::~RepeatedPtrField(v21 + 12);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::~RepeatedPtrField(v21 + 9);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_DialogResponse>::~RepeatedPtrField(v21 + 6);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Meta>::~RepeatedPtrField(v21 + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v20);
  _Unwind_Resume(a1);
}

protobuf::Intelligence *protobuf::Intelligence::Intelligence(protobuf::Intelligence *this, const protobuf::Intelligence *a2)
{
  *(void *)this = &unk_26ED28D50;
  *((void *)this + 1) = 0;
  long long v10 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Meta>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_DialogResponse>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  *((void *)this + 9) = 0;
  *((void *)this + 1siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((void *)this + 11) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ReferenceResponse>::TypeHandler>((int **)this + 12, (uint64_t)a2 + 96);
  *((void *)this + 15) = 0;
  *((void *)this + 16) = 0;
  *((void *)this + 17) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>((int **)this + 15, (uint64_t)a2 + 120);
  *((void *)this + 18) = 0;
  *((void *)this + 19) = 0;
  *((void *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((int **)this + 18, (uint64_t)a2 + 144);
  *((void *)this + 21) = 0;
  *((void *)this + 22) = 0;
  *((void *)this + 23) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::TypeHandler>((int **)this + 21, (uint64_t)a2 + 168);
  *((void *)this + 24) = 0;
  *((void *)this + 25) = 0;
  *((void *)this + 26) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Utterance>::TypeHandler>((int **)this + 24, (uint64_t)a2 + 192);
  *((void *)this + 27) = 0;
  *((void *)this + 28) = 0;
  *((void *)this + 29) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Character>::TypeHandler>((int **)this + 27, (uint64_t)a2 + 216);
  *((void *)this + 3siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((void *)this + 31) = 0;
  *((void *)this + 32) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Intent>::TypeHandler>((int **)this + 30, (uint64_t)a2 + 240);
  *((void *)this + 33) = 0;
  *((void *)this + 34) = 0;
  *((void *)this + 35) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition>::TypeHandler>((int **)this + 33, (uint64_t)a2 + 264);
  *((void *)this + 36) = 0;
  *((void *)this + 37) = 0;
  *((void *)this + 38) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Counter>::TypeHandler>((int **)this + 36, (uint64_t)a2 + 288);
  *((void *)this + 39) = 0;
  *((void *)this + 4siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((void *)this + 41) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Flag>::TypeHandler>((int **)this + 39, (uint64_t)a2 + 312);
  *((void *)this + 42) = 0;
  *((void *)this + 43) = 0;
  *((void *)this + 44) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Label>::TypeHandler>((int **)this + 42, (uint64_t)a2 + 336);
  *((void *)this + 45) = 0;
  *((void *)this + 46) = 0;
  *((void *)this + 47) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_List>::TypeHandler>((int **)this + 45, (uint64_t)a2 + 360);
  *((void *)this + 48) = 0;
  *((void *)this + 49) = 0;
  *((void *)this + 5siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Variable>::TypeHandler>((int **)this + 48, (uint64_t)a2 + 384);
  *((void *)this + 51) = 0;
  *((void *)this + 52) = 0;
  *((void *)this + 53) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>((int **)this + 51, (uint64_t)a2 + 408);
  *((void *)this + 54) = 0;
  *((void *)this + 55) = 0;
  *((void *)this + 56) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((int **)this + 54, (uint64_t)a2 + 432);
  *((void *)this + 57) = 0;
  *((void *)this + 58) = 0;
  *((void *)this + 59) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 456, (uint64_t)a2 + 456);
  *((void *)this + 6siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  *((void *)this + 61) = 0;
  *((void *)this + 62) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 480, (uint64_t)a2 + 480);
  *((void *)this + 63) = 0;
  *((void *)this + 64) = 0;
  *((void *)this + 65) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Event>::TypeHandler>((int **)this + 63, (uint64_t)a2 + 504);
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v10, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 66) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 66);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 528, (uint64_t)v6);
    }
  }
  if ((v5 & 2) != 0)
  {
    if (!*((void *)a2 + 67))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.h", 22110);
      unint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: !value || start_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 67) = 0;
  uint64_t v8 = *((void *)a2 + 68);
  *((unsigned char *)this + 552) = *((unsigned char *)a2 + 552);
  *((void *)this + 68) = v8;
  return this;
}

void sub_239A775A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, google::protobuf::internal::RepeatedPtrFieldBase *a10, google::protobuf::internal::ArenaImpl **a11, google::protobuf::internal::ArenaImpl **a12, google::protobuf::internal::ArenaImpl **a13, google::protobuf::internal::ArenaImpl **a14, google::protobuf::internal::ArenaImpl **a15, google::protobuf::internal::ArenaImpl **a16, google::protobuf::internal::ArenaImpl **a17, google::protobuf::internal::ArenaImpl **a18, google::protobuf::internal::ArenaImpl **a19, google::protobuf::internal::ArenaImpl **a20,google::protobuf::internal::ArenaImpl **a21,google::protobuf::internal::ArenaImpl **a22,google::protobuf::internal::ArenaImpl **a23,uint64_t *a24,uint64_t a25,void *a26)
{
  google::protobuf::internal::LogMessage::~LogMessage(&a26);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Event>::~RepeatedPtrField(v28);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v27);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(a10);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::~RepeatedPtrField(a11);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::~RepeatedPtrField(a12);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Variable>::~RepeatedPtrField(a13);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_List>::~RepeatedPtrField(a14);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Label>::~RepeatedPtrField(a15);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Flag>::~RepeatedPtrField(a16);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Counter>::~RepeatedPtrField(a17);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition>::~RepeatedPtrField(a18);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Intent>::~RepeatedPtrField(v26);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Character>::~RepeatedPtrField(v32);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Utterance>::~RepeatedPtrField(v31);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::~RepeatedPtrField(v30);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::~RepeatedPtrField(v29);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::~RepeatedPtrField(a19);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_ReferenceResponse>::~RepeatedPtrField(a20);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::~RepeatedPtrField(a21);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_DialogResponse>::~RepeatedPtrField(a22);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Meta>::~RepeatedPtrField(a23);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(a24);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence::~Intelligence(protobuf::Intelligence *this)
{
  *(void *)this = &unk_26ED28D50;
  uint64_t v2 = *((void *)this + 66);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x23ECAACC0](v2, 0x1012C40EC159624);
  }
  if (this != (protobuf::Intelligence *)&protobuf::_Intelligence_default_instance_)
  {
    uint64_t v4 = *((void *)this + 67);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Event>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 63);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 480);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 456);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 54);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 51);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Variable>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 48);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_List>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 45);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Label>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 42);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Flag>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 39);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Counter>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 36);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 33);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Intent>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 30);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Character>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 27);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Utterance>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 24);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 21);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 18);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 15);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_ReferenceResponse>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 12);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 9);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_DialogResponse>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 6);
  google::protobuf::RepeatedPtrField<protobuf::Intelligence_Meta>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  protobuf::Intelligence::~Intelligence(this);

  JUMPOUT(0x23ECAACC0);
}

uint64_t protobuf::Intelligence::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = a2;
  return this;
}

void *protobuf::Intelligence::default_instance(protobuf::Intelligence *this)
{
  if (atomic_load_explicit(scc_info_Intelligence_intelligence_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Intelligence_intelligence_2eproto);
  }
  return &protobuf::_Intelligence_default_instance_;
}

void protobuf::Intelligence::Clear(protobuf::Intelligence *this)
{
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((v2 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
  }
  else if (v2)
  {
    uint64_t v3 = (protobuf::Intelligence_Meta **)(*((void *)this + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      protobuf::Intelligence_Meta::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 14);
  if ((v6 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
  }
  else if (v6)
  {
    unint64_t v7 = (protobuf::Intelligence_DialogResponse **)(*((void *)this + 8) + 8);
    do
    {
      uint64_t v8 = *v7++;
      protobuf::Intelligence_DialogResponse::Clear(v8);
      --v6;
    }
    while (v6);
    *((_DWORD *)this + 14) = 0;
  }
  uint64_t v10 = *((unsigned int *)this + 20);
  if ((v10 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    int v13 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v13->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
  }
  else if (v10)
  {
    char v11 = (protobuf::Intelligence_BehaviorResponse **)(*((void *)this + 11) + 8);
    do
    {
      unsigned int v12 = *v11++;
      protobuf::Intelligence_BehaviorResponse::Clear(v12);
      --v10;
    }
    while (v10);
    *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  }
  uint64_t v14 = *((unsigned int *)this + 26);
  if ((v14 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    long long v17 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v17->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
  }
  else if (v14)
  {
    unint64_t v15 = (protobuf::Intelligence_ReferenceResponse **)(*((void *)this + 14) + 8);
    do
    {
      uint64_t v16 = *v15++;
      protobuf::Intelligence_ReferenceResponse::Clear(v16);
      --v14;
    }
    while (v14);
    *((_DWORD *)this + 26) = 0;
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>((uint64_t)this + 120);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((uint64_t)this + 144);
  uint64_t v18 = *((unsigned int *)this + 44);
  if ((v18 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v21 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v21->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
  }
  else if (v18)
  {
    uint64_t v19 = (protobuf::Intelligence_Activity **)(*((void *)this + 23) + 8);
    do
    {
      unint64_t v20 = *v19++;
      protobuf::Intelligence_Activity::Clear(v20);
      --v18;
    }
    while (v18);
    *((_DWORD *)this + 44) = 0;
  }
  uint64_t v22 = *((unsigned int *)this + 50);
  if ((v22 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v25 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v25->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
  }
  else if (v22)
  {
    long long v23 = (protobuf::Intelligence_Utterance **)(*((void *)this + 26) + 8);
    do
    {
      uint64_t v24 = *v23++;
      protobuf::Intelligence_Utterance::Clear(v24);
      --v22;
    }
    while (v22);
    *((_DWORD *)this + 5siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = 0;
  }
  uint64_t v26 = *((unsigned int *)this + 56);
  if ((v26 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    long long v29 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v29->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
  }
  else if (v26)
  {
    uint64_t v27 = (protobuf::Intelligence_Character **)(*((void *)this + 29) + 8);
    do
    {
      uint64_t v28 = *v27++;
      protobuf::Intelligence_Character::Clear(v28);
      --v26;
    }
    while (v26);
    *((_DWORD *)this + 56) = 0;
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Intent>::TypeHandler>((uint64_t)this + 240);
  uint64_t v30 = *((unsigned int *)this + 68);
  if ((v30 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v33 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v33->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
  }
  else if (v30)
  {
    uint64_t v31 = (protobuf::Intelligence_Condition **)(*((void *)this + 35) + 8);
    do
    {
      uint64_t v32 = *v31++;
      protobuf::Intelligence_Condition::Clear(v32);
      --v30;
    }
    while (v30);
    *((_DWORD *)this + 68) = 0;
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Counter>::TypeHandler>((uint64_t)this + 288);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Flag>::TypeHandler>((uint64_t)this + 312);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Label>::TypeHandler>((uint64_t)this + 336);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_List>::TypeHandler>((uint64_t)this + 360);
  uint64_t v34 = *((unsigned int *)this + 98);
  if ((v34 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v37 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v37->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
  }
  else if (v34)
  {
    uint64_t v35 = (protobuf::Intelligence_Variable **)(*((void *)this + 50) + 8);
    do
    {
      unsigned int v36 = *v35++;
      protobuf::Intelligence_Variable::Clear(v36);
      --v34;
    }
    while (v34);
    *((_DWORD *)this + 98) = 0;
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>((uint64_t)this + 408);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((uint64_t)this + 432);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 456);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 480);
  uint64_t v38 = *((unsigned int *)this + 128);
  if ((v38 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v41 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v41->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
  }
  else if (v38)
  {
    unsigned int v39 = (protobuf::Intelligence_Event **)(*((void *)this + 65) + 8);
    do
    {
      unsigned int v40 = *v39++;
      protobuf::Intelligence_Event::Clear(v40);
      --v38;
    }
    while (v38);
    *((_DWORD *)this + 128) = 0;
  }
  int v42 = *((_DWORD *)this + 4);
  if ((v42 & 3) != 0)
  {
    if (v42)
    {
      uint64_t v43 = *((void *)this + 66);
      if (*(char *)(v43 + 23) < 0)
      {
        **(unsigned char **)uint64_t v43 = 0;
        *(void *)(v43 + 8) = 0;
        if ((v42 & 2) == 0) {
          goto LABEL_69;
        }
        goto LABEL_66;
      }
      *(unsigned char *)uint64_t v43 = 0;
      *(unsigned char *)(v43 + 23) = 0;
    }
    if ((v42 & 2) == 0) {
      goto LABEL_69;
    }
LABEL_66:
    uint64_t v44 = (protobuf::Intelligence_Start *)*((void *)this + 67);
    if (!v44)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 14304);
      uint64_t v45 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: start_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v45->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
      uint64_t v44 = (protobuf::Intelligence_Start *)*((void *)this + 67);
    }
    protobuf::Intelligence_Start::Clear(v44);
  }
LABEL_69:
  if ((v42 & 0xC) != 0)
  {
    *((unsigned char *)this + 552) = 0;
    *((void *)this + 68) = 0;
  }
  char v47 = *((unsigned char *)this + 8);
  uint64_t v46 = (protobuf::Intelligence *)((char *)this + 8);
  *((_DWORD *)v46 + 2) = 0;
  if (v47) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v46);
  }
}

void sub_239A77F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *protobuf::Intelligence::_InternalParse(uint64_t a1, char *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  v335[0] = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)v335, *((_DWORD *)this + 23)) & 1) == 0)
  {
    unint64_t v7 = (uint64_t *)(a1 + 480);
    uint64_t v8 = (uint64_t *)(a1 + 456);
    while (2)
    {
      TagFallbacint k = v335[0] + 1;
      LODWORD(v9) = *v335[0];
      if (*v335[0] < 0)
      {
        uint64_t v9 = (const char *)(v9 + (*TagFallback << 7) - 128);
        if (*TagFallback < 0)
        {
          TagFallbacint k = (char *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)v335[0], v9);
          v335[0] = TagFallback;
          if (!TagFallback) {
            goto LABEL_415;
          }
LABEL_8:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 9) {
                goto LABEL_398;
              }
              v5 |= 4u;
              *(void *)(a1 + 544) = *(void *)TagFallback;
              v335[0] = TagFallback + 8;
              goto LABEL_411;
            case 2u:
              if (v9 != 18) {
                goto LABEL_398;
              }
              uint64_t v10 = TagFallback - 1;
              while (2)
              {
                char v11 = v10 + 1;
                v335[0] = v11;
                unsigned int v12 = *(int **)(a1 + 40);
                if (!v12)
                {
                  int v14 = *(_DWORD *)(a1 + 36);
LABEL_20:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v14 + 1);
                  unsigned int v12 = *(int **)(a1 + 40);
                  int v14 = *v12;
                  goto LABEL_21;
                }
                uint64_t v13 = *(int *)(a1 + 32);
                int v14 = *v12;
                if ((int)v13 < *v12)
                {
                  *(_DWORD *)(a1 + 32) = v13 + 1;
                  unint64_t v15 = *(protobuf::Intelligence_Meta **)&v12[2 * v13 + 2];
                  goto LABEL_22;
                }
                if (v14 == *(_DWORD *)(a1 + 36)) {
                  goto LABEL_20;
                }
LABEL_21:
                *unsigned int v12 = v14 + 1;
                unint64_t v15 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Meta>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
                uint64_t v16 = *(void *)(a1 + 40);
                uint64_t v17 = *(int *)(a1 + 32);
                *(_DWORD *)(a1 + 32) = v17 + 1;
                *(void *)(v16 + 8 * v17 + 8) = v15;
                char v11 = v335[0];
LABEL_22:
                unsigned int v18 = *v11;
                if (*v11 < 0)
                {
                  SizeFallbacint k = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v11, (const char *)*v11);
                  if (!SizeFallback) {
                    goto LABEL_414;
                  }
                  uint64_t v19 = SizeFallback;
                  unsigned int v18 = v21;
                }
                else
                {
                  uint64_t v19 = v11 + 1;
                }
                int v22 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v19, v18);
                int v23 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v23--, 1);
                *((_DWORD *)this + 22) = v23;
                if (v23 < 0 == v24)
                {
                  int v25 = v22;
                  uint64_t v10 = (char *)protobuf::Intelligence_Meta::_InternalParse((uint64_t)v15, (google::protobuf::internal *)v19, this);
                  if (v10)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v26 = *((_DWORD *)this + 7) + v25;
                      *((_DWORD *)this + 7) = v26;
                      unint64_t v27 = *((void *)this + 1) + (v26 & (v26 >> 31));
                      *(void *)this = v27;
                      v335[0] = v10;
                      if (v27 <= (unint64_t)v10 || *v10 != 18) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 4u:
              if (v9 != 34) {
                goto LABEL_398;
              }
              uint64_t v28 = TagFallback - 1;
              while (2)
              {
                long long v29 = v28 + 1;
                v335[0] = v29;
                uint64_t v30 = *(int **)(a1 + 64);
                if (!v30)
                {
                  int v32 = *(_DWORD *)(a1 + 60);
LABEL_39:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v32 + 1);
                  uint64_t v30 = *(int **)(a1 + 64);
                  int v32 = *v30;
                  goto LABEL_40;
                }
                uint64_t v31 = *(int *)(a1 + 56);
                int v32 = *v30;
                if ((int)v31 < *v30)
                {
                  *(_DWORD *)(a1 + 56) = v31 + 1;
                  uint64_t v33 = *(protobuf::Intelligence_DialogResponse **)&v30[2 * v31 + 2];
                  goto LABEL_41;
                }
                if (v32 == *(_DWORD *)(a1 + 60)) {
                  goto LABEL_39;
                }
LABEL_40:
                *uint64_t v30 = v32 + 1;
                uint64_t v33 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_DialogResponse>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
                uint64_t v34 = *(void *)(a1 + 64);
                uint64_t v35 = *(int *)(a1 + 56);
                *(_DWORD *)(a1 + 56) = v35 + 1;
                *(void *)(v34 + 8 * v35 + 8) = v33;
                long long v29 = v335[0];
LABEL_41:
                unsigned int v36 = *v29;
                if (*v29 < 0)
                {
                  uint64_t v38 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v29, (const char *)*v29);
                  if (!v38) {
                    goto LABEL_414;
                  }
                  uint64_t v37 = v38;
                  unsigned int v36 = v39;
                }
                else
                {
                  uint64_t v37 = v29 + 1;
                }
                int v40 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v37, v36);
                int v41 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v41--, 1);
                *((_DWORD *)this + 22) = v41;
                if (v41 < 0 == v24)
                {
                  int v42 = v40;
                  uint64_t v28 = protobuf::Intelligence_DialogResponse::_InternalParse((uint64_t)v33, v37, this);
                  if (v28)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v43 = *((_DWORD *)this + 7) + v42;
                      *((_DWORD *)this + 7) = v43;
                      unint64_t v44 = *((void *)this + 1) + (v43 & (v43 >> 31));
                      *(void *)this = v44;
                      v335[0] = v28;
                      if (v44 <= (unint64_t)v28 || *v28 != 34) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 5u:
              if (v9 != 42) {
                goto LABEL_398;
              }
              uint64_t v45 = TagFallback - 1;
              while (2)
              {
                uint64_t v46 = v45 + 1;
                v335[0] = v46;
                char v47 = *(int **)(a1 + 88);
                if (!v47)
                {
                  int v49 = *(_DWORD *)(a1 + 84);
LABEL_58:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v49 + 1);
                  char v47 = *(int **)(a1 + 88);
                  int v49 = *v47;
                  goto LABEL_59;
                }
                uint64_t v48 = *(int *)(a1 + 80);
                int v49 = *v47;
                if ((int)v48 < *v47)
                {
                  *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v48 + 1;
                  uint64_t v50 = *(protobuf::Intelligence_BehaviorResponse **)&v47[2 * v48 + 2];
                  goto LABEL_60;
                }
                if (v49 == *(_DWORD *)(a1 + 84)) {
                  goto LABEL_58;
                }
LABEL_59:
                *char v47 = v49 + 1;
                uint64_t v50 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_BehaviorResponse>(*(google::protobuf::internal::ArenaImpl **)(a1 + 72));
                uint64_t v51 = *(void *)(a1 + 88);
                uint64_t v52 = *(int *)(a1 + 80);
                *(_DWORD *)(a1 + 8siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v52 + 1;
                *(void *)(v51 + 8 * v52 + 8) = v50;
                uint64_t v46 = v335[0];
LABEL_60:
                unsigned int v53 = *v46;
                if (*v46 < 0)
                {
                  uint64_t v55 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v46, (const char *)*v46);
                  if (!v55) {
                    goto LABEL_414;
                  }
                  uint64_t v54 = v55;
                  unsigned int v53 = v56;
                }
                else
                {
                  uint64_t v54 = v46 + 1;
                }
                int v57 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v54, v53);
                int v58 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v58--, 1);
                *((_DWORD *)this + 22) = v58;
                if (v58 < 0 == v24)
                {
                  int v59 = v57;
                  uint64_t v45 = (char *)protobuf::Intelligence_BehaviorResponse::_InternalParse((uint64_t)v50, (google::protobuf::internal *)v54, this);
                  if (v45)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v60 = *((_DWORD *)this + 7) + v59;
                      *((_DWORD *)this + 7) = v60;
                      unint64_t v61 = *((void *)this + 1) + (v60 & (v60 >> 31));
                      *(void *)this = v61;
                      v335[0] = v45;
                      if (v61 <= (unint64_t)v45 || *v45 != 42) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 6u:
              if (v9 != 50) {
                goto LABEL_398;
              }
              uint64_t v62 = TagFallback - 1;
              while (2)
              {
                unsigned int v63 = v62 + 1;
                v335[0] = v63;
                unsigned int v64 = *(int **)(a1 + 112);
                if (!v64)
                {
                  int v66 = *(_DWORD *)(a1 + 108);
LABEL_77:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 96), v66 + 1);
                  unsigned int v64 = *(int **)(a1 + 112);
                  int v66 = *v64;
                  goto LABEL_78;
                }
                uint64_t v65 = *(int *)(a1 + 104);
                int v66 = *v64;
                if ((int)v65 < *v64)
                {
                  *(_DWORD *)(a1 + 104) = v65 + 1;
                  uint64_t v67 = *(protobuf::Intelligence_ReferenceResponse **)&v64[2 * v65 + 2];
                  goto LABEL_79;
                }
                if (v66 == *(_DWORD *)(a1 + 108)) {
                  goto LABEL_77;
                }
LABEL_78:
                int *v64 = v66 + 1;
                uint64_t v67 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_ReferenceResponse>(*(google::protobuf::internal::ArenaImpl **)(a1 + 96));
                uint64_t v68 = *(void *)(a1 + 112);
                uint64_t v69 = *(int *)(a1 + 104);
                *(_DWORD *)(a1 + 104) = v69 + 1;
                *(void *)(v68 + 8 * v69 + 8) = v67;
                unsigned int v63 = v335[0];
LABEL_79:
                unsigned int v70 = *v63;
                if (*v63 < 0)
                {
                  uint64_t v72 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v63, (const char *)*v63);
                  if (!v72) {
                    goto LABEL_414;
                  }
                  unsigned int v71 = v72;
                  unsigned int v70 = v73;
                }
                else
                {
                  unsigned int v71 = v63 + 1;
                }
                int v74 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v71, v70);
                int v75 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v75--, 1);
                *((_DWORD *)this + 22) = v75;
                if (v75 < 0 == v24)
                {
                  int v76 = v74;
                  uint64_t v62 = (char *)protobuf::Intelligence_ReferenceResponse::_InternalParse((uint64_t)v67, (google::protobuf::internal *)v71, this);
                  if (v62)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v77 = *((_DWORD *)this + 7) + v76;
                      *((_DWORD *)this + 7) = v77;
                      unint64_t v78 = *((void *)this + 1) + (v77 & (v77 >> 31));
                      *(void *)this = v78;
                      v335[0] = v62;
                      if (v78 <= (unint64_t)v62 || *v62 != 50) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 7u:
              if (v9 != 58) {
                goto LABEL_398;
              }
              uint64_t v79 = TagFallback - 1;
              while (1)
              {
                int v80 = (google::protobuf::internal *)(v79 + 1);
                v335[0] = v79 + 1;
                uint64_t v81 = *(int **)(a1 + 136);
                if (!v81) {
                  break;
                }
                uint64_t v82 = *(int *)(a1 + 128);
                int v83 = *v81;
                if ((int)v82 >= *v81)
                {
                  if (v83 == *(_DWORD *)(a1 + 132))
                  {
LABEL_96:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 120), v83 + 1);
                    uint64_t v81 = *(int **)(a1 + 136);
                    int v83 = *v81;
                  }
                  *uint64_t v81 = v83 + 1;
                  int v84 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_ResponseGroup>(*(google::protobuf::internal::ArenaImpl **)(a1 + 120));
                  uint64_t v85 = *(void *)(a1 + 136);
                  uint64_t v86 = *(int *)(a1 + 128);
                  *(_DWORD *)(a1 + 128) = v86 + 1;
                  *(void *)(v85 + 8 * v86 + 8) = v84;
                  int v80 = (google::protobuf::internal *)v335[0];
                  goto LABEL_98;
                }
                *(_DWORD *)(a1 + 128) = v82 + 1;
                int v84 = *(protobuf::Intelligence_ResponseGroup **)&v81[2 * v82 + 2];
LABEL_98:
                uint64_t v79 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_ResponseGroup>(this, (uint64_t)v84, v80);
                v335[0] = v79;
                if (!v79) {
                  goto LABEL_414;
                }
                if (*(void *)this <= (unint64_t)v79 || *v79 != 58) {
                  goto LABEL_411;
                }
              }
              int v83 = *(_DWORD *)(a1 + 132);
              goto LABEL_96;
            case 8u:
              if (v9 != 66) {
                goto LABEL_398;
              }
              uint64_t v87 = TagFallback - 1;
              while (1)
              {
                uint64_t v88 = (google::protobuf::internal *)(v87 + 1);
                v335[0] = v87 + 1;
                long long v89 = *(int **)(a1 + 160);
                if (!v89) {
                  break;
                }
                uint64_t v90 = *(int *)(a1 + 152);
                int v91 = *v89;
                if ((int)v90 >= *v89)
                {
                  if (v91 == *(_DWORD *)(a1 + 156))
                  {
LABEL_109:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 144), v91 + 1);
                    long long v89 = *(int **)(a1 + 160);
                    int v91 = *v89;
                  }
                  *long long v89 = v91 + 1;
                  uint64_t v92 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup>(*(google::protobuf::internal::ArenaImpl **)(a1 + 144));
                  uint64_t v93 = *(void *)(a1 + 160);
                  uint64_t v94 = *(int *)(a1 + 152);
                  *(_DWORD *)(a1 + 152) = v94 + 1;
                  *(void *)(v93 + 8 * v94 + 8) = v92;
                  uint64_t v88 = (google::protobuf::internal *)v335[0];
                  goto LABEL_111;
                }
                *(_DWORD *)(a1 + 152) = v90 + 1;
                uint64_t v92 = *(protobuf::Intelligence_InputGroup **)&v89[2 * v90 + 2];
LABEL_111:
                uint64_t v87 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_InputGroup>(this, (uint64_t)v92, v88);
                v335[0] = v87;
                if (!v87) {
                  goto LABEL_414;
                }
                if (*(void *)this <= (unint64_t)v87 || *v87 != 66) {
                  goto LABEL_411;
                }
              }
              int v91 = *(_DWORD *)(a1 + 156);
              goto LABEL_109;
            case 9u:
              if (v9 != 74) {
                goto LABEL_398;
              }
              uint64_t v95 = TagFallback - 1;
              while (2)
              {
                uint64_t v96 = v95 + 1;
                v335[0] = v96;
                unsigned int v97 = *(int **)(a1 + 184);
                if (!v97)
                {
                  int v99 = *(_DWORD *)(a1 + 180);
LABEL_122:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 168), v99 + 1);
                  unsigned int v97 = *(int **)(a1 + 184);
                  int v99 = *v97;
                  goto LABEL_123;
                }
                uint64_t v98 = *(int *)(a1 + 176);
                int v99 = *v97;
                if ((int)v98 < *v97)
                {
                  *(_DWORD *)(a1 + 176) = v98 + 1;
                  unsigned int v100 = *(protobuf::Intelligence_Activity **)&v97[2 * v98 + 2];
                  goto LABEL_124;
                }
                if (v99 == *(_DWORD *)(a1 + 180)) {
                  goto LABEL_122;
                }
LABEL_123:
                int *v97 = v99 + 1;
                unsigned int v100 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Activity>(*(google::protobuf::internal::ArenaImpl **)(a1 + 168));
                uint64_t v101 = *(void *)(a1 + 184);
                uint64_t v102 = *(int *)(a1 + 176);
                *(_DWORD *)(a1 + 176) = v102 + 1;
                *(void *)(v101 + 8 * v102 + 8) = v100;
                uint64_t v96 = v335[0];
LABEL_124:
                unsigned int v103 = *v96;
                if (*v96 < 0)
                {
                  unint64_t v105 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v96, (const char *)*v96);
                  if (!v105) {
                    goto LABEL_414;
                  }
                  int v104 = v105;
                  unsigned int v103 = v106;
                }
                else
                {
                  int v104 = v96 + 1;
                }
                int v107 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v104, v103);
                int v108 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v108--, 1);
                *((_DWORD *)this + 22) = v108;
                if (v108 < 0 == v24)
                {
                  int v109 = v107;
                  uint64_t v95 = protobuf::Intelligence_Activity::_InternalParse((uint64_t)v100, (google::protobuf::internal *)v104, this);
                  if (v95)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v110 = *((_DWORD *)this + 7) + v109;
                      *((_DWORD *)this + 7) = v110;
                      unint64_t v111 = *((void *)this + 1) + (v110 & (v110 >> 31));
                      *(void *)this = v111;
                      v335[0] = v95;
                      if (v111 <= (unint64_t)v95 || *v95 != 74) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 0xAu:
              if (v9 != 82) {
                goto LABEL_398;
              }
              int v112 = TagFallback - 1;
              while (2)
              {
                uint64_t v113 = v112 + 1;
                v335[0] = v113;
                uint64_t v114 = *(int **)(a1 + 208);
                if (!v114)
                {
                  int v116 = *(_DWORD *)(a1 + 204);
LABEL_141:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 192), v116 + 1);
                  uint64_t v114 = *(int **)(a1 + 208);
                  int v116 = *v114;
                  goto LABEL_142;
                }
                uint64_t v115 = *(int *)(a1 + 200);
                int v116 = *v114;
                if ((int)v115 < *v114)
                {
                  *(_DWORD *)(a1 + 20siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v115 + 1;
                  int v117 = *(protobuf::Intelligence_Utterance **)&v114[2 * v115 + 2];
                  goto LABEL_143;
                }
                if (v116 == *(_DWORD *)(a1 + 204)) {
                  goto LABEL_141;
                }
LABEL_142:
                *uint64_t v114 = v116 + 1;
                int v117 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Utterance>(*(google::protobuf::internal::ArenaImpl **)(a1 + 192));
                uint64_t v118 = *(void *)(a1 + 208);
                uint64_t v119 = *(int *)(a1 + 200);
                *(_DWORD *)(a1 + 20siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v119 + 1;
                *(void *)(v118 + 8 * v119 + 8) = v117;
                uint64_t v113 = v335[0];
LABEL_143:
                unsigned int v120 = *v113;
                if (*v113 < 0)
                {
                  int v122 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v113, (const char *)*v113);
                  if (!v122) {
                    goto LABEL_414;
                  }
                  int v121 = v122;
                  unsigned int v120 = v123;
                }
                else
                {
                  int v121 = v113 + 1;
                }
                int v124 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v121, v120);
                int v125 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v125--, 1);
                *((_DWORD *)this + 22) = v125;
                if (v125 < 0 == v24)
                {
                  int v126 = v124;
                  int v112 = (char *)protobuf::Intelligence_Utterance::_InternalParse((uint64_t)v117, (google::protobuf::internal *)v121, this);
                  if (v112)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v127 = *((_DWORD *)this + 7) + v126;
                      *((_DWORD *)this + 7) = v127;
                      unint64_t v128 = *((void *)this + 1) + (v127 & (v127 >> 31));
                      *(void *)this = v128;
                      v335[0] = v112;
                      if (v128 <= (unint64_t)v112 || *v112 != 82) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 0xBu:
              if (v9 != 90) {
                goto LABEL_398;
              }
              char v129 = TagFallback - 1;
              while (2)
              {
                long long v130 = v129 + 1;
                v335[0] = v130;
                char v131 = *(int **)(a1 + 232);
                if (!v131)
                {
                  int v133 = *(_DWORD *)(a1 + 228);
LABEL_160:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 216), v133 + 1);
                  char v131 = *(int **)(a1 + 232);
                  int v133 = *v131;
                  goto LABEL_161;
                }
                uint64_t v132 = *(int *)(a1 + 224);
                int v133 = *v131;
                if ((int)v132 < *v131)
                {
                  *(_DWORD *)(a1 + 224) = v132 + 1;
                  uint64_t v134 = *(protobuf::Intelligence_Character **)&v131[2 * v132 + 2];
                  goto LABEL_162;
                }
                if (v133 == *(_DWORD *)(a1 + 228)) {
                  goto LABEL_160;
                }
LABEL_161:
                *char v131 = v133 + 1;
                uint64_t v134 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Character>(*(google::protobuf::internal::ArenaImpl **)(a1 + 216));
                uint64_t v135 = *(void *)(a1 + 232);
                uint64_t v136 = *(int *)(a1 + 224);
                *(_DWORD *)(a1 + 224) = v136 + 1;
                *(void *)(v135 + 8 * v136 + 8) = v134;
                long long v130 = v335[0];
LABEL_162:
                unsigned int v137 = *v130;
                if (*v130 < 0)
                {
                  uint64_t v139 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v130, (const char *)*v130);
                  if (!v139) {
                    goto LABEL_414;
                  }
                  uint64_t v138 = v139;
                  unsigned int v137 = v140;
                }
                else
                {
                  uint64_t v138 = v130 + 1;
                }
                int v141 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v138, v137);
                int v142 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v142--, 1);
                *((_DWORD *)this + 22) = v142;
                if (v142 < 0 == v24)
                {
                  int v143 = v141;
                  char v129 = (char *)protobuf::Intelligence_Character::_InternalParse((uint64_t)v134, (google::protobuf::internal *)v138, this);
                  if (v129)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v144 = *((_DWORD *)this + 7) + v143;
                      *((_DWORD *)this + 7) = v144;
                      unint64_t v145 = *((void *)this + 1) + (v144 & (v144 >> 31));
                      *(void *)this = v145;
                      v335[0] = v129;
                      if (v145 <= (unint64_t)v129 || *v129 != 90) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 0xDu:
              if (v9 != 106) {
                goto LABEL_398;
              }
              uint64_t v146 = TagFallback - 1;
              while (2)
              {
                uint64_t v147 = v146 + 1;
                v335[0] = v147;
                std::string::size_type v148 = *(int **)(a1 + 256);
                if (!v148)
                {
                  int v150 = *(_DWORD *)(a1 + 252);
LABEL_179:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 240), v150 + 1);
                  std::string::size_type v148 = *(int **)(a1 + 256);
                  int v150 = *v148;
                  goto LABEL_180;
                }
                uint64_t v149 = *(int *)(a1 + 248);
                int v150 = *v148;
                if ((int)v149 < *v148)
                {
                  *(_DWORD *)(a1 + 248) = v149 + 1;
                  uint64_t v151 = *(protobuf::Intelligence_Intent **)&v148[2 * v149 + 2];
                  goto LABEL_181;
                }
                if (v150 == *(_DWORD *)(a1 + 252)) {
                  goto LABEL_179;
                }
LABEL_180:
                int *v148 = v150 + 1;
                uint64_t v151 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Intent>(*(google::protobuf::internal::ArenaImpl **)(a1 + 240));
                uint64_t v152 = *(void *)(a1 + 256);
                uint64_t v153 = *(int *)(a1 + 248);
                *(_DWORD *)(a1 + 248) = v153 + 1;
                *(void *)(v152 + 8 * v153 + 8) = v151;
                uint64_t v147 = v335[0];
LABEL_181:
                unsigned int v154 = *v147;
                if (*v147 < 0)
                {
                  uint64_t v156 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v147, (const char *)*v147);
                  if (!v156) {
                    goto LABEL_414;
                  }
                  size_t v155 = v156;
                  unsigned int v154 = v157;
                }
                else
                {
                  size_t v155 = v147 + 1;
                }
                int v158 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v155, v154);
                int v159 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v159--, 1);
                *((_DWORD *)this + 22) = v159;
                if (v159 < 0 == v24)
                {
                  int v160 = v158;
                  uint64_t v146 = protobuf::Intelligence_Intent::_InternalParse((uint64_t)v151, (google::protobuf::internal *)v155, this);
                  if (v146)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v161 = *((_DWORD *)this + 7) + v160;
                      *((_DWORD *)this + 7) = v161;
                      unint64_t v162 = *((void *)this + 1) + (v161 & (v161 >> 31));
                      *(void *)this = v162;
                      v335[0] = v146;
                      if (v162 <= (unint64_t)v146 || *v146 != 106) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 0x10u:
              if (v9 != 130) {
                goto LABEL_398;
              }
              v163 = TagFallback - 2;
              while (2)
              {
                v164 = v163 + 2;
                v335[0] = v164;
                long long v165 = *(int **)(a1 + 280);
                if (!v165)
                {
                  int v167 = *(_DWORD *)(a1 + 276);
LABEL_198:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 264), v167 + 1);
                  long long v165 = *(int **)(a1 + 280);
                  int v167 = *v165;
                  goto LABEL_199;
                }
                uint64_t v166 = *(int *)(a1 + 272);
                int v167 = *v165;
                if ((int)v166 < *v165)
                {
                  *(_DWORD *)(a1 + 272) = v166 + 1;
                  char v168 = *(protobuf::Intelligence_Condition **)&v165[2 * v166 + 2];
                  goto LABEL_200;
                }
                if (v167 == *(_DWORD *)(a1 + 276)) {
                  goto LABEL_198;
                }
LABEL_199:
                *long long v165 = v167 + 1;
                char v168 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition>(*(google::protobuf::internal::ArenaImpl **)(a1 + 264));
                uint64_t v169 = *(void *)(a1 + 280);
                uint64_t v170 = *(int *)(a1 + 272);
                *(_DWORD *)(a1 + 272) = v170 + 1;
                *(void *)(v169 + 8 * v170 + 8) = v168;
                v164 = v335[0];
LABEL_200:
                unsigned int v171 = *v164;
                if (*v164 < 0)
                {
                  std::string v173 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v164, (const char *)*v164);
                  if (!v173) {
                    goto LABEL_414;
                  }
                  std::string v172 = v173;
                  unsigned int v171 = v174;
                }
                else
                {
                  std::string v172 = v164 + 1;
                }
                int v175 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v172, v171);
                int v176 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v176--, 1);
                *((_DWORD *)this + 22) = v176;
                if (v176 < 0 == v24)
                {
                  int v177 = v175;
                  v163 = (char *)protobuf::Intelligence_Condition::_InternalParse((uint64_t)v168, (google::protobuf::internal *)v172, this);
                  if (v163)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v178 = *((_DWORD *)this + 7) + v177;
                      *((_DWORD *)this + 7) = v178;
                      unint64_t v179 = *((void *)this + 1) + (v178 & (v178 >> 31));
                      *(void *)this = v179;
                      v335[0] = v163;
                      if (v179 <= (unint64_t)v163 || *(_WORD *)v163 != 386) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 0x11u:
              if (v9 != 138) {
                goto LABEL_398;
              }
              unsigned __int8 v180 = TagFallback - 2;
              while (2)
              {
                v181 = v180 + 2;
                v335[0] = v181;
                unsigned __int8 v182 = *(int **)(a1 + 304);
                if (!v182)
                {
                  int v184 = *(_DWORD *)(a1 + 300);
LABEL_217:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 288), v184 + 1);
                  unsigned __int8 v182 = *(int **)(a1 + 304);
                  int v184 = *v182;
                  goto LABEL_218;
                }
                uint64_t v183 = *(int *)(a1 + 296);
                int v184 = *v182;
                if ((int)v183 < *v182)
                {
                  *(_DWORD *)(a1 + 296) = v183 + 1;
                  v185 = *(protobuf::Intelligence_Counter **)&v182[2 * v183 + 2];
                  goto LABEL_219;
                }
                if (v184 == *(_DWORD *)(a1 + 300)) {
                  goto LABEL_217;
                }
LABEL_218:
                int *v182 = v184 + 1;
                v185 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Counter>(*(google::protobuf::internal::ArenaImpl **)(a1 + 288));
                uint64_t v186 = *(void *)(a1 + 304);
                uint64_t v187 = *(int *)(a1 + 296);
                *(_DWORD *)(a1 + 296) = v187 + 1;
                *(void *)(v186 + 8 * v187 + 8) = v185;
                v181 = v335[0];
LABEL_219:
                unsigned int v188 = *v181;
                if (*v181 < 0)
                {
                  unsigned __int8 v190 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v181, (const char *)*v181);
                  if (!v190) {
                    goto LABEL_414;
                  }
                  v189 = v190;
                  unsigned int v188 = v191;
                }
                else
                {
                  v189 = v181 + 1;
                }
                int v192 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v189, v188);
                int v193 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v193--, 1);
                *((_DWORD *)this + 22) = v193;
                if (v193 < 0 == v24)
                {
                  int v194 = v192;
                  unsigned __int8 v180 = protobuf::Intelligence_Counter::_InternalParse((uint64_t)v185, (google::protobuf::internal *)v189, this);
                  if (v180)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v195 = *((_DWORD *)this + 7) + v194;
                      *((_DWORD *)this + 7) = v195;
                      unint64_t v196 = *((void *)this + 1) + (v195 & (v195 >> 31));
                      *(void *)this = v196;
                      v335[0] = v180;
                      if (v196 <= (unint64_t)v180 || *(_WORD *)v180 != 394) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 0x12u:
              if (v9 != 146) {
                goto LABEL_398;
              }
              v197 = TagFallback - 2;
              while (2)
              {
                v198 = v197 + 2;
                v335[0] = v198;
                v199 = *(int **)(a1 + 328);
                if (!v199)
                {
                  int v201 = *(_DWORD *)(a1 + 324);
LABEL_236:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 312), v201 + 1);
                  v199 = *(int **)(a1 + 328);
                  int v201 = *v199;
                  goto LABEL_237;
                }
                uint64_t v200 = *(int *)(a1 + 320);
                int v201 = *v199;
                if ((int)v200 < *v199)
                {
                  *(_DWORD *)(a1 + 32siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v200 + 1;
                  v202 = *(protobuf::Intelligence_Flag **)&v199[2 * v200 + 2];
                  goto LABEL_238;
                }
                if (v201 == *(_DWORD *)(a1 + 324)) {
                  goto LABEL_236;
                }
LABEL_237:
                int *v199 = v201 + 1;
                v202 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Flag>(*(google::protobuf::internal::ArenaImpl **)(a1 + 312));
                uint64_t v203 = *(void *)(a1 + 328);
                uint64_t v204 = *(int *)(a1 + 320);
                *(_DWORD *)(a1 + 32siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v204 + 1;
                *(void *)(v203 + 8 * v204 + 8) = v202;
                v198 = v335[0];
LABEL_238:
                unsigned int v205 = *v198;
                if (*v198 < 0)
                {
                  v207 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v198, (const char *)*v198);
                  if (!v207) {
                    goto LABEL_414;
                  }
                  v206 = v207;
                  unsigned int v205 = v208;
                }
                else
                {
                  v206 = v198 + 1;
                }
                int v209 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v206, v205);
                int v210 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v210--, 1);
                *((_DWORD *)this + 22) = v210;
                if (v210 < 0 == v24)
                {
                  int v211 = v209;
                  v197 = (char *)protobuf::Intelligence_Flag::_InternalParse((uint64_t)v202, (google::protobuf::internal *)v206, this);
                  if (v197)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v212 = *((_DWORD *)this + 7) + v211;
                      *((_DWORD *)this + 7) = v212;
                      unint64_t v213 = *((void *)this + 1) + (v212 & (v212 >> 31));
                      *(void *)this = v213;
                      v335[0] = v197;
                      if (v213 <= (unint64_t)v197 || *(_WORD *)v197 != 402) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 0x13u:
              if (v9 != 154) {
                goto LABEL_398;
              }
              std::string v214 = TagFallback - 2;
              while (2)
              {
                std::string v215 = v214 + 2;
                v335[0] = v215;
                v216 = *(int **)(a1 + 352);
                if (!v216)
                {
                  int v218 = *(_DWORD *)(a1 + 348);
LABEL_255:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 336), v218 + 1);
                  v216 = *(int **)(a1 + 352);
                  int v218 = *v216;
                  goto LABEL_256;
                }
                uint64_t v217 = *(int *)(a1 + 344);
                int v218 = *v216;
                if ((int)v217 < *v216)
                {
                  *(_DWORD *)(a1 + 344) = v217 + 1;
                  char v219 = *(protobuf::Intelligence_Label **)&v216[2 * v217 + 2];
                  goto LABEL_257;
                }
                if (v218 == *(_DWORD *)(a1 + 348)) {
                  goto LABEL_255;
                }
LABEL_256:
                int *v216 = v218 + 1;
                char v219 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Label>(*(google::protobuf::internal::ArenaImpl **)(a1 + 336));
                uint64_t v220 = *(void *)(a1 + 352);
                uint64_t v221 = *(int *)(a1 + 344);
                *(_DWORD *)(a1 + 344) = v221 + 1;
                *(void *)(v220 + 8 * v221 + 8) = v219;
                std::string v215 = v335[0];
LABEL_257:
                unsigned int v222 = *v215;
                if (*v215 < 0)
                {
                  char v224 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v215, (const char *)*v215);
                  if (!v224) {
                    goto LABEL_414;
                  }
                  v223 = v224;
                  unsigned int v222 = v225;
                }
                else
                {
                  v223 = v215 + 1;
                }
                int v226 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v223, v222);
                int v227 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v227--, 1);
                *((_DWORD *)this + 22) = v227;
                if (v227 < 0 == v24)
                {
                  int v228 = v226;
                  std::string v214 = (char *)protobuf::Intelligence_Label::_InternalParse((uint64_t)v219, (google::protobuf::internal *)v223, this);
                  if (v214)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v229 = *((_DWORD *)this + 7) + v228;
                      *((_DWORD *)this + 7) = v229;
                      unint64_t v230 = *((void *)this + 1) + (v229 & (v229 >> 31));
                      *(void *)this = v230;
                      v335[0] = v214;
                      if (v230 <= (unint64_t)v214 || *(_WORD *)v214 != 410) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 0x14u:
              if (v9 != 162) {
                goto LABEL_398;
              }
              v231 = TagFallback - 2;
              while (2)
              {
                v232 = v231 + 2;
                v335[0] = v232;
                v233 = *(int **)(a1 + 376);
                if (!v233)
                {
                  int v235 = *(_DWORD *)(a1 + 372);
LABEL_274:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 360), v235 + 1);
                  v233 = *(int **)(a1 + 376);
                  int v235 = *v233;
                  goto LABEL_275;
                }
                uint64_t v234 = *(int *)(a1 + 368);
                int v235 = *v233;
                if ((int)v234 < *v233)
                {
                  *(_DWORD *)(a1 + 368) = v234 + 1;
                  v236 = *(protobuf::Intelligence_List **)&v233[2 * v234 + 2];
                  goto LABEL_276;
                }
                if (v235 == *(_DWORD *)(a1 + 372)) {
                  goto LABEL_274;
                }
LABEL_275:
                int *v233 = v235 + 1;
                v236 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_List>(*(google::protobuf::internal::ArenaImpl **)(a1 + 360));
                uint64_t v237 = *(void *)(a1 + 376);
                uint64_t v238 = *(int *)(a1 + 368);
                *(_DWORD *)(a1 + 368) = v238 + 1;
                *(void *)(v237 + 8 * v238 + 8) = v236;
                v232 = v335[0];
LABEL_276:
                unsigned int v239 = *v232;
                if (*v232 < 0)
                {
                  v241 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v232, (const char *)*v232);
                  if (!v241) {
                    goto LABEL_414;
                  }
                  v240 = v241;
                  unsigned int v239 = v242;
                }
                else
                {
                  v240 = v232 + 1;
                }
                int v243 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v240, v239);
                int v244 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v244--, 1);
                *((_DWORD *)this + 22) = v244;
                if (v244 < 0 == v24)
                {
                  int v245 = v243;
                  v231 = protobuf::Intelligence_List::_InternalParse((uint64_t)v236, (google::protobuf::internal *)v240, this);
                  if (v231)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v246 = *((_DWORD *)this + 7) + v245;
                      *((_DWORD *)this + 7) = v246;
                      unint64_t v247 = *((void *)this + 1) + (v246 & (v246 >> 31));
                      *(void *)this = v247;
                      v335[0] = v231;
                      if (v247 <= (unint64_t)v231 || *(_WORD *)v231 != 418) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 0x16u:
              if (v9 != 176) {
                goto LABEL_398;
              }
              v5 |= 8u;
              v248 = TagFallback + 1;
              unint64_t v249 = *TagFallback;
              if ((*TagFallback & 0x80000000) == 0) {
                goto LABEL_290;
              }
              int v250 = *v248;
              unint64_t v249 = v249 + (v250 << 7) - 128;
              if (v250 < 0)
              {
                v332 = (char *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, v249);
                v335[0] = v332;
                *(unsigned char *)(a1 + 552) = v333 != 0;
                if (!v332) {
                  goto LABEL_414;
                }
              }
              else
              {
                v248 = TagFallback + 2;
LABEL_290:
                v335[0] = v248;
                *(unsigned char *)(a1 + 552) = v249 != 0;
              }
              goto LABEL_411;
            case 0x1Au:
              if (v9 != 210) {
                goto LABEL_398;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              v251 = *(std::string **)(a1 + 528);
              if (v251 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(a1 + 528, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              v252 = google::protobuf::internal::InlineGreedyStringParser(v251, TagFallback, (uint64_t)this);
              goto LABEL_403;
            case 0x1Bu:
              if (v9 != 218) {
                goto LABEL_398;
              }
              v253 = TagFallback - 2;
              while (2)
              {
                v254 = v253 + 2;
                v335[0] = v254;
                v255 = *(int **)(a1 + 400);
                if (!v255)
                {
                  int v257 = *(_DWORD *)(a1 + 396);
LABEL_302:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 384), v257 + 1);
                  v255 = *(int **)(a1 + 400);
                  int v257 = *v255;
                  goto LABEL_303;
                }
                uint64_t v256 = *(int *)(a1 + 392);
                int v257 = *v255;
                if ((int)v256 < *v255)
                {
                  *(_DWORD *)(a1 + 392) = v256 + 1;
                  v258 = *(protobuf::Intelligence_Variable **)&v255[2 * v256 + 2];
                  goto LABEL_304;
                }
                if (v257 == *(_DWORD *)(a1 + 396)) {
                  goto LABEL_302;
                }
LABEL_303:
                int *v255 = v257 + 1;
                v258 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Variable>(*(google::protobuf::internal::ArenaImpl **)(a1 + 384));
                uint64_t v259 = *(void *)(a1 + 400);
                uint64_t v260 = *(int *)(a1 + 392);
                *(_DWORD *)(a1 + 392) = v260 + 1;
                *(void *)(v259 + 8 * v260 + 8) = v258;
                v254 = v335[0];
LABEL_304:
                unsigned int v261 = *v254;
                if (*v254 < 0)
                {
                  v263 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v254, (const char *)*v254);
                  if (!v263) {
                    goto LABEL_414;
                  }
                  v262 = v263;
                  unsigned int v261 = v264;
                }
                else
                {
                  v262 = v254 + 1;
                }
                int v265 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v262, v261);
                int v266 = *((_DWORD *)this + 22);
                BOOL v24 = __OFSUB__(v266--, 1);
                *((_DWORD *)this + 22) = v266;
                if (v266 < 0 == v24)
                {
                  int v267 = v265;
                  v253 = protobuf::Intelligence_Variable::_InternalParse((uint64_t)v258, (google::protobuf::internal *)v262, this);
                  if (v253)
                  {
                    ++*((_DWORD *)this + 22);
                    if (!*((_DWORD *)this + 20))
                    {
                      int v268 = *((_DWORD *)this + 7) + v267;
                      *((_DWORD *)this + 7) = v268;
                      unint64_t v269 = *((void *)this + 1) + (v268 & (v268 >> 31));
                      *(void *)this = v269;
                      v335[0] = v253;
                      if (v269 <= (unint64_t)v253 || *(_WORD *)v253 != 474) {
                        goto LABEL_411;
                      }
                      continue;
                    }
                  }
                }
                goto LABEL_414;
              }
            case 0x1Cu:
              if (v9 != 226) {
                goto LABEL_398;
              }
              v270 = TagFallback - 2;
              while (1)
              {
                v271 = (google::protobuf::internal *)(v270 + 2);
                v335[0] = v270 + 2;
                v272 = *(int **)(a1 + 424);
                if (!v272) {
                  break;
                }
                uint64_t v273 = *(int *)(a1 + 416);
                int v274 = *v272;
                if ((int)v273 >= *v272)
                {
                  if (v274 == *(_DWORD *)(a1 + 420))
                  {
LABEL_321:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 408), v274 + 1);
                    v272 = *(int **)(a1 + 424);
                    int v274 = *v272;
                  }
                  int *v272 = v274 + 1;
                  v275 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_ResponseGroup>(*(google::protobuf::internal::ArenaImpl **)(a1 + 408));
                  uint64_t v276 = *(void *)(a1 + 424);
                  uint64_t v277 = *(int *)(a1 + 416);
                  *(_DWORD *)(a1 + 416) = v277 + 1;
                  *(void *)(v276 + 8 * v277 + 8) = v275;
                  v271 = (google::protobuf::internal *)v335[0];
                  goto LABEL_323;
                }
                *(_DWORD *)(a1 + 416) = v273 + 1;
                v275 = *(protobuf::Intelligence_ResponseGroup **)&v272[2 * v273 + 2];
LABEL_323:
                v270 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_ResponseGroup>(this, (uint64_t)v275, v271);
                v335[0] = v270;
                if (!v270) {
                  goto LABEL_414;
                }
                if (*(void *)this <= (unint64_t)v270 || *(_WORD *)v270 != 482) {
                  goto LABEL_411;
                }
              }
              int v274 = *(_DWORD *)(a1 + 420);
              goto LABEL_321;
            case 0x1Du:
              if (v9 != 234) {
                goto LABEL_398;
              }
              v278 = TagFallback - 2;
              while (1)
              {
                v279 = (google::protobuf::internal *)(v278 + 2);
                v335[0] = v278 + 2;
                v280 = *(int **)(a1 + 448);
                if (!v280) {
                  break;
                }
                uint64_t v281 = *(int *)(a1 + 440);
                int v282 = *v280;
                if ((int)v281 >= *v280)
                {
                  if (v282 == *(_DWORD *)(a1 + 444))
                  {
LABEL_334:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 432), v282 + 1);
                    v280 = *(int **)(a1 + 448);
                    int v282 = *v280;
                  }
                  int *v280 = v282 + 1;
                  v283 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup>(*(google::protobuf::internal::ArenaImpl **)(a1 + 432));
                  uint64_t v284 = *(void *)(a1 + 448);
                  uint64_t v285 = *(int *)(a1 + 440);
                  *(_DWORD *)(a1 + 44siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v285 + 1;
                  *(void *)(v284 + 8 * v285 + 8) = v283;
                  v279 = (google::protobuf::internal *)v335[0];
                  goto LABEL_336;
                }
                *(_DWORD *)(a1 + 44siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v281 + 1;
                v283 = *(protobuf::Intelligence_InputGroup **)&v280[2 * v281 + 2];
LABEL_336:
                v278 = google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_InputGroup>(this, (uint64_t)v283, v279);
                v335[0] = v278;
                if (!v278) {
                  goto LABEL_414;
                }
                if (*(void *)this <= (unint64_t)v278 || *(_WORD *)v278 != 490) {
                  goto LABEL_411;
                }
              }
              int v282 = *(_DWORD *)(a1 + 444);
              goto LABEL_334;
            case 0x1Eu:
              if (v9 != 242) {
                goto LABEL_398;
              }
              v286 = TagFallback - 2;
              while (1)
              {
                v287 = v286 + 2;
                v335[0] = v286 + 2;
                v288 = *(int **)(a1 + 472);
                if (!v288) {
                  break;
                }
                uint64_t v289 = *(int *)(a1 + 464);
                int v290 = *v288;
                if ((int)v289 >= *v288)
                {
                  if (v290 == *(_DWORD *)(a1 + 468))
                  {
LABEL_347:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 456), v290 + 1);
                    v288 = *(int **)(a1 + 472);
                    int v290 = *v288;
                  }
                  int *v288 = v290 + 1;
                  v292 = (atomic_ullong *)*v8;
                  if (!*v8) {
                    operator new();
                  }
                  if (v292[14]) {
                  unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v292, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
                  }
                  AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
                  AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
                  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
                  uint64_t v293 = *(void *)(a1 + 472);
                  uint64_t v294 = *(int *)(a1 + 464);
                  *(_DWORD *)(a1 + 464) = v294 + 1;
                  *(void *)(v293 + 8 * v294 + 8) = AlignedAndAddCleanup;
                  v287 = v335[0];
                  goto LABEL_353;
                }
                *(_DWORD *)(a1 + 464) = v289 + 1;
                unint64_t AlignedAndAddCleanup = *(std::string **)&v288[2 * v289 + 2];
LABEL_353:
                v286 = google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v287, (uint64_t)this);
                v335[0] = v286;
                if (!v286) {
                  goto LABEL_414;
                }
                if (*(void *)this <= (unint64_t)v286 || *(_WORD *)v286 != 498) {
                  goto LABEL_411;
                }
              }
              int v290 = *(_DWORD *)(a1 + 468);
              goto LABEL_347;
            case 0x1Fu:
              if (v9 != 250) {
                goto LABEL_398;
              }
              v295 = TagFallback - 2;
              break;
            case 0x20u:
              if (v9 != 2) {
                goto LABEL_398;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              v304 = *(protobuf::Intelligence_Start **)(a1 + 536);
              if (!v304)
              {
                v304 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Start>(0);
                *(void *)(a1 + 536) = v304;
                TagFallbacint k = v335[0];
              }
              unsigned int v305 = *TagFallback;
              if (*TagFallback < 0)
              {
                v325 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)TagFallback, (const char *)*TagFallback);
                if (!v325) {
                  goto LABEL_414;
                }
                v306 = v325;
                unsigned int v305 = v326;
              }
              else
              {
                v306 = TagFallback + 1;
              }
              int v327 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v306, v305);
              int v328 = *((_DWORD *)this + 22);
              BOOL v24 = __OFSUB__(v328--, 1);
              *((_DWORD *)this + 22) = v328;
              if (v328 < 0 != v24) {
                goto LABEL_414;
              }
              int v329 = v327;
              v330 = protobuf::Intelligence_Start::_InternalParse((uint64_t)v304, (google::protobuf::internal *)v306, this);
              if (!v330) {
                goto LABEL_414;
              }
              ++*((_DWORD *)this + 22);
              if (*((_DWORD *)this + 20)) {
                goto LABEL_414;
              }
              int v331 = *((_DWORD *)this + 7) + v329;
              *((_DWORD *)this + 7) = v331;
              *(void *)this = *((void *)this + 1) + (v331 & (v331 >> 31));
              v335[0] = v330;
              goto LABEL_411;
            case 0x21u:
              if (v9 != 10) {
                goto LABEL_398;
              }
              v307 = TagFallback - 2;
              while (2)
              {
                v308 = v307 + 2;
                v335[0] = v308;
                v309 = *(int **)(a1 + 520);
                if (v309)
                {
                  uint64_t v310 = *(int *)(a1 + 512);
                  int v311 = *v309;
                  if ((int)v310 < *v309)
                  {
                    *(_DWORD *)(a1 + 512) = v310 + 1;
                    v312 = *(protobuf::Intelligence_Event **)&v309[2 * v310 + 2];
                    goto LABEL_388;
                  }
                  if (v311 != *(_DWORD *)(a1 + 516))
                  {
LABEL_387:
                    int *v309 = v311 + 1;
                    v312 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Event>(*(google::protobuf::internal::ArenaImpl **)(a1 + 504));
                    uint64_t v313 = *(void *)(a1 + 520);
                    uint64_t v314 = *(int *)(a1 + 512);
                    *(_DWORD *)(a1 + 512) = v314 + 1;
                    *(void *)(v313 + 8 * v314 + 8) = v312;
                    v308 = v335[0];
LABEL_388:
                    unsigned int v315 = *v308;
                    if (*v308 < 0)
                    {
                      v317 = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v308, (const char *)*v308);
                      if (!v317) {
                        goto LABEL_414;
                      }
                      v316 = v317;
                      unsigned int v315 = v318;
                    }
                    else
                    {
                      v316 = v308 + 1;
                    }
                    int v319 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v316, v315);
                    int v320 = *((_DWORD *)this + 22);
                    BOOL v24 = __OFSUB__(v320--, 1);
                    *((_DWORD *)this + 22) = v320;
                    if (v320 < 0 == v24)
                    {
                      int v321 = v319;
                      v307 = (char *)protobuf::Intelligence_Event::_InternalParse((uint64_t)v312, (google::protobuf::internal *)v316, this);
                      if (v307)
                      {
                        ++*((_DWORD *)this + 22);
                        if (!*((_DWORD *)this + 20))
                        {
                          int v322 = *((_DWORD *)this + 7) + v321;
                          *((_DWORD *)this + 7) = v322;
                          unint64_t v323 = *((void *)this + 1) + (v322 & (v322 >> 31));
                          *(void *)this = v323;
                          v335[0] = v307;
                          if (v323 <= (unint64_t)v307 || *(_WORD *)v307 != 650) {
                            goto LABEL_411;
                          }
                          continue;
                        }
                      }
                    }
LABEL_414:
                    TagFallbacint k = 0;
                    goto LABEL_415;
                  }
                }
                else
                {
                  int v311 = *(_DWORD *)(a1 + 516);
                }
                break;
              }
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 504), v311 + 1);
              v309 = *(int **)(a1 + 520);
              int v311 = *v309;
              goto LABEL_387;
            default:
LABEL_398:
              if (v9) {
                BOOL v324 = (v9 & 7) == 4;
              }
              else {
                BOOL v324 = 1;
              }
              if (v324)
              {
                *((_DWORD *)this + 2siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = v9 - 1;
                goto LABEL_415;
              }
              v252 = (char *)google::protobuf::internal::UnknownFieldParse(v9, (unint64_t *)(a1 + 8), (google::protobuf::internal *)TagFallback, this);
LABEL_403:
              v335[0] = v252;
              if (!v252) {
                goto LABEL_414;
              }
LABEL_411:
              if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)v335, *((_DWORD *)this + 23)))goto LABEL_2; {
              continue;
              }
          }
          while (1)
          {
            v296 = v295 + 2;
            v335[0] = v295 + 2;
            v297 = *(int **)(a1 + 496);
            if (!v297) {
              break;
            }
            uint64_t v298 = *(int *)(a1 + 488);
            int v299 = *v297;
            if ((int)v298 >= *v297)
            {
              if (v299 == *(_DWORD *)(a1 + 492))
              {
LABEL_364:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 480), v299 + 1);
                v297 = *(int **)(a1 + 496);
                int v299 = *v297;
              }
              int *v297 = v299 + 1;
              v301 = (atomic_ullong *)*v7;
              if (!*v7) {
                operator new();
              }
              if (v301[14]) {
              v300 = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v301, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
              }
              v300->__r_.__value_.__r.__words[0] = 0;
              v300->__r_.__value_.__l.__size_ = 0;
              v300->__r_.__value_.__r.__words[2] = 0;
              uint64_t v302 = *(void *)(a1 + 496);
              uint64_t v303 = *(int *)(a1 + 488);
              *(_DWORD *)(a1 + 488) = v303 + 1;
              *(void *)(v302 + 8 * v303 + 8) = v300;
              v296 = v335[0];
              goto LABEL_370;
            }
            *(_DWORD *)(a1 + 488) = v298 + 1;
            v300 = *(std::string **)&v297[2 * v298 + 2];
LABEL_370:
            v295 = google::protobuf::internal::InlineGreedyStringParser(v300, v296, (uint64_t)this);
            v335[0] = v295;
            if (!v295) {
              goto LABEL_414;
            }
            if (*(void *)this <= (unint64_t)v295 || *(_WORD *)v295 != 506) {
              goto LABEL_411;
            }
          }
          int v299 = *(_DWORD *)(a1 + 492);
          goto LABEL_364;
        }
        TagFallbacint k = v335[0] + 2;
      }
      break;
    }
    v335[0] = TagFallback;
    goto LABEL_8;
  }
LABEL_2:
  TagFallbacint k = v335[0];
LABEL_415:
  *(_DWORD *)(a1 + 16) |= v5;
  return TagFallback;
}

char *google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_ResponseGroup>(google::protobuf::internal::EpsCopyInputStream *this, uint64_t a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  unint64_t v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    double result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    uint64_t v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  double result = (char *)protobuf::Intelligence_ResponseGroup::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

char *google::protobuf::internal::ParseContext::ParseMessage<protobuf::Intelligence_InputGroup>(google::protobuf::internal::EpsCopyInputStream *this, uint64_t a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  unint64_t v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    double result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    uint64_t v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  double result = (char *)protobuf::Intelligence_InputGroup::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

unsigned __int8 *protobuf::Intelligence::InternalSerializeWithCachedSizesToArray(protobuf::Intelligence *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    uint64_t v7 = *((void *)this + 68);
    *uint64_t v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  int v8 = *((_DWORD *)this + 8);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v10 = (protobuf::Intelligence_Meta *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Meta>::TypeHandler>((uint64_t)this + 24, i);
      *uint64_t v4 = 18;
      unsigned int v11 = *((_DWORD *)v10 + 5);
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unsigned int v13 = v11 >> 7;
        if (v11 >> 14)
        {
          int v12 = v4 + 3;
          do
          {
            *(v12 - 1) = v13 | 0x80;
            unsigned int v14 = v13 >> 7;
            ++v12;
            unsigned int v15 = v13 >> 14;
            v13 >>= 7;
          }
          while (v15);
          *(v12 - 1) = v14;
        }
        else
        {
          std::string v4[2] = v13;
          int v12 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v11;
        int v12 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Meta::InternalSerializeWithCachedSizesToArray(v10, v12, a3);
    }
  }
  int v16 = *((_DWORD *)this + 14);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unsigned int v18 = (protobuf::Intelligence_DialogResponse *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_DialogResponse>::TypeHandler>((uint64_t)this + 48, j);
      *uint64_t v4 = 34;
      unsigned int v19 = *((_DWORD *)v18 + 5);
      if (v19 > 0x7F)
      {
        v4[1] = v19 | 0x80;
        unsigned int v21 = v19 >> 7;
        if (v19 >> 14)
        {
          unint64_t v20 = v4 + 3;
          do
          {
            *(v20 - 1) = v21 | 0x80;
            unsigned int v22 = v21 >> 7;
            ++v20;
            unsigned int v23 = v21 >> 14;
            v21 >>= 7;
          }
          while (v23);
          *(v20 - 1) = v22;
        }
        else
        {
          std::string v4[2] = v21;
          unint64_t v20 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v19;
        unint64_t v20 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_DialogResponse::InternalSerializeWithCachedSizesToArray(v18, v20, a3);
    }
  }
  int v24 = *((_DWORD *)this + 20);
  if (v24)
  {
    for (int k = 0; k != v24; ++k)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v26 = (protobuf::Intelligence_BehaviorResponse *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::TypeHandler>((uint64_t)this + 72, k);
      *uint64_t v4 = 42;
      unsigned int v27 = *((_DWORD *)v26 + 5);
      if (v27 > 0x7F)
      {
        v4[1] = v27 | 0x80;
        unsigned int v29 = v27 >> 7;
        if (v27 >> 14)
        {
          uint64_t v28 = v4 + 3;
          do
          {
            *(v28 - 1) = v29 | 0x80;
            unsigned int v30 = v29 >> 7;
            ++v28;
            unsigned int v31 = v29 >> 14;
            v29 >>= 7;
          }
          while (v31);
          *(v28 - 1) = v30;
        }
        else
        {
          std::string v4[2] = v29;
          uint64_t v28 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v27;
        uint64_t v28 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_BehaviorResponse::InternalSerializeWithCachedSizesToArray(v26, v28, a3);
    }
  }
  int v32 = *((_DWORD *)this + 26);
  if (v32)
  {
    for (int m = 0; m != v32; ++m)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v34 = (protobuf::Intelligence_ReferenceResponse *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ReferenceResponse>::TypeHandler>((uint64_t)this + 96, m);
      *uint64_t v4 = 50;
      unsigned int v35 = *((_DWORD *)v34 + 5);
      if (v35 > 0x7F)
      {
        v4[1] = v35 | 0x80;
        unsigned int v37 = v35 >> 7;
        if (v35 >> 14)
        {
          unsigned int v36 = v4 + 3;
          do
          {
            *(v36 - 1) = v37 | 0x80;
            unsigned int v38 = v37 >> 7;
            ++v36;
            unsigned int v39 = v37 >> 14;
            v37 >>= 7;
          }
          while (v39);
          *(v36 - 1) = v38;
        }
        else
        {
          std::string v4[2] = v37;
          unsigned int v36 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v35;
        unsigned int v36 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_ReferenceResponse::InternalSerializeWithCachedSizesToArray(v34, v36, a3);
    }
  }
  int v40 = *((_DWORD *)this + 32);
  if (v40)
  {
    for (int n = 0; n != v40; ++n)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v42 = (protobuf::Intelligence_ResponseGroup *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>((uint64_t)this + 120, n);
      *uint64_t v4 = 58;
      unsigned int v43 = *((_DWORD *)v42 + 5);
      if (v43 > 0x7F)
      {
        v4[1] = v43 | 0x80;
        unsigned int v45 = v43 >> 7;
        if (v43 >> 14)
        {
          unint64_t v44 = v4 + 3;
          do
          {
            *(v44 - 1) = v45 | 0x80;
            unsigned int v46 = v45 >> 7;
            ++v44;
            unsigned int v47 = v45 >> 14;
            v45 >>= 7;
          }
          while (v47);
          *(v44 - 1) = v46;
        }
        else
        {
          std::string v4[2] = v45;
          unint64_t v44 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v43;
        unint64_t v44 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_ResponseGroup::InternalSerializeWithCachedSizesToArray(v42, v44, a3);
    }
  }
  int v48 = *((_DWORD *)this + 38);
  if (v48)
  {
    for (iint i = 0; ii != v48; ++ii)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v50 = (protobuf::Intelligence_InputGroup *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((uint64_t)this + 144, ii);
      *uint64_t v4 = 66;
      unsigned int v51 = *((_DWORD *)v50 + 5);
      if (v51 > 0x7F)
      {
        v4[1] = v51 | 0x80;
        unsigned int v53 = v51 >> 7;
        if (v51 >> 14)
        {
          uint64_t v52 = v4 + 3;
          do
          {
            *(v52 - 1) = v53 | 0x80;
            unsigned int v54 = v53 >> 7;
            ++v52;
            unsigned int v55 = v53 >> 14;
            v53 >>= 7;
          }
          while (v55);
          *(v52 - 1) = v54;
        }
        else
        {
          std::string v4[2] = v53;
          uint64_t v52 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v51;
        uint64_t v52 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_InputGroup::InternalSerializeWithCachedSizesToArray(v50, v52, a3);
    }
  }
  int v56 = *((_DWORD *)this + 44);
  if (v56)
  {
    for (jint j = 0; jj != v56; ++jj)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v58 = (protobuf::Intelligence_Activity *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::TypeHandler>((uint64_t)this + 168, jj);
      *uint64_t v4 = 74;
      unsigned int v59 = *((_DWORD *)v58 + 5);
      if (v59 > 0x7F)
      {
        v4[1] = v59 | 0x80;
        unsigned int v61 = v59 >> 7;
        if (v59 >> 14)
        {
          int v60 = v4 + 3;
          do
          {
            *(v60 - 1) = v61 | 0x80;
            unsigned int v62 = v61 >> 7;
            ++v60;
            unsigned int v63 = v61 >> 14;
            v61 >>= 7;
          }
          while (v63);
          *(v60 - 1) = v62;
        }
        else
        {
          std::string v4[2] = v61;
          int v60 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v59;
        int v60 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Activity::InternalSerializeWithCachedSizesToArray(v58, v60, a3);
    }
  }
  int v64 = *((_DWORD *)this + 50);
  if (v64)
  {
    for (kint k = 0; kk != v64; ++kk)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v66 = (protobuf::Intelligence_Utterance *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Utterance>::TypeHandler>((uint64_t)this + 192, kk);
      *uint64_t v4 = 82;
      unsigned int v67 = *((_DWORD *)v66 + 5);
      if (v67 > 0x7F)
      {
        v4[1] = v67 | 0x80;
        unsigned int v69 = v67 >> 7;
        if (v67 >> 14)
        {
          uint64_t v68 = v4 + 3;
          do
          {
            *(v68 - 1) = v69 | 0x80;
            unsigned int v70 = v69 >> 7;
            ++v68;
            unsigned int v71 = v69 >> 14;
            v69 >>= 7;
          }
          while (v71);
          *(v68 - 1) = v70;
        }
        else
        {
          std::string v4[2] = v69;
          uint64_t v68 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v67;
        uint64_t v68 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Utterance::InternalSerializeWithCachedSizesToArray(v66, v68, a3);
    }
  }
  int v72 = *((_DWORD *)this + 56);
  if (v72)
  {
    for (mint m = 0; mm != v72; ++mm)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v74 = (protobuf::Intelligence_Character *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Character>::TypeHandler>((uint64_t)this + 216, mm);
      *uint64_t v4 = 90;
      unsigned int v75 = *((_DWORD *)v74 + 5);
      if (v75 > 0x7F)
      {
        v4[1] = v75 | 0x80;
        unsigned int v77 = v75 >> 7;
        if (v75 >> 14)
        {
          int v76 = v4 + 3;
          do
          {
            *(v76 - 1) = v77 | 0x80;
            unsigned int v78 = v77 >> 7;
            ++v76;
            unsigned int v79 = v77 >> 14;
            v77 >>= 7;
          }
          while (v79);
          *(v76 - 1) = v78;
        }
        else
        {
          std::string v4[2] = v77;
          int v76 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v75;
        int v76 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Character::InternalSerializeWithCachedSizesToArray(v74, v76, a3);
    }
  }
  int v80 = *((_DWORD *)this + 62);
  if (v80)
  {
    for (nint n = 0; nn != v80; ++nn)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v82 = (protobuf::Intelligence_Intent *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Intent>::TypeHandler>((uint64_t)this + 240, nn);
      *uint64_t v4 = 106;
      unsigned int v83 = *((_DWORD *)v82 + 5);
      if (v83 > 0x7F)
      {
        v4[1] = v83 | 0x80;
        unsigned int v85 = v83 >> 7;
        if (v83 >> 14)
        {
          int v84 = v4 + 3;
          do
          {
            *(v84 - 1) = v85 | 0x80;
            unsigned int v86 = v85 >> 7;
            ++v84;
            unsigned int v87 = v85 >> 14;
            v85 >>= 7;
          }
          while (v87);
          *(v84 - 1) = v86;
        }
        else
        {
          std::string v4[2] = v85;
          int v84 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v83;
        int v84 = v4 + 2;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Intent::InternalSerializeWithCachedSizesToArray(v82, v84, a3);
    }
  }
  int v88 = *((_DWORD *)this + 68);
  if (v88)
  {
    for (int i1 = 0; i1 != v88; ++i1)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v90 = (protobuf::Intelligence_Condition *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition>::TypeHandler>((uint64_t)this + 264, i1);
      *(_WORD *)uint64_t v4 = 386;
      unsigned int v91 = *((_DWORD *)v90 + 5);
      if (v91 > 0x7F)
      {
        std::string v4[2] = v91 | 0x80;
        unsigned int v93 = v91 >> 7;
        if (v91 >> 14)
        {
          uint64_t v92 = v4 + 4;
          do
          {
            *(v92 - 1) = v93 | 0x80;
            unsigned int v94 = v93 >> 7;
            ++v92;
            unsigned int v95 = v93 >> 14;
            v93 >>= 7;
          }
          while (v95);
          *(v92 - 1) = v94;
        }
        else
        {
          v4[3] = v93;
          uint64_t v92 = v4 + 4;
        }
      }
      else
      {
        std::string v4[2] = v91;
        uint64_t v92 = v4 + 3;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Condition::InternalSerializeWithCachedSizesToArray(v90, v92, a3);
    }
  }
  int v96 = *((_DWORD *)this + 74);
  if (v96)
  {
    for (int i2 = 0; i2 != v96; ++i2)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v98 = (protobuf::Intelligence_Counter *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Counter>::TypeHandler>((uint64_t)this + 288, i2);
      *(_WORD *)uint64_t v4 = 394;
      unsigned int v99 = *((_DWORD *)v98 + 5);
      if (v99 > 0x7F)
      {
        std::string v4[2] = v99 | 0x80;
        unsigned int v101 = v99 >> 7;
        if (v99 >> 14)
        {
          unsigned int v100 = v4 + 4;
          do
          {
            *(v100 - 1) = v101 | 0x80;
            unsigned int v102 = v101 >> 7;
            ++v100;
            unsigned int v103 = v101 >> 14;
            v101 >>= 7;
          }
          while (v103);
          *(v100 - 1) = v102;
        }
        else
        {
          v4[3] = v101;
          unsigned int v100 = v4 + 4;
        }
      }
      else
      {
        std::string v4[2] = v99;
        unsigned int v100 = v4 + 3;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Counter::InternalSerializeWithCachedSizesToArray(v98, v100, a3);
    }
  }
  int v104 = *((_DWORD *)this + 80);
  if (v104)
  {
    for (int i3 = 0; i3 != v104; ++i3)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unsigned int v106 = (protobuf::Intelligence_Flag *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Flag>::TypeHandler>((uint64_t)this + 312, i3);
      *(_WORD *)uint64_t v4 = 402;
      unsigned int v107 = *((_DWORD *)v106 + 5);
      if (v107 > 0x7F)
      {
        std::string v4[2] = v107 | 0x80;
        unsigned int v109 = v107 >> 7;
        if (v107 >> 14)
        {
          int v108 = v4 + 4;
          do
          {
            *(v108 - 1) = v109 | 0x80;
            unsigned int v110 = v109 >> 7;
            ++v108;
            unsigned int v111 = v109 >> 14;
            v109 >>= 7;
          }
          while (v111);
          *(v108 - 1) = v110;
        }
        else
        {
          v4[3] = v109;
          int v108 = v4 + 4;
        }
      }
      else
      {
        std::string v4[2] = v107;
        int v108 = v4 + 3;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Flag::InternalSerializeWithCachedSizesToArray(v106, v108, a3);
    }
  }
  int v112 = *((_DWORD *)this + 86);
  if (v112)
  {
    for (int i4 = 0; i4 != v112; ++i4)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v114 = (protobuf::Intelligence_Label *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Label>::TypeHandler>((uint64_t)this + 336, i4);
      *(_WORD *)uint64_t v4 = 410;
      unsigned int v115 = *((_DWORD *)v114 + 5);
      if (v115 > 0x7F)
      {
        std::string v4[2] = v115 | 0x80;
        unsigned int v117 = v115 >> 7;
        if (v115 >> 14)
        {
          int v116 = v4 + 4;
          do
          {
            *(v116 - 1) = v117 | 0x80;
            unsigned int v118 = v117 >> 7;
            ++v116;
            unsigned int v119 = v117 >> 14;
            v117 >>= 7;
          }
          while (v119);
          *(v116 - 1) = v118;
        }
        else
        {
          v4[3] = v117;
          int v116 = v4 + 4;
        }
      }
      else
      {
        std::string v4[2] = v115;
        int v116 = v4 + 3;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Label::InternalSerializeWithCachedSizesToArray(v114, v116, a3);
    }
  }
  int v120 = *((_DWORD *)this + 92);
  if (v120)
  {
    for (int i5 = 0; i5 != v120; ++i5)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v122 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_List>::TypeHandler>((uint64_t)this + 360, i5);
      *(_WORD *)uint64_t v4 = 418;
      unsigned int v123 = *(_DWORD *)(v122 + 20);
      if (v123 > 0x7F)
      {
        std::string v4[2] = v123 | 0x80;
        unsigned int v125 = v123 >> 7;
        if (v123 >> 14)
        {
          int v124 = v4 + 4;
          do
          {
            *(v124 - 1) = v125 | 0x80;
            unsigned int v126 = v125 >> 7;
            ++v124;
            unsigned int v127 = v125 >> 14;
            v125 >>= 7;
          }
          while (v127);
          *(v124 - 1) = v126;
        }
        else
        {
          v4[3] = v125;
          int v124 = v4 + 4;
        }
      }
      else
      {
        std::string v4[2] = v123;
        int v124 = v4 + 3;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_List::InternalSerializeWithCachedSizesToArray((const void ***)v122, v124, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v128 = *((unsigned char *)this + 552);
    *(_WORD *)uint64_t v4 = 432;
    std::string v4[2] = v128;
    v4 += 3;
  }
  if (v6) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 26, *((const void ***)this + 66), v4);
  }
  int v129 = *((_DWORD *)this + 98);
  if (v129)
  {
    for (int i6 = 0; i6 != v129; ++i6)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      char v131 = (protobuf::Intelligence_Variable *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Variable>::TypeHandler>((uint64_t)this + 384, i6);
      *(_WORD *)uint64_t v4 = 474;
      unsigned int v132 = *((_DWORD *)v131 + 5);
      if (v132 > 0x7F)
      {
        std::string v4[2] = v132 | 0x80;
        unsigned int v134 = v132 >> 7;
        if (v132 >> 14)
        {
          int v133 = v4 + 4;
          do
          {
            *(v133 - 1) = v134 | 0x80;
            unsigned int v135 = v134 >> 7;
            ++v133;
            unsigned int v136 = v134 >> 14;
            v134 >>= 7;
          }
          while (v136);
          *(v133 - 1) = v135;
        }
        else
        {
          v4[3] = v134;
          int v133 = v4 + 4;
        }
      }
      else
      {
        std::string v4[2] = v132;
        int v133 = v4 + 3;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Variable::InternalSerializeWithCachedSizesToArray(v131, v133, a3);
    }
  }
  int v137 = *((_DWORD *)this + 104);
  if (v137)
  {
    for (int i7 = 0; i7 != v137; ++i7)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v139 = (protobuf::Intelligence_ResponseGroup *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>((uint64_t)this + 408, i7);
      *(_WORD *)uint64_t v4 = 482;
      unsigned int v140 = *((_DWORD *)v139 + 5);
      if (v140 > 0x7F)
      {
        std::string v4[2] = v140 | 0x80;
        unsigned int v142 = v140 >> 7;
        if (v140 >> 14)
        {
          int v141 = v4 + 4;
          do
          {
            *(v141 - 1) = v142 | 0x80;
            unsigned int v143 = v142 >> 7;
            ++v141;
            unsigned int v144 = v142 >> 14;
            v142 >>= 7;
          }
          while (v144);
          *(v141 - 1) = v143;
        }
        else
        {
          v4[3] = v142;
          int v141 = v4 + 4;
        }
      }
      else
      {
        std::string v4[2] = v140;
        int v141 = v4 + 3;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_ResponseGroup::InternalSerializeWithCachedSizesToArray(v139, v141, a3);
    }
  }
  int v145 = *((_DWORD *)this + 110);
  if (v145)
  {
    for (int i8 = 0; i8 != v145; ++i8)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v147 = (protobuf::Intelligence_InputGroup *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((uint64_t)this + 432, i8);
      *(_WORD *)uint64_t v4 = 490;
      unsigned int v148 = *((_DWORD *)v147 + 5);
      if (v148 > 0x7F)
      {
        std::string v4[2] = v148 | 0x80;
        unsigned int v150 = v148 >> 7;
        if (v148 >> 14)
        {
          uint64_t v149 = v4 + 4;
          do
          {
            *(v149 - 1) = v150 | 0x80;
            unsigned int v151 = v150 >> 7;
            ++v149;
            unsigned int v152 = v150 >> 14;
            v150 >>= 7;
          }
          while (v152);
          *(v149 - 1) = v151;
        }
        else
        {
          v4[3] = v150;
          uint64_t v149 = v4 + 4;
        }
      }
      else
      {
        std::string v4[2] = v148;
        uint64_t v149 = v4 + 3;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_InputGroup::InternalSerializeWithCachedSizesToArray(v147, v149, a3);
    }
  }
  int v153 = *((_DWORD *)this + 116);
  if (v153 >= 1)
  {
    for (int i9 = 0; v153 != i9; ++i9)
    {
      uint64_t v155 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 456, i9);
      if (*(char *)(v155 + 23) < 0)
      {
        int64_t v156 = *(void *)(v155 + 8);
        if (v156 > 127) {
          goto LABEL_239;
        }
      }
      else
      {
        int64_t v156 = *(unsigned __int8 *)(v155 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v156)
      {
        *(_WORD *)uint64_t v4 = 498;
        std::string v4[2] = v156;
        if (*(char *)(v155 + 23) >= 0) {
          unsigned int v157 = (const void *)v155;
        }
        else {
          unsigned int v157 = *(const void **)v155;
        }
        memcpy(v4 + 3, v157, v156);
        v4 += v156 + 3;
        continue;
      }
LABEL_239:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 30, v155, v4);
    }
  }
  int v158 = *((_DWORD *)this + 122);
  if (v158 >= 1)
  {
    for (int i10 = 0; v158 != i10; ++i10)
    {
      uint64_t v160 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 480, i10);
      if (*(char *)(v160 + 23) < 0)
      {
        int64_t v161 = *(void *)(v160 + 8);
        if (v161 > 127) {
          goto LABEL_252;
        }
      }
      else
      {
        int64_t v161 = *(unsigned __int8 *)(v160 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v161)
      {
        *(_WORD *)uint64_t v4 = 506;
        std::string v4[2] = v161;
        if (*(char *)(v160 + 23) >= 0) {
          unint64_t v162 = (const void *)v160;
        }
        else {
          unint64_t v162 = *(const void **)v160;
        }
        memcpy(v4 + 3, v162, v161);
        v4 += v161 + 3;
        continue;
      }
LABEL_252:
      uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 31, v160, v4);
    }
  }
  if ((v6 & 2) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    v163 = (protobuf::Intelligence_Start *)*((void *)this + 67);
    *(_WORD *)uint64_t v4 = 642;
    unsigned int v164 = *((_DWORD *)v163 + 5);
    if (v164 > 0x7F)
    {
      std::string v4[2] = v164 | 0x80;
      unsigned int v166 = v164 >> 7;
      if (v164 >> 14)
      {
        long long v165 = v4 + 4;
        do
        {
          *(v165 - 1) = v166 | 0x80;
          unsigned int v167 = v166 >> 7;
          ++v165;
          unsigned int v168 = v166 >> 14;
          v166 >>= 7;
        }
        while (v168);
        *(v165 - 1) = v167;
      }
      else
      {
        v4[3] = v166;
        long long v165 = v4 + 4;
      }
    }
    else
    {
      std::string v4[2] = v164;
      long long v165 = v4 + 3;
    }
    uint64_t v4 = (char *)protobuf::Intelligence_Start::InternalSerializeWithCachedSizesToArray(v163, v165, a3);
  }
  int v169 = *((_DWORD *)this + 128);
  if (v169)
  {
    for (int i11 = 0; i11 != v169; ++i11)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unsigned int v171 = (protobuf::Intelligence_Event *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Event>::TypeHandler>((uint64_t)this + 504, i11);
      *(_WORD *)uint64_t v4 = 650;
      unsigned int v172 = *((_DWORD *)v171 + 5);
      if (v172 > 0x7F)
      {
        std::string v4[2] = v172 | 0x80;
        unsigned int v174 = v172 >> 7;
        if (v172 >> 14)
        {
          std::string v173 = v4 + 4;
          do
          {
            *(v173 - 1) = v174 | 0x80;
            unsigned int v175 = v174 >> 7;
            ++v173;
            unsigned int v176 = v174 >> 14;
            v174 >>= 7;
          }
          while (v176);
          *(v173 - 1) = v175;
        }
        else
        {
          v4[3] = v174;
          std::string v173 = v4 + 4;
        }
      }
      else
      {
        std::string v4[2] = v172;
        std::string v173 = v4 + 3;
      }
      uint64_t v4 = (char *)protobuf::Intelligence_Event::InternalSerializeWithCachedSizesToArray(v171, v173, a3);
    }
  }
  uint64_t v177 = *((void *)this + 1);
  if ((v177 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v179 = v177 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v179 + 23) < 0)
  {
    v181 = *(void **)v179;
    uint64_t v180 = *(void *)(v179 + 8);
  }
  else
  {
    LODWORD(v18siri::intelligence::StringToDouble((uint64_t)this + 72, 0) = *(unsigned __int8 *)(v179 + 23);
    v181 = (void *)v179;
  }
  if (*(void *)a3 - (void)v4 >= (int)v180)
  {
    uint64_t v182 = (int)v180;
    memcpy(v4, v181, (int)v180);
    v4 += v182;
    return (unsigned __int8 *)v4;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v181, v180, (unsigned __int8 *)v4);
}

uint64_t protobuf::Intelligence::ByteSizeLong(protobuf::Intelligence *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (protobuf::Intelligence_Meta **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = protobuf::Intelligence_Meta::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    unsigned int v11 = (protobuf::Intelligence_DialogResponse **)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      uint64_t v14 = protobuf::Intelligence_DialogResponse::ByteSizeLong(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *((int *)this + 20);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *((void *)this + 11);
  if (v17) {
    unsigned int v18 = (protobuf::Intelligence_BehaviorResponse **)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      unint64_t v20 = *v18++;
      uint64_t v21 = protobuf::Intelligence_BehaviorResponse::ByteSizeLong(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *((int *)this + 26);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *((void *)this + 14);
  if (v24) {
    int v25 = (protobuf::Intelligence_ReferenceResponse **)(v24 + 8);
  }
  else {
    int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      unsigned int v27 = *v25++;
      uint64_t v28 = protobuf::Intelligence_ReferenceResponse::ByteSizeLong(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *((int *)this + 32);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *((void *)this + 17);
  if (v31) {
    int v32 = (protobuf::Intelligence_ResponseGroup **)(v31 + 8);
  }
  else {
    int v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = protobuf::Intelligence_ResponseGroup::ByteSizeLong(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *((int *)this + 38);
  uint64_t v37 = v30 + v36;
  uint64_t v38 = *((void *)this + 20);
  if (v38) {
    unsigned int v39 = (protobuf::Intelligence_InputGroup **)(v38 + 8);
  }
  else {
    unsigned int v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      int v41 = *v39++;
      uint64_t v42 = protobuf::Intelligence_InputGroup::ByteSizeLong(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  uint64_t v43 = *((int *)this + 44);
  uint64_t v44 = v37 + v43;
  uint64_t v45 = *((void *)this + 23);
  if (v45) {
    unsigned int v46 = (protobuf::Intelligence_Activity **)(v45 + 8);
  }
  else {
    unsigned int v46 = 0;
  }
  if (v43)
  {
    uint64_t v47 = 8 * v43;
    do
    {
      int v48 = *v46++;
      uint64_t v49 = protobuf::Intelligence_Activity::ByteSizeLong(v48);
      v44 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      v47 -= 8;
    }
    while (v47);
  }
  uint64_t v50 = *((int *)this + 50);
  uint64_t v51 = v44 + v50;
  uint64_t v52 = *((void *)this + 26);
  if (v52) {
    unsigned int v53 = (protobuf::Intelligence_Utterance **)(v52 + 8);
  }
  else {
    unsigned int v53 = 0;
  }
  if (v50)
  {
    uint64_t v54 = 8 * v50;
    do
    {
      unsigned int v55 = *v53++;
      uint64_t v56 = protobuf::Intelligence_Utterance::ByteSizeLong(v55);
      v51 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6);
      v54 -= 8;
    }
    while (v54);
  }
  uint64_t v57 = *((int *)this + 56);
  uint64_t v58 = v51 + v57;
  uint64_t v59 = *((void *)this + 29);
  if (v59) {
    int v60 = (protobuf::Intelligence_Character **)(v59 + 8);
  }
  else {
    int v60 = 0;
  }
  if (v57)
  {
    uint64_t v61 = 8 * v57;
    do
    {
      unsigned int v62 = *v60++;
      uint64_t v63 = protobuf::Intelligence_Character::ByteSizeLong(v62);
      v58 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6);
      v61 -= 8;
    }
    while (v61);
  }
  uint64_t v64 = *((int *)this + 62);
  uint64_t v65 = v58 + v64;
  uint64_t v66 = *((void *)this + 32);
  if (v66) {
    unsigned int v67 = (protobuf::Intelligence_Intent **)(v66 + 8);
  }
  else {
    unsigned int v67 = 0;
  }
  if (v64)
  {
    uint64_t v68 = 8 * v64;
    do
    {
      unsigned int v69 = *v67++;
      uint64_t v70 = protobuf::Intelligence_Intent::ByteSizeLong(v69);
      v65 += v70 + ((9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6);
      v68 -= 8;
    }
    while (v68);
  }
  uint64_t v71 = *((int *)this + 68);
  uint64_t v72 = v65 + 2 * v71;
  uint64_t v73 = *((void *)this + 35);
  if (v73) {
    int v74 = (protobuf::Intelligence_Condition **)(v73 + 8);
  }
  else {
    int v74 = 0;
  }
  if (v71)
  {
    uint64_t v75 = 8 * v71;
    do
    {
      int v76 = *v74++;
      uint64_t v77 = protobuf::Intelligence_Condition::ByteSizeLong(v76);
      v72 += v77 + ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6);
      v75 -= 8;
    }
    while (v75);
  }
  uint64_t v78 = *((int *)this + 74);
  uint64_t v79 = v72 + 2 * v78;
  uint64_t v80 = *((void *)this + 38);
  if (v80) {
    uint64_t v81 = (protobuf::Intelligence_Counter **)(v80 + 8);
  }
  else {
    uint64_t v81 = 0;
  }
  if (v78)
  {
    uint64_t v82 = 8 * v78;
    do
    {
      unsigned int v83 = *v81++;
      uint64_t v84 = protobuf::Intelligence_Counter::ByteSizeLong(v83);
      v79 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6);
      v82 -= 8;
    }
    while (v82);
  }
  uint64_t v85 = *((int *)this + 80);
  uint64_t v86 = v79 + 2 * v85;
  uint64_t v87 = *((void *)this + 41);
  if (v87) {
    int v88 = (protobuf::Intelligence_Flag **)(v87 + 8);
  }
  else {
    int v88 = 0;
  }
  if (v85)
  {
    uint64_t v89 = 8 * v85;
    do
    {
      uint64_t v90 = *v88++;
      uint64_t v91 = protobuf::Intelligence_Flag::ByteSizeLong(v90);
      v86 += v91 + ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6);
      v89 -= 8;
    }
    while (v89);
  }
  uint64_t v92 = *((int *)this + 86);
  uint64_t v93 = v86 + 2 * v92;
  uint64_t v94 = *((void *)this + 44);
  if (v94) {
    unsigned int v95 = (protobuf::Intelligence_Label **)(v94 + 8);
  }
  else {
    unsigned int v95 = 0;
  }
  if (v92)
  {
    uint64_t v96 = 8 * v92;
    do
    {
      unsigned int v97 = *v95++;
      uint64_t v98 = protobuf::Intelligence_Label::ByteSizeLong(v97);
      v93 += v98 + ((9 * (__clz(v98 | 1) ^ 0x1F) + 73) >> 6);
      v96 -= 8;
    }
    while (v96);
  }
  uint64_t v99 = *((int *)this + 92);
  uint64_t v100 = v93 + 2 * v99;
  uint64_t v101 = *((void *)this + 47);
  if (v101) {
    unsigned int v102 = (protobuf::Intelligence_List **)(v101 + 8);
  }
  else {
    unsigned int v102 = 0;
  }
  if (v99)
  {
    uint64_t v103 = 8 * v99;
    do
    {
      int v104 = *v102++;
      uint64_t v105 = protobuf::Intelligence_List::ByteSizeLong(v104);
      v100 += v105 + ((9 * (__clz(v105 | 1) ^ 0x1F) + 73) >> 6);
      v103 -= 8;
    }
    while (v103);
  }
  uint64_t v106 = *((int *)this + 98);
  uint64_t v107 = v100 + 2 * v106;
  uint64_t v108 = *((void *)this + 50);
  if (v108) {
    unsigned int v109 = (protobuf::Intelligence_Variable **)(v108 + 8);
  }
  else {
    unsigned int v109 = 0;
  }
  if (v106)
  {
    uint64_t v110 = 8 * v106;
    do
    {
      unsigned int v111 = *v109++;
      uint64_t v112 = protobuf::Intelligence_Variable::ByteSizeLong(v111);
      v107 += v112 + ((9 * (__clz(v112 | 1) ^ 0x1F) + 73) >> 6);
      v110 -= 8;
    }
    while (v110);
  }
  uint64_t v113 = *((int *)this + 104);
  uint64_t v114 = v107 + 2 * v113;
  uint64_t v115 = *((void *)this + 53);
  if (v115) {
    int v116 = (protobuf::Intelligence_ResponseGroup **)(v115 + 8);
  }
  else {
    int v116 = 0;
  }
  if (v113)
  {
    uint64_t v117 = 8 * v113;
    do
    {
      unsigned int v118 = *v116++;
      uint64_t v119 = protobuf::Intelligence_ResponseGroup::ByteSizeLong(v118);
      v114 += v119 + ((9 * (__clz(v119 | 1) ^ 0x1F) + 73) >> 6);
      v117 -= 8;
    }
    while (v117);
  }
  uint64_t v120 = *((int *)this + 110);
  uint64_t v121 = v114 + 2 * v120;
  uint64_t v122 = *((void *)this + 56);
  if (v122) {
    unsigned int v123 = (protobuf::Intelligence_InputGroup **)(v122 + 8);
  }
  else {
    unsigned int v123 = 0;
  }
  if (v120)
  {
    uint64_t v124 = 8 * v120;
    do
    {
      unsigned int v125 = *v123++;
      uint64_t v126 = protobuf::Intelligence_InputGroup::ByteSizeLong(v125);
      v121 += v126 + ((9 * (__clz(v126 | 1) ^ 0x1F) + 73) >> 6);
      v124 -= 8;
    }
    while (v124);
  }
  uint64_t v127 = *((unsigned int *)this + 116);
  uint64_t v128 = v121 + 2 * v127;
  if ((int)v127 >= 1)
  {
    int v129 = 0;
    do
    {
      uint64_t v130 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 456, v129);
      uint64_t v131 = *(unsigned __int8 *)(v130 + 23);
      if ((v131 & 0x80u) != 0) {
        uint64_t v131 = *(void *)(v130 + 8);
      }
      v128 += v131 + ((9 * (__clz(v131 | 1) ^ 0x1F) + 73) >> 6);
      ++v129;
    }
    while (v127 != v129);
  }
  uint64_t v132 = *((unsigned int *)this + 122);
  uint64_t v133 = v128 + 2 * v132;
  if ((int)v132 >= 1)
  {
    int v134 = 0;
    do
    {
      uint64_t v135 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 480, v134);
      uint64_t v136 = *(unsigned __int8 *)(v135 + 23);
      if ((v136 & 0x80u) != 0) {
        uint64_t v136 = *(void *)(v135 + 8);
      }
      v133 += v136 + ((9 * (__clz(v136 | 1) ^ 0x1F) + 73) >> 6);
      ++v134;
    }
    while (v132 != v134);
  }
  uint64_t v137 = *((int *)this + 128);
  uint64_t v138 = v133 + 2 * v137;
  uint64_t v139 = *((void *)this + 65);
  if (v139) {
    unsigned int v140 = (protobuf::Intelligence_Event **)(v139 + 8);
  }
  else {
    unsigned int v140 = 0;
  }
  if (v137)
  {
    uint64_t v141 = 8 * v137;
    do
    {
      unsigned int v142 = *v140++;
      uint64_t v143 = protobuf::Intelligence_Event::ByteSizeLong(v142);
      v138 += v143 + ((9 * (__clz(v143 | 1) ^ 0x1F) + 73) >> 6);
      v141 -= 8;
    }
    while (v141);
  }
  int v144 = *((_DWORD *)this + 4);
  if ((v144 & 0xF) != 0)
  {
    if (v144)
    {
      uint64_t v145 = *((void *)this + 66);
      uint64_t v146 = *(unsigned __int8 *)(v145 + 23);
      uint64_t v147 = *(void *)(v145 + 8);
      if ((v146 & 0x80u) == 0) {
        uint64_t v147 = v146;
      }
      v138 += v147 + ((9 * (__clz(v147 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v144 & 2) != 0)
    {
      uint64_t v148 = protobuf::Intelligence_Start::ByteSizeLong(*((protobuf::Intelligence_Start **)this + 67));
      v138 += v148 + ((9 * (__clz(v148 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v149 = v138 + 9;
    if ((v144 & 4) == 0) {
      uint64_t v149 = v138;
    }
    if ((v144 & 8) != 0) {
      uint64_t v138 = v149 + 3;
    }
    else {
      uint64_t v138 = v149;
    }
  }
  uint64_t v150 = *((void *)this + 1);
  if (v150)
  {
    unint64_t v152 = v150 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v152 + 23) < 0) {
      uint64_t v153 = *(void *)(v152 + 8);
    }
    else {
      uint64_t v153 = *(unsigned __int8 *)(v152 + 23);
    }
    v138 += v153;
  }
  *((_DWORD *)this + 5) = v138;
  return v138;
}

void protobuf::Intelligence::CheckTypeAndMergeFrom(protobuf::Intelligence *this, const google::protobuf::MessageLite *lpsrc)
{
  protobuf::Intelligence::MergeFrom(this, lpsrc);
}

void protobuf::Intelligence::MergeFrom(protobuf::Intelligence *this, const protobuf::Intelligence *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/fileformat/intelligence.pb.cc", 15033);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Meta>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_DialogResponse>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ReferenceResponse>::TypeHandler>((int **)this + 12, (uint64_t)a2 + 96);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>((int **)this + 15, (uint64_t)a2 + 120);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((int **)this + 18, (uint64_t)a2 + 144);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::TypeHandler>((int **)this + 21, (uint64_t)a2 + 168);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Utterance>::TypeHandler>((int **)this + 24, (uint64_t)a2 + 192);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Character>::TypeHandler>((int **)this + 27, (uint64_t)a2 + 216);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Intent>::TypeHandler>((int **)this + 30, (uint64_t)a2 + 240);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition>::TypeHandler>((int **)this + 33, (uint64_t)a2 + 264);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Counter>::TypeHandler>((int **)this + 36, (uint64_t)a2 + 288);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Flag>::TypeHandler>((int **)this + 39, (uint64_t)a2 + 312);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Label>::TypeHandler>((int **)this + 42, (uint64_t)a2 + 336);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_List>::TypeHandler>((int **)this + 45, (uint64_t)a2 + 360);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Variable>::TypeHandler>((int **)this + 48, (uint64_t)a2 + 384);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ResponseGroup>::TypeHandler>((int **)this + 51, (uint64_t)a2 + 408);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup>::TypeHandler>((int **)this + 54, (uint64_t)a2 + 432);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 456, (uint64_t)a2 + 456);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 480, (uint64_t)a2 + 480);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Event>::TypeHandler>((int **)this + 63, (uint64_t)a2 + 504);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0xF) != 0)
  {
    if (v6)
    {
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v7 = (const std::string *)*((void *)a2 + 66);
      uint64_t v8 = (std::string *)*((void *)this + 66);
      if (v8 != v7)
      {
        if (v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 528, (uint64_t)v7);
        }
        std::string::operator=(v8, v7);
      }
    }
    if ((v6 & 2) != 0)
    {
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v9 = (protobuf::Intelligence_Start *)*((void *)this + 67);
      if (!v9)
      {
        uint64_t v9 = google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Start>(0);
        *((void *)this + 67) = v9;
      }
      if (*((void *)a2 + 67)) {
        uint64_t v10 = (const protobuf::Intelligence_Start *)*((void *)a2 + 67);
      }
      else {
        uint64_t v10 = (const protobuf::Intelligence_Start *)&protobuf::_Intelligence_Start_default_instance_;
      }
      protobuf::Intelligence_Start::MergeFrom(v9, v10);
      if ((v6 & 4) == 0)
      {
LABEL_12:
        if ((v6 & 8) == 0)
        {
LABEL_14:
          *((_DWORD *)this + 4) |= v6;
          return;
        }
LABEL_13:
        *((unsigned char *)this + 552) = *((unsigned char *)a2 + 552);
        goto LABEL_14;
      }
    }
    else if ((v6 & 4) == 0)
    {
      goto LABEL_12;
    }
    *((void *)this + 68) = *((void *)a2 + 68);
    if ((v6 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
}

void sub_239A7B948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void protobuf::Intelligence::CopyFrom(protobuf::Intelligence *this, const protobuf::Intelligence *a2)
{
  if (a2 != this)
  {
    protobuf::Intelligence::Clear(this);
    protobuf::Intelligence::MergeFrom(this, a2);
  }
}

uint64_t protobuf::Intelligence::IsInitialized(protobuf::Intelligence *this)
{
  return 1;
}

double protobuf::Intelligence::InternalSwap(protobuf::Intelligence *this, protobuf::Intelligence *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v21;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 24), (protobuf::Intelligence *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 48), (protobuf::Intelligence *)((char *)a2 + 48));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 72), (protobuf::Intelligence *)((char *)a2 + 72));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 96), (protobuf::Intelligence *)((char *)a2 + 96));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 120), (protobuf::Intelligence *)((char *)a2 + 120));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 144), (protobuf::Intelligence *)((char *)a2 + 144));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 168), (protobuf::Intelligence *)((char *)a2 + 168));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 192), (protobuf::Intelligence *)((char *)a2 + 192));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 216), (protobuf::Intelligence *)((char *)a2 + 216));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 240), (protobuf::Intelligence *)((char *)a2 + 240));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 264), (protobuf::Intelligence *)((char *)a2 + 264));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 288), (protobuf::Intelligence *)((char *)a2 + 288));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 312), (protobuf::Intelligence *)((char *)a2 + 312));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 336), (protobuf::Intelligence *)((char *)a2 + 336));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 360), (protobuf::Intelligence *)((char *)a2 + 360));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 384), (protobuf::Intelligence *)((char *)a2 + 384));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 408), (protobuf::Intelligence *)((char *)a2 + 408));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 432), (protobuf::Intelligence *)((char *)a2 + 432));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 456), (protobuf::Intelligence *)((char *)a2 + 456));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 480), (protobuf::Intelligence *)((char *)a2 + 480));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((protobuf::Intelligence *)((char *)this + 504), (protobuf::Intelligence *)((char *)a2 + 504));
  unsigned int v13 = (uint64_t **)((char *)a2 + 528);
  uint64_t v14 = (uint64_t *)*((void *)this + 66);
  if (v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v13 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 66, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v14 = (uint64_t *)*((void *)this + 66);
  }
  uint64_t v15 = *v13;
  if (*v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 66, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v13;
  }
  uint64_t v16 = v14[2];
  long long v17 = *(_OWORD *)v14;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  std::string v14[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v19 = *((void *)this + 67);
  *((void *)this + 67) = *((void *)a2 + 67);
  *((void *)a2 + 67) = v19;
  double result = *((double *)this + 68);
  *((void *)this + 68) = *((void *)a2 + 68);
  *((double *)a2 + 68) = result;
  LOBYTE(v19) = *((unsigned char *)this + 552);
  *((unsigned char *)this + 552) = *((unsigned char *)a2 + 552);
  *((unsigned char *)a2 + 552) = v19;
  return result;
}

void *protobuf::Intelligence::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "protobuf.Intelligence");
}

protobuf::Intelligence_Meta *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Meta>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Meta *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x28uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Meta>);
  }
  protobuf::Intelligence_Meta::Intelligence_Meta(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7BCB8(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40DFBAE579);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_KeyValueParameter *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_KeyValueParameter *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0xC0uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_KeyValueParameter>);
  }
  protobuf::Intelligence_KeyValueParameter::Intelligence_KeyValueParameter(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7BD6C(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40A43BFAD9);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Undo *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Undo>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Undo *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Undo>);
  }
  protobuf::Intelligence_Undo::Intelligence_Undo(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7BE20(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40D196C376);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_DialogResponse *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_DialogResponse>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_DialogResponse *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0xF0uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_DialogResponse>);
  }
  protobuf::Intelligence_DialogResponse::Intelligence_DialogResponse(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7BED4(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40114067D4);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_BehaviorResponse *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_BehaviorResponse>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_BehaviorResponse *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0xA8uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_BehaviorResponse>);
  }
  protobuf::Intelligence_BehaviorResponse::Intelligence_BehaviorResponse(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7BF88(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40B4A8759ALL);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_ReferenceResponse *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_ReferenceResponse>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_ReferenceResponse *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x90uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_ReferenceResponse>);
  }
  protobuf::Intelligence_ReferenceResponse::Intelligence_ReferenceResponse(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C03C(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40A0FE4946);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_ResponseGroup *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_ResponseGroup>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_ResponseGroup *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x80uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_ResponseGroup>);
  }
  protobuf::Intelligence_ResponseGroup::Intelligence_ResponseGroup(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C0F0(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40FEB2EEB8);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_InputGroup_Interjection *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Interjection>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_InputGroup_Interjection *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x30uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_InputGroup_Interjection>);
  }
  protobuf::Intelligence_InputGroup_Interjection::Intelligence_InputGroup_Interjection(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C1A4(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40C24530F0);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_InputGroup_Intent *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Intent>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_InputGroup_Intent *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x68uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_InputGroup_Intent>);
  }
  protobuf::Intelligence_InputGroup_Intent::Intelligence_InputGroup_Intent(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C258(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40FD116D44);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_InputGroup_Event *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Event>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_InputGroup_Event *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x50uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_InputGroup_Event>);
  }
  protobuf::Intelligence_InputGroup_Event::Intelligence_InputGroup_Event(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C30C(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40B600A8A2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_InputGroup_Fallback *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Fallback>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_InputGroup_Fallback *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x50uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_InputGroup_Fallback>);
  }
  protobuf::Intelligence_InputGroup_Fallback::Intelligence_InputGroup_Fallback(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C3C0(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C4030D5F432);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_InputGroup_LegacyEvent *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_LegacyEvent>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_InputGroup_LegacyEvent *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x48uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_InputGroup_LegacyEvent>);
  }
  protobuf::Intelligence_InputGroup_LegacyEvent::Intelligence_InputGroup_LegacyEvent(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C474(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40E04C479ALL);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_InputGroup *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_InputGroup *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0xB0uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_InputGroup>);
  }
  protobuf::Intelligence_InputGroup::Intelligence_InputGroup(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C528(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40527E78C2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Activity *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Activity>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Activity *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x58uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Activity>);
  }
  protobuf::Intelligence_Activity::Intelligence_Activity(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C5DC(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C400F112FBCLL);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Utterance *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Utterance>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Utterance *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x30uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Utterance>);
  }
  protobuf::Intelligence_Utterance::Intelligence_Utterance(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C690(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40A4F785B1);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Character *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Character>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Character *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x30uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Character>);
  }
  protobuf::Intelligence_Character::Intelligence_Character(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C744(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40CA074DDCLL);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Counter *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Counter>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Counter *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x28uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Counter>);
  }
  protobuf::Intelligence_Counter::Intelligence_Counter(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C7F8(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Flag *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Flag>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Flag *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x28uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Flag>);
  }
  protobuf::Intelligence_Flag::Intelligence_Flag(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C8AC(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C404E984866);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Label *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Label>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Label *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x28uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Label>);
  }
  protobuf::Intelligence_Label::Intelligence_Label(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7C960(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40DFBAE579);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_List *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_List>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_List *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_List>);
  }
  protobuf::Intelligence_List::Intelligence_List(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7CA14(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40D196C376);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Variable *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Variable>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Variable *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x80uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Variable>);
  }
  protobuf::Intelligence_Variable::Intelligence_Variable(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7CAC8(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C400FE9DF76);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Start *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Start>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Start *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Start>);
  }
  protobuf::Intelligence_Start::Intelligence_Start(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7CB7C(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40D196C376);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_NLParameters *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_NLParameters>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_NLParameters *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_NLParameters>);
  }
  protobuf::Intelligence_NLParameters::Intelligence_NLParameters(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7CC30(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40D196C376);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Event *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Event>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Event *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0xA8uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Event>);
  }
  protobuf::Intelligence_Event::Intelligence_Event(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7CCE4(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40B4D98986);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Intent *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Intent>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Intent *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x48uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Intent>);
  }
  protobuf::Intelligence_Intent::Intelligence_Intent(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7CD98(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40E04C479ALL);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_Memory_Value *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Memory_Value>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_State_Memory_Value *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x30uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_State_Memory_Value>);
  }
  protobuf::Intelligence_State_Memory_Value::Intelligence_State_Memory_Value(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7CE4C(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C4050885234);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_Memory *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Memory>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_State_Memory *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_State_Memory>);
  }
  protobuf::Intelligence_State_Memory::Intelligence_State_Memory(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7CF00(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C407D532265);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_InputGroup *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_InputGroup>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_State_InputGroup *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x20uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_State_InputGroup>);
  }
  protobuf::Intelligence_State_InputGroup::Intelligence_State_InputGroup(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7CFB4(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40D4912B22);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_Event *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Event>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_State_Event *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x28uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_State_Event>);
  }
  protobuf::Intelligence_State_Event::Intelligence_State_Event(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7D068(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_Response *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Response>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_State_Response *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x30uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_State_Response>);
  }
  protobuf::Intelligence_State_Response::Intelligence_State_Response(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7D11C(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_Timer *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Timer>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_State_Timer *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_State_Timer>);
  }
  protobuf::Intelligence_State_Timer::Intelligence_State_Timer(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7D1D0(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40269C9ABCLL);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_ExecutionState_Frame_ResponseState>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x30uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_State_ExecutionState_Frame_ResponseState>);
  }
  protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::Intelligence_State_ExecutionState_Frame_ResponseState(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7D284(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40E23D33CELL);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_ExecutionState_Frame *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_ExecutionState_Frame>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_State_ExecutionState_Frame *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x30uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_State_ExecutionState_Frame>);
  }
  protobuf::Intelligence_State_ExecutionState_Frame::Intelligence_State_ExecutionState_Frame(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7D338(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C4050885234);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State_ExecutionState *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_ExecutionState>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_State_ExecutionState *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x68uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_State_ExecutionState>);
  }
  protobuf::Intelligence_State_ExecutionState::Intelligence_State_ExecutionState(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7D3EC(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40870AC4B2);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_State *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_State *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0xF0uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_State>);
  }
  protobuf::Intelligence_State::Intelligence_State(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7D4A0(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40AD20B86DLL);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Condition_ConditionEntry *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition_ConditionEntry>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Condition_ConditionEntry *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x78uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Condition_ConditionEntry>);
  }
  protobuf::Intelligence_Condition_ConditionEntry::Intelligence_Condition_ConditionEntry(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7D554(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40E36F92F9);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Condition *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence_Condition *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x28uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence_Condition>);
  }
  protobuf::Intelligence_Condition::Intelligence_Condition(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7D608(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C40DFBAE579);
  _Unwind_Resume(a1);
}

protobuf::Intelligence *google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (protobuf::Intelligence *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x230uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<protobuf::Intelligence>);
  }
  protobuf::Intelligence::Intelligence(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_239A7D6BC(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x10A1C4031AC1C0ELL);
  _Unwind_Resume(a1);
}

protobuf::Intelligence_Meta *protobuf::Intelligence_Meta::New(protobuf::Intelligence_Meta *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Meta>(0);
}

protobuf::Intelligence_Meta *protobuf::Intelligence_Meta::New(protobuf::Intelligence_Meta *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Meta>(a2);
}

uint64_t protobuf::Intelligence_Meta::GetCachedSize(protobuf::Intelligence_Meta *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_KeyValueParameter *protobuf::Intelligence_KeyValueParameter::New(protobuf::Intelligence_KeyValueParameter *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(0);
}

protobuf::Intelligence_KeyValueParameter *protobuf::Intelligence_KeyValueParameter::New(protobuf::Intelligence_KeyValueParameter *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_KeyValueParameter>(a2);
}

uint64_t protobuf::Intelligence_KeyValueParameter::GetCachedSize(protobuf::Intelligence_KeyValueParameter *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Undo *protobuf::Intelligence_Undo::New(protobuf::Intelligence_Undo *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Undo>(0);
}

protobuf::Intelligence_Undo *protobuf::Intelligence_Undo::New(protobuf::Intelligence_Undo *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Undo>(a2);
}

uint64_t protobuf::Intelligence_Undo::GetCachedSize(protobuf::Intelligence_Undo *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_DialogResponse *protobuf::Intelligence_DialogResponse::New(protobuf::Intelligence_DialogResponse *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_DialogResponse>(0);
}

protobuf::Intelligence_DialogResponse *protobuf::Intelligence_DialogResponse::New(protobuf::Intelligence_DialogResponse *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_DialogResponse>(a2);
}

uint64_t protobuf::Intelligence_DialogResponse::GetCachedSize(protobuf::Intelligence_DialogResponse *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_BehaviorResponse *protobuf::Intelligence_BehaviorResponse::New(protobuf::Intelligence_BehaviorResponse *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_BehaviorResponse>(0);
}

protobuf::Intelligence_BehaviorResponse *protobuf::Intelligence_BehaviorResponse::New(protobuf::Intelligence_BehaviorResponse *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_BehaviorResponse>(a2);
}

uint64_t protobuf::Intelligence_BehaviorResponse::GetCachedSize(protobuf::Intelligence_BehaviorResponse *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_ReferenceResponse *protobuf::Intelligence_ReferenceResponse::New(protobuf::Intelligence_ReferenceResponse *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_ReferenceResponse>(0);
}

protobuf::Intelligence_ReferenceResponse *protobuf::Intelligence_ReferenceResponse::New(protobuf::Intelligence_ReferenceResponse *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_ReferenceResponse>(a2);
}

uint64_t protobuf::Intelligence_ReferenceResponse::GetCachedSize(protobuf::Intelligence_ReferenceResponse *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_ResponseGroup *protobuf::Intelligence_ResponseGroup::New(protobuf::Intelligence_ResponseGroup *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_ResponseGroup>(0);
}

protobuf::Intelligence_ResponseGroup *protobuf::Intelligence_ResponseGroup::New(protobuf::Intelligence_ResponseGroup *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_ResponseGroup>(a2);
}

uint64_t protobuf::Intelligence_ResponseGroup::GetCachedSize(protobuf::Intelligence_ResponseGroup *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_InputGroup_Interjection *protobuf::Intelligence_InputGroup_Interjection::New(protobuf::Intelligence_InputGroup_Interjection *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Interjection>(0);
}

protobuf::Intelligence_InputGroup_Interjection *protobuf::Intelligence_InputGroup_Interjection::New(protobuf::Intelligence_InputGroup_Interjection *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Interjection>(a2);
}

uint64_t protobuf::Intelligence_InputGroup_Interjection::GetCachedSize(protobuf::Intelligence_InputGroup_Interjection *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_InputGroup_Intent *protobuf::Intelligence_InputGroup_Intent::New(protobuf::Intelligence_InputGroup_Intent *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Intent>(0);
}

protobuf::Intelligence_InputGroup_Intent *protobuf::Intelligence_InputGroup_Intent::New(protobuf::Intelligence_InputGroup_Intent *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Intent>(a2);
}

uint64_t protobuf::Intelligence_InputGroup_Intent::GetCachedSize(protobuf::Intelligence_InputGroup_Intent *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_InputGroup_Event *protobuf::Intelligence_InputGroup_Event::New(protobuf::Intelligence_InputGroup_Event *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Event>(0);
}

protobuf::Intelligence_InputGroup_Event *protobuf::Intelligence_InputGroup_Event::New(protobuf::Intelligence_InputGroup_Event *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Event>(a2);
}

uint64_t protobuf::Intelligence_InputGroup_Event::GetCachedSize(protobuf::Intelligence_InputGroup_Event *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_InputGroup_Fallback *protobuf::Intelligence_InputGroup_Fallback::New(protobuf::Intelligence_InputGroup_Fallback *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Fallback>(0);
}

protobuf::Intelligence_InputGroup_Fallback *protobuf::Intelligence_InputGroup_Fallback::New(protobuf::Intelligence_InputGroup_Fallback *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_Fallback>(a2);
}

uint64_t protobuf::Intelligence_InputGroup_Fallback::GetCachedSize(protobuf::Intelligence_InputGroup_Fallback *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_InputGroup_LegacyEvent *protobuf::Intelligence_InputGroup_LegacyEvent::New(protobuf::Intelligence_InputGroup_LegacyEvent *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_LegacyEvent>(0);
}

protobuf::Intelligence_InputGroup_LegacyEvent *protobuf::Intelligence_InputGroup_LegacyEvent::New(protobuf::Intelligence_InputGroup_LegacyEvent *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup_LegacyEvent>(a2);
}

uint64_t protobuf::Intelligence_InputGroup_LegacyEvent::GetCachedSize(protobuf::Intelligence_InputGroup_LegacyEvent *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_InputGroup *protobuf::Intelligence_InputGroup::New(protobuf::Intelligence_InputGroup *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup>(0);
}

protobuf::Intelligence_InputGroup *protobuf::Intelligence_InputGroup::New(protobuf::Intelligence_InputGroup *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_InputGroup>(a2);
}

uint64_t protobuf::Intelligence_InputGroup::GetCachedSize(protobuf::Intelligence_InputGroup *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Activity *protobuf::Intelligence_Activity::New(protobuf::Intelligence_Activity *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Activity>(0);
}

protobuf::Intelligence_Activity *protobuf::Intelligence_Activity::New(protobuf::Intelligence_Activity *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Activity>(a2);
}

uint64_t protobuf::Intelligence_Activity::GetCachedSize(protobuf::Intelligence_Activity *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Utterance *protobuf::Intelligence_Utterance::New(protobuf::Intelligence_Utterance *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Utterance>(0);
}

protobuf::Intelligence_Utterance *protobuf::Intelligence_Utterance::New(protobuf::Intelligence_Utterance *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Utterance>(a2);
}

uint64_t protobuf::Intelligence_Utterance::GetCachedSize(protobuf::Intelligence_Utterance *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Character *protobuf::Intelligence_Character::New(protobuf::Intelligence_Character *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Character>(0);
}

protobuf::Intelligence_Character *protobuf::Intelligence_Character::New(protobuf::Intelligence_Character *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Character>(a2);
}

uint64_t protobuf::Intelligence_Character::GetCachedSize(protobuf::Intelligence_Character *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Counter *protobuf::Intelligence_Counter::New(protobuf::Intelligence_Counter *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Counter>(0);
}

protobuf::Intelligence_Counter *protobuf::Intelligence_Counter::New(protobuf::Intelligence_Counter *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Counter>(a2);
}

uint64_t protobuf::Intelligence_Counter::GetCachedSize(protobuf::Intelligence_Counter *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Flag *protobuf::Intelligence_Flag::New(protobuf::Intelligence_Flag *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Flag>(0);
}

protobuf::Intelligence_Flag *protobuf::Intelligence_Flag::New(protobuf::Intelligence_Flag *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Flag>(a2);
}

uint64_t protobuf::Intelligence_Flag::GetCachedSize(protobuf::Intelligence_Flag *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Label *protobuf::Intelligence_Label::New(protobuf::Intelligence_Label *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Label>(0);
}

protobuf::Intelligence_Label *protobuf::Intelligence_Label::New(protobuf::Intelligence_Label *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Label>(a2);
}

uint64_t protobuf::Intelligence_Label::GetCachedSize(protobuf::Intelligence_Label *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_List *protobuf::Intelligence_List::New(protobuf::Intelligence_List *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_List>(0);
}

protobuf::Intelligence_List *protobuf::Intelligence_List::New(protobuf::Intelligence_List *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_List>(a2);
}

uint64_t protobuf::Intelligence_List::GetCachedSize(protobuf::Intelligence_List *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Variable *protobuf::Intelligence_Variable::New(protobuf::Intelligence_Variable *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Variable>(0);
}

protobuf::Intelligence_Variable *protobuf::Intelligence_Variable::New(protobuf::Intelligence_Variable *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Variable>(a2);
}

uint64_t protobuf::Intelligence_Variable::GetCachedSize(protobuf::Intelligence_Variable *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Start *protobuf::Intelligence_Start::New(protobuf::Intelligence_Start *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Start>(0);
}

protobuf::Intelligence_Start *protobuf::Intelligence_Start::New(protobuf::Intelligence_Start *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Start>(a2);
}

uint64_t protobuf::Intelligence_Start::GetCachedSize(protobuf::Intelligence_Start *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_NLParameters *protobuf::Intelligence_NLParameters::New(protobuf::Intelligence_NLParameters *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_NLParameters>(0);
}

protobuf::Intelligence_NLParameters *protobuf::Intelligence_NLParameters::New(protobuf::Intelligence_NLParameters *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_NLParameters>(a2);
}

uint64_t protobuf::Intelligence_NLParameters::GetCachedSize(protobuf::Intelligence_NLParameters *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Event *protobuf::Intelligence_Event::New(protobuf::Intelligence_Event *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Event>(0);
}

protobuf::Intelligence_Event *protobuf::Intelligence_Event::New(protobuf::Intelligence_Event *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Event>(a2);
}

uint64_t protobuf::Intelligence_Event::GetCachedSize(protobuf::Intelligence_Event *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Intent *protobuf::Intelligence_Intent::New(protobuf::Intelligence_Intent *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Intent>(0);
}

protobuf::Intelligence_Intent *protobuf::Intelligence_Intent::New(protobuf::Intelligence_Intent *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Intent>(a2);
}

uint64_t protobuf::Intelligence_Intent::GetCachedSize(protobuf::Intelligence_Intent *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_State_Memory_Value *protobuf::Intelligence_State_Memory_Value::New(protobuf::Intelligence_State_Memory_Value *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Memory_Value>(0);
}

protobuf::Intelligence_State_Memory_Value *protobuf::Intelligence_State_Memory_Value::New(protobuf::Intelligence_State_Memory_Value *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Memory_Value>(a2);
}

uint64_t protobuf::Intelligence_State_Memory_Value::GetCachedSize(protobuf::Intelligence_State_Memory_Value *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_State_Memory *protobuf::Intelligence_State_Memory::New(protobuf::Intelligence_State_Memory *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Memory>(0);
}

protobuf::Intelligence_State_Memory *protobuf::Intelligence_State_Memory::New(protobuf::Intelligence_State_Memory *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Memory>(a2);
}

uint64_t protobuf::Intelligence_State_Memory::GetCachedSize(protobuf::Intelligence_State_Memory *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_State_InputGroup *protobuf::Intelligence_State_InputGroup::New(protobuf::Intelligence_State_InputGroup *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_InputGroup>(0);
}

protobuf::Intelligence_State_InputGroup *protobuf::Intelligence_State_InputGroup::New(protobuf::Intelligence_State_InputGroup *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_InputGroup>(a2);
}

uint64_t protobuf::Intelligence_State_InputGroup::GetCachedSize(protobuf::Intelligence_State_InputGroup *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_State_Event *protobuf::Intelligence_State_Event::New(protobuf::Intelligence_State_Event *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Event>(0);
}

protobuf::Intelligence_State_Event *protobuf::Intelligence_State_Event::New(protobuf::Intelligence_State_Event *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Event>(a2);
}

uint64_t protobuf::Intelligence_State_Event::GetCachedSize(protobuf::Intelligence_State_Event *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_State_Response *protobuf::Intelligence_State_Response::New(protobuf::Intelligence_State_Response *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Response>(0);
}

protobuf::Intelligence_State_Response *protobuf::Intelligence_State_Response::New(protobuf::Intelligence_State_Response *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Response>(a2);
}

uint64_t protobuf::Intelligence_State_Response::GetCachedSize(protobuf::Intelligence_State_Response *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_State_Timer *protobuf::Intelligence_State_Timer::New(protobuf::Intelligence_State_Timer *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Timer>(0);
}

protobuf::Intelligence_State_Timer *protobuf::Intelligence_State_Timer::New(protobuf::Intelligence_State_Timer *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_Timer>(a2);
}

uint64_t protobuf::Intelligence_State_Timer::GetCachedSize(protobuf::Intelligence_State_Timer *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::New(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_ExecutionState_Frame_ResponseState>(0);
}

protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::New(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_ExecutionState_Frame_ResponseState>(a2);
}

uint64_t protobuf::Intelligence_State_ExecutionState_Frame_ResponseState::GetCachedSize(protobuf::Intelligence_State_ExecutionState_Frame_ResponseState *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_State_ExecutionState_Frame *protobuf::Intelligence_State_ExecutionState_Frame::New(protobuf::Intelligence_State_ExecutionState_Frame *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_ExecutionState_Frame>(0);
}

protobuf::Intelligence_State_ExecutionState_Frame *protobuf::Intelligence_State_ExecutionState_Frame::New(protobuf::Intelligence_State_ExecutionState_Frame *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_ExecutionState_Frame>(a2);
}

uint64_t protobuf::Intelligence_State_ExecutionState_Frame::GetCachedSize(protobuf::Intelligence_State_ExecutionState_Frame *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_State_ExecutionState *protobuf::Intelligence_State_ExecutionState::New(protobuf::Intelligence_State_ExecutionState *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_ExecutionState>(0);
}

protobuf::Intelligence_State_ExecutionState *protobuf::Intelligence_State_ExecutionState::New(protobuf::Intelligence_State_ExecutionState *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State_ExecutionState>(a2);
}

uint64_t protobuf::Intelligence_State_ExecutionState::GetCachedSize(protobuf::Intelligence_State_ExecutionState *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_State *protobuf::Intelligence_State::New(protobuf::Intelligence_State *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State>(0);
}

protobuf::Intelligence_State *protobuf::Intelligence_State::New(protobuf::Intelligence_State *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_State>(a2);
}

uint64_t protobuf::Intelligence_State::GetCachedSize(protobuf::Intelligence_State *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Condition_ConditionEntry *protobuf::Intelligence_Condition_ConditionEntry::New(protobuf::Intelligence_Condition_ConditionEntry *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition_ConditionEntry>(0);
}

protobuf::Intelligence_Condition_ConditionEntry *protobuf::Intelligence_Condition_ConditionEntry::New(protobuf::Intelligence_Condition_ConditionEntry *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition_ConditionEntry>(a2);
}

uint64_t protobuf::Intelligence_Condition_ConditionEntry::GetCachedSize(protobuf::Intelligence_Condition_ConditionEntry *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence_Condition *protobuf::Intelligence_Condition::New(protobuf::Intelligence_Condition *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition>(0);
}

protobuf::Intelligence_Condition *protobuf::Intelligence_Condition::New(protobuf::Intelligence_Condition *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence_Condition>(a2);
}

uint64_t protobuf::Intelligence_Condition::GetCachedSize(protobuf::Intelligence_Condition *this)
{
  return *((unsigned int *)this + 5);
}

protobuf::Intelligence *protobuf::Intelligence::New(protobuf::Intelligence *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence>(0);
}

protobuf::Intelligence *protobuf::Intelligence::New(protobuf::Intelligence *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<protobuf::Intelligence>(a2);
}

uint64_t protobuf::Intelligence::GetCachedSize(protobuf::Intelligence *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t *google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 24);
    if (v3 && v4 == 0)
    {
      if (*(char *)(v3 + 23) < 0) {
        operator delete(*(void **)v3);
      }
      MEMORY[0x23ECAACC0](v3, 0x1032C402ED93987);
    }
  }
  *a1 = 0;
  return a1;
}

void google::protobuf::internal::ArenaStringPtr::CreateInstance(std::string **a1, google::protobuf::internal::ArenaImpl *this, long long *a3)
{
  if (a3)
  {
    if (this) {
      goto LABEL_3;
    }
LABEL_8:
    operator new();
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/arenastring.h", 370);
  uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: initial_value != NULL: ");
  google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v9->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  if (!this) {
    goto LABEL_8;
  }
LABEL_3:
  if (*((void *)this + 14)) {
  unint64_t AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  unint64_t v7 = AlignedAndAddCleanup;
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(AlignedAndAddCleanup, *(const std::string::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v8 = *a3;
    AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
    *(_OWORD *)&AlignedAndAddCleanup->__r_.__value_.__l.__data_ = v8;
  }
  *a1 = v7;
}

void sub_239A7DC10(_Unwind_Exception *a1)
{
  MEMORY[0x23ECAACC0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Intent>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7DD08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Fallback>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7DDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_InputGroup_Event>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7DEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_ExecutionState_Frame_ResponseState>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7DFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_ExecutionState_Frame>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7E088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Memory>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7E168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Response>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7E248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_InputGroup>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7E328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_State_Event>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7E408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition_ConditionEntry>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7E4E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Meta>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7E5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_DialogResponse>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7E6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_BehaviorResponse>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7E788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_ReferenceResponse>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7E868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Activity>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7E948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Utterance>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7EA28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Character>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7EB08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Intent>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7EBE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Condition>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7ECC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Variable>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_239A7EDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<protobuf::Intelligence_Event>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SiriIntelligenceEngine/3rdparty/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}