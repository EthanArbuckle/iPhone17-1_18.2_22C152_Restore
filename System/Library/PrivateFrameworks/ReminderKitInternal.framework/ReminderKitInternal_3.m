void REMStore.createOrUpdatePublicLink(for:with:completionHandlerQueue:completion:)(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t aBlock;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;

  v6 = v5;
  ObjectType = swift_getObjectType();
  v12 = sub_1A7572210();
  v34 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A7572260();
  v33 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend(v6, sel_daemonController);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(a1, sel_objectID);
    v21 = (void *)swift_allocObject();
    v21[2] = v20;
    v21[3] = a2;
    v21[4] = a3;
    v21[5] = a4;
    v22 = ObjectType;
    v21[6] = a5;
    v21[7] = v22;
    v23 = (void *)swift_allocObject();
    v23[2] = a3;
    v23[3] = a4;
    v23[4] = a5;
    v24 = a3;
    swift_retain_n();
    v25 = v24;
    v26 = v20;
    v27 = a2;
    v28 = (void *)sub_1A75725E0();
    v41 = sub_1A7455358;
    v42 = v21;
    aBlock = MEMORY[0x1E4F143A8];
    v38 = 1107296256;
    v39 = sub_1A7454CC4;
    v40 = &block_descriptor_21_0;
    v29 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v41 = sub_1A7455920;
    v42 = v23;
    aBlock = MEMORY[0x1E4F143A8];
    v38 = 1107296256;
    v39 = sub_1A7454D24;
    v40 = &block_descriptor_24;
    v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v19, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v28, v29, v30);
    _Block_release(v30);
    _Block_release(v29);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();
  }
  else
  {
    v31 = swift_allocObject();
    *(void *)(v31 + 16) = a4;
    *(void *)(v31 + 24) = a5;
    v41 = sub_1A7455218;
    v42 = (void *)v31;
    aBlock = MEMORY[0x1E4F143A8];
    v38 = 1107296256;
    v39 = sub_1A73322E4;
    v40 = &block_descriptor_12;
    v32 = _Block_copy(&aBlock);
    swift_retain();
    sub_1A7572240();
    v36 = MEMORY[0x1E4FBC860];
    sub_1A732938C();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
    sub_1A73293E4();
    sub_1A7573380();
    MEMORY[0x1AD0CB2C0](0, v17, v14, v32);
    _Block_release(v32);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v12);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v15);
    swift_release();
  }
}

void sub_1A7455218()
{
  sub_1A7455DF0(*(void (**)(id, uint64_t))(v0 + 16));
}

void sub_1A7455234(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v14 = (void *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a7;
  v18[4] = sub_1A745B1F8;
  v18[5] = v14;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 1107296256;
  v18[2] = sub_1A7454CC0;
  v18[3] = &block_descriptor_158_0;
  v15 = _Block_copy(v18);
  id v16 = a2;
  id v17 = a4;
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_createOrUpdatePublicLinkForTemplateWithObjectID_configuration_completion_, v16, a3, v15);
  _Block_release(v15);
}

uint64_t sub_1A7455358(uint64_t a1)
{
  return sub_1A7456054(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1A7455234);
}

uint64_t sub_1A7455370(id a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v50 = a4;
  uint64_t v13 = sub_1A7572210();
  uint64_t v51 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1A7572260();
  uint64_t v16 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    char v19 = 1;
    a1 = a2;
  }
  else if (a1)
  {
    id v20 = a1;
    char v19 = 0;
  }
  else
  {
    if (qword_1E96F0868 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1A7571E90();
    __swift_project_value_buffer(v21, (uint64_t)qword_1E96F3B10);
    id v48 = a3;
    v22 = sub_1A7571E80();
    os_log_type_t v23 = sub_1A7572FE0();
    int v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v25 = swift_slowAlloc();
      int v45 = v24;
      uint64_t v26 = v25;
      v44 = (void *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v52 = v46;
      uint64_t aBlock = a7;
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v43 = v26 + 4;
      swift_getMetatypeMetadata();
      v47 = v22;
      uint64_t v27 = sub_1A7572670();
      uint64_t aBlock = sub_1A72D1730(v27, v28, &v52);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2112;
      v42 = (uint8_t *)v26;
      uint64_t v43 = v26 + 14;
      uint64_t v41 = v26 + 22;
      id v29 = v48;
      uint64_t aBlock = (uint64_t)v48;
      id v30 = v48;
      sub_1A7573250();
      v31 = v44;
      void *v44 = v29;

      v32 = v42;
      _os_log_impl(&dword_1A72A1000, v47, (os_log_type_t)v45, "%s: 'templatePublicLink' and 'error' in completion of '-[REMXPCStorePerformer createOrUpdatePublicLinkForTemplateWithObjectID:configuration:completion:]' were both nil {remTemplate.objectID: %@}", v42, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v31, -1, -1);
      uint64_t v33 = v46;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v33, -1, -1);
      MEMORY[0x1AD0CD330](v32, -1, -1);
    }
    else
    {

      id v34 = v48;
    }
    v47 = self;
    uint64_t aBlock = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    id v35 = objc_msgSend(v48, sel_description);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    v36 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    a1 = [v47 internalErrorWithDebugDescription:v36];

    char v19 = 1;
  }
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a5;
  *(void *)(v37 + 24) = a6;
  *(void *)(v37 + 32) = a1;
  *(unsigned char *)(v37 + 40) = v19;
  v57 = sub_1A745B130;
  uint64_t v58 = v37;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v54 = 1107296256;
  v55 = sub_1A73322E4;
  v56 = &block_descriptor_164;
  v38 = _Block_copy(&aBlock);
  id v39 = a2;
  swift_retain();
  sub_1A72BEFA4(a1);
  sub_1A7572240();
  uint64_t v52 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  sub_1A7573380();
  MEMORY[0x1AD0CB2C0](0, v18, v15, v38);
  _Block_release(v38);
  sub_1A7413730(a1);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v15, v13);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v49);
  return swift_release();
}

uint64_t sub_1A7455918()
{
  return objectdestroyTm_1();
}

uint64_t sub_1A7455920(void *a1)
{
  return sub_1A74566A0(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1EFCA1880, (uint64_t)sub_1A745B0F8, (uint64_t)&block_descriptor_152);
}

void REMStore.createPublicContentPreview(of:with:completionHandlerQueue:completion:)(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = sub_1A7572210();
  uint64_t v34 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A7572260();
  uint64_t v33 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = objc_msgSend(v6, sel_daemonController);
  if (v18)
  {
    char v19 = v18;
    id v20 = objc_msgSend(a1, sel_objectID);
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = v20;
    v21[3] = a2;
    v21[4] = a3;
    v21[5] = a4;
    uint64_t v22 = ObjectType;
    v21[6] = a5;
    v21[7] = v22;
    os_log_type_t v23 = (void *)swift_allocObject();
    v23[2] = a3;
    v23[3] = a4;
    v23[4] = a5;
    id v24 = a3;
    swift_retain_n();
    id v25 = v24;
    id v26 = v20;
    id v27 = a2;
    unint64_t v28 = (void *)sub_1A75725E0();
    uint64_t v41 = sub_1A745603C;
    v42 = v21;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v38 = 1107296256;
    id v39 = sub_1A7454CC4;
    v40 = &block_descriptor_39;
    id v29 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v41 = sub_1A7456918;
    v42 = v23;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v38 = 1107296256;
    id v39 = sub_1A7454D24;
    v40 = &block_descriptor_42;
    id v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v19, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v28, v29, v30);
    _Block_release(v30);
    _Block_release(v29);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = a4;
    *(void *)(v31 + 24) = a5;
    uint64_t v41 = sub_1A745B344;
    v42 = (void *)v31;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v38 = 1107296256;
    id v39 = sub_1A73322E4;
    v40 = &block_descriptor_30_0;
    v32 = _Block_copy(&aBlock);
    swift_retain();
    sub_1A7572240();
    uint64_t v36 = MEMORY[0x1E4FBC860];
    sub_1A732938C();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
    sub_1A73293E4();
    sub_1A7573380();
    MEMORY[0x1AD0CB2C0](0, v17, v14, v32);
    _Block_release(v32);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v12);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v15);
    swift_release();
  }
}

void sub_1A7455DF0(void (*a1)(id, uint64_t))
{
  v2 = self;
  sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3B28);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = (void *)sub_1A75725E0();
  id v5 = objc_msgSend(v2, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v4);

  a1(v5, 1);
}

void sub_1A7455EC8(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a7;
  v18[4] = sub_1A745B100;
  v18[5] = v14;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 1107296256;
  v18[2] = sub_1A7454CC0;
  v18[3] = &block_descriptor_140;
  uint64_t v15 = _Block_copy(v18);
  id v16 = a2;
  id v17 = a4;
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_createPublicContentPreviewOfTemplateWithObjectID_configuration_completion_, v16, a3, v15);
  _Block_release(v15);
}

uint64_t objectdestroy_14Tm_0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A745603C(uint64_t a1)
{
  return sub_1A7456054(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1A7455EC8);
}

uint64_t sub_1A7456054(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1A745606C(id a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v50 = a4;
  uint64_t v13 = sub_1A7572210();
  uint64_t v51 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1A7572260();
  uint64_t v16 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  id v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    char v19 = 1;
    a1 = a2;
  }
  else if (a1)
  {
    id v20 = a1;
    char v19 = 0;
  }
  else
  {
    if (qword_1E96F0868 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1A7571E90();
    __swift_project_value_buffer(v21, (uint64_t)qword_1E96F3B10);
    id v48 = a3;
    uint64_t v22 = sub_1A7571E80();
    os_log_type_t v23 = sub_1A7572FE0();
    int v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v25 = swift_slowAlloc();
      int v45 = v24;
      uint64_t v26 = v25;
      v44 = (void *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v52 = v46;
      uint64_t aBlock = a7;
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v43 = v26 + 4;
      swift_getMetatypeMetadata();
      v47 = v22;
      uint64_t v27 = sub_1A7572670();
      uint64_t aBlock = sub_1A72D1730(v27, v28, &v52);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2112;
      v42 = (uint8_t *)v26;
      uint64_t v43 = v26 + 14;
      uint64_t v41 = v26 + 22;
      id v29 = v48;
      uint64_t aBlock = (uint64_t)v48;
      id v30 = v48;
      sub_1A7573250();
      uint64_t v31 = v44;
      void *v44 = v29;

      v32 = v42;
      _os_log_impl(&dword_1A72A1000, v47, (os_log_type_t)v45, "%s: 'publicTemplateObjectID' and 'error' in completion of '-[REMXPCStorePerformer createPublicContentPreviewOfTemplateWithObjectID:configuration:completion:]' were both nil {remTemplate.objectID: %@}", v42, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v31, -1, -1);
      uint64_t v33 = v46;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v33, -1, -1);
      MEMORY[0x1AD0CD330](v32, -1, -1);
    }
    else
    {

      id v34 = v48;
    }
    v47 = self;
    uint64_t aBlock = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    id v35 = objc_msgSend(v48, sel_description);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    uint64_t v36 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    a1 = [v47 internalErrorWithDebugDescription:v36];

    char v19 = 1;
  }
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a5;
  *(void *)(v37 + 24) = a6;
  *(void *)(v37 + 32) = a1;
  *(unsigned char *)(v37 + 40) = v19;
  v57 = sub_1A745B130;
  uint64_t v58 = v37;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v54 = 1107296256;
  v55 = sub_1A73322E4;
  v56 = &block_descriptor_146;
  uint64_t v38 = _Block_copy(&aBlock);
  id v39 = a2;
  swift_retain();
  sub_1A72BEFA4(a1);
  sub_1A7572240();
  uint64_t v52 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  sub_1A7573380();
  MEMORY[0x1AD0CB2C0](0, v18, v15, v38);
  _Block_release(v38);
  sub_1A7413730(a1);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v15, v13);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v49);
  return swift_release();
}

void sub_1A7456614(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1A74566A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v22 = a7;
  uint64_t v24 = a2;
  uint64_t v11 = sub_1A7572210();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1A7572260();
  uint64_t v15 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = (void *)swift_allocObject();
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a1;
  aBlock[4] = a6;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A73322E4;
  aBlock[3] = v22;
  char v19 = _Block_copy(aBlock);
  swift_retain();
  id v20 = a1;
  sub_1A7572240();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  sub_1A7573380();
  MEMORY[0x1AD0CB2C0](0, v17, v14, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v23);
  return swift_release();
}

uint64_t sub_1A7456910()
{
  return objectdestroyTm_1();
}

uint64_t sub_1A7456918(void *a1)
{
  return sub_1A74566A0(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1EFCA1790, (uint64_t)sub_1A745B0F8, (uint64_t)&block_descriptor_134);
}

void REMStore.revokePublicLink(for:completionHandlerQueue:completion:)(void *a1, uint64_t a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  id v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  id v10 = objc_msgSend(v5, sel_daemonController);
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = objc_msgSend(a1, sel_objectID);
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = a1;
    v13[4] = a3;
    v13[5] = a4;
    v13[6] = ObjectType;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a3;
    *(void *)(v14 + 24) = a4;
    swift_retain_n();
    id v15 = v12;
    id v16 = a1;
    uint64_t v17 = (void *)sub_1A75725E0();
    unint64_t v28 = sub_1A7456D70;
    id v29 = v13;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v25 = 1107296256;
    uint64_t v26 = sub_1A7454CC4;
    uint64_t v27 = &block_descriptor_51;
    id v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    unint64_t v28 = sub_1A745711C;
    id v29 = (void *)v14;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v25 = 1107296256;
    uint64_t v26 = sub_1A7454D24;
    uint64_t v27 = &block_descriptor_54;
    char v19 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v17, v18, v19);
    _Block_release(v19);
    _Block_release(v18);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();
  }
  else
  {
    id v20 = self;
    sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3B28);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v22 = (void *)sub_1A75725E0();
    id v23 = objc_msgSend(v20, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v22);

    a3(v23, 1);
  }
}

void sub_1A7456C68(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = (void *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a6;
  v15[4] = sub_1A745B0E8;
  v15[5] = v12;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  v15[2] = sub_1A7454CC0;
  v15[3] = &block_descriptor_128;
  uint64_t v13 = _Block_copy(v15);
  id v14 = a3;
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_revokePublicLinkForTemplateWithObjectID_completion_, a2, v13);
  _Block_release(v13);
}

void sub_1A7456D70(void *a1)
{
  sub_1A7456C68(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

void sub_1A7456D80(void *a1, id a2, void *a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    uint64_t v8 = 1;
    id v9 = a2;
  }
  else
  {
    id v9 = a1;
    if (a1)
    {
      id v10 = a1;
      uint64_t v8 = 0;
    }
    else
    {
      if (qword_1E96F0868 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_1A7571E90();
      __swift_project_value_buffer(v13, (uint64_t)qword_1E96F3B10);
      id v14 = a3;
      id v15 = sub_1A7571E80();
      os_log_type_t v16 = sub_1A7572FE0();
      uint64_t v17 = &selRef_frequencyComponents;
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v27 = (void *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v29 = v28;
        *(_DWORD *)uint64_t v18 = 136315394;
        uint64_t v30 = a6;
        swift_getMetatypeMetadata();
        uint64_t v19 = sub_1A7572670();
        uint64_t v30 = sub_1A72D1730(v19, v20, &v29);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2112;
        id v21 = objc_msgSend(v14, sel_objectID);
        uint64_t v30 = (uint64_t)v21;
        uint64_t v17 = &selRef_frequencyComponents;
        sub_1A7573250();
        *uint64_t v27 = v21;

        _os_log_impl(&dword_1A72A1000, v15, v16, "%s: 'templateObjectID' and 'error' in completion of '-[REMXPCStorePerformer revokePublicLinkForTemplateWithObjectID:completion:]' were both nil {remTemplate.objectID: %@}", (uint8_t *)v18, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v27, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v28, -1, -1);
        MEMORY[0x1AD0CD330](v18, -1, -1);
      }
      else
      {
      }
      uint64_t v22 = self;
      uint64_t v30 = 0;
      unint64_t v31 = 0xE000000000000000;
      sub_1A7573560();
      sub_1A7572740();
      id v23 = [v14 v17[57]];
      id v24 = objc_msgSend(v23, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      uint64_t v25 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      id v9 = objc_msgSend(v22, sel_internalErrorWithDebugDescription_, v25);

      uint64_t v8 = 1;
    }
  }
  id v26 = a2;
  a4(v9, v8);
  sub_1A7413730(v9);
}

uint64_t sub_1A745711C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(a1, 1);
}

void REMStore.downloadPublicTemplate(withPublicLinkURLUUID:completion:)(uint64_t a1, void (*a2)(id, uint64_t), void (*a3)(id, uint64_t))
{
  v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = sub_1A7571BC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(v4, sel_daemonController);
  if (v13)
  {
    id v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    id v28 = v13;
    v14((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
    unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v17 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v12, v9);
    uint64_t v18 = (void (**)(id, uint64_t))(v17 + v16);
    void *v18 = a2;
    v18[1] = a3;
    *(void *)(v17 + ((v16 + 23) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a2;
    *(void *)(v19 + 24) = a3;
    swift_retain_n();
    unint64_t v20 = (void *)sub_1A75725E0();
    uint64_t v33 = sub_1A7457700;
    uint64_t v34 = v17;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v30 = 1107296256;
    unint64_t v31 = sub_1A7454CC4;
    v32 = &block_descriptor_63_0;
    id v21 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v33 = sub_1A745B448;
    uint64_t v34 = v19;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v30 = 1107296256;
    unint64_t v31 = sub_1A7454D24;
    v32 = &block_descriptor_66;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v20, v21, v22);
    _Block_release(v22);
    _Block_release(v21);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    id v23 = self;
    sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3B28);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v25 = (void *)sub_1A75725E0();
    id v28 = objc_msgSend(v23, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v25);

    a2(v28, 1);
    id v26 = v28;
  }
}

void sub_1A7457504(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v18 = a5;
  id v19 = a1;
  uint64_t v8 = sub_1A7571BC0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (void *)sub_1A7571B90();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v13, v11, v8);
  unint64_t v16 = (void *)(v15 + v14);
  *unint64_t v16 = a3;
  v16[1] = a4;
  *(void *)(v15 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8)) = v18;
  aBlock[4] = sub_1A745B024;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A7454CC0;
  aBlock[3] = &block_descriptor_122;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_downloadPublicTemplateWithPublicLinkURLUUID_completion_, v12, v17);
  _Block_release(v17);
}

void sub_1A7457700(void *a1)
{
  uint64_t v3 = *(void *)(sub_1A7571BC0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v5 + 8);

  sub_1A7457504(a1, v1 + v4, v7, v8, v6);
}

void sub_1A74577AC(id a1, void *a2, uint64_t a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_1A7571BC0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v15 = 1;
    a1 = a2;
  }
  else if (a1)
  {
    id v16 = a1;
    uint64_t v15 = 0;
  }
  else
  {
    if (qword_1E96F0868 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1A7571E90();
    __swift_project_value_buffer(v17, (uint64_t)qword_1E96F3B10);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
    uint64_t v18 = sub_1A7571E80();
    os_log_type_t v19 = sub_1A7572FE0();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v35 = a3;
      uint64_t v22 = v21;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v36 = v34;
      uint64_t v37 = a6;
      *(_DWORD *)uint64_t v22 = 136315394;
      os_log_t v33 = v18;
      swift_getMetatypeMetadata();
      int v32 = v20;
      uint64_t v23 = sub_1A7572670();
      uint64_t v37 = sub_1A72D1730(v23, v24, &v36);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v25 = sub_1A7571B80();
      uint64_t v37 = sub_1A72D1730(v25, v26, &v36);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      uint64_t v18 = v33;
      _os_log_impl(&dword_1A72A1000, v33, (os_log_type_t)v32, "%s: 'publicTemplateObjectID' and 'error' in completion of '-[REMXPCStorePerformer downloadPublicTemplateWithPublicLinkURLUUID:completion:]' were both nil {publicLinkURLUUID: %s}", (uint8_t *)v22, 0x16u);
      uint64_t v27 = v34;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v27, -1, -1);
      MEMORY[0x1AD0CD330](v22, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }

    id v28 = self;
    uint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    sub_1A7571B80();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    uint64_t v29 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    a1 = objc_msgSend(v28, sel_internalErrorWithDebugDescription_, v29);

    uint64_t v15 = 1;
  }
  id v30 = a2;
  a4(a1, v15);
  sub_1A7413730(a1);
}

uint64_t REMStore.downloadPublicTemplate(withPublicLinkURLUUID:)(uint64_t a1)
{
  uint64_t v3 = sub_1A7571BC0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3B38);
  swift_allocObject();
  id v8 = v1;
  return sub_1A75720C0();
}

{
  uint64_t v1;
  uint64_t v2;

  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1A7457EF0, 0, 0);
}

uint64_t sub_1A7457CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1A745AF04;
  *(void *)(v8 + 24) = v7;
  swift_retain();
  REMStore.downloadPublicTemplate(withPublicLinkURLUUID:completion:)(a4, (void (*)(id, uint64_t))sub_1A745AF44, (void (*)(id, uint64_t))v8);

  return swift_release();
}

uint64_t sub_1A7457D80()
{
  uint64_t v1 = sub_1A7571BC0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A7457E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1A7571BC0() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1A7457CC0(a1, a2, v6, v7);
}

uint64_t sub_1A7457EF0()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  void *v2 = v0;
  v2[1] = sub_1A7458004;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD00000000000002ELL, 0x80000001A75A3430, sub_1A74582E8, v1, v3);
}

uint64_t sub_1A7458004()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A745813C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A7458120;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A7458120()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1A745813C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A74581A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3B48);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (void (*)(id, uint64_t))swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))((char *)v9 + v8, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  REMStore.downloadPublicTemplate(withPublicLinkURLUUID:completion:)(a3, (void (*)(id, uint64_t))sub_1A745AE80, v9);
  return swift_release();
}

uint64_t sub_1A74582E8(uint64_t a1)
{
  return sub_1A74581A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1A74582F0(void *a1, char a2)
{
  if (a2)
  {
    id v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3B48);
    return sub_1A7572BA0();
  }
  else
  {
    id v2 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3B48);
    return sub_1A7572BB0();
  }
}

uint64_t REMStore.permanentlyHideReminders(with:accountID:completion:)(unint64_t a1, uint64_t a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  uint64_t v9 = sub_1A7571B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v58 = v9;
  uint64_t v59 = v10;
  MEMORY[0x1F4188790](v9);
  v65 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  v57 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  v68 = (char *)&v51 - v15;
  uint64_t v67 = sub_1A7571BC0();
  id v16 = *(char **)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  v66 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)sub_1A72B1774(MEMORY[0x1E4FBC860]);
  if (a1 >> 62) {
    goto LABEL_31;
  }
  uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v19; uint64_t v19 = sub_1A75738D0())
  {
    if (v19 < 1)
    {
      __break(1u);
LABEL_35:
      uint64_t result = sub_1A7574010();
      __break(1u);
      return result;
    }
    uint64_t v52 = a2;
    v53 = a3;
    uint64_t v54 = a4;
    v55 = v4;
    uint64_t v20 = 0;
    v63 = (void (**)(char *, uint64_t))(v16 + 8);
    unint64_t v64 = a1 & 0xC000000000000001;
    uint64_t v21 = v58;
    v69 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56);
    v61 = (char **)(v59 + 32);
    v62 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
    uint64_t v56 = v59 + 40;
    uint64_t v22 = (uint64_t)v57;
    uint64_t v60 = v19;
    while (1)
    {
      if (v64) {
        id v24 = (id)MEMORY[0x1AD0CB800](v20, a1);
      }
      else {
        id v24 = *(id *)(a1 + 8 * v20 + 32);
      }
      uint64_t v25 = v24;
      id v26 = objc_msgSend(v24, sel_objectID);
      id v27 = objc_msgSend(v26, sel_uuid);

      id v28 = v66;
      sub_1A7571BB0();

      uint64_t v29 = sub_1A7571B80();
      a4 = v30;
      (*v63)(v28, v67);
      id v70 = v25;
      id v31 = objc_msgSend(v25, sel_lastModifiedDate);
      uint64_t v32 = (uint64_t)v68;
      sub_1A7571B20();

      os_log_t v33 = *v69;
      (*v69)(v32, 0, 1, v21);
      if ((*v62)(v32, 1, v21) == 1)
      {
        sub_1A731D4F8(v32);
        swift_bridgeObjectRetain();
        unint64_t v34 = sub_1A72B2210(v29, a4);
        char v36 = v35;
        swift_bridgeObjectRelease();
        if (v36)
        {
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v71 = v18;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_1A72BE33C();
            uint64_t v18 = v71;
          }
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v59 + 32))(v22, v18[7] + *(void *)(v59 + 72) * v34, v21);
          sub_1A745AB04(v34, (uint64_t)v18);
          swift_bridgeObjectRelease();
          uint64_t v23 = 0;
        }
        else
        {
          uint64_t v23 = 1;
        }
        v33(v22, v23, 1, v21);
        swift_bridgeObjectRelease();
        sub_1A731D4F8(v22);

        goto LABEL_7;
      }
      a3 = (void (*)(id, uint64_t))a1;
      uint64_t v38 = v21;
      id v16 = *v61;
      ((void (*)(char *, uint64_t, uint64_t))*v61)(v65, v32, v38);
      a2 = swift_isUniquelyReferenced_nonNull_native();
      v71 = v18;
      id v4 = v18;
      a1 = sub_1A72B2210(v29, a4);
      uint64_t v40 = v18[2];
      BOOL v41 = (v39 & 1) == 0;
      uint64_t v42 = v40 + v41;
      if (__OFADD__(v40, v41)) {
        break;
      }
      char v43 = v39;
      if (v18[3] >= v42)
      {
        if (a2)
        {
          a2 = (uint64_t)v70;
          id v4 = v71;
          if ((v39 & 1) == 0) {
            goto LABEL_25;
          }
        }
        else
        {
          sub_1A72BE33C();
          a2 = (uint64_t)v70;
          id v4 = v71;
          if ((v43 & 1) == 0) {
            goto LABEL_25;
          }
        }
      }
      else
      {
        sub_1A72BA3A0(v42, a2);
        unint64_t v44 = sub_1A72B2210(v29, a4);
        if ((v43 & 1) != (v45 & 1)) {
          goto LABEL_35;
        }
        a1 = v44;
        a2 = (uint64_t)v70;
        id v4 = v71;
        if ((v43 & 1) == 0)
        {
LABEL_25:
          v4[(a1 >> 6) + 8] |= 1 << a1;
          uint64_t v46 = (uint64_t *)(v4[6] + 16 * a1);
          *uint64_t v46 = v29;
          v46[1] = a4;
          ((void (*)(unint64_t, char *, uint64_t))v16)(v4[7] + *(void *)(v59 + 72) * a1, v65, v58);
          uint64_t v47 = v4[2];
          BOOL v48 = __OFADD__(v47, 1);
          uint64_t v49 = v47 + 1;
          if (v48) {
            goto LABEL_30;
          }
          v4[2] = v49;
          swift_bridgeObjectRetain();
          uint64_t v21 = v58;
          goto LABEL_27;
        }
      }
      uint64_t v21 = v58;
      (*(void (**)(unint64_t, char *, uint64_t))(v59 + 40))(v4[7] + *(void *)(v59 + 72) * a1, v65, v58);
LABEL_27:
      uint64_t v18 = v71;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = (unint64_t)a3;
      uint64_t v22 = (uint64_t)v57;
LABEL_7:
      if (v60 == ++v20)
      {
        swift_bridgeObjectRelease();
        a4 = v54;
        a2 = v52;
        a3 = v53;
        goto LABEL_33;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
LABEL_33:
  sub_1A7458990((uint64_t)v18, (void *)a2, a3, a4);
  return swift_bridgeObjectRelease();
}

void sub_1A7458990(uint64_t a1, void *a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  id v9 = objc_msgSend(v4, sel_daemonController);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = a1;
    v11[3] = a2;
    v11[4] = a3;
    v11[5] = a4;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a3;
    *(void *)(v12 + 24) = a4;
    swift_retain_n();
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = (void *)sub_1A75725E0();
    uint64_t v25 = sub_1A745ADA0;
    id v26 = v11;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v22 = 1107296256;
    uint64_t v23 = sub_1A7454CC4;
    id v24 = &block_descriptor_98;
    uint64_t v15 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v25 = sub_1A745B448;
    id v26 = (void *)v12;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v22 = 1107296256;
    uint64_t v23 = sub_1A7454D24;
    id v24 = &block_descriptor_101;
    id v16 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v14, v15, v16);
    _Block_release(v16);
    _Block_release(v15);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v17 = self;
    sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3B28);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v19 = (void *)sub_1A75725E0();
    id v20 = objc_msgSend(v17, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v19);

    a3(v20, 1);
  }
}

uint64_t REMStore.permanentlyHideReminderChangeItems(with:accountID:completion:)(unint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v56 = sub_1A7571B60();
  uint64_t v60 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v58 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  id v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v67 = (char *)&v49 - v14;
  uint64_t v66 = sub_1A7571BC0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v66 - 8);
  MEMORY[0x1F4188790](v66);
  v65 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)sub_1A72B1774(MEMORY[0x1E4FBC860]);
  if (a1 >> 62) {
    goto LABEL_32;
  }
  uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v18; uint64_t v18 = sub_1A75738D0())
  {
    if (v18 < 1)
    {
      __break(1u);
LABEL_36:
      uint64_t result = sub_1A7574010();
      __break(1u);
      return result;
    }
    uint64_t v50 = a2;
    uint64_t v51 = a3;
    uint64_t v52 = a4;
    v53 = v4;
    uint64_t v19 = 0;
    v63 = (void (**)(char *, uint64_t))((char *)v15 + 8);
    unint64_t v64 = a1 & 0xC000000000000001;
    v68 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
    v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
    v61 = (void (**)(char *, uint64_t, uint64_t))(v60 + 32);
    uint64_t v62 = v18;
    uint64_t v54 = v60 + 40;
    unint64_t v55 = a1;
    uint64_t v20 = v56;
    uint64_t v59 = v13;
    a2 = (uint64_t)v67;
    while (1)
    {
      if (v64) {
        id v24 = (id)MEMORY[0x1AD0CB800](v19, a1);
      }
      else {
        id v24 = *(id *)(a1 + 8 * v19 + 32);
      }
      a3 = v24;
      id v25 = objc_msgSend(v24, sel_objectID);
      id v26 = objc_msgSend(v25, sel_uuid);

      id v27 = v65;
      sub_1A7571BB0();

      id v13 = (char *)sub_1A7571B80();
      a4 = v28;
      (*v63)(v27, v66);
      id v29 = objc_msgSend(a3, sel_lastModifiedDate);
      if (!v29)
      {
        id v31 = *v68;
        (*v68)(a2, 1, 1, v20);
LABEL_18:
        sub_1A731D4F8(a2);
        swift_bridgeObjectRetain();
        unint64_t v40 = sub_1A72B2210((uint64_t)v13, a4);
        char v42 = v41;
        swift_bridgeObjectRelease();
        if (v42)
        {
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v69 = v17;
          uint64_t v22 = (uint64_t)v59;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_1A72BE33C();
            uint64_t v17 = v69;
          }
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v60 + 32))(v22, v17[7] + *(void *)(v60 + 72) * v40, v20);
          sub_1A745AB04(v40, (uint64_t)v17);
          swift_bridgeObjectRelease();
          uint64_t v21 = 0;
        }
        else
        {
          uint64_t v21 = 1;
          uint64_t v22 = (uint64_t)v59;
        }
        v31(v22, v21, 1, v20);
        swift_bridgeObjectRelease();
        sub_1A731D4F8(v22);

        a2 = (uint64_t)v67;
        uint64_t v23 = v62;
        goto LABEL_7;
      }
      uint64_t v30 = v29;
      sub_1A7571B20();

      id v31 = *v68;
      (*v68)(a2, 0, 1, v20);
      if ((*v57)(a2, 1, v20) == 1) {
        goto LABEL_18;
      }
      uint64_t v32 = v20;
      uint64_t v15 = *v61;
      (*v61)(v58, a2, v32);
      int v33 = swift_isUniquelyReferenced_nonNull_native();
      v69 = v17;
      id v4 = v17;
      a1 = sub_1A72B2210((uint64_t)v13, a4);
      uint64_t v35 = v17[2];
      BOOL v36 = (v34 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        break;
      }
      a2 = v34;
      if (v17[3] >= v37)
      {
        if ((v33 & 1) == 0) {
          sub_1A72BE33C();
        }
      }
      else
      {
        sub_1A72BA3A0(v37, v33);
        unint64_t v38 = sub_1A72B2210((uint64_t)v13, a4);
        if ((a2 & 1) != (v39 & 1)) {
          goto LABEL_36;
        }
        a1 = v38;
      }
      uint64_t v23 = v62;
      id v4 = v69;
      if (a2)
      {
        uint64_t v20 = v56;
        (*(void (**)(unint64_t, char *, uint64_t))(v60 + 40))(v69[7] + *(void *)(v60 + 72) * a1, v58, v56);
      }
      else
      {
        v69[(a1 >> 6) + 8] |= 1 << a1;
        unint64_t v44 = (void *)(v4[6] + 16 * a1);
        void *v44 = v13;
        v44[1] = a4;
        v15((char *)(v4[7] + *(void *)(v60 + 72) * a1), (uint64_t)v58, v56);
        uint64_t v45 = v4[2];
        BOOL v46 = __OFADD__(v45, 1);
        uint64_t v47 = v45 + 1;
        if (v46) {
          goto LABEL_31;
        }
        v4[2] = v47;
        swift_bridgeObjectRetain();
        uint64_t v20 = v56;
      }
      uint64_t v17 = v69;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v55;
      a2 = (uint64_t)v67;
LABEL_7:
      if (v23 == ++v19)
      {
        swift_bridgeObjectRelease();
        a4 = v52;
        a2 = v50;
        a3 = v51;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
LABEL_34:
  sub_1A7458990((uint64_t)v17, (void *)a2, (void (*)(id, uint64_t))a3, a4);
  return swift_bridgeObjectRelease();
}

void REMStore.batchDeleteExpiredReminders(daysFromNow:completion:)(void *a1, void (*a2)(id), uint64_t a3)
{
  id v7 = objc_msgSend(v3, sel_daemonController);
  if (v7)
  {
    unint64_t v8 = v7;
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = a1;
    v9[3] = a2;
    v9[4] = a3;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a2;
    *(void *)(v10 + 24) = a3;
    id v11 = a1;
    swift_retain_n();
    uint64_t v12 = (void *)sub_1A75725E0();
    uint64_t v23 = sub_1A745AD1C;
    id v24 = v9;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v20 = 1107296256;
    uint64_t v21 = sub_1A7454CC4;
    uint64_t v22 = &block_descriptor_80;
    id v13 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v23 = sub_1A745AD28;
    id v24 = (void *)v10;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v20 = 1107296256;
    uint64_t v21 = sub_1A7454D24;
    uint64_t v22 = &block_descriptor_83;
    uint64_t v14 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v12, v13, v14);
    _Block_release(v14);
    _Block_release(v13);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v15 = self;
    sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3B28);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v17 = (void *)sub_1A75725E0();
    id v18 = objc_msgSend(v15, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v17);

    a2(v18);
  }
}

void sub_1A7459584(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  v10[4] = sub_1A745AD50;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_1A74EB098;
  v10[3] = &block_descriptor_89;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_batchDeleteExpiredRemindersWith_completion_, a2, v9);
  _Block_release(v9);
}

void sub_1A7459678(void *a1, void (*a2)(void))
{
  if (a1)
  {
    id v4 = a1;
    ((void (*)(void *))a2)(a1);
  }
  else
  {
    a2();
  }
}

void sub_1A74596E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A7571B60();
  uint64_t v9 = (void *)sub_1A75723D0();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  v12[4] = sub_1A745ADE4;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1A74EB098;
  v12[3] = &block_descriptor_107;
  id v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_permanentlyHideRemindersWith_accountID_completion_, v9, a3, v11);
  _Block_release(v11);
}

void sub_1A7459810(void *a1, void (*a2)(void *, uint64_t))
{
  if (a1)
  {
    id v4 = a1;
    a2(a1, 1);
  }
  else
  {
    a2(0, 0);
  }
}

id REMStore.deletePhantomHashtags(with:)(uint64_t a1)
{
  uint64_t v3 = v2;
  id v4 = v1;
  v15[2] = *(id *)MEMORY[0x1E4F143B8];
  type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation();
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_bridgeObjectRetain();
  id v7 = objc_msgSend(v6, sel_init);
  sub_1A730095C((uint64_t)v7, a1, (uint64_t *)v15);
  swift_bridgeObjectRelease();

  if (!v3)
  {
    id v8 = v15[0];

    uint64_t v9 = sub_1A72D296C((uint64_t)v8);
    swift_bridgeObjectRelease();
    if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
    {
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
      swift_bridgeObjectRetain();
      sub_1A7573850();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1A7573DE0();
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
    }
    swift_release();
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
    uint64_t v10 = (void *)sub_1A7572A00();
    swift_bridgeObjectRelease();
    v15[0] = 0;
    id v11 = objc_msgSend(v4, sel_repairPhantomObjectsWithObjectIDs_error_, v10, v15);

    id v12 = v15[0];
    if (v11)
    {
      id v1 = (id)sub_1A7572A10();
      id v13 = v12;
    }
    else
    {
      id v1 = v15[0];
      sub_1A7571850();

      swift_willThrow();
    }
  }
  return v1;
}

unint64_t sub_1A7459A8C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1A7573390();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1A72BF138(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        uint64_t v10 = sub_1A7573470();
        uint64_t result = sub_1A72BF194((uint64_t)v28);
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            uint64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              *uint64_t v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  uint64_t *v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A7459C58(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7573790();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v38 = a2 + 64;
    unint64_t result = sub_1A7573390();
    uint64_t v12 = v38;
    if ((*(void *)(v38 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v36 = (result + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v35 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v37 = v13;
      uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v35(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        uint64_t v18 = sub_1A7572510();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            BOOL v26 = (_OWORD *)(v25 + 32 * a1);
            uint64_t v27 = (_OWORD *)(v25 + 32 * v10);
            uint64_t v12 = v38;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 2))
            {
              long long v28 = v27[1];
              *BOOL v26 = *v27;
              v26[1] = v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v38;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    id v29 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    id v29 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *id v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A7459F10(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1A7573390();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1A75740C0();
        swift_bridgeObjectRetain();
        sub_1A75726F0();
        uint64_t v10 = sub_1A7574110();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          int64_t v17 = (long long *)(v15 + 24 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1A745A0FC(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1A7573390();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v12 = sub_1A7573180();

        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            int64_t v17 = (void *)(v16 + 8 * v3);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *int64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v10 = v21[1];
              *uint64_t v20 = *v21;
              v20[1] = v10;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  uint64_t *v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1A745A2B0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1A7573390();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        long long v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_1A75740B0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          void *v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(sub_1A7571B60() - 8) + 72);
        int64_t v17 = v16 * v3;
        unint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1A745A480(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1A7573390();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1A7573180();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            int64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            unint64_t v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *unint64_t v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1A745A634(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1A7573390();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1A75740C0();
        swift_bridgeObjectRetain();
        sub_1A75726F0();
        uint64_t v9 = sub_1A7574110();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A745A80C(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1A7573390();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v8 = v7;
      unint64_t v9 = (result + 1) & v7;
      unint64_t v35 = v9;
      do
      {
        uint64_t v36 = 24 * v6;
        uint64_t v12 = *(void *)(v2 + 48) + 24 * v6;
        uint64_t v14 = *(void **)v12;
        uint64_t v13 = *(void *)(v12 + 8);
        char v15 = *(unsigned char *)(v12 + 16);
        sub_1A75740C0();
        sub_1A75740D0();
        if (v15)
        {
          sub_1A72BEEF4(v14, v13, 1);
          int64_t v16 = v3;
          uint64_t v17 = v2;
          uint64_t v18 = v8;
          uint64_t v19 = v4;
          id v20 = v14;
          sub_1A75731A0();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
          BOOL v21 = (void *)sub_1A7572A00();
          sub_1A75731A0();

          uint64_t v4 = v19;
          uint64_t v8 = v18;
          uint64_t v2 = v17;
          int64_t v3 = v16;
          unint64_t v9 = v35;
        }
        else
        {
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
          BOOL v21 = (void *)sub_1A7572A00();
          sub_1A75731A0();
        }

        uint64_t v22 = sub_1A7574110();
        unint64_t result = sub_1A72BEFB0(v14, v13, v15);
        unint64_t v23 = v22 & v8;
        if (v3 >= (uint64_t)v9)
        {
          if (v23 < v9) {
            goto LABEL_5;
          }
        }
        else if (v23 >= v9)
        {
          goto LABEL_14;
        }
        if (v3 >= (uint64_t)v23)
        {
LABEL_14:
          uint64_t v24 = *(void *)(v2 + 48);
          unint64_t result = v24 + 24 * v3;
          if (24 * v3 < v36 || result >= v24 + v36 + 24)
          {
            unint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v3 != v6)
          {
            unint64_t result = swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v25 = *(void *)(v2 + 56);
          unint64_t v26 = v25 + 40 * v3;
          uint64_t v27 = (long long *)(v25 + 40 * v6);
          if (40 * v3 < (uint64_t)(40 * v6) || v26 >= (unint64_t)v27 + 40 || (BOOL v28 = v3 == v6, v3 = v6, !v28))
          {
            long long v10 = *v27;
            long long v11 = v27[1];
            *(void *)(v26 + 32) = *((void *)v27 + 4);
            *(_OWORD *)unint64_t v26 = v10;
            *(_OWORD *)(v26 + 16) = v11;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v8;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    id v29 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << v3) - 1;
  }
  else
  {
    id v29 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << result) - 1;
  }
  *id v29 = v31 & v30;
  uint64_t v32 = *(void *)(v2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v34;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_1A745AB04(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1A7573390();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1A75740C0();
        swift_bridgeObjectRetain();
        sub_1A75726F0();
        uint64_t v9 = sub_1A7574110();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(sub_1A7571B60() - 8) + 72);
        int64_t v16 = v15 * v3;
        unint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    id v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    id v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *id v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1A745AD14()
{
  return objectdestroyTm_1();
}

void sub_1A745AD1C(void *a1)
{
  sub_1A7459584(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1A745AD28()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1A745AD50(void *a1)
{
  sub_1A7459678(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1A745AD58()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

void sub_1A745ADA0(void *a1)
{
  sub_1A74596E8(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1A745ADAC()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1A745ADE4(void *a1)
{
  sub_1A7459810(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_1A745ADEC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3B48);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1A745AE80(void *a1, char a2)
{
  char v3 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3B48);

  return sub_1A74582F0(a1, v3);
}

uint64_t sub_1A745AF04(uint64_t a1, char a2)
{
  char v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1A745AF44(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, a2 & 1);
}

uint64_t objectdestroy_56Tm()
{
  uint64_t v1 = sub_1A7571BC0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

void sub_1A745B024(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1A7571BC0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void (**)(id, uint64_t))(v2 + v7);
  uint64_t v9 = *(void *)(v2 + v7 + 8);
  uint64_t v10 = *(void *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));

  sub_1A74577AC(a1, a2, v2 + v6, v8, v9, v10);
}

uint64_t sub_1A745B0E0()
{
  return objectdestroyTm_1();
}

void sub_1A745B0E8(void *a1, void *a2)
{
  sub_1A7456D80(a1, a2, *(void **)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1A745B100(uint64_t a1, uint64_t a2)
{
  return sub_1A745B210(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_1A745606C);
}

uint64_t sub_1A745B118()
{
  return objectdestroy_142Tm((void (*)(void, void))sub_1A7413730);
}

uint64_t objectdestroy_130Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A745B178()
{
  return (*(uint64_t (**)(void, uint64_t))(v0 + 16))(*(void *)(v0 + 32), 1);
}

uint64_t objectdestroy_44Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A745B1F8(uint64_t a1, uint64_t a2)
{
  return sub_1A745B210(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_1A7455370);
}

uint64_t sub_1A745B210(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_1A745B228()
{
  return objectdestroy_142Tm((void (*)(void, void))sub_1A745B340);
}

uint64_t objectdestroy_142Tm(void (*a1)(void, void))
{
  swift_release();
  a1(*(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));

  return swift_deallocObject();
}

uint64_t sub_1A745B294()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1A745B2C8()
{
  return objectdestroyTm_1();
}

void sub_1A745B2D0(void *a1, void *a2)
{
  sub_1A7454944(a1, a2, *(void **)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1A745B2DC()
{
  swift_release();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A745B32C()
{
  return sub_1A7454210(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(char *))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 16));
}

uint64_t sub_1A745B44C()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F3B50);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F3B50);
  if (qword_1E96F07B0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1E972BC58);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t REMSmartListChangeItem.userDefinedVisibility.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(v0, sel_smartListType);
  id v6 = objc_msgSend(v1, sel_pinnedDate);
  if (v6)
  {
    unint64_t v7 = v6;
    sub_1A7571B20();

    uint64_t v8 = sub_1A7571B60();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 0, 1, v8);
  }
  else
  {
    uint64_t v9 = sub_1A7571B60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  }
  uint64_t v10 = _sSo12REMSmartListC19ReminderKitInternalE028userDefinedVisibilityOfSmartB04with10pinnedDateSo0ab4UsergH0VSo0aB4Typea_10Foundation0M0VSgtFZ_0(v5, (uint64_t)v4);

  sub_1A731D4F8((uint64_t)v4);
  return v10;
}

uint64_t sub_1A745B660@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *a1;
  id v8 = objc_msgSend(*a1, sel_smartListType);
  id v9 = objc_msgSend(v7, sel_pinnedDate);
  if (v9)
  {
    uint64_t v10 = v9;
    sub_1A7571B20();

    uint64_t v11 = sub_1A7571B60();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  }
  else
  {
    uint64_t v12 = sub_1A7571B60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  }
  uint64_t v13 = _sSo12REMSmartListC19ReminderKitInternalE028userDefinedVisibilityOfSmartB04with10pinnedDateSo0ab4UsergH0VSo0aB4Typea_10Foundation0M0VSgtFZ_0(v8, (uint64_t)v6);

  uint64_t result = sub_1A731D4F8((uint64_t)v6);
  *a2 = v13;
  return result;
}

void REMSmartListChangeItem.userDefinedVisibility.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A7571B60();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = &v38[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v38[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v11 = objc_msgSend(v2, sel_smartListType);
  id v12 = objc_msgSend(v2, sel_pinnedDate);
  if (v12)
  {
    uint64_t v13 = v12;
    sub_1A7571B20();

    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  uint64_t v14 = _sSo12REMSmartListC19ReminderKitInternalE028userDefinedVisibilityOfSmartB04with10pinnedDateSo0ab4UsergH0VSo0aB4Typea_10Foundation0M0VSgtFZ_0(v11, (uint64_t)v10);

  sub_1A731D4F8((uint64_t)v10);
  if (v14 != a1)
  {
    id v15 = objc_msgSend(v2, sel_smartListType);
    char v16 = REMSmartListType.supportsUserDefinedVisibility.getter(v15);

    if (v16)
    {
      switch(a1)
      {
        case 2:
          if (qword_1E96F0888 != -1) {
            swift_once();
          }
          __swift_project_value_buffer(v4, (uint64_t)qword_1E96F3C40);
          uint64_t v30 = (void *)sub_1A7571AB0();
          break;
        case 1:
          sub_1A7571B30();
          uint64_t v30 = (void *)sub_1A7571AB0();
          (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
          break;
        case 0:
          objc_msgSend(v2, sel_setPinnedDate_, 0);
          return;
        default:
          if (qword_1E96F0870 != -1) {
            swift_once();
          }
          uint64_t v31 = sub_1A7571E90();
          __swift_project_value_buffer(v31, (uint64_t)qword_1E96F3B50);
          uint64_t v19 = sub_1A7571E80();
          os_log_type_t v32 = sub_1A7572FE0();
          if (!os_log_type_enabled(v19, v32)) {
            goto LABEL_33;
          }
          BOOL v33 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)BOOL v33 = 134217984;
          uint64_t v43 = a1;
          sub_1A7573250();
          _os_log_impl(&dword_1A72A1000, v19, v32, "REMSmartListChangeItem.userDefinedVisibility.set: Unhandled userDefinedVisibility {userDefinedVisibility: %ld}", v33, 0xCu);
          uint64_t v34 = (uint64_t)v33;
LABEL_32:
          MEMORY[0x1AD0CD330](v34, -1, -1);
LABEL_33:

          return;
      }
      objc_msgSend(v2, sel_setPinnedDate_, v30);

      return;
    }
    if (qword_1E96F0870 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1A7571E90();
    __swift_project_value_buffer(v17, (uint64_t)qword_1E96F3B50);
    id v18 = v2;
    uint64_t v19 = sub_1A7571E80();
    int v20 = sub_1A7572FE0();
    if (!os_log_type_enabled(v19, (os_log_type_t)v20))
    {

      return;
    }
    int v39 = v20;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v43 = v41;
    *(_DWORD *)uint64_t v21 = 138543874;
    id v23 = objc_msgSend(v18, sel_objectID);
    uint64_t v42 = (uint64_t)v23;
    sub_1A7573250();
    unint64_t v40 = v22;
    void *v22 = v23;
    *(_WORD *)(v21 + 12) = 2082;
    id v24 = objc_msgSend(v18, sel_smartListType);
    uint64_t v25 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    unint64_t v27 = v26;

    uint64_t v42 = sub_1A72D1730(v25, v27, &v43);
    sub_1A7573250();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    if (a1)
    {
      if (a1 == 2)
      {
        unint64_t v28 = 0xE700000000000000;
        uint64_t v35 = 0x65646469682ELL;
      }
      else
      {
        if (a1 == 1)
        {
          unint64_t v28 = 0xE800000000000000;
          uint64_t v29 = 0x656C62697369762ELL;
LABEL_31:
          uint64_t v42 = sub_1A72D1730(v29, v28, &v43);
          sub_1A7573250();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A72A1000, v19, (os_log_type_t)v39, "REMSmartListChangeItem.userDefinedVisibility.set: Smart list does not support user-defined visibility {objectID: %{public}@, smartListType: %{public}s, userDefinedVisibility: %{public}s}", (uint8_t *)v21, 0x20u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
          uint64_t v36 = v40;
          swift_arrayDestroy();
          MEMORY[0x1AD0CD330](v36, -1, -1);
          uint64_t v37 = v41;
          swift_arrayDestroy();
          MEMORY[0x1AD0CD330](v37, -1, -1);
          uint64_t v34 = v21;
          goto LABEL_32;
        }
        unint64_t v28 = 0xE700000000000000;
        uint64_t v35 = 0x776F6E6B6E75;
      }
      uint64_t v29 = v35 & 0xFFFFFFFFFFFFLL | 0x6E000000000000;
      goto LABEL_31;
    }
    unint64_t v28 = 0xEA00000000006465;
    uint64_t v29 = 0x6E696665646E752ELL;
    goto LABEL_31;
  }
}

void (*REMSmartListChangeItem.userDefinedVisibility.modify(uint64_t *a1))(uint64_t *a1)
{
  uint64_t v2 = v1;
  a1[1] = (uint64_t)v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  a1[2] = (uint64_t)v5;
  id v6 = objc_msgSend(v2, sel_smartListType);
  id v7 = objc_msgSend(v2, sel_pinnedDate);
  if (v7)
  {
    uint64_t v8 = v7;
    sub_1A7571B20();

    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = 1;
  }
  uint64_t v10 = sub_1A7571B60();
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, v9, 1, v10);
  uint64_t v11 = _sSo12REMSmartListC19ReminderKitInternalE028userDefinedVisibilityOfSmartB04with10pinnedDateSo0ab4UsergH0VSo0aB4Typea_10Foundation0M0VSgtFZ_0(v6, (uint64_t)v5);

  sub_1A731D4F8((uint64_t)v5);
  *a1 = v11;
  return sub_1A745BF04;
}

void sub_1A745BF04(uint64_t *a1)
{
  uint64_t v1 = (void *)a1[2];
  REMSmartListChangeItem.userDefinedVisibility.setter(*a1);

  free(v1);
}

void sub_1A745BF44(uint64_t *a1)
{
}

uint64_t sub_1A745BF6C()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F3B68);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F3B68);
  if (qword_1E96F07B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1E972BC70);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id REMReminderPredicateDescriptor_Codable.__allocating_init(_:)(void *a1)
{
  v5.receiver = objc_allocWithZone(v1);
  v5.super_class = v1;
  id v3 = objc_msgSendSuper2(&v5, sel_initWithReminderPredicateDescriptor_, a1);

  return v3;
}

id REMReminderPredicateDescriptor_Codable.init(_:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithReminderPredicateDescriptor_, a1);

  return v3;
}

uint64_t static REMReminderPredicateDescriptor_Codable.supportsSecureCoding.getter()
{
  return 1;
}

id REMReminderPredicateDescriptor_Codable.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMReminderPredicateDescriptor_Codable.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id REMReminderPredicateDescriptor_Codable.__allocating_init(type:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);

  return objc_msgSend(v3, sel_initWithType_, a1);
}

id REMReminderPredicateDescriptor_Codable.init(type:)(uint64_t a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v4, sel_initWithType_, a1);
}

void *REMReminderPredicateDescriptor_Codable.__allocating_init(from:)(void *a1)
{
  uint64_t v100 = sub_1A7571B60();
  uint64_t v95 = *(void *)(v100 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v100);
  v99 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  v98 = (char *)&v88 - v5;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  v97 = (char *)&v88 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  v94 = (char *)&v88 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  v93 = (char *)&v88 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v88 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v88 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v88 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3B80);
  uint64_t v96 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A745D558();
  id v23 = v102;
  sub_1A7574190();
  if (v23)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v90 = v19;
    v91 = v17;
    v89 = v14;
    uint64_t v24 = v100;
    uint64_t v25 = v101;
    unint64_t v27 = v97;
    unint64_t v26 = v98;
    v102 = 0;
    unint64_t v28 = v99;
    v92 = a1;
    uint64_t v29 = sub_1A7573A70();
    if (*(void *)(v29 + 16))
    {
      uint64_t v30 = *(unsigned __int8 *)(v29 + 32);
      swift_bridgeObjectRelease();
      switch(v30)
      {
        case 1:
          id v36 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 1);
          type metadata accessor for REMObjectID_Codable();
          unsigned __int8 v106 = 1;
          sub_1A745FC90(&qword_1EB705A50, 255, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
          a1 = v36;
          os_log_type_t v32 = v22;
          id v37 = v102;
          sub_1A7573A50();
          if (v37) {
            goto LABEL_29;
          }
          uint64_t v34 = (void *)v103[0];
          objc_msgSend(a1, sel_setParentReminderID_, v103[0]);
          goto LABEL_11;
        case 2:
          uint64_t v38 = v22;
          id v39 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 2);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F19E8);
          unsigned __int8 v106 = 2;
          sub_1A731D668();
          a1 = v39;
          os_log_type_t v32 = v22;
          id v40 = v102;
          sub_1A7573A50();
          if (v40) {
            goto LABEL_29;
          }
          uint64_t v41 = v96;
          if (v103[0] >> 62)
          {
            sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
            swift_bridgeObjectRetain();
            sub_1A7573850();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_1A7573DE0();
            sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
          }
          swift_bridgeObjectRelease();
          sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
          uint64_t v42 = (void *)sub_1A7572A00();
          swift_bridgeObjectRelease();
          objc_msgSend(a1, sel_setObjectIDs_, v42);
          goto LABEL_41;
        case 3:
          id v43 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 3);
          LOBYTE(v103[0]) = 3;
          sub_1A745FC90((unint64_t *)&unk_1EB704AE0, 255, MEMORY[0x1E4F27928]);
          a1 = v43;
          unint64_t v44 = v90;
          id v45 = v102;
          sub_1A7573A50();
          if (v45) {
            goto LABEL_19;
          }
          BOOL v46 = (void *)sub_1A7571AB0();
          (*(void (**)(char *, uint64_t))(v95 + 8))(v44, v24);
          objc_msgSend(a1, sel_setStartingDueDate_, v46);
          goto LABEL_44;
        case 4:
          id v47 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 4);
          LOBYTE(v103[0]) = 4;
          sub_1A745FC90((unint64_t *)&unk_1EB704AE0, 255, MEMORY[0x1E4F27928]);
          a1 = v47;
          BOOL v48 = v91;
          id v49 = v102;
          sub_1A7573A50();
          if (v49)
          {
LABEL_19:
            (*(void (**)(char *, uint64_t))(v96 + 8))(v22, v20);

            uint64_t v50 = (uint64_t)v92;
            goto LABEL_31;
          }
          BOOL v46 = (void *)sub_1A7571AB0();
          (*(void (**)(char *, uint64_t))(v95 + 8))(v48, v24);
          objc_msgSend(a1, sel_setEndingDueDate_, v46);
LABEL_44:

          (*(void (**)(char *, uint64_t))(v96 + 8))(v22, v20);
          uint64_t v35 = (uint64_t)v92;
          break;
        case 5:
          id v51 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 5);
          unsigned __int8 v106 = 5;
          a1 = v51;
          id v52 = v102;
          sub_1A7573980();
          if (v52) {
            goto LABEL_25;
          }
          v101 = (objc_class *)v20;
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v103, v104);
          uint64_t v53 = sub_1A745FC90((unint64_t *)&unk_1EB704AE0, 255, MEMORY[0x1E4F27928]);
          v102 = a1;
          uint64_t v54 = v89;
          v99 = (char *)v53;
          sub_1A7573C00();
          v97 = v22;
          v78 = (void *)sub_1A7571AB0();
          v79 = *(void (**)(char *, uint64_t))(v95 + 8);
          v79(v54, v24);
          id v80 = v102;
          objc_msgSend(v102, sel_setStartingDueDate_, v78);

          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v103, v104);
          v81 = v93;
          sub_1A7573C00();
          v86 = (void *)sub_1A7571AB0();
          v79(v81, v24);
          a1 = v102;
          objc_msgSend(v102, sel_setEndingDueDate_, v86);

          (*(void (**)(char *, objc_class *))(v96 + 8))(v97, v101);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
          goto LABEL_47;
        case 6:
          id v55 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 6);
          LOBYTE(v103[0]) = 6;
          a1 = v55;
          id v56 = v102;
          char v57 = sub_1A7573A10();
          if (v56) {
            goto LABEL_25;
          }
          objc_msgSend(a1, sel_setCompleted_, v57 & 1);

          (*(void (**)(char *, uint64_t))(v96 + 8))(v22, v20);
          goto LABEL_42;
        case 7:
          id v58 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 7);
          unsigned __int8 v106 = 7;
          a1 = v58;
          id v59 = v102;
          sub_1A7573980();
          if (v59)
          {
LABEL_25:
            (*(void (**)(char *, uint64_t))(v96 + 8))(v22, v20);
            goto LABEL_30;
          }
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v103, v104);
          a1 = a1;
          sub_1A7573BF0();
          uint64_t v73 = v96;
          v82 = (void *)sub_1A75725E0();
          swift_bridgeObjectRelease();
          objc_msgSend(a1, sel_setText_, v82);

          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v103, v104);
          sub_1A745D674();
          sub_1A7573C00();
          objc_msgSend(a1, sel_setTextMatching_, v106);

          (*(void (**)(char *, uint64_t))(v73 + 8))(v22, v20);
          goto LABEL_52;
        case 8:
          uint64_t v38 = v22;
          char v60 = 8;
          id v61 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 8);
          goto LABEL_28;
        case 9:
          uint64_t v38 = v22;
          char v60 = 9;
          id v61 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 9);
LABEL_28:
          uint64_t v62 = v61;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3B90);
          unsigned __int8 v106 = v60;
          sub_1A745D5AC();
          a1 = v62;
          os_log_type_t v32 = v38;
          id v63 = v102;
          sub_1A7573A50();
          if (v63) {
            goto LABEL_29;
          }
          uint64_t v41 = v96;
          if (v103[0] >> 62)
          {
            sub_1A72BEFEC(0, &qword_1E96F3BA8);
            swift_bridgeObjectRetain();
            sub_1A7573850();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_1A7573DE0();
            sub_1A72BEFEC(0, &qword_1E96F3BA8);
          }
          swift_bridgeObjectRelease();
          sub_1A72BEFEC(0, &qword_1E96F3BA8);
          uint64_t v42 = (void *)sub_1A7572A00();
          swift_bridgeObjectRelease();
          objc_msgSend(a1, sel_setDescriptors_, v42);
LABEL_41:

          (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v20);
          goto LABEL_42;
        case 10:
          id v64 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 10);
          LOBYTE(v103[0]) = 10;
          sub_1A745FC90((unint64_t *)&unk_1EB704AE0, 255, MEMORY[0x1E4F27928]);
          a1 = v64;
          v65 = v94;
          id v66 = v102;
          sub_1A7573A50();
          if (v66) {
            goto LABEL_33;
          }
          v74 = (void *)sub_1A7571AB0();
          (*(void (**)(char *, uint64_t))(v95 + 8))(v65, v24);
          objc_msgSend(a1, sel_setStartingDueDate_, v74);

          (*(void (**)(char *, uint64_t))(v96 + 8))(v22, v20);
LABEL_47:
          uint64_t v35 = (uint64_t)v92;
          break;
        case 11:
          id v67 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 11);
          LOBYTE(v103[0]) = 11;
          sub_1A745FC90((unint64_t *)&unk_1EB704AE0, 255, MEMORY[0x1E4F27928]);
          a1 = v67;
          v68 = v102;
          sub_1A7573A50();
          v102 = v68;
          if (v68)
          {
LABEL_33:
            (*(void (**)(char *, uint64_t))(v96 + 8))(v22, v20);

            __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
            return a1;
          }
          v76 = (void *)sub_1A7571AB0();
          (*(void (**)(char *, uint64_t))(v95 + 8))(v27, v24);
          objc_msgSend(a1, sel_setEndingDueDate_, v76);

          goto LABEL_8;
        case 12:
          id v69 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 12);
          unsigned __int8 v106 = 12;
          id v70 = v22;
          id v71 = v69;
          id v72 = v102;
          sub_1A7573980();
          if (v72)
          {
            (*(void (**)(char *, uint64_t))(v96 + 8))(v70, v20);

            __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
            return a1;
          }
          v97 = v70;
          v101 = (objc_class *)v20;
          v94 = v105;
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v103, v104);
          uint64_t v77 = sub_1A745FC90((unint64_t *)&unk_1EB704AE0, 255, MEMORY[0x1E4F27928]);
          v102 = v71;
          v93 = (char *)v77;
          sub_1A7573C00();
          v83 = (void *)sub_1A7571AB0();
          v84 = *(void (**)(char *, uint64_t))(v95 + 8);
          v84(v26, v24);
          id v85 = v102;
          objc_msgSend(v102, sel_setStartingDueDate_, v83);

          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v103, v104);
          sub_1A7573C00();
          v87 = (void *)sub_1A7571AB0();
          v84(v28, v24);
          a1 = v102;
          objc_msgSend(v102, sel_setEndingDueDate_, v87);

          (*(void (**)(char *, objc_class *))(v96 + 8))(v97, v101);
LABEL_52:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
          goto LABEL_42;
        default:
          id v31 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 0);
          type metadata accessor for REMObjectID_Codable();
          unsigned __int8 v106 = 0;
          sub_1A745FC90(&qword_1EB705A50, 255, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
          a1 = v31;
          os_log_type_t v32 = v22;
          id v33 = v102;
          sub_1A7573A50();
          if (v33)
          {
LABEL_29:
            (*(void (**)(char *, uint64_t))(v96 + 8))(v32, v20);
LABEL_30:

            uint64_t v50 = (uint64_t)v92;
LABEL_31:
            __swift_destroy_boxed_opaque_existential_1(v50);

            return a1;
          }
          uint64_t v34 = (void *)v103[0];
          objc_msgSend(a1, sel_setListID_, v103[0]);
LABEL_11:

          (*(void (**)(char *, uint64_t))(v96 + 8))(v32, v20);
LABEL_42:
          uint64_t v35 = (uint64_t)v92;
          break;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      a1 = objc_msgSend(objc_allocWithZone(v25), sel_initWithType_, 6);
LABEL_8:
      (*(void (**)(char *, uint64_t))(v96 + 8))(v22, v20);
      uint64_t v35 = (uint64_t)v92;
    }
    __swift_destroy_boxed_opaque_existential_1(v35);
  }
  return a1;
}

unint64_t sub_1A745D558()
{
  unint64_t result = qword_1E96F3B88;
  if (!qword_1E96F3B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3B88);
  }
  return result;
}

unint64_t sub_1A745D5AC()
{
  unint64_t result = qword_1E96F3B98;
  if (!qword_1E96F3B98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3B90);
    sub_1A745FC90(&qword_1E96F3BA0, v1, (void (*)(uint64_t))type metadata accessor for REMReminderPredicateDescriptor_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3B98);
  }
  return result;
}

uint64_t type metadata accessor for REMReminderPredicateDescriptor_Codable()
{
  return self;
}

unint64_t sub_1A745D674()
{
  unint64_t result = qword_1E96F3BB0;
  if (!qword_1E96F3BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3BB0);
  }
  return result;
}

uint64_t REMReminderPredicateDescriptor_Codable.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  Class ObjectType = (Class)swift_getObjectType();
  uint64_t v151 = sub_1A7571E90();
  uint64_t v150 = *(void *)(v151 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v151);
  uint64_t v6 = (char *)&v149 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  v149 = (char *)&v149 - v7;
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v8 = MEMORY[0x1F4188790](v159);
  v153 = (char *)&v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  v157 = (char *)&v149 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  v156 = (char *)&v149 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  v154 = (char *)&v149 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  v152 = (char *)&v149 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v155 = (char *)&v149 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v149 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v149 - v23;
  uint64_t v164 = sub_1A7571BC0();
  uint64_t v158 = *(void *)(v164 - 8);
  MEMORY[0x1F4188790](v164);
  unint64_t v26 = (char *)&v149 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3BB8);
  uint64_t v161 = *(void *)(v163 - 8);
  MEMORY[0x1F4188790](v163);
  unint64_t v28 = (char *)&v149 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A745D558();
  v162 = v28;
  sub_1A75741B0();
  switch((unint64_t)objc_msgSend(v2, sel_type))
  {
    case 0uLL:
      id v29 = objc_msgSend(v2, sel_listID);
      if (v29)
      {
        uint64_t v30 = v29;
        id v31 = (objc_class *)type metadata accessor for REMObjectID_Codable();
        id v32 = objc_allocWithZone(v31);
        id v33 = v30;
        id v34 = objc_msgSend(v33, sel_uuid);
        sub_1A7571BB0();

        uint64_t v35 = (void *)sub_1A7571B90();
        (*(void (**)(char *, uint64_t))(v158 + 8))(v26, v164);
        id v36 = objc_msgSend(v33, sel_entityName);
        if (!v36)
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          id v36 = (id)sub_1A75725E0();
          swift_bridgeObjectRelease();
        }
        v165.receiver = v32;
        v165.super_class = v31;
        id v37 = objc_msgSendSuper2(&v165, sel_initWithUUID_entityName_, v35, v36);
      }
      else
      {
        id v37 = 0;
      }
      v127 = v162;
      uint64_t v128 = v163;
      v172[0] = v37;
      LOBYTE(v168) = 0;
      goto LABEL_78;
    case 1uLL:
      id v84 = objc_msgSend(v2, sel_parentReminderID);
      if (v84)
      {
        id v85 = v84;
        v86 = (objc_class *)type metadata accessor for REMObjectID_Codable();
        id v87 = objc_allocWithZone(v86);
        id v88 = v85;
        id v89 = objc_msgSend(v88, sel_uuid);
        sub_1A7571BB0();

        v90 = (void *)sub_1A7571B90();
        (*(void (**)(char *, uint64_t))(v158 + 8))(v26, v164);
        id v91 = objc_msgSend(v88, sel_entityName);
        if (!v91)
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          id v91 = (id)sub_1A75725E0();
          swift_bridgeObjectRelease();
        }
        v166.receiver = v87;
        v166.super_class = v86;
        id v37 = objc_msgSendSuper2(&v166, sel_initWithUUID_entityName_, v90, v91);
      }
      else
      {
        id v37 = 0;
      }
      v127 = v162;
      uint64_t v128 = v163;
      v172[0] = v37;
      LOBYTE(v168) = 1;
LABEL_78:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FFDF0);
      sub_1A745FCD8();
      sub_1A7573B60();

      return (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v127, v128);
    case 2uLL:
      id v60 = objc_msgSend(v2, sel_objectIDs);
      if (v60)
      {
        id v61 = v60;
        sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
        unint64_t v62 = sub_1A7572A10();

        if (v62 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v63 = sub_1A75738D0();
          swift_bridgeObjectRelease();
          if (v63)
          {
LABEL_24:
            v172[0] = MEMORY[0x1E4FBC860];
            sub_1A75736F0();
            if ((v63 & 0x8000000000000000) == 0)
            {
              uint64_t v64 = 0;
              v157 = (char *)(v62 & 0xC000000000000001);
              v65 = (void (**)(char *, uint64_t))(v158 + 8);
              Class ObjectType = (Class)v62;
              uint64_t v159 = v63;
              do
              {
                if (v157) {
                  id v66 = (id)MEMORY[0x1AD0CB800](v64, v62);
                }
                else {
                  id v66 = *(id *)(v62 + 8 * v64 + 32);
                }
                id v67 = v66;
                v68 = (objc_class *)type metadata accessor for REMObjectID_Codable();
                id v69 = objc_allocWithZone(v68);
                id v70 = v67;
                id v71 = objc_msgSend(v70, sel_uuid);
                sub_1A7571BB0();

                id v72 = (void *)sub_1A7571B90();
                (*v65)(v26, v164);
                id v73 = objc_msgSend(v70, sel_entityName);
                if (!v73)
                {
                  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                  id v73 = (id)sub_1A75725E0();
                  swift_bridgeObjectRelease();
                }
                ++v64;
                v167.receiver = v69;
                v167.super_class = v68;
                objc_msgSendSuper2(&v167, sel_initWithUUID_entityName_, v72, v73);

                sub_1A75736C0();
                sub_1A7573700();
                sub_1A7573710();
                sub_1A75736D0();
                unint64_t v62 = (unint64_t)ObjectType;
              }
              while (v159 != v64);
              uint64_t v111 = v172[0];
              swift_bridgeObjectRelease();
              goto LABEL_102;
            }
            goto LABEL_110;
          }
        }
        else
        {
          uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v63) {
            goto LABEL_24;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v111 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v111 = 0;
      }
LABEL_102:
      v172[0] = v111;
      LOBYTE(v168) = 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3BE8);
      sub_1A745FAB4(&qword_1E96F3BF0, &qword_1E96F3BE8, (void (*)(void))sub_1A731DA28);
      uint64_t v140 = v163;
      v141 = v162;
      sub_1A7573B60();
      (*(void (**)(char *, uint64_t))(v161 + 8))(v141, v140);
      return swift_bridgeObjectRelease();
    case 3uLL:
      id v74 = objc_msgSend(v2, sel_startingDueDate);
      if (v74)
      {
        v75 = v74;
        sub_1A7571B20();

        uint64_t v76 = sub_1A7571B60();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v24, 0, 1, v76);
      }
      else
      {
        uint64_t v124 = sub_1A7571B60();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v24, 1, 1, v124);
      }
      v97 = v162;
      uint64_t v96 = v163;
      LOBYTE(v172[0]) = 3;
      sub_1A731D8DC();
      sub_1A7573B60();
      uint64_t v118 = (uint64_t)v24;
      goto LABEL_85;
    case 4uLL:
      id v42 = objc_msgSend(v2, sel_endingDueDate);
      if (v42)
      {
        id v43 = v42;
        sub_1A7571B20();

        uint64_t v44 = sub_1A7571B60();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v22, 0, 1, v44);
      }
      else
      {
        uint64_t v117 = sub_1A7571B60();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v22, 1, 1, v117);
      }
      v97 = v162;
      uint64_t v96 = v163;
      LOBYTE(v172[0]) = 4;
      sub_1A731D8DC();
      sub_1A7573B60();
      uint64_t v118 = (uint64_t)v22;
      goto LABEL_85;
    case 5uLL:
      LOBYTE(v168) = 5;
      v78 = v162;
      uint64_t v77 = v163;
      sub_1A7573AA0();
      Class ObjectType = (Class)v2;
      id v92 = objc_msgSend(v2, sel_startingDueDate);
      if (v92)
      {
        v93 = v92;
        uint64_t v94 = (uint64_t)v155;
        sub_1A7571B20();

        uint64_t v95 = sub_1A7571B60();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v94, 0, 1, v95);
      }
      else
      {
        uint64_t v129 = sub_1A7571B60();
        uint64_t v94 = (uint64_t)v155;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v155, 1, 1, v129);
      }
      uint64_t v130 = v160;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v172, v173);
      sub_1A731D8DC();
      sub_1A7573C10();
      uint64_t v131 = v94;
      if (!v130)
      {
        sub_1A731D4F8(v94);
        id v132 = [(objc_class *)ObjectType endingDueDate];
        if (v132)
        {
          v133 = v132;
          v134 = v152;
          sub_1A7571B20();

          uint64_t v135 = sub_1A7571B60();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v134, 0, 1, v135);
        }
        else
        {
          uint64_t v138 = sub_1A7571B60();
          v134 = v152;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 56))(v152, 1, 1, v138);
        }
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v172, v173);
        sub_1A7573C10();
        uint64_t v131 = (uint64_t)v134;
      }
      sub_1A731D4F8(v131);
      goto LABEL_95;
    case 6uLL:
      objc_msgSend(v2, sel_completed);
      LOBYTE(v172[0]) = 6;
      v97 = v162;
      uint64_t v96 = v163;
      sub_1A7573B20();
      return (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v97, v96);
    case 7uLL:
      LOBYTE(v168) = 7;
      v78 = v162;
      uint64_t v77 = v163;
      sub_1A7573AA0();
      id v79 = objc_msgSend(v2, sel_text);
      if (v79)
      {
        id v80 = v79;
        uint64_t v81 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v83 = v82;
      }
      else
      {
        uint64_t v81 = 0;
        uint64_t v83 = 0;
      }
      uint64_t v125 = v160;
      uint64_t v168 = v81;
      uint64_t v169 = v83;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v172, v173);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705490);
      sub_1A745FBD0();
      sub_1A7573C10();
      if (v125)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        id v126 = objc_msgSend(v2, sel_textMatching);
        if ((unint64_t)v126 >= 4) {
          goto LABEL_115;
        }
        LOBYTE(v168) = (_BYTE)v126;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v172, v173);
        sub_1A745FC3C();
        sub_1A7573C10();
      }
LABEL_95:
      (*(void (**)(char *, uint64_t))(v161 + 8))(v78, v77);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v172);
    case 8uLL:
      id v102 = objc_msgSend(v2, sel_descriptors);
      if (v102)
      {
        v103 = v102;
        sub_1A72BEFEC(0, &qword_1E96F3BA8);
        unint64_t v104 = sub_1A7572A10();

        if (v104 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v105 = sub_1A75738D0();
          swift_bridgeObjectRelease();
          uint64_t v55 = v163;
          if (v105) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v105 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v55 = v163;
          if (v105)
          {
LABEL_48:
            v172[0] = MEMORY[0x1E4FBC860];
            sub_1A75736F0();
            if (v105 < 0) {
              goto LABEL_111;
            }
            uint64_t v106 = 0;
            do
            {
              if ((v104 & 0xC000000000000001) != 0) {
                id v107 = (id)MEMORY[0x1AD0CB800](v106, v104);
              }
              else {
                id v107 = *(id *)(v104 + 8 * v106 + 32);
              }
              v108 = v107;
              ++v106;
              v109 = ObjectType;
              v170.receiver = objc_allocWithZone(ObjectType);
              v170.super_class = v109;
              objc_msgSendSuper2(&v170, sel_initWithReminderPredicateDescriptor_, v108);

              sub_1A75736C0();
              sub_1A7573700();
              sub_1A7573710();
              sub_1A75736D0();
            }
            while (v105 != v106);
            uint64_t v112 = v172[0];
            swift_bridgeObjectRelease();
            goto LABEL_105;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v112 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v112 = 0;
        uint64_t v55 = v163;
      }
LABEL_105:
      v172[0] = v112;
      char v139 = 8;
      goto LABEL_106;
    case 9uLL:
      id v51 = objc_msgSend(v2, sel_descriptors);
      if (v51)
      {
        id v52 = v51;
        sub_1A72BEFEC(0, &qword_1E96F3BA8);
        unint64_t v53 = sub_1A7572A10();

        if (v53 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v54 = sub_1A75738D0();
          swift_bridgeObjectRelease();
          uint64_t v55 = v163;
          if (v54) {
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v54 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v55 = v163;
          if (v54)
          {
LABEL_15:
            v172[0] = MEMORY[0x1E4FBC860];
            sub_1A75736F0();
            if (v54 < 0)
            {
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              if (qword_1E96F0878 != -1) {
                swift_once();
              }
              uint64_t v143 = v151;
              uint64_t v144 = __swift_project_value_buffer(v151, (uint64_t)qword_1E96F3B68);
              (*(void (**)(char *, uint64_t, uint64_t))(v150 + 16))(v6, v144, v143);
              uint64_t v145 = MEMORY[0x1E4FBC860];
              sub_1A72B0944(MEMORY[0x1E4FBC860]);
              sub_1A72B0944(v145);
              sub_1A73A67DC((uint64_t)"unknown reminder predicate descriptor type", 42, 2);
              __break(1u);
LABEL_115:
              if (qword_1E96F0878 != -1) {
                swift_once();
              }
              uint64_t v146 = v151;
              uint64_t v147 = __swift_project_value_buffer(v151, (uint64_t)qword_1E96F3B68);
              (*(void (**)(char *, uint64_t, uint64_t))(v150 + 16))(v149, v147, v146);
              uint64_t v148 = MEMORY[0x1E4FBC860];
              sub_1A72B0944(MEMORY[0x1E4FBC860]);
              sub_1A72B0944(v148);
              sub_1A73A67DC((uint64_t)"unknown text matching", 21, 2);
              __break(1u);
              JUMPOUT(0x1A745EE4CLL);
            }
            uint64_t v56 = 0;
            do
            {
              if ((v53 & 0xC000000000000001) != 0) {
                id v57 = (id)MEMORY[0x1AD0CB800](v56, v53);
              }
              else {
                id v57 = *(id *)(v53 + 8 * v56 + 32);
              }
              id v58 = v57;
              ++v56;
              id v59 = ObjectType;
              v171.receiver = objc_allocWithZone(ObjectType);
              v171.super_class = v59;
              objc_msgSendSuper2(&v171, sel_initWithReminderPredicateDescriptor_, v58);

              sub_1A75736C0();
              sub_1A7573700();
              sub_1A7573710();
              sub_1A75736D0();
            }
            while (v54 != v56);
            uint64_t v110 = v172[0];
            swift_bridgeObjectRelease();
            goto LABEL_99;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v110 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v110 = 0;
        uint64_t v55 = v163;
      }
LABEL_99:
      v172[0] = v110;
      char v139 = 9;
LABEL_106:
      LOBYTE(v168) = v139;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3BC0);
      sub_1A745FAB4(&qword_1E96F3BC8, &qword_1E96F3BC0, (void (*)(void))sub_1A745FB2C);
      v142 = v162;
      sub_1A7573B60();
      (*(void (**)(char *, uint64_t))(v161 + 8))(v142, v55);
      return swift_bridgeObjectRelease();
    case 0xAuLL:
      id v98 = objc_msgSend(v2, sel_startingDueDate);
      if (v98)
      {
        v99 = v98;
        uint64_t v100 = v154;
        sub_1A7571B20();

        uint64_t v101 = sub_1A7571B60();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v100, 0, 1, v101);
      }
      else
      {
        uint64_t v136 = sub_1A7571B60();
        uint64_t v100 = v154;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v154, 1, 1, v136);
      }
      v97 = v162;
      uint64_t v96 = v163;
      LOBYTE(v172[0]) = 10;
      sub_1A731D8DC();
      sub_1A7573B60();
      uint64_t v118 = (uint64_t)v100;
LABEL_85:
      sub_1A731D4F8(v118);
      return (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v97, v96);
    case 0xBuLL:
      id v38 = objc_msgSend(v2, sel_endingDueDate);
      if (v38)
      {
        id v39 = v38;
        uint64_t v40 = (uint64_t)v156;
        sub_1A7571B20();

        uint64_t v41 = sub_1A7571B60();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
      }
      else
      {
        uint64_t v113 = sub_1A7571B60();
        uint64_t v40 = (uint64_t)v156;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v156, 1, 1, v113);
      }
      v114 = v162;
      uint64_t v115 = v163;
      LOBYTE(v172[0]) = 11;
      sub_1A731D8DC();
      sub_1A7573B60();
      sub_1A731D4F8(v40);
      return (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v114, v115);
    case 0xCuLL:
      LOBYTE(v168) = 12;
      BOOL v46 = v162;
      uint64_t v45 = v163;
      sub_1A7573AA0();
      Class ObjectType = (Class)v2;
      id v47 = objc_msgSend(v2, sel_startingDueDate);
      if (v47)
      {
        BOOL v48 = v47;
        uint64_t v49 = (uint64_t)v157;
        sub_1A7571B20();

        uint64_t v50 = sub_1A7571B60();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
      }
      else
      {
        uint64_t v119 = sub_1A7571B60();
        uint64_t v49 = (uint64_t)v157;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v157, 1, 1, v119);
      }
      uint64_t v120 = v160;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v172, v173);
      sub_1A731D8DC();
      sub_1A7573C10();
      if (!v120)
      {
        sub_1A731D4F8(v49);
        id v121 = [(objc_class *)ObjectType endingDueDate];
        if (v121)
        {
          v122 = v121;
          uint64_t v49 = (uint64_t)v153;
          sub_1A7571B20();

          uint64_t v123 = sub_1A7571B60();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v49, 0, 1, v123);
        }
        else
        {
          uint64_t v137 = sub_1A7571B60();
          uint64_t v49 = (uint64_t)v153;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v153, 1, 1, v137);
        }
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v172, v173);
        sub_1A7573C10();
      }
      sub_1A731D4F8(v49);
      (*(void (**)(char *, uint64_t))(v161 + 8))(v46, v45);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v172);
    default:
      goto LABEL_112;
  }
}

id REMReminderPredicateDescriptor.codable.getter()
{
  uint64_t v1 = (objc_class *)type metadata accessor for REMReminderPredicateDescriptor_Codable();
  v3.receiver = objc_allocWithZone(v1);
  v3.super_class = v1;
  return objc_msgSendSuper2(&v3, sel_initWithReminderPredicateDescriptor_, v0);
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional __swiftcall REMReminderPredicateDescriptor_Codable.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 13;
  if (v3 < 0xD) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional __swiftcall REMReminderPredicateDescriptor_Codable.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  result.value = REMReminderPredicateDescriptor_Codable.CodingKeys.init(rawValue:)(stringValue).value;
  unsigned char *v2 = v4;
  return result;
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional __swiftcall REMReminderPredicateDescriptor_Codable.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  unsigned char *v1 = 13;
  return (ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional)intValue;
}

uint64_t REMReminderPredicateDescriptor_Codable.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t REMReminderPredicateDescriptor_Codable.CodingKeys.rawValue.getter()
{
  unint64_t result = 0x44497473696CLL;
  switch(*v0)
  {
    case 1:
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x44497463656A626FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x4265746144657564;
      break;
    case 6:
      unint64_t result = 0x6574656C706D6F63;
      break;
    case 7:
      unint64_t result = 0x656C746974;
      break;
    case 8:
      unint64_t result = 6581857;
      break;
    case 9:
      unint64_t result = 29295;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t REMReminderPredicateDescriptor_Codable.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x44497473696CLL;
  switch(*v0)
  {
    case 1:
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x44497463656A626FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x4265746144657564;
      break;
    case 6:
      unint64_t result = 0x6574656C706D6F63;
      break;
    case 7:
      unint64_t result = 0x656C746974;
      break;
    case 8:
      unint64_t result = 6581857;
      break;
    case 9:
      unint64_t result = 29295;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A745F28C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A7540C0C(*a1, *a2);
}

uint64_t sub_1A745F298()
{
  return sub_1A7574110();
}

uint64_t sub_1A745F300()
{
  REMReminderPredicateDescriptor_Codable.CodingKeys.rawValue.getter();
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A745F364()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional sub_1A745F3C8(Swift::String *a1)
{
  return REMReminderPredicateDescriptor_Codable.CodingKeys.init(rawValue:)(*a1);
}

unint64_t sub_1A745F3D4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = REMReminderPredicateDescriptor_Codable.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional sub_1A745F400@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.value = REMReminderPredicateDescriptor_Codable.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A745F438(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1A745F444(uint64_t a1)
{
  unint64_t v2 = sub_1A745D558();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A745F480(uint64_t a1)
{
  unint64_t v2 = sub_1A745D558();

  return MEMORY[0x1F41862B0](a1, v2);
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::TextMatching_optional __swiftcall REMReminderPredicateDescriptor_Codable.TextMatching.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t REMReminderPredicateDescriptor_Codable.TextMatching.rawValue.getter()
{
  uint64_t result = 0x7463617865;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x736E6961746E6F63;
      break;
    case 2:
      uint64_t result = 0x6957736E69676562;
      break;
    case 3:
      uint64_t result = 0x6874695773646E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A745F5A8(unsigned __int8 *a1, char *a2)
{
  return sub_1A7540A7C(*a1, *a2);
}

uint64_t sub_1A745F5B4()
{
  return sub_1A7574110();
}

uint64_t sub_1A745F690()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A745F754()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::TextMatching_optional sub_1A745F82C(Swift::String *a1)
{
  return REMReminderPredicateDescriptor_Codable.TextMatching.init(rawValue:)(*a1);
}

void sub_1A745F838(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x7463617865;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x736E6961746E6F63;
      goto LABEL_3;
    case 2:
      *a1 = 0x6957736E69676562;
      a1[1] = 0xEA00000000006874;
      break;
    case 3:
      *a1 = 0x6874695773646E65;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A745F8D4()
{
  return sub_1A75729D0();
}

uint64_t sub_1A745F934()
{
  return sub_1A7572980();
}

id REMReminderPredicateDescriptor_Codable.__allocating_init(reminderPredicateDescriptor:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithReminderPredicateDescriptor_, a1);

  return v3;
}

void REMReminderPredicateDescriptor_Codable.init(reminderPredicateDescriptor:)()
{
}

id REMReminderPredicateDescriptor_Codable.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_1A745FA64@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = REMReminderPredicateDescriptor_Codable.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A745FA90(void *a1)
{
  return REMReminderPredicateDescriptor_Codable.encode(to:)(a1);
}

uint64_t sub_1A745FAB4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A745FB2C()
{
  unint64_t result = qword_1E96F3BD0;
  if (!qword_1E96F3BD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3B90);
    sub_1A745FC90(&qword_1E96F3BD8, v1, (void (*)(uint64_t))type metadata accessor for REMReminderPredicateDescriptor_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3BD0);
  }
  return result;
}

unint64_t sub_1A745FBD0()
{
  unint64_t result = qword_1EB705498;
  if (!qword_1EB705498)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB705490);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705498);
  }
  return result;
}

unint64_t sub_1A745FC3C()
{
  unint64_t result = qword_1E96F3BE0;
  if (!qword_1E96F3BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3BE0);
  }
  return result;
}

uint64_t sub_1A745FC90(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A745FCD8()
{
  unint64_t result = qword_1E96F3BF8;
  if (!qword_1E96F3BF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB6FFDF0);
    sub_1A745FC90(&qword_1EB704E40, 255, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3BF8);
  }
  return result;
}

unint64_t sub_1A745FD84()
{
  unint64_t result = qword_1E96F3C00;
  if (!qword_1E96F3C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3C00);
  }
  return result;
}

unint64_t sub_1A745FDDC()
{
  unint64_t result = qword_1E96F3C08;
  if (!qword_1E96F3C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3C08);
  }
  return result;
}

unint64_t sub_1A745FE34()
{
  unint64_t result = qword_1E96F3C10;
  if (!qword_1E96F3C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3C10);
  }
  return result;
}

unint64_t sub_1A745FE8C()
{
  unint64_t result = qword_1E96F3C18;
  if (!qword_1E96F3C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3C18);
  }
  return result;
}

uint64_t method lookup function for REMReminderPredicateDescriptor_Codable(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMReminderPredicateDescriptor_Codable);
}

uint64_t dispatch thunk of REMReminderPredicateDescriptor_Codable.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of REMReminderPredicateDescriptor_Codable.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unsigned char *storeEnumTagSinglePayload for REMReminderPredicateDescriptor_Codable.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7460000);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMReminderPredicateDescriptor_Codable.CodingKeys()
{
  return &type metadata for REMReminderPredicateDescriptor_Codable.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMReminderPredicateDescriptor_Codable.TextMatching(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7460104);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMReminderPredicateDescriptor_Codable.TextMatching()
{
  return &type metadata for REMReminderPredicateDescriptor_Codable.TextMatching;
}

unint64_t sub_1A746013C()
{
  unint64_t result = qword_1E96F3C20;
  if (!qword_1E96F3C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3C20);
  }
  return result;
}

uint64_t sub_1A7460190()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F3C28);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F3C28);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t Publisher.combiningDebounce<A>(for:scheduler:options:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v9 = v8;
  uint64_t v37 = a7;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v33 = a1;
  uint64_t v36 = a8;
  swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1A7573210();
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v20 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v22 = (char *)&v30 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v9;
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v33, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v34, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v14, v35, v32);
  Publishers.CombiningDebounce.init(upstream:dueTime:scheduler:options:transform:)((uint64_t)v24, (uint64_t)v22, (uint64_t)v17, (uint64_t)v14, v38, v39, v28, a6, v36);
  return swift_retain();
}

uint64_t Publishers.CombiningDebounce.init(upstream:dueTime:scheduler:options:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a9, a1, a7);
  uint64_t v14 = (int *)type metadata accessor for Publishers.CombiningDebounce();
  uint64_t v15 = a9 + v14[13];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v15, a2, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9 + v14[14], a3, a8);
  uint64_t v17 = a9 + v14[15];
  swift_getAssociatedTypeWitness();
  uint64_t v18 = sub_1A7573210();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a4, v18);
  uint64_t v20 = (void *)(a9 + v14[16]);
  *uint64_t v20 = a5;
  v20[1] = a6;
  return result;
}

uint64_t type metadata accessor for Publishers.CombiningDebounce()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.CombiningDebounce.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.CombiningDebounce.dueTime.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 52);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t Publishers.CombiningDebounce.scheduler.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 56));
}

uint64_t Publishers.CombiningDebounce.options.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 60);
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1A7573210();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t Publishers.CombiningDebounce.transform.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 64));
  swift_retain();
  return v2;
}

uint64_t Publishers.CombiningDebounce.receive<A>(subscriber:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v118 = a4;
  uint64_t v119 = a3;
  uint64_t v111 = a1;
  uint64_t v6 = a2[2];
  uint64_t v115 = a2[4];
  uint64_t v7 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = a2;
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[3];
  swift_getAssociatedTypeWitness();
  uint64_t v105 = AssociatedTypeWitness;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_1A7573210();
  uint64_t v110 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v96 = (char *)&v83 - v14;
  uint64_t v114 = v7;
  uint64_t v116 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v13);
  id v92 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = v16;
  uint64_t v97 = sub_1A7571F40();
  uint64_t v108 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v120 = (char *)&v83 - v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v103 = sub_1A7571F50();
  uint64_t v109 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  v93 = (char *)&v83 - v18;
  uint64_t v104 = swift_getWitnessTable();
  uint64_t v19 = sub_1A7571F10();
  uint64_t v100 = v19;
  uint64_t v107 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v95 = (char *)&v83 - v20;
  uint64_t v101 = swift_getWitnessTable();
  uint64_t v124 = v19;
  uint64_t v125 = v11;
  uint64_t v126 = v101;
  uint64_t v127 = v10;
  uint64_t v112 = v10;
  uint64_t v102 = sub_1A7571FC0();
  uint64_t v106 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v94 = (char *)&v83 - v21;
  swift_getAssociatedConformanceWitness();
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v122 = *(void *)(v22 - 8);
  uint64_t v123 = v22;
  uint64_t v88 = *(void *)(v122 + 64);
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  id v87 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v83 - v26;
  uint64_t v121 = v11;
  uint64_t v113 = *(void *)(v11 - 8);
  uint64_t v28 = v113;
  uint64_t v29 = *(void *)(v113 + 64);
  uint64_t v30 = MEMORY[0x1F4188790](v25);
  uint64_t v31 = (char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v83 - v32;
  uint64_t v34 = v9;
  uint64_t v35 = v4 + *((int *)v9 + 14);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v28 + 16);
  id v89 = (char *)&v83 - v32;
  v36((char *)&v83 - v32, v35);
  uint64_t v37 = *((int *)v34 + 13);
  id v91 = v34;
  uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v122 + 16);
  id v84 = v27;
  v83(v27, v4 + v37, v123);
  uint64_t v38 = *((int *)v34 + 16);
  uint64_t v90 = v4;
  uint64_t v39 = (uint64_t *)(v4 + v38);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  uint64_t v86 = v41;
  uint64_t v85 = v40;
  id v42 = v92;
  uint64_t v43 = v114;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v92, v4, v114);
  uint64_t v44 = v33;
  uint64_t v45 = v121;
  ((void (*)(char *, char *, uint64_t))v36)(v31, v44, v121);
  uint64_t v46 = v113;
  unint64_t v47 = (*(unsigned __int8 *)(v113 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
  BOOL v48 = (char *)swift_allocObject();
  *((void *)v48 + 2) = v43;
  *((void *)v48 + 3) = v45;
  uint64_t v49 = v45;
  uint64_t v50 = v115;
  *((void *)v48 + 4) = v119;
  *((void *)v48 + 5) = v50;
  uint64_t v51 = v112;
  uint64_t v52 = v118;
  *((void *)v48 + 6) = v112;
  *((void *)v48 + 7) = v52;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v48[v47], v31, v49);
  sub_1A7572120();
  swift_release();
  unint64_t v53 = v42;
  uint64_t v54 = v43;
  (*(void (**)(char *, uint64_t))(v116 + 8))(v53, v43);
  uint64_t v55 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v96, 1, 1);
  uint64_t v56 = v87;
  id v57 = v27;
  uint64_t v58 = v123;
  v83(v87, (uint64_t)v57, v123);
  uint64_t v59 = v122;
  unint64_t v60 = (*(unsigned __int8 *)(v122 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
  unint64_t v61 = (v88 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v62 = (char *)swift_allocObject();
  uint64_t v63 = v121;
  *((void *)v62 + 2) = v54;
  *((void *)v62 + 3) = v63;
  uint64_t v64 = v119;
  *((void *)v62 + 4) = v119;
  *((void *)v62 + 5) = v50;
  uint64_t v65 = v118;
  *((void *)v62 + 6) = v51;
  *((void *)v62 + 7) = v65;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v62[v60], v56, v58);
  id v66 = &v62[v61];
  uint64_t v67 = v85;
  *(void *)id v66 = v86;
  *((void *)v66 + 1) = v67;
  swift_retain();
  v68 = v93;
  uint64_t v69 = v97;
  uint64_t v70 = v117;
  id v71 = v120;
  sub_1A7572140();
  swift_release();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v55, v70);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v71, v69);
  id v72 = (void *)swift_allocObject();
  uint64_t v73 = v121;
  v72[2] = v114;
  v72[3] = v73;
  uint64_t v74 = v115;
  v72[4] = v64;
  v72[5] = v74;
  v72[6] = v112;
  v72[7] = v65;
  v75 = v95;
  uint64_t v76 = v103;
  sub_1A75720F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v68, v76);
  uint64_t v77 = v94;
  v78 = v84;
  id v79 = v89;
  uint64_t v80 = v100;
  sub_1A75721C0();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v75, v80);
  uint64_t v81 = v102;
  sub_1A7571FB0();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v77, v81);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v78, v123);
  return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v79, v73);
}

uint64_t sub_1A7461484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  sub_1A75721E0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);

  return v6(a2, 0, 1, TupleTypeMetadata2);
}

uint64_t sub_1A74615BC()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_1A7461644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A7461484(a1, a2);
}

void sub_1A746168C(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X2>, void (*a4)(char *, char *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v82 = a5;
  uint64_t v83 = a4;
  uint64_t v94 = a3;
  uint64_t v103 = a2;
  uint64_t v97 = a1;
  uint64_t v100 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v92 = *(void *)(v7 - 8);
  uint64_t v93 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v90 = (char *)&v82 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v86 = (char *)&v82 - v11;
  uint64_t v106 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  id v89 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v95 = (char *)&v82 - v15;
  uint64_t v105 = *(void *)(v9 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v88 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  v99 = (char *)&v82 - v18;
  uint64_t v19 = sub_1A7571E90();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = v9;
  uint64_t v104 = AssociatedTypeWitness;
  uint64_t v23 = swift_getTupleTypeMetadata2();
  uint64_t v24 = sub_1A7573210();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v31 = (char *)&v82 - v30;
  uint64_t v32 = *(void *)(v23 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v29);
  uint64_t v85 = (char *)&v82 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v107 = (char *)&v82 - v35;
  uint64_t v84 = v25;
  uint64_t v36 = *(void (**)(char *, void (*)(char *, char *, uint64_t)))(v25 + 16);
  uint64_t v96 = v37;
  v36(v31, v103);
  uint64_t v98 = v32;
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v38(v31, 1, v23) != 1)
  {
    uint64_t v39 = *(int *)(v23 + 48);
    uint64_t v40 = v23;
    uint64_t v41 = &v107[v39];
    id v42 = &v31[v39];
    uint64_t v101 = *(void (**)(char *, char *))(v105 + 32);
    v101(v107, v31);
    uint64_t v44 = v106 + 32;
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
    uint64_t v102 = v41;
    uint64_t v103 = v43;
    uint64_t v45 = v41;
    uint64_t v46 = v40;
    unint64_t v47 = v42;
    uint64_t v48 = v104;
    v43(v45, v47, v104);
    uint64_t v49 = v96;
    ((void (*)(char *, uint64_t, uint64_t))v36)(v28, v97, v96);
    if (v38(v28, 1, v46) == 1)
    {
      (*(void (**)(char *, uint64_t))(v84 + 8))(v28, v49);
      uint64_t v50 = v100;
      uint64_t v51 = (char *)(v100 + *(int *)(v46 + 48));
      uint64_t v52 = v100;
      unint64_t v53 = v107;
      uint64_t v54 = v108;
    }
    else
    {
      uint64_t v55 = &v28[*(int *)(v46 + 48)];
      uint64_t v56 = TupleTypeMetadata2;
      id v57 = v86;
      uint64_t v58 = &v86[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v59 = v108;
      uint64_t v97 = v44;
      unint64_t v60 = (void (*)(char *, char *, uint64_t))v101;
      ((void (*)(char *, char *, uint64_t))v101)(v86, v28, v108);
      unint64_t v61 = v55;
      unint64_t v62 = v103;
      uint64_t v48 = v104;
      v103(v58, v61, v104);
      uint64_t v63 = &v57[*(int *)(v56 + 48)];
      v60(v99, v57, v59);
      uint64_t v64 = v95;
      v62(v95, v63, v48);
      uint64_t v96 = v46;
      uint64_t v65 = v85;
      id v66 = &v85[*(int *)(v46 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v85, v107, v59);
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v66, v102, v48);
      uint64_t v67 = v88;
      v60(v88, v65, v59);
      v68 = v89;
      v62(v89, v66, v48);
      uint64_t v69 = v90;
      sub_1A7573270();
      uint64_t v70 = v93;
      swift_getAssociatedConformanceWitness();
      LOBYTE(v66) = sub_1A75725A0();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v69, v70);
      uint64_t v50 = v100;
      if (v66)
      {
        id v71 = v67;
        uint64_t v46 = v96;
        uint64_t v102 = (char *)(v100 + *(int *)(v96 + 48));
        id v72 = v99;
        v83(v99, v71);
        uint64_t v73 = *(void (**)(char *, uint64_t))(v105 + 8);
        uint64_t v74 = v71;
        uint64_t v75 = v108;
        v73(v74, v108);
        (*(void (**)(char *, uint64_t))(v106 + 8))(v64, v48);
        v73(v72, v75);
        uint64_t v76 = v98;
        (*(void (**)(char *, uint64_t))(v98 + 8))(v107, v46);
        v103(v102, v68, v48);
LABEL_8:
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v50, 0, 1, v46);
        return;
      }
      uint64_t v77 = *(void (**)(char *, uint64_t))(v106 + 8);
      v77(v68, v48);
      v78 = *(void (**)(char *, uint64_t))(v105 + 8);
      uint64_t v79 = v108;
      v78(v67, v108);
      v77(v95, v48);
      v78(v99, v79);
      uint64_t v46 = v96;
      uint64_t v51 = (char *)(v50 + *(int *)(v96 + 48));
      uint64_t v52 = v50;
      unint64_t v53 = v107;
      uint64_t v54 = v79;
    }
    ((void (*)(uint64_t, char *, uint64_t))v101)(v52, v53, v54);
    v103(v51, v102, v48);
    uint64_t v76 = v98;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v84 + 8))(v31, v96);
  if (qword_1E96F0880 != -1) {
    swift_once();
  }
  uint64_t v80 = __swift_project_value_buffer(v19, (uint64_t)qword_1E96F3C28);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v80, v19);
  uint64_t v81 = MEMORY[0x1E4FBC860];
  sub_1A72B0944(MEMORY[0x1E4FBC860]);
  sub_1A72B0944(v81);
  sub_1A73A67DC((uint64_t)"Subsequent input is unexpectedly nil", 36, 2);
  __break(1u);
}

uint64_t sub_1A7462064()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();

  return swift_deallocObject();
}

void sub_1A7462178(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A746168C(a1, a2, v3 + v8, *(void (**)(char *, char *))(v3 + v9), *(void *)(v3 + v9 + 8), a3);
}

uint64_t sub_1A74622C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v7 = sub_1A7573210();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - v9, a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v10, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a2, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v12 = &v10[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v10, AssociatedTypeWitness);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, AssociatedTypeWitness);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v12, v5);
  }
}

uint64_t sub_1A7462554()
{
  return swift_deallocObject();
}

uint64_t sub_1A7462564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A74622C0(a1, a2);
}

uint64_t sub_1A7462574()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1A7462594(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return Publishers.CombiningDebounce.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1A74625A8()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t AssociatedTypeWitness = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        uint64_t AssociatedTypeWitness = sub_1A7573210();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_1A74627A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 24);
  uint64_t v42 = *(void *)(a3 + 16);
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v4 = *(void *)(v43 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v40 = AssociatedTypeWitness;
  int v6 = *(_DWORD *)(v39 + 80);
  uint64_t v7 = v6;
  uint64_t v38 = v4 + v6;
  uint64_t v8 = (v4 + v7) & ~v7;
  uint64_t v9 = *(void *)(v3 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v37 = *(void *)(v39 + 64) + v10;
  unint64_t v11 = (v37 + v8) & ~(unint64_t)v10;
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v41 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v41 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v12 + v14;
  if (*(_DWORD *)(v13 + 84)) {
    uint64_t v16 = *(void *)(v13 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v13 + 64) + 1;
  }
  unsigned int v17 = v6 | *(_DWORD *)(v43 + 80) & 0xF8 | v10 | v14;
  if (v17 > 7
    || ((v10 | *(_DWORD *)(v13 + 80) | *(_DWORD *)(v43 + 80) | v6) & 0x100000) != 0
    || ((v16 + 7 + ((v12 + v14 + v11) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    uint64_t v24 = (uint64_t *)(v20 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
  }
  else
  {
    size_t __n = v16;
    uint64_t v36 = v16 + 7;
    unint64_t v21 = ~(unint64_t)v6;
    unint64_t v22 = ~(unint64_t)v10;
    uint64_t v23 = ~v14;
    uint64_t v24 = a1;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v43 + 16))(a1, a2, v42);
    unint64_t v25 = ((unint64_t)a1 + v38) & ~v7;
    unint64_t v26 = ((unint64_t)a2 + v38) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v39 + 16))(v25, v26, v40);
    unint64_t v27 = (v25 + v37) & v22;
    unint64_t v28 = (v26 + v37) & v22;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v27, v28, v3);
    uint64_t v29 = (void *)((v27 + v15) & v23);
    uint64_t v30 = (const void *)((v28 + v15) & v23);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v30, 1, v41))
    {
      memcpy(v29, v30, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v29, v30, v41);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v29, 0, 1, v41);
    }
    uint64_t v31 = (void *)(((unint64_t)v30 + v36) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = v31[1];
    uint64_t v33 = (void *)(((unint64_t)v29 + v36) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v33 = *v31;
    v33[1] = v32;
  }
  swift_retain();
  return v24;
}

uint64_t sub_1A7462B84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 8;
  unint64_t v10 = (v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  uint64_t v11 = *(void *)(v6 - 8);
  uint64_t v12 = v11 + 8;
  unint64_t v13 = (v10 + *(void *)(v9 + 56) + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v13, v6);
  uint64_t v14 = *(void *)(v12 + 56);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = (v13 + v14 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15)) {
    (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v17, v15);
  }

  return swift_release();
}

uint64_t sub_1A7462DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(a3 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v7 + v12 + a1) & ~v12;
  uint64_t v14 = (v7 + v12 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v14, AssociatedTypeWitness);
  uint64_t v15 = *(void *)(v8 - 8);
  uint64_t v16 = v15 + 16;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = *(void *)(v11 + 48) + v17;
  uint64_t v19 = (v18 + v13) & ~v17;
  uint64_t v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v19, v20, v8);
  uint64_t v21 = *(void *)(v16 + 48);
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  unint64_t v25 = (void *)((v21 + v24 + v19) & ~v24);
  unint64_t v26 = (const void *)((v21 + v24 + v20) & ~v24);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v26, 1, v22))
  {
    int v27 = *(_DWORD *)(v23 + 84);
    uint64_t v28 = *(void *)(v23 + 64);
    if (v27) {
      size_t v29 = *(void *)(v23 + 64);
    }
    else {
      size_t v29 = v28 + 1;
    }
    memcpy(v25, v26, v29);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v25, v26, v22);
    uint64_t v31 = *(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56);
    uint64_t v30 = v23 + 56;
    v31(v25, 0, 1, v22);
    int v27 = *(_DWORD *)(v30 + 28);
    uint64_t v28 = *(void *)(v30 + 8);
  }
  if (v27) {
    uint64_t v32 = v28;
  }
  else {
    uint64_t v32 = v28 + 1;
  }
  uint64_t v33 = (uint64_t)v25 + v32 + 7;
  uint64_t v34 = (uint64_t *)(((unint64_t)v26 + v32 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  uint64_t v37 = (void *)(v33 & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v37 = v36;
  v37[1] = v35;
  swift_retain();
  return a1;
}

uint64_t sub_1A7463044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(a3 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v7 + v12 + a1) & ~v12;
  uint64_t v14 = (v7 + v12 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v13, v14, AssociatedTypeWitness);
  uint64_t v15 = *(void *)(v11 + 40);
  uint64_t v16 = *(void *)(v8 - 8);
  uint64_t v17 = v16 + 24;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = v15 + v18;
  uint64_t v20 = (v19 + v13) & ~v18;
  uint64_t v21 = (v19 + v14) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))(v20, v21, v8);
  uint64_t v22 = *(void *)(v17 + 40);
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  unint64_t v26 = (void *)((v22 + v25 + v20) & ~v25);
  int v27 = (void *)((v22 + v25 + v21) & ~v25);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v20) = v28(v26, 1, v23);
  int v29 = v28(v27, 1, v23);
  if (v20)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v26, v27, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v23);
      goto LABEL_12;
    }
    int v30 = *(_DWORD *)(v24 + 84);
    size_t v31 = *(void *)(v24 + 64);
  }
  else
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v26, v27, v23);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v26, v23);
    int v30 = *(_DWORD *)(v24 + 84);
    size_t v31 = *(void *)(v24 + 64);
  }
  if (v30) {
    size_t v32 = v31;
  }
  else {
    size_t v32 = v31 + 1;
  }
  memcpy(v26, v27, v32);
LABEL_12:
  if (*(_DWORD *)(v24 + 84)) {
    uint64_t v33 = *(void *)(v24 + 64);
  }
  else {
    uint64_t v33 = *(void *)(v24 + 64) + 1;
  }
  uint64_t v34 = (void *)(((unint64_t)v26 + v33 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v35 = (void *)(((unint64_t)v27 + v33 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A7463360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(a3 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v7 + v12 + a1) & ~v12;
  uint64_t v14 = (v7 + v12 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v14, AssociatedTypeWitness);
  uint64_t v15 = *(void *)(v8 - 8);
  uint64_t v16 = v15 + 32;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = *(void *)(v11 + 32) + v17;
  uint64_t v19 = (v18 + v13) & ~v17;
  uint64_t v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v19, v20, v8);
  uint64_t v21 = *(void *)(v16 + 32);
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = (void *)((v21 + v24 + v19) & ~v24);
  unint64_t v26 = (const void *)((v21 + v24 + v20) & ~v24);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v26, 1, v22))
  {
    int v27 = *(_DWORD *)(v23 + 84);
    uint64_t v28 = *(void *)(v23 + 64);
    if (v27) {
      size_t v29 = *(void *)(v23 + 64);
    }
    else {
      size_t v29 = v28 + 1;
    }
    memcpy(v25, v26, v29);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v25, v26, v22);
    size_t v31 = *(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56);
    uint64_t v30 = v23 + 56;
    v31(v25, 0, 1, v22);
    int v27 = *(_DWORD *)(v30 + 28);
    uint64_t v28 = *(void *)(v30 + 8);
  }
  if (v27) {
    uint64_t v32 = v28;
  }
  else {
    uint64_t v32 = v28 + 1;
  }
  *(_OWORD *)(((unint64_t)v25 + v32 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v26 + v32 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A74635F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(a3 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v7 + v12 + a1) & ~v12;
  uint64_t v14 = (v7 + v12 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v13, v14, AssociatedTypeWitness);
  uint64_t v15 = *(void *)(v11 + 24);
  uint64_t v16 = *(void *)(v8 - 8);
  uint64_t v17 = v16 + 40;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = v15 + v18;
  uint64_t v20 = (v19 + v13) & ~v18;
  uint64_t v21 = (v19 + v14) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 40))(v20, v21, v8);
  uint64_t v22 = *(void *)(v17 + 24);
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  unint64_t v26 = (void *)((v22 + v25 + v20) & ~v25);
  int v27 = (void *)((v22 + v25 + v21) & ~v25);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v20) = v28(v26, 1, v23);
  int v29 = v28(v27, 1, v23);
  if (v20)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v26, v27, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v23);
      goto LABEL_12;
    }
    int v30 = *(_DWORD *)(v24 + 84);
    size_t v31 = *(void *)(v24 + 64);
  }
  else
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v26, v27, v23);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v26, v23);
    int v30 = *(_DWORD *)(v24 + 84);
    size_t v31 = *(void *)(v24 + 64);
  }
  if (v30) {
    size_t v32 = v31;
  }
  else {
    size_t v32 = v31 + 1;
  }
  memcpy(v26, v27, v32);
LABEL_12:
  if (*(_DWORD *)(v24 + 84)) {
    uint64_t v33 = *(void *)(v24 + 64);
  }
  else {
    uint64_t v33 = *(void *)(v24 + 64) + 1;
  }
  *(_OWORD *)(((unint64_t)v26 + v33 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v27 + v33 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1A746390C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 24);
  uint64_t v41 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v41 - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v40 = v7;
  if (v7 <= v5) {
    unsigned int v7 = v5;
  }
  uint64_t v8 = *(void *)(v3 - 8);
  unsigned int v38 = *(_DWORD *)(v8 + 84);
  if (v38 <= v7) {
    unsigned int v9 = v7;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12) {
    unsigned int v13 = v12 - 1;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v13 <= v9) {
    unsigned int v14 = v9;
  }
  else {
    unsigned int v14 = v13;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  uint64_t v15 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = *(void *)(v6 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = *(void *)(v8 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = *(void *)(v10 + 64);
  if (!v12) {
    ++v20;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v21 = *(void *)(v4 + 64) + v15;
  uint64_t v22 = v20 + 7;
  uint64_t v23 = a1;
  if (v14 < a2)
  {
    unint64_t v24 = ((v22 + ((v18 + v19 + ((v16 + v17 + (v21 & ~v15)) & ~v17)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v24 & 0xFFFFFFF8) != 0) {
      unsigned int v25 = 2;
    }
    else {
      unsigned int v25 = a2 - v14 + 1;
    }
    if (v25 >= 0x10000) {
      unsigned int v26 = 4;
    }
    else {
      unsigned int v26 = 2;
    }
    if (v25 < 0x100) {
      unsigned int v26 = 1;
    }
    if (v25 >= 2) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0;
    }
    switch(v27)
    {
      case 1:
        int v28 = *((unsigned __int8 *)a1 + v24);
        if (!*((unsigned char *)a1 + v24)) {
          break;
        }
        goto LABEL_33;
      case 2:
        int v28 = *(unsigned __int16 *)((char *)a1 + v24);
        if (*(_WORD *)((char *)a1 + v24)) {
          goto LABEL_33;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A7463D48);
      case 4:
        int v28 = *(_DWORD *)((char *)a1 + v24);
        if (!v28) {
          break;
        }
LABEL_33:
        int v29 = v28 - 1;
        if ((v24 & 0xFFFFFFF8) != 0)
        {
          int v29 = 0;
          int v30 = *a1;
        }
        else
        {
          int v30 = 0;
        }
        return v14 + (v30 | v29) + 1;
      default:
        break;
    }
  }
  if (v5 == v14)
  {
    uint64_t v31 = v41;
    size_t v32 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v33 = v5;
LABEL_42:
    return v32(v23, v33, v31);
  }
  uint64_t v23 = (_DWORD *)(((unint64_t)a1 + v21) & ~v15);
  if (v40 == v14)
  {
    size_t v32 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v33 = v40;
    uint64_t v31 = AssociatedTypeWitness;
    goto LABEL_42;
  }
  uint64_t v23 = (_DWORD *)(((unint64_t)v23 + v16 + v17) & ~v17);
  if (v38 == v14)
  {
    size_t v32 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v33 = v38;
    uint64_t v31 = v3;
    goto LABEL_42;
  }
  unint64_t v35 = ((unint64_t)v23 + v18 + v19) & ~v19;
  if (v13 == v14)
  {
    if (v12 >= 2)
    {
      unsigned int v37 = (*(uint64_t (**)(unint64_t))(v11 + 48))(v35);
      if (v37 >= 2) {
        return v37 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v36 = *(void *)((v22 + v35) & 0xFFFFFFFFFFFFFFF8);
  if (v36 >= 0xFFFFFFFF) {
    LODWORD(v36) = -1;
  }
  return (v36 + 1);
}

void sub_1A7463D5C(_DWORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 24);
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v39 = v5;
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v40 = v6;
  unsigned int v38 = v8;
  if (v8 <= v6) {
    unsigned int v8 = v6;
  }
  uint64_t v9 = *(void *)(v4 - 8);
  unsigned int v37 = *(_DWORD *)(v9 + 84);
  if (v37 <= v8) {
    unsigned int v10 = v8;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v9 + 84);
  }
  int v11 = 0;
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = v12;
  int v14 = *(_DWORD *)(v12 + 84);
  unsigned int v15 = v14 - 1;
  if (!v14) {
    unsigned int v15 = 0;
  }
  uint64_t v16 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = *(void *)(v7 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = *(void *)(v9 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = *(void *)(v12 + 64);
  if (v15 <= v10) {
    unsigned int v22 = v10;
  }
  else {
    unsigned int v22 = v15;
  }
  if (v22 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  uint64_t v23 = *(void *)(v5 + 64) + v16;
  if (!v14) {
    ++v21;
  }
  uint64_t v24 = v21 + 7;
  size_t v25 = ((v24 + ((v19 + v20 + ((v17 + v18 + (v23 & ~v16)) & ~v18)) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v22 < a3)
  {
    if (((v24
         + ((v19
           + v20
           + ((v17 + v18 + (v23 & ~v16)) & ~v18)) & ~v20)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v26 = a3 - v22 + 1;
    else {
      unsigned int v26 = 2;
    }
    if (v26 >= 0x10000) {
      int v27 = 4;
    }
    else {
      int v27 = 2;
    }
    if (v26 < 0x100) {
      int v27 = 1;
    }
    if (v26 >= 2) {
      int v11 = v27;
    }
    else {
      int v11 = 0;
    }
  }
  if (a2 > v22)
  {
    if (((v24
         + ((v19
           + v20
           + ((v17 + v18 + (v23 & ~v16)) & ~v18)) & ~v20)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      int v28 = a2 - v22;
    else {
      int v28 = 1;
    }
    if (((v24
         + ((v19
           + v20
           + ((v17 + v18 + (v23 & ~v16)) & ~v18)) & ~v20)) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v29 = ~v22 + a2;
      bzero(a1, v25);
      *a1 = v29;
    }
    switch(v11)
    {
      case 1:
        *((unsigned char *)a1 + v25) = v28;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v25) = v28;
        return;
      case 3:
        goto LABEL_64;
      case 4:
        *(_DWORD *)((char *)a1 + v25) = v28;
        return;
      default:
        return;
    }
  }
  uint64_t v30 = ~v16;
  uint64_t v31 = a1;
  switch(v11)
  {
    case 1:
      *((unsigned char *)a1 + v25) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_42;
    case 2:
      *(_WORD *)((char *)a1 + v25) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_42;
    case 3:
LABEL_64:
      __break(1u);
      JUMPOUT(0x1A7464230);
    case 4:
      *(_DWORD *)((char *)a1 + v25) = 0;
      goto LABEL_41;
    default:
LABEL_41:
      if (!a2) {
        return;
      }
LABEL_42:
      if (v40 == v22)
      {
        size_t v32 = *(void (**)(_DWORD *))(v39 + 56);
        goto LABEL_44;
      }
      uint64_t v31 = (_DWORD *)(((unint64_t)a1 + v23) & v30);
      if (v38 == v22)
      {
        size_t v32 = *(void (**)(_DWORD *))(v7 + 56);
        goto LABEL_46;
      }
      uint64_t v31 = (_DWORD *)(((unint64_t)v31 + v17 + v18) & ~v18);
      if (v37 == v22)
      {
        size_t v32 = *(void (**)(_DWORD *))(v9 + 56);
LABEL_44:
LABEL_46:
        v32(v31);
        return;
      }
      unint64_t v33 = ((unint64_t)v31 + v19 + v20) & ~v20;
      if (v15 == v22)
      {
        uint64_t v34 = *(void (**)(unint64_t, void))(v13 + 56);
        v34(v33, a2 + 1);
      }
      else
      {
        unint64_t v35 = (void *)((v24 + v33) & 0xFFFFFFFFFFFFFFF8);
        if ((a2 & 0x80000000) != 0)
        {
          uint64_t v36 = a2 ^ 0x80000000;
          v35[1] = 0;
        }
        else
        {
          uint64_t v36 = a2 - 1;
        }
        *unint64_t v35 = v36;
      }
      return;
  }
}

uint64_t REMSmartList.userDefinedVisibility.getter()
{
  unint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(v0, sel_smartListType);
  id v6 = objc_msgSend(v1, sel_pinnedDate);
  if (v6)
  {
    uint64_t v7 = v6;
    sub_1A7571B20();

    uint64_t v8 = sub_1A7571B60();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 0, 1, v8);
  }
  else
  {
    uint64_t v9 = sub_1A7571B60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  }
  uint64_t v10 = _sSo12REMSmartListC19ReminderKitInternalE028userDefinedVisibilityOfSmartB04with10pinnedDateSo0ab4UsergH0VSo0aB4Typea_10Foundation0M0VSgtFZ_0(v5, (uint64_t)v4);

  sub_1A731D4F8((uint64_t)v4);
  return v10;
}

uint64_t sub_1A74643A8()
{
  uint64_t v0 = sub_1A7571B60();
  __swift_allocate_value_buffer(v0, qword_1E96F3C40);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E96F3C40);
  return sub_1A7571A70();
}

uint64_t static REMSmartList.hiddenPredefinedSmartListPinnedDate.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E96F0888 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A7571B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E96F3C40);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t _sSo12REMSmartListC19ReminderKitInternalE028userDefinedVisibilityOfSmartB04with10pinnedDateSo0ab4UsergH0VSo0aB4Typea_10Foundation0M0VSgtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7571B60();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = REMSmartListType.supportsUserDefinedVisibility.getter(a1);
  uint64_t result = 0;
  if (v11)
  {
    sub_1A73C3428(a2, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1A731D4F8((uint64_t)v6);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      if (qword_1E96F0888 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v7, (uint64_t)qword_1E96F3C40);
      char v13 = sub_1A7571B10();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      if (v13) {
        return 2;
      }
      else {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_1A7464680()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F3C60);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F3C60);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id REMContactRepresentation.init(contact:)(void *a1)
{
  uint64_t v2 = sub_1A746580C(a1);
  uint64_t v3 = sub_1A74659E8(a1);
  if (*(void *)(v2 + 16) || *(void *)(v3 + 16))
  {
    id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    uint64_t v5 = (void *)sub_1A7572A00();
    swift_bridgeObjectRelease();
    id v6 = (void *)sub_1A7572A00();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v4, sel_initWithPhones_emails_, v5, v6);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return 0;
  }
  return v7;
}

id REMContactRepresentation.init(contactIdentifier:contactStore:)(uint64_t a1, unint64_t a2, void *a3)
{
  id v4 = v3;
  v56[1] = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C80);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = (void **)MEMORY[0x1E4F1AE08];
  *(_OWORD *)(v8 + 16) = xmmword_1A7579500;
  uint64_t v10 = *v9;
  char v11 = (void *)*MEMORY[0x1E4F1ADC8];
  *(void *)(v8 + 32) = *v9;
  *(void *)(v8 + 40) = v11;
  uint64_t v12 = (void *)*MEMORY[0x1E4F1AEE0];
  *(void *)(v8 + 48) = *MEMORY[0x1E4F1AEE0];
  sub_1A7572A30();
  id v13 = objc_allocWithZone(MEMORY[0x1E4F1B908]);
  id v14 = v10;
  id v15 = v11;
  id v16 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
  uint64_t v17 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v13, sel_initWithKeysToFetch_, v17);

  uint64_t v19 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1A75785A0;
  uint64_t v54 = a1;
  *(void *)(v20 + 32) = a1;
  *(void *)(v20 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v21 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v19, sel_predicateForContactsWithIdentifiers_, v21);

  objc_msgSend(v18, sel_setPredicate_, v22);
  v56[0] = 0;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v56;
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = sub_1A7465BA8;
  v24[3] = v23;
  aBlock[4] = sub_1A7465BFC;
  aBlock[5] = v24;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1A7464F90;
  aBlock[3] = &block_descriptor_12;
  size_t v25 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v26 = objc_msgSend(a3, sel_enumerateContactsWithFetchRequest_error_usingBlock_, v18, aBlock, v25);
  _Block_release(v25);
  id v27 = aBlock[0];
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (a1)
  {
    __break(1u);
LABEL_21:
    swift_once();
    goto LABEL_4;
  }
  if (v26) {
    goto LABEL_8;
  }
  id v4 = (void *)sub_1A7571850();

  swift_willThrow();
  if (qword_1E96F0890 != -1) {
    goto LABEL_21;
  }
LABEL_4:
  uint64_t v28 = sub_1A7571E90();
  __swift_project_value_buffer(v28, (uint64_t)qword_1E96F3C60);
  id v29 = v18;
  id v30 = v4;
  id v31 = v29;
  id v32 = v4;
  unint64_t v33 = sub_1A7571E80();
  os_log_type_t v34 = sub_1A7572FD0();
  if (os_log_type_enabled(v33, v34))
  {
    unint64_t v53 = a3;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v52 = (void *)swift_slowAlloc();
    aBlock[0] = v52;
    *(_DWORD *)uint64_t v35 = 136315394;
    if (objc_msgSend(v31, sel_predicate))
    {
      sub_1A72BEFEC(0, &qword_1E96F3C80);
      uint64_t v36 = sub_1A7572670();
      unint64_t v38 = v37;
    }
    else
    {
      unint64_t v38 = 0xE300000000000000;
      uint64_t v36 = 7104878;
    }
    sub_1A72D1730(v36, v38, (uint64_t *)aBlock);
    sub_1A7573250();

    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v43 = sub_1A7574040();
    sub_1A72D1730(v43, v44, (uint64_t *)aBlock);
    sub_1A7573250();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A72A1000, v33, v34, "Error enumerating contacts with CNContact predicate {predicate: %s, error: %s}", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v52, -1, -1);
    MEMORY[0x1AD0CD330](v35, -1, -1);

    a3 = v53;
    uint64_t v39 = (void *)v56[0];
    if (!v56[0]) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }

LABEL_8:
  uint64_t v39 = (void *)v56[0];
  if (!v56[0])
  {
LABEL_13:
    if (qword_1E96F0890 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_1A7571E90();
    __swift_project_value_buffer(v45, (uint64_t)qword_1E96F3C60);
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1A7571E80();
    os_log_type_t v47 = sub_1A7572FD0();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = (void *)swift_slowAlloc();
      aBlock[0] = v49;
      *(_DWORD *)uint64_t v48 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A72D1730(v54, a2, (uint64_t *)aBlock);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A72A1000, v46, v47, "Unable to look up contact identifier from CNContactStore {contactIdentifier: %s}", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v49, -1, -1);
      MEMORY[0x1AD0CD330](v48, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v41 = 0;
    goto LABEL_19;
  }
LABEL_9:
  id v40 = v39;
  swift_bridgeObjectRelease();
  id v41 = REMContactRepresentation.init(contact:)(v40);

  id v42 = v41;
  if (v41) {

  }
LABEL_19:
  uint64_t v50 = (void *)v56[0];
  swift_release();

  return v41;
}

void sub_1A7464F90(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

id REMContactRepresentation.init(address:)()
{
  sub_1A7572680();
  swift_bridgeObjectRelease();
  uint64_t v0 = (void *)sub_1A75725E0();
  unsigned int v1 = objc_msgSend(v0, sel_rem_hasMailto);

  uint64_t v2 = (void *)sub_1A75725E0();
  id v3 = v2;
  if (v1)
  {
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(v3, sel_rem_removingMailto);

    uint64_t v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v7 = v6;

    id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  }
  else
  {
    unsigned int v9 = objc_msgSend(v2, sel_rem_hasTel);

    if (!v9)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v10 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v10, sel_rem_removingTel);

    uint64_t v12 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v14 = v13;

    id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
    uint64_t v15 = swift_allocObject();
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    *(_OWORD *)(v15 + 16) = xmmword_1A75785A0;
    *(void *)(v15 + 32) = v12;
    *(void *)(v15 + 40) = v14;
  }
  id v16 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1A75785A0;
    *(void *)(v17 + 32) = v5;
    *(void *)(v17 + 40) = v7;
  }
  swift_bridgeObjectRetain();
  id v18 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v8, sel_initWithPhones_emails_, v16, v18);

  swift_bridgeObjectRelease();
  return v19;
}

Swift::Bool __swiftcall REMContactRepresentation.matches(contact:)(CNContact contact)
{
  uint64_t v2 = v1;
  sub_1A72BEFEC(0, &qword_1E96F3C88);
  id v4 = REMContactRepresentation.init(contact:)(contact.super.isa);
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  unsigned __int8 v6 = objc_msgSend(v2, sel_matchesContactRepresentation_, v4);

  return v6;
}

CNContact_optional __swiftcall CNContactStore.contactFrom(emailAddresses:phoneNumbers:keysToFetch:)(Swift::OpaquePointer emailAddresses, Swift::OpaquePointer phoneNumbers, Swift::OpaquePointer keysToFetch)
{
  rawValue = phoneNumbers._rawValue;
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  unint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v36 = MEMORY[0x1E4FBC860];
  unint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *((void *)emailAddresses._rawValue + 2);
  if (v5)
  {
    unsigned __int8 v6 = (void *)(swift_bridgeObjectRetain() + 40);
    do
    {
      if (*v6)
      {
        uint64_t v7 = self;
        swift_bridgeObjectRetain();
        id v8 = (void *)sub_1A75725E0();
        id v9 = objc_msgSend(v7, sel_predicateForContactsMatchingEmailAddress_, v8);
        swift_bridgeObjectRelease();

        if (v9)
        {
          MEMORY[0x1AD0CABF0]();
          if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1A7572A60();
          }
          sub_1A7572AB0();
          sub_1A7572A30();
        }
      }
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    unint64_t v10 = v36;
    rawValue = phoneNumbers._rawValue;
  }
  else
  {
    unint64_t v10 = MEMORY[0x1E4FBC860];
  }
  sub_1A72D13F0(v10);
  unint64_t v36 = v4;
  uint64_t v11 = rawValue[2];
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = rawValue + 5;
    do
    {
      if (*v12)
      {
        id v13 = objc_allocWithZone(MEMORY[0x1E4F1BA70]);
        swift_bridgeObjectRetain();
        uint64_t v14 = (void *)sub_1A75725E0();
        id v15 = objc_msgSend(v13, sel_initWithStringValue_, v14);

        id v16 = objc_msgSend(self, sel_predicateForContactsMatchingPhoneNumber_, v15);
        swift_bridgeObjectRelease();

        if (v16)
        {
          MEMORY[0x1AD0CABF0]();
          if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1A7572A60();
          }
          sub_1A7572AB0();
          sub_1A7572A30();
        }
      }
      v12 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    unint64_t v4 = v36;
  }
  sub_1A72D13F0(v4);
  unint64_t v17 = v37;
  if (v37 >> 62) {
    goto LABEL_36;
  }
  uint64_t v18 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v18)
  {
    uint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        break;
      }
      id v21 = *(id *)(v17 + 8 * v19 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
      id v22 = (void *)sub_1A7572A00();
      unint64_t v36 = 0;
      id v23 = objc_msgSend(v35, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v21, v22, &v36);

      id v24 = (id)v36;
      if (v23)
      {
        sub_1A72BEFEC(0, &qword_1E96F3240);
        unint64_t v29 = sub_1A7572A10();
        id v30 = v24;
        swift_bridgeObjectRelease();

        if (v29 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v28 = sub_1A75738D0();
          swift_bridgeObjectRelease();
          if (v28)
          {
LABEL_29:
            if ((v29 & 0xC000000000000001) != 0)
            {
              id v31 = (id)MEMORY[0x1AD0CB800](0, v29);
            }
            else
            {
              if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                __break(1u);
              }
              id v31 = *(id *)(v29 + 32);
            }
            uint64_t v28 = (uint64_t)v31;
          }
        }
        else
        {
          uint64_t v28 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v28) {
            goto LABEL_29;
          }
        }
        swift_bridgeObjectRelease();

        goto LABEL_34;
      }
      id v25 = (id)v36;
      unsigned int v26 = (void *)sub_1A7571850();

      swift_willThrow();
      ++v19;
      if (v20 == v18) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (!v33) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  uint64_t v28 = 0;
LABEL_34:
  id v32 = (objc_class *)v28;
  result.value.super.isa = v32;
  result.is_nil = v27;
  return result;
}

unint64_t CNContactStore.contact(matching:keysToFetch:)(void *a1, Swift::OpaquePointer a2)
{
  id v4 = objc_msgSend(a1, sel_emails);
  uint64_t v5 = sub_1A7572A10();

  uint64_t v6 = sub_1A7402E18(v5);
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(a1, sel_phones);
  uint64_t v8 = sub_1A7572A10();

  uint64_t v9 = sub_1A7402E18(v8);
  swift_bridgeObjectRelease();
  unint64_t v10 = (unint64_t)CNContactStore.contactFrom(emailAddresses:phoneNumbers:keysToFetch:)((Swift::OpaquePointer)v6, (Swift::OpaquePointer)v9, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A746580C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_phoneNumbers);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3198);
  unint64_t v2 = sub_1A7572A10();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A75738D0();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1AD0CB800](v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v8 = v7;
      id v9 = objc_msgSend(v7, sel_value);
      id v10 = objc_msgSend(v9, sel_unformattedInternationalStringValue);

      if (v10)
      {
        uint64_t v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v13 = v12;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_1A72AC148(0, v6[2] + 1, 1, v6);
        }
        unint64_t v15 = v6[2];
        unint64_t v14 = v6[3];
        if (v15 >= v14 >> 1) {
          uint64_t v6 = sub_1A72AC148((void *)(v14 > 1), v15 + 1, 1, v6);
        }
        v6[2] = v15 + 1;
        id v16 = &v6[2 * v15];
        v16[4] = v11;
        v16[5] = v13;
      }
      else
      {
      }
      ++v5;
    }
    while (v3 != v5);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A74659E8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_emailAddresses);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3198);
  unint64_t v2 = sub_1A7572A10();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A75738D0();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1A72D2D00(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    uint64_t v6 = v16;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1AD0CB800](v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v8 = v7;
      id v9 = objc_msgSend(v7, sel_value);
      uint64_t v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v12 = v11;

      unint64_t v14 = *(void *)(v16 + 16);
      unint64_t v13 = *(void *)(v16 + 24);
      if (v14 >= v13 >> 1) {
        sub_1A72D2D00(v13 > 1, v14 + 1, 1);
      }
      ++v5;
      *(void *)(v16 + 16) = v14 + 1;
      uint64_t v15 = v16 + 16 * v14;
      *(void *)(v15 + 32) = v10;
      *(void *)(v15 + 40) = v12;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7465B98()
{
  return swift_deallocObject();
}

void sub_1A7465BA8(void *a1)
{
  unint64_t v2 = *(id **)(v1 + 16);
  id v4 = *v2;
  id *v2 = a1;
  id v3 = a1;
}

uint64_t sub_1A7465BEC()
{
  return swift_deallocObject();
}

uint64_t sub_1A7465BFC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

double static NSDateInterval.rem1Second.getter()
{
  return 1.0;
}

double sub_1A7465C2C()
{
  return 1.0;
}

double static NSDateInterval.rem1Minute.getter()
{
  return 60.0;
}

double sub_1A7465C40()
{
  return 60.0;
}

double static NSDateInterval.rem1Hour.getter()
{
  return 3600.0;
}

double sub_1A7465C5C()
{
  return 3600.0;
}

double static NSDateInterval.rem1Day.getter()
{
  return 86400.0;
}

double sub_1A7465C7C()
{
  return 86400.0;
}

double static NSDateInterval.rem1Week.getter()
{
  return 604800.0;
}

double sub_1A7465C9C()
{
  return 604800.0;
}

double static NSDateInterval.rem1Month30Days.getter()
{
  return 2592000.0;
}

double sub_1A7465CBC()
{
  return 2592000.0;
}

double static NSDateInterval.rem1Year.getter()
{
  return 31536000.0;
}

double sub_1A7465CDC()
{
  return 31536000.0;
}

double static NSDateInterval.remNotificationFireDateGracePeriod.getter()
{
  return 28800.0;
}

double sub_1A7465CFC()
{
  return 28800.0;
}

uint64_t MutableOrderedSet.__allocating_init(_:)()
{
  uint64_t v0 = swift_allocObject();
  MutableOrderedSet.init(_:)();
  return v0;
}

uint64_t MutableOrderedSet.remove(_:)(uint64_t a1)
{
  return sub_1A7465E54(a1, (SEL *)&selRef_removeObject_);
}

uint64_t MutableOrderedSet.array.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_array);
  sub_1A7572A10();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003E0);
  sub_1A74663E8();
  uint64_t v2 = sub_1A75728B0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t MutableOrderedSet.add(_:)(uint64_t a1)
{
  return sub_1A7465E54(a1, (SEL *)&selRef_addObject_);
}

uint64_t sub_1A7465E54(uint64_t a1, SEL *a2)
{
  objc_msgSend(*(id *)(v2 + 16), *a2, sub_1A7573DA0());

  return swift_unknownObjectRelease();
}

uint64_t MutableOrderedSet.init(_:)()
{
  sub_1A7573750();
  swift_bridgeObjectRelease();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1CA70]);
  uint64_t v2 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithArray_, v2);

  *(void *)(v0 + 16) = v3;
  return v0;
}

Swift::Void __swiftcall MutableOrderedSet.addValues(from:)(Swift::OpaquePointer from)
{
}

uint64_t MutableOrderedSet.insert(_:at:)(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(v2 + 16);
  uint64_t result = sub_1A7573DA0();
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v4, sel_insertObject_atIndex_, result, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t MutableOrderedSet.replaceValue(at:with:)(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(*(id *)(v1 + 16), sel_replaceObjectAtIndex_withObject_, result, sub_1A7573DA0());
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t MutableOrderedSet.value(at:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t result = (uint64_t)objc_msgSend((id)v2[2], sel_count);
  if (result >= 1 && result > a1)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      id v9 = objc_msgSend((id)v2[2], sel_objectAtIndex_, a1);
      sub_1A7573330();
      swift_unknownObjectRelease();
      uint64_t v10 = *(void *)(v5 + 80);
      int v11 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, v11 ^ 1u, 1, v10);
    }
  }
  else
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 56);
    return v8(a2, 1, 1);
  }
  return result;
}

id MutableOrderedSet.count.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_count);
}

uint64_t MutableOrderedSet.index(of:)()
{
  unint64_t v1 = (unint64_t)objc_msgSend(*(id *)(v0 + 16), sel_indexOfObject_, sub_1A7573DA0());
  swift_unknownObjectRelease();
  if (v1 == sub_1A7571410()) {
    return 0;
  }
  unint64_t v2 = v1;
  if ((v1 & 0x8000000000000000) == 0) {
    return v2;
  }
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

id MutableOrderedSet.contains(_:)()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_containsObject_, sub_1A7573DA0());
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1A7466330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A72BEE98(a1, (uint64_t)&v7);
  int v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v5 ^ 1u, 1, a2);
}

uint64_t sub_1A74663CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A7466330(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_1A74663E8()
{
  unint64_t result = qword_1EB7003E8;
  if (!qword_1EB7003E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7003E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7003E8);
  }
  return result;
}

BOOL MutableOrderedSet.isEmpty.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_count) == 0;
}

Swift::Void __swiftcall MutableOrderedSet.removeValue(at:)(Swift::UInt at)
{
  int64_t v3 = (int64_t)objc_msgSend(*(id *)(v1 + 16), sel_count);
  if (v3 >= 1 && v3 > at)
  {
    if ((at & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      int v5 = *(void **)(v1 + 16);
      objc_msgSend(v5, sel_removeObjectAtIndex_, at);
    }
  }
}

Swift::Void __swiftcall MutableOrderedSet.removeValues(in:)(Swift::OpaquePointer in)
{
}

void sub_1A74664EC(uint64_t a1, SEL *a2)
{
  id v4 = *(void **)(v2 + 16);
  sub_1A7573750();
  id v5 = (id)sub_1A7572A00();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, *a2, v5);
}

Swift::Void __swiftcall MutableOrderedSet.removeAllValues()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_removeAllObjects);
}

uint64_t MutableOrderedSet.deinit()
{
  return v0;
}

uint64_t MutableOrderedSet.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t type metadata accessor for MutableOrderedSet()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for MutableOrderedSet(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MutableOrderedSet);
}

uint64_t dispatch thunk of MutableOrderedSet.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t static Analytics.isEventUsed(_:)()
{
  uint64_t v0 = (void *)sub_1A75725E0();
  uint64_t IsEventUsed = AnalyticsIsEventUsed();

  return IsEventUsed;
}

uint64_t sub_1A7466668()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1EB701EB8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB701EB8);
  if (qword_1EB7057A8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F40);
  int64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t static Analytics.postEvent(_:payload:duration:)(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  if (a3) {
    unint64_t v9 = a3;
  }
  else {
    unint64_t v9 = sub_1A72B1658(MEMORY[0x1E4FBC860]);
  }
  swift_bridgeObjectRetain();
  sub_1A7467B18(a1, a2, v9, a4, a5 & 1, 0, 0);

  return swift_bridgeObjectRelease();
}

void static Analytics.postEvent(_:payload:duration:error:performAutoBugCaptureOnError:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, char a7)
{
}

void static Analytics.postBiomeEventForUncategorizedGroceryItem(item:locale:)()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F4FFD0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v0, sel_initWithItemChanged_originalCategory_destinationCategory_locale_, v1, 0, 0, v2);

  sub_1A74680FC((uint64_t)v3);
}

void static Analytics.postBiomeEventForCorrectedGroceryItem(item:originalCategory:destinationCategory:locale:)()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F4FFD0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v3 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v4 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v0, sel_initWithItemChanged_originalCategory_destinationCategory_locale_, v1, v2, v3, v4);

  sub_1A74680FC((uint64_t)v5);
}

void static Analytics.postEvent(_:payload:error:performAutoBugCaptureOnError:)(uint64_t a1, unint64_t a2, uint64_t a3, id a4, char a5)
{
}

void sub_1A7466ADC(uint64_t a1)
{
  if (qword_1EB705758 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A7571E90();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB701EB8);
  swift_bridgeObjectRetain_n();
  id v3 = sub_1A7571E80();
  os_log_type_t v4 = sub_1A7572FF0();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v10 = v6;
    *(_DWORD *)id v5 = 136315138;
    if (!a1) {
      sub_1A72B10F4(MEMORY[0x1E4FBC860]);
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A7572400();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    sub_1A72D1730(v7, v9, &v10);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v3, v4, "AutoBugCapture did reply {response: %s}", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v6, -1, -1);
    MEMORY[0x1AD0CD330](v5, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1A7466CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2) {
    uint64_t v3 = sub_1A75723F0();
  }
  else {
    uint64_t v3 = 0;
  }
  swift_retain();
  v2(v3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id Analytics.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id Analytics.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Analytics();
  return objc_msgSendSuper2(&v2, sel_init);
}

id Analytics.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Analytics();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall Analytics.postEvent(_:payload:duration:)(Swift::String _, Swift::OpaquePointer_optional payload, Swift::Double_optional duration)
{
  Swift::Bool is_nil = duration.is_nil;
  uint64_t v4 = *(void *)&payload.is_nil;
  object = _._object;
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  if (payload.value._rawValue) {
    uint64_t rawValue = (uint64_t)payload.value._rawValue;
  }
  else {
    uint64_t rawValue = sub_1A72B1658(MEMORY[0x1E4FBC860]);
  }
  swift_bridgeObjectRetain();
  sub_1A7467B18(countAndFlagsBits, (unint64_t)object, rawValue, v4, is_nil, 0, 0);

  swift_bridgeObjectRelease();
}

void Analytics.postEvent(_:payload:duration:error:performAutoBugCaptureOnError:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, char a7)
{
}

void Analytics.postEvent(_:payload:error:performAutoBugCaptureOnError:)(uint64_t a1, unint64_t a2, uint64_t a3, id a4, char a5)
{
}

Swift::Bool __swiftcall Analytics.isEventUsed(_:)(Swift::String a1)
{
  id v1 = (void *)sub_1A75725E0();
  char IsEventUsed = AnalyticsIsEventUsed();

  return IsEventUsed;
}

void sub_1A7466F2C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, char a7)
{
}

void _s19ReminderKitInternal9AnalyticsC9postEventyyAA012REMAnalyticsF0OFZ_0()
{
  unint64_t v0 = REMAnalyticsEvent.id.getter();
  unint64_t v2 = v1;
  REMAnalyticsEvent.payload.getter();
  if (qword_1EB705758 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A7571E90();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB701EB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1A7571E80();
  os_log_type_t v5 = sub_1A7572FF0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = v12;
    *(_DWORD *)uint64_t v6 = 136446466;
    swift_bridgeObjectRetain();
    sub_1A72D1730(v0, v2, &v13);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2082;
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A7572400();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    sub_1A72D1730(v7, v9, &v13);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v4, v5, "Posting analytics {name: %{public}s, payload: %{public}s}", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v12, -1, -1);
    MEMORY[0x1AD0CD330](v6, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
  int v11 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();
}

id sub_1A746720C(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v5 = a1;
  if (!a4)
  {
    swift_bridgeObjectRetain();
    if ((a3 & 1) == 0) {
      goto LABEL_21;
    }
    return (id)v5;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  id v8 = a4;
  if (v7)
  {
    sub_1A72B2210(0x6D6F44726F727265, 0xEB000000006E6961);
    if (v9) {
      goto LABEL_17;
    }
  }
  id result = objc_msgSend(v8, sel_domain);
  if (result)
  {
    uint64_t v11 = (uint64_t)result;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A72D726C(v11, 0x6D6F44726F727265, 0xEB000000006E6961, isUniquelyReferenced_nonNull_native);
    uint64_t v13 = v5;
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_code);
    uint64_t v14 = sub_1A7572D00();
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v34 = v13;
    sub_1A72D726C(v14, 0x646F43726F727265, 0xE900000000000065, v15);
    uint64_t v5 = v13;
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v8, sel_domain);
    uint64_t v17 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v19 = v18;

    if (v17 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v19 == v20)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v21 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0) {
        goto LABEL_17;
      }
    }
    id v22 = objc_msgSend(v8, sel_userInfo);
    uint64_t v23 = sub_1A75723F0();

    uint64_t v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    if (*(void *)(v23 + 16) && (unint64_t v26 = sub_1A72B2210(v24, v25), (v27 & 1) != 0))
    {
      sub_1A72BEE98(*(void *)(v23 + 56) + 32 * v26, (uint64_t)&v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v35 + 1))
      {
        sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1510);
        if (swift_dynamicCast())
        {
          id v28 = v33;
          char v29 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v34 = v5;
          sub_1A72D726C((uint64_t)v28, 0xD000000000000015, 0x80000001A75A3B50, v29);
          uint64_t v5 = v34;

          swift_bridgeObjectRelease();
          if (a3) {
            return (id)v5;
          }
LABEL_21:
          if (!*(void *)(v5 + 16) || (sub_1A72B2210(0x6E6F697461727564, 0xE800000000000000), (v30 & 1) == 0))
          {
            uint64_t v31 = sub_1A7572C10();
            char v32 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v34 = v5;
            sub_1A72D726C(v31, 0x6E6F697461727564, 0xE800000000000000, v32);
            uint64_t v5 = v34;
            swift_bridgeObjectRelease();
          }
          return (id)v5;
        }
LABEL_17:

        if (a3) {
          return (id)v5;
        }
        goto LABEL_21;
      }
    }
    else
    {
      long long v34 = 0u;
      long long v35 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    sub_1A7315924((uint64_t)&v34);
    if ((a3 & 1) == 0) {
      goto LABEL_21;
    }
    return (id)v5;
  }
  __break(1u);
  return result;
}

void sub_1A74675C4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA8AF0]), sel_init);
  uint64_t v6 = (void *)sub_1A75725E0();
  uint64_t v7 = (void *)sub_1A75725E0();
  id v8 = objc_msgSend(a4, sel_domain);
  if (!v8)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    id v8 = (id)sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  aBlock[0] = (uint64_t)objc_msgSend(a4, sel_code);
  sub_1A7573BC0();
  char v9 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(self, sel_processInfo);
  id v11 = objc_msgSend(v10, sel_processName);

  if (!v11)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    id v11 = (id)sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = (void *)sub_1A75725E0();
  id v13 = objc_msgSend(v5, sel_signatureWithDomain_type_subType_subtypeContext_detectedProcess_triggerThresholdValues_, v6, v7, v8, v9, v11, v12);

  if (v13)
  {
    aBlock[0] = 0;
    id v14 = v13;
    sub_1A75723E0();
  }
  if (qword_1EB705758 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1A7571E90();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EB701EB8);
  id v16 = v13;
  uint64_t v17 = sub_1A7571E80();
  os_log_type_t v18 = sub_1A7572FE0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    aBlock[0] = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    if (v13)
    {
      id v21 = objc_msgSend(v16, sel_description);
      uint64_t v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      unint64_t v24 = v23;
    }
    else
    {
      unint64_t v24 = 0xE300000000000000;
      uint64_t v22 = 7104878;
    }
    id aBlock[6] = sub_1A72D1730(v22, v24, aBlock);
    sub_1A7573250();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v17, v18, "Failed to cast signature {signature: %s}", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v20, -1, -1);
    MEMORY[0x1AD0CD330](v19, -1, -1);
  }
  else
  {
  }
}

void sub_1A7467B18(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, id a6, char a7)
{
  char v11 = a5 & 1;
  if (a6)
  {
    id v14 = a6;
    uint64_t v15 = (void *)sub_1A7571840();
    id v16 = sub_1A746720C(a3, a4, v11, v15);
    if (qword_1EB705758 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1A7571E90();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB701EB8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v18 = sub_1A7571E80();
    os_log_type_t v19 = sub_1A7572FD0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v41 = v39;
      *(_DWORD *)uint64_t v20 = 136315394;
      os_log_type_t type = v19;
      swift_bridgeObjectRetain();
      sub_1A72D1730(a1, a2, &v41);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      unint64_t v21 = a2;
      uint64_t v22 = v15;
      uint64_t v23 = a1;
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1A7572400();
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      uint64_t v27 = v24;
      a1 = v23;
      uint64_t v15 = v22;
      a2 = v21;
      sub_1A72D1730(v27, v26, &v41);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v18, type, "Posting analytics error {name: %s, payload: %s}", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v39, -1, -1);
      MEMORY[0x1AD0CD330](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    long long v35 = (void *)sub_1A75725E0();
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
    unint64_t v36 = (void *)sub_1A75723D0();
    AnalyticsSendEvent();

    if (a7) {
      sub_1A74675C4(a1, a2, (uint64_t)v16, v15);
    }

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A746720C(a3, a4, a5 & 1, 0);
    if (qword_1EB705758 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1A7571E90();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EB701EB8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    char v29 = sub_1A7571E80();
    os_log_type_t v30 = sub_1A7572FF0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = v40;
      *(_DWORD *)uint64_t v31 = 136446466;
      swift_bridgeObjectRetain();
      sub_1A72D1730(a1, a2, &v41);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1A7572400();
      unint64_t v34 = v33;
      swift_bridgeObjectRelease();
      sub_1A72D1730(v32, v34, &v41);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v29, v30, "Posting analytics {name: %{public}s, payload: %{public}s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v40, -1, -1);
      MEMORY[0x1AD0CD330](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    unint64_t v37 = (void *)sub_1A75725E0();
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
    uint64_t v15 = (void *)sub_1A75723D0();
    swift_bridgeObjectRelease();
    AnalyticsSendEvent();
  }
}

void sub_1A74680FC(uint64_t a1)
{
  id v2 = objc_msgSend((id)BiomeLibrary(), sel_Reminders);
  swift_unknownObjectRelease();
  id v3 = objc_msgSend(v2, sel_Grocery);
  swift_unknownObjectRelease();
  id v4 = objc_msgSend(v3, sel_MiscategorizedGroceryItem);
  swift_unknownObjectRelease();
  id v5 = objc_msgSend(v4, sel_source);
  if (qword_1EB705758 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1A7571E90();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB701EB8);
  id v7 = v5;
  id v8 = sub_1A7571E80();
  os_log_type_t v9 = sub_1A7572FF0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v17 = a1;
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = v11;
    *(_DWORD *)id v10 = 136446210;
    id v12 = objc_msgSend(v7, sel_identifier);
    uint64_t v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    unint64_t v15 = v14;

    uint64_t v16 = v13;
    a1 = v17;
    sub_1A72D1730(v16, v15, &v18);
    sub_1A7573250();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v8, v9, "Donating event to {name: %{public}s}", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v11, -1, -1);
    MEMORY[0x1AD0CD330](v10, -1, -1);
  }
  else
  {
  }
  objc_msgSend(v7, sel_sendEvent_, a1);
}

uint64_t type metadata accessor for Analytics()
{
  return self;
}

uint64_t dispatch thunk of AnalyticsType.postEvent(_:payload:duration:error:performAutoBugCaptureOnError:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(a9 + 8))(a1, a2, a3, a4, a5 & 1);
}

uint64_t sub_1A74683D0()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F3C90);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F3C90);
  if (qword_1EB7042A8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F18);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void static REMSuggestedAttributesTrainer.train(in:parameters:)(long long *a1@<X1>, void *a2@<X8>)
{
  long long v4 = a1[9];
  v16[8] = a1[8];
  v17[0] = v4;
  *(_OWORD *)((char *)v17 + 9) = *(long long *)((char *)a1 + 153);
  long long v5 = a1[5];
  v16[4] = a1[4];
  v16[5] = v5;
  long long v6 = a1[7];
  v16[6] = a1[6];
  v16[7] = v6;
  long long v7 = a1[1];
  v16[0] = *a1;
  v16[1] = v7;
  long long v8 = a1[3];
  v16[2] = a1[2];
  v16[3] = v8;
  id v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (qword_1E96F08A0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1A7571E90();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E96F3C90);
  uint64_t v11 = sub_1A7571E80();
  os_log_type_t v12 = sub_1A7572FF0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1A72A1000, v11, v12, "REMSuggestedAttributesTrainer init (train())", v13, 2u);
    MEMORY[0x1AD0CD330](v13, -1, -1);
  }

  sub_1A7301508((uint64_t)v9, v16, __src);
  if (!v2)
  {
    memcpy(v14, __src, sizeof(v14));
    sub_1A73167B4((uint64_t)v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A73162A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1A73163B0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, char))sub_1A7316400, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1A73166C4);
    sub_1A7468690((uint64_t)v14);
    memcpy(a2, v14, 0x318uLL);
  }
}

uint64_t sub_1A7468690(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 176);
  uint64_t v3 = *(void *)(a1 + 184);
  uint64_t v28 = *(void *)(a1 + 192);
  uint64_t v27 = *(void *)(a1 + 200);
  uint64_t v26 = *(void *)(a1 + 208);
  uint64_t v4 = *(void *)(a1 + 224);
  uint64_t v25 = *(void *)(a1 + 216);
  char v5 = *(unsigned char *)(a1 + 232);
  uint64_t v56 = *(void *)(a1 + 240);
  uint64_t v55 = *(void *)(a1 + 248);
  uint64_t v54 = *(void *)(a1 + 256);
  uint64_t v53 = *(void *)(a1 + 264);
  uint64_t v52 = *(void *)(a1 + 272);
  uint64_t v51 = *(void *)(a1 + 280);
  uint64_t v50 = *(void *)(a1 + 288);
  uint64_t v49 = *(void *)(a1 + 296);
  long long v47 = *(_OWORD *)(a1 + 320);
  long long v48 = *(_OWORD *)(a1 + 304);
  long long v45 = *(_OWORD *)(a1 + 352);
  long long v46 = *(_OWORD *)(a1 + 336);
  long long v43 = *(_OWORD *)(a1 + 384);
  long long v44 = *(_OWORD *)(a1 + 368);
  long long v42 = *(_OWORD *)(a1 + 400);
  long long v39 = *(_OWORD *)(a1 + 432);
  long long v40 = *(_OWORD *)(a1 + 416);
  long long v38 = *(_OWORD *)(a1 + 448);
  long long v33 = *(_OWORD *)(a1 + 464);
  long long v23 = *(_OWORD *)(a1 + 496);
  long long v24 = *(_OWORD *)(a1 + 480);
  long long v21 = *(_OWORD *)(a1 + 528);
  long long v22 = *(_OWORD *)(a1 + 512);
  long long v19 = *(_OWORD *)(a1 + 560);
  long long v20 = *(_OWORD *)(a1 + 544);
  long long v17 = *(_OWORD *)(a1 + 592);
  long long v18 = *(_OWORD *)(a1 + 576);
  long long v15 = *(_OWORD *)(a1 + 624);
  long long v16 = *(_OWORD *)(a1 + 608);
  long long v13 = *(_OWORD *)(a1 + 656);
  long long v14 = *(_OWORD *)(a1 + 640);
  long long v12 = *(_OWORD *)(a1 + 672);
  uint64_t v6 = *(void *)(a1 + 688);
  uint64_t v7 = *(void *)(a1 + 696);
  char v8 = *(unsigned char *)(a1 + 704);
  char v9 = *(unsigned char *)(a1 + 777);
  uint64_t v29 = *(void *)(a1 + 712);
  uint64_t v30 = *(void *)(a1 + 720);
  uint64_t v31 = *(void *)(a1 + 728);
  uint64_t v32 = *(void *)(a1 + 736);
  uint64_t v34 = *(void *)(a1 + 744);
  uint64_t v35 = *(void *)(a1 + 752);
  uint64_t v36 = *(void *)(a1 + 760);
  uint64_t v37 = *(void *)(a1 + 768);
  char v10 = *(unsigned char *)(a1 + 776);
  uint64_t v41 = *(void **)(a1 + 792);
  sub_1A7316AC4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(unsigned char *)(a1 + 168));
  sub_1A7316BCC(v2, v3, v28, v27, v26, v25, v4, v5);
  sub_1A7316C1C(v56, v55, v54, v53, v52, v51, v50, v49, v48, *((uint64_t *)&v48 + 1), v47, *((uint64_t *)&v47 + 1), v46, *((uint64_t *)&v46 + 1), v45, *((uint64_t *)&v45 + 1), v44, *((uint64_t *)&v44 + 1), v43,
    *((uint64_t *)&v43 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v6,
    v7,
    v8);
  sub_1A7316EE0(v29, v30, v31, v32, v34, v35, v36, v37, v10, v9);

  return a1;
}

uint64_t static REMSuggestedAttributesTrainer.supportsSecureCoding.getter()
{
  return 1;
}

id REMSuggestedAttributesTrainer.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMSuggestedAttributesTrainer.init(coder:)(void *a1)
{
  id v3 = objc_msgSend(v1, sel_init);

  return v3;
}

id REMSuggestedAttributesTrainer.__deallocating_deinit()
{
  uint64_t v1 = v0;
  Class ObjectType = (objc_class *)swift_getObjectType();
  if (qword_1E96F08A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A7571E90();
  __swift_project_value_buffer(v3, (uint64_t)qword_1E96F3C90);
  uint64_t v4 = sub_1A7571E80();
  os_log_type_t v5 = sub_1A7572FF0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1A72A1000, v4, v5, "REMSuggestedAttributesTrainer deinit", v6, 2u);
    MEMORY[0x1AD0CD330](v6, -1, -1);
  }

  v8.receiver = v1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_dealloc);
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.listAccuracy.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 80);
  long long v3 = *(_OWORD *)(v1 + 112);
  long long v19 = *(_OWORD *)(v1 + 96);
  long long v20 = v3;
  long long v4 = *(_OWORD *)(v1 + 16);
  long long v5 = *(_OWORD *)(v1 + 48);
  long long v15 = *(_OWORD *)(v1 + 32);
  long long v6 = v15;
  long long v16 = v5;
  long long v7 = *(_OWORD *)(v1 + 48);
  long long v8 = *(_OWORD *)(v1 + 80);
  long long v17 = *(_OWORD *)(v1 + 64);
  long long v9 = v17;
  long long v18 = v8;
  long long v10 = *(_OWORD *)(v1 + 16);
  v14[0] = *(_OWORD *)v1;
  long long v11 = v14[0];
  v14[1] = v10;
  long long v12 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v21 = *(void *)(v1 + 128);
  *(void *)(a1 + 128) = *(void *)(v1 + 128);
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v4;
  return sub_1A72A8234((uint64_t)v14);
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.skippedRemindersCount.getter()
{
  return *(void *)(v0 + 136);
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.trainingSetCount.getter()
{
  return *(void *)(v0 + 144);
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.validationSetCount.getter()
{
  return *(void *)(v0 + 152);
}

double REMSuggestedAttributesTrainer.Result.Embedding.trainingDuration.getter()
{
  return *(double *)(v0 + 160);
}

void __swiftcall REMSuggestedAttributesTrainer.Result.Embedding.init(listAccuracy:skippedRemindersCount:trainingSetCount:validationSetCount:trainingDuration:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Result::Embedding *__return_ptr retstr, ReminderKitInternal::REMSuggestedAttributesAccuracy *listAccuracy, Swift::Int skippedRemindersCount, Swift::Int trainingSetCount, Swift::Int validationSetCount, Swift::Double trainingDuration)
{
  long long v6 = *(_OWORD *)&listAccuracy->metrics.precision;
  *(_OWORD *)&retstr->listAccuracy.metrics.typeIIErrors._uint64_t rawValue = *(_OWORD *)&listAccuracy->metrics.typeIIErrors._rawValue;
  *(_OWORD *)&retstr->listAccuracy.metrics.precision = v6;
  uint64_t rawValue = listAccuracy->metrics.indexedClasses._rawValue;
  long long v8 = *(_OWORD *)&listAccuracy->metrics.trueNegatives._rawValue;
  *(_OWORD *)&retstr->listAccuracy.metrics.confusionMatrix._uint64_t rawValue = *(_OWORD *)&listAccuracy->metrics.confusionMatrix._rawValue;
  *(_OWORD *)&retstr->listAccuracy.metrics.trueNegatives._uint64_t rawValue = v8;
  long long v9 = *(_OWORD *)&listAccuracy->metrics.recalls._rawValue;
  *(_OWORD *)&retstr->listAccuracy.metrics.falseNegatives._uint64_t rawValue = *(_OWORD *)&listAccuracy->metrics.falseNegatives._rawValue;
  *(_OWORD *)&retstr->listAccuracy.metrics.recalls._uint64_t rawValue = v9;
  long long v10 = *(_OWORD *)&listAccuracy->metrics.correctIndices._rawValue;
  *(_OWORD *)&retstr->listAccuracy.correctSample._uint64_t rawValue = *(_OWORD *)&listAccuracy->correctSample._rawValue;
  *(_OWORD *)&retstr->listAccuracy.metrics.correctIndices._uint64_t rawValue = v10;
  retstr->listAccuracy.metrics.indexedClasses._uint64_t rawValue = rawValue;
  retstr->skippedRemindersCount = skippedRemindersCount;
  retstr->trainingSetCount = trainingSetCount;
  retstr->validationSetCount = validationSetCount;
  retstr->trainingDuration = trainingDuration;
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.droppingSensitiveFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v8 = *(void *)(v1 + 72);
  uint64_t v11 = *(void *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 88);
  uint64_t v12 = *(void *)(v1 + 120);
  uint64_t v13 = *(void *)(v1 + 128);
  uint64_t v18 = *(void *)(v1 + 96);
  uint64_t v14 = *(void *)(v1 + 152);
  uint64_t v15 = *(void *)(v1 + 160);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = v16;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v18;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(v1 + 104);
  *(void *)(a1 + 120) = v12;
  *(void *)(a1 + 128) = v13;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(v1 + 136);
  *(void *)(a1 + 152) = v14;
  *(void *)(a1 + 160) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

unint64_t sub_1A7468E34(char a1)
{
  unint64_t result = 0x756363417473696CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A7468EF0()
{
  return sub_1A7468E34(*v0);
}

uint64_t sub_1A7468EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74754C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A7468F20(uint64_t a1)
{
  unint64_t v2 = sub_1A7473F64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7468F5C(uint64_t a1)
{
  unint64_t v2 = sub_1A7473F64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3CA8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *((void *)v3 + 17);
  v15[1] = *((void *)v3 + 18);
  v15[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7473F64();
  sub_1A75741B0();
  long long v10 = v3[7];
  long long v23 = v3[6];
  long long v24 = v10;
  uint64_t v25 = *((void *)v3 + 16);
  long long v11 = v3[3];
  long long v19 = v3[2];
  long long v20 = v11;
  long long v12 = v3[5];
  long long v21 = v3[4];
  long long v22 = v12;
  long long v13 = v3[1];
  long long v17 = *v3;
  long long v18 = v13;
  char v16 = 0;
  sub_1A7473FB8();
  sub_1A7573B60();
  if (!v2)
  {
    LOBYTE(v17) = 1;
    sub_1A7573B40();
    LOBYTE(v17) = 2;
    sub_1A7573B40();
    LOBYTE(v17) = 3;
    sub_1A7573B40();
    LOBYTE(v17) = 4;
    sub_1A7573B30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3CC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1A7473F64();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  uint64_t v10 = v6;
  char v42 = 0;
  sub_1A747400C();
  uint64_t v11 = v5;
  sub_1A7573A50();
  long long v39 = v49;
  long long v40 = v50;
  long long v35 = v45;
  long long v36 = v46;
  long long v37 = v47;
  long long v38 = v48;
  long long v33 = v43;
  long long v34 = v44;
  long long v58 = v49;
  long long v59 = v50;
  long long v54 = v45;
  long long v55 = v46;
  long long v56 = v47;
  long long v57 = v48;
  uint64_t v41 = v51;
  uint64_t v60 = v51;
  long long v52 = v43;
  long long v53 = v44;
  LOBYTE(v26[0]) = 1;
  sub_1A72A8234((uint64_t)&v33);
  uint64_t v12 = sub_1A7573A30();
  LOBYTE(v26[0]) = 2;
  uint64_t v13 = sub_1A7573A30();
  LOBYTE(v26[0]) = 3;
  uint64_t v24 = sub_1A7573A30();
  char v32 = 4;
  sub_1A7573A20();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v11);
  long long v17 = v40;
  *(_OWORD *)(a2 + 96) = v39;
  *(_OWORD *)(a2 + 112) = v17;
  uint64_t v18 = v41;
  long long v19 = v36;
  *(_OWORD *)(a2 + 32) = v35;
  *(_OWORD *)(a2 + 48) = v19;
  long long v20 = v38;
  *(_OWORD *)(a2 + 64) = v37;
  *(_OWORD *)(a2 + 80) = v20;
  long long v21 = v34;
  *(_OWORD *)a2 = v33;
  *(_OWORD *)(a2 + 16) = v21;
  *(void *)(a2 + 128) = v18;
  *(void *)(a2 + 136) = v12;
  uint64_t v23 = v24;
  uint64_t v22 = (uint64_t)v25;
  *(void *)(a2 + 144) = v13;
  *(void *)(a2 + 152) = v23;
  *(void *)(a2 + 160) = v16;
  __swift_destroy_boxed_opaque_existential_1(v22);
  v26[6] = v58;
  v26[7] = v59;
  v26[2] = v54;
  v26[3] = v55;
  v26[4] = v56;
  v26[5] = v57;
  v26[0] = v52;
  v26[1] = v53;
  uint64_t v27 = v60;
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  uint64_t v30 = v23;
  uint64_t v31 = v16;
  return sub_1A72A8318((uint64_t)v26);
}

uint64_t sub_1A746954C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.Embedding.init(from:)(a1, a2);
}

uint64_t sub_1A7469564(void *a1)
{
  return REMSuggestedAttributesTrainer.Result.Embedding.encode(to:)(a1);
}

double REMSuggestedAttributesTrainer.Result.AnchoredBubble.precision.getter()
{
  return *(double *)v0;
}

double REMSuggestedAttributesTrainer.Result.AnchoredBubble.recall.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t REMSuggestedAttributesTrainer.Result.AnchoredBubble.skippedRemindersCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t REMSuggestedAttributesTrainer.Result.AnchoredBubble.trainingSetCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t REMSuggestedAttributesTrainer.Result.AnchoredBubble.validationSetCount.getter()
{
  return *(void *)(v0 + 32);
}

double REMSuggestedAttributesTrainer.Result.AnchoredBubble.trainingDuration.getter()
{
  return *(double *)(v0 + 40);
}

void __swiftcall REMSuggestedAttributesTrainer.Result.AnchoredBubble.init(precision:recall:skippedRemindersCount:trainingSetCount:validationSetCount:trainingDuration:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Result::AnchoredBubble *__return_ptr retstr, Swift::Double precision, Swift::Double recall, Swift::Int skippedRemindersCount, Swift::Int trainingSetCount, Swift::Int validationSetCount, Swift::Double trainingDuration)
{
  retstr->precision = precision;
  retstr->recall = recall;
  retstr->skippedRemindersCount = skippedRemindersCount;
  retstr->trainingSetCount = trainingSetCount;
  retstr->validationSetCount = validationSetCount;
  retstr->trainingDuration = trainingDuration;
}

double REMSuggestedAttributesTrainer.Result.AnchoredBubble.droppingSensitiveFields.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  double result = *(double *)(v1 + 40);
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  *(double *)(a1 + 40) = result;
  return result;
}

unint64_t sub_1A74695DC(char a1)
{
  unint64_t result = 0x6F69736963657270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6C61636572;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A74696AC()
{
  return sub_1A74695DC(*v0);
}

uint64_t sub_1A74696B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74756D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A74696DC(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1A74696E8(uint64_t a1)
{
  unint64_t v2 = sub_1A7474060();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7469724(uint64_t a1)
{
  unint64_t v2 = sub_1A7474060();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesTrainer.Result.AnchoredBubble.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3CD0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7474060();
  sub_1A75741B0();
  char v16 = 0;
  sub_1A7573B30();
  if (!v2)
  {
    char v15 = 1;
    sub_1A7573B30();
    char v14 = 2;
    sub_1A7573B40();
    char v13 = 3;
    sub_1A7573B40();
    char v12 = 4;
    sub_1A7573B40();
    char v11 = 5;
    sub_1A7573B30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Result.AnchoredBubble.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3CE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7474060();
  sub_1A7574190();
  if (!v2)
  {
    char v24 = 0;
    sub_1A7573A20();
    uint64_t v10 = v9;
    char v23 = 1;
    sub_1A7573A20();
    uint64_t v12 = v11;
    char v22 = 2;
    uint64_t v13 = sub_1A7573A30();
    char v21 = 3;
    uint64_t v14 = sub_1A7573A30();
    char v20 = 4;
    uint64_t v18 = sub_1A7573A30();
    char v19 = 5;
    sub_1A7573A20();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v13;
    a2[3] = v14;
    a2[4] = v18;
    a2[5] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A7469BEC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.AnchoredBubble.init(from:)(a1, a2);
}

uint64_t sub_1A7469C04(void *a1)
{
  return REMSuggestedAttributesTrainer.Result.AnchoredBubble.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.listAccuracy.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 80);
  long long v3 = *(_OWORD *)(v1 + 112);
  long long v19 = *(_OWORD *)(v1 + 96);
  long long v20 = v3;
  long long v4 = *(_OWORD *)(v1 + 16);
  long long v5 = *(_OWORD *)(v1 + 48);
  long long v15 = *(_OWORD *)(v1 + 32);
  long long v6 = v15;
  long long v16 = v5;
  long long v7 = *(_OWORD *)(v1 + 48);
  long long v8 = *(_OWORD *)(v1 + 80);
  long long v17 = *(_OWORD *)(v1 + 64);
  long long v9 = v17;
  long long v18 = v8;
  long long v10 = *(_OWORD *)(v1 + 16);
  v14[0] = *(_OWORD *)v1;
  long long v11 = v14[0];
  v14[1] = v10;
  long long v12 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v21 = *(void *)(v1 + 128);
  *(void *)(a1 + 128) = *(void *)(v1 + 128);
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v4;
  return sub_1A72A8234((uint64_t)v14);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.dueDayOfWeekAccuracy.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 216);
  long long v3 = *(_OWORD *)(v1 + 248);
  v11[6] = *(_OWORD *)(v1 + 232);
  v11[7] = v3;
  uint64_t v12 = *(void *)(v1 + 264);
  long long v4 = *(_OWORD *)(v1 + 152);
  long long v5 = *(_OWORD *)(v1 + 184);
  v11[2] = *(_OWORD *)(v1 + 168);
  v11[3] = v5;
  v11[4] = *(_OWORD *)(v1 + 200);
  v11[5] = v2;
  v11[0] = *(_OWORD *)(v1 + 136);
  v11[1] = v4;
  long long v6 = *(_OWORD *)(v1 + 216);
  long long v7 = *(_OWORD *)(v1 + 248);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 232);
  *(_OWORD *)(a1 + 112) = v7;
  *(void *)(a1 + 128) = *(void *)(v1 + 264);
  long long v8 = *(_OWORD *)(v1 + 152);
  long long v9 = *(_OWORD *)(v1 + 184);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 200);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(a1 + 16) = v8;
  return sub_1A72A8234((uint64_t)v11);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.alarmLocationAccuracy.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 352);
  long long v3 = *(_OWORD *)(v1 + 384);
  long long v19 = *(_OWORD *)(v1 + 368);
  long long v20 = v3;
  long long v4 = *(_OWORD *)(v1 + 288);
  long long v5 = *(_OWORD *)(v1 + 320);
  long long v15 = *(_OWORD *)(v1 + 304);
  long long v6 = v15;
  long long v16 = v5;
  long long v7 = *(_OWORD *)(v1 + 320);
  long long v8 = *(_OWORD *)(v1 + 352);
  long long v17 = *(_OWORD *)(v1 + 336);
  long long v9 = v17;
  long long v18 = v8;
  long long v10 = *(_OWORD *)(v1 + 288);
  v14[0] = *(_OWORD *)(v1 + 272);
  long long v11 = v14[0];
  v14[1] = v10;
  long long v12 = *(_OWORD *)(v1 + 384);
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v21 = *(void *)(v1 + 400);
  *(void *)(a1 + 128) = *(void *)(v1 + 400);
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v4;
  return sub_1A72A8234((uint64_t)v14);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.minedRuleCount.getter()
{
  return *(void *)(v0 + 408);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.filteredOutRulesCount.getter()
{
  return *(void *)(v0 + 416);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.trainingSetCount.getter()
{
  return *(void *)(v0 + 424);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.validationSetCount.getter()
{
  return *(void *)(v0 + 432);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.distinctListCount.getter()
{
  return *(void *)(v0 + 440);
}

double REMSuggestedAttributesTrainer.Result.CoreBehavior.trainingDuration.getter()
{
  return *(double *)(v0 + 448);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.topRules.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall REMSuggestedAttributesTrainer.Result.CoreBehavior.init(listAccuracy:dueDayOfWeekAccuracy:alarmLocationAccuracy:minedRuleCount:filteredOutRulesCount:distinctListCount:trainingSetCount:validationSetCount:trainingDuration:topRules:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Result::CoreBehavior *__return_ptr retstr, ReminderKitInternal::REMSuggestedAttributesAccuracy *listAccuracy, ReminderKitInternal::REMSuggestedAttributesAccuracy *dueDayOfWeekAccuracy, ReminderKitInternal::REMSuggestedAttributesAccuracy *alarmLocationAccuracy, Swift::Int minedRuleCount, Swift::Int filteredOutRulesCount, Swift::Int distinctListCount, Swift::Int trainingSetCount, Swift::Int validationSetCount, Swift::Double trainingDuration, Swift::OpaquePointer topRules)
{
  long long v18 = *(_OWORD *)&listAccuracy->metrics.precision;
  v31[6] = *(_OWORD *)&listAccuracy->metrics.typeIIErrors._rawValue;
  v31[7] = v18;
  long long v19 = *(_OWORD *)&listAccuracy->metrics.trueNegatives._rawValue;
  v31[2] = *(_OWORD *)&listAccuracy->metrics.confusionMatrix._rawValue;
  v31[3] = v19;
  long long v20 = *(_OWORD *)&listAccuracy->metrics.recalls._rawValue;
  v31[4] = *(_OWORD *)&listAccuracy->metrics.falseNegatives._rawValue;
  v31[5] = v20;
  long long v21 = *(_OWORD *)&listAccuracy->metrics.correctIndices._rawValue;
  v31[0] = *(_OWORD *)&listAccuracy->correctSample._rawValue;
  v31[1] = v21;
  long long v22 = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.falseNegatives._rawValue;
  *(_OWORD *)((char *)&v31[13] + 8) = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.recalls._rawValue;
  long long v23 = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.precision;
  *(_OWORD *)((char *)&v31[14] + 8) = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.typeIIErrors._rawValue;
  *(_OWORD *)((char *)&v31[15] + 8) = v23;
  long long v24 = *(_OWORD *)&dueDayOfWeekAccuracy->correctSample._rawValue;
  *(_OWORD *)((char *)&v31[9] + 8) = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.correctIndices._rawValue;
  long long v25 = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.trueNegatives._rawValue;
  *(_OWORD *)((char *)&v31[10] + 8) = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.confusionMatrix._rawValue;
  *(_OWORD *)((char *)&v31[11] + 8) = v25;
  uint64_t rawValue = dueDayOfWeekAccuracy->metrics.indexedClasses._rawValue;
  *(void *)&v31[8] = listAccuracy->metrics.indexedClasses._rawValue;
  *((void *)&v31[16] + 1) = rawValue;
  *(_OWORD *)((char *)&v31[12] + 8) = v22;
  *(_OWORD *)((char *)&v31[8] + 8) = v24;
  long long v27 = *(_OWORD *)&alarmLocationAccuracy->metrics.precision;
  v31[23] = *(_OWORD *)&alarmLocationAccuracy->metrics.typeIIErrors._rawValue;
  v31[24] = v27;
  *(void *)&v31[25] = alarmLocationAccuracy->metrics.indexedClasses._rawValue;
  long long v28 = *(_OWORD *)&alarmLocationAccuracy->metrics.trueNegatives._rawValue;
  v31[19] = *(_OWORD *)&alarmLocationAccuracy->metrics.confusionMatrix._rawValue;
  v31[20] = v28;
  long long v29 = *(_OWORD *)&alarmLocationAccuracy->metrics.recalls._rawValue;
  v31[21] = *(_OWORD *)&alarmLocationAccuracy->metrics.falseNegatives._rawValue;
  v31[22] = v29;
  long long v30 = *(_OWORD *)&alarmLocationAccuracy->metrics.correctIndices._rawValue;
  v31[17] = *(_OWORD *)&alarmLocationAccuracy->correctSample._rawValue;
  v31[18] = v30;
  memcpy(retstr, v31, 0x198uLL);
  retstr->minedRuleCount = minedRuleCount;
  retstr->filteredOutRulesCount = filteredOutRulesCount;
  retstr->trainingSetCount = trainingSetCount;
  retstr->validationSetCount = validationSetCount;
  retstr->distinctListCount = distinctListCount;
  retstr->trainingDuration = trainingDuration;
  retstr->topRules = topRules;
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.droppingSensitiveFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v41 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v9 = *(void *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 88);
  uint64_t v11 = *(void *)(v1 + 96);
  uint64_t v12 = *(void *)(v1 + 120);
  uint64_t v13 = *(void *)(v1 + 128);
  uint64_t v45 = *(void *)(v1 + 160);
  uint64_t v46 = *(void *)(v1 + 152);
  uint64_t v43 = *(void *)(v1 + 176);
  uint64_t v44 = *(void *)(v1 + 168);
  uint64_t v42 = *(void *)(v1 + 184);
  uint64_t v29 = *(void *)(v1 + 192);
  uint64_t v30 = *(void *)(v1 + 200);
  uint64_t v31 = *(void *)(v1 + 208);
  uint64_t v32 = *(void *)(v1 + 216);
  uint64_t v33 = *(void *)(v1 + 224);
  uint64_t v34 = *(void *)(v1 + 232);
  uint64_t v14 = *(void *)(v1 + 256);
  uint64_t v15 = *(void *)(v1 + 264);
  uint64_t v16 = *(void *)(v1 + 288);
  uint64_t v47 = *(void *)(v1 + 296);
  uint64_t v17 = *(void *)(v1 + 408);
  uint64_t v18 = *(void *)(v1 + 400);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = v19;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 136) = v19;
  *(void *)(a1 + 144) = v19;
  *(void *)(a1 + 264) = v15;
  *(void *)(a1 + 272) = v19;
  *(void *)(a1 + 280) = v19;
  *(void *)(a1 + 400) = v18;
  *(void *)(a1 + 408) = v17;
  *(void *)(a1 + 456) = v19;
  uint64_t v20 = *(void *)(v1 + 304);
  uint64_t v35 = *(void *)(v1 + 312);
  uint64_t v21 = *(void *)(v1 + 376);
  uint64_t v22 = *(void *)(v1 + 448);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(v1 + 104);
  *(void *)(a1 + 120) = v12;
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(v1 + 240);
  *(void *)(a1 + 256) = v14;
  long long v23 = *(_OWORD *)(v1 + 384);
  long long v24 = *(_OWORD *)(v1 + 416);
  long long v25 = *(_OWORD *)(v1 + 432);
  uint64_t v26 = *(void *)(v1 + 320);
  uint64_t v36 = *(void *)(v1 + 328);
  uint64_t v37 = *(void *)(v1 + 336);
  uint64_t v38 = *(void *)(v1 + 344);
  uint64_t v39 = *(void *)(v1 + 352);
  uint64_t v40 = *(void *)(v1 + 360);
  uint64_t v27 = *(void *)(v1 + 368);
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v41;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 152) = v46;
  *(void *)(a1 + 160) = v45;
  *(void *)(a1 + 168) = v44;
  *(void *)(a1 + 176) = v43;
  *(void *)(a1 + 184) = v42;
  *(void *)(a1 + 192) = v29;
  *(void *)(a1 + 200) = v30;
  *(void *)(a1 + 208) = v31;
  *(void *)(a1 + 216) = v32;
  *(void *)(a1 + 224) = v33;
  *(void *)(a1 + 232) = v34;
  *(void *)(a1 + 288) = v16;
  *(void *)(a1 + 296) = v47;
  *(void *)(a1 + 304) = v20;
  *(void *)(a1 + 312) = v35;
  *(void *)(a1 + 320) = v26;
  *(void *)(a1 + 328) = v36;
  *(void *)(a1 + 336) = v37;
  *(void *)(a1 + 344) = v38;
  *(void *)(a1 + 352) = v39;
  *(void *)(a1 + 360) = v40;
  *(void *)(a1 + 368) = v27;
  *(void *)(a1 + 376) = v21;
  *(_OWORD *)(a1 + 384) = v23;
  *(_OWORD *)(a1 + 416) = v24;
  *(_OWORD *)(a1 + 432) = v25;
  *(void *)(a1 + 448) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

unint64_t sub_1A746A1CC(char a1)
{
  unint64_t result = 0x756363417473696CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x6C755264656E696DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0x73656C7552706F74;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A746A324()
{
  return sub_1A746A1CC(*v0);
}

uint64_t sub_1A746A32C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A747593C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A746A354(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1A746A360(uint64_t a1)
{
  unint64_t v2 = sub_1A74740B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A746A39C(uint64_t a1)
{
  unint64_t v2 = sub_1A74740B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3CE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *((void *)v3 + 51);
  uint64_t v27 = *((void *)v3 + 52);
  uint64_t v26 = *((void *)v3 + 53);
  uint64_t v25 = *((void *)v3 + 54);
  uint64_t v24 = *((void *)v3 + 55);
  uint64_t v23 = *((void *)v3 + 57);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74740B4();
  sub_1A75741B0();
  long long v9 = v3[7];
  long long v36 = v3[6];
  long long v37 = v9;
  uint64_t v38 = *((void *)v3 + 16);
  long long v10 = v3[3];
  long long v32 = v3[2];
  long long v33 = v10;
  long long v11 = v3[5];
  long long v34 = v3[4];
  long long v35 = v11;
  long long v12 = v3[1];
  long long v30 = *v3;
  long long v31 = v12;
  char v29 = 0;
  sub_1A7473FB8();
  sub_1A7573B60();
  if (!v2)
  {
    long long v14 = *(long long *)((char *)v3 + 216);
    long long v15 = *(long long *)((char *)v3 + 248);
    long long v36 = *(long long *)((char *)v3 + 232);
    long long v37 = v15;
    uint64_t v38 = *((void *)v3 + 33);
    long long v16 = *(long long *)((char *)v3 + 152);
    long long v17 = *(long long *)((char *)v3 + 184);
    long long v32 = *(long long *)((char *)v3 + 168);
    long long v33 = v17;
    long long v34 = *(long long *)((char *)v3 + 200);
    long long v35 = v14;
    long long v30 = *(long long *)((char *)v3 + 136);
    long long v31 = v16;
    char v29 = 1;
    sub_1A7573B60();
    long long v18 = v3[24];
    long long v36 = v3[23];
    long long v37 = v18;
    uint64_t v38 = *((void *)v3 + 50);
    long long v19 = v3[20];
    long long v32 = v3[19];
    long long v33 = v19;
    long long v20 = v3[22];
    long long v34 = v3[21];
    long long v35 = v20;
    long long v21 = v3[18];
    long long v30 = v3[17];
    long long v31 = v21;
    char v29 = 2;
    sub_1A7573B60();
    LOBYTE(v30) = 3;
    sub_1A7573B40();
    LOBYTE(v30) = 4;
    sub_1A7573B40();
    LOBYTE(v30) = 5;
    sub_1A7573B40();
    LOBYTE(v30) = 6;
    sub_1A7573B40();
    LOBYTE(v30) = 7;
    sub_1A7573B40();
    LOBYTE(v30) = 8;
    sub_1A7573B30();
    *(void *)&long long v30 = v23;
    char v29 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A7474658(&qword_1EB7003D8, &qword_1EB704AC0);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3CF8);
  uint64_t v5 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74740B4();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  long long v20 = a2;
  uint64_t v21 = v5;
  char v81 = 0;
  sub_1A747400C();
  sub_1A7573A50();
  long long v78 = v88;
  long long v79 = v89;
  long long v74 = v84;
  long long v75 = v85;
  long long v77 = v87;
  long long v76 = v86;
  long long v73 = v83;
  long long v72 = v82;
  v91[6] = v88;
  v91[7] = v89;
  v91[2] = v84;
  v91[3] = v85;
  v91[5] = v87;
  v91[4] = v86;
  uint64_t v80 = v90;
  *(void *)&v91[8] = v90;
  v91[1] = v83;
  v91[0] = v82;
  char v62 = 1;
  sub_1A72A8234((uint64_t)&v72);
  sub_1A7573A50();
  long long v59 = v69;
  long long v60 = v70;
  long long v55 = v65;
  long long v56 = v66;
  long long v58 = v68;
  long long v57 = v67;
  long long v54 = v64;
  long long v53 = v63;
  *(_OWORD *)((char *)&v91[13] + 8) = v68;
  *(_OWORD *)((char *)&v91[14] + 8) = v69;
  *(_OWORD *)((char *)&v91[15] + 8) = v70;
  *(_OWORD *)((char *)&v91[9] + 8) = v64;
  *(_OWORD *)((char *)&v91[10] + 8) = v65;
  *(_OWORD *)((char *)&v91[11] + 8) = v66;
  *(_OWORD *)((char *)&v91[12] + 8) = v67;
  uint64_t v61 = v71;
  *((void *)&v91[16] + 1) = v71;
  *(_OWORD *)((char *)&v91[8] + 8) = v63;
  char v43 = 2;
  sub_1A72A8234((uint64_t)&v53);
  sub_1A7573A50();
  long long v40 = v50;
  long long v41 = v51;
  long long v36 = v46;
  long long v37 = v47;
  long long v39 = v49;
  long long v38 = v48;
  long long v34 = v44;
  long long v35 = v45;
  v91[23] = v50;
  v91[24] = v51;
  v91[19] = v46;
  v91[20] = v47;
  v91[22] = v49;
  v91[21] = v48;
  uint64_t v42 = v52;
  *(void *)&v91[25] = v52;
  v91[18] = v45;
  v91[17] = v44;
  v24[0] = 3;
  sub_1A72A8234((uint64_t)&v34);
  uint64_t v8 = sub_1A7573A30();
  v24[0] = 4;
  uint64_t v9 = sub_1A7573A30();
  v24[0] = 5;
  uint64_t v19 = sub_1A7573A30();
  v24[0] = 6;
  uint64_t v18 = sub_1A7573A30();
  v24[0] = 7;
  uint64_t v17 = sub_1A7573A30();
  v24[0] = 8;
  sub_1A7573A20();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  char v32 = 9;
  sub_1A7474658(&qword_1EB700070, &qword_1EB704AC0);
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  v23[6] = v78;
  v23[7] = v79;
  v23[2] = v74;
  v23[3] = v75;
  v23[4] = v76;
  v23[5] = v77;
  v23[0] = v72;
  v23[1] = v73;
  *(_OWORD *)((char *)&v23[13] + 8) = v58;
  *(_OWORD *)((char *)&v23[14] + 8) = v59;
  *(_OWORD *)((char *)&v23[15] + 8) = v60;
  *(_OWORD *)((char *)&v23[9] + 8) = v54;
  *(_OWORD *)((char *)&v23[10] + 8) = v55;
  *(_OWORD *)((char *)&v23[11] + 8) = v56;
  uint64_t v12 = v33;
  *(void *)&v23[8] = v80;
  *((void *)&v23[16] + 1) = v61;
  *(_OWORD *)((char *)&v23[12] + 8) = v57;
  *(_OWORD *)((char *)&v23[8] + 8) = v53;
  v23[23] = v40;
  v23[24] = v41;
  v23[19] = v36;
  v23[20] = v37;
  v23[21] = v38;
  v23[22] = v39;
  v23[17] = v34;
  v23[18] = v35;
  *(void *)&v23[25] = v42;
  *((void *)&v23[25] + 1) = v8;
  uint64_t v14 = v18;
  uint64_t v13 = v19;
  *(void *)&v23[26] = v9;
  *((void *)&v23[26] + 1) = v19;
  uint64_t v15 = v17;
  *(void *)&v23[27] = v18;
  *((void *)&v23[27] + 1) = v17;
  *(void *)&v23[28] = v11;
  *((void *)&v23[28] + 1) = v33;
  sub_1A7474108((uint64_t)v23);
  sub_1A72A8318((uint64_t)&v34);
  sub_1A72A8318((uint64_t)&v53);
  sub_1A72A8318((uint64_t)&v72);
  memcpy(v20, v23, 0x1D0uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  memcpy(v24, v91, sizeof(v24));
  uint64_t v25 = v8;
  uint64_t v26 = v9;
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  uint64_t v29 = v15;
  uint64_t v30 = v11;
  uint64_t v31 = v12;
  return sub_1A7474384((uint64_t)v24);
}

uint64_t sub_1A746B06C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.CoreBehavior.init(from:)(a1, a2);
}

uint64_t sub_1A746B084(void *a1)
{
  return REMSuggestedAttributesTrainer.Result.CoreBehavior.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.clusterVariances.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.clusterLabels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.clusterSizes.getter()
{
  return swift_bridgeObjectRetain();
}

double REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.mse.getter()
{
  return *(double *)(v0 + 24);
}

double REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.trainingDuration.getter()
{
  return *(double *)(v0 + 32);
}

void __swiftcall REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.init(clusterLabels:clusterVariances:clusterSizes:mse:trainingDuration:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Result::IntentionalWordPrescribed *__return_ptr retstr, Swift::OpaquePointer clusterLabels, Swift::OpaquePointer clusterVariances, Swift::OpaquePointer clusterSizes, Swift::Double mse, Swift::Double trainingDuration)
{
  retstr->clusterVariances = clusterVariances;
  retstr->clusterLabels = clusterLabels;
  retstr->clusterSizes = clusterSizes;
  retstr->mse = mse;
  retstr->trainingDuration = trainingDuration;
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.droppingSensitiveFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

unint64_t sub_1A746B130(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4C72657473756C63;
      break;
    case 2:
      unint64_t result = 0x5372657473756C63;
      break;
    case 3:
      unint64_t result = 6648685;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A746B1EC()
{
  return sub_1A746B130(*v0);
}

uint64_t sub_1A746B1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7475D30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A746B21C(uint64_t a1)
{
  unint64_t v2 = sub_1A7474604();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A746B258(uint64_t a1)
{
  unint64_t v2 = sub_1A7474604();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D00);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7474604();
  sub_1A75741B0();
  uint64_t v16 = v9;
  char v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D10);
  sub_1A7474658(&qword_1E96F3D18, &qword_1E96F3D10);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v10 = v13;
    uint64_t v16 = v14;
    char v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A7474658(&qword_1EB7003D8, &qword_1EB704AC0);
    sub_1A7573B60();
    uint64_t v16 = v10;
    char v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EA0);
    sub_1A7474658(&qword_1E96F3D20, &qword_1E96F0EA0);
    sub_1A7573B60();
    LOBYTE(v16) = 3;
    sub_1A7573B30();
    LOBYTE(v16) = 4;
    sub_1A7573B30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7474604();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D10);
  char v21 = 0;
  sub_1A7474658(&qword_1E96F3D30, &qword_1E96F3D10);
  sub_1A7573A50();
  uint64_t v9 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  char v21 = 1;
  sub_1A7474658(&qword_1EB700070, &qword_1EB704AC0);
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  uint64_t v20 = v9;
  uint64_t v10 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EA0);
  char v21 = 2;
  sub_1A7474658(&qword_1E96F3D38, &qword_1E96F0EA0);
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  uint64_t v19 = v10;
  uint64_t v11 = v22;
  LOBYTE(v22) = 3;
  swift_bridgeObjectRetain();
  sub_1A7573A20();
  uint64_t v13 = v12;
  LOBYTE(v22) = 4;
  sub_1A7573A20();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = v19;
  *a2 = v20;
  a2[1] = v17;
  a2[2] = v11;
  a2[3] = v13;
  a2[4] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A746B9E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.init(from:)(a1, a2);
}

uint64_t sub_1A746BA00(void *a1)
{
  return REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.bestK.getter()
{
  return *(void *)v0;
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.bestClusterLabels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.clusterVariances.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.clusterSizes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.mse.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.minK.getter()
{
  return *(void *)(v0 + 40);
}

void __swiftcall REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.init(bestK:bestClusterLabels:minK:maxK:clusterVariances:clusterSizes:mse:trainingDuration:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Result::IntentionalWordTuned *__return_ptr retstr, Swift::Int bestK, Swift::OpaquePointer bestClusterLabels, Swift::Int minK, Swift::Int maxK, Swift::OpaquePointer clusterVariances, Swift::OpaquePointer clusterSizes, Swift::OpaquePointer mse, Swift::Double trainingDuration)
{
  retstr->bestK = bestK;
  retstr->bestClusterLabels = bestClusterLabels;
  retstr->clusterVariances = clusterVariances;
  retstr->clusterSizes = clusterSizes;
  retstr->mse = mse;
  retstr->minK = minK;
  retstr->maxK = maxK;
  retstr->trainingDuration = trainingDuration;
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.droppingSensitiveFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

unint64_t sub_1A746BAD4(char a1)
{
  unint64_t result = 0x4B74736562;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x5372657473756C63;
      break;
    case 4:
      unint64_t result = 6648685;
      break;
    case 5:
      unint64_t result = 1265527149;
      break;
    case 6:
      unint64_t result = 1266180461;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A746BBC4()
{
  return sub_1A746BAD4(*v0);
}

uint64_t sub_1A746BBCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7475F74(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A746BBF4(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1A746BC00(uint64_t a1)
{
  unint64_t v2 = sub_1A74746B8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A746BC3C(uint64_t a1)
{
  unint64_t v2 = sub_1A74746B8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D40);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v19 = v1[2];
  uint64_t v20 = v8;
  uint64_t v9 = v1[3];
  uint64_t v17 = v1[4];
  uint64_t v18 = v9;
  uint64_t v10 = v1[5];
  v16[0] = v1[6];
  v16[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74746B8();
  sub_1A75741B0();
  LOBYTE(v22) = 0;
  uint64_t v11 = v7;
  sub_1A7573B40();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v13 = v18;
  uint64_t v14 = v19;
  uint64_t v15 = v17;
  uint64_t v22 = v20;
  char v21 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A7474658(&qword_1EB7003D8, &qword_1EB704AC0);
  sub_1A7573B60();
  uint64_t v22 = v14;
  char v21 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D50);
  sub_1A747470C(&qword_1E96F3D58, &qword_1E96F3D18);
  sub_1A7573B60();
  uint64_t v22 = v13;
  char v21 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D60);
  sub_1A7474798(&qword_1E96F3D68, &qword_1E96F3D20);
  sub_1A7573B60();
  uint64_t v22 = v15;
  char v21 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D10);
  sub_1A7474658(&qword_1E96F3D18, &qword_1E96F3D10);
  sub_1A7573B60();
  LOBYTE(v22) = 5;
  sub_1A7573B40();
  LOBYTE(v22) = 6;
  sub_1A7573B40();
  LOBYTE(v22) = 7;
  sub_1A7573B30();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74746B8();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v26) = 0;
  uint64_t v9 = sub_1A7573A30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  char v25 = 1;
  sub_1A7474658(&qword_1EB700070, &qword_1EB704AC0);
  sub_1A7573A50();
  uint64_t v24 = v9;
  uint64_t v11 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D50);
  char v25 = 2;
  sub_1A747470C(&qword_1E96F3D78, &qword_1E96F3D30);
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  uint64_t v23 = v11;
  uint64_t v12 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D60);
  char v25 = 3;
  sub_1A7474798(&qword_1E96F3D80, &qword_1E96F3D38);
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  uint64_t v22 = v12;
  uint64_t v13 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D10);
  char v25 = 4;
  sub_1A7474658(&qword_1E96F3D30, &qword_1E96F3D10);
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  uint64_t v14 = v26;
  LOBYTE(v26) = 5;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1A7573A30();
  LOBYTE(v26) = 6;
  uint64_t v20 = sub_1A7573A30();
  LOBYTE(v26) = 7;
  sub_1A7573A20();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = v23;
  *a2 = v24;
  a2[1] = v17;
  uint64_t v18 = v21;
  a2[2] = v22;
  a2[3] = v13;
  a2[4] = v14;
  a2[5] = v18;
  a2[6] = v20;
  a2[7] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A746C63C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.init(from:)(a1, a2);
}

uint64_t sub_1A746C654(void *a1)
{
  return REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWord.droppingSensitiveFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v11 = v1[7];
  uint64_t v12 = v1[6];
  char v9 = *((unsigned char *)v1 + 64);
  if ((v9 & 1) == 0) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v9;
  return result;
}

uint64_t sub_1A746C724@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.IntentionalWord.init(from:)(a1, a2);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWord.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7474824();
  sub_1A7574190();
  if (!v2)
  {
    char v22 = 0;
    sub_1A7474878();
    sub_1A7573A50();
    char v10 = v17;
    uint64_t v11 = (void (**)(char *, uint64_t))(v6 + 8);
    char v22 = 1;
    if (v17)
    {
      sub_1A74748CC();
      sub_1A7573A50();
      (*v11)(v8, v5);
      uint64_t v12 = 0;
      uint64_t v13 = v17;
      long long v14 = v18;
      long long v15 = 0uLL;
      long long v16 = v19;
    }
    else
    {
      sub_1A7474920();
      sub_1A7573A50();
      (*v11)(v8, v5);
      uint64_t v13 = v17;
      long long v14 = v18;
      long long v16 = v19;
      long long v15 = v20;
      uint64_t v12 = v21;
    }
    *(void *)a2 = v13;
    *(_OWORD *)(a2 + 8) = v14;
    *(_OWORD *)(a2 + 24) = v16;
    *(_OWORD *)(a2 + 40) = v15;
    *(void *)(a2 + 56) = v12;
    *(unsigned char *)(a2 + 64) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A746C9A0(void *a1)
{
  return REMSuggestedAttributesTrainer.Result.IntentionalWord.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWord.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3DB0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v16 = *v1;
  uint64_t v17 = v8;
  uint64_t v9 = v1[3];
  uint64_t v18 = v1[2];
  uint64_t v19 = v9;
  uint64_t v20 = v1[4];
  uint64_t v10 = v1[5];
  uint64_t v14 = v1[6];
  uint64_t v15 = v10;
  uint64_t v11 = v1[7];
  char v12 = *((unsigned char *)v1 + 64);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7474824();
  sub_1A75741B0();
  if (v12)
  {
    LOBYTE(v21) = 1;
    char v29 = 0;
    sub_1A7474974();
    sub_1A7573B60();
    if (!v2)
    {
      uint64_t v21 = v16;
      uint64_t v22 = v17;
      uint64_t v23 = v18;
      uint64_t v24 = v19;
      uint64_t v25 = v20;
      char v29 = 1;
      sub_1A74749C8();
LABEL_6:
      sub_1A7573B60();
    }
  }
  else
  {
    LOBYTE(v21) = 0;
    char v29 = 0;
    sub_1A7474974();
    sub_1A7573B60();
    if (!v2)
    {
      uint64_t v21 = v16;
      uint64_t v22 = v17;
      uint64_t v23 = v18;
      uint64_t v24 = v19;
      uint64_t v25 = v20;
      uint64_t v26 = v15;
      uint64_t v27 = v14;
      uint64_t v28 = v11;
      char v29 = 1;
      sub_1A7474A1C();
      goto LABEL_6;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Result.embedding.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1A734E5D8(v1, (uint64_t)v4, &qword_1E96F3DD0);
  sub_1A734E5D8((uint64_t)v4, a1, &qword_1E96F3DD0);
  return sub_1A7475114((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A73162A8);
}

uint64_t REMSuggestedAttributesTrainer.Result.anchoredBubble.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 184);
  uint64_t v4 = *(void *)(v1 + 192);
  uint64_t v5 = *(void *)(v1 + 200);
  uint64_t v6 = *(void *)(v1 + 208);
  uint64_t v7 = *(void *)(v1 + 216);
  uint64_t v8 = *(void *)(v1 + 224);
  char v9 = *(unsigned char *)(v1 + 232);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v9;
  return sub_1A73163B0(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t REMSuggestedAttributesTrainer.Result.corebehavior.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1A734E5D8(v1 + 240, (uint64_t)v4, &qword_1E96F3DD8);
  sub_1A734E5D8((uint64_t)v4, a1, &qword_1E96F3DD8);
  return sub_1A7475188((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A7316400);
}

uint64_t REMSuggestedAttributesTrainer.Result.intentionalWord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 712);
  uint64_t v3 = *(void *)(v1 + 720);
  uint64_t v4 = *(void *)(v1 + 728);
  uint64_t v5 = *(void *)(v1 + 736);
  uint64_t v6 = *(void *)(v1 + 744);
  uint64_t v7 = *(void *)(v1 + 752);
  uint64_t v8 = *(void *)(v1 + 760);
  uint64_t v9 = *(void *)(v1 + 768);
  char v10 = *(unsigned char *)(v1 + 776);
  char v11 = *(unsigned char *)(v1 + 777);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  *(unsigned char *)(a1 + 65) = v11;
  return sub_1A73166C4(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
}

double REMSuggestedAttributesTrainer.Result.trainingDuration.getter()
{
  return *(double *)(v0 + 784);
}

void *REMSuggestedAttributesTrainer.Result.init(embedding:anchoredBubble:corebehavior:intentionalWord:trainingDuration:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, void *a5@<X8>, double a6@<D0>)
{
  sub_1A734E5D8(a1, (uint64_t)v23, &qword_1E96F3DD0);
  long long v21 = a2[1];
  long long v22 = *a2;
  long long v20 = a2[2];
  uint64_t v11 = *((void *)a2 + 6);
  char v12 = *((unsigned char *)a2 + 56);
  sub_1A734E5D8(a3, (uint64_t)v24, &qword_1E96F3DD8);
  long long v18 = a4[1];
  long long v19 = *a4;
  long long v17 = a4[2];
  uint64_t v13 = *((void *)a4 + 6);
  uint64_t v14 = *((void *)a4 + 7);
  char v15 = *((unsigned char *)a4 + 64);
  LOBYTE(a4) = *((unsigned char *)a4 + 65);
  sub_1A734E5D8((uint64_t)v23, (uint64_t)__src, &qword_1E96F3DD0);
  __src[11] = v22;
  __src[12] = v21;
  __src[13] = v20;
  *(void *)&__src[14] = v11;
  BYTE8(__src[14]) = v12;
  sub_1A734E5D8((uint64_t)v24, (uint64_t)&__src[15], &qword_1E96F3DD8);
  *(_OWORD *)((char *)&__src[44] + 8) = v19;
  *(_OWORD *)((char *)&__src[45] + 8) = v18;
  *(_OWORD *)((char *)&__src[46] + 8) = v17;
  *((void *)&__src[47] + 1) = v13;
  *(void *)&__src[48] = v14;
  BYTE8(__src[48]) = v15;
  BYTE9(__src[48]) = (_BYTE)a4;
  *(double *)&__src[49] = a6;
  return memcpy(a5, __src, 0x318uLL);
}

uint64_t REMSuggestedAttributesTrainer.Result.shortDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 784);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7054F0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB3D0];
  *(_OWORD *)(v2 + 16) = xmmword_1A75785A0;
  uint64_t v4 = MEMORY[0x1E4FBB460];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = v1;
  sub_1A7572640();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  return 14948;
}

void *REMSuggestedAttributesTrainer.Result.droppingSensitiveFields.getter@<X0>(void *a1@<X8>)
{
  sub_1A734E5D8(v1, (uint64_t)v99, &qword_1E96F3DD0);
  uint64_t v84 = *(void *)(v1 + 192);
  uint64_t v85 = *(void *)(v1 + 176);
  uint64_t v89 = *(void *)(v1 + 208);
  uint64_t v90 = *(void *)(v1 + 184);
  uint64_t v82 = *(void *)(v1 + 216);
  uint64_t v83 = *(void *)(v1 + 200);
  uint64_t v88 = *(void *)(v1 + 224);
  int v93 = *(unsigned __int8 *)(v1 + 232);
  sub_1A734E5D8(v1 + 240, (uint64_t)v100, &qword_1E96F3DD8);
  uint64_t v81 = *(void *)(v1 + 712);
  uint64_t v2 = *(void *)(v1 + 720);
  uint64_t v3 = *(void *)(v1 + 728);
  uint64_t v4 = *(void *)(v1 + 736);
  uint64_t v5 = *(void *)(v1 + 744);
  uint64_t v92 = *(void *)(v1 + 760);
  uint64_t v75 = *(void *)(v1 + 768);
  uint64_t v76 = *(void *)(v1 + 752);
  char v87 = *(unsigned char *)(v1 + 776);
  char v91 = *(unsigned char *)(v1 + 777);
  uint64_t v6 = *(void *)(v1 + 784);
  sub_1A734E5D8((uint64_t)v99, (uint64_t)v101, &qword_1E96F3DD0);
  int v7 = sub_1A7474A70((uint64_t)v101);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v79 = v3;
  uint64_t v80 = v2;
  uint64_t v77 = v5;
  uint64_t v78 = v4;
  if (v7 == 1)
  {
    sub_1A734E5D8((uint64_t)v99, (uint64_t)__src, &qword_1E96F3DD0);
    nullsub_1(__src);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = v99;
  }
  else
  {
    sub_1A734E5D8((uint64_t)v99, (uint64_t)v97, &qword_1E96F3DD0);
    uint64_t v10 = nullsub_1(v97);
    uint64_t v11 = *(void *)(v10 + 152);
    uint64_t v12 = *(void *)(v10 + 160);
    uint64_t v13 = *(void *)(v10 + 16);
    uint64_t v14 = *(void *)(v10 + 24);
    uint64_t v15 = *(void *)(v10 + 32);
    uint64_t v16 = *(void *)(v10 + 40);
    uint64_t v17 = v8;
    uint64_t v18 = *(void *)(v10 + 48);
    uint64_t v19 = *(void *)(v10 + 56);
    uint64_t v20 = *(void *)(v10 + 64);
    uint64_t v21 = *(void *)(v10 + 72);
    uint64_t v23 = *(void *)(v10 + 80);
    uint64_t v22 = *(void *)(v10 + 88);
    uint64_t v24 = *(void *)(v10 + 120);
    uint64_t v71 = *(void *)(v10 + 128);
    uint64_t v73 = *(void *)(v10 + 96);
    *(void *)__src = v17;
    *(void *)&__src[8] = v17;
    *(void *)&__src[16] = v13;
    *(void *)&__src[24] = v14;
    *(void *)&__src[32] = v15;
    *(void *)&__src[40] = v16;
    *(void *)&__src[48] = v18;
    *(void *)&__src[56] = v19;
    *(void *)&__src[64] = v20;
    *(void *)&__src[72] = v21;
    *(void *)&__src[80] = v23;
    *(void *)&__src[88] = v22;
    *(void *)&__src[96] = v73;
    *(_OWORD *)&__src[104] = *(_OWORD *)(v10 + 104);
    *(void *)&__src[120] = v24;
    *(_OWORD *)&__src[136] = *(_OWORD *)(v10 + 136);
    *(void *)&__src[128] = v71;
    *(void *)&__src[152] = v11;
    *(void *)&__src[160] = v12;
    sub_1A7474A88((uint64_t)__src);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = __src;
  }
  sub_1A734E5D8((uint64_t)v9, (uint64_t)v98, &qword_1E96F3DD0);
  if (v93)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_1A734E5D8((uint64_t)v100, (uint64_t)v97, &qword_1E96F3DD8);
  if (sub_1A7474A78((uint64_t)v97) == 1)
  {
    sub_1A734E5D8((uint64_t)v100, (uint64_t)__src, &qword_1E96F3DD8);
    nullsub_1(__src);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = v100;
  }
  else
  {
    sub_1A734E5D8((uint64_t)v100, (uint64_t)v94, &qword_1E96F3DD8);
    uint64_t v26 = nullsub_1(v94);
    uint64_t v28 = *(void *)(v26 + 16);
    uint64_t v27 = *(void *)(v26 + 24);
    uint64_t v29 = *(void *)(v26 + 32);
    uint64_t v30 = *(void *)(v26 + 40);
    uint64_t v31 = *(void *)(v26 + 48);
    uint64_t v59 = *(void *)(v26 + 56);
    uint64_t v32 = *(void *)(v26 + 64);
    uint64_t v33 = *(void *)(v26 + 72);
    uint64_t v34 = *(void *)(v26 + 80);
    uint64_t v35 = *(void *)(v26 + 88);
    uint64_t v36 = *(void *)(v26 + 120);
    uint64_t v66 = *(void *)(v26 + 96);
    uint64_t v67 = *(void *)(v26 + 152);
    uint64_t v70 = *(void *)(v26 + 168);
    uint64_t v72 = *(void *)(v26 + 176);
    uint64_t v74 = *(void *)(v26 + 184);
    uint64_t v68 = *(void *)(v26 + 160);
    uint64_t v69 = *(void *)(v26 + 192);
    uint64_t v65 = *(void *)(v26 + 200);
    uint64_t v46 = *(void *)(v26 + 128);
    uint64_t v47 = *(void *)(v26 + 208);
    uint64_t v48 = *(void *)(v26 + 216);
    uint64_t v49 = *(void *)(v26 + 224);
    uint64_t v37 = *(void *)(v26 + 256);
    uint64_t v52 = *(void *)(v26 + 288);
    uint64_t v53 = *(void *)(v26 + 296);
    uint64_t v54 = *(void *)(v26 + 304);
    uint64_t v55 = *(void *)(v26 + 264);
    uint64_t v38 = *(void *)(v26 + 376);
    long long v39 = *(_OWORD *)(v26 + 104);
    long long v40 = *(_OWORD *)(v26 + 240);
    long long v41 = *(_OWORD *)(v26 + 384);
    uint64_t v50 = *(void *)(v26 + 232);
    uint64_t v51 = *(void *)(v26 + 320);
    uint64_t v56 = *(void *)(v26 + 328);
    uint64_t v57 = *(void *)(v26 + 312);
    uint64_t v58 = *(void *)(v26 + 336);
    uint64_t v60 = *(void *)(v26 + 344);
    uint64_t v61 = *(void *)(v26 + 352);
    uint64_t v62 = *(void *)(v26 + 360);
    uint64_t v63 = *(void *)(v26 + 368);
    uint64_t v64 = *(void *)(v26 + 400);
    *(void *)&__src[408] = *(void *)(v26 + 408);
    uint64_t v42 = *(void *)(v26 + 448);
    long long v43 = *(_OWORD *)(v26 + 416);
    long long v44 = *(_OWORD *)(v26 + 432);
    *(_OWORD *)&__src[104] = v39;
    *(_OWORD *)&__src[240] = v40;
    *(_OWORD *)&__src[384] = v41;
    *(_OWORD *)&__src[416] = v43;
    *(_OWORD *)&__src[432] = v44;
    *(void *)__src = MEMORY[0x1E4FBC860];
    *(void *)&__src[8] = MEMORY[0x1E4FBC860];
    *(void *)&__src[136] = MEMORY[0x1E4FBC860];
    *(void *)&__src[144] = MEMORY[0x1E4FBC860];
    *(void *)&__src[272] = MEMORY[0x1E4FBC860];
    *(void *)&__src[280] = MEMORY[0x1E4FBC860];
    *(void *)&__src[456] = MEMORY[0x1E4FBC860];
    *(void *)&__src[128] = v46;
    *(void *)&__src[264] = v55;
    *(void *)&__src[400] = v64;
    *(void *)&__src[16] = v28;
    *(void *)&__src[24] = v27;
    *(void *)&__src[32] = v29;
    *(void *)&__src[40] = v30;
    *(void *)&__src[48] = v31;
    *(void *)&__src[56] = v59;
    *(void *)&__src[64] = v32;
    *(void *)&__src[72] = v33;
    *(void *)&__src[80] = v34;
    *(void *)&__src[88] = v35;
    *(void *)&__src[96] = v66;
    *(void *)&__src[120] = v36;
    *(void *)&__src[152] = v67;
    *(void *)&__src[160] = v68;
    *(void *)&__src[168] = v70;
    *(void *)&__src[176] = v72;
    *(void *)&__src[184] = v74;
    *(void *)&__src[192] = v69;
    *(void *)&__src[200] = v65;
    *(void *)&__src[208] = v47;
    *(void *)&__src[216] = v48;
    *(void *)&__src[224] = v49;
    *(void *)&__src[232] = v50;
    *(void *)&__src[256] = v37;
    *(void *)&__src[288] = v52;
    *(void *)&__src[296] = v53;
    *(void *)&__src[304] = v54;
    *(void *)&__src[312] = v57;
    *(void *)&__src[320] = v51;
    *(void *)&__src[328] = v56;
    *(void *)&__src[336] = v58;
    *(void *)&__src[344] = v60;
    *(void *)&__src[352] = v61;
    *(void *)&__src[360] = v62;
    *(void *)&__src[368] = v63;
    *(void *)&__src[376] = v38;
    *(void *)&__src[448] = v42;
    sub_1A7474A80((uint64_t)__src);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = __src;
  }
  sub_1A734E5D8((uint64_t)v25, (uint64_t)v96, &qword_1E96F3DD8);
  if ((v91 & 1) == 0 && (v87 & 1) == 0) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A734E5D8((uint64_t)v98, (uint64_t)__src, &qword_1E96F3DD0);
  *(void *)&__src[176] = v85;
  *(void *)&__src[184] = v90;
  *(void *)&__src[192] = v84;
  *(void *)&__src[200] = v83;
  *(void *)&__src[208] = v89;
  *(void *)&__src[216] = v82;
  *(void *)&__src[224] = v88;
  __src[232] = v93;
  sub_1A734E5D8((uint64_t)v96, (uint64_t)&__src[240], &qword_1E96F3DD8);
  *(void *)&__src[712] = v81;
  *(void *)&__src[720] = v80;
  *(void *)&__src[728] = v79;
  *(void *)&__src[736] = v78;
  *(void *)&__src[744] = v77;
  *(void *)&__src[752] = v76;
  *(void *)&__src[760] = v92;
  *(void *)&__src[768] = v75;
  __src[776] = v87;
  __src[777] = v91;
  *(void *)&__src[784] = v6;
  return memcpy(a1, __src, 0x318uLL);
}

unint64_t sub_1A746D6EC()
{
  unint64_t result = 0x6E69646465626D65;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6465726F68636E61;
      break;
    case 2:
      unint64_t result = 0x6168656265726F63;
      break;
    case 3:
      unint64_t result = 0x6F69746E65746E69;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A746D7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7476284(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A746D7E8(uint64_t a1)
{
  unint64_t v2 = sub_1A7474A90();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A746D824(uint64_t a1)
{
  unint64_t v2 = sub_1A7474A90();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesTrainer.Result.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3DE0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A734E5D8(v2, (uint64_t)v51, &qword_1E96F3DD0);
  uint64_t v8 = *(void *)(v2 + 176);
  uint64_t v37 = *(void *)(v2 + 184);
  uint64_t v38 = v8;
  uint64_t v9 = *(void *)(v2 + 192);
  uint64_t v35 = *(void *)(v2 + 200);
  uint64_t v36 = v9;
  uint64_t v10 = *(void *)(v2 + 208);
  uint64_t v33 = *(void *)(v2 + 216);
  uint64_t v34 = v10;
  uint64_t v32 = *(void *)(v2 + 224);
  int v31 = *(unsigned __int8 *)(v2 + 232);
  sub_1A734E5D8(v2 + 240, (uint64_t)v52, &qword_1E96F3DD8);
  uint64_t v11 = *(void *)(v2 + 712);
  uint64_t v29 = *(void *)(v2 + 720);
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v2 + 728);
  uint64_t v27 = *(void *)(v2 + 736);
  uint64_t v28 = v12;
  uint64_t v13 = *(void *)(v2 + 744);
  uint64_t v25 = *(void *)(v2 + 752);
  uint64_t v26 = v13;
  uint64_t v14 = *(void *)(v2 + 760);
  uint64_t v23 = *(void *)(v2 + 768);
  uint64_t v24 = v14;
  int v15 = *(unsigned __int8 *)(v2 + 776);
  int v21 = *(unsigned __int8 *)(v2 + 777);
  int v22 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7474A90();
  sub_1A75741B0();
  sub_1A734E5D8((uint64_t)v51, (uint64_t)&v40, &qword_1E96F3DD0);
  char v50 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3DD0);
  sub_1A7474AE4();
  uint64_t v16 = v39;
  sub_1A7573B60();
  if (!v16)
  {
    uint64_t v18 = v29;
    uint64_t v17 = v30;
    uint64_t v40 = v38;
    uint64_t v41 = v37;
    uint64_t v42 = v36;
    uint64_t v43 = v35;
    uint64_t v44 = v34;
    uint64_t v45 = v33;
    uint64_t v46 = v32;
    LOBYTE(v47) = v31;
    char v50 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3E08);
    sub_1A7474C24();
    sub_1A7573B60();
    sub_1A734E5D8((uint64_t)v52, (uint64_t)&v40, &qword_1E96F3DD8);
    char v50 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3DD8);
    sub_1A7474D64();
    sub_1A7573B60();
    uint64_t v40 = v17;
    uint64_t v41 = v18;
    uint64_t v42 = v28;
    uint64_t v43 = v27;
    uint64_t v44 = v26;
    uint64_t v45 = v25;
    uint64_t v46 = v24;
    uint64_t v47 = v23;
    char v48 = v22;
    char v49 = v21;
    char v50 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3E40);
    sub_1A7474EA4();
    sub_1A7573B60();
    LOBYTE(v40) = 4;
    sub_1A7573B30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Result.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3E60);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1A7474A90();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  }
  uint64_t v54 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3DD0);
  v61[175] = 0;
  sub_1A7474FE4();
  sub_1A7573A50();
  sub_1A734E5D8((uint64_t)&v62, (uint64_t)v61, &qword_1E96F3DD0);
  sub_1A734E5D8((uint64_t)v61, (uint64_t)v63, &qword_1E96F3DD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3E08);
  LOBYTE(v56[0]) = 1;
  sub_1A7475114((uint64_t)v61, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A73162A8);
  sub_1A747507C();
  sub_1A7573A50();
  uint64_t v44 = v6;
  uint64_t v11 = v57[0];
  uint64_t v12 = v57[1];
  uint64_t v51 = v57[2];
  uint64_t v52 = v57[3];
  uint64_t v13 = v57[4];
  uint64_t v53 = 0;
  uint64_t v14 = v57[5];
  uint64_t v15 = v57[6];
  int v16 = LOBYTE(v57[7]);
  v63[22] = v57[0];
  v63[23] = v57[1];
  v63[24] = v57[2];
  v63[25] = v57[3];
  v63[26] = v57[4];
  v63[27] = v57[5];
  v63[28] = v57[6];
  LOBYTE(v63[29]) = v57[7];
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3DD8);
  uint64_t v46 = v11;
  v59[471] = 2;
  uint64_t v47 = v12;
  uint64_t v48 = v13;
  uint64_t v17 = v12;
  uint64_t v18 = v14;
  uint64_t v19 = v51;
  uint64_t v20 = v52;
  uint64_t v50 = v18;
  int v49 = v16;
  sub_1A73163B0(v11, v17, v51, v52, v13, v18, v15, v16);
  sub_1A7475244();
  uint64_t v21 = v53;
  sub_1A7573A50();
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v5);
    sub_1A7316BCC(v46, v47, v19, v20, v48, v50, v15, v49);
    sub_1A7475114((uint64_t)v61, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A7316AC4);
    uint64_t v26 = v53;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    sub_1A734E5D8((uint64_t)v63, (uint64_t)v56, &qword_1E96F3DD0);
    uint64_t result = sub_1A7475114((uint64_t)v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A7316AC4);
    if (!v26) {
      return sub_1A7316BCC(v63[22], v63[23], v63[24], v63[25], v63[26], v63[27], v63[28], v63[29]);
    }
  }
  else
  {
    uint64_t v43 = v15;
    sub_1A734E5D8((uint64_t)&v60, (uint64_t)v59, &qword_1E96F3DD8);
    sub_1A734E5D8((uint64_t)v59, (uint64_t)&v63[30], &qword_1E96F3DD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3E40);
    LOBYTE(v56[0]) = 3;
    sub_1A7475188((uint64_t)v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A7316400);
    sub_1A74752DC();
    sub_1A7573A50();
    v63[89] = v57[0];
    v63[90] = v57[1];
    v63[91] = v57[2];
    v63[92] = v57[3];
    v63[93] = v57[4];
    v63[94] = v57[5];
    v63[95] = v57[6];
    v63[96] = v57[7];
    LOWORD(v63[97]) = v57[8];
    char v58 = 4;
    int v35 = BYTE1(v57[8]);
    int v36 = LOBYTE(v57[8]);
    uint64_t v22 = v57[0];
    uint64_t v37 = v57[1];
    uint64_t v38 = v57[5];
    uint64_t v45 = v57[2];
    uint64_t v39 = v57[4];
    uint64_t v40 = v57[3];
    uint64_t v41 = v57[7];
    uint64_t v42 = v57[6];
    sub_1A73166C4(v57[0], v57[1], v57[2], v57[3], v57[4], v57[5], v57[6], v57[7], v57[8], SBYTE1(v57[8]));
    sub_1A7573A20();
    char v23 = v49;
    uint64_t v24 = v43;
    uint64_t v25 = v48;
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v5);
    v63[98] = v28;
    sub_1A734E5D8((uint64_t)v61, (uint64_t)v56, &qword_1E96F3DD0);
    v56[22] = v46;
    v56[23] = v47;
    v56[24] = v51;
    v56[25] = v52;
    v56[26] = v25;
    v56[27] = v50;
    v56[28] = v24;
    LOBYTE(v56[29]) = v23;
    sub_1A734E5D8((uint64_t)v59, (uint64_t)&v56[30], &qword_1E96F3DD8);
    v56[89] = v22;
    uint64_t v29 = v37;
    uint64_t v30 = v38;
    v56[90] = v37;
    v56[91] = v45;
    uint64_t v32 = v39;
    uint64_t v31 = v40;
    v56[92] = v40;
    v56[93] = v39;
    v56[94] = v38;
    v56[95] = v42;
    v56[96] = v41;
    char v33 = v35;
    LOBYTE(v24) = v36;
    LOBYTE(v56[97]) = v36;
    BYTE1(v56[97]) = v35;
    v56[98] = v28;
    sub_1A73167B4((uint64_t)v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A73162A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1A73163B0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, char))sub_1A7316400, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1A73166C4);
    sub_1A7316EE0(v22, v29, v45, v31, v32, v30, v42, v41, v24, v33);
    sub_1A7475188((uint64_t)v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A7316C1C);
    sub_1A7316BCC(v46, v47, v51, v52, v48, v50, v43, v49);
    sub_1A7475114((uint64_t)v61, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A7316AC4);
    memcpy(v54, v56, 0x318uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    memcpy(v57, v63, sizeof(v57));
    return sub_1A73167B4((uint64_t)v57, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A7316AC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1A7316BCC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, char))sub_1A7316C1C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1A7316EE0);
  }
  return result;
}

uint64_t sub_1A746E4E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.init(from:)(a1, a2);
}

uint64_t sub_1A746E4FC(void *a1)
{
  return REMSuggestedAttributesTrainer.Result.encode(to:)(a1);
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  result.value = REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.init(rawValue:)(stringValue).value;
  unsigned char *v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  unsigned char *v1 = 8;
  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.allCases.getter()
{
  return &unk_1EFC8FB48;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.rawValue.getter()
{
  unint64_t result = 0x656C62616E457369;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x74726F70707573;
      break;
    case 2:
      unint64_t result = 0x656D7473756A6461;
      break;
    case 3:
      unint64_t result = 0x6E656469666E6F63;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x656C62616E457369;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x74726F70707573;
      break;
    case 2:
      unint64_t result = 0x656D7473756A6461;
      break;
    case 3:
      unint64_t result = 0x6E656469666E6F63;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A746E7EC(unsigned __int8 *a1, char *a2)
{
  return sub_1A7542224(*a1, *a2);
}

uint64_t sub_1A746E7F8()
{
  return sub_1A7503E6C();
}

uint64_t sub_1A746E804()
{
  return sub_1A7502A00();
}

uint64_t sub_1A746E80C()
{
  return sub_1A7503E6C();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional sub_1A746E814(Swift::String *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.init(rawValue:)(*a1);
}

unint64_t sub_1A746E820@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional sub_1A746E84C@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.value = REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A746E884(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FB48;
}

uint64_t sub_1A746E894(uint64_t a1)
{
  unint64_t v2 = sub_1A7475374();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A746E8D0(uint64_t a1)
{
  unint64_t v2 = sub_1A7475374();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static REMSuggestedAttributesTrainer.Parameters.CoreBehavior.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.isEnabled.getter()
{
  return *v0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.support.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.adjustment.getter()
{
  return *(void *)(v0 + 16);
}

double REMSuggestedAttributesTrainer.Parameters.CoreBehavior.confidence.getter()
{
  return *(double *)(v0 + 24);
}

double REMSuggestedAttributesTrainer.Parameters.CoreBehavior.validationRelativeSupport.getter()
{
  return *(double *)(v0 + 32);
}

double REMSuggestedAttributesTrainer.Parameters.CoreBehavior.validationConfidence.getter()
{
  return *(double *)(v0 + 40);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.feedbackResetVersion.getter()
{
  return *(void *)(v0 + 48);
}

double REMSuggestedAttributesTrainer.Parameters.CoreBehavior.feedbackExpirationWindow.getter()
{
  return *(double *)(v0 + 56);
}

void __swiftcall REMSuggestedAttributesTrainer.Parameters.CoreBehavior.init(isEnabled:support:adjustment:confidence:validationRelativeSupport:validationConfidence:feedbackResetVersion:feedbackExpirationWindow:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior *__return_ptr retstr, Swift::Bool_optional isEnabled, Swift::UInt_optional support, Swift::UInt_optional adjustment, Swift::Double_optional confidence, Swift::Double_optional validationRelativeSupport, Swift::Double_optional validationConfidence, Swift::UInt_optional feedbackResetVersion, Swift::Double_optional feedbackExpirationWindow)
{
  double v46 = *(double *)&validationConfidence.is_nil;
  Swift::Bool is_nil = validationRelativeSupport.is_nil;
  double v10 = *(double *)&confidence.is_nil;
  Swift::Bool v51 = adjustment.is_nil;
  Swift::UInt value = support.value;
  Swift::UInt v50 = adjustment.value;
  Swift::Bool v48 = support.is_nil;
  BOOL v13 = isEnabled.value == 2;
  if (qword_1E96F08A0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1A7571E90();
  __swift_project_value_buffer(v14, (uint64_t)qword_1E96F3C90);
  uint64_t v15 = sub_1A7571E80();
  os_log_type_t v16 = sub_1A7572FF0();
  BOOL v47 = v13 || isEnabled.value;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    double v45 = v10;
    Swift::Bool v18 = is_nil;
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446210;
    double v52 = *(double *)&v19;
    if (v13 || isEnabled.value) {
      uint64_t v20 = 5457241;
    }
    else {
      uint64_t v20 = 20302;
    }
    if (v13 || isEnabled.value) {
      unint64_t v21 = 0xE300000000000000;
    }
    else {
      unint64_t v21 = 0xE200000000000000;
    }
    sub_1A72D1730(v20, v21, (uint64_t *)&v52);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v15, v16, "CoreBehavior model enabled: %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v19;
    Swift::Bool is_nil = v18;
    double v10 = v45;
    MEMORY[0x1AD0CD330](v22, -1, -1);
    MEMORY[0x1AD0CD330](v17, -1, -1);
  }

  if (is_nil) {
    double v23 = 0.5;
  }
  else {
    double v23 = v10;
  }
  uint64_t v24 = sub_1A7571E80();
  os_log_type_t v25 = sub_1A7572FF0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 134349056;
    double v52 = v23;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v24, v25, "CoreBehavior model confidence threshold: %{public}f", v26, 0xCu);
    MEMORY[0x1AD0CD330](v26, -1, -1);
  }

  if (feedbackResetVersion.value) {
    double v27 = 0.01;
  }
  else {
    double v27 = v46;
  }
  uint64_t v28 = sub_1A7571E80();
  os_log_type_t v29 = sub_1A7572FF0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 134349056;
    double v52 = v27;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v28, v29, "CoreBehavior model validation relative support threshold: %{public}f", v30, 0xCu);
    MEMORY[0x1AD0CD330](v30, -1, -1);
  }

  if (v53) {
    double v31 = 0.3;
  }
  else {
    double v31 = *(double *)&feedbackResetVersion.is_nil;
  }
  uint64_t v32 = sub_1A7571E80();
  os_log_type_t v33 = sub_1A7572FF0();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 134349056;
    double v52 = v31;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v32, v33, "CoreBehavior model validation confidence threshold: %{public}f", v34, 0xCu);
    MEMORY[0x1AD0CD330](v34, -1, -1);
  }

  if (v55) {
    Swift::UInt v35 = 0;
  }
  else {
    Swift::UInt v35 = v54;
  }
  int v36 = sub_1A7571E80();
  os_log_type_t v37 = sub_1A7572FF0();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 134349056;
    double v52 = *(double *)&v35;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v36, v37, "CoreBehavior model feedbackResetVersion: %{public}lu", v38, 0xCu);
    MEMORY[0x1AD0CD330](v38, -1, -1);
  }

  if (v57) {
    double v39 = 2592000.0;
  }
  else {
    double v39 = v56;
  }
  uint64_t v40 = sub_1A7571E80();
  os_log_type_t v41 = sub_1A7572FF0();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 134349056;
    double v52 = v39;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v40, v41, "CoreBehavior model feedbackExpirationWindow: %{public}f", v42, 0xCu);
    MEMORY[0x1AD0CD330](v42, -1, -1);
  }

  retstr->isEnabled = v47;
  Swift::UInt v43 = v50;
  if (v51) {
    Swift::UInt v43 = 0;
  }
  Swift::UInt v44 = 6;
  if (!v48) {
    Swift::UInt v44 = value;
  }
  retstr->support = v44;
  retstr->adjustment = v43;
  retstr->confidence = v23;
  retstr->validationRelativeSupport = v27;
  retstr->validationConfidence = v31;
  retstr->feedbackResetVersion = v35;
  retstr->feedbackExpirationWindow = v39;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3E88);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v14[0] = *(void *)(v1 + 16);
  v14[1] = v8;
  uint64_t v9 = a1[3];
  double v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1A7475374();
  sub_1A75741B0();
  char v22 = 0;
  sub_1A7573B20();
  if (!v2)
  {
    char v21 = 1;
    sub_1A7573B50();
    char v20 = 2;
    sub_1A7573B50();
    char v19 = 3;
    sub_1A7573B30();
    char v18 = 4;
    sub_1A7573B30();
    char v17 = 5;
    sub_1A7573B30();
    char v16 = 6;
    sub_1A7573B50();
    char v15 = 7;
    sub_1A7573B30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3E98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7475374();
  sub_1A7574190();
  if (!v2)
  {
    char v30 = 0;
    char v9 = sub_1A7573A10();
    char v29 = 1;
    uint64_t v10 = sub_1A7573A40();
    char v28 = 2;
    uint64_t v22 = sub_1A7573A40();
    char v27 = 3;
    sub_1A7573A20();
    uint64_t v12 = v11;
    char v26 = 4;
    sub_1A7573A20();
    uint64_t v14 = v13;
    char v25 = 5;
    sub_1A7573A20();
    uint64_t v16 = v15;
    char v24 = 6;
    uint64_t v21 = sub_1A7573A40();
    char v23 = 7;
    sub_1A7573A20();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9 & 1;
    uint64_t v20 = v22;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v20;
    *(void *)(a2 + 24) = v12;
    *(void *)(a2 + 32) = v14;
    *(void *)(a2 + 40) = v16;
    *(void *)(a2 + 48) = v21;
    *(void *)(a2 + 56) = v19;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A746F424@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Parameters.CoreBehavior.init(from:)(a1, a2);
}

uint64_t sub_1A746F43C(void *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.CoreBehavior.encode(to:)(a1);
}

uint64_t sub_1A746F454()
{
  return swift_getKeyPath();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding::CodingKeys_optional)sub_1A74706D0(v1);
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding::CodingKeys_optional)sub_1A747073C(v1);
}

void *static REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.allCases.getter()
{
  return &unk_1EFC92830;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0x656C62616E457369;
  }
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.stringValue.getter()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0x656C62616E457369;
  }
}

uint64_t sub_1A746F520(char *a1, char *a2)
{
  return sub_1A7541F24(*a1, *a2);
}

uint64_t sub_1A746F52C()
{
  return sub_1A7574110();
}

uint64_t sub_1A746F5B8()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A746F630()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding::CodingKeys_optional sub_1A746F6B8(Swift::String *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A746F6C4(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x656C62616E457369;
  if (*v1) {
    unint64_t v2 = 0xD000000000000013;
  }
  unint64_t v3 = 0x80000001A759E1C0;
  if (!*v1) {
    unint64_t v3 = 0xE900000000000064;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A746F70C()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0x656C62616E457369;
  }
}

void sub_1A746F754(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FBC0;
}

uint64_t sub_1A746F764(uint64_t a1)
{
  unint64_t v2 = sub_1A74753C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A746F7A0(uint64_t a1)
{
  unint64_t v2 = sub_1A74753C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static REMSuggestedAttributesTrainer.Parameters.Embedding.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.isEnabled.getter()
{
  return *v0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.neighborsToConsider.getter()
{
  return *(void *)(v0 + 8);
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding __swiftcall REMSuggestedAttributesTrainer.Parameters.Embedding.init(isEnabled:neighborsToConsider:)(Swift::Bool_optional isEnabled, Swift::Int_optional neighborsToConsider)
{
  Swift::Bool is_nil = neighborsToConsider.is_nil;
  Swift::Int value = neighborsToConsider.value;
  uint64_t v6 = v2;
  BOOL v7 = isEnabled.value == 2;
  if (qword_1E96F08A0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1A7571E90();
  __swift_project_value_buffer(v8, (uint64_t)qword_1E96F3C90);
  char v9 = sub_1A7571E80();
  os_log_type_t v10 = sub_1A7572FF0();
  BOOL v23 = v7 || isEnabled.value;
  if (os_log_type_enabled(v9, v10))
  {
    Swift::Int v22 = value;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t v24 = v12;
    if (v7 || isEnabled.value) {
      uint64_t v13 = 5457241;
    }
    else {
      uint64_t v13 = 20302;
    }
    if (v7 || isEnabled.value) {
      unint64_t v14 = 0xE300000000000000;
    }
    else {
      unint64_t v14 = 0xE200000000000000;
    }
    sub_1A72D1730(v13, v14, &v24);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v9, v10, "kNN model is enabled: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v12, -1, -1);
    uint64_t v15 = v11;
    Swift::Int value = v22;
    MEMORY[0x1AD0CD330](v15, -1, -1);
  }

  if (is_nil) {
    uint64_t v16 = 7;
  }
  else {
    uint64_t v16 = value;
  }
  char v17 = sub_1A7571E80();
  os_log_type_t v18 = sub_1A7572FF0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 134349056;
    uint64_t v24 = v16;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v17, v18, "Number of neighbors to consider in kNN: %{public}ld", v19, 0xCu);
    MEMORY[0x1AD0CD330](v19, -1, -1);
  }

  *(unsigned char *)uint64_t v6 = v23;
  *(void *)(v6 + 8) = v16;
  result.neighborsToConsider = v21;
  result.isEnabled = v20;
  return result;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3EA0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74753C8();
  sub_1A75741B0();
  char v11 = 0;
  sub_1A7573B20();
  if (!v2)
  {
    char v10 = 1;
    sub_1A7573B40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3EB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74753C8();
  sub_1A7574190();
  if (!v2)
  {
    char v14 = 0;
    char v9 = sub_1A7573A10();
    char v13 = 1;
    uint64_t v10 = sub_1A7573A30();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A746FD94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Parameters.Embedding.init(from:)(a1, a2);
}

uint64_t sub_1A746FDAC(void *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.Embedding.encode(to:)(a1);
}

uint64_t sub_1A746FDC4()
{
  return swift_getKeyPath();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  result.Swift::Int value = REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.init(rawValue:)(stringValue).value;
  unsigned char *v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  unsigned char *v1 = 4;
  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.allCases.getter()
{
  return &unk_1EFC928D8;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.rawValue.getter()
{
  unint64_t result = 0x4F64656C62616E65;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x4F64656C62616E65;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A746FFDC(unsigned __int8 *a1, char *a2)
{
  return sub_1A7542074(*a1, *a2);
}

uint64_t sub_1A746FFE8()
{
  return sub_1A7501AB0();
}

uint64_t sub_1A746FFF0()
{
  return sub_1A7502928();
}

uint64_t sub_1A746FFF8()
{
  return sub_1A7503FC4();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional sub_1A7470000(Swift::String *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A747000C(void *a1@<X8>)
{
  unint64_t v2 = 0xEC000000534F696ELL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEE00534F63616D6ELL;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000018;
      a1[1] = 0x80000001A759E5A0;
      break;
    case 3:
      *a1 = 0xD00000000000001ELL;
      a1[1] = 0x80000001A759E5C0;
      break;
    default:
LABEL_3:
      *a1 = 0x4F64656C62616E65;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1A74700B8()
{
  unint64_t result = 0x4F64656C62616E65;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional sub_1A7470158@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.Swift::Int value = REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A7470190(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FB70;
}

uint64_t sub_1A74701A0(uint64_t a1)
{
  unint64_t v2 = sub_1A747541C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74701DC(uint64_t a1)
{
  unint64_t v2 = sub_1A747541C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.enabledOniOS.getter()
{
  return *v0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.enabledOnmacOS.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

double REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.defaultWordDistanceScale.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.overrideLocalWordDistanceScale.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble __swiftcall REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.init(enabledOniOS:enabledOnmacOS:defaultWordDistanceScale:overrideLocalWordDistanceScale:)(Swift::Bool_optional enabledOniOS, Swift::Bool_optional enabledOnmacOS, Swift::Double_optional defaultWordDistanceScale, Swift::Bool_optional overrideLocalWordDistanceScale)
{
  double v6 = *(double *)&defaultWordDistanceScale.is_nil;
  if (overrideLocalWordDistanceScale.value) {
    double v6 = 0.2;
  }
  *(unsigned char *)uint64_t v5 = enabledOniOS.value == 2 || enabledOniOS.value;
  *(unsigned char *)(v5 + 1) = enabledOnmacOS.value == 2 || enabledOnmacOS.value;
  *(double *)(v5 + 8) = v6;
  *(unsigned char *)(v5 + 16) = v4 & 1;
  result.defaultWordDistanceScale = v6;
  result.overrideLocalWordDistanceScale = enabledOnmacOS.value;
  result.enabledOniOS = enabledOniOS.value;
  return result;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3EB8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(v1 + 1);
  v10[1] = *(unsigned __int8 *)(v1 + 16);
  v10[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A747541C();
  sub_1A75741B0();
  char v14 = 0;
  sub_1A7573B20();
  if (!v2)
  {
    char v13 = 1;
    sub_1A7573B20();
    char v12 = 2;
    sub_1A7573B30();
    char v11 = 3;
    sub_1A7573B20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3EC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A747541C();
  sub_1A7574190();
  if (!v2)
  {
    v15[15] = 0;
    char v9 = sub_1A7573A10();
    v15[14] = 1;
    char v10 = sub_1A7573A10();
    v15[13] = 2;
    sub_1A7573A20();
    uint64_t v13 = v12;
    v15[12] = 3;
    char v14 = sub_1A7573A10();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9 & 1;
    *(unsigned char *)(a2 + 1) = v10 & 1;
    *(void *)(a2 + 8) = v13;
    *(unsigned char *)(a2 + 16) = v14 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A7470680@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.init(from:)(a1, a2);
}

uint64_t sub_1A7470698(void *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.encode(to:)(a1);
}

uint64_t sub_1A74706B0()
{
  return swift_getKeyPath();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional)sub_1A74706D0(v1);
}

uint64_t sub_1A74706D0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional)sub_1A747073C(v1);
}

uint64_t sub_1A747073C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2)
  {
    if (v2 == 1) {
      char v4 = 1;
    }
    else {
      char v4 = 2;
    }
  }
  else
  {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  unsigned char *v1 = 2;
  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.allCases.getter()
{
  return &unk_1EFC929A0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 107;
  }
  else {
    return 0x656C62616E457369;
  }
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.stringValue.getter()
{
  if (*v0) {
    return 107;
  }
  else {
    return 0x656C62616E457369;
  }
}

uint64_t sub_1A7470834(char *a1, char *a2)
{
  return sub_1A7541FD4(*a1, *a2);
}

uint64_t sub_1A7470840()
{
  return sub_1A7574110();
}

uint64_t sub_1A74708BC()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7470924()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional sub_1A747099C(Swift::String *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A74709A8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 107;
  if (!*v1) {
    uint64_t v2 = 0x656C62616E457369;
  }
  unint64_t v3 = 0xE900000000000064;
  if (*v1) {
    unint64_t v3 = 0xE100000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A74709E0()
{
  if (*v0) {
    return 107;
  }
  else {
    return 0x656C62616E457369;
  }
}

void sub_1A7470A18(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FB98;
}

uint64_t sub_1A7470A28(uint64_t a1)
{
  unint64_t v2 = sub_1A7475470();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7470A64(uint64_t a1)
{
  unint64_t v2 = sub_1A7475470();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static REMSuggestedAttributesTrainer.Parameters.IntentionalWord.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.isEnabled.getter()
{
  return *v0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.k.getter()
{
  return *(void *)(v0 + 8);
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord __swiftcall REMSuggestedAttributesTrainer.Parameters.IntentionalWord.init(isEnabled:k:)(Swift::Bool_optional isEnabled, Swift::Int_optional k)
{
  Swift::Bool is_nil = k.is_nil;
  Swift::Int value = k.value;
  uint64_t v6 = v2;
  BOOL v7 = isEnabled.value == 2;
  if (qword_1E96F08A0 != -1) {
    swift_once();
  }
  BOOL v8 = v7 || isEnabled.value;
  uint64_t v9 = sub_1A7571E90();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E96F3C90);
  char v10 = sub_1A7571E80();
  os_log_type_t v11 = sub_1A7572FF0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    Swift::Int v29 = value;
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v30 = v13;
    if (v7 || isEnabled.value) {
      uint64_t v14 = 5457241;
    }
    else {
      uint64_t v14 = 20302;
    }
    if (v7 || isEnabled.value) {
      unint64_t v15 = 0xE300000000000000;
    }
    else {
      unint64_t v15 = 0xE200000000000000;
    }
    sub_1A72D1730(v14, v15, &v30);
    sub_1A7573250();
    BOOL v8 = v7 || isEnabled.value;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v10, v11, "intentional word model is enabled: %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v13;
    Swift::Int value = v29;
    MEMORY[0x1AD0CD330](v16, -1, -1);
    MEMORY[0x1AD0CD330](v12, -1, -1);
  }

  char v17 = sub_1A7571E80();
  os_log_type_t v18 = sub_1A7572FF0();
  BOOL v19 = os_log_type_enabled(v17, v18);
  if (is_nil)
  {
    if (v19)
    {
      Swift::Bool v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::Bool v20 = 0;
      os_log_type_t v21 = v18;
      Swift::Int v22 = "Auto tuning number of clusters";
      BOOL v23 = v17;
      uint64_t v24 = v20;
      uint32_t v25 = 2;
LABEL_16:
      _os_log_impl(&dword_1A72A1000, v23, v21, v22, v24, v25);
      MEMORY[0x1AD0CD330](v20, -1, -1);
    }
  }
  else if (v19)
  {
    Swift::Bool v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)Swift::Bool v20 = 134349056;
    uint64_t v30 = value;
    sub_1A7573250();
    os_log_type_t v21 = v18;
    Swift::Int v22 = "Number of clusters to consider in k-Mean: %{public}ld";
    BOOL v23 = v17;
    uint64_t v24 = v20;
    uint32_t v25 = 12;
    goto LABEL_16;
  }

  *(unsigned char *)uint64_t v6 = v8;
  *(void *)(v6 + 8) = value;
  *(unsigned char *)(v6 + 16) = is_nil;
  result.k.Swift::Int value = v27;
  result.isEnabled = v26;
  *(_DWORD *)result.gap1 = *(_DWORD *)((char *)&v26 + 1);
  *(_WORD *)&result.gap1[4] = *(_WORD *)((char *)&v26 + 5);
  result.gap1[6] = HIBYTE(v26);
  result.k.Swift::Bool is_nil = v28;
  return result;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3ED0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 8);
  int v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7475470();
  sub_1A75741B0();
  char v12 = 0;
  sub_1A7573B20();
  if (!v2)
  {
    char v11 = 1;
    sub_1A7573AF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3EE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  BOOL v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7475470();
  sub_1A7574190();
  if (!v2)
  {
    char v16 = 0;
    char v9 = sub_1A7573A10();
    char v15 = 1;
    uint64_t v11 = sub_1A75739E0();
    char v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 16) = v13 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A74710B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Parameters.IntentionalWord.init(from:)(a1, a2);
}

uint64_t sub_1A74710D0(void *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.IntentionalWord.encode(to:)(a1);
}

uint64_t sub_1A74710E8()
{
  return swift_getKeyPath();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v5 = 13;
  if (v3 < 0xD) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  result.Swift::Int value = REMSuggestedAttributesTrainer.Parameters.CodingKeys.init(rawValue:)(stringValue).value;
  unsigned char *v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  unsigned char *v1 = 13;
  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesTrainer.Parameters.CodingKeys.allCases.getter()
{
  return &unk_1EFC8FB18;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t REMSuggestedAttributesTrainer.Parameters.CodingKeys.rawValue.getter()
{
  unint64_t result = 0x4F64656C62616E65;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0x6C706D615378616DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0x6153646C756F6873;
      break;
    case 6:
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x65536D6F646E6172;
      break;
    case 9:
      unint64_t result = 0x6168654265726F63;
      break;
    case 0xA:
      unint64_t result = 0x6E69646465626D65;
      break;
    case 0xB:
      unint64_t result = 0x6465726F68636E61;
      break;
    case 0xC:
      unint64_t result = 0x6F69746E65746E69;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t REMSuggestedAttributesTrainer.Parameters.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x4F64656C62616E65;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0x6C706D615378616DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0x6153646C756F6873;
      break;
    case 6:
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x65536D6F646E6172;
      break;
    case 9:
      unint64_t result = 0x6168654265726F63;
      break;
    case 0xA:
      unint64_t result = 0x6E69646465626D65;
      break;
    case 0xB:
      unint64_t result = 0x6465726F68636E61;
      break;
    case 0xC:
      unint64_t result = 0x6F69746E65746E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A7471560(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A75424C4(*a1, *a2);
}

uint64_t sub_1A747156C()
{
  return sub_1A7574110();
}

uint64_t sub_1A74715D4()
{
  REMSuggestedAttributesTrainer.Parameters.CodingKeys.rawValue.getter();
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7471638()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional sub_1A747169C(Swift::String *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.CodingKeys.init(rawValue:)(*a1);
}

unint64_t sub_1A74716A8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = REMSuggestedAttributesTrainer.Parameters.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional sub_1A74716D4@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.Swift::Int value = REMSuggestedAttributesTrainer.Parameters.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A747170C(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FB18;
}

uint64_t sub_1A747171C(uint64_t a1)
{
  unint64_t v2 = sub_1A7476520();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7471758(uint64_t a1)
{
  unint64_t v2 = sub_1A7476520();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.enabledOnmacOS.getter()
{
  return *v0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.enabledOniOS.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.maxSampleCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.minimumSampleCount.getter()
{
  return *(void *)(v0 + 16);
}

double REMSuggestedAttributesTrainer.Parameters.validationSetProportion.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.shouldSaveModel.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.allowLocalOverrides.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.allowCloudOverrides.getter()
{
  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.randomSeed.getter()
{
  return *(void *)(v0 + 40);
}

double REMSuggestedAttributesTrainer.Parameters.coreBehavior.getter@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 104);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 48);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 72);
  *(double *)(a1 + 40) = result;
  *(void *)(a1 + 48) = v3;
  *(void *)(a1 + 56) = v4;
  return result;
}

void REMSuggestedAttributesTrainer.Parameters.embedding.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 112);
  *(void *)(a1 + 8) = v2;
}

double REMSuggestedAttributesTrainer.Parameters.anchoredBubble.getter@<D0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 129);
  double result = *(double *)(v1 + 136);
  char v4 = *(unsigned char *)(v1 + 144);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 128);
  *(unsigned char *)(a1 + 1) = v2;
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

void REMSuggestedAttributesTrainer.Parameters.intentionalWord.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 160);
  char v3 = *(unsigned char *)(v1 + 168);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 152);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
}

void __swiftcall REMSuggestedAttributesTrainer.Parameters.init(enabledOnmacOS:enabledOniOS:maxSampleCount:minimumSampleCount:validationSetProportion:shouldSaveModel:allowLocalOverrides:allowCloudOverrides:randomSeed:coreBehavior:embedding:anchoredBubble:intentionalWord:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters *__return_ptr retstr, Swift::Bool_optional enabledOnmacOS, Swift::Bool_optional enabledOniOS, Swift::Int_optional maxSampleCount, Swift::Int_optional minimumSampleCount, Swift::Double_optional validationSetProportion, Swift::Bool_optional shouldSaveModel, Swift::Bool_optional allowLocalOverrides, Swift::Bool_optional allowCloudOverrides, Swift::Int_optional randomSeed, ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior *coreBehavior, ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding embedding, ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble anchoredBubble, ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord intentionalWord)
{
  double v15 = *(double *)&validationSetProportion.is_nil;
  Swift::Bool is_nil = minimumSampleCount.is_nil;
  Swift::Int value = minimumSampleCount.value;
  Swift::Bool isEnabled = coreBehavior->isEnabled;
  long long v51 = *(_OWORD *)&coreBehavior->support;
  long long v49 = *(_OWORD *)&coreBehavior->confidence;
  Swift::Double validationConfidence = coreBehavior->validationConfidence;
  Swift::UInt feedbackResetVersion = coreBehavior->feedbackResetVersion;
  Swift::Double feedbackExpirationWindow = coreBehavior->feedbackExpirationWindow;
  char v46 = **(unsigned char **)&embedding.isEnabled;
  Swift::Int v45 = *(void *)(*(void *)&embedding.isEnabled + 8);
  char v43 = *(unsigned char *)(embedding.neighborsToConsider + 1);
  char v44 = *(unsigned char *)embedding.neighborsToConsider;
  Swift::Double v21 = *(double *)(embedding.neighborsToConsider + 8);
  char v41 = *v55;
  char v42 = *(unsigned char *)(embedding.neighborsToConsider + 16);
  Swift::Int v40 = *((void *)v55 + 1);
  char v39 = v55[16];
  if (maxSampleCount.is_nil) {
    Swift::Int v22 = 100;
  }
  else {
    Swift::Int v22 = maxSampleCount.value;
  }
  Swift::Int v53 = v22;
  if (qword_1E96F08A0 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1A7571E90();
  __swift_project_value_buffer(v23, (uint64_t)qword_1E96F3C90);
  uint64_t v24 = sub_1A7571E80();
  os_log_type_t v25 = sub_1A7572FF0();
  if (os_log_type_enabled(v24, v25))
  {
    BOOL v26 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)BOOL v26 = 134349056;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v24, v25, "maxSampleCount: %{public}ld", v26, 0xCu);
    MEMORY[0x1AD0CD330](v26, -1, -1);
  }

  if (is_nil) {
    Swift::Int v27 = 30;
  }
  else {
    Swift::Int v27 = value;
  }
  Swift::Bool v28 = sub_1A7571E80();
  os_log_type_t v29 = sub_1A7572FF0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 134349056;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v28, v29, "minimumSampleCount: %{public}ld", v30, 0xCu);
    MEMORY[0x1AD0CD330](v30, -1, -1);
  }
  Swift::Int v31 = randomSeed.value;

  if (shouldSaveModel.value) {
    double v32 = 0.2;
  }
  else {
    double v32 = v15;
  }
  os_log_type_t v33 = sub_1A7571E80();
  os_log_type_t v34 = sub_1A7572FF0();
  if (os_log_type_enabled(v33, v34))
  {
    Swift::UInt v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)Swift::UInt v35 = 134349056;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v33, v34, "validationSetProportion: %{public}f", v35, 0xCu);
    MEMORY[0x1AD0CD330](v35, -1, -1);
  }

  if (randomSeed.is_nil) {
    Swift::Int v31 = sub_1A7433FA8(0x7FFFFFFFFFFFFFFFuLL);
  }
  int v36 = sub_1A7571E80();
  os_log_type_t v37 = sub_1A7572FF0();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 134349056;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v36, v37, "randomSeed: %{public}ld", v38, 0xCu);
    MEMORY[0x1AD0CD330](v38, -1, -1);
  }

  retstr->enabledOnmacOS = enabledOnmacOS.value == 2 || enabledOnmacOS.value;
  retstr->enabledOniOS = enabledOniOS.value == 2 || enabledOniOS.value;
  retstr->maxSampleCount = v53;
  retstr->minimumSampleCount = v27;
  retstr->validationSetProportion = v32;
  retstr->shouldSaveModel = allowLocalOverrides.value;
  retstr->allowLocalOverrides = allowCloudOverrides.value == 2 || allowCloudOverrides.value;
  retstr->allowCloudOverrides = (v54 == 2) | v54 & 1;
  retstr->randomSeed = v31;
  retstr->coreBehavior.Swift::Bool isEnabled = isEnabled;
  *(_OWORD *)&retstr->coreBehavior.support = v51;
  *(_OWORD *)&retstr->coreBehavior.confidence = v49;
  retstr->coreBehavior.Swift::Double validationConfidence = validationConfidence;
  retstr->coreBehavior.Swift::UInt feedbackResetVersion = feedbackResetVersion;
  retstr->coreBehavior.Swift::Double feedbackExpirationWindow = feedbackExpirationWindow;
  retstr->embedding.Swift::Bool isEnabled = v46;
  retstr->embedding.neighborsToConsider = v45;
  retstr->anchoredBubble.enabledOniOS = v44;
  retstr->anchoredBubble.enabledOnmacOS = v43;
  retstr->anchoredBubble.defaultWordDistanceScale = v21;
  retstr->anchoredBubble.overrideLocalWordDistanceScale = v42;
  retstr->intentionalWord.Swift::Bool isEnabled = v41;
  retstr->intentionalWord.k.Swift::Int value = v40;
  retstr->intentionalWord.k.Swift::Bool is_nil = v39;
}

__n128 REMSuggestedAttributesTrainer.Parameters.init(partial:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  if (!*(void *)(v3 + 16))
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_retain();
  unint64_t v5 = sub_1A72B2A34(v4);
  if ((v6 & 1) == 0)
  {
    memset(&v160, 0, 32);
    swift_release();
    goto LABEL_8;
  }
  sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v5, (uint64_t)&v160);
  swift_release();
  if (!*(void *)&v160.validationSetProportion)
  {
LABEL_8:
    sub_1A7315924((uint64_t)&v160);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3EF8);
  if (swift_dynamicCast())
  {
    unint64_t v7 = *(void *)&coreBehavior.isEnabled;
    goto LABEL_10;
  }
LABEL_9:
  unint64_t v7 = sub_1A72B19C8(MEMORY[0x1E4FBC860]);
LABEL_10:
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (!*(void *)(v3 + 16))
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
LABEL_18:
    sub_1A7315924((uint64_t)&v160);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_retain();
  unint64_t v9 = sub_1A72B2A34(v8);
  if (v10) {
    sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v9, (uint64_t)&v160);
  }
  else {
    memset(&v160, 0, 32);
  }
  swift_release();
  if (!*(void *)&v160.validationSetProportion) {
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3EF0);
  if (swift_dynamicCast())
  {
    unint64_t v11 = *(void *)&coreBehavior.isEnabled;
    goto LABEL_20;
  }
LABEL_19:
  unint64_t v11 = sub_1A72B19AC(MEMORY[0x1E4FBC860]);
LABEL_20:
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  uint64_t v148 = a2;
  if (!*(void *)(v3 + 16))
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
LABEL_28:
    sub_1A7315924((uint64_t)&v160);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_retain();
  unint64_t v13 = sub_1A72B2A34(v12);
  if (v14) {
    sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v13, (uint64_t)&v160);
  }
  else {
    memset(&v160, 0, 32);
  }
  swift_release();
  if (!*(void *)&v160.validationSetProportion) {
    goto LABEL_28;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3EE8);
  if (swift_dynamicCast())
  {
    unint64_t v149 = *(void *)&coreBehavior.isEnabled;
    goto LABEL_30;
  }
LABEL_29:
  unint64_t v149 = sub_1A72B1990(MEMORY[0x1E4FBC860]);
LABEL_30:
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1A7473134(v3, (unint64_t *)&v160);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v15 = *(void *)&v160.enabledOnmacOS;
  swift_getKeyPath();
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = swift_retain();
    unint64_t v17 = sub_1A72B2AE4(v16);
    if (v18) {
      sub_1A72BEE98(*(void *)(v7 + 56) + 32 * v17, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
  if (swift_dynamicCast())
  {
    shouldSaveModel.Swift::Int value = coreBehavior.isEnabled;
  }
  else
  {
    shouldSaveModel.Swift::Int value = 2;
    coreBehavior.char isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = swift_retain();
    unint64_t v20 = sub_1A72B2AE4(v19);
    if (v21) {
      sub_1A72BEE98(*(void *)(v7 + 56) + 32 * v20, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v22 = swift_dynamicCast();
  if (v22)
  {
    Swift::UInt v138 = *(void *)&coreBehavior.isEnabled;
  }
  else
  {
    Swift::UInt v138 = 0;
    *(void *)&coreBehavior.char isEnabled = 0;
  }
  char v23 = v22 ^ 1;
  LOBYTE(coreBehavior.support) = v22 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = swift_retain();
    unint64_t v25 = sub_1A72B2AE4(v24);
    if (v26) {
      sub_1A72BEE98(*(void *)(v7 + 56) + 32 * v25, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v27 = swift_dynamicCast();
  if (v27)
  {
    Swift::UInt v136 = *(void *)&coreBehavior.isEnabled;
  }
  else
  {
    Swift::UInt v136 = 0;
    *(void *)&coreBehavior.char isEnabled = 0;
  }
  char v28 = v27 ^ 1;
  LOBYTE(coreBehavior.support) = v27 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = swift_retain();
    unint64_t v30 = sub_1A72B2AE4(v29);
    if (v31) {
      sub_1A72BEE98(*(void *)(v7 + 56) + 32 * v30, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v32 = swift_dynamicCast();
  if (v32)
  {
    Swift::Bool confidence = coreBehavior.isEnabled;
  }
  else
  {
    Swift::Bool confidence = 0;
    *(void *)&coreBehavior.char isEnabled = 0;
  }
  char v144 = v32 ^ 1;
  LOBYTE(coreBehavior.support) = v32 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = swift_retain();
    unint64_t v34 = sub_1A72B2AE4(v33);
    if (v35) {
      sub_1A72BEE98(*(void *)(v7 + 56) + 32 * v34, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v36 = swift_dynamicCast();
  if (v36)
  {
    Swift::Bool allowLocalOverrides = coreBehavior.isEnabled;
  }
  else
  {
    Swift::Bool allowLocalOverrides = 0;
    *(void *)&coreBehavior.char isEnabled = 0;
  }
  char v37 = v36 ^ 1;
  LOBYTE(coreBehavior.support) = v36 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = swift_retain();
    unint64_t v39 = sub_1A72B2AE4(v38);
    if (v40) {
      sub_1A72BEE98(*(void *)(v7 + 56) + 32 * v39, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v41 = swift_dynamicCast();
  if (v41)
  {
    __int16 intentionalWord_16 = *(_WORD *)&coreBehavior.isEnabled;
  }
  else
  {
    __int16 intentionalWord_16 = 0;
    *(void *)&coreBehavior.char isEnabled = 0;
  }
  LOBYTE(coreBehavior.support) = v41 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = swift_retain();
    unint64_t v43 = sub_1A72B2AE4(v42);
    if (v44) {
      sub_1A72BEE98(*(void *)(v7 + 56) + 32 * v43, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v45 = swift_dynamicCast();
  if (!v45) {
    *(void *)&coreBehavior.char isEnabled = 0;
  }
  LOBYTE(coreBehavior.support) = v45 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v7 + 16))
  {
    uint64_t v46 = swift_retain();
    unint64_t v47 = sub_1A72B2AE4(v46);
    if (v48) {
      sub_1A72BEE98(*(void *)(v7 + 56) + 32 * v47, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
  }
  int v49 = swift_dynamicCast();
  uint64_t v147 = v15;
  if (!v49) {
    *(void *)&coreBehavior.char isEnabled = 0;
  }
  LOBYTE(coreBehavior.support) = v49 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  v174.Swift::Bool is_nil = allowLocalOverrides;
  *(_WORD *)&feedbackResetVersion[8] = intentionalWord_16;
  feedbackResetVersion[0] = v37;
  v169.Swift::Int value = v136;
  v165.Swift::Int value = v138;
  v165.Swift::Bool is_nil = v23;
  v173.Swift::Bool is_nil = v144;
  v169.Swift::Bool is_nil = v28;
  v171.Swift::Bool is_nil = confidence;
  REMSuggestedAttributesTrainer.Parameters.CoreBehavior.init(isEnabled:support:adjustment:confidence:validationRelativeSupport:validationConfidence:feedbackResetVersion:feedbackExpirationWindow:)((ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior *)&v160, shouldSaveModel, v165, v169, v171, v173, v174, *(Swift::UInt_optional *)feedbackResetVersion, *(Swift::Double_optional *)&feedbackResetVersion[1]);
  Swift::Bool enabledOnmacOS = v160.enabledOnmacOS;
  Swift::Int maxSampleCount = v160.maxSampleCount;
  Swift::Int minimumSampleCount = v160.minimumSampleCount;
  Swift::Double validationSetProportion = v160.validationSetProportion;
  Swift::Double v54 = *(double *)&v160.shouldSaveModel;
  Swift::Double v55 = *(double *)&v160.randomSeed;
  Swift::UInt v56 = *(void *)&v160.coreBehavior.isEnabled;
  Swift::Double v57 = *(double *)&v160.coreBehavior.support;
  swift_getKeyPath();
  if (*(void *)(v149 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v58 = swift_retain();
    unint64_t v59 = sub_1A72B2AD8(v58);
    if (v60) {
      sub_1A72BEE98(*(void *)(v149 + 56) + 32 * v59, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  if (swift_dynamicCast())
  {
    *(_DWORD *)&intentionalWord.gap1[3] = coreBehavior.isEnabled;
  }
  else
  {
    *(_DWORD *)&intentionalWord.gap1[3] = 2;
    coreBehavior.char isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v149 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v61 = swift_retain();
    unint64_t v62 = sub_1A72B2AD8(v61);
    if (v63) {
      sub_1A72BEE98(*(void *)(v149 + 56) + 32 * v62, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  if (swift_dynamicCast())
  {
    *(_DWORD *)&intentionalWord.char isEnabled = coreBehavior.isEnabled;
  }
  else
  {
    *(_DWORD *)&intentionalWord.char isEnabled = 2;
    coreBehavior.char isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v149 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v64 = swift_retain();
    unint64_t v65 = sub_1A72B2AD8(v64);
    if (v66) {
      sub_1A72BEE98(*(void *)(v149 + 56) + 32 * v65, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v67 = swift_dynamicCast();
  if (v67)
  {
    uint64_t v68 = *(void *)&coreBehavior.isEnabled;
  }
  else
  {
    *(void *)&coreBehavior.char isEnabled = 0;
    uint64_t v68 = 0x3FC999999999999ALL;
  }
  LOBYTE(coreBehavior.support) = v67 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v149 + 16))
  {
    uint64_t v69 = swift_retain();
    unint64_t v70 = sub_1A72B2AD8(v69);
    if (v71) {
      sub_1A72BEE98(*(void *)(v149 + 56) + 32 * v70, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
  }
  Swift::Bool adjustment = enabledOnmacOS;
  if (swift_dynamicCast())
  {
    char isEnabled = coreBehavior.isEnabled;
  }
  else
  {
    char isEnabled = 2;
    coreBehavior.char isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v72 = swift_retain();
    unint64_t v73 = sub_1A72B2ACC(v72);
    if (v74) {
      sub_1A72BEE98(*(void *)(v11 + 56) + 32 * v73, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  if (swift_dynamicCast())
  {
    v75.Swift::Int value = coreBehavior.isEnabled;
  }
  else
  {
    v75.Swift::Int value = 2;
    coreBehavior.char isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v11 + 16))
  {
    uint64_t v76 = swift_retain();
    unint64_t v77 = sub_1A72B2ACC(v76);
    if (v78) {
      sub_1A72BEE98(*(void *)(v11 + 56) + 32 * v77, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
  }
  int v79 = swift_dynamicCast();
  if (v79)
  {
    Swift::Int v80 = *(void *)&coreBehavior.isEnabled;
  }
  else
  {
    Swift::Int v80 = 0;
    *(void *)&coreBehavior.char isEnabled = 0;
  }
  char v81 = v79 ^ 1;
  LOBYTE(coreBehavior.support) = v79 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  v166.Swift::Int value = v80;
  v166.Swift::Bool is_nil = v81;
  REMSuggestedAttributesTrainer.Parameters.Embedding.init(isEnabled:neighborsToConsider:)(v75, v166);
  Swift::Bool v82 = v160.enabledOnmacOS;
  Swift::Int v83 = v160.maxSampleCount;
  swift_getKeyPath();
  if (*(void *)(v147 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v84 = swift_retain();
    unint64_t v85 = sub_1A72B2A40(v84);
    if (v86) {
      sub_1A72BEE98(*(void *)(v147 + 56) + 32 * v85, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  Swift::Bool v150 = v82;
  Swift::Int v145 = v83;
  if (swift_dynamicCast())
  {
    v87.Swift::Int value = coreBehavior.isEnabled;
  }
  else
  {
    v87.Swift::Int value = 2;
    coreBehavior.char isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  Swift::Int v89 = sub_1A747320C(KeyPath, v147);
  char v91 = v90;
  swift_bridgeObjectRelease();
  swift_release();
  v167.Swift::Bool is_nil = v91 & 1;
  v167.Swift::Int value = v89;
  REMSuggestedAttributesTrainer.Parameters.IntentionalWord.init(isEnabled:k:)(v87, v167);
  Swift::Bool v92 = v160.enabledOnmacOS;
  Swift::Int v93 = v160.maxSampleCount;
  char v94 = v160.minimumSampleCount;
  swift_getKeyPath();
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v95 = swift_retain();
    unint64_t v96 = sub_1A72B2A34(v95);
    if (v97) {
      sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v96, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v98 = swift_dynamicCast();
  if (v98)
  {
    Swift::Int v139 = *(void *)&coreBehavior.isEnabled;
  }
  else
  {
    Swift::Int v139 = 0;
    *(void *)&coreBehavior.char isEnabled = 0;
  }
  char v143 = v98 ^ 1;
  LOBYTE(coreBehavior.support) = v98 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v99 = swift_retain();
    unint64_t v100 = sub_1A72B2A34(v99);
    if (v101) {
      sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v100, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v102 = swift_dynamicCast();
  if (v102)
  {
    Swift::Int v137 = *(void *)&coreBehavior.isEnabled;
  }
  else
  {
    Swift::Int v137 = 0;
    *(void *)&coreBehavior.char isEnabled = 0;
  }
  char v142 = v102 ^ 1;
  LOBYTE(coreBehavior.support) = v102 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v103 = swift_retain();
    unint64_t v104 = sub_1A72B2A34(v103);
    if (v105) {
      sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v104, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v106 = swift_dynamicCast();
  if (v106)
  {
    Swift::Bool confidencea = coreBehavior.isEnabled;
  }
  else
  {
    Swift::Bool confidencea = 0;
    *(void *)&coreBehavior.char isEnabled = 0;
  }
  shouldSaveModela.Swift::Int value = v106 ^ 1;
  LOBYTE(coreBehavior.support) = v106 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v107 = swift_retain();
    unint64_t v108 = sub_1A72B2A34(v107);
    if (v109) {
      sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v108, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  if (swift_dynamicCast())
  {
    allowLocalOverridesa.Swift::Int value = coreBehavior.isEnabled;
  }
  else
  {
    allowLocalOverridesa.Swift::Int value = 2;
    coreBehavior.char isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v110 = swift_retain();
    unint64_t v111 = sub_1A72B2A34(v110);
    if (v112) {
      sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v111, (uint64_t)&v160);
    }
    else {
      memset(&v160, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  if (swift_dynamicCast())
  {
    intentionalWord.k.Swift::Bool is_nil = coreBehavior.isEnabled;
  }
  else
  {
    intentionalWord.k.Swift::Bool is_nil = 2;
    coreBehavior.char isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v3 + 16))
  {
    uint64_t v113 = swift_retain();
    unint64_t v114 = sub_1A72B2A34(v113);
    if (v115)
    {
      sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v114, (uint64_t)&v161);
    }
    else
    {
      long long v161 = 0u;
      long long v162 = 0u;
    }
    swift_release();
  }
  else
  {
    long long v161 = 0u;
    long long v162 = 0u;
  }
  int v116 = swift_dynamicCast();
  if (v116)
  {
    intentionalWord.k.Swift::Int value = v163;
  }
  else
  {
    intentionalWord.k.Swift::Int value = 0;
    Swift::Int v163 = 0;
  }
  char v117 = v116 ^ 1;
  char v164 = v116 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  coreBehavior.char isEnabled = adjustment;
  coreBehavior.support = maxSampleCount;
  coreBehavior.Swift::Bool adjustment = minimumSampleCount;
  coreBehavior.Swift::Bool confidence = validationSetProportion;
  coreBehavior.validationRelativeSupport = v54;
  coreBehavior.Swift::Double validationConfidence = v55;
  coreBehavior.Swift::UInt feedbackResetVersion = v56;
  coreBehavior.Swift::Double feedbackExpirationWindow = v57;
  Swift::Bool v157 = v150;
  Swift::Int v158 = v145;
  v154[0] = (*(_DWORD *)&intentionalWord.gap1[3] == 2) | intentionalWord.gap1[3] & 1;
  v154[1] = *(_DWORD *)&intentionalWord.isEnabled == 2 || intentionalWord.isEnabled;
  uint64_t v155 = v68;
  char v156 = isEnabled & 1;
  Swift::Bool v151 = v92;
  Swift::Int v152 = v93;
  char v153 = v94;
  uint64_t v126 = v154;
  uint64_t v127 = &v151;
  uint64_t v125 = &v157;
  feedbackResetVersion_8.Swift::Bool is_nil = v117;
  feedbackResetVersion_8.Swift::Int value = intentionalWord.k.value;
  v170.Swift::Int value = v137;
  v168.Swift::Int value = v139;
  v170.Swift::Bool is_nil = v142;
  v168.Swift::Bool is_nil = v143;
  v172.Swift::Bool is_nil = confidencea;
  REMSuggestedAttributesTrainer.Parameters.init(enabledOnmacOS:enabledOniOS:maxSampleCount:minimumSampleCount:validationSetProportion:shouldSaveModel:allowLocalOverrides:allowCloudOverrides:randomSeed:coreBehavior:embedding:anchoredBubble:intentionalWord:)(&v160, (Swift::Bool_optional)2, (Swift::Bool_optional)2, v168, v170, v172, shouldSaveModela, allowLocalOverridesa, (Swift::Bool_optional)2, feedbackResetVersion_8, &coreBehavior, *(ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding *)(&v126 - 1), *(ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble *)(&v128 - 16), intentionalWord);
  long long v118 = *(_OWORD *)&v160.anchoredBubble.overrideLocalWordDistanceScale;
  *(_OWORD *)(v148 + 128) = *(_OWORD *)&v160.anchoredBubble.enabledOniOS;
  *(_OWORD *)(v148 + 144) = v118;
  *(_OWORD *)(v148 + 153) = *(_OWORD *)v160.intentionalWord.gap1;
  long long v119 = *(_OWORD *)&v160.coreBehavior.validationRelativeSupport;
  *(_OWORD *)(v148 + 64) = *(_OWORD *)&v160.coreBehavior.adjustment;
  *(_OWORD *)(v148 + 80) = v119;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding embedding = v160.embedding;
  *(_OWORD *)(v148 + 96) = *(_OWORD *)&v160.coreBehavior.feedbackResetVersion;
  *(ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding *)(v148 + 112) = embedding;
  long long v121 = *(_OWORD *)&v160.minimumSampleCount;
  *(_OWORD *)uint64_t v148 = *(_OWORD *)&v160.enabledOnmacOS;
  *(_OWORD *)(v148 + 16) = v121;
  __n128 result = *(__n128 *)&v160.coreBehavior.isEnabled;
  *(_OWORD *)(v148 + 32) = *(_OWORD *)&v160.shouldSaveModel;
  *(__n128 *)(v148 + 48) = result;
  return result;
}

unint64_t sub_1A7473134@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  if (!*(void *)(a1 + 16))
  {
    long long v9 = 0u;
    long long v10 = 0u;
    goto LABEL_8;
  }
  uint64_t v4 = swift_retain();
  unint64_t v5 = sub_1A72B2A34(v4);
  if ((v6 & 1) == 0)
  {
    long long v9 = 0u;
    long long v10 = 0u;
    swift_release();
    goto LABEL_8;
  }
  sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v5, (uint64_t)&v9);
  swift_release();
  if (!*((void *)&v10 + 1))
  {
LABEL_8:
    sub_1A7315924((uint64_t)&v9);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4110);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    unint64_t result = sub_1A72B1974(MEMORY[0x1E4FBC860]);
    goto LABEL_10;
  }
  unint64_t result = v8;
LABEL_10:
  *a2 = result;
  return result;
}

uint64_t sub_1A747320C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    goto LABEL_8;
  }
  uint64_t v3 = swift_retain();
  unint64_t v4 = sub_1A72B2A40(v3);
  if ((v5 & 1) == 0)
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_release();
    goto LABEL_8;
  }
  sub_1A72BEE98(*(void *)(a2 + 56) + 32 * v4, (uint64_t)&v8);
  swift_release();
  if (!*((void *)&v9 + 1))
  {
LABEL_8:
    sub_1A7315924((uint64_t)&v8);
    return 0;
  }
  sub_1A72BEE44(&v8, v10);
  sub_1A72BEE44(v10, &v8);
  if (swift_dynamicCast()) {
    return v7;
  }
  return 0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3F00);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v50 = *(unsigned __int8 *)(v1 + 1);
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v38 = *(void *)(v1 + 16);
  uint64_t v39 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 32);
  int v35 = *(unsigned __int8 *)(v1 + 33);
  int v36 = v7;
  int v34 = *(unsigned __int8 *)(v1 + 34);
  uint64_t v33 = *(void *)(v1 + 40);
  int v32 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v31 = *(void *)(v1 + 56);
  uint64_t v30 = *(void *)(v1 + 64);
  uint64_t v8 = *(void *)(v1 + 72);
  uint64_t v9 = *(void *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 88);
  uint64_t v29 = *(void *)(v1 + 96);
  uint64_t v11 = *(void *)(v1 + 104);
  int v28 = *(unsigned __int8 *)(v1 + 112);
  uint64_t v27 = *(void *)(v1 + 120);
  int v26 = *(unsigned __int8 *)(v1 + 128);
  int v25 = *(unsigned __int8 *)(v1 + 129);
  uint64_t v12 = *(void *)(v1 + 136);
  int v24 = *(unsigned __int8 *)(v1 + 144);
  int v37 = *(unsigned __int8 *)(v1 + 152);
  uint64_t v13 = *(void *)(v1 + 160);
  int v14 = *(unsigned __int8 *)(v1 + 168);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1;
  uint64_t v18 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v15);
  sub_1A7476520();
  sub_1A75741B0();
  char v41 = 0;
  uint64_t v19 = v40;
  sub_1A7573B20();
  if (!v19)
  {
    int v23 = v14;
    uint64_t v40 = v13;
    char v20 = v37;
    char v41 = 1;
    sub_1A7573B20();
    char v41 = 2;
    sub_1A7573B40();
    char v41 = 3;
    sub_1A7573B40();
    char v41 = 4;
    sub_1A7573B30();
    char v41 = 5;
    sub_1A7573B20();
    char v41 = 6;
    sub_1A7573B20();
    char v41 = 7;
    sub_1A7573B20();
    char v41 = 8;
    sub_1A7573B40();
    char v41 = v32;
    uint64_t v43 = v31;
    uint64_t v44 = v30;
    uint64_t v45 = v8;
    uint64_t v46 = v9;
    uint64_t v47 = v10;
    uint64_t v48 = v29;
    uint64_t v49 = v11;
    char v51 = 9;
    sub_1A7476574();
    sub_1A7573B60();
    char v41 = v28;
    uint64_t v43 = v27;
    char v51 = 10;
    sub_1A74765C8();
    sub_1A7573B60();
    char v41 = v26;
    char v42 = v25;
    uint64_t v43 = v12;
    LOBYTE(v44) = v24;
    char v51 = 11;
    sub_1A747661C();
    sub_1A7573B60();
    char v41 = v20;
    uint64_t v43 = v40;
    LOBYTE(v44) = v23;
    char v51 = 12;
    sub_1A7476670();
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v18);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3F30);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7476520();
  sub_1A7574190();
  if (!v2)
  {
    unsigned __int8 v41 = 0;
    char v9 = sub_1A7573A10();
    unsigned __int8 v41 = 1;
    char v10 = sub_1A7573A10();
    unsigned __int8 v41 = 2;
    uint64_t v40 = sub_1A7573A30();
    unsigned __int8 v41 = 3;
    uint64_t v39 = sub_1A7573A30();
    unsigned __int8 v41 = 4;
    sub_1A7573A20();
    uint64_t v12 = v11;
    unsigned __int8 v41 = 5;
    int v38 = sub_1A7573A10();
    unsigned __int8 v41 = 6;
    int v37 = sub_1A7573A10();
    unsigned __int8 v41 = 7;
    int v36 = sub_1A7573A10();
    unsigned __int8 v41 = 8;
    uint64_t v35 = sub_1A7573A30();
    char v51 = 9;
    sub_1A74766C4();
    sub_1A7573A50();
    int v34 = v41;
    uint64_t v33 = v43;
    uint64_t v32 = v44;
    uint64_t v13 = v45;
    uint64_t v14 = v46;
    uint64_t v15 = v47;
    uint64_t v31 = v48;
    uint64_t v16 = v49;
    char v51 = 10;
    sub_1A7476718();
    sub_1A7573A50();
    int v30 = v41;
    uint64_t v29 = v43;
    char v51 = 11;
    sub_1A747676C();
    sub_1A7573A50();
    int v28 = v41;
    int v27 = v42;
    uint64_t v17 = v43;
    HIDWORD(v26) = v44;
    char v51 = 12;
    sub_1A74767C0();
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    unsigned __int8 v19 = v41;
    uint64_t v20 = v43;
    char v21 = v38 & 1;
    char v22 = v37 & 1;
    char v23 = v36 & 1;
    char v50 = v44;
    *(unsigned char *)a2 = v9 & 1;
    *(unsigned char *)(a2 + 1) = v10 & 1;
    uint64_t v24 = v39;
    *(void *)(a2 + 8) = v40;
    *(void *)(a2 + 16) = v24;
    *(void *)(a2 + 24) = v12;
    *(unsigned char *)(a2 + 32) = v21;
    *(unsigned char *)(a2 + 33) = v22;
    *(unsigned char *)(a2 + 34) = v23;
    *(void *)(a2 + 40) = v35;
    *(unsigned char *)(a2 + 48) = v34;
    uint64_t v25 = v32;
    *(void *)(a2 + 56) = v33;
    *(void *)(a2 + 64) = v25;
    *(void *)(a2 + 72) = v13;
    *(void *)(a2 + 80) = v14;
    *(void *)(a2 + 88) = v15;
    *(void *)(a2 + 96) = v31;
    *(void *)(a2 + 104) = v16;
    *(unsigned char *)(a2 + 112) = v30;
    *(void *)(a2 + 120) = v29;
    *(unsigned char *)(a2 + 128) = v28;
    *(unsigned char *)(a2 + 129) = v27;
    *(void *)(a2 + 136) = v17;
    *(unsigned char *)(a2 + 144) = BYTE4(v26);
    *(unsigned char *)(a2 + 152) = v19;
    *(void *)(a2 + 160) = v20;
    *(unsigned char *)(a2 + 168) = v50;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A7473D00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A7473D18(void *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.encode(to:)(a1);
}

id REMSuggestedAttributesTrainer.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMSuggestedAttributesTrainer.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

uint64_t sub_1A7473E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7374BCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A7473E3C(uint64_t a1)
{
  unint64_t v2 = sub_1A7474824();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7473E78(uint64_t a1)
{
  unint64_t v2 = sub_1A7474824();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A7473EB4()
{
  return sub_1A75729E0();
}

uint64_t sub_1A7473F14()
{
  return sub_1A7572990();
}

unint64_t sub_1A7473F64()
{
  unint64_t result = qword_1E96F3CB0;
  if (!qword_1E96F3CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3CB0);
  }
  return result;
}

unint64_t sub_1A7473FB8()
{
  unint64_t result = qword_1E96F3CB8;
  if (!qword_1E96F3CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3CB8);
  }
  return result;
}

unint64_t sub_1A747400C()
{
  unint64_t result = qword_1E96F3CC8;
  if (!qword_1E96F3CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3CC8);
  }
  return result;
}

unint64_t sub_1A7474060()
{
  unint64_t result = qword_1E96F3CD8;
  if (!qword_1E96F3CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3CD8);
  }
  return result;
}

unint64_t sub_1A74740B4()
{
  unint64_t result = qword_1E96F3CF0;
  if (!qword_1E96F3CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3CF0);
  }
  return result;
}

uint64_t sub_1A7474108(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A7474384(uint64_t a1)
{
  return a1;
}

unint64_t sub_1A7474604()
{
  unint64_t result = qword_1E96F3D08;
  if (!qword_1E96F3D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3D08);
  }
  return result;
}

uint64_t sub_1A7474658(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A74746B8()
{
  unint64_t result = qword_1E96F3D48;
  if (!qword_1E96F3D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3D48);
  }
  return result;
}

uint64_t sub_1A747470C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3D50);
    sub_1A7474658(a2, &qword_1E96F3D10);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A7474798(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3D60);
    sub_1A7474658(a2, &qword_1E96F0EA0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A7474824()
{
  unint64_t result = qword_1E96F3D90;
  if (!qword_1E96F3D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3D90);
  }
  return result;
}

unint64_t sub_1A7474878()
{
  unint64_t result = qword_1E96F3D98;
  if (!qword_1E96F3D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3D98);
  }
  return result;
}

unint64_t sub_1A74748CC()
{
  unint64_t result = qword_1E96F3DA0;
  if (!qword_1E96F3DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3DA0);
  }
  return result;
}

unint64_t sub_1A7474920()
{
  unint64_t result = qword_1E96F3DA8;
  if (!qword_1E96F3DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3DA8);
  }
  return result;
}

unint64_t sub_1A7474974()
{
  unint64_t result = qword_1E96F3DB8;
  if (!qword_1E96F3DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3DB8);
  }
  return result;
}

unint64_t sub_1A74749C8()
{
  unint64_t result = qword_1E96F3DC0;
  if (!qword_1E96F3DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3DC0);
  }
  return result;
}

unint64_t sub_1A7474A1C()
{
  unint64_t result = qword_1E96F3DC8;
  if (!qword_1E96F3DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3DC8);
  }
  return result;
}

uint64_t sub_1A7474A70(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 168);
}

uint64_t sub_1A7474A78(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 464);
}

uint64_t sub_1A7474A80(uint64_t result)
{
  *(unsigned char *)(result + 464) = 0;
  return result;
}

uint64_t sub_1A7474A88(uint64_t result)
{
  *(unsigned char *)(result + 168) = 0;
  return result;
}

unint64_t sub_1A7474A90()
{
  unint64_t result = qword_1E96F3DE8;
  if (!qword_1E96F3DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3DE8);
  }
  return result;
}

unint64_t sub_1A7474AE4()
{
  unint64_t result = qword_1E96F3DF0;
  if (!qword_1E96F3DF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3DD0);
    sub_1A7474B7C();
    sub_1A7474BD0();
    sub_1A7430700();
    sub_1A7430754();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3DF0);
  }
  return result;
}

unint64_t sub_1A7474B7C()
{
  unint64_t result = qword_1E96F3DF8;
  if (!qword_1E96F3DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3DF8);
  }
  return result;
}

unint64_t sub_1A7474BD0()
{
  unint64_t result = qword_1E96F3E00;
  if (!qword_1E96F3E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E00);
  }
  return result;
}

unint64_t sub_1A7474C24()
{
  unint64_t result = qword_1E96F3E10;
  if (!qword_1E96F3E10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3E08);
    sub_1A7474CBC();
    sub_1A7474D10();
    sub_1A7430700();
    sub_1A7430754();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E10);
  }
  return result;
}

unint64_t sub_1A7474CBC()
{
  unint64_t result = qword_1E96F3E18;
  if (!qword_1E96F3E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E18);
  }
  return result;
}

unint64_t sub_1A7474D10()
{
  unint64_t result = qword_1E96F3E20;
  if (!qword_1E96F3E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E20);
  }
  return result;
}

unint64_t sub_1A7474D64()
{
  unint64_t result = qword_1E96F3E28;
  if (!qword_1E96F3E28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3DD8);
    sub_1A7474DFC();
    sub_1A7474E50();
    sub_1A7430700();
    sub_1A7430754();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E28);
  }
  return result;
}

unint64_t sub_1A7474DFC()
{
  unint64_t result = qword_1E96F3E30;
  if (!qword_1E96F3E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E30);
  }
  return result;
}

unint64_t sub_1A7474E50()
{
  unint64_t result = qword_1E96F3E38;
  if (!qword_1E96F3E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E38);
  }
  return result;
}

unint64_t sub_1A7474EA4()
{
  unint64_t result = qword_1E96F3E48;
  if (!qword_1E96F3E48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3E40);
    sub_1A7474F3C();
    sub_1A7474F90();
    sub_1A7430700();
    sub_1A7430754();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E48);
  }
  return result;
}

unint64_t sub_1A7474F3C()
{
  unint64_t result = qword_1E96F3E50;
  if (!qword_1E96F3E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E50);
  }
  return result;
}

unint64_t sub_1A7474F90()
{
  unint64_t result = qword_1E96F3E58;
  if (!qword_1E96F3E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E58);
  }
  return result;
}

unint64_t sub_1A7474FE4()
{
  unint64_t result = qword_1E96F3E68;
  if (!qword_1E96F3E68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3DD0);
    sub_1A7474B7C();
    sub_1A7474BD0();
    sub_1A7430700();
    sub_1A7430754();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E68);
  }
  return result;
}

unint64_t sub_1A747507C()
{
  unint64_t result = qword_1E96F3E70;
  if (!qword_1E96F3E70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3E08);
    sub_1A7474CBC();
    sub_1A7474D10();
    sub_1A7430700();
    sub_1A7430754();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E70);
  }
  return result;
}

uint64_t sub_1A7475114(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 168);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    v4);
  return a1;
}

uint64_t sub_1A7475188(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v18 = *(unsigned char *)(a1 + 464);
  long long v16 = *(_OWORD *)(a1 + 416);
  long long v17 = *(_OWORD *)(a1 + 432);
  long long v14 = *(_OWORD *)(a1 + 384);
  long long v15 = *(_OWORD *)(a1 + 400);
  long long v12 = *(_OWORD *)(a1 + 352);
  long long v13 = *(_OWORD *)(a1 + 368);
  long long v10 = *(_OWORD *)(a1 + 320);
  long long v11 = *(_OWORD *)(a1 + 336);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    v10,
    *((void *)&v10 + 1),
    v11,
    *((void *)&v11 + 1),
    v12,
    *((void *)&v12 + 1),
    v13,
    *((void *)&v13 + 1),
    v14,
    *((void *)&v14 + 1),
    v15,
    *((void *)&v15 + 1),
    v16,
    *((void *)&v16 + 1),
    v17,
    *((void *)&v17 + 1),
    *(void *)(a1 + 448),
    *(void *)(a1 + 456),
    v18);
  return a1;
}

unint64_t sub_1A7475244()
{
  unint64_t result = qword_1E96F3E78;
  if (!qword_1E96F3E78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3DD8);
    sub_1A7474DFC();
    sub_1A7474E50();
    sub_1A7430700();
    sub_1A7430754();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E78);
  }
  return result;
}

unint64_t sub_1A74752DC()
{
  unint64_t result = qword_1E96F3E80;
  if (!qword_1E96F3E80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3E40);
    sub_1A7474F3C();
    sub_1A7474F90();
    sub_1A7430700();
    sub_1A7430754();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E80);
  }
  return result;
}

unint64_t sub_1A7475374()
{
  unint64_t result = qword_1E96F3E90;
  if (!qword_1E96F3E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3E90);
  }
  return result;
}

unint64_t sub_1A74753C8()
{
  unint64_t result = qword_1E96F3EA8;
  if (!qword_1E96F3EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3EA8);
  }
  return result;
}

unint64_t sub_1A747541C()
{
  unint64_t result = qword_1E96F3EC0;
  if (!qword_1E96F3EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3EC0);
  }
  return result;
}

unint64_t sub_1A7475470()
{
  unint64_t result = qword_1E96F3ED8;
  if (!qword_1E96F3ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3ED8);
  }
  return result;
}

uint64_t sub_1A74754C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756363417473696CLL && a2 == 0xEC00000079636172;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A75A3B70 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A3B90 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A75A3BB0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A3BD0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A74756D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F69736963657270 && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6C61636572 && a2 == 0xE600000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A75A3B70 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A3B90 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A75A3BB0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A3BD0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1A747593C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756363417473696CLL && a2 == 0xEC00000079636172;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A75A3BF0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A75A3C10 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C755264656E696DLL && a2 == 0xEE00746E756F4365 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A75A3C30 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A3B90 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A75A3BB0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A75A3C50 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A3BD0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x73656C7552706F74 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_1A7475D30(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A3C70 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C72657473756C63 && a2 == 0xED0000736C656261 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5372657473756C63 && a2 == 0xEC00000073657A69 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6648685 && a2 == 0xE300000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A3BD0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A7475F74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4B74736562 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A75A3C90 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A3C70 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5372657473756C63 && a2 == 0xEC00000073657A69 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 6648685 && a2 == 0xE300000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1265527149 && a2 == 0xE400000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1266180461 && a2 == 0xE400000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A3BD0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1A7476284(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69646465626D65 && a2 == 0xE900000000000067;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465726F68636E61 && a2 == 0xEE00656C62627542 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6168656265726F63 && a2 == 0xEC000000726F6976 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F69746E65746E69 && a2 == 0xEF64726F576C616ELL || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A3BD0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t _s19ReminderKitInternal29REMSuggestedAttributesTrainerC10ParametersV14partialKeyPath3fors07PartialiJ0CyAEGAE10CodingKeysO_tFZ_0()
{
  return swift_getKeyPath();
}

unint64_t sub_1A7476520()
{
  unint64_t result = qword_1E96F3F08;
  if (!qword_1E96F3F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F08);
  }
  return result;
}

unint64_t sub_1A7476574()
{
  unint64_t result = qword_1E96F3F10;
  if (!qword_1E96F3F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F10);
  }
  return result;
}

unint64_t sub_1A74765C8()
{
  unint64_t result = qword_1E96F3F18;
  if (!qword_1E96F3F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F18);
  }
  return result;
}

unint64_t sub_1A747661C()
{
  unint64_t result = qword_1E96F3F20;
  if (!qword_1E96F3F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F20);
  }
  return result;
}

unint64_t sub_1A7476670()
{
  unint64_t result = qword_1E96F3F28;
  if (!qword_1E96F3F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F28);
  }
  return result;
}

unint64_t sub_1A74766C4()
{
  unint64_t result = qword_1E96F3F38;
  if (!qword_1E96F3F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F38);
  }
  return result;
}

unint64_t sub_1A7476718()
{
  unint64_t result = qword_1E96F3F40;
  if (!qword_1E96F3F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F40);
  }
  return result;
}

unint64_t sub_1A747676C()
{
  unint64_t result = qword_1E96F3F48;
  if (!qword_1E96F3F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F48);
  }
  return result;
}

unint64_t sub_1A74767C0()
{
  unint64_t result = qword_1E96F3F50;
  if (!qword_1E96F3F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F50);
  }
  return result;
}

unint64_t sub_1A7476818()
{
  unint64_t result = qword_1E96F3F58;
  if (!qword_1E96F3F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F58);
  }
  return result;
}

uint64_t sub_1A747686C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7477018(a1, a2, a3, (uint64_t (*)(void))sub_1A7476898, (uint64_t (*)(void))sub_1A7475374);
}

unint64_t sub_1A7476898()
{
  unint64_t result = qword_1E96F3F60;
  if (!qword_1E96F3F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F60);
  }
  return result;
}

unint64_t sub_1A74768F0()
{
  unint64_t result = qword_1E96F3F68;
  if (!qword_1E96F3F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F68);
  }
  return result;
}

unint64_t sub_1A7476948()
{
  unint64_t result = qword_1E96F3F70;
  if (!qword_1E96F3F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F70);
  }
  return result;
}

uint64_t sub_1A747699C()
{
  return sub_1A72D99AC(&qword_1E96F3F78, &qword_1E96F3F80);
}

unint64_t sub_1A74769CC(uint64_t a1)
{
  unint64_t result = sub_1A74766C4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A74769F8()
{
  unint64_t result = qword_1E96F3F88;
  if (!qword_1E96F3F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F88);
  }
  return result;
}

uint64_t sub_1A7476A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7477018(a1, a2, a3, (uint64_t (*)(void))sub_1A7476A78, (uint64_t (*)(void))sub_1A74753C8);
}

unint64_t sub_1A7476A78()
{
  unint64_t result = qword_1E96F3F90;
  if (!qword_1E96F3F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F90);
  }
  return result;
}

unint64_t sub_1A7476AD0()
{
  unint64_t result = qword_1E96F3F98;
  if (!qword_1E96F3F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3F98);
  }
  return result;
}

unint64_t sub_1A7476B28()
{
  unint64_t result = qword_1E96F3FA0;
  if (!qword_1E96F3FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3FA0);
  }
  return result;
}

uint64_t sub_1A7476B7C()
{
  return sub_1A72D99AC(&qword_1E96F3FA8, &qword_1E96F3FB0);
}

unint64_t sub_1A7476BAC(uint64_t a1)
{
  unint64_t result = sub_1A7476718();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A7476BD8()
{
  unint64_t result = qword_1E96F3FB8;
  if (!qword_1E96F3FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3FB8);
  }
  return result;
}

uint64_t sub_1A7476C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7477018(a1, a2, a3, (uint64_t (*)(void))sub_1A7476C58, (uint64_t (*)(void))sub_1A747541C);
}

unint64_t sub_1A7476C58()
{
  unint64_t result = qword_1E96F3FC0;
  if (!qword_1E96F3FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3FC0);
  }
  return result;
}

unint64_t sub_1A7476CB0()
{
  unint64_t result = qword_1E96F3FC8;
  if (!qword_1E96F3FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3FC8);
  }
  return result;
}

unint64_t sub_1A7476D08()
{
  unint64_t result = qword_1E96F3FD0;
  if (!qword_1E96F3FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3FD0);
  }
  return result;
}

uint64_t sub_1A7476D5C()
{
  return sub_1A72D99AC(&qword_1E96F3FD8, &qword_1E96F3FE0);
}

unint64_t sub_1A7476D8C(uint64_t a1)
{
  unint64_t result = sub_1A747676C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A7476DB8()
{
  unint64_t result = qword_1E96F3FE8;
  if (!qword_1E96F3FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3FE8);
  }
  return result;
}

uint64_t sub_1A7476E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7477018(a1, a2, a3, (uint64_t (*)(void))sub_1A7476E38, (uint64_t (*)(void))sub_1A7475470);
}

unint64_t sub_1A7476E38()
{
  unint64_t result = qword_1E96F3FF0;
  if (!qword_1E96F3FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3FF0);
  }
  return result;
}

unint64_t sub_1A7476E90()
{
  unint64_t result = qword_1E96F3FF8;
  if (!qword_1E96F3FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3FF8);
  }
  return result;
}

unint64_t sub_1A7476EE8()
{
  unint64_t result = qword_1E96F4000;
  if (!qword_1E96F4000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4000);
  }
  return result;
}

uint64_t sub_1A7476F3C()
{
  return sub_1A72D99AC(&qword_1E96F4008, &qword_1E96F4010);
}

unint64_t sub_1A7476F6C(uint64_t a1)
{
  unint64_t result = sub_1A74767C0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A7476F98()
{
  unint64_t result = qword_1E96F4018;
  if (!qword_1E96F4018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4018);
  }
  return result;
}

uint64_t sub_1A7476FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7477018(a1, a2, a3, (uint64_t (*)(void))sub_1A7477054, (uint64_t (*)(void))sub_1A7476520);
}

uint64_t sub_1A7477018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A7477054()
{
  unint64_t result = qword_1E96F4020;
  if (!qword_1E96F4020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4020);
  }
  return result;
}

unint64_t sub_1A74770AC()
{
  unint64_t result = qword_1E96F4028;
  if (!qword_1E96F4028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4028);
  }
  return result;
}

unint64_t sub_1A7477104()
{
  unint64_t result = qword_1E96F4030;
  if (!qword_1E96F4030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4030);
  }
  return result;
}

uint64_t sub_1A7477158()
{
  return sub_1A72D99AC(&qword_1E96F4038, &qword_1E96F4040);
}

unint64_t sub_1A7477188(uint64_t a1)
{
  unint64_t result = sub_1A74771B0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A74771B0()
{
  unint64_t result = qword_1E96F4048;
  if (!qword_1E96F4048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4048);
  }
  return result;
}

unint64_t sub_1A7477214()
{
  unint64_t result = qword_1E96F4050;
  if (!qword_1E96F4050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4050);
  }
  return result;
}

uint64_t type metadata accessor for REMSuggestedAttributesTrainer()
{
  return self;
}

uint64_t destroy for REMSuggestedAttributesTrainer.Result(uint64_t a1)
{
  uint64_t v2 = a1 + 704;
  sub_1A7316AC4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(unsigned char *)(a1 + 168));
  sub_1A7316BCC(*(void *)(a1 + 176), *(void *)(a1 + 184), *(void *)(a1 + 192), *(void *)(a1 + 200), *(void *)(a1 + 208), *(void *)(a1 + 216), *(void *)(a1 + 224), *(unsigned char *)(a1 + 232));
  long long v16 = *(_OWORD *)(a1 + 656);
  long long v17 = *(_OWORD *)(a1 + 672);
  long long v14 = *(_OWORD *)(a1 + 624);
  long long v15 = *(_OWORD *)(a1 + 640);
  long long v12 = *(_OWORD *)(a1 + 592);
  long long v13 = *(_OWORD *)(a1 + 608);
  long long v10 = *(_OWORD *)(a1 + 560);
  long long v11 = *(_OWORD *)(a1 + 576);
  long long v8 = *(_OWORD *)(a1 + 528);
  long long v9 = *(_OWORD *)(a1 + 544);
  long long v6 = *(_OWORD *)(a1 + 496);
  long long v7 = *(_OWORD *)(a1 + 512);
  long long v4 = *(_OWORD *)(a1 + 464);
  long long v5 = *(_OWORD *)(a1 + 480);
  sub_1A7316C1C(*(void *)(a1 + 240), *(void *)(a1 + 248), *(void *)(a1 + 256), *(void *)(a1 + 264), *(void *)(a1 + 272), *(void *)(a1 + 280), *(void *)(a1 + 288), *(void *)(a1 + 296), *(void *)(a1 + 304), *(void *)(a1 + 312), *(void *)(a1 + 320), *(void *)(a1 + 328), *(void *)(a1 + 336), *(void *)(a1 + 344), *(void *)(a1 + 352), *(void *)(a1 + 360), *(void *)(a1 + 368), *(void *)(a1 + 376), *(void *)(a1 + 384),
    *(void *)(a1 + 392),
    *(void *)(a1 + 400),
    *(void *)(a1 + 408),
    *(void *)(a1 + 416),
    *(void *)(a1 + 424),
    *(void *)(a1 + 432),
    *(void *)(a1 + 440),
    *(void *)(a1 + 448),
    *(void *)(a1 + 456),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    *(void *)(a1 + 688),
    *(void *)(a1 + 696),
    *(unsigned char *)(a1 + 704));
  return sub_1A7316EE0(*(void *)(a1 + 712), *(void *)(a1 + 720), *(void *)(a1 + 728), *(void *)(a1 + 736), *(void *)(a1 + 744), *(void *)(a1 + 752), *(void *)(a1 + 760), *(void *)(a1 + 768), *(unsigned char *)(a1 + 776), *(unsigned char *)(v2 + 73));
}

uint64_t initializeWithCopy for REMSuggestedAttributesTrainer.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = a2 + 704;
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v74 = *(void *)(a2 + 64);
  uint64_t v76 = *(void *)(a2 + 72);
  uint64_t v78 = *(void *)(a2 + 80);
  uint64_t v80 = *(void *)(a2 + 88);
  uint64_t v82 = *(void *)(a2 + 96);
  uint64_t v84 = *(void *)(a2 + 104);
  uint64_t v86 = *(void *)(a2 + 112);
  uint64_t v88 = *(void *)(a2 + 120);
  uint64_t v90 = *(void *)(a2 + 128);
  uint64_t v92 = *(void *)(a2 + 136);
  uint64_t v94 = *(void *)(a2 + 144);
  uint64_t v96 = *(void *)(a2 + 152);
  uint64_t v98 = *(void *)(a2 + 160);
  char v100 = *(unsigned char *)(a2 + 168);
  uint64_t v8 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_1A73162A8(*(void *)a2, v9, v10, v4, v5, v6, v7, v11, *(void *)(a2 + 64), *(void *)(a2 + 72), *(void *)(a2 + 80), *(void *)(a2 + 88), *(void *)(a2 + 96), *(void *)(a2 + 104), *(void *)(a2 + 112), *(void *)(a2 + 120), *(void *)(a2 + 128), *(void *)(a2 + 136), *(void *)(a2 + 144),
    *(void *)(a2 + 152),
    *(void *)(a2 + 160),
    *(unsigned char *)(a2 + 168));
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v74;
  *(void *)(a1 + 72) = v76;
  *(void *)(a1 + 80) = v78;
  *(void *)(a1 + 88) = v80;
  *(void *)(a1 + 96) = v82;
  *(void *)(a1 + 104) = v84;
  *(void *)(a1 + 112) = v86;
  *(void *)(a1 + 120) = v88;
  *(void *)(a1 + 128) = v90;
  *(void *)(a1 + 136) = v92;
  *(void *)(a1 + 144) = v94;
  *(void *)(a1 + 152) = v96;
  *(void *)(a1 + 160) = v98;
  *(unsigned char *)(a1 + 168) = v100;
  uint64_t v12 = *(void *)(a2 + 176);
  uint64_t v13 = *(void *)(a2 + 184);
  uint64_t v14 = *(void *)(a2 + 192);
  uint64_t v15 = *(void *)(a2 + 200);
  uint64_t v16 = *(void *)(a2 + 208);
  uint64_t v17 = *(void *)(a2 + 216);
  uint64_t v18 = *(void *)(a2 + 224);
  LOBYTE(v7) = *(unsigned char *)(a2 + 232);
  sub_1A73163B0(v12, v13, v14, v15, v16, v17, v18, v7);
  *(void *)(a1 + 176) = v12;
  *(void *)(a1 + 184) = v13;
  *(void *)(a1 + 192) = v14;
  *(void *)(a1 + 200) = v15;
  *(void *)(a1 + 208) = v16;
  *(void *)(a1 + 216) = v17;
  *(void *)(a1 + 224) = v18;
  *(unsigned char *)(a1 + 232) = v7;
  uint64_t v101 = *(void *)(a2 + 304);
  uint64_t v99 = *(void *)(a2 + 312);
  uint64_t v97 = *(void *)(a2 + 320);
  uint64_t v95 = *(void *)(a2 + 328);
  uint64_t v93 = *(void *)(a2 + 336);
  uint64_t v91 = *(void *)(a2 + 344);
  uint64_t v89 = *(void *)(a2 + 352);
  uint64_t v87 = *(void *)(a2 + 360);
  uint64_t v85 = *(void *)(a2 + 368);
  uint64_t v83 = *(void *)(a2 + 376);
  uint64_t v81 = *(void *)(a2 + 384);
  uint64_t v79 = *(void *)(a2 + 392);
  uint64_t v77 = *(void *)(a2 + 400);
  uint64_t v75 = *(void *)(a2 + 408);
  uint64_t v73 = *(void *)(a2 + 416);
  uint64_t v72 = *(void *)(a2 + 424);
  uint64_t v71 = *(void *)(a2 + 432);
  uint64_t v70 = *(void *)(a2 + 440);
  uint64_t v69 = *(void *)(a2 + 448);
  uint64_t v68 = *(void *)(a2 + 456);
  uint64_t v67 = *(void *)(a2 + 464);
  uint64_t v66 = *(void *)(a2 + 472);
  uint64_t v65 = *(void *)(a2 + 480);
  uint64_t v64 = *(void *)(a2 + 488);
  uint64_t v36 = *(void *)(a2 + 496);
  uint64_t v37 = *(void *)(a2 + 504);
  uint64_t v38 = *(void *)(a2 + 512);
  uint64_t v39 = *(void *)(a2 + 520);
  uint64_t v40 = *(void *)(a2 + 528);
  uint64_t v41 = *(void *)(a2 + 536);
  uint64_t v42 = *(void *)(a2 + 544);
  uint64_t v43 = *(void *)(a2 + 552);
  uint64_t v44 = *(void *)(a2 + 560);
  uint64_t v45 = *(void *)(a2 + 568);
  uint64_t v46 = *(void *)(a2 + 576);
  uint64_t v47 = *(void *)(a2 + 584);
  uint64_t v48 = *(void *)(a2 + 592);
  uint64_t v49 = *(void *)(a2 + 600);
  uint64_t v50 = *(void *)(a2 + 608);
  uint64_t v51 = *(void *)(a2 + 616);
  uint64_t v52 = *(void *)(a2 + 624);
  uint64_t v53 = *(void *)(a2 + 632);
  uint64_t v54 = *(void *)(a2 + 640);
  uint64_t v55 = *(void *)(a2 + 648);
  uint64_t v56 = *(void *)(a2 + 656);
  uint64_t v57 = *(void *)(a2 + 664);
  uint64_t v58 = *(void *)(a2 + 672);
  uint64_t v59 = *(void *)(a2 + 680);
  uint64_t v60 = *(void *)(a2 + 688);
  uint64_t v61 = *(void *)(a2 + 696);
  char v62 = *(unsigned char *)(a2 + 704);
  uint64_t v19 = *(void *)(a2 + 240);
  uint64_t v20 = *(void *)(a2 + 248);
  uint64_t v21 = *(void *)(a2 + 256);
  uint64_t v22 = *(void *)(a2 + 264);
  uint64_t v23 = *(void *)(a2 + 272);
  uint64_t v24 = *(void *)(a2 + 280);
  uint64_t v25 = *(void *)(a2 + 288);
  uint64_t v26 = *(void *)(a2 + 296);
  sub_1A7316400(v19, v20, v21, v22, v23, v24, v25, v26, v101, v99, v97, v95, v93, v91, v89, v87, v85, v83, v81,
    v79,
    v77,
    v75,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v66,
    v65,
    v64,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62);
  *(void *)(a1 + 240) = v19;
  *(void *)(a1 + 248) = v20;
  *(void *)(a1 + 256) = v21;
  *(void *)(a1 + 264) = v22;
  *(void *)(a1 + 272) = v23;
  *(void *)(a1 + 280) = v24;
  *(void *)(a1 + 288) = v25;
  *(void *)(a1 + 296) = v26;
  *(void *)(a1 + 304) = v101;
  *(void *)(a1 + 312) = v99;
  *(void *)(a1 + 320) = v97;
  *(void *)(a1 + 328) = v95;
  *(void *)(a1 + 336) = v93;
  *(void *)(a1 + 344) = v91;
  *(void *)(a1 + 352) = v89;
  *(void *)(a1 + 360) = v87;
  *(void *)(a1 + 368) = v85;
  *(void *)(a1 + 376) = v83;
  *(void *)(a1 + 384) = v81;
  *(void *)(a1 + 392) = v79;
  *(void *)(a1 + 400) = v77;
  *(void *)(a1 + 408) = v75;
  *(void *)(a1 + 416) = v73;
  *(void *)(a1 + 424) = v72;
  *(void *)(a1 + 432) = v71;
  *(void *)(a1 + 440) = v70;
  *(void *)(a1 + 448) = v69;
  *(void *)(a1 + 456) = v68;
  *(void *)(a1 + 464) = v67;
  *(void *)(a1 + 472) = v66;
  *(void *)(a1 + 480) = v65;
  *(void *)(a1 + 488) = v64;
  *(void *)(a1 + 496) = v36;
  *(void *)(a1 + 504) = v37;
  *(void *)(a1 + 512) = v38;
  *(void *)(a1 + 520) = v39;
  *(void *)(a1 + 528) = v40;
  *(void *)(a1 + 536) = v41;
  *(void *)(a1 + 544) = v42;
  *(void *)(a1 + 552) = v43;
  *(void *)(a1 + 560) = v44;
  *(void *)(a1 + 568) = v45;
  *(void *)(a1 + 576) = v46;
  *(void *)(a1 + 584) = v47;
  *(void *)(a1 + 592) = v48;
  *(void *)(a1 + 600) = v49;
  *(void *)(a1 + 608) = v50;
  *(void *)(a1 + 616) = v51;
  *(void *)(a1 + 624) = v52;
  *(void *)(a1 + 632) = v53;
  *(void *)(a1 + 640) = v54;
  *(void *)(a1 + 648) = v55;
  *(void *)(a1 + 656) = v56;
  *(void *)(a1 + 664) = v57;
  *(void *)(a1 + 672) = v58;
  *(void *)(a1 + 680) = v59;
  *(void *)(a1 + 688) = v60;
  *(void *)(a1 + 696) = v61;
  *(unsigned char *)(a1 + 704) = v62;
  uint64_t v27 = *(void *)(a2 + 712);
  uint64_t v28 = *(void *)(a2 + 720);
  uint64_t v29 = *(void *)(a2 + 728);
  uint64_t v30 = *(void *)(a2 + 736);
  uint64_t v31 = *(void *)(a2 + 744);
  uint64_t v32 = *(void *)(a2 + 752);
  uint64_t v33 = *(void *)(a2 + 760);
  uint64_t v34 = *(void *)(a2 + 768);
  LOBYTE(v99) = *(unsigned char *)(a2 + 776);
  LOBYTE(v101) = *(unsigned char *)(v63 + 73);
  sub_1A73166C4(v27, v28, v29, v30, v31, v32, v33, v34, v99, v101);
  *(void *)(a1 + 712) = v27;
  *(void *)(a1 + 720) = v28;
  *(void *)(a1 + 728) = v29;
  *(void *)(a1 + 736) = v30;
  *(void *)(a1 + 744) = v31;
  *(void *)(a1 + 752) = v32;
  *(void *)(a1 + 760) = v33;
  *(void *)(a1 + 768) = v34;
  *(unsigned char *)(a1 + 776) = v99;
  *(unsigned char *)(a1 + 777) = v101;
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesTrainer.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v125 = a1 + 704;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v124 = a2 + 704;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v144 = *(void *)(a2 + 64);
  uint64_t v146 = *(void *)(a2 + 72);
  uint64_t v148 = *(void *)(a2 + 80);
  uint64_t v150 = *(void *)(a2 + 88);
  uint64_t v152 = *(void *)(a2 + 96);
  uint64_t v154 = *(void *)(a2 + 104);
  uint64_t v156 = *(void *)(a2 + 112);
  uint64_t v158 = *(void *)(a2 + 120);
  uint64_t v160 = *(void *)(a2 + 128);
  uint64_t v162 = *(void *)(a2 + 136);
  uint64_t v164 = *(void *)(a2 + 144);
  uint64_t v166 = *(void *)(a2 + 152);
  uint64_t v168 = *(void *)(a2 + 160);
  char v170 = *(unsigned char *)(a2 + 168);
  sub_1A73162A8(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v144, v146, v148, v150, v152, v154, v156, v158, v160, v162, v164,
    v166,
    v168,
    v170);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v144;
  *(void *)(a1 + 72) = v146;
  *(void *)(a1 + 80) = v148;
  *(void *)(a1 + 88) = v150;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v152;
  *(void *)(a1 + 104) = v154;
  *(void *)(a1 + 112) = v156;
  *(void *)(a1 + 120) = v158;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v160;
  *(void *)(a1 + 136) = v162;
  *(void *)(a1 + 144) = v164;
  *(void *)(a1 + 152) = v166;
  uint64_t v26 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = v168;
  char v27 = *(unsigned char *)(a1 + 168);
  *(unsigned char *)(a1 + 168) = v170;
  sub_1A7316AC4(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27);
  uint64_t v28 = *(void *)(a2 + 176);
  uint64_t v29 = *(void *)(a2 + 184);
  uint64_t v30 = *(void *)(a2 + 192);
  uint64_t v31 = *(void *)(a2 + 200);
  uint64_t v32 = *(void *)(a2 + 208);
  uint64_t v33 = *(void *)(a2 + 216);
  uint64_t v34 = *(void *)(a2 + 224);
  LOBYTE(v11) = *(unsigned char *)(a2 + 232);
  sub_1A73163B0(v28, v29, v30, v31, v32, v33, v34, v11);
  uint64_t v35 = *(void *)(a1 + 176);
  uint64_t v36 = *(void *)(a1 + 184);
  uint64_t v37 = *(void *)(a1 + 192);
  uint64_t v38 = *(void *)(a1 + 200);
  uint64_t v39 = *(void *)(a1 + 208);
  uint64_t v40 = *(void *)(a1 + 216);
  uint64_t v41 = *(void *)(a1 + 224);
  char v42 = *(unsigned char *)(a1 + 232);
  *(void *)(a1 + 176) = v28;
  *(void *)(a1 + 184) = v29;
  *(void *)(a1 + 192) = v30;
  *(void *)(a1 + 200) = v31;
  *(void *)(a1 + 208) = v32;
  *(void *)(a1 + 216) = v33;
  *(void *)(a1 + 224) = v34;
  *(unsigned char *)(a1 + 232) = v11;
  sub_1A7316BCC(v35, v36, v37, v38, v39, v40, v41, v42);
  uint64_t v169 = *(void *)(a2 + 248);
  uint64_t v171 = *(void *)(a2 + 240);
  uint64_t v165 = *(void *)(a2 + 264);
  uint64_t v167 = *(void *)(a2 + 256);
  uint64_t v161 = *(void *)(a2 + 280);
  uint64_t v163 = *(void *)(a2 + 272);
  uint64_t v157 = *(void *)(a2 + 296);
  uint64_t v159 = *(void *)(a2 + 288);
  uint64_t v153 = *(void *)(a2 + 312);
  uint64_t v155 = *(void *)(a2 + 304);
  uint64_t v149 = *(void *)(a2 + 328);
  uint64_t v151 = *(void *)(a2 + 320);
  uint64_t v145 = *(void *)(a2 + 344);
  uint64_t v147 = *(void *)(a2 + 336);
  uint64_t v142 = *(void *)(a2 + 360);
  uint64_t v143 = *(void *)(a2 + 352);
  uint64_t v140 = *(void *)(a2 + 376);
  uint64_t v141 = *(void *)(a2 + 368);
  uint64_t v138 = *(void *)(a2 + 392);
  uint64_t v139 = *(void *)(a2 + 384);
  uint64_t v137 = *(void *)(a2 + 400);
  uint64_t v136 = *(void *)(a2 + 408);
  uint64_t v135 = *(void *)(a2 + 416);
  uint64_t v134 = *(void *)(a2 + 424);
  uint64_t v133 = *(void *)(a2 + 432);
  uint64_t v132 = *(void *)(a2 + 440);
  uint64_t v131 = *(void *)(a2 + 448);
  uint64_t v130 = *(void *)(a2 + 456);
  uint64_t v129 = *(void *)(a2 + 464);
  uint64_t v128 = *(void *)(a2 + 472);
  uint64_t v127 = *(void *)(a2 + 480);
  uint64_t v126 = *(void *)(a2 + 488);
  uint64_t v44 = *(void *)(a2 + 504);
  uint64_t v43 = *(void *)(a2 + 512);
  uint64_t v45 = *(void *)(a2 + 520);
  uint64_t v46 = *(void *)(a2 + 528);
  uint64_t v47 = *(void *)(a2 + 536);
  uint64_t v48 = *(void *)(a2 + 544);
  uint64_t v49 = *(void *)(a2 + 552);
  uint64_t v50 = *(void *)(a2 + 560);
  uint64_t v105 = *(void *)(a2 + 496);
  uint64_t v106 = *(void *)(a2 + 568);
  uint64_t v107 = *(void *)(a2 + 576);
  uint64_t v108 = *(void *)(a2 + 584);
  uint64_t v109 = *(void *)(a2 + 592);
  uint64_t v110 = *(void *)(a2 + 600);
  uint64_t v111 = *(void *)(a2 + 608);
  uint64_t v112 = *(void *)(a2 + 616);
  uint64_t v113 = *(void *)(a2 + 624);
  uint64_t v114 = *(void *)(a2 + 632);
  uint64_t v115 = *(void *)(a2 + 640);
  uint64_t v116 = *(void *)(a2 + 648);
  uint64_t v117 = *(void *)(a2 + 656);
  uint64_t v118 = *(void *)(a2 + 664);
  uint64_t v119 = *(void *)(a2 + 672);
  uint64_t v120 = *(void *)(a2 + 680);
  uint64_t v121 = *(void *)(a2 + 688);
  uint64_t v122 = *(void *)(a2 + 696);
  char v123 = *(unsigned char *)(a2 + 704);
  sub_1A7316400(v171, v169, v167, v165, v163, v161, v159, v157, v155, v153, v151, v149, v147, v145, v143, v142, v141, v140, v139,
    v138,
    v137,
    v136,
    v135,
    v134,
    v133,
    v132,
    v131,
    v130,
    v129,
    v128,
    v127,
    v126,
    v105,
    v44,
    v43,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    v123);
  uint64_t v51 = *(void *)(a1 + 240);
  uint64_t v52 = *(void *)(a1 + 248);
  *(void *)(a1 + 240) = v171;
  *(void *)(a1 + 248) = v169;
  uint64_t v53 = *(void *)(a1 + 256);
  uint64_t v54 = *(void *)(a1 + 264);
  *(void *)(a1 + 256) = v167;
  *(void *)(a1 + 264) = v165;
  uint64_t v55 = *(void *)(a1 + 272);
  uint64_t v56 = *(void *)(a1 + 280);
  *(void *)(a1 + 272) = v163;
  *(void *)(a1 + 280) = v161;
  uint64_t v57 = *(void *)(a1 + 288);
  uint64_t v58 = *(void *)(a1 + 296);
  *(void *)(a1 + 288) = v159;
  *(void *)(a1 + 296) = v157;
  long long v59 = *(_OWORD *)(a1 + 304);
  long long v60 = *(_OWORD *)(a1 + 320);
  *(void *)(a1 + 304) = v155;
  *(void *)(a1 + 312) = v153;
  *(void *)(a1 + 320) = v151;
  *(void *)(a1 + 328) = v149;
  long long v61 = *(_OWORD *)(a1 + 336);
  long long v62 = *(_OWORD *)(a1 + 352);
  *(void *)(a1 + 336) = v147;
  *(void *)(a1 + 344) = v145;
  *(void *)(a1 + 352) = v143;
  *(void *)(a1 + 360) = v142;
  long long v63 = *(_OWORD *)(a1 + 368);
  long long v64 = *(_OWORD *)(a1 + 384);
  *(void *)(a1 + 368) = v141;
  *(void *)(a1 + 376) = v140;
  *(void *)(a1 + 384) = v139;
  *(void *)(a1 + 392) = v138;
  long long v65 = *(_OWORD *)(a1 + 400);
  long long v66 = *(_OWORD *)(a1 + 416);
  *(void *)(a1 + 400) = v137;
  *(void *)(a1 + 408) = v136;
  *(void *)(a1 + 416) = v135;
  *(void *)(a1 + 424) = v134;
  long long v67 = *(_OWORD *)(a1 + 432);
  long long v68 = *(_OWORD *)(a1 + 448);
  *(void *)(a1 + 432) = v133;
  *(void *)(a1 + 440) = v132;
  *(void *)(a1 + 448) = v131;
  *(void *)(a1 + 456) = v130;
  long long v69 = *(_OWORD *)(a1 + 464);
  long long v70 = *(_OWORD *)(a1 + 480);
  *(void *)(a1 + 464) = v129;
  *(void *)(a1 + 472) = v128;
  *(void *)(a1 + 480) = v127;
  *(void *)(a1 + 488) = v126;
  long long v71 = *(_OWORD *)(a1 + 496);
  long long v72 = *(_OWORD *)(a1 + 512);
  *(void *)(a1 + 496) = v105;
  *(void *)(a1 + 504) = v44;
  *(void *)(a1 + 512) = v43;
  *(void *)(a1 + 520) = v45;
  long long v73 = *(_OWORD *)(a1 + 528);
  long long v74 = *(_OWORD *)(a1 + 544);
  *(void *)(a1 + 528) = v46;
  *(void *)(a1 + 536) = v47;
  *(void *)(a1 + 544) = v48;
  *(void *)(a1 + 552) = v49;
  long long v75 = *(_OWORD *)(a1 + 560);
  long long v76 = *(_OWORD *)(a1 + 576);
  *(void *)(a1 + 560) = v50;
  *(void *)(a1 + 568) = v106;
  *(void *)(a1 + 576) = v107;
  *(void *)(a1 + 584) = v108;
  long long v77 = *(_OWORD *)(a1 + 592);
  long long v78 = *(_OWORD *)(a1 + 608);
  *(void *)(a1 + 592) = v109;
  *(void *)(a1 + 600) = v110;
  *(void *)(a1 + 608) = v111;
  *(void *)(a1 + 616) = v112;
  long long v79 = *(_OWORD *)(a1 + 624);
  long long v80 = *(_OWORD *)(a1 + 640);
  *(void *)(a1 + 624) = v113;
  *(void *)(a1 + 632) = v114;
  *(void *)(a1 + 640) = v115;
  *(void *)(a1 + 648) = v116;
  long long v81 = *(_OWORD *)(a1 + 656);
  long long v82 = *(_OWORD *)(a1 + 672);
  *(void *)(a1 + 656) = v117;
  *(void *)(a1 + 664) = v118;
  *(void *)(a1 + 672) = v119;
  *(void *)(a1 + 680) = v120;
  uint64_t v83 = *(void *)(a1 + 688);
  *(void *)(a1 + 688) = v121;
  uint64_t v84 = *(void *)(a1 + 696);
  *(void *)(a1 + 696) = v122;
  char v85 = *(unsigned char *)(a1 + 704);
  *(unsigned char *)(a1 + 704) = v123;
  sub_1A7316C1C(v51, v52, v53, v54, v55, v56, v57, v58, v59, *((uint64_t *)&v59 + 1), v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), v62, *((uint64_t *)&v62 + 1), v63, *((uint64_t *)&v63 + 1), v64,
    *((uint64_t *)&v64 + 1),
    v65,
    *((uint64_t *)&v65 + 1),
    v66,
    *((uint64_t *)&v66 + 1),
    v67,
    *((uint64_t *)&v67 + 1),
    v68,
    *((uint64_t *)&v68 + 1),
    v69,
    *((uint64_t *)&v69 + 1),
    v70,
    *((uint64_t *)&v70 + 1),
    v71,
    *((uint64_t *)&v71 + 1),
    v72,
    *((uint64_t *)&v72 + 1),
    v73,
    *((uint64_t *)&v73 + 1),
    v74,
    *((uint64_t *)&v74 + 1),
    v75,
    *((uint64_t *)&v75 + 1),
    v76,
    *((uint64_t *)&v76 + 1),
    v77,
    *((uint64_t *)&v77 + 1),
    v78,
    *((uint64_t *)&v78 + 1),
    v79,
    *((uint64_t *)&v79 + 1),
    v80,
    *((uint64_t *)&v80 + 1),
    v81,
    *((uint64_t *)&v81 + 1),
    v82,
    *((uint64_t *)&v82 + 1),
    v83,
    v84,
    v85);
  uint64_t v86 = *(void *)(a2 + 712);
  uint64_t v87 = *(void *)(a2 + 720);
  uint64_t v88 = *(void *)(a2 + 728);
  uint64_t v89 = *(void *)(a2 + 736);
  uint64_t v90 = *(void *)(a2 + 744);
  uint64_t v91 = *(void *)(a2 + 752);
  uint64_t v92 = *(void *)(a2 + 760);
  uint64_t v93 = *(void *)(a2 + 768);
  LOBYTE(v169) = *(unsigned char *)(a2 + 776);
  LOBYTE(v171) = *(unsigned char *)(v124 + 73);
  sub_1A73166C4(v86, v87, v88, v89, v90, v91, v92, v93, v169, v171);
  uint64_t v94 = *(void *)(a1 + 712);
  uint64_t v95 = *(void *)(a1 + 720);
  uint64_t v96 = *(void *)(a1 + 728);
  uint64_t v97 = *(void *)(a1 + 736);
  uint64_t v98 = *(void *)(a1 + 744);
  uint64_t v99 = *(void *)(a1 + 752);
  uint64_t v100 = *(void *)(a1 + 760);
  uint64_t v101 = *(void *)(a1 + 768);
  char v102 = *(unsigned char *)(a1 + 776);
  char v103 = *(unsigned char *)(v125 + 73);
  *(void *)(a1 + 712) = v86;
  *(void *)(a1 + 720) = v87;
  *(void *)(a1 + 728) = v88;
  *(void *)(a1 + 736) = v89;
  *(void *)(a1 + 744) = v90;
  *(void *)(a1 + 752) = v91;
  *(void *)(a1 + 760) = v92;
  *(void *)(a1 + 768) = v93;
  *(unsigned char *)(a1 + 776) = v169;
  *(unsigned char *)(v125 + 73) = v171;
  sub_1A7316EE0(v94, v95, v96, v97, v98, v99, v100, v101, v102, v103);
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  return a1;
}

void *__swift_memcpy792_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x318uLL);
}

uint64_t assignWithTake for REMSuggestedAttributesTrainer.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 160);
  uint64_t v5 = a1 + 704;
  char v6 = *(unsigned char *)(a2 + 168);
  uint64_t v7 = a2 + 704;
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 56);
  long long v16 = *(_OWORD *)(a1 + 64);
  long long v17 = *(_OWORD *)(a1 + 80);
  long long v18 = *(_OWORD *)(a1 + 96);
  long long v19 = *(_OWORD *)(a1 + 112);
  long long v20 = *(_OWORD *)(a1 + 128);
  long long v21 = *(_OWORD *)(a1 + 144);
  uint64_t v22 = *(void *)(a1 + 160);
  char v23 = *(unsigned char *)(a1 + 168);
  long long v24 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v24;
  long long v25 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v25;
  long long v26 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v26;
  long long v27 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v27;
  long long v28 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v28;
  *(void *)(a1 + 160) = v4;
  *(unsigned char *)(a1 + 168) = v6;
  sub_1A7316AC4(v8, v9, v10, v11, v12, v13, v14, v15, v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21,
    *((uint64_t *)&v21 + 1),
    v22,
    v23);
  uint64_t v29 = *(void *)(a2 + 224);
  char v30 = *(unsigned char *)(a2 + 232);
  uint64_t v31 = *(void *)(a1 + 176);
  uint64_t v32 = *(void *)(a1 + 184);
  uint64_t v33 = *(void *)(a1 + 192);
  uint64_t v34 = *(void *)(a1 + 200);
  uint64_t v35 = *(void *)(a1 + 208);
  uint64_t v36 = *(void *)(a1 + 216);
  uint64_t v37 = *(void *)(a1 + 224);
  char v38 = *(unsigned char *)(a1 + 232);
  long long v39 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v39;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(void *)(a1 + 224) = v29;
  *(unsigned char *)(a1 + 232) = v30;
  sub_1A7316BCC(v31, v32, v33, v34, v35, v36, v37, v38);
  uint64_t v40 = *(void *)(a1 + 240);
  uint64_t v41 = *(void *)(a1 + 248);
  uint64_t v42 = *(void *)(a1 + 256);
  uint64_t v43 = *(void *)(a1 + 264);
  uint64_t v44 = *(void *)(a1 + 272);
  uint64_t v45 = *(void *)(a1 + 280);
  uint64_t v46 = *(void *)(a1 + 288);
  uint64_t v47 = *(void *)(a1 + 296);
  long long v48 = *(_OWORD *)(a1 + 304);
  long long v49 = *(_OWORD *)(a1 + 320);
  long long v50 = *(_OWORD *)(a1 + 336);
  long long v51 = *(_OWORD *)(a1 + 352);
  long long v52 = *(_OWORD *)(a1 + 368);
  long long v53 = *(_OWORD *)(a1 + 384);
  long long v54 = *(_OWORD *)(a1 + 400);
  long long v55 = *(_OWORD *)(a1 + 416);
  long long v56 = *(_OWORD *)(a1 + 432);
  long long v57 = *(_OWORD *)(a1 + 448);
  long long v58 = *(_OWORD *)(a1 + 464);
  long long v59 = *(_OWORD *)(a1 + 480);
  long long v60 = *(_OWORD *)(a1 + 496);
  long long v61 = *(_OWORD *)(a1 + 512);
  long long v62 = *(_OWORD *)(a1 + 528);
  long long v63 = *(_OWORD *)(a1 + 544);
  long long v64 = *(_OWORD *)(a1 + 560);
  long long v65 = *(_OWORD *)(a1 + 576);
  long long v66 = *(_OWORD *)(a1 + 592);
  long long v67 = *(_OWORD *)(a1 + 608);
  long long v68 = *(_OWORD *)(a1 + 624);
  long long v69 = *(_OWORD *)(a1 + 640);
  long long v70 = *(_OWORD *)(a1 + 656);
  long long v71 = *(_OWORD *)(a1 + 672);
  long long v72 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v72;
  long long v73 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v73;
  long long v74 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v74;
  long long v75 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v75;
  long long v76 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v76;
  long long v77 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v77;
  long long v78 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v78;
  long long v79 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v79;
  long long v80 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v80;
  long long v81 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v81;
  long long v82 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v82;
  long long v83 = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 608) = v83;
  long long v84 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v84;
  long long v85 = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 672) = v85;
  uint64_t v86 = *(void *)(a1 + 688);
  uint64_t v87 = *(void *)(a1 + 696);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  char v88 = *(unsigned char *)(a1 + 704);
  *(unsigned char *)(a1 + 704) = *(unsigned char *)(a2 + 704);
  sub_1A7316C1C(v40, v41, v42, v43, v44, v45, v46, v47, v48, *((uint64_t *)&v48 + 1), v49, *((uint64_t *)&v49 + 1), v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53,
    *((uint64_t *)&v53 + 1),
    v54,
    *((uint64_t *)&v54 + 1),
    v55,
    *((uint64_t *)&v55 + 1),
    v56,
    *((uint64_t *)&v56 + 1),
    v57,
    *((uint64_t *)&v57 + 1),
    v58,
    *((uint64_t *)&v58 + 1),
    v59,
    *((uint64_t *)&v59 + 1),
    v60,
    *((uint64_t *)&v60 + 1),
    v61,
    *((uint64_t *)&v61 + 1),
    v62,
    *((uint64_t *)&v62 + 1),
    v63,
    *((uint64_t *)&v63 + 1),
    v64,
    *((uint64_t *)&v64 + 1),
    v65,
    *((uint64_t *)&v65 + 1),
    v66,
    *((uint64_t *)&v66 + 1),
    v67,
    *((uint64_t *)&v67 + 1),
    v68,
    *((uint64_t *)&v68 + 1),
    v69,
    *((uint64_t *)&v69 + 1),
    v70,
    *((uint64_t *)&v70 + 1),
    v71,
    *((uint64_t *)&v71 + 1),
    v86,
    v87,
    v88);
  char v89 = *(unsigned char *)(a2 + 776);
  char v90 = *(unsigned char *)(v7 + 73);
  uint64_t v91 = *(void *)(v5 + 8);
  uint64_t v92 = *(void *)(a1 + 720);
  uint64_t v93 = *(void *)(v5 + 24);
  uint64_t v94 = *(void *)(a1 + 736);
  uint64_t v95 = *(void *)(v5 + 40);
  uint64_t v96 = *(void *)(a1 + 752);
  uint64_t v97 = *(void *)(v5 + 56);
  uint64_t v98 = *(void *)(a1 + 768);
  char v99 = *(unsigned char *)(a1 + 776);
  char v100 = *(unsigned char *)(v5 + 73);
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(v7 + 8);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(v7 + 24);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(v7 + 40);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(v7 + 56);
  *(unsigned char *)(a1 + 776) = v89;
  *(unsigned char *)(v5 + 73) = v90;
  sub_1A7316EE0(v91, v92, v93, v94, v95, v96, v97, v98, v99, v100);
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 792)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 168);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 792) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 792) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 168) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result;
}

uint64_t initializeWithCopy for REMSuggestedAttributesTrainer.Result.Embedding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v8 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMSuggestedAttributesTrainer.Result.Embedding(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  a1[20] = a2[20];
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributesTrainer.Result.Embedding(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.Embedding(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.Embedding(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.Embedding()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.Embedding;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.AnchoredBubble(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.AnchoredBubble(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.AnchoredBubble()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.AnchoredBubble;
}

uint64_t destroy for REMSuggestedAttributesTrainer.Result.CoreBehavior()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMSuggestedAttributesTrainer.Result.CoreBehavior(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v30 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v30;
  uint64_t v29 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v29;
  uint64_t v28 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v28;
  uint64_t v31 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v31;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v5 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v5;
  uint64_t v6 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v6;
  uint64_t v7 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v7;
  uint64_t v8 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v8;
  uint64_t v9 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v9;
  uint64_t v10 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v10;
  uint64_t v11 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  uint64_t v12 = *(void *)(a2 + 376);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = v12;
  uint64_t v13 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v13;
  uint64_t v14 = *(void *)(a2 + 456);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  uint64_t v15 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v15;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  uint64_t v17 = *(void *)(a2 + 272);
  uint64_t v16 = *(void *)(a2 + 280);
  *(void *)(a1 + 264) = v11;
  *(void *)(a1 + 272) = v17;
  uint64_t v19 = *(void *)(a2 + 288);
  uint64_t v18 = *(void *)(a2 + 296);
  *(void *)(a1 + 280) = v16;
  *(void *)(a1 + 288) = v19;
  uint64_t v21 = *(void *)(a2 + 304);
  uint64_t v20 = *(void *)(a2 + 312);
  *(void *)(a1 + 296) = v18;
  *(void *)(a1 + 304) = v21;
  uint64_t v22 = *(void *)(a2 + 320);
  uint64_t v32 = *(void *)(a2 + 328);
  *(void *)(a1 + 312) = v20;
  *(void *)(a1 + 320) = v22;
  *(void *)(a1 + 328) = v32;
  uint64_t v23 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v23;
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  long long v24 = *(_OWORD *)(a2 + 416);
  long long v25 = *(_OWORD *)(a2 + 432);
  uint64_t v26 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v26;
  *(_OWORD *)(a1 + 416) = v24;
  *(_OWORD *)(a1 + 432) = v25;
  *(void *)(a1 + 456) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMSuggestedAttributesTrainer.Result.CoreBehavior(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[27] = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[28] = a2[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[29] = a2[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  a1[32] = a2[32];
  a1[33] = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[34] = a2[34];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[35] = a2[35];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[36] = a2[36];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[37] = a2[37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[38] = a2[38];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[39] = a2[39];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[40] = a2[40];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[41] = a2[41];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[42] = a2[42];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[43] = a2[43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[44] = a2[44];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[45] = a2[45];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[46] = a2[46];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[47] = a2[47];
  a1[48] = a2[48];
  a1[49] = a2[49];
  a1[50] = a2[50];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[51] = a2[51];
  a1[52] = a2[52];
  a1[53] = a2[53];
  a1[54] = a2[54];
  a1[55] = a2[55];
  a1[56] = a2[56];
  a1[57] = a2[57];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy464_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1D0uLL);
}

uint64_t assignWithTake for REMSuggestedAttributesTrainer.Result.CoreBehavior(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  long long v4 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v4;
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.CoreBehavior(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 464)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.CoreBehavior(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 456) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 464) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 464) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.CoreBehavior()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.CoreBehavior;
}

uint64_t initializeWithCopy for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed;
}

uint64_t destroy for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

uint64_t assignWithTake for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned;
}

uint64_t destroy for REMSuggestedAttributesTrainer.Result.IntentionalWord(uint64_t a1)
{
  return sub_1A7316F60(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
}

uint64_t initializeWithCopy for REMSuggestedAttributesTrainer.Result.IntentionalWord(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1A7316744(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesTrainer.Result.IntentionalWord(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1A7316744(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_1A7316F60(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributesTrainer.Result.IntentionalWord(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v3;
  sub_1A7316F60(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.IntentionalWord(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.IntentionalWord(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A7479F78(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

uint64_t sub_1A7479F80(uint64_t result, char a2)
{
  *(unsigned char *)(result + 64) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWord()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord;
}

__n128 __swift_memcpy169_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_OWORD *)(a1 + 153) = *(long long *)((char *)a2 + 153);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[169]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 168) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 169) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 169) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters.CoreBehavior(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[64]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters.CoreBehavior(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.CoreBehavior()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.CoreBehavior;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters.Embedding(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters.Embedding(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.Embedding()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.Embedding;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble;
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A747A314);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys;
}

uint64_t _s19ReminderKitInternal29REMSuggestedAttributesTrainerC10ParametersV14AnchoredBubbleVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[17]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s19ReminderKitInternal29REMSuggestedAttributesTrainerC10ParametersV14AnchoredBubbleVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.IntentionalWord()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.IntentionalWord;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A747A4D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWord.ContentType()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord.ContentType;
}

unsigned char *_s19ReminderKitInternal29REMSuggestedAttributesTrainerC10ParametersV9EmbeddingV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A747A5FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWord.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord.CodingKeys;
}

unsigned char *_s19ReminderKitInternal29REMSuggestedAttributesTrainerC10ParametersV12CoreBehaviorV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A747A700);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.CoreBehavior.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A747A814);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.CoreBehavior.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.CoreBehavior.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.AnchoredBubble.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A747A918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.AnchoredBubble.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.AnchoredBubble.CodingKeys;
}

unsigned char *_s19ReminderKitInternal29REMSuggestedAttributesTrainerC6ResultV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A747AA1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.Embedding.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.Embedding.CodingKeys;
}

unint64_t sub_1A747AA58()
{
  unint64_t result = qword_1E96F4058;
  if (!qword_1E96F4058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4058);
  }
  return result;
}

unint64_t sub_1A747AAB0()
{
  unint64_t result = qword_1E96F4060;
  if (!qword_1E96F4060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4060);
  }
  return result;
}

unint64_t sub_1A747AB08()
{
  unint64_t result = qword_1E96F4068;
  if (!qword_1E96F4068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4068);
  }
  return result;
}

unint64_t sub_1A747AB60()
{
  unint64_t result = qword_1E96F4070;
  if (!qword_1E96F4070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4070);
  }
  return result;
}

unint64_t sub_1A747ABB8()
{
  unint64_t result = qword_1E96F4078;
  if (!qword_1E96F4078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4078);
  }
  return result;
}

unint64_t sub_1A747AC10()
{
  unint64_t result = qword_1E96F4080;
  if (!qword_1E96F4080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4080);
  }
  return result;
}

unint64_t sub_1A747AC68()
{
  unint64_t result = qword_1E96F4088;
  if (!qword_1E96F4088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4088);
  }
  return result;
}

unint64_t sub_1A747ACC0()
{
  unint64_t result = qword_1E96F4090;
  if (!qword_1E96F4090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4090);
  }
  return result;
}

unint64_t sub_1A747AD18()
{
  unint64_t result = qword_1E96F4098;
  if (!qword_1E96F4098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4098);
  }
  return result;
}

unint64_t sub_1A747AD70()
{
  unint64_t result = qword_1E96F40A0;
  if (!qword_1E96F40A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F40A0);
  }
  return result;
}

unint64_t sub_1A747ADC8()
{
  unint64_t result = qword_1E96F40A8;
  if (!qword_1E96F40A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F40A8);
  }
  return result;
}

unint64_t sub_1A747AE20()
{
  unint64_t result = qword_1E96F40B0;
  if (!qword_1E96F40B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F40B0);
  }
  return result;
}

unint64_t sub_1A747AE78()
{
  unint64_t result = qword_1E96F40B8;
  if (!qword_1E96F40B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F40B8);
  }
  return result;
}

unint64_t sub_1A747AED0()
{
  unint64_t result = qword_1E96F40C0;
  if (!qword_1E96F40C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F40C0);
  }
  return result;
}

unint64_t sub_1A747AF28()
{
  unint64_t result = qword_1E96F40C8;
  if (!qword_1E96F40C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F40C8);
  }
  return result;
}

unint64_t sub_1A747AF80()
{
  unint64_t result = qword_1E96F40D0;
  if (!qword_1E96F40D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F40D0);
  }
  return result;
}

unint64_t sub_1A747AFD8()
{
  unint64_t result = qword_1E96F40D8;
  if (!qword_1E96F40D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F40D8);
  }
  return result;
}

unint64_t sub_1A747B030()
{
  unint64_t result = qword_1E96F40E0;
  if (!qword_1E96F40E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F40E0);
  }
  return result;
}

unint64_t sub_1A747B088()
{
  unint64_t result = qword_1E96F40E8;
  if (!qword_1E96F40E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F40E8);
  }
  return result;
}

unint64_t sub_1A747B0E0()
{
  unint64_t result = qword_1E96F40F0;
  if (!qword_1E96F40F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F40F0);
  }
  return result;
}

unint64_t sub_1A747B138()
{
  unint64_t result = qword_1E96F40F8;
  if (!qword_1E96F40F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F40F8);
  }
  return result;
}

unint64_t sub_1A747B190()
{
  unint64_t result = qword_1E96F4100;
  if (!qword_1E96F4100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4100);
  }
  return result;
}

unint64_t sub_1A747B1E4()
{
  unint64_t result = qword_1E96F4108;
  if (!qword_1E96F4108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4108);
  }
  return result;
}

uint64_t sub_1A747B248(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A74F9DF0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1A7482918(v5);
  *a1 = v2;
  return result;
}

uint64_t static REMHashtagLabelDataView.fetchHashtagIDs(with:store:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation();
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_bridgeObjectRetain();
  id v7 = objc_msgSend(v6, sel_init);
  sub_1A730095C((uint64_t)v7, a1, v9);
  swift_bridgeObjectRelease();

  if (!v3)
  {
    a2 = v9[0];
  }
  return a2;
}

uint64_t sub_1A747B350()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F4118);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F4118);
  if (qword_1EB704BF8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F68);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t REMHashtagLabelDataView.HashtagSuggestions.reminderHashtagSuggestions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMHashtagLabelDataView.HashtagSuggestions.spotlightHashtagSuggestions.getter()
{
  return swift_bridgeObjectRetain();
}

ReminderKitInternal::REMHashtagLabelDataView::HashtagSuggestions __swiftcall REMHashtagLabelDataView.HashtagSuggestions.init(reminderHashtagSuggestions:spotlightHashtagSuggestions:)(Swift::OpaquePointer reminderHashtagSuggestions, Swift::OpaquePointer spotlightHashtagSuggestions)
{
  v2->_uint64_t rawValue = reminderHashtagSuggestions._rawValue;
  v2[1]._uint64_t rawValue = spotlightHashtagSuggestions._rawValue;
  result.spotlightHashtagSuggestions = spotlightHashtagSuggestions;
  result.reminderHashtagSuggestions = reminderHashtagSuggestions;
  return result;
}

uint64_t REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.hash(into:)()
{
  return sub_1A75740D0();
}

BOOL static REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A747B478(uint64_t a1)
{
  unint64_t v2 = sub_1A747DC94();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A747B4B4(uint64_t a1)
{
  unint64_t v2 = sub_1A747DC94();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A747B4F0()
{
  if (*v0) {
    return 0x65726F7473;
  }
  else {
    return 0x724F646568636163;
  }
}

uint64_t sub_1A747B534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7483418(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A747B55C(uint64_t a1)
{
  unint64_t v2 = sub_1A747DBEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A747B598(uint64_t a1)
{
  unint64_t v2 = sub_1A747DBEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A747B5D4(uint64_t a1)
{
  unint64_t v2 = sub_1A747DC40();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A747B610(uint64_t a1)
{
  unint64_t v2 = sub_1A747DC40();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4130);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4138);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4140);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A747DBEC();
  sub_1A75741B0();
  long long v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A747DC40();
    long long v14 = v18;
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A747DC94();
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4160);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4168);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4170);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A747DBEC();
  uint64_t v11 = v32;
  sub_1A7574190();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  long long v14 = v10;
  uint64_t v15 = sub_1A7573A70();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A7573640();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    void *v22 = &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A747DC40();
    uint64_t v18 = v14;
    sub_1A7573990();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A747DC94();
    sub_1A7573990();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_1A747BD4C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.init(from:)(a1, a2);
}

uint64_t sub_1A747BD64(void *a1)
{
  return REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.encode(to:)(a1);
}

uint64_t static REMHashtagLabelDataView.fetchAllHashtagLabels(store:sortingStyle:includeDetails:)(uint64_t a1, unsigned __int8 *a2, char a3)
{
  uint64_t v4 = *a2;
  if (a3)
  {
    type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation();
    id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    sub_1A73020D4((uint64_t)v5, v4, v9);
  }
  else
  {
    type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation();
    id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    sub_1A730215C((uint64_t)v5, v4, v9);
  }

  if (v3) {
    return v4;
  }
  uint64_t v4 = v9[0];
  uint64_t v6 = (void *)v9[1];
  if (!((unint64_t)v9[0] >> 62))
  {
    swift_bridgeObjectRetain();
    sub_1A7573DE0();
    sub_1A72BEFEC(0, &qword_1EB700080);
    swift_bridgeObjectRelease();

    return v4;
  }
  sub_1A72BEFEC(0, &qword_1EB700080);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1A7573850();
  swift_bridgeObjectRelease_n();

  return v8;
}

ReminderKitInternal::REMHashtagLabelDataView::AllHashtagLabelsInvocation::Parameters __swiftcall REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.init(sortingStyle:)(ReminderKitInternal::REMHashtagLabelDataView::AllHashtagLabelsInvocation::Parameters sortingStyle)
{
  unsigned char *v1 = *(unsigned char *)sortingStyle.sortingStyle.value;
  return sortingStyle;
}

uint64_t static REMHashtagLabelDataView.fetchSmartListHashtagLabels(store:fetchStyle:)(uint64_t a1, char *a2)
{
  char v4 = *a2;
  type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation();
  id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A7302DC4((uint64_t)v5, v4, v7);

  if (!v2)
  {
    a1 = v7[0];
  }
  return a1;
}

uint64_t sub_1A747BF60(uint64_t a1)
{
  unint64_t v2 = sub_1A747DDFC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A747BF9C(uint64_t a1)
{
  unint64_t v2 = sub_1A747DDFC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A747BFD8()
{
  if (*v0) {
    return 1701670771;
  }
  else {
    return 7105633;
  }
}

uint64_t sub_1A747C004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7483528(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A747C02C(uint64_t a1)
{
  unint64_t v2 = sub_1A747DD54();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A747C068(uint64_t a1)
{
  unint64_t v2 = sub_1A747DD54();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A747C0A4(uint64_t a1)
{
  unint64_t v2 = sub_1A747DDA8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A747C0E0(uint64_t a1)
{
  unint64_t v2 = sub_1A747DDA8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMHashtagLabelDataView.Operation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4178);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4180);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4188);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A747DD54();
  sub_1A75741B0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A747DDA8();
    long long v14 = v18;
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A747DDFC();
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t REMHashtagLabelDataView.Operation.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F41A8);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F41B0);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F41B8);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A747DD54();
  uint64_t v11 = v32;
  sub_1A7574190();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  long long v14 = v10;
  uint64_t v15 = sub_1A7573A70();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A7573640();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    void *v22 = &type metadata for REMHashtagLabelDataView.Operation;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A747DDA8();
    uint64_t v18 = v14;
    sub_1A7573990();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A747DDFC();
    sub_1A7573990();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_1A747C81C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMHashtagLabelDataView.Operation.init(from:)(a1, a2);
}

uint64_t sub_1A747C834(void *a1)
{
  return REMHashtagLabelDataView.Operation.encode(to:)(a1);
}

uint64_t static REMHashtagLabelDataView.fetchReminderIDs(include:exclude:operation:store:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  char v9 = *a3;
  type metadata accessor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = objc_msgSend(v10, sel_init);
  sub_1A7303944((uint64_t)v11, a1, a2, v9, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!v5)
  {
    a4 = v13[0];
  }
  return a4;
}

uint64_t REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.init(include:exclude:operation:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *a3;
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = v4;
  return result;
}

uint64_t static REMHashtagLabelDataView.fetchAllHashtagLabelSuggestions(store:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1A747C944, 0, 0);
}

uint64_t sub_1A747C944()
{
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A7572740();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F237E0]);
  uint64_t v2 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1A7572A00();
  id v4 = objc_msgSend(v1, sel_initWithQueryString_bundleIDs_, v2, v3);
  *(void *)(v0 + 40) = v4;

  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 48) = v5;
  *(void *)uint64_t v5 = v0;
  *(void *)(v5 + 8) = sub_1A747CAA0;
  long long v6 = *(_OWORD *)(v0 + 16);
  *(void *)(v5 + 1376) = *(void *)(v0 + 32);
  *(void *)(v5 + 1368) = v4;
  *(_OWORD *)(v5 + 1352) = v6;
  return MEMORY[0x1F4188298](sub_1A747CC6C, 0, 0);
}

uint64_t sub_1A747CAA0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A747CBDC, 0, 0);
  }
  else
  {

    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A747CBDC()
{
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A747CC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[172] = v3;
  v4[171] = a3;
  v4[170] = a2;
  v4[169] = a1;
  return MEMORY[0x1F4188298](sub_1A747CC6C, 0, 0);
}

uint64_t sub_1A747CC6C()
{
  uint64_t v1 = v0[172];
  uint64_t v2 = (void *)v0[171];
  uint64_t v3 = (void *)v0[170];
  uint64_t v4 = swift_allocObject();
  v0[173] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v3;
  id v5 = v3;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB704AC0);
  swift_asyncLet_begin();
  uint64_t v6 = swift_allocObject();
  v0[174] = v6;
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v2;
  id v7 = v2;
  swift_asyncLet_begin();
  return MEMORY[0x1F41881E0](v0 + 82, v0 + 168, sub_1A747CDC8, v0 + 162);
}

uint64_t sub_1A747CDC8()
{
  v1[175] = v0;
  if (v0)
  {
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 167, sub_1A747D048, v1 + 162);
  }
  else
  {
    v1[176] = v1[168];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 2, v1 + 167, sub_1A747CE94, v1 + 162);
  }
}

uint64_t sub_1A747CE94()
{
  *(void *)(v1 + 1416) = v0;
  if (v0) {
    uint64_t v2 = sub_1A747D114;
  }
  else {
    uint64_t v2 = sub_1A747CEC8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A747CEC8()
{
  uint64_t v1 = v0[176];
  uint64_t v2 = (void *)v0[169];
  uint64_t v3 = v0[167];
  swift_bridgeObjectRetain();
  sub_1A747FCB4(v1, v3, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 2, v0 + 167, sub_1A747CF7C, v0 + 162);
}

uint64_t sub_1A747CF7C()
{
  return MEMORY[0x1F4188298](sub_1A747CF98, 0, 0);
}

uint64_t sub_1A747CF98()
{
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1344, sub_1A747CFB8, v0 + 16);
}

uint64_t sub_1A747CFB8()
{
  return MEMORY[0x1F4188298](sub_1A747CFD4, 0, 0);
}

uint64_t sub_1A747CFD4()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A747D048()
{
  return MEMORY[0x1F4188298](sub_1A747D064, 0, 0);
}

uint64_t sub_1A747D064()
{
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1344, sub_1A747D084, v0 + 16);
}

uint64_t sub_1A747D084()
{
  return MEMORY[0x1F4188298](sub_1A747D0A0, 0, 0);
}

uint64_t sub_1A747D0A0()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A747D114()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 1336, sub_1A747D194, v0 + 1296);
}

uint64_t sub_1A747D194()
{
  return MEMORY[0x1F4188298](sub_1A747D1B0, 0, 0);
}

uint64_t sub_1A747D1B0()
{
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1344, sub_1A747D1D0, v0 + 16);
}

uint64_t sub_1A747D1D0()
{
  return MEMORY[0x1F4188298](sub_1A747D1EC, 0, 0);
}

uint64_t sub_1A747D1EC()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static REMHashtagLabelDataView.fetchAllHashtagLabelSuggestionsPublisher(store:combineType:)(void *a1, char *a2)
{
  char v9 = *a2;
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A7572740();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F237E0]);
  uint64_t v4 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1A7572A00();
  id v6 = objc_msgSend(v3, sel_initWithQueryString_bundleIDs_, v4, v5);

  uint64_t v7 = sub_1A747D358(a1, &v9, v6);
  return v7;
}

uint64_t sub_1A747D358(void *a1, char *a2, void *a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDC0);
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  MEMORY[0x1F4188790](v7);
  long long v48 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFFD8);
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  id v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700030);
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700168);
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFFE8);
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  char v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDB8);
  uint64_t v44 = *(void *)(v18 - 8);
  uint64_t v45 = v18;
  MEMORY[0x1F4188790](v18);
  char v38 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v20 = *a2;
  uint64_t v47 = v3;
  uint64_t v46 = sub_1A7480390(a1);
  *(void *)(swift_allocObject() + 16) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700048);
  swift_allocObject();
  id v21 = a3;
  uint64_t v52 = sub_1A75720C0();
  sub_1A72AE788(&qword_1EB6FFDC8, &qword_1EB700048);
  uint64_t v22 = sub_1A75720E0();
  swift_release();
  if (v20)
  {
    uint64_t v51 = v46;
    uint64_t v52 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700028);
    sub_1A72AE788(&qword_1EB700020, &qword_1EB700028);
    sub_1A7572130();
    sub_1A72AE788(&qword_1E96F4378, &qword_1EB6FFFD8);
    uint64_t v23 = v42;
    uint64_t v24 = sub_1A75720E0();
    uint64_t v25 = v40;
  }
  else
  {
    uint64_t v52 = MEMORY[0x1E4FBC860];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A75720B0();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
    uint64_t v26 = v36;
    sub_1A75720A0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v26);
    uint64_t v52 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700028);
    sub_1A72AE788(&qword_1EB700160, &qword_1EB700168);
    sub_1A72AE788(&qword_1EB700020, &qword_1EB700028);
    uint64_t v27 = v39;
    sub_1A7572170();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v27);
    uint64_t v52 = v46;
    sub_1A72AE788(&qword_1EB6FFFE0, &qword_1EB6FFFE8);
    id v10 = v38;
    uint64_t v28 = v43;
    sub_1A7572100();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v28);
    sub_1A72AE788(qword_1EB6FFF48, &qword_1EB6FFDB8);
    uint64_t v23 = v45;
    uint64_t v24 = sub_1A75720E0();
    uint64_t v25 = v44;
  }
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v23);
  uint64_t v52 = v24;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v47;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_1A7483C2C;
  *(void *)(v30 + 24) = v29;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700018);
  sub_1A72AE788(&qword_1EB700010, &qword_1EB700018);
  uint64_t v31 = v48;
  sub_1A7572120();
  swift_release();
  swift_release();
  sub_1A72AE788(&qword_1EB6FFFD0, &qword_1EB6FFDC0);
  uint64_t v32 = v50;
  uint64_t v33 = sub_1A75720E0();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v32);
  return v33;
}

uint64_t static REMHashtagLabelDataView.fetchHashtagLabelsReferencedByCustomSmartListFilters(store:fetchStyle:)(uint64_t a1, char *a2)
{
  char v4 = *a2;
  type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation();
  id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A7302DC4((uint64_t)v5, v4, v7);

  if (!v2)
  {
    a1 = v7[0];
  }
  return a1;
}

uint64_t REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.init(hashtagLabelNamesToSearch:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation()
{
  return self;
}

unint64_t sub_1A747DBEC()
{
  unint64_t result = qword_1E96F4148;
  if (!qword_1E96F4148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4148);
  }
  return result;
}

unint64_t sub_1A747DC40()
{
  unint64_t result = qword_1E96F4150;
  if (!qword_1E96F4150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4150);
  }
  return result;
}

unint64_t sub_1A747DC94()
{
  unint64_t result = qword_1E96F4158;
  if (!qword_1E96F4158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4158);
  }
  return result;
}

uint64_t type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation()
{
  return self;
}

uint64_t type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation()
{
  return self;
}

uint64_t type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation()
{
  return self;
}

unint64_t sub_1A747DD54()
{
  unint64_t result = qword_1E96F4190;
  if (!qword_1E96F4190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4190);
  }
  return result;
}

unint64_t sub_1A747DDA8()
{
  unint64_t result = qword_1E96F4198;
  if (!qword_1E96F4198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4198);
  }
  return result;
}

unint64_t sub_1A747DDFC()
{
  unint64_t result = qword_1E96F41A0;
  if (!qword_1E96F41A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F41A0);
  }
  return result;
}

uint64_t type metadata accessor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation()
{
  return self;
}

uint64_t static REMHashtagLabelDataView.AllHashtagLabelsInvocation.supportsSecureCoding.getter()
{
  return 1;
}

ReminderKitInternal::REMHashtagLabelDataView::AllHashtagLabelsInvocation::SortingStyle_optional __swiftcall REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  char *v1 = v2;
  return (ReminderKitInternal::REMHashtagLabelDataView::AllHashtagLabelsInvocation::SortingStyle_optional)rawValue;
}

uint64_t REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle.rawValue.getter()
{
  return *v0;
}

uint64_t sub_1A747DEA8()
{
  return sub_1A75729E0();
}

uint64_t sub_1A747DF08()
{
  return sub_1A7572990();
}

void REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.sortingStyle.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1A747DF64()
{
  return 0x53676E6974726F73;
}

uint64_t sub_1A747DF88(uint64_t a1)
{
  unint64_t v2 = sub_1A747E03C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A747DFC4(uint64_t a1)
{
  unint64_t v2 = sub_1A747E03C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.encode(to:)(void *a1)
{
  return sub_1A747E32C(a1, &qword_1EB700150, (void (*)(void))sub_1A747E03C);
}

unint64_t sub_1A747E03C()
{
  unint64_t result = qword_1EB701C90;
  if (!qword_1EB701C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701C90);
  }
  return result;
}

unint64_t sub_1A747E090()
{
  unint64_t result = qword_1EB6FFEA8[0];
  if (!qword_1EB6FFEA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB6FFEA8);
  }
  return result;
}

uint64_t REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1A747E50C(a1, &qword_1EB700408, (void (*)(void))sub_1A747E03C, a2);
}

unint64_t sub_1A747E120()
{
  unint64_t result = qword_1EB700230;
  if (!qword_1EB700230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700230);
  }
  return result;
}

uint64_t sub_1A747E174@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A747E18C(void *a1)
{
  return REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.encode(to:)(a1);
}

uint64_t static REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_1A747E1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x53676E6974726F73 && a2 == 0xEC000000656C7974)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A747E278(uint64_t a1)
{
  unint64_t v2 = sub_1A747E47C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A747E2B4(uint64_t a1)
{
  unint64_t v2 = sub_1A747E47C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.encode(to:)(void *a1)
{
  return sub_1A747E32C(a1, &qword_1E96F41D0, (void (*)(void))sub_1A747E47C);
}

uint64_t sub_1A747E32C(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v11 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11();
  sub_1A75741B0();
  char v12 = v9;
  sub_1A747E090();
  sub_1A7573B00();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A747E47C()
{
  unint64_t result = qword_1E96F41D8;
  if (!qword_1E96F41D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F41D8);
  }
  return result;
}

uint64_t REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1A747E50C(a1, &qword_1E96F41E0, (void (*)(void))sub_1A747E47C, a2);
}

uint64_t sub_1A747E50C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, unsigned char *a4@<X8>)
{
  char v12 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v13 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A7574190();
  if (!v4)
  {
    id v10 = v12;
    sub_1A747E120();
    sub_1A75739F0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    *id v10 = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A747E684@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A747E69C(void *a1)
{
  return REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.encode(to:)(a1);
}

uint64_t static REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.include.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.exclude.getter()
{
  return swift_bridgeObjectRetain();
}

void REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.operation.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t sub_1A747E6F4()
{
  uint64_t v1 = 0x6564756C637865;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F6974617265706FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6564756C636E69;
  }
}

uint64_t sub_1A747E748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74838B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A747E770(uint64_t a1)
{
  unint64_t v2 = sub_1A747E9FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A747E7AC(uint64_t a1)
{
  unint64_t v2 = sub_1A747E9FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F41E8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v13 = v1[1];
  int v12 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A747E9FC();
  sub_1A75741B0();
  uint64_t v15 = v8;
  char v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
  sub_1A7474658(&qword_1EB704C00, &qword_1EB705A10);
  sub_1A7573B60();
  if (!v2)
  {
    char v9 = v12;
    uint64_t v15 = v13;
    char v14 = 1;
    sub_1A7573B60();
    LOBYTE(v15) = v9;
    char v14 = 2;
    sub_1A747EA50();
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A747E9FC()
{
  unint64_t result = qword_1E96F41F0;
  if (!qword_1E96F41F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F41F0);
  }
  return result;
}

unint64_t sub_1A747EA50()
{
  unint64_t result = qword_1E96F41F8;
  if (!qword_1E96F41F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F41F8);
  }
  return result;
}

uint64_t REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4200);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A747E9FC();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v14 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
  char v15 = 0;
  sub_1A7474658(&qword_1EB704C68, &qword_1EB705A10);
  sub_1A7573A50();
  uint64_t v9 = v16;
  char v15 = 1;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  uint64_t v10 = v16;
  char v15 = 2;
  sub_1A747ED74();
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v11 = v16;
  int v12 = v14;
  void *v14 = v9;
  v12[1] = v10;
  *((unsigned char *)v12 + 16) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A747ED74()
{
  unint64_t result = qword_1E96F4208;
  if (!qword_1E96F4208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4208);
  }
  return result;
}

uint64_t sub_1A747EDC8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A747EDE0(void *a1)
{
  return REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.encode(to:)(a1);
}

uint64_t static REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.labels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.isUpToDate.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

ReminderKitInternal::REMHashtagLabelDataView::HashtagLabelsReferencedByCustomSmartListFiltersInvocation::Result __swiftcall REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.init(labels:isUpToDate:)(Swift::OpaquePointer labels, Swift::Bool isUpToDate)
{
  *(Swift::OpaquePointer *)uint64_t v2 = labels;
  *(unsigned char *)(v2 + 8) = isUpToDate;
  result.labels = labels;
  result.isUpToDate = isUpToDate;
  return result;
}

uint64_t sub_1A747EE38()
{
  if (*v0) {
    return 0x61446F5470557369;
  }
  else {
    return 0x736C6562616CLL;
  }
}

uint64_t sub_1A747EE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7483A08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A747EE9C(uint64_t a1)
{
  unint64_t v2 = sub_1A747F0D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A747EED8(uint64_t a1)
{
  unint64_t v2 = sub_1A747F0D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4210);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  _OWORD v10[2] = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A747F0D0();
  sub_1A75741B0();
  uint64_t v13 = v8;
  char v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A7474658(&qword_1EB7003D8, &qword_1EB704AC0);
  sub_1A7573B60();
  if (!v2)
  {
    char v11 = 1;
    sub_1A7573B20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A747F0D0()
{
  unint64_t result = qword_1E96F4218;
  if (!qword_1E96F4218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4218);
  }
  return result;
}

uint64_t REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4220);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A747F0D0();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  v12[15] = 0;
  sub_1A7474658(&qword_1EB700070, &qword_1EB704AC0);
  sub_1A7573A50();
  uint64_t v9 = v13;
  v12[14] = 1;
  swift_bridgeObjectRetain();
  char v10 = sub_1A7573A10();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v10 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A747F340@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A747F358(void *a1)
{
  return REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.encode(to:)(a1);
}

uint64_t static REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.hashtagLabelNamesToSearch.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1A747F39C()
{
  return 0xD000000000000019;
}

uint64_t sub_1A747F3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7483B00(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A747F3E4(uint64_t a1)
{
  unint64_t v2 = sub_1A747F5DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A747F420(uint64_t a1)
{
  unint64_t v2 = sub_1A747F5DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4228);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A747F5DC();
  sub_1A75741B0();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
  sub_1A7474658(&qword_1EB704C00, &qword_1EB705A10);
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A747F5DC()
{
  unint64_t result = qword_1E96F4230;
  if (!qword_1E96F4230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4230);
  }
  return result;
}

uint64_t REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4238);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A747F5DC();
  sub_1A7574190();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
    sub_1A7474658(&qword_1EB704C68, &qword_1EB705A10);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A747F7D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A747F7E8(void *a1)
{
  return REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.encode(to:)(a1);
}

id REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t sub_1A747F89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  void *v5 = v3;
  v5[1] = sub_1A747F948;
  uint64_t v5[2] = a3;
  return MEMORY[0x1F4188298](sub_1A7483E8C, 0, 0);
}

uint64_t sub_1A747F948(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return MEMORY[0x1F4188298](sub_1A7484758, 0, 0);
  }
}

uint64_t sub_1A747FA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  void *v5 = v3;
  v5[1] = sub_1A747FB44;
  v5[3] = a3;
  return MEMORY[0x1F4188298](sub_1A748418C, 0, 0);
}

uint64_t sub_1A747FB44(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return MEMORY[0x1F4188298](sub_1A747FC90, 0, 0);
  }
}

uint64_t sub_1A747FC90()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A747FCB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v65 = a3;
  uint64_t v73 = sub_1A7571500();
  uint64_t v5 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  long long v72 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v7 - 8);
  long long v71 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v64 = a1;
  uint64_t v66 = a2;
  if (v9)
  {
    uint64_t v78 = MEMORY[0x1E4FBC860];
    sub_1A72D2FEC(0, v9, 0);
    uint64_t v69 = v5;
    long long v70 = (void (**)(char *, uint64_t))(v5 + 8);
    char v10 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v11 = *(v10 - 1);
      uint64_t v12 = *v10;
      swift_bridgeObjectRetain();
      uint64_t v13 = (uint64_t)v71;
      sub_1A7571C80();
      uint64_t v14 = sub_1A7571D30();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
      long long v76 = (void *)v11;
      uint64_t v77 = v12;
      sub_1A72DF534();
      uint64_t v74 = sub_1A7573310();
      uint64_t v75 = v15;
      uint64_t v16 = v72;
      sub_1A75714D0();
      uint64_t v17 = sub_1A75732B0();
      uint64_t v19 = v18;
      (*v70)(v16, v73);
      swift_bridgeObjectRelease();
      sub_1A72CB560(v13, &qword_1EB6FFDE8);
      uint64_t v20 = v78;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A72D2FEC(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v78;
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1A72D2FEC(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v78;
      }
      v10 += 2;
      *(void *)(v20 + 16) = v22 + 1;
      uint64_t v23 = (void *)(v20 + 32 * v22);
      v23[4] = v17;
      v23[5] = v19;
      v23[6] = v11;
      v23[7] = v12;
      --v9;
    }
    while (v9);
    uint64_t v5 = v69;
  }
  else
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    if (!*(void *)(MEMORY[0x1E4FBC860] + 16))
    {
      uint64_t v24 = MEMORY[0x1E4FBC868];
      goto LABEL_11;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1000);
  uint64_t v24 = sub_1A7573920();
  a2 = v66;
LABEL_11:
  long long v76 = (void *)v24;
  uint64_t v25 = 0;
  sub_1A74835FC(v20, 1, (uint64_t *)&v76);
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t)v76;
  long long v70 = *(void (***)(char *, uint64_t))(a2 + 16);
  if (!v70)
  {
    long long v57 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_53;
  }
  uint64_t v63 = 0;
  long long v68 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v69 = a2 + 32;
  swift_bridgeObjectRetain();
  uint64_t v27 = 0;
  long long v67 = (void *)MEMORY[0x1E4FBC860];
  while (2)
  {
    uint64_t v28 = (uint64_t *)(v69 + 16 * (void)v27);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v27 = (void (**)(char *, uint64_t))((char *)v27 + 1);
    swift_bridgeObjectRetain();
    uint64_t v31 = (uint64_t)v71;
    sub_1A7571C80();
    uint64_t v32 = sub_1A7571D30();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
    uint64_t v33 = v29;
    long long v76 = (void *)v29;
    uint64_t v77 = v30;
    sub_1A72DF534();
    uint64_t v74 = sub_1A7573310();
    uint64_t v75 = v34;
    uint64_t v35 = v72;
    sub_1A75714D0();
    uint64_t v36 = sub_1A75732B0();
    uint64_t v38 = v37;
    (*v68)(v35, v73);
    swift_bridgeObjectRelease();
    sub_1A72CB560(v31, &qword_1EB6FFDE8);
    int64_t v39 = 0;
    uint64_t v40 = v26 + 64;
    uint64_t v41 = 1 << *(unsigned char *)(v26 + 32);
    if (v41 < 64) {
      uint64_t v42 = ~(-1 << v41);
    }
    else {
      uint64_t v42 = -1;
    }
    unint64_t v43 = v42 & *(void *)(v26 + 64);
    int64_t v44 = (unint64_t)(v41 + 63) >> 6;
    while (v43)
    {
      unint64_t v45 = __clz(__rbit64(v43));
      v43 &= v43 - 1;
      unint64_t v46 = v45 | (v39 << 6);
LABEL_39:
      uint64_t v50 = (void *)(*(void *)(v26 + 48) + 16 * v46);
      BOOL v51 = *v50 == v36 && v50[1] == v38;
      if (v51 || (sub_1A7573DB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    int64_t v47 = v39 + 1;
    if (__OFADD__(v39, 1))
    {
      __break(1u);
LABEL_57:
      __break(1u);
      swift_bridgeObjectRelease();
      goto LABEL_58;
    }
    if (v47 >= v44) {
      goto LABEL_45;
    }
    unint64_t v48 = *(void *)(v40 + 8 * v47);
    ++v39;
    if (v48) {
      goto LABEL_38;
    }
    int64_t v39 = v47 + 1;
    if (v47 + 1 >= v44) {
      goto LABEL_45;
    }
    unint64_t v48 = *(void *)(v40 + 8 * v39);
    if (v48) {
      goto LABEL_38;
    }
    int64_t v39 = v47 + 2;
    if (v47 + 2 >= v44) {
      goto LABEL_45;
    }
    unint64_t v48 = *(void *)(v40 + 8 * v39);
    if (v48) {
      goto LABEL_38;
    }
    int64_t v39 = v47 + 3;
    if (v47 + 3 >= v44) {
      goto LABEL_45;
    }
    unint64_t v48 = *(void *)(v40 + 8 * v39);
    if (v48) {
      goto LABEL_38;
    }
    int64_t v39 = v47 + 4;
    if (v47 + 4 >= v44) {
      goto LABEL_45;
    }
    unint64_t v48 = *(void *)(v40 + 8 * v39);
    if (v48)
    {
LABEL_38:
      unint64_t v43 = (v48 - 1) & v48;
      unint64_t v46 = __clz(__rbit64(v48)) + (v39 << 6);
      goto LABEL_39;
    }
    int64_t v49 = v47 + 5;
    if (v49 < v44)
    {
      unint64_t v48 = *(void *)(v40 + 8 * v49);
      if (!v48)
      {
        while (1)
        {
          int64_t v39 = v49 + 1;
          if (__OFADD__(v49, 1)) {
            goto LABEL_57;
          }
          if (v39 >= v44) {
            goto LABEL_45;
          }
          unint64_t v48 = *(void *)(v40 + 8 * v39);
          ++v49;
          if (v48) {
            goto LABEL_38;
          }
        }
      }
      int64_t v39 = v49;
      goto LABEL_38;
    }
LABEL_45:
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v76 = (void *)v26;
    sub_1A72D8034(v33, v30, v36, v38, isUniquelyReferenced_nonNull_native);
    uint64_t v26 = (uint64_t)v76;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      long long v53 = v67;
    }
    else {
      long long v53 = sub_1A72AC148(0, v67[2] + 1, 1, v67);
    }
    unint64_t v55 = v53[2];
    unint64_t v54 = v53[3];
    if (v55 >= v54 >> 1) {
      long long v53 = sub_1A72AC148((void *)(v54 > 1), v55 + 1, 1, v53);
    }
    v53[2] = v55 + 1;
    long long v67 = v53;
    long long v56 = &v53[2 * v55];
    v56[4] = v33;
    v56[5] = v30;
LABEL_14:
    swift_bridgeObjectRelease();
    if (v27 != v70) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = v63;
  long long v57 = v67;
LABEL_53:
  long long v76 = v57;
  swift_bridgeObjectRetain_n();
  sub_1A747B248((uint64_t *)&v76);
  if (v25)
  {
LABEL_58:
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v58 = (uint64_t)v76;
    uint64_t v59 = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v60 = v65;
    void *v65 = v59;
    v60[1] = v58;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A7480390(void *a1)
{
  uint64_t v28 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704BB0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700040);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700008);
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  int64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFFF8);
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = 1;
  sub_1A75720B0();
  if (qword_1EB704BD8 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_1EB704918;
  uint64_t v29 = qword_1EB704918;
  uint64_t v13 = sub_1A7573060();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 1, 1, v13);
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705908);
  sub_1A72AE788(&qword_1EB700038, &qword_1EB700040);
  sub_1A7414FA0();
  id v14 = v12;
  sub_1A75721B0();
  sub_1A72CB560((uint64_t)v3, &qword_1EB704BB0);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v28;
  *(void *)(v15 + 16) = v27;
  *(void *)(v15 + 24) = v16;
  id v17 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72AE788(&qword_1EB700000, &qword_1EB700008);
  uint64_t v18 = v26;
  sub_1A7572190();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v18);
  sub_1A72AE788(&qword_1EB6FFFF0, &qword_1EB6FFFF8);
  uint64_t v19 = v25;
  uint64_t v20 = sub_1A75720E0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v19);
  return v20;
}

id sub_1A74807E8(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F43A8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1A748467C;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A7480A64;
  aBlock[3] = &block_descriptor_142;
  int64_t v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_setHashTagCompletionHandler_, v9);
  _Block_release(v9);
  return objc_msgSend(a2, sel_start);
}

uint64_t sub_1A74809A0(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v6 = a2;
    uint64_t v2 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F43A8);
    return sub_1A7572BA0();
  }
  else
  {
    if (a1)
    {
      uint64_t v4 = swift_bridgeObjectRetain();
      uint64_t v6 = sub_1A72D1F58(v4);
      sub_1A747B248((uint64_t *)&v6);
      swift_bridgeObjectRelease();
      uint64_t v5 = v6;
    }
    else
    {
      uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v6 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F43A8);
    return sub_1A7572BB0();
  }
}

uint64_t sub_1A7480A64(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_1A7572C80();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1A7480B04(void *a1@<X8>)
{
  type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation();
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A730215C((uint64_t)v3, 1, v20);

  if (v1) {
    return;
  }
  uint64_t v5 = v20[0];
  uint64_t v4 = (void *)v20[1];
  if ((unint64_t)v20[0] >> 62)
  {
    sub_1A72BEFEC(0, &qword_1EB700080);
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_1A7573850();
    swift_bridgeObjectRelease_n();

    uint64_t v5 = v6;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1A75738D0();
      goto LABEL_5;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1A7573DE0();
    sub_1A72BEFEC(0, &qword_1EB700080);
    swift_bridgeObjectRelease();

    unint64_t v6 = v5;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_5:
  unint64_t v21 = a1;
  if (v7)
  {
    if (v7 < 1)
    {
      __break(1u);
      return;
    }
    uint64_t v8 = 0;
    unint64_t v9 = v6 & 0xC000000000000001;
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if (v9) {
        id v11 = (id)MEMORY[0x1AD0CB800](v8, v5);
      }
      else {
        id v11 = *(id *)(v5 + 8 * v8 + 32);
      }
      uint64_t v12 = v11;
      id v13 = objc_msgSend(v11, sel_name);
      uint64_t v14 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v16 = v15;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_1A72AC148(0, v10[2] + 1, 1, v10);
      }
      unint64_t v18 = v10[2];
      unint64_t v17 = v10[3];
      if (v18 >= v17 >> 1) {
        uint64_t v10 = sub_1A72AC148((void *)(v17 > 1), v18 + 1, 1, v10);
      }
      ++v8;
      void v10[2] = v18 + 1;
      uint64_t v19 = &v10[2 * v18];
      v19[4] = v14;
      v19[5] = v16;
    }
    while (v7 != v8);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease_n();
  *unint64_t v21 = v10;
}

void sub_1A7480D7C(void (*a1)(id *), uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  if (a3)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_1A745AF04;
    *(void *)(v7 + 24) = v6;
    unint64_t v21 = sub_1A7483CB8;
    uint64_t v22 = v7;
    id v17 = (id)MEMORY[0x1E4F143A8];
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_1A7480A64;
    uint64_t v20 = &block_descriptor_14;
    uint64_t v8 = _Block_copy(&v17);
    swift_retain();
    id v9 = a3;
    swift_release();
    objc_msgSend(v9, sel_setHashTagCompletionHandler_, v8);
    _Block_release(v8);
    objc_msgSend(v9, sel_start);
  }
  else
  {
    swift_retain();
    swift_release();
    if (qword_1E96F08A8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1A7571E90();
    __swift_project_value_buffer(v10, (uint64_t)qword_1E96F4118);
    id v11 = sub_1A7571E80();
    os_log_type_t v12 = sub_1A7572FD0();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v13 = 0;
      _os_log_impl(&dword_1A72A1000, v11, v12, "CSHashtagQuery is nil", v13, 2u);
      MEMORY[0x1AD0CD330](v13, -1, -1);
    }

    uint64_t v14 = self;
    uint64_t v15 = (void *)sub_1A75725E0();
    id v16 = objc_msgSend(v14, sel_internalErrorWithDebugDescription_, v15);

    id v17 = v16;
    LOBYTE(v18) = 1;
    a1(&v17);
  }
}

void sub_1A7480FF0(uint64_t a1, id a2, void (*a3)(id, uint64_t))
{
  if (a2)
  {
    id v5 = a2;
    a3(a2, 1);
  }
  else
  {
    if (a1)
    {
      uint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1A72D1F58(v6);
      sub_1A747B248((uint64_t *)&v8);
      swift_bridgeObjectRelease();
      uint64_t v7 = v8;
    }
    else
    {
      uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    }
    a3(v7, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t REMHashtagLabelDataView.deinit()
{
  return v0;
}

uint64_t REMHashtagLabelDataView.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

unint64_t sub_1A74810F8()
{
  unint64_t result = qword_1E96F4240;
  if (!qword_1E96F4240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4240);
  }
  return result;
}

unint64_t sub_1A7481150()
{
  unint64_t result = qword_1E96F4248;
  if (!qword_1E96F4248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4248);
  }
  return result;
}

unint64_t sub_1A74811A8()
{
  unint64_t result = qword_1E96F4250;
  if (!qword_1E96F4250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4250);
  }
  return result;
}

unint64_t sub_1A7481200()
{
  unint64_t result = qword_1E96F4258;
  if (!qword_1E96F4258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4258);
  }
  return result;
}

unint64_t sub_1A7481258()
{
  unint64_t result = qword_1E96F4260;
  if (!qword_1E96F4260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4260);
  }
  return result;
}

unint64_t sub_1A74812B8()
{
  unint64_t result = qword_1EB7044C8;
  if (!qword_1EB7044C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB705760);
    sub_1A748135C(&qword_1EB7043D8, (void (*)(uint64_t))type metadata accessor for REMHashtagLabel_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7044C8);
  }
  return result;
}

uint64_t sub_1A748135C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A74813A8()
{
  unint64_t result = qword_1E96F4268;
  if (!qword_1E96F4268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4268);
  }
  return result;
}

unint64_t sub_1A7481408()
{
  unint64_t result = qword_1E96F4270;
  if (!qword_1E96F4270)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1768);
    sub_1A748135C(&qword_1E96F4278, (void (*)(uint64_t))type metadata accessor for REMHashtagLabelDetailed_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4270);
  }
  return result;
}

unint64_t sub_1A74814B0()
{
  unint64_t result = qword_1E96F4280;
  if (!qword_1E96F4280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4280);
  }
  return result;
}

unint64_t sub_1A748150C()
{
  unint64_t result = qword_1EB705B98;
  if (!qword_1EB705B98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB705B90);
    sub_1A748135C(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705B98);
  }
  return result;
}

unint64_t sub_1A74815B4()
{
  unint64_t result = qword_1EB7054B0;
  if (!qword_1EB7054B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB705B90);
    sub_1A748135C(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7054B0);
  }
  return result;
}

unint64_t sub_1A748165C()
{
  unint64_t result = qword_1E96F4288;
  if (!qword_1E96F4288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4288);
  }
  return result;
}

unint64_t sub_1A74816BC()
{
  unint64_t result = qword_1E96F4290;
  if (!qword_1E96F4290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4290);
  }
  return result;
}

unint64_t sub_1A7481714()
{
  unint64_t result = qword_1E96F4298;
  if (!qword_1E96F4298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4298);
  }
  return result;
}

uint64_t type metadata accessor for REMHashtagLabelDataView()
{
  return self;
}

uint64_t method lookup function for REMHashtagLabelDataView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMHashtagLabelDataView);
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.CombineType()
{
  return &type metadata for REMHashtagLabelDataView.CombineType;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagSuggestions()
{
  return &type metadata for REMHashtagLabelDataView.HashtagSuggestions;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle()
{
  return &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.Operation()
{
  return &type metadata for REMHashtagLabelDataView.Operation;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle()
{
  return &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters()
{
  return &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters;
}

uint64_t _s19ReminderKitInternal23REMHashtagLabelDataViewC26AllHashtagLabelsInvocationC10ParametersVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  if (*a1 <= 2u) {
    int v6 = 2;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 3;
  if (*a1 < 2u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters()
{
  return &type metadata for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters;
}

uint64_t sub_1A74818C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters()
{
  return &type metadata for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters;
}

uint64_t initializeBufferWithCopyOfBuffer for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result()
{
  return &type metadata for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters()
{
  return &type metadata for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.CodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.CodingKeys;
}

unsigned char *_s19ReminderKitInternal23REMHashtagLabelDataViewC26AllHashtagLabelsInvocationC10ParametersVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7481CB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.CodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.CodingKeys;
}

unsigned char *_s19ReminderKitInternal23REMHashtagLabelDataViewC41HashtagIDsWithHashtagLabelNamesInvocationC10ParametersV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A7481D94);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.CodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.Operation.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.Operation.CodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.Operation.AllCodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.Operation.AllCodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.Operation.SomeCodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.Operation.SomeCodingKeys;
}

unsigned char *_s19ReminderKitInternal23REMHashtagLabelDataViewC11CombineTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7481EC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CachedOrStoreCodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CachedOrStoreCodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.StoreCodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.StoreCodingKeys;
}

unint64_t sub_1A7481F24()
{
  unint64_t result = qword_1E96F42A0;
  if (!qword_1E96F42A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F42A0);
  }
  return result;
}

unint64_t sub_1A7481F7C()
{
  unint64_t result = qword_1E96F42A8;
  if (!qword_1E96F42A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F42A8);
  }
  return result;
}

unint64_t sub_1A7481FD4()
{
  unint64_t result = qword_1E96F42B0;
  if (!qword_1E96F42B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F42B0);
  }
  return result;
}

unint64_t sub_1A748202C()
{
  unint64_t result = qword_1E96F42B8;
  if (!qword_1E96F42B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F42B8);
  }
  return result;
}

unint64_t sub_1A7482084()
{
  unint64_t result = qword_1E96F42C0;
  if (!qword_1E96F42C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F42C0);
  }
  return result;
}

unint64_t sub_1A74820DC()
{
  unint64_t result = qword_1E96F42C8;
  if (!qword_1E96F42C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F42C8);
  }
  return result;
}

unint64_t sub_1A7482134()
{
  unint64_t result = qword_1E96F42D0;
  if (!qword_1E96F42D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F42D0);
  }
  return result;
}

unint64_t sub_1A748218C()
{
  unint64_t result = qword_1E96F42D8;
  if (!qword_1E96F42D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F42D8);
  }
  return result;
}

unint64_t sub_1A74821E4()
{
  unint64_t result = qword_1E96F42E0;
  if (!qword_1E96F42E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F42E0);
  }
  return result;
}

unint64_t sub_1A748223C()
{
  unint64_t result = qword_1E96F42E8;
  if (!qword_1E96F42E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F42E8);
  }
  return result;
}

unint64_t sub_1A7482294()
{
  unint64_t result = qword_1E96F42F0;
  if (!qword_1E96F42F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F42F0);
  }
  return result;
}

unint64_t sub_1A74822EC()
{
  unint64_t result = qword_1E96F42F8;
  if (!qword_1E96F42F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F42F8);
  }
  return result;
}

unint64_t sub_1A7482344()
{
  unint64_t result = qword_1E96F4300;
  if (!qword_1E96F4300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4300);
  }
  return result;
}

unint64_t sub_1A748239C()
{
  unint64_t result = qword_1E96F4308;
  if (!qword_1E96F4308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4308);
  }
  return result;
}

unint64_t sub_1A74823F4()
{
  unint64_t result = qword_1E96F4310;
  if (!qword_1E96F4310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4310);
  }
  return result;
}

unint64_t sub_1A748244C()
{
  unint64_t result = qword_1EB701AD0;
  if (!qword_1EB701AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701AD0);
  }
  return result;
}

unint64_t sub_1A74824A4()
{
  unint64_t result = qword_1EB701C98;
  if (!qword_1EB701C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701C98);
  }
  return result;
}

unint64_t sub_1A74824FC()
{
  unint64_t result = qword_1E96F4318;
  if (!qword_1E96F4318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4318);
  }
  return result;
}

unint64_t sub_1A7482554()
{
  unint64_t result = qword_1E96F4320;
  if (!qword_1E96F4320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4320);
  }
  return result;
}

unint64_t sub_1A74825AC()
{
  unint64_t result = qword_1E96F4328;
  if (!qword_1E96F4328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4328);
  }
  return result;
}

unint64_t sub_1A7482604()
{
  unint64_t result = qword_1E96F4330;
  if (!qword_1E96F4330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4330);
  }
  return result;
}

unint64_t sub_1A748265C()
{
  unint64_t result = qword_1E96F4338;
  if (!qword_1E96F4338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4338);
  }
  return result;
}

unint64_t sub_1A74826B4()
{
  unint64_t result = qword_1E96F4340;
  if (!qword_1E96F4340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4340);
  }
  return result;
}

unint64_t sub_1A748270C()
{
  unint64_t result = qword_1E96F4348;
  if (!qword_1E96F4348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4348);
  }
  return result;
}

unint64_t sub_1A7482764()
{
  unint64_t result = qword_1E96F4350;
  if (!qword_1E96F4350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4350);
  }
  return result;
}

unint64_t sub_1A74827BC()
{
  unint64_t result = qword_1E96F4358;
  if (!qword_1E96F4358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4358);
  }
  return result;
}

unint64_t sub_1A7482814()
{
  unint64_t result = qword_1E96F4360;
  if (!qword_1E96F4360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4360);
  }
  return result;
}

unint64_t sub_1A748286C()
{
  unint64_t result = qword_1E96F4368;
  if (!qword_1E96F4368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4368);
  }
  return result;
}

unint64_t sub_1A74828C4()
{
  unint64_t result = qword_1E96F4370;
  if (!qword_1E96F4370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4370);
  }
  return result;
}

uint64_t sub_1A7482918(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_133;
    }
    if (v3) {
      return sub_1A7483040(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_141;
  }
  uint64_t v90 = result;
  uint64_t v87 = a1;
  if (v3 < 2)
  {
    int v8 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v92 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v89 = MEMORY[0x1E4FBC860];
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_99:
      if (v11 >= 2)
      {
        uint64_t v81 = *v87;
        do
        {
          unint64_t v82 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_128;
          }
          if (!v81) {
            goto LABEL_140;
          }
          uint64_t v83 = *(void *)&v8[16 * v82 + 32];
          uint64_t v84 = *(void *)&v8[16 * v11 + 24];
          sub_1A7483138((char *)(v81 + 16 * v83), (char *)(v81 + 16 * *(void *)&v8[16 * v11 + 16]), v81 + 16 * v84, v92);
          if (v1) {
            break;
          }
          if (v84 < v83) {
            goto LABEL_129;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v8 = sub_1A74F9DDC((uint64_t)v8);
          }
          if (v82 >= *((void *)v8 + 2)) {
            goto LABEL_130;
          }
          long long v85 = &v8[16 * v82 + 32];
          *(void *)long long v85 = v83;
          *((void *)v85 + 1) = v84;
          unint64_t v86 = *((void *)v8 + 2);
          if (v11 > v86) {
            goto LABEL_131;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v86 - v11));
          *((void *)v8 + 2) = v86 - 1;
          unint64_t v11 = v86 - 1;
        }
        while (v86 > 2);
      }
LABEL_110:
      swift_bridgeObjectRelease();
      *(void *)(v89 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1A7572A90();
    *(void *)(v7 + 16) = v6;
    uint64_t v89 = v7;
    uint64_t v92 = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v88 = *a1 + 24;
  int v8 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v91 = v3;
LABEL_15:
  uint64_t v12 = v9++;
  if (v9 >= v3) {
    goto LABEL_32;
  }
  sub_1A72DF534();
  uint64_t v13 = sub_1A75732E0();
  uint64_t v9 = v12 + 2;
  if (v12 + 2 >= v3) {
    goto LABEL_21;
  }
  uint64_t v14 = v88 + 16 * v12;
  do
  {
    v14 += 16;
    if ((v13 == -1) == (sub_1A75732E0() != -1))
    {
      uint64_t v3 = v91;
      if (v13 == -1) {
        goto LABEL_24;
      }
LABEL_32:
      if (v9 < v3)
      {
        if (__OFSUB__(v9, v12)) {
          goto LABEL_132;
        }
        if (v9 - v12 < v90)
        {
          if (__OFADD__(v12, v90)) {
            goto LABEL_134;
          }
          if (v12 + v90 >= v3) {
            uint64_t v22 = v3;
          }
          else {
            uint64_t v22 = v12 + v90;
          }
          if (v22 < v12)
          {
LABEL_135:
            __break(1u);
            goto LABEL_136;
          }
          if (v9 != v22)
          {
            sub_1A72DF534();
            uint64_t v23 = (void *)(v10 + 16 * v9);
            do
            {
              uint64_t v24 = v12;
              uint64_t v25 = v23;
              do
              {
                if (sub_1A75732E0() != -1) {
                  break;
                }
                if (!v10) {
                  goto LABEL_137;
                }
                uint64_t v26 = *v25;
                uint64_t v27 = v25[1];
                *(_OWORD *)uint64_t v25 = *((_OWORD *)v25 - 1);
                *(v25 - 1) = v27;
                *(v25 - 2) = v26;
                v25 -= 2;
                ++v24;
              }
              while (v9 != v24);
              ++v9;
              v23 += 2;
            }
            while (v9 != v22);
            uint64_t v9 = v22;
          }
        }
      }
      if (v9 < v12) {
        goto LABEL_127;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v8 = sub_1A74F9714(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v29 = *((void *)v8 + 2);
      unint64_t v28 = *((void *)v8 + 3);
      unint64_t v11 = v29 + 1;
      if (v29 >= v28 >> 1) {
        int v8 = sub_1A74F9714((char *)(v28 > 1), v29 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v11;
      uint64_t v93 = v8 + 32;
      uint64_t v30 = &v8[16 * v29 + 32];
      *(void *)uint64_t v30 = v12;
      *((void *)v30 + 1) = v9;
      if (v29)
      {
        uint64_t v31 = v8 + 32;
        while (1)
        {
          unint64_t v32 = v11 - 1;
          if (v11 >= 4)
          {
            uint64_t v37 = &v31[16 * v11];
            uint64_t v38 = *((void *)v37 - 8);
            uint64_t v39 = *((void *)v37 - 7);
            BOOL v43 = __OFSUB__(v39, v38);
            uint64_t v40 = v39 - v38;
            if (v43) {
              goto LABEL_116;
            }
            uint64_t v42 = *((void *)v37 - 6);
            uint64_t v41 = *((void *)v37 - 5);
            BOOL v43 = __OFSUB__(v41, v42);
            uint64_t v35 = v41 - v42;
            char v36 = v43;
            if (v43) {
              goto LABEL_117;
            }
            unint64_t v44 = v11 - 2;
            unint64_t v45 = &v31[16 * v11 - 32];
            uint64_t v47 = *(void *)v45;
            uint64_t v46 = *((void *)v45 + 1);
            BOOL v43 = __OFSUB__(v46, v47);
            uint64_t v48 = v46 - v47;
            if (v43) {
              goto LABEL_119;
            }
            BOOL v43 = __OFADD__(v35, v48);
            uint64_t v49 = v35 + v48;
            if (v43) {
              goto LABEL_122;
            }
            if (v49 >= v40)
            {
              long long v67 = &v31[16 * v32];
              uint64_t v69 = *(void *)v67;
              uint64_t v68 = *((void *)v67 + 1);
              BOOL v43 = __OFSUB__(v68, v69);
              uint64_t v70 = v68 - v69;
              if (v43) {
                goto LABEL_126;
              }
              BOOL v60 = v35 < v70;
              goto LABEL_87;
            }
          }
          else
          {
            if (v11 != 3)
            {
              uint64_t v61 = *((void *)v8 + 4);
              uint64_t v62 = *((void *)v8 + 5);
              BOOL v43 = __OFSUB__(v62, v61);
              uint64_t v54 = v62 - v61;
              char v55 = v43;
              goto LABEL_81;
            }
            uint64_t v34 = *((void *)v8 + 4);
            uint64_t v33 = *((void *)v8 + 5);
            BOOL v43 = __OFSUB__(v33, v34);
            uint64_t v35 = v33 - v34;
            char v36 = v43;
          }
          if (v36) {
            goto LABEL_118;
          }
          unint64_t v44 = v11 - 2;
          uint64_t v50 = &v31[16 * v11 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v53 = __OFSUB__(v51, v52);
          uint64_t v54 = v51 - v52;
          char v55 = v53;
          if (v53) {
            goto LABEL_121;
          }
          long long v56 = &v31[16 * v32];
          uint64_t v58 = *(void *)v56;
          uint64_t v57 = *((void *)v56 + 1);
          BOOL v43 = __OFSUB__(v57, v58);
          uint64_t v59 = v57 - v58;
          if (v43) {
            goto LABEL_124;
          }
          if (__OFADD__(v54, v59)) {
            goto LABEL_125;
          }
          if (v54 + v59 >= v35)
          {
            BOOL v60 = v35 < v59;
LABEL_87:
            if (v60) {
              unint64_t v32 = v44;
            }
            goto LABEL_89;
          }
LABEL_81:
          if (v55) {
            goto LABEL_120;
          }
          uint64_t v63 = &v31[16 * v32];
          uint64_t v65 = *(void *)v63;
          uint64_t v64 = *((void *)v63 + 1);
          BOOL v43 = __OFSUB__(v64, v65);
          uint64_t v66 = v64 - v65;
          if (v43) {
            goto LABEL_123;
          }
          if (v66 < v54) {
            goto LABEL_14;
          }
LABEL_89:
          unint64_t v71 = v32 - 1;
          if (v32 - 1 >= v11)
          {
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
            goto LABEL_135;
          }
          uint64_t v72 = v10;
          if (!v10) {
            goto LABEL_138;
          }
          uint64_t v73 = v8;
          uint64_t v74 = &v31[16 * v71];
          uint64_t v75 = v31;
          uint64_t v76 = *(void *)v74;
          uint64_t v77 = &v75[16 * v32];
          uint64_t v78 = *((void *)v77 + 1);
          uint64_t v79 = v72;
          sub_1A7483138((char *)(v72 + 16 * *(void *)v74), (char *)(v72 + 16 * *(void *)v77), v72 + 16 * v78, v92);
          if (v1) {
            goto LABEL_110;
          }
          if (v78 < v76) {
            goto LABEL_113;
          }
          if (v32 > *((void *)v73 + 2)) {
            goto LABEL_114;
          }
          *(void *)uint64_t v74 = v76;
          uint64_t v31 = v93;
          *(void *)&v93[16 * v71 + 8] = v78;
          unint64_t v80 = *((void *)v73 + 2);
          if (v32 >= v80) {
            goto LABEL_115;
          }
          int v8 = v73;
          unint64_t v11 = v80 - 1;
          memmove(v77, v77 + 16, 16 * (v80 - 1 - v32));
          *((void *)v73 + 2) = v80 - 1;
          uint64_t v10 = v79;
          if (v80 <= 2) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v11 = 1;
LABEL_14:
      uint64_t v3 = v91;
      if (v9 >= v91) {
        goto LABEL_99;
      }
      goto LABEL_15;
    }
    ++v9;
    uint64_t v3 = v91;
  }
  while (v91 != v9);
  uint64_t v9 = v91;
LABEL_21:
  if (v13 != -1) {
    goto LABEL_32;
  }
LABEL_24:
  if (v9 >= v12)
  {
    if (v12 < v9)
    {
      uint64_t v15 = 16 * v9;
      uint64_t v16 = 16 * v12;
      uint64_t v17 = v9;
      uint64_t v18 = v12;
      while (1)
      {
        if (v18 != --v17)
        {
          if (!v10) {
            goto LABEL_139;
          }
          uint64_t v19 = v10 + v15;
          uint64_t v20 = *(void *)(v10 + v16);
          uint64_t v21 = *(void *)(v10 + v16 + 8);
          *(_OWORD *)(v10 + v16) = *(_OWORD *)(v10 + v15 - 16);
          *(void *)(v19 - 16) = v20;
          *(void *)(v19 - 8) = v21;
        }
        ++v18;
        v15 -= 16;
        v16 += 16;
        if (v18 >= v17) {
          goto LABEL_32;
        }
      }
    }
    goto LABEL_32;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A7483040(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v12 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    sub_1A72DF534();
    uint64_t v6 = (void *)(v5 + 16 * v4);
LABEL_5:
    uint64_t v7 = v12;
    int v8 = v6;
    while (1)
    {
      uint64_t result = sub_1A75732E0();
      if (result != -1)
      {
LABEL_4:
        ++v4;
        v6 += 2;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      uint64_t v9 = *v8;
      uint64_t v10 = v8[1];
      *(_OWORD *)int v8 = *((_OWORD *)v8 - 1);
      *(v8 - 1) = v10;
      *(v8 - 2) = v9;
      v8 -= 2;
      if (v4 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A7483138(char *__src, char *a2, unint64_t a3, char *a4)
{
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v8 = a2 - __src;
  }
  uint64_t v9 = v8 >> 4;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 4;
  uint64_t v23 = __src;
  uint64_t v22 = a4;
  if (v9 >= v11 >> 4)
  {
    if (v10 >= -15)
    {
      if (a4 != a2 || &a2[16 * v12] <= a4) {
        memmove(a4, a2, 16 * v12);
      }
      uint64_t v15 = &a4[16 * v12];
      uint64_t v21 = v15;
      uint64_t v23 = v5;
      if (v6 < v5 && v10 >= 16)
      {
        sub_1A72DF534();
        uint64_t v16 = (char *)(a3 - 16);
        uint64_t v17 = v5;
        do
        {
          uint64_t v18 = v16 + 16;
          v17 -= 16;
          if (sub_1A75732E0() == -1)
          {
            if (v18 != v5 || v16 >= v5) {
              *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
            }
            uint64_t v23 = v17;
          }
          else
          {
            uint64_t v21 = v15 - 16;
            if (v18 < v15 || v16 >= v15 || v18 != v15) {
              *(_OWORD *)uint64_t v16 = *((_OWORD *)v15 - 1);
            }
            uint64_t v17 = v5;
            v15 -= 16;
          }
          if (v17 <= v6) {
            break;
          }
          v16 -= 16;
          uint64_t v5 = v17;
        }
        while (v15 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v7 >= -15)
  {
    uint64_t v13 = a4;
    if (a4 != __src || &__src[16 * v9] <= a4) {
      memmove(a4, __src, 16 * v9);
    }
    uint64_t v21 = &a4[16 * v9];
    if ((unint64_t)v5 < a3 && v7 >= 16)
    {
      sub_1A72DF534();
      do
      {
        if (sub_1A75732E0() == -1)
        {
          uint64_t v14 = v5 + 16;
          if (v6 < v5 || v6 >= v14 || v6 != v5) {
            *(_OWORD *)uint64_t v6 = *(_OWORD *)v5;
          }
        }
        else
        {
          if (v6 != v13) {
            *(_OWORD *)uint64_t v6 = *(_OWORD *)v13;
          }
          v13 += 16;
          uint64_t v22 = v13;
          uint64_t v14 = v5;
        }
        v6 += 16;
        if (v13 >= &a4[16 * v9]) {
          break;
        }
        uint64_t v5 = v14;
      }
      while ((unint64_t)v14 < a3);
      uint64_t v23 = v6;
    }
LABEL_43:
    sub_1A74F9810((void **)&v23, (const void **)&v22, &v21);
    return 1;
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A7483418(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x724F646568636163 && a2 == 0xED000065726F7453;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F7473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A7483528(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701670771 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74835FC(uint64_t result, char a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    char v6 = (void *)swift_bridgeObjectRetain();
    uint64_t v8 = v6[4];
    uint64_t v7 = v6[5];
    uint64_t v9 = v6[6];
    uint64_t v10 = v6[7];
    uint64_t v49 = v6;
    uint64_t v50 = a3;
    uint64_t v11 = *a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_1A72B2210(v8, v7);
    uint64_t v14 = *(void *)(v11 + 16);
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    char v17 = v12;
    if (*(void *)(v11 + 24) >= v16)
    {
      if ((a2 & 1) == 0)
      {
        sub_1A72BE600();
        uint64_t v20 = v50;
        uint64_t v21 = (void *)*v50;
        if (v17)
        {
LABEL_8:
          swift_bridgeObjectRelease();
          uint64_t v22 = (void *)(v21[7] + 16 * v13);
          swift_bridgeObjectRelease();
          uint64_t v20 = v50;
          void *v22 = v9;
          v22[1] = v10;
          uint64_t v23 = v3 - 1;
          if (v3 != 1)
          {
LABEL_15:
            for (i = v49 + 11; ; i += 4)
            {
              uint64_t v32 = *(i - 3);
              uint64_t v31 = *(i - 2);
              uint64_t v33 = *(i - 1);
              uint64_t v34 = *i;
              uint64_t v35 = *v20;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v37 = sub_1A72B2210(v32, v31);
              uint64_t v38 = *(void *)(v35 + 16);
              BOOL v39 = (v36 & 1) == 0;
              uint64_t v40 = v38 + v39;
              if (__OFADD__(v38, v39)) {
                break;
              }
              char v41 = v36;
              if (*(void *)(v35 + 24) < v40)
              {
                sub_1A72BA788(v40, 1);
                unint64_t v42 = sub_1A72B2210(v32, v31);
                if ((v41 & 1) != (v43 & 1)) {
                  goto LABEL_27;
                }
                unint64_t v37 = v42;
              }
              uint64_t v20 = v50;
              unint64_t v44 = (void *)*v50;
              if (v41)
              {
                swift_bridgeObjectRelease();
                uint64_t v30 = (void *)(v44[7] + 16 * v37);
                swift_bridgeObjectRelease();
                uint64_t v20 = v50;
                *uint64_t v30 = v33;
                v30[1] = v34;
              }
              else
              {
                v44[(v37 >> 6) + 8] |= 1 << v37;
                unint64_t v45 = (uint64_t *)(v44[6] + 16 * v37);
                *unint64_t v45 = v32;
                v45[1] = v31;
                uint64_t v46 = (void *)(v44[7] + 16 * v37);
                *uint64_t v46 = v33;
                v46[1] = v34;
                uint64_t v47 = v44[2];
                BOOL v27 = __OFADD__(v47, 1);
                uint64_t v48 = v47 + 1;
                if (v27) {
                  goto LABEL_26;
                }
                v44[2] = v48;
              }
              if (!--v23) {
                return swift_bridgeObjectRelease();
              }
            }
            goto LABEL_25;
          }
          return swift_bridgeObjectRelease();
        }
LABEL_11:
        v21[(v13 >> 6) + 8] |= 1 << v13;
        uint64_t v24 = (uint64_t *)(v21[6] + 16 * v13);
        *uint64_t v24 = v8;
        v24[1] = v7;
        uint64_t v25 = (void *)(v21[7] + 16 * v13);
        *uint64_t v25 = v9;
        v25[1] = v10;
        uint64_t v26 = v21[2];
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (v27)
        {
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        v21[2] = v28;
        uint64_t v23 = v3 - 1;
        if (v3 != 1) {
          goto LABEL_15;
        }
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1A72BA788(v16, a2 & 1);
      unint64_t v18 = sub_1A72B2210(v8, v7);
      if ((v17 & 1) != (v19 & 1))
      {
LABEL_27:
        uint64_t result = sub_1A7574010();
        __break(1u);
        return result;
      }
      unint64_t v13 = v18;
    }
    uint64_t v20 = v50;
    uint64_t v21 = (void *)*v50;
    if (v17) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1A74838B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564756C636E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6564756C637865 && a2 == 0xE700000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A7483A08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736C6562616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446F5470557369 && a2 == 0xEA00000000006574)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A7483B00(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000001A75A3E70)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1A7483B88()
{
  unint64_t result = qword_1EB701CA0;
  if (!qword_1EB701CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701CA0);
  }
  return result;
}

uint64_t sub_1A7483BDC()
{
  return swift_deallocObject();
}

void sub_1A7483C14(void (*a1)(id *), uint64_t a2)
{
  sub_1A7480D7C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1A7483C1C()
{
  return swift_deallocObject();
}

uint64_t sub_1A7483C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1A747FCB4(a2, a1, a3);
}

uint64_t sub_1A7483C50()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7483C88(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

void sub_1A7483CB8(uint64_t a1, void *a2)
{
  sub_1A7480FF0(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_1A7483CC0()
{
  return swift_deallocObject();
}

void sub_1A7483CF8(void *a1@<X8>)
{
}

uint64_t sub_1A7483D14(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1A748471C;
  return sub_1A747F89C(a1, v5, v4);
}

uint64_t sub_1A7483DC0(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1A72C8E18;
  return sub_1A747FA94(a1, v5, v4);
}

uint64_t sub_1A7483E6C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1A7483E8C, 0, 0);
}

uint64_t sub_1A7483E8C()
{
  uint64_t v22 = v0;
  type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation();
  id v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A730215C((uint64_t)v1, 1, v21);

  uint64_t v2 = v21[0];
  char v3 = (void *)v21[1];
  if ((unint64_t)v21[0] >> 62)
  {
    sub_1A72BEFEC(0, &qword_1EB700080);
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_1A7573850();
    swift_bridgeObjectRelease_n();

    uint64_t v2 = v4;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1A75738D0();
      uint64_t v5 = result;
      uint64_t v20 = v0;
      if (result) {
        goto LABEL_4;
      }
LABEL_17:
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      goto LABEL_18;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1A7573DE0();
    swift_bridgeObjectRelease();
    sub_1A72BEFEC(0, &qword_1EB700080);

    unint64_t v4 = v2;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v20 = v0;
  if (!v5) {
    goto LABEL_17;
  }
LABEL_4:
  if (v5 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  unint64_t v8 = v4 & 0xC000000000000001;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (v8) {
      id v10 = (id)MEMORY[0x1AD0CB800](v7, v2);
    }
    else {
      id v10 = *(id *)(v2 + 8 * v7 + 32);
    }
    uint64_t v11 = v10;
    id v12 = objc_msgSend(v10, sel_name);
    uint64_t v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v15 = v14;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1A72AC148(0, v9[2] + 1, 1, v9);
    }
    unint64_t v17 = v9[2];
    unint64_t v16 = v9[3];
    if (v17 >= v16 >> 1) {
      uint64_t v9 = sub_1A72AC148((void *)(v16 > 1), v17 + 1, 1, v9);
    }
    ++v7;
    void v9[2] = v17 + 1;
    unint64_t v18 = &v9[2 * v17];
    v18[4] = v13;
    v18[5] = v15;
  }
  while (v5 != v7);
LABEL_18:
  swift_bridgeObjectRelease_n();
  char v19 = *(uint64_t (**)(void *))(v20 + 8);
  return v19(v9);
}

uint64_t sub_1A748416C(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1A748418C, 0, 0);
}

uint64_t sub_1A748418C()
{
  uint64_t v1 = (void *)v0[3];
  if (v1)
  {
    uint64_t v2 = swift_task_alloc();
    v0[4] = v2;
    *(void *)(v2 + 16) = v1;
    id v3 = v1;
    unint64_t v4 = (void *)swift_task_alloc();
    v0[5] = v4;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    void *v4 = v0;
    v4[1] = sub_1A74843F0;
    return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000034, 0x80000001A75A3ED0, sub_1A74845E0, v2, v5);
  }
  else
  {
    if (qword_1E96F08A8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1A7571E90();
    __swift_project_value_buffer(v6, (uint64_t)qword_1E96F4118);
    uint64_t v7 = sub_1A7571E80();
    os_log_type_t v8 = sub_1A7572FD0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1A72A1000, v7, v8, "CSHashtagQuery is nil", v9, 2u);
      MEMORY[0x1AD0CD330](v9, -1, -1);
    }

    id v10 = self;
    uint64_t v11 = (void *)sub_1A75725E0();
    objc_msgSend(v10, sel_internalErrorWithDebugDescription_, v11);

    swift_willThrow();
    id v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_1A74843F0()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A7484574;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A748450C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A748450C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A7484574()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1A74845E0(uint64_t a1)
{
  return sub_1A74807E8(a1, *(void **)(v1 + 16));
}

uint64_t sub_1A74845E8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F43A8);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1A748467C(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F43A8);

  return sub_1A74809A0(a1, a2);
}

uint64_t sub_1A748475C()
{
  if (*v0) {
    return 0x6D656C626D65;
  }
  else {
    return 0x696A6F6D65;
  }
}

uint64_t sub_1A7484790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A748B008(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74847B8(uint64_t a1)
{
  unint64_t v2 = sub_1A7484C14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74847F4(uint64_t a1)
{
  unint64_t v2 = sub_1A7484C14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A7484834(uint64_t a1)
{
  unint64_t v2 = sub_1A7484C68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7484870(uint64_t a1)
{
  unint64_t v2 = sub_1A7484C68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74848AC(uint64_t a1)
{
  unint64_t v2 = sub_1A7484CBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74848E8(uint64_t a1)
{
  unint64_t v2 = sub_1A7484CBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSpotlightBadgeType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F43B8);
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F43C0);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x1F4188790](v6);
  os_log_type_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F43C8);
  uint64_t v9 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  uint64_t v22 = v1[1];
  uint64_t v23 = v12;
  char v13 = *((unsigned char *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7484C14();
  sub_1A75741B0();
  if (v13)
  {
    char v26 = 1;
    sub_1A7484C68();
    uint64_t v14 = v24;
    sub_1A7573AB0();
    uint64_t v15 = v21;
    sub_1A7573B10();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v15);
  }
  else
  {
    char v25 = 0;
    sub_1A7484CBC();
    uint64_t v14 = v24;
    sub_1A7573AB0();
    uint64_t v16 = v19;
    sub_1A7573B10();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v14);
}

unint64_t sub_1A7484C14()
{
  unint64_t result = qword_1E96F43D0;
  if (!qword_1E96F43D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F43D0);
  }
  return result;
}

unint64_t sub_1A7484C68()
{
  unint64_t result = qword_1E96F43D8;
  if (!qword_1E96F43D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F43D8);
  }
  return result;
}

unint64_t sub_1A7484CBC()
{
  unint64_t result = qword_1E96F43E0;
  if (!qword_1E96F43E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F43E0);
  }
  return result;
}

uint64_t REMSpotlightBadgeType.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v36 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F43E8);
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F43F0);
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  os_log_type_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F43F8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A7484C14();
  uint64_t v14 = v41;
  sub_1A7574190();
  if (v14) {
    goto LABEL_6;
  }
  uint64_t v35 = v6;
  uint64_t v15 = v39;
  uint64_t v41 = v10;
  uint64_t v16 = v12;
  uint64_t v17 = sub_1A7573A70();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v19 = sub_1A7573640();
    swift_allocError();
    uint64_t v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    *uint64_t v21 = &type metadata for REMSpotlightBadgeType;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4FBBA70], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v9);
LABEL_6:
    uint64_t v22 = (uint64_t)v40;
    return __swift_destroy_boxed_opaque_existential_1(v22);
  }
  uint64_t v34 = v17;
  char v18 = *(unsigned char *)(v17 + 32);
  if (v18)
  {
    char v43 = 1;
    sub_1A7484C68();
    sub_1A7573990();
    uint64_t v26 = sub_1A7573A00();
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v9);
  }
  else
  {
    char v42 = 0;
    sub_1A7484CBC();
    uint64_t v24 = v8;
    char v25 = v16;
    sub_1A7573990();
    uint64_t v29 = v35;
    uint64_t v30 = sub_1A7573A00();
    uint64_t v28 = v31;
    uint64_t v32 = v24;
    uint64_t v26 = v30;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v9);
  }
  uint64_t v22 = (uint64_t)v40;
  uint64_t v33 = v36;
  uint64_t *v36 = v26;
  v33[1] = v28;
  *((unsigned char *)v33 + 16) = v18;
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t sub_1A74851A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMSpotlightBadgeType.init(from:)(a1, a2);
}

uint64_t sub_1A74851C0(void *a1)
{
  return REMSpotlightBadgeType.encode(to:)(a1);
}

ReminderKitInternal::REMSpotlightAlarmProximity_optional __swiftcall REMSpotlightAlarmProximity.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (ReminderKitInternal::REMSpotlightAlarmProximity_optional)rawValue;
}

uint64_t REMSpotlightAlarmProximity.rawValue.getter()
{
  return *v0;
}

ReminderKitInternal::REMSpotlightAlarmProximity_optional sub_1A74851F4(Swift::Int *a1)
{
  return REMSpotlightAlarmProximity.init(rawValue:)(*a1);
}

uint64_t sub_1A74851FC()
{
  return sub_1A75729E0();
}

uint64_t sub_1A748525C()
{
  return sub_1A7572990();
}

uint64_t sub_1A74852AC()
{
  return sub_1A75729E0();
}

uint64_t sub_1A748530C()
{
  return sub_1A7572990();
}

uint64_t sub_1A748535C()
{
  if (*v0) {
    return 0x656C6369686576;
  }
  else {
    return 0x6E6F697461636F6CLL;
  }
}

uint64_t sub_1A7485398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A748B0EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74853C0(uint64_t a1)
{
  unint64_t v2 = sub_1A7485978();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74853FC(uint64_t a1)
{
  unint64_t v2 = sub_1A7485978();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A7485438()
{
  if (*v0) {
    return 0x74696D69786F7270;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1A7485470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A748B1E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A7485498(uint64_t a1)
{
  unint64_t v2 = sub_1A7485A74();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74854D4(uint64_t a1)
{
  unint64_t v2 = sub_1A7485A74();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A7485510()
{
  return 0x746E657665;
}

uint64_t sub_1A7485524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746E657665 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A74855B4(uint64_t a1)
{
  unint64_t v2 = sub_1A74859CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74855F0(uint64_t a1)
{
  unint64_t v2 = sub_1A74859CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSpotlightLocationType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4400);
  uint64_t v18 = *(void *)(v3 - 8);
  uint64_t v19 = v3;
  MEMORY[0x1F4188790](v3);
  char v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4408);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  os_log_type_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4410);
  uint64_t v9 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *v1;
  uint64_t v20 = v1[1];
  int v12 = *((char *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7485978();
  sub_1A75741B0();
  if (v12 < 0)
  {
    char v31 = 1;
    sub_1A74859CC();
    uint64_t v13 = v25;
    sub_1A7573AB0();
    char v30 = v23;
    sub_1A7485A20();
    uint64_t v16 = v19;
    sub_1A7573B60();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v16);
  }
  else
  {
    char v29 = 0;
    sub_1A7485A74();
    uint64_t v13 = v25;
    sub_1A7573AB0();
    char v28 = 0;
    uint64_t v14 = v22;
    uint64_t v15 = v24;
    sub_1A7573B10();
    if (!v15)
    {
      char v27 = v12;
      char v26 = 1;
      sub_1A7485AC8();
      sub_1A7573B60();
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v13);
}

unint64_t sub_1A7485978()
{
  unint64_t result = qword_1E96F4418;
  if (!qword_1E96F4418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4418);
  }
  return result;
}

unint64_t sub_1A74859CC()
{
  unint64_t result = qword_1E96F4420;
  if (!qword_1E96F4420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4420);
  }
  return result;
}

unint64_t sub_1A7485A20()
{
  unint64_t result = qword_1E96F4428;
  if (!qword_1E96F4428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4428);
  }
  return result;
}

unint64_t sub_1A7485A74()
{
  unint64_t result = qword_1E96F4430;
  if (!qword_1E96F4430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4430);
  }
  return result;
}

unint64_t sub_1A7485AC8()
{
  unint64_t result = qword_1E96F4438;
  if (!qword_1E96F4438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4438);
  }
  return result;
}

uint64_t REMSpotlightLocationType.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v29 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4440);
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x1F4188790](v3);
  char v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4448);
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  os_log_type_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4450);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  int v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A7485978();
  uint64_t v14 = v34;
  sub_1A7574190();
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v15 = v32;
  uint64_t v34 = v10;
  uint64_t v16 = sub_1A7573A70();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v20 = sub_1A7573640();
    swift_allocError();
    uint64_t v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    void *v22 = &type metadata for REMSpotlightLocationType;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v9);
LABEL_7:
    uint64_t v23 = (uint64_t)v33;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  if (*(unsigned char *)(v16 + 32))
  {
    char v40 = 1;
    sub_1A74859CC();
    sub_1A7573990();
    sub_1A7486074();
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v9);
    uint64_t v17 = 0;
    uint64_t v18 = v39;
    char v19 = 0x80;
  }
  else
  {
    char v38 = 0;
    sub_1A7485A74();
    sub_1A7573990();
    char v37 = 0;
    uint64_t v25 = sub_1A7573A00();
    uint64_t v17 = v26;
    char v35 = 1;
    sub_1A74860C8();
    sub_1A7573A50();
    uint64_t v27 = v34;
    uint64_t v32 = v25;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
    uint64_t v18 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v9);
    char v19 = v36;
  }
  uint64_t v23 = (uint64_t)v33;
  char v28 = v29;
  *char v29 = v18;
  v28[1] = v17;
  *((unsigned char *)v28 + 16) = v19;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

unint64_t sub_1A7486074()
{
  unint64_t result = qword_1E96F4458;
  if (!qword_1E96F4458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4458);
  }
  return result;
}

unint64_t sub_1A74860C8()
{
  unint64_t result = qword_1E96F4460;
  if (!qword_1E96F4460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4460);
  }
  return result;
}

uint64_t sub_1A748611C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMSpotlightLocationType.init(from:)(a1, a2);
}

uint64_t sub_1A7486134(void *a1)
{
  return REMSpotlightLocationType.encode(to:)(a1);
}

void *REMSpotlightColor.remColor.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t REMSpotlightColor.__allocating_init(remColor:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t REMSpotlightColor.init(remColor:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t REMSpotlightColor.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  REMSpotlightColor.init(from:)(a1);
  return v2;
}

uint64_t REMSpotlightColor.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4468);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  os_log_type_t v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74864AC();
  sub_1A7574190();
  if (v2)
  {
    type metadata accessor for REMSpotlightColor();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = (objc_class *)type metadata accessor for REMColor_Codable();
    sub_1A7488174(&qword_1EB7035C8, 255, (void (*)(uint64_t))type metadata accessor for REMColor_Codable);
    sub_1A75739F0();
    if (v18)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      id v11 = v18;
    }
    else
    {
      sub_1A72B21AC((uint64_t)a1, (uint64_t)v17);
      double v12 = sub_1A7487EC4(v17);
      id v11 = objc_msgSend(objc_allocWithZone(v9), sel_initWithRed_green_blue_alpha_colorSpace_daSymbolicColorName_daHexString_ckSymbolicColorName_, 2, 0, 0, 0, v12, v13, v14, v15);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    *(void *)(v3 + 16) = v11;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

unint64_t sub_1A74864AC()
{
  unint64_t result = qword_1E96F4470;
  if (!qword_1E96F4470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4470);
  }
  return result;
}

uint64_t type metadata accessor for REMSpotlightColor()
{
  return self;
}

uint64_t sub_1A7486524(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4478);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74864AC();
  sub_1A75741B0();
  v9[1] = *(void *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703E00);
  sub_1A74880CC();
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A7486678()
{
  return 0x726F6C6F436D6572;
}

uint64_t sub_1A7486690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x726F6C6F436D6572 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A7486728(uint64_t a1)
{
  unint64_t v2 = sub_1A74864AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7486764(uint64_t a1)
{
  unint64_t v2 = sub_1A74864AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSpotlightColor.deinit()
{
  return v0;
}

uint64_t REMSpotlightColor.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_1A74867F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for REMSpotlightColor();
  uint64_t v5 = swift_allocObject();
  uint64_t result = REMSpotlightColor.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1A7486850(void *a1)
{
  return sub_1A7486524(a1);
}

uint64_t sub_1A7486874(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4648);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A748B980();
  sub_1A75741B0();
  char v12 = 0;
  sub_1A7573B30();
  if (!v1)
  {
    char v11 = 1;
    sub_1A7573B30();
    char v10 = 2;
    sub_1A7573B30();
    char v9 = 3;
    sub_1A7573B30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A7486A3C()
{
  uint64_t result = 6579570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E65657267;
      break;
    case 2:
      uint64_t result = 1702194274;
      break;
    case 3:
      uint64_t result = 0x6168706C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A7486AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A748B2D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A7486ADC(uint64_t a1)
{
  unint64_t v2 = sub_1A748B980();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7486B18(uint64_t a1)
{
  unint64_t v2 = sub_1A748B980();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1A7486B54(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_1A7487EC4(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
}

uint64_t sub_1A7486B84(void *a1)
{
  return sub_1A7486874(a1);
}

uint64_t REMSpotlightReminderViewProxy.priority.getter()
{
  return *(void *)v0;
}

uint64_t REMSpotlightReminderViewProxy.flagged.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t REMSpotlightReminderViewProxy.hasAttachment.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t REMSpotlightReminderViewProxy.notes.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMSpotlightReminderViewProxy.hashtags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSpotlightReminderViewProxy.locationType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1A74881BC(v2, v3, v4);
}

uint64_t REMSpotlightReminderViewProxy.reminderID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for REMSpotlightReminderViewProxy(0) + 40);

  return sub_1A72EFD80(v3, a1);
}

uint64_t REMSpotlightReminderViewProxy.init(priority:flagged:hasAttachment:notes:hashtags:locationType:reminderID:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v11 = *(unsigned char *)(a7 + 16);
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 9) = a3;
  *(void *)(a9 + 16) = a4;
  *(void *)(a9 + 24) = a5;
  *(void *)(a9 + 32) = a6;
  *(_OWORD *)(a9 + 40) = *(_OWORD *)a7;
  *(unsigned char *)(a9 + 56) = v11;
  uint64_t v12 = a9 + *(int *)(type metadata accessor for REMSpotlightReminderViewProxy(0) + 40);

  return sub_1A7488200(a8, v12);
}

uint64_t sub_1A7486CB8()
{
  uint64_t result = 0x797469726F697270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64656767616C66;
      break;
    case 2:
      uint64_t result = 0x6361747441736168;
      break;
    case 3:
      uint64_t result = 0x7365746F6ELL;
      break;
    case 4:
      uint64_t result = 0x7367617468736168;
      break;
    case 5:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 6:
      uint64_t result = 0x7265646E696D6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A7486DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A748B45C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A7486DD4(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1A7486DE0(uint64_t a1)
{
  unint64_t v2 = sub_1A7488268();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7486E1C(uint64_t a1)
{
  unint64_t v2 = sub_1A7488268();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSpotlightReminderViewProxy.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4488);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7488268();
  sub_1A75741B0();
  LOBYTE(v11) = 0;
  sub_1A7573B50();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1A7573B20();
    LOBYTE(v11) = 2;
    sub_1A7573B20();
    LOBYTE(v11) = 3;
    sub_1A7573AC0();
    *(void *)&long long v11 = *(void *)(v3 + 32);
    char v13 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A72A817C(&qword_1EB7003D8);
    sub_1A7573B00();
    char v9 = *(unsigned char *)(v3 + 56);
    long long v11 = *(_OWORD *)(v3 + 40);
    char v12 = v9;
    char v13 = 5;
    sub_1A74882BC();
    sub_1A7573B00();
    type metadata accessor for REMSpotlightReminderViewProxy(0);
    LOBYTE(v11) = 6;
    sub_1A7571BC0();
    sub_1A7488174(&qword_1EB7057D0, 255, MEMORY[0x1E4F27990]);
    sub_1A7573B00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMSpotlightReminderViewProxy.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F44A0);
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  char v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMSpotlightReminderViewProxy(0);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A7488268();
  uint64_t v25 = v9;
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  uint64_t v14 = (uint64_t)v12;
  uint64_t v15 = (uint64_t)v6;
  uint64_t v17 = v23;
  uint64_t v16 = v24;
  LOBYTE(v27) = 0;
  *(void *)uint64_t v14 = sub_1A7573A40();
  LOBYTE(v27) = 1;
  *(unsigned char *)(v14 + 8) = sub_1A7573A10() & 1;
  LOBYTE(v27) = 2;
  *(unsigned char *)(v14 + 9) = sub_1A7573A10() & 1;
  LOBYTE(v27) = 3;
  *(void *)(v14 + 16) = sub_1A75739B0();
  *(void *)(v14 + 24) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  char v29 = 4;
  sub_1A72A817C(&qword_1EB700070);
  sub_1A75739F0();
  v22[0] = v27;
  *(void *)(v14 + 32) = v27;
  char v29 = 5;
  sub_1A7488334();
  v22[1] = 0;
  sub_1A75739F0();
  char v19 = v28;
  *(_OWORD *)(v14 + 40) = v27;
  *(unsigned char *)(v14 + 56) = v19;
  sub_1A7571BC0();
  LOBYTE(v27) = 6;
  sub_1A7488174(&qword_1EB705A30, 255, MEMORY[0x1E4F27990]);
  uint64_t v20 = v25;
  sub_1A75739F0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v16);
  sub_1A7488200(v15, v14 + *(int *)(v10 + 40));
  sub_1A74884A4(v14, v17, type metadata accessor for REMSpotlightReminderViewProxy);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_1A748850C(v14, type metadata accessor for REMSpotlightReminderViewProxy);
}

uint64_t sub_1A7487610()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1A7487618()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t sub_1A7487620()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A7487650()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A7487658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1A74881BC(v2, v3, v4);
}

uint64_t sub_1A748766C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A72EFD80(v2 + *(int *)(a1 + 40), a2);
}

uint64_t sub_1A748767C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSpotlightReminderViewProxy.init(from:)(a1, a2);
}

uint64_t sub_1A7487694(void *a1)
{
  return REMSpotlightReminderViewProxy.encode(to:)(a1);
}

uint64_t REMSpotlightListViewProxy.badgeType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return sub_1A7362B58();
}

uint64_t REMSpotlightListViewProxy.color.getter()
{
  return swift_retain();
}

uint64_t REMSpotlightListViewProxy.listID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for REMSpotlightListViewProxy(0) + 24);

  return sub_1A72EFD80(v3, a1);
}

uint64_t REMSpotlightListViewProxy.init(badgeType:color:listID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(unsigned char *)(a4 + 16) = v6;
  *(void *)(a4 + 24) = a2;
  uint64_t v7 = a4 + *(int *)(type metadata accessor for REMSpotlightListViewProxy(0) + 24);

  return sub_1A7488200(a3, v7);
}

uint64_t sub_1A7487768()
{
  uint64_t v1 = 0x726F6C6F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x44497473696CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7079546567646162;
  }
}

uint64_t sub_1A74877C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A748B784(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74877E8(uint64_t a1)
{
  unint64_t v2 = sub_1A74883A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7487824(uint64_t a1)
{
  unint64_t v2 = sub_1A74883A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSpotlightListViewProxy.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F44B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74883A8();
  sub_1A75741B0();
  char v9 = *((unsigned char *)v3 + 16);
  long long v14 = *v3;
  char v15 = v9;
  char v13 = 0;
  sub_1A74883FC();
  sub_1A7573B60();
  if (!v2)
  {
    *(void *)&long long v14 = *((void *)v3 + 3);
    char v13 = 1;
    type metadata accessor for REMSpotlightColor();
    sub_1A7488174(&qword_1E96F44C8, v10, (void (*)(uint64_t))type metadata accessor for REMSpotlightColor);
    sub_1A7573B60();
    type metadata accessor for REMSpotlightListViewProxy(0);
    LOBYTE(v14) = 2;
    sub_1A7571BC0();
    sub_1A7488174(&qword_1EB7057D0, 255, MEMORY[0x1E4F27990]);
    sub_1A7573B00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMSpotlightListViewProxy.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F44D0);
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMSpotlightListViewProxy(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74883A8();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v18 = v10;
  uint64_t v13 = v20;
  char v24 = 0;
  sub_1A7488450();
  uint64_t v14 = v21;
  sub_1A7573A50();
  char v15 = v23;
  *(_OWORD *)uint64_t v12 = v22;
  unsigned char v12[16] = v15;
  type metadata accessor for REMSpotlightColor();
  char v24 = 1;
  sub_1A7488174(&qword_1E96F44E0, v16, (void (*)(uint64_t))type metadata accessor for REMSpotlightColor);
  sub_1A7573A50();
  *((void *)v12 + 3) = v22;
  sub_1A7571BC0();
  LOBYTE(v22) = 2;
  sub_1A7488174(&qword_1EB705A30, 255, MEMORY[0x1E4F27990]);
  sub_1A75739F0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  sub_1A7488200((uint64_t)v6, (uint64_t)&v12[*(int *)(v18 + 24)]);
  sub_1A74884A4((uint64_t)v12, v19, type metadata accessor for REMSpotlightListViewProxy);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A748850C((uint64_t)v12, type metadata accessor for REMSpotlightListViewProxy);
}

uint64_t sub_1A7487E68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return sub_1A7362B58();
}

uint64_t sub_1A7487E7C()
{
  return swift_retain();
}

uint64_t sub_1A7487E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A72EFD80(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_1A7487E94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSpotlightListViewProxy.init(from:)(a1, a2);
}

uint64_t sub_1A7487EAC(void *a1)
{
  return REMSpotlightListViewProxy.encode(to:)(a1);
}

double sub_1A7487EC4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4620);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A748B980();
  sub_1A7574190();
  v9[15] = 0;
  sub_1A7573A20();
  double v7 = v6;
  v9[14] = 1;
  sub_1A7573A20();
  v9[13] = 2;
  sub_1A7573A20();
  v9[12] = 3;
  sub_1A7573A20();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_1A74880CC()
{
  unint64_t result = qword_1E96F4480;
  if (!qword_1E96F4480)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB703E00);
    sub_1A7488174(&qword_1EB703DF8, 255, (void (*)(uint64_t))type metadata accessor for REMColor_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4480);
  }
  return result;
}

uint64_t sub_1A7488174(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A74881BC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFBu) {
    return sub_1A74881D0(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1A74881D0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 0x80) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t type metadata accessor for REMSpotlightReminderViewProxy(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F4518);
}

uint64_t sub_1A7488200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A7488268()
{
  unint64_t result = qword_1E96F4490;
  if (!qword_1E96F4490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4490);
  }
  return result;
}

unint64_t sub_1A74882BC()
{
  unint64_t result = qword_1E96F4498;
  if (!qword_1E96F4498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4498);
  }
  return result;
}

uint64_t sub_1A7488310(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFBu) {
    return sub_1A7488324(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1A7488324(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 0x80) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A7488334()
{
  unint64_t result = qword_1E96F44A8;
  if (!qword_1E96F44A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F44A8);
  }
  return result;
}

uint64_t type metadata accessor for REMSpotlightListViewProxy(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F4528);
}

unint64_t sub_1A74883A8()
{
  unint64_t result = qword_1E96F44B8;
  if (!qword_1E96F44B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F44B8);
  }
  return result;
}

unint64_t sub_1A74883FC()
{
  unint64_t result = qword_1E96F44C0;
  if (!qword_1E96F44C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F44C0);
  }
  return result;
}

unint64_t sub_1A7488450()
{
  unint64_t result = qword_1E96F44D8;
  if (!qword_1E96F44D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F44D8);
  }
  return result;
}

uint64_t sub_1A74884A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A748850C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A7488570()
{
  unint64_t result = qword_1E96F44E8;
  if (!qword_1E96F44E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F44E8);
  }
  return result;
}

unint64_t sub_1A74885C8()
{
  unint64_t result = qword_1E96F44F0;
  if (!qword_1E96F44F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F44F0);
  }
  return result;
}

uint64_t sub_1A748861C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A7488174(&qword_1E96F44F8, 255, (void (*)(uint64_t))type metadata accessor for REMSpotlightReminderViewProxy);
  uint64_t result = sub_1A7488174(&qword_1E96F4500, 255, (void (*)(uint64_t))type metadata accessor for REMSpotlightReminderViewProxy);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A74886A8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A7488174(&qword_1E96F4508, 255, (void (*)(uint64_t))type metadata accessor for REMSpotlightListViewProxy);
  uint64_t result = sub_1A7488174(&qword_1E96F4510, 255, (void (*)(uint64_t))type metadata accessor for REMSpotlightListViewProxy);
  *(void *)(a1 + 16) = result;
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightBadgeType()
{
  return &type metadata for REMSpotlightBadgeType;
}

ValueMetadata *type metadata accessor for REMSpotlightAlarmProximity()
{
  return &type metadata for REMSpotlightAlarmProximity;
}

ValueMetadata *type metadata accessor for REMSpotlightAlarmVehicleTriggerEvent()
{
  return &type metadata for REMSpotlightAlarmVehicleTriggerEvent;
}

uint64_t destroy for REMSpotlightLocationType(uint64_t a1)
{
  return sub_1A7488324(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s19ReminderKitInternal24REMSpotlightLocationTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A74881D0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMSpotlightLocationType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A74881D0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A7488324(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMSpotlightLocationType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A7488324(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSpotlightLocationType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3F && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 63);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x3E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x3F;
  if (v3 >= 0x3E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for REMSpotlightLocationType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3E)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 63;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3F) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3F) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1A7488910(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_1A748891C(uint64_t result)
{
  *(unsigned char *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_1A748892C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 3 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightLocationType()
{
  return &type metadata for REMSpotlightLocationType;
}

uint64_t method lookup function for REMSpotlightColor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMSpotlightColor);
}

uint64_t dispatch thunk of REMSpotlightColor.__allocating_init(remColor:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of REMSpotlightColor.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of REMSpotlightColor.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.flagged.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.hasAttachment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.notes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.hashtags.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.locationType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.reminderID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t initializeBufferWithCopyOfBuffer for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    uint64_t v7 = a2[3];
    *(void *)(v4 + 16) = a2[2];
    *(void *)(v4 + 24) = v7;
    *(void *)(v4 + 32) = a2[4];
    unsigned int v8 = *((unsigned __int8 *)a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8 <= 0xFB)
    {
      uint64_t v10 = a2[5];
      uint64_t v11 = a2[6];
      sub_1A74881D0(v10, v11, v8);
      *(void *)(v4 + 40) = v10;
      *(void *)(v4 + 48) = v11;
      *(unsigned char *)(v4 + 56) = v8;
    }
    else
    {
      *(_OWORD *)(v4 + 40) = *(_OWORD *)(a2 + 5);
      *(unsigned char *)(v4 + 56) = *((unsigned char *)a2 + 56);
    }
    uint64_t v12 = *(int *)(a3 + 40);
    uint64_t v13 = (void *)(v4 + v12);
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1A7571BC0();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t destroy for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 <= 0xFB) {
    sub_1A7488324(*(void *)(a1 + 40), *(void *)(a1 + 48), v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 40);
  uint64_t v6 = sub_1A7571BC0();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    unsigned int v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t initializeWithCopy for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 <= 0xFB)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    sub_1A74881D0(v8, v9, v7);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  }
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_1A7571BC0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t assignWithCopy for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 40);
  unsigned int v7 = (_OWORD *)(a2 + 40);
  unsigned int v8 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFBu)
  {
    if (v8 <= 0xFB)
    {
      uint64_t v13 = *(void *)(a2 + 40);
      uint64_t v14 = *(void *)(a2 + 48);
      sub_1A74881D0(v13, v14, *(unsigned char *)(a2 + 56));
      uint64_t v15 = *(void *)(a1 + 40);
      uint64_t v16 = *(void *)(a1 + 48);
      *(void *)(a1 + 40) = v13;
      *(void *)(a1 + 48) = v14;
      char v17 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v8;
      sub_1A7488324(v15, v16, v17);
    }
    else
    {
      sub_1A7489164(a1 + 40);
      char v10 = *(unsigned char *)(a2 + 56);
      _OWORD *v6 = *v7;
      *(unsigned char *)(a1 + 56) = v10;
    }
  }
  else if (v8 <= 0xFB)
  {
    uint64_t v11 = *(void *)(a2 + 40);
    uint64_t v12 = *(void *)(a2 + 48);
    sub_1A74881D0(v11, v12, *(unsigned char *)(a2 + 56));
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v12;
    *(unsigned char *)(a1 + 56) = v8;
  }
  else
  {
    long long v9 = *v7;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    _OWORD *v6 = v9;
  }
  uint64_t v18 = *(int *)(a3 + 40);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = sub_1A7571BC0();
  uint64_t v22 = *(void *)(v21 - 8);
  char v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_13;
  }
  if (v25)
  {
LABEL_13:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t sub_1A7489164(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 40);
  uint64_t v5 = (const void *)(a2 + v4);
  uint64_t v6 = (void *)(a1 + v4);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = sub_1A7571BC0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v6, v5, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v6, v5, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v7 = (_OWORD *)(a2 + 40);
  unsigned int v8 = *(unsigned __int8 *)(a1 + 56);
  if (v8 > 0xFB) {
    goto LABEL_4;
  }
  unsigned int v9 = *(unsigned __int8 *)(a2 + 56);
  if (v9 > 0xFB)
  {
    sub_1A7489164(a1 + 40);
LABEL_4:
    *(_OWORD *)(a1 + 40) = *v7;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *v7;
  *(unsigned char *)(a1 + 56) = v9;
  sub_1A7488324(v10, v11, v8);
LABEL_6:
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1A7571BC0();
  uint64_t v16 = *(void *)(v15 - 8);
  char v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_11;
  }
  if (v19)
  {
LABEL_11:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A74894FC);
}

uint64_t sub_1A74894FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 40);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A74895D0);
}

uint64_t sub_1A74895D0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    unsigned int v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A748967C()
{
  sub_1A7345B88();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t dispatch thunk of REMSpotlightListViewProtocol.badgeType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of REMSpotlightListViewProtocol.color.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of REMSpotlightListViewProtocol.listID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t initializeBufferWithCopyOfBuffer for REMSpotlightListViewProxy(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    char v9 = *((unsigned char *)a2 + 16);
    sub_1A7362B58();
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = a2[3];
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1A7571BC0();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
    swift_retain();
    if (v15(v12, 1, v13))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t destroy for REMSpotlightListViewProxy(uint64_t a1, uint64_t a2)
{
  sub_1A7362B70();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1A7571BC0();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for REMSpotlightListViewProxy(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_1A7362B58();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = a2[3];
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1A7571BC0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_retain();
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t assignWithCopy for REMSpotlightListViewProxy(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_1A7362B58();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_1A7362B70();
  *(void *)(a1 + 24) = a2[3];
  swift_retain();
  swift_release();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1A7571BC0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v7) = v14(v10, 1, v12);
  int v15 = v14(v11, 1, v12);
  if (!v7)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for REMSpotlightListViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1A7571BC0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for REMSpotlightListViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_1A7362B70();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1A7571BC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSpotlightListViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A7489FE0);
}

uint64_t sub_1A7489FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for REMSpotlightListViewProxy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A748A0A8);
}

uint64_t sub_1A748A0A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A748A154()
{
  sub_1A7345B88();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *_s19ReminderKitInternal26REMSpotlightAlarmProximityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A748A2C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightListViewProxy.CodingKeys()
{
  return &type metadata for REMSpotlightListViewProxy.CodingKeys;
}

uint64_t getEnumTagSinglePayload for REMSpotlightReminderViewProxy.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for REMSpotlightReminderViewProxy.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A748A458);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightReminderViewProxy.CodingKeys()
{
  return &type metadata for REMSpotlightReminderViewProxy.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSpotlightColor.CodingKeys()
{
  return &type metadata for REMSpotlightColor.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSpotlightLocationType.CodingKeys()
{
  return &type metadata for REMSpotlightLocationType.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSpotlightLocationType.LocationCodingKeys()
{
  return &type metadata for REMSpotlightLocationType.LocationCodingKeys;
}

ValueMetadata *type metadata accessor for REMSpotlightLocationType.VehicleCodingKeys()
{
  return &type metadata for REMSpotlightLocationType.VehicleCodingKeys;
}

unsigned char *_s19ReminderKitInternal24REMSpotlightLocationTypeO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A748A5A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightBadgeType.CodingKeys()
{
  return &type metadata for REMSpotlightBadgeType.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSpotlightBadgeType.EmojiCodingKeys()
{
  return &type metadata for REMSpotlightBadgeType.EmojiCodingKeys;
}

unsigned char *_s19ReminderKitInternal17REMSpotlightColorC10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A748A688);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightBadgeType.EmblemCodingKeys()
{
  return &type metadata for REMSpotlightBadgeType.EmblemCodingKeys;
}

unint64_t sub_1A748A6C4()
{
  unint64_t result = qword_1E96F4538;
  if (!qword_1E96F4538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4538);
  }
  return result;
}

unint64_t sub_1A748A71C()
{
  unint64_t result = qword_1E96F4540;
  if (!qword_1E96F4540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4540);
  }
  return result;
}

unint64_t sub_1A748A774()
{
  unint64_t result = qword_1E96F4548;
  if (!qword_1E96F4548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4548);
  }
  return result;
}

unint64_t sub_1A748A7CC()
{
  unint64_t result = qword_1E96F4550;
  if (!qword_1E96F4550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4550);
  }
  return result;
}

unint64_t sub_1A748A824()
{
  unint64_t result = qword_1E96F4558;
  if (!qword_1E96F4558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4558);
  }
  return result;
}

unint64_t sub_1A748A87C()
{
  unint64_t result = qword_1E96F4560;
  if (!qword_1E96F4560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4560);
  }
  return result;
}

unint64_t sub_1A748A8D4()
{
  unint64_t result = qword_1E96F4568;
  if (!qword_1E96F4568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4568);
  }
  return result;
}

unint64_t sub_1A748A92C()
{
  unint64_t result = qword_1E96F4570;
  if (!qword_1E96F4570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4570);
  }
  return result;
}

unint64_t sub_1A748A984()
{
  unint64_t result = qword_1E96F4578;
  if (!qword_1E96F4578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4578);
  }
  return result;
}

unint64_t sub_1A748A9DC()
{
  unint64_t result = qword_1E96F4580;
  if (!qword_1E96F4580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4580);
  }
  return result;
}

unint64_t sub_1A748AA34()
{
  unint64_t result = qword_1E96F4588;
  if (!qword_1E96F4588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4588);
  }
  return result;
}

unint64_t sub_1A748AA8C()
{
  unint64_t result = qword_1E96F4590;
  if (!qword_1E96F4590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4590);
  }
  return result;
}

unint64_t sub_1A748AAE4()
{
  unint64_t result = qword_1E96F4598;
  if (!qword_1E96F4598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4598);
  }
  return result;
}

unint64_t sub_1A748AB3C()
{
  unint64_t result = qword_1E96F45A0;
  if (!qword_1E96F45A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F45A0);
  }
  return result;
}

unint64_t sub_1A748AB94()
{
  unint64_t result = qword_1E96F45A8;
  if (!qword_1E96F45A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F45A8);
  }
  return result;
}

unint64_t sub_1A748ABEC()
{
  unint64_t result = qword_1E96F45B0;
  if (!qword_1E96F45B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F45B0);
  }
  return result;
}

unint64_t sub_1A748AC44()
{
  unint64_t result = qword_1E96F45B8;
  if (!qword_1E96F45B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F45B8);
  }
  return result;
}

unint64_t sub_1A748AC9C()
{
  unint64_t result = qword_1E96F45C0;
  if (!qword_1E96F45C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F45C0);
  }
  return result;
}

unint64_t sub_1A748ACF4()
{
  unint64_t result = qword_1E96F45C8;
  if (!qword_1E96F45C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F45C8);
  }
  return result;
}

unint64_t sub_1A748AD4C()
{
  unint64_t result = qword_1E96F45D0;
  if (!qword_1E96F45D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F45D0);
  }
  return result;
}

unint64_t sub_1A748ADA4()
{
  unint64_t result = qword_1E96F45D8;
  if (!qword_1E96F45D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F45D8);
  }
  return result;
}

unint64_t sub_1A748ADFC()
{
  unint64_t result = qword_1E96F45E0;
  if (!qword_1E96F45E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F45E0);
  }
  return result;
}

unint64_t sub_1A748AE54()
{
  unint64_t result = qword_1E96F45E8;
  if (!qword_1E96F45E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F45E8);
  }
  return result;
}

unint64_t sub_1A748AEAC()
{
  unint64_t result = qword_1E96F45F0;
  if (!qword_1E96F45F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F45F0);
  }
  return result;
}

unint64_t sub_1A748AF04()
{
  unint64_t result = qword_1E96F45F8;
  if (!qword_1E96F45F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F45F8);
  }
  return result;
}

unint64_t sub_1A748AF5C()
{
  unint64_t result = qword_1E96F4600;
  if (!qword_1E96F4600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4600);
  }
  return result;
}

unint64_t sub_1A748AFB4()
{
  unint64_t result = qword_1E96F4608;
  if (!qword_1E96F4608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4608);
  }
  return result;
}

uint64_t sub_1A748B008(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696A6F6D65 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D656C626D65 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A748B0EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C6369686576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A748B1E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74696D69786F7270 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A748B2D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A748B45C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x797469726F697270 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656767616C66 && a2 == 0xE700000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6361747441736168 && a2 == 0xED0000746E656D68 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7367617468736168 && a2 == 0xE800000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000065707954 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1A748B784(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7079546567646162 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44497473696CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1A748B8D8()
{
  unint64_t result = qword_1E96F4610;
  if (!qword_1E96F4610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4610);
  }
  return result;
}

unint64_t sub_1A748B92C()
{
  unint64_t result = qword_1E96F4618;
  if (!qword_1E96F4618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4618);
  }
  return result;
}

unint64_t sub_1A748B980()
{
  unint64_t result = qword_1E96F4628;
  if (!qword_1E96F4628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4628);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for REMSpotlightColor_Legacy(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMSpotlightColor_Legacy(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightColor_Legacy()
{
  return &type metadata for REMSpotlightColor_Legacy;
}

unsigned char *storeEnumTagSinglePayload for REMSpotlightColor_Legacy.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A748BAFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightColor_Legacy.CodingKeys()
{
  return &type metadata for REMSpotlightColor_Legacy.CodingKeys;
}

unint64_t sub_1A748BB38()
{
  unint64_t result = qword_1E96F4630;
  if (!qword_1E96F4630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4630);
  }
  return result;
}

unint64_t sub_1A748BB90()
{
  unint64_t result = qword_1E96F4638;
  if (!qword_1E96F4638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4638);
  }
  return result;
}

unint64_t sub_1A748BBE8()
{
  unint64_t result = qword_1E96F4640;
  if (!qword_1E96F4640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4640);
  }
  return result;
}

uint64_t sub_1A748BC4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  unsigned int v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  int v8 = &v15[-v7];
  sub_1A7572D90();
  sub_1A7572DB0();
  uint64_t v9 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v9(v6, AssociatedTypeWitness);
  uint64_t v10 = (void (*)(unsigned char *, void))sub_1A7572E80();
  uint64_t v12 = v11;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, v12, v13);
  v10(v15, 0);
  return ((uint64_t (*)(unsigned char *, uint64_t))v9)(v8, AssociatedTypeWitness);
}

uint64_t Collection<>.extendedDiff(_:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a4;
  return Collection.extendedDiff(_:isEqual:)(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1A72AE588, (uint64_t)v6, a2, a3, a5);
}

uint64_t sub_1A748BE78(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A74F9E40(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1A748E858(v5);
  *a1 = v2;
  return result;
}

Swift::Int __swiftcall ExtendedDiff.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t ExtendedDiff.source.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ExtendedDiff.elements.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1A748BF38(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + 32) + 16);
}

uint64_t (*sub_1A748BF48(uint64_t (*result)(), unint64_t *a2))()
{
  unint64_t v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 32);
    if (v3 < *(void *)(v4 + 16))
    {
      uint64_t v5 = v4 + 24 * v3;
      char v6 = *(unsigned char *)(v5 + 48);
      *(_OWORD *)Swift::Int result = *(_OWORD *)(v5 + 32);
      *((unsigned char *)result + 16) = v6;
      return nullsub_1;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_1A748BFA4@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  if (*result < 0 || (v4 = result[1], uint64_t v5 = v2[4], *(void *)(v5 + 16) < v4))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v2[5];
    uint64_t v8 = v2[2];
    uint64_t v7 = v2[3];
    uint64_t v9 = v2[1];
    a2[2] = *v2;
    a2[3] = v9;
    a2[4] = v8;
    a2[5] = v7;
    a2[6] = v5;
    a2[7] = v6;
    *a2 = v3;
    a2[1] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A748C044@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v7;
  a1[5] = v6;
  uint64_t v8 = *(void *)(v7 + 16);
  a1[6] = 0;
  a1[7] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

BOOL sub_1A748C0C8()
{
  return *(void *)(*(void *)(v0 + 32) + 16) == 0;
}

uint64_t sub_1A748C0DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1A748F3D8(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

__n128 sub_1A748C114@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_1A748C12C()
{
  return *(void *)(*(void *)(v0 + 32) + 16);
}

void *sub_1A748C138()
{
  long long v1 = v0[1];
  v4[0] = *v0;
  v4[1] = v1;
  v4[2] = v0[2];
  long long v2 = sub_1A72D1E48((uint64_t)v4);
  sub_1A748F368((uint64_t)v4);
  return v2;
}

unint64_t sub_1A748C184(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1A748D2C8(a1, a2, a3);
}

uint64_t Collection.extendedDiff(_:isEqual:)@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  Collection.diff(_:identitiesEqual:contentsEqual:)(a1, a2, a3, 0, 0, a4, a5, v14);
  v13[0] = v14[0];
  v13[1] = v14[1];
  Collection.extendedDiff(from:other:identitiesEqual:contentsEqual:)(v13, a1, (uint64_t)a2, a3, 0, 0, a4, a5, a6);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t Collection.extendedDiff(from:other:identitiesEqual:contentsEqual:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v80 = a8;
  uint64_t v78 = a6;
  uint64_t v79 = a7;
  uint64_t v76 = a4;
  uint64_t v77 = a5;
  uint64_t v74 = a2;
  uint64_t v75 = a3;
  uint64_t v9 = a9;
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v89 = MEMORY[0x1E4FBC870];
  uint64_t v90 = MEMORY[0x1E4FBC870];
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v62 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v63 = (void *)MEMORY[0x1E4FBC860];
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v64 = swift_bridgeObjectRetain();
    uint64_t v65 = sub_1A748CD8C(v64);
    swift_bridgeObjectRelease();
    uint64_t v66 = v90;
    *uint64_t v9 = v11;
    v9[1] = v10;
    void v9[2] = v63;
    v9[3] = v65;
    v9[4] = v62;
    v9[5] = v66;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  unint64_t v71 = a9;
  uint64_t v72 = v11 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v13 = 0;
  int v14 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v81 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v73 = v12;
  while (1)
  {
    uint64_t v18 = v89;
    if (*(void *)(v89 + 16))
    {
      uint64_t v19 = sub_1A75740B0();
      uint64_t v20 = -1 << *(unsigned char *)(v18 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
      {
        uint64_t v22 = *(void *)(v18 + 48);
        if (*(void *)(v22 + 8 * v21) == v13) {
          goto LABEL_5;
        }
        uint64_t v23 = ~v20;
        while (1)
        {
          unint64_t v21 = (v21 + 1) & v23;
          if (((*(void *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
            break;
          }
          if (*(void *)(v22 + 8 * v21) == v13) {
            goto LABEL_5;
          }
        }
      }
    }
    uint64_t v24 = v90;
    if (*(void *)(v90 + 16))
    {
      uint64_t v25 = sub_1A75740B0();
      uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
      unint64_t v27 = v25 & ~v26;
      if ((*(void *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27))
      {
        uint64_t v28 = *(void *)(v24 + 48);
        if (*(void *)(v28 + 8 * v27) == v13) {
          goto LABEL_5;
        }
        uint64_t v29 = ~v26;
        while (1)
        {
          unint64_t v27 = (v27 + 1) & v29;
          if (((*(void *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
            break;
          }
          if (*(void *)(v28 + 8 * v27) == v13) {
            goto LABEL_5;
          }
        }
      }
    }
    if (v13 >= *(void *)(v11 + 16)) {
      break;
    }
    uint64_t v30 = (uint64_t *)(v72 + 24 * v13);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    LODWORD(v17) = *((unsigned __int8 *)v30 + 16);
    v84[0] = v11;
    v84[1] = v10;
    swift_bridgeObjectRetain();
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v34 = sub_1A7399950(v33, v18);
    *(void *)&long long v82 = v32;
    *((void *)&v82 + 1) = v31;
    char v83 = v17;
    MEMORY[0x1F4188790](v34);
    v68[2] = v79;
    v68[3] = v80;
    v68[4] = v75;
    v68[5] = v76;
    uint64_t v69 = v77;
    uint64_t v70 = v78;
    Collection.firstMatch(_:dirtyIndices:candidate:candidateIndex:other:isEqual:)((uint64_t)v84, v34, &v82, v13, v74, (uint64_t (*)(char *, char *))sub_1A748D104, (uint64_t)v68, (uint64_t)v85);
    swift_bridgeObjectRelease();
    char v35 = v88;
    if (v88 == 2)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v81 = sub_1A72AC37C(0, v81[2] + 1, 1, v81);
      }
      unint64_t v37 = v81[2];
      unint64_t v36 = v81[3];
      if (v37 >= v36 >> 1) {
        uint64_t v81 = sub_1A72AC37C((void *)(v36 > 1), v37 + 1, 1, v81);
      }
      char v38 = v81;
      v81[2] = v37 + 1;
      v38[v37 + 4] = v13;
      if (v17 < 2) {
        uint64_t v31 = 0;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = v73;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        int v14 = sub_1A72ACB10(0, v14[2] + 1, 1, v14);
      }
      unint64_t v41 = v14[2];
      unint64_t v40 = v14[3];
      if (v41 >= v40 >> 1) {
        int v14 = sub_1A72ACB10((void *)(v40 > 1), v41 + 1, 1, v14);
      }
      void v14[2] = v41 + 1;
      char v42 = &v14[3 * v41];
      v42[4] = v32;
      uint64_t v16 = v42 + 4;
    }
    else
    {
      if (v86 != 3) {
        goto LABEL_57;
      }
      uint64_t v17 = v85[0];
      uint64_t v31 = v85[1];
      uint64_t v43 = v87;
      char v44 = swift_isUniquelyReferenced_nonNull_native();
      if (v35)
      {
        if ((v44 & 1) == 0) {
          uint64_t v81 = sub_1A72AC37C(0, v81[2] + 1, 1, v81);
        }
        unint64_t v54 = v81[2];
        unint64_t v53 = v81[3];
        int64_t v55 = v53 >> 1;
        unint64_t v56 = v54 + 1;
        uint64_t v12 = v73;
        if (v53 >> 1 <= v54)
        {
          uint64_t v81 = sub_1A72AC37C((void *)(v53 > 1), v54 + 1, 1, v81);
          unint64_t v53 = v81[3];
          int64_t v55 = v53 >> 1;
        }
        uint64_t v57 = v81;
        v81[2] = v56;
        v57[v54 + 4] = v13;
        int64_t v58 = v54 + 2;
        if (v55 < v58) {
          uint64_t v81 = sub_1A72AC37C((void *)(v53 > 1), v58, 1, v81);
        }
        uint64_t v59 = v81;
        v81[2] = v58;
        v59[v56 + 4] = v43;
        sub_1A72DF8A8(v85, v13);
        uint64_t v52 = v43;
      }
      else
      {
        if ((v44 & 1) == 0) {
          uint64_t v81 = sub_1A72AC37C(0, v81[2] + 1, 1, v81);
        }
        unint64_t v46 = v81[2];
        unint64_t v45 = v81[3];
        int64_t v47 = v45 >> 1;
        unint64_t v48 = v46 + 1;
        uint64_t v12 = v73;
        if (v45 >> 1 <= v46)
        {
          uint64_t v81 = sub_1A72AC37C((void *)(v45 > 1), v46 + 1, 1, v81);
          unint64_t v45 = v81[3];
          int64_t v47 = v45 >> 1;
        }
        uint64_t v49 = v81;
        v81[2] = v48;
        v49[v46 + 4] = v43;
        int64_t v50 = v46 + 2;
        if (v47 < v50) {
          uint64_t v81 = sub_1A72AC37C((void *)(v45 > 1), v50, 1, v81);
        }
        uint64_t v51 = v81;
        v81[2] = v50;
        v51[v48 + 4] = v13;
        sub_1A72DF8A8(v85, v43);
        uint64_t v52 = v13;
      }
      sub_1A72DF8A8(v85, v52);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v14 = sub_1A72ACB10(0, v14[2] + 1, 1, v14);
      }
      unint64_t v61 = v14[2];
      unint64_t v60 = v14[3];
      if (v61 >= v60 >> 1) {
        int v14 = sub_1A72ACB10((void *)(v60 > 1), v61 + 1, 1, v14);
      }
      void v14[2] = v61 + 1;
      uint64_t v15 = &v14[3 * v61];
      v15[4] = v17;
      uint64_t v16 = v15 + 4;
      LOBYTE(v17) = 3;
    }
    v16[1] = v31;
    *((unsigned char *)v16 + 16) = v17;
LABEL_5:
    if (++v13 == v12)
    {
      uint64_t v62 = v14;
      uint64_t v9 = v71;
      uint64_t v63 = v81;
      goto LABEL_55;
    }
  }
  __break(1u);
LABEL_57:
  LODWORD(v70) = 0;
  uint64_t v69 = 134;
  uint64_t result = sub_1A7573840();
  __break(1u);
  return result;
}

uint64_t Collection.extendedDiff(_:identitiesEqual:contentsEqual:)@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  Collection.diff(_:identitiesEqual:contentsEqual:)(a1, a2, a3, a4, a5, a6, a7, v18);
  v17[0] = v18[0];
  v17[1] = v18[1];
  Collection.extendedDiff(from:other:identitiesEqual:contentsEqual:)(v17, a1, (uint64_t)a2, a3, (uint64_t)a4, a5, a6, a7, a8);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A748CA08(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6)
{
  v22[1] = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  int v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v22 - v15;
  char v17 = a3(a1, a2);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v18(v16, a1, AssociatedTypeWitness);
  v18(v14, a2, AssociatedTypeWitness);
  if (v17)
  {
    if (a5) {
      char v19 = a5(v16, v14);
    }
    else {
      char v19 = 1;
    }
  }
  else
  {
    char v19 = 0;
  }
  uint64_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v14, AssociatedTypeWitness);
  v20(v16, AssociatedTypeWitness);
  return v19 & 1;
}

uint64_t Collection.firstMatch(_:dirtyIndices:candidate:candidateIndex:other:isEqual:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(char *, char *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int64_t v8 = a4 + 1;
  if (__OFADD__(a4, 1)) {
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)result;
  uint64_t v10 = *(void *)(*(void *)result + 16);
  if (v10 >= v8)
  {
    if (v8 == v10)
    {
LABEL_4:
      *(_OWORD *)a8 = 0u;
      *(_OWORD *)(a8 + 16) = 0u;
      *(unsigned char *)(a8 + 32) = 2;
      return result;
    }
    long long v23 = *a3;
    uint64_t v13 = a2 + 56;
    char v14 = *((unsigned char *)a3 + 16);
    while (1)
    {
      if (v8 >= v10)
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        break;
      }
      if (*(void *)(a2 + 16))
      {
        uint64_t result = sub_1A75740B0();
        uint64_t v15 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v16 = result & ~v15;
        if ((*(void *)(v13 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
        {
          uint64_t v17 = *(void *)(a2 + 48);
          if (*(void *)(v17 + 8 * v16) == v8) {
            goto LABEL_6;
          }
          uint64_t v18 = ~v15;
          while (1)
          {
            unint64_t v16 = (v16 + 1) & v18;
            if (((*(void *)(v13 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
              break;
            }
            if (*(void *)(v17 + 8 * v16) == v8) {
              goto LABEL_6;
            }
          }
        }
      }
      if (v8 < 0) {
        goto LABEL_21;
      }
      if ((unint64_t)v8 >= *(void *)(v9 + 16)) {
        goto LABEL_22;
      }
      uint64_t v19 = v9 + 32 + 24 * v8;
      char v20 = *(unsigned char *)(v19 + 16);
      long long v28 = v23;
      char v29 = v14;
      long long v26 = *(_OWORD *)v19;
      char v27 = v20;
      uint64_t result = Collection.createMatch(_:match:other:isEqual:)((uint64_t *)&v28, (uint64_t *)&v26, a5, a6, a7, (uint64_t)&v30);
      __int16 v21 = v31;
      if ((v31 & 0xFF00) != 0x200)
      {
        *(_OWORD *)a8 = v30;
        *(void *)(a8 + 16) = v21;
        *(void *)(a8 + 24) = v8;
        *(unsigned char *)(a8 + 32) = HIBYTE(v21) & 1;
        return result;
      }
LABEL_6:
      if (++v8 == v10) {
        goto LABEL_4;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A748CD8C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A736BECC(v2, 0, v1);
  sub_1A748BE78(&v11);
  swift_bridgeObjectRelease();
  uint64_t v3 = v11;
  int64_t v4 = *(void *)(v11 + 16);
  if (v4)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1A72D2CD8(0, v4, 0);
    uint64_t v5 = v11;
    unint64_t v6 = *(void *)(v11 + 16);
    uint64_t v7 = 40;
    do
    {
      uint64_t v8 = *(void *)(v3 + v7);
      uint64_t v11 = v5;
      unint64_t v9 = *(void *)(v5 + 24);
      if (v6 >= v9 >> 1)
      {
        sub_1A72D2CD8(v9 > 1, v6 + 1, 1);
        uint64_t v5 = v11;
      }
      *(void *)(v5 + 16) = v6 + 1;
      *(void *)(v5 + 8 * v6 + 32) = v8;
      v7 += 16;
      ++v6;
      --v4;
    }
    while (v4);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  return v5;
}

uint64_t Collection.createMatch(_:match:other:isEqual:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(char *, char *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v29[2] = a5;
  long long v30 = a4;
  v29[1] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v11);
  unint64_t v16 = (char *)v29 - v15;
  uint64_t v17 = *a1;
  int v18 = *((unsigned __int8 *)a1 + 16);
  uint64_t v19 = *a2;
  int v20 = *((unsigned __int8 *)a2 + 16);
  if (!v18)
  {
    if (v20 == 1)
    {
      uint64_t v26 = v17;
      sub_1A748BC4C((uint64_t)v29 - v15);
      sub_1A748BC4C((uint64_t)v13);
      char v27 = v30(v16, v13);
      long long v28 = *(void (**)(char *, uint64_t))(v10 + 8);
      v28(v13, AssociatedTypeWitness);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v16, AssociatedTypeWitness);
      if (v27)
      {
        *(void *)a6 = v19;
        *(void *)(a6 + 8) = v26;
        __int16 v25 = 3;
        goto LABEL_13;
      }
    }
LABEL_12:
    *(void *)a6 = 0;
    *(void *)(a6 + 8) = 0;
    __int16 v25 = 512;
    goto LABEL_13;
  }
  if (v18 != 1 || v20 != 0) {
    goto LABEL_12;
  }
  uint64_t v22 = v17;
  sub_1A748BC4C((uint64_t)v29 - v15);
  sub_1A748BC4C((uint64_t)v13);
  char v23 = v30(v16, v13);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v13, AssociatedTypeWitness);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v16, AssociatedTypeWitness);
  if ((v23 & 1) == 0) {
    goto LABEL_12;
  }
  *(void *)a6 = v22;
  *(void *)(a6 + 8) = v19;
  __int16 v25 = 259;
LABEL_13:
  *(_WORD *)(a6 + 16) = v25;
  return result;
}

uint64_t sub_1A748D104(uint64_t a1, uint64_t a2)
{
  return sub_1A748CA08(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32), *(void *)(v2 + 40), *(uint64_t (**)(char *, char *))(v2 + 48), *(void *)(v2 + 56));
}

uint64_t ExtendedDiff.Element.debugDescription.getter()
{
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t v1 = 10308;
      goto LABEL_7;
    case 2:
      uint64_t v2 = 10325;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 10317;
LABEL_5:
      uint64_t v4 = v2;
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      break;
    default:
      uint64_t v1 = 10313;
LABEL_7:
      uint64_t v4 = v1;
      break;
  }
  sub_1A7573BC0();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  return v4;
}

void *sub_1A748D24C(void *result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
LABEL_11:
    a3 = 0;
    goto LABEL_12;
  }
  if (!a3)
  {
LABEL_12:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = a3;
    return (void *)a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (*(void *)(a4 + 16))
    {
      uint64_t v5 = (unsigned char *)(a4 + 48);
      unint64_t v6 = 1;
      while (1)
      {
        char v7 = *v5;
        *(_OWORD *)a2 = *((_OWORD *)v5 - 1);
        *(unsigned char *)(a2 + 16) = v7;
        if (a3 == v6) {
          goto LABEL_12;
        }
        unint64_t v8 = *(void *)(a4 + 16);
        if (v6 == v8)
        {
          a3 = v6;
          goto LABEL_12;
        }
        a2 += 24;
        v5 += 24;
        if (v6++ >= v8)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A748D2C8(unint64_t result, uint64_t a2, unint64_t a3)
{
  long long v4 = *v3;
  long long v5 = v3[1];
  long long v6 = v3[2];
  if (!a2)
  {
LABEL_11:
    a3 = 0;
    goto LABEL_12;
  }
  if (!a3)
  {
LABEL_12:
    *(_OWORD *)uint64_t result = v4;
    *(_OWORD *)(result + 16) = v5;
    *(_OWORD *)(result + 32) = v6;
    *(void *)(result + 48) = a3;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (*(void *)(v6 + 16))
    {
      char v7 = (unsigned char *)(v6 + 48);
      unint64_t v8 = 1;
      while (1)
      {
        char v9 = *v7;
        *(_OWORD *)a2 = *((_OWORD *)v7 - 1);
        *(unsigned char *)(a2 + 16) = v9;
        if (a3 == v8) {
          goto LABEL_12;
        }
        unint64_t v10 = *(void *)(v6 + 16);
        if (v8 == v10)
        {
          a3 = v8;
          goto LABEL_12;
        }
        a2 += 24;
        v7 += 24;
        if (v8++ >= v10)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A748D354(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  long long v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A748D554(uint64_t result, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = (void *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    uint64_t result = sub_1A75737F0();
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    unint64_t v4 = result | 0x8000000000000000;
    if (v6) {
      goto LABEL_3;
    }
LABEL_37:
    int64_t v11 = 0;
    a3 = 0;
LABEL_46:
    *uint64_t v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    uint64_t v7[3] = v11;
    v7[4] = v10;
    return a3;
  }
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v8 = a4 + 64;
  uint64_t v20 = ~v19;
  uint64_t v21 = -v19;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v10 = v22 & *(void *)(a4 + 64);
  uint64_t v9 = v20;
  if (!a2) {
    goto LABEL_37;
  }
LABEL_3:
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v23 = v9;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v24 = (unint64_t)(v9 + 64) >> 6;
  while ((v4 & 0x8000000000000000) != 0)
  {
    if (!sub_1A7573820()
      || (swift_unknownObjectRelease(),
          sub_1A748F508(),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          uint64_t v15 = v25,
          uint64_t result = swift_unknownObjectRelease(),
          !v25))
    {
      a3 = v12;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
LABEL_6:
    ++v12;
    *v6++ = v15;
    if (v12 == a3) {
      goto LABEL_45;
    }
  }
  if (v10)
  {
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v11 << 6);
LABEL_23:
    uint64_t result = (uint64_t)*(id *)(*(void *)(v4 + 56) + 8 * v14);
    if (!result) {
      goto LABEL_44;
    }
    uint64_t v15 = result;
    goto LABEL_6;
  }
  int64_t v16 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v16 >= v24) {
    goto LABEL_40;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  if (v17) {
    goto LABEL_22;
  }
  v11 += 2;
  if (v16 + 1 >= v24)
  {
    unint64_t v10 = 0;
    int64_t v11 = v16;
    goto LABEL_44;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v11);
  if (v17)
  {
LABEL_18:
    int64_t v16 = v11;
LABEL_22:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
    goto LABEL_23;
  }
  int64_t v18 = v16 + 2;
  if (v16 + 2 >= v24) {
    goto LABEL_40;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
LABEL_21:
    int64_t v16 = v18;
    goto LABEL_22;
  }
  int64_t v11 = v16 + 3;
  if (v16 + 3 >= v24)
  {
    unint64_t v10 = 0;
    int64_t v11 = v16 + 2;
    goto LABEL_44;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v11);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v16 + 4;
  if (v16 + 4 >= v24)
  {
LABEL_40:
    unint64_t v10 = 0;
LABEL_44:
    a3 = v12;
    goto LABEL_45;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17) {
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v16 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v16 >= v24)
    {
      unint64_t v10 = 0;
      int64_t v11 = v24 - 1;
      goto LABEL_44;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1A748D820(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A7571BC0();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x1F4188790](v11);
  unint64_t v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 64;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  uint64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  unsigned __int8 v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  char v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  __int16 v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    char v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_1A72EF338((uint64_t)v10);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1A748DC0C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  long long v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1A748DE0C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  long long v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void **)(*(void *)(a4 + 48) + v20);
    ++v13;
    uint64_t v22 = *(void *)(*(void *)(a4 + 56) + v20);
    *uint64_t v11 = v21;
    v11[1] = v22;
    if (v13 == v10)
    {
      id v23 = v21;
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = v21;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1A748E014(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v26 = -1 << *(unsigned char *)(a4 + 32);
  char v27 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    int64_t v19 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v15);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v22 = (uint64_t *)(*(void *)(a4 + 56) + 24 * v15);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v25 = v22[2];
    *uint64_t v10 = v21;
    v10[1] = v20;
    void v10[2] = v23;
    _DWORD v10[3] = v24;
    v10[4] = v25;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 5;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v26;
      uint64_t result = v27;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

int64_t *sub_1A748E240(int64_t *result, int64_t *a2, int64_t a3, int64_t a4, int64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    unint64_t v5 = a4;
LABEL_7:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0) {
    goto LABEL_31;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4) {
    goto LABEL_32;
  }
  if (a5 > a4)
  {
    unint64_t v5 = a4 + 1;
    *a2 = a4;
    unint64_t v6 = a3 - 1;
    if (a3 == 1) {
      goto LABEL_7;
    }
    unint64_t v7 = a3 - 2;
    if (a3 - 2 >= (unint64_t)(~a4 + a5)) {
      unint64_t v7 = ~a4 + a5;
    }
    if (v7 < v6) {
      unint64_t v6 = v7;
    }
    unint64_t v8 = v6 + 1;
    if (v8 > 4)
    {
      uint64_t v11 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v11 = 4;
      }
      unint64_t v12 = v8 - v11;
      uint64_t v9 = v8 - v11 + 1;
      unint64_t v13 = v5 + v12;
      uint64_t v10 = &a2[v12];
      int64x2_t v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_1A757DB40);
      unint64_t v15 = (int64x2_t *)(a2 + 3);
      int64x2_t v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        int64x2_t *v15 = vaddq_s64(v14, v16);
        int64x2_t v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      unint64_t v5 = v13;
    }
    else
    {
      uint64_t v9 = 1;
      uint64_t v10 = a2;
    }
    unint64_t v17 = v10 + 1;
    int64_t v18 = v5;
    while (a3 != v9)
    {
      if (a5 == v18)
      {
        unint64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
      if (v18 >= a5) {
        goto LABEL_30;
      }
      ++v9;
      unint64_t v5 = v18 + 1;
      *v17++ = v18++;
      if (a3 == v9) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1A748E370(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    *uint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1A748E56C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001) == 0)
  {
    int64_t v10 = 0;
    uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
    uint64_t v8 = a4 + 56;
    uint64_t v9 = ~v20;
    uint64_t v21 = -v20;
    if (v21 < 64) {
      uint64_t v22 = ~(-1 << v21);
    }
    else {
      uint64_t v22 = -1;
    }
    unint64_t v11 = v22 & *(void *)(a4 + 56);
    uint64_t v24 = result;
    if (a2) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  sub_1A75733C0();
  type metadata accessor for REMObjectID_Codable();
  sub_1A748F4B0();
  uint64_t result = (void *)sub_1A7572CD0();
  uint64_t v4 = v27;
  uint64_t v8 = v28;
  uint64_t v9 = v29;
  int64_t v10 = v30;
  unint64_t v11 = v31;
  uint64_t v24 = v7;
  if (!v6) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1A7573440()) {
        goto LABEL_45;
      }
      type metadata accessor for REMObjectID_Codable();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v15 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17) {
        break;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    unint64_t v15 = result;
    if (!result) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  int64_t v16 = v10 + 5;
  if (v10 + 5 >= v25)
  {
LABEL_42:
    unint64_t v11 = 0;
    int64_t v10 = v18;
    goto LABEL_45;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  if (v17) {
    goto LABEL_23;
  }
  int64_t v19 = v10 + 6;
  while (v25 != v19)
  {
    unint64_t v17 = *(void *)(v8 + 8 * v19++);
    if (v17)
    {
      int64_t v16 = v19 - 1;
      goto LABEL_23;
    }
  }
  unint64_t v11 = 0;
  int64_t v10 = v25 - 1;
  uint64_t v9 = v23;
LABEL_46:
  *uint64_t v24 = v4;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v11;
  return (void *)v12;
}

uint64_t sub_1A748E858(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v83 = 0;
      uint64_t v84 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v86 = *(void *)(v84 + 16 * i);
        uint64_t v87 = v83;
        do
        {
          if (v86 >= *(void *)(v84 + v87)) {
            break;
          }
          if (!v84) {
            goto LABEL_140;
          }
          char v88 = (void *)(v84 + v87);
          uint64_t v89 = *(void *)(v84 + v87 + 24);
          *(_OWORD *)(v84 + v87 + 16) = *(_OWORD *)(v84 + v87);
          *char v88 = v86;
          v88[1] = v89;
          v87 -= 16;
        }
        while (v87 != -16);
        v83 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  uint64_t v98 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      uint64_t v90 = v12;
      uint64_t v101 = v9;
      if (v13 >= 2)
      {
        uint64_t v91 = *v98;
        do
        {
          unint64_t v92 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v91) {
            goto LABEL_144;
          }
          uint64_t v93 = v90;
          uint64_t v94 = *(void *)&v90[16 * v92 + 32];
          uint64_t v95 = *(void *)&v90[16 * v13 + 24];
          sub_1A73A780C((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(void *)&v90[16 * v13 + 16]), v91 + 16 * v95, __dst);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v93 = sub_1A74F9DDC((uint64_t)v93);
          }
          if (v92 >= *((void *)v93 + 2)) {
            goto LABEL_133;
          }
          uint64_t v96 = &v93[16 * v92 + 32];
          *(void *)uint64_t v96 = v94;
          *((void *)v96 + 1) = v95;
          unint64_t v97 = *((void *)v93 + 2);
          if (v13 > v97) {
            goto LABEL_134;
          }
          memmove(&v93[16 * v13 + 16], &v93[16 * v13 + 32], 16 * (v97 - v13));
          uint64_t v90 = v93;
          *((void *)v93 + 2) = v97 - 1;
          unint64_t v13 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v101 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v101 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7018E0);
    uint64_t v8 = sub_1A7572A90();
    *(void *)(v8 + 16) = v7;
    uint64_t v101 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v99 = *a1 - 16;
  uint64_t v100 = *a1 + 32;
  uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v102 = v6;
  uint64_t v103 = v3;
  uint64_t v104 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 16 * v10);
      uint64_t v16 = *(void *)(v11 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        unint64_t v17 = (uint64_t *)(v100 + 16 * v14);
        uint64_t v18 = v15;
        while (1)
        {
          uint64_t v20 = *v17;
          v17 += 2;
          uint64_t v19 = v20;
          if (v15 < v16 == v20 >= v18) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = (long long *)(v99 + 16 * v10);
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          uint64_t v24 = (long long *)(v11 + 16 * v14);
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_143;
              }
              long long v25 = *v24;
              *uint64_t v24 = *v21;
              *uint64_t v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v26 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v26 >= v3) {
      uint64_t v26 = v3;
    }
    if (v26 < v14) {
      break;
    }
    if (v10 != v26)
    {
      uint64_t v27 = v99 + 16 * v10;
      do
      {
        uint64_t v28 = *(void *)(v11 + 16 * v10);
        uint64_t v29 = v14;
        uint64_t v30 = v27;
        do
        {
          if (v28 >= *(void *)v30) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v31 = *(void *)(v30 + 24);
          *(_OWORD *)(v30 + 16) = *(_OWORD *)v30;
          *(void *)uint64_t v30 = v28;
          *(void *)(v30 + 8) = v31;
          v30 -= 16;
          ++v29;
        }
        while (v10 != v29);
        ++v10;
        v27 += 16;
      }
      while (v10 != v26);
      uint64_t v10 = v26;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1A74F9714(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v33 = *((void *)v12 + 2);
    unint64_t v32 = *((void *)v12 + 3);
    unint64_t v13 = v33 + 1;
    uint64_t v11 = v104;
    if (v33 >= v32 >> 1)
    {
      long long v82 = sub_1A74F9714((char *)(v32 > 1), v33 + 1, 1, v12);
      uint64_t v11 = v104;
      uint64_t v12 = v82;
    }
    *((void *)v12 + 2) = v13;
    int64_t v34 = v12 + 32;
    char v35 = &v12[16 * v33 + 32];
    *(void *)char v35 = v14;
    *((void *)v35 + 1) = v10;
    if (v33)
    {
      while (1)
      {
        unint64_t v36 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v41 = &v34[16 * v13];
          uint64_t v42 = *((void *)v41 - 8);
          uint64_t v43 = *((void *)v41 - 7);
          BOOL v47 = __OFSUB__(v43, v42);
          uint64_t v44 = v43 - v42;
          if (v47) {
            goto LABEL_119;
          }
          uint64_t v46 = *((void *)v41 - 6);
          uint64_t v45 = *((void *)v41 - 5);
          BOOL v47 = __OFSUB__(v45, v46);
          uint64_t v39 = v45 - v46;
          char v40 = v47;
          if (v47) {
            goto LABEL_120;
          }
          unint64_t v48 = v13 - 2;
          uint64_t v49 = &v34[16 * v13 - 32];
          uint64_t v51 = *(void *)v49;
          uint64_t v50 = *((void *)v49 + 1);
          BOOL v47 = __OFSUB__(v50, v51);
          uint64_t v52 = v50 - v51;
          if (v47) {
            goto LABEL_122;
          }
          BOOL v47 = __OFADD__(v39, v52);
          uint64_t v53 = v39 + v52;
          if (v47) {
            goto LABEL_125;
          }
          if (v53 >= v44)
          {
            unint64_t v71 = &v34[16 * v36];
            uint64_t v73 = *(void *)v71;
            uint64_t v72 = *((void *)v71 + 1);
            BOOL v47 = __OFSUB__(v72, v73);
            uint64_t v74 = v72 - v73;
            if (v47) {
              goto LABEL_129;
            }
            BOOL v64 = v39 < v74;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v65 = *((void *)v12 + 4);
            uint64_t v66 = *((void *)v12 + 5);
            BOOL v47 = __OFSUB__(v66, v65);
            uint64_t v58 = v66 - v65;
            char v59 = v47;
            goto LABEL_77;
          }
          uint64_t v38 = *((void *)v12 + 4);
          uint64_t v37 = *((void *)v12 + 5);
          BOOL v47 = __OFSUB__(v37, v38);
          uint64_t v39 = v37 - v38;
          char v40 = v47;
        }
        if (v40) {
          goto LABEL_121;
        }
        unint64_t v48 = v13 - 2;
        unint64_t v54 = &v34[16 * v13 - 32];
        uint64_t v56 = *(void *)v54;
        uint64_t v55 = *((void *)v54 + 1);
        BOOL v57 = __OFSUB__(v55, v56);
        uint64_t v58 = v55 - v56;
        char v59 = v57;
        if (v57) {
          goto LABEL_124;
        }
        unint64_t v60 = &v34[16 * v36];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v47 = __OFSUB__(v61, v62);
        uint64_t v63 = v61 - v62;
        if (v47) {
          goto LABEL_127;
        }
        if (__OFADD__(v58, v63)) {
          goto LABEL_128;
        }
        if (v58 + v63 >= v39)
        {
          BOOL v64 = v39 < v63;
LABEL_83:
          if (v64) {
            unint64_t v36 = v48;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v59) {
          goto LABEL_123;
        }
        long long v67 = &v34[16 * v36];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v47 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v47) {
          goto LABEL_126;
        }
        if (v70 < v58) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v75 = v36 - 1;
        if (v36 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v76 = v12;
        uint64_t v77 = &v34[16 * v75];
        uint64_t v78 = *(void *)v77;
        uint64_t v79 = &v34[16 * v36];
        uint64_t v80 = *((void *)v79 + 1);
        sub_1A73A780C((char *)(v11 + 16 * *(void *)v77), (char *)(v11 + 16 * *(void *)v79), v11 + 16 * v80, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v80 < v78) {
          goto LABEL_116;
        }
        if (v36 > *((void *)v76 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v77 = v78;
        *(void *)&v34[16 * v75 + 8] = v80;
        unint64_t v81 = *((void *)v76 + 2);
        if (v36 >= v81) {
          goto LABEL_118;
        }
        uint64_t v12 = v76;
        unint64_t v13 = v81 - 1;
        memmove(&v34[16 * v36], v79 + 16, 16 * (v81 - 1 - v36));
        *((void *)v76 + 2) = v81 - 1;
        uint64_t v11 = v104;
        if (v81 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v102;
    uint64_t v3 = v103;
    if (v10 >= v103)
    {
      uint64_t v9 = v101;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

unint64_t sub_1A748EF28(uint64_t a1)
{
  unint64_t result = sub_1A748EF50();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A748EF50()
{
  unint64_t result = qword_1E96F4650;
  if (!qword_1E96F4650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4650);
  }
  return result;
}

unint64_t sub_1A748EFA8()
{
  unint64_t result = qword_1E96F4658;
  if (!qword_1E96F4658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4658);
  }
  return result;
}

uint64_t sub_1A748EFFC()
{
  return sub_1A72AE788(&qword_1E96F4660, &qword_1E96F4668);
}

uint64_t sub_1A748F038()
{
  return sub_1A72AE788(&qword_1E96F4670, &qword_1E96F4678);
}

uint64_t sub_1A748F074()
{
  return sub_1A72AE788(&qword_1E96F4680, &qword_1E96F4688);
}

uint64_t destroy for ExtendedDiff()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ExtendedDiff(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ExtendedDiff(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ExtendedDiff(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtendedDiff(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtendedDiff(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtendedDiff()
{
  return &type metadata for ExtendedDiff;
}

ValueMetadata *type metadata accessor for ExtendedDiff.Element()
{
  return &type metadata for ExtendedDiff.Element;
}

uint64_t sub_1A748F368(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A748F3D8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    unint64_t v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1)) {
      unint64_t v3 = a2 - 1;
    }
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL)) {
      unint64_t v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    }
    unint64_t v4 = v3 + 1;
    if (v4 >= 5)
    {
      uint64_t v7 = v4 & 3;
      if ((v4 & 3) == 0) {
        uint64_t v7 = 4;
      }
      unint64_t v5 = v4 - v7;
      int64x2_t v8 = 0uLL;
      v9.i64[0] = 0;
      v9.i64[1] = result;
      int64x2_t v10 = vdupq_n_s64(1uLL);
      unint64_t v11 = v5;
      do
      {
        int64x2_t v8 = vaddq_s64(v8, v10);
        int64x2_t v9 = vaddq_s64(v9, v10);
        v11 -= 4;
      }
      while (v11);
      uint64_t v6 = vaddvq_s64(vaddq_s64(vzip1q_s64(v9, v8), vzip2q_s64(v9, v8)));
    }
    else
    {
      unint64_t v5 = 0;
      uint64_t v6 = result;
    }
    uint64_t v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v13 = v5 + result - a3;
    uint64_t v14 = a2 - v5;
    unint64_t result = v6;
    while (1)
    {
      if (!v13) {
        return 0;
      }
      if (!v12) {
        break;
      }
      ++result;
      ++v12;
      ++v13;
      if (!--v14) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

unint64_t sub_1A748F4B0()
{
  unint64_t result = qword_1E96F1528;
  if (!qword_1E96F1528)
  {
    type metadata accessor for REMObjectID_Codable();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1528);
  }
  return result;
}

unint64_t sub_1A748F508()
{
  unint64_t result = qword_1E96F1310;
  if (!qword_1E96F1310)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E96F1310);
  }
  return result;
}

uint64_t sub_1A748F54C()
{
  uint64_t result = type metadata accessor for Patch();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1A748F5EC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v6 + 64);
  unint64_t v10 = ((v8 + 8) & ~v8) + v9;
  if (v10 <= ((v10 + v8) & ~v8) + v9) {
    unint64_t v10 = ((v10 + v7) & ~(unint64_t)v7) + v9;
  }
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  int v12 = v7 & 0x100000;
  BOOL v13 = v8 <= 7 && v12 == 0;
  if (v13 && (((v11 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= 0x18)
  {
    unsigned int v14 = a2[v11];
    unsigned int v15 = v14 - 3;
    if (v14 >= 3)
    {
      if (v11 <= 3) {
        uint64_t v16 = v11;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          if (v11 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          if (v11 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_23;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v11 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 4:
          int v17 = *(_DWORD *)a2;
          if (v11 < 4) {
LABEL_23:
          }
            unsigned int v14 = (v17 | (v15 << (8 * v11))) + 3;
          else {
LABEL_25:
          }
            unsigned int v14 = v17 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v19 = ~v8;
    uint64_t v20 = v11 + 1;
    if (v14 == 2)
    {
      *a1 = *(void *)a2;
      uint64_t v26 = (unint64_t)&a2[v8 + 8] & v19;
      uint64_t v22 = *(void (**)(void))(v6 + 16);
      v22();
      ((void (*)(unint64_t, uint64_t, uint64_t))v22)((v9 + v8 + (((unint64_t)v4 + v8 + 8) & v19)) & v19, (v9 + v8 + v26) & v19, v5);
      char v21 = 2;
    }
    else
    {
      if (v14 != 1)
      {
        *a1 = *(void *)a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)a1 + v8 + 8) & v19, (unint64_t)&a2[v8 + 8] & v19, v5);
        *((unsigned char *)v4 + v11) = 0;
        goto LABEL_32;
      }
      *a1 = *(void *)a2;
      char v21 = 1;
    }
    *((unsigned char *)v4 + v11) = v21;
LABEL_32:
    uint64_t v23 = (void *)(((unint64_t)v4 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (void *)((unint64_t)&a2[v20 + 7] & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v24;
    *(void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    return v4;
  }
  uint64_t v18 = *(void *)a2;
  void *v4 = *(void *)a2;
  unint64_t v4 = (void *)(v18 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
  swift_retain();
  return v4;
}

unsigned __int8 *sub_1A748F8A8(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  unint64_t v6 = ((v4 + 8) & ~v4) + v5;
  if (v6 <= ((v6 + v4) & ~v4) + v5) {
    unint64_t v6 = ((v6 + v4) & ~v4) + v5;
  }
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  unsigned int v7 = result[v6];
  unsigned int v8 = v7 - 3;
  if (v7 >= 3)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *result;
        goto LABEL_14;
      case 2:
        int v10 = *(unsigned __int16 *)result;
        goto LABEL_14;
      case 3:
        int v10 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_14;
      case 4:
        int v10 = *(_DWORD *)result;
LABEL_14:
        int v11 = (v10 | (v8 << (8 * v6))) + 3;
        unsigned int v7 = v10 + 3;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v12 = ~v4;
  if (v7 == 2)
  {
    uint64_t v13 = (unint64_t)&result[v4 + 8] & v12;
    int v17 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v17(v13, v2);
    uint64_t v14 = (v5 + v4 + v13) & v12;
    uint64_t v15 = v2;
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))v17;
  }
  else
  {
    if (v7 == 1) {
      return result;
    }
    uint64_t v14 = (unint64_t)&result[v4 + 8] & v12;
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    uint64_t v15 = *(void *)(a2 + 16);
  }

  return (unsigned __int8 *)v16(v14, v15);
}

void *sub_1A748FA7C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = ((v7 + 8) & ~v7) + v8;
  if (v9 <= ((v9 + v7) & ~v7) + v8) {
    unint64_t v9 = ((v9 + v7) & ~v7) + v8;
  }
  if (v9 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v9;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 3;
  if (v11 >= 3)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_15;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_15:
        int v15 = (v14 | (v12 << (8 * v10))) + 3;
        unsigned int v11 = v14 + 3;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = ~v7;
  if (v11 == 2)
  {
    *a1 = *(void *)a2;
    uint64_t v18 = (unint64_t)&a2[v7 + 8] & v16;
    uint64_t v19 = *(void (**)(void))(v6 + 16);
    v19();
    ((void (*)(unint64_t, uint64_t, uint64_t))v19)((v8 + v7 + (((unint64_t)a1 + v7 + 8) & v16)) & v16, (v8 + v7 + v18) & v16, v5);
    char v17 = 2;
  }
  else
  {
    if (v11 != 1)
    {
      *a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)a1 + v7 + 8) & v16, (unint64_t)&a2[v7 + 8] & v16, v5);
      *((unsigned char *)a1 + v10) = 0;
      goto LABEL_23;
    }
    *a1 = *(void *)a2;
    char v17 = 1;
  }
  *((unsigned char *)a1 + v10) = v17;
LABEL_23:
  uint64_t v20 = (void *)(((unint64_t)a1 + v10 + 8) & 0xFFFFFFFFFFFFFFF8);
  char v21 = (void *)((unint64_t)&a2[v10 + 8] & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  *(void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unsigned __int8 *sub_1A748FCC8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (a1 != a2)
  {
    uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = *(void *)(v6 + 64);
    unint64_t v10 = ((v8 + 8) & ~v8) + v9;
    uint64_t v36 = v9;
    if (v10 <= ((v10 + v8) & ~v8) + v9) {
      unint64_t v10 = ((v10 + v8) & ~v8) + v9;
    }
    if (v10 <= 8) {
      uint64_t v11 = 8;
    }
    else {
      uint64_t v11 = v10;
    }
    unsigned int v12 = a1[v11];
    unsigned int v13 = v12 - 3;
    if (v12 >= 3)
    {
      if (v11 <= 3) {
        uint64_t v14 = v11;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a1;
          if (v11 < 4) {
            goto LABEL_17;
          }
          goto LABEL_19;
        case 2:
          int v15 = *(unsigned __int16 *)a1;
          if (v11 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_17;
        case 3:
          int v15 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v11 < 4) {
            goto LABEL_17;
          }
          goto LABEL_19;
        case 4:
          int v15 = *(_DWORD *)a1;
          if (v11 < 4) {
LABEL_17:
          }
            unsigned int v12 = (v15 | (v13 << (8 * v11))) + 3;
          else {
LABEL_19:
          }
            unsigned int v12 = v15 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v8;
    if (v12 == 2)
    {
      uint64_t v35 = *(void *)(*(void *)(a3 + 16) - 8);
      uint64_t v17 = *(void *)(a3 + 16);
      uint64_t v18 = (unint64_t)&a1[v8 + 8] & v16;
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v19(v18, v17);
      uint64_t v20 = v36 + v8 + v18;
      uint64_t v5 = v17;
      uint64_t v6 = v35;
      v19(v20 & v16, v5);
      uint64_t v7 = v35;
    }
    else if (v12 != 1)
    {
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&a1[v8 + 8] & v16, v5);
    }
    unsigned int v21 = a2[v11];
    unsigned int v22 = v21 - 3;
    if (v21 >= 3)
    {
      if (v11 <= 3) {
        uint64_t v23 = v11;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a2;
          if (v11 >= 4) {
            goto LABEL_40;
          }
          goto LABEL_34;
        case 2:
          int v24 = *(unsigned __int16 *)a2;
          if (v11 >= 4) {
            goto LABEL_40;
          }
          goto LABEL_34;
        case 3:
          int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v11 < 4) {
            goto LABEL_34;
          }
          goto LABEL_40;
        case 4:
          int v24 = *(_DWORD *)a2;
          if (v11 < 4)
          {
LABEL_34:
            unsigned int v21 = (v24 | (v22 << (8 * v11))) + 3;
            break;
          }
LABEL_40:
          unsigned int v21 = v24 + 3;
          if (v21 == 2) {
            goto LABEL_41;
          }
          goto LABEL_36;
        default:
          break;
      }
    }
    if (v21 == 2)
    {
LABEL_41:
      *(void *)a1 = *(void *)a2;
      uint64_t v26 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
      v26((unint64_t)&a1[v8 + 8] & v16, (unint64_t)&a2[v8 + 8] & v16, v5);
      v26((v36 + v8 + ((unint64_t)&a1[v8 + 8] & v16)) & v16, (v36 + v8 + ((unint64_t)&a2[v8 + 8] & v16)) & v16, v5);
      char v25 = 2;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      if (v21 == 1)
      {
        char v25 = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))((unint64_t)&a1[v8 + 8] & v16, (unint64_t)&a2[v8 + 8] & v16, v5);
        char v25 = 0;
      }
    }
    a1[v11] = v25;
  }
  uint64_t v27 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v28 = *(void *)(v6 + 64);
  unint64_t v29 = ((v27 + 8) & ~v27) + v28;
  unint64_t v30 = ((v29 + v27) & ~v27) + v28;
  if (v29 > v30) {
    unint64_t v30 = v29;
  }
  if (v30 <= 8) {
    unint64_t v30 = 8;
  }
  unint64_t v31 = v30 + 8;
  unint64_t v32 = (void *)((unint64_t)&a1[v31] & 0xFFFFFFFFFFFFFFF8);
  unint64_t v33 = (void *)((unint64_t)&a2[v31] & 0xFFFFFFFFFFFFFFF8);
  void *v32 = *v33;
  *(void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1A74900EC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = ((v7 + 8) & ~v7) + v8;
  if (v9 <= ((v9 + v7) & ~v7) + v8) {
    unint64_t v9 = ((v9 + v7) & ~v7) + v8;
  }
  if (v9 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v9;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 3;
  if (v11 >= 3)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_15;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_15:
        int v15 = (v14 | (v12 << (8 * v10))) + 3;
        unsigned int v11 = v14 + 3;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = ~v7;
  if (v11 == 2)
  {
    *a1 = *(void *)a2;
    uint64_t v18 = (unint64_t)&a2[v7 + 8] & v16;
    uint64_t v19 = *(void (**)(void))(v6 + 32);
    v19();
    ((void (*)(unint64_t, uint64_t, uint64_t))v19)((v8 + v7 + (((unint64_t)a1 + v7 + 8) & v16)) & v16, (v8 + v7 + v18) & v16, v5);
    char v17 = 2;
  }
  else
  {
    if (v11 != 1)
    {
      *a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)a1 + v7 + 8) & v16, (unint64_t)&a2[v7 + 8] & v16, v5);
      *((unsigned char *)a1 + v10) = 0;
      goto LABEL_23;
    }
    *a1 = *(void *)a2;
    char v17 = 1;
  }
  *((unsigned char *)a1 + v10) = v17;
LABEL_23:
  uint64_t v20 = (void *)(((unint64_t)a1 + v10 + 8) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v21 = (void *)((unint64_t)&a2[v10 + 8] & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  *(void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unsigned __int8 *sub_1A7490338(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (a1 != a2)
  {
    uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = *(void *)(v6 + 64);
    unint64_t v10 = ((v8 + 8) & ~v8) + v9;
    uint64_t v36 = v9;
    if (v10 <= ((v10 + v8) & ~v8) + v9) {
      unint64_t v10 = ((v10 + v8) & ~v8) + v9;
    }
    if (v10 <= 8) {
      uint64_t v11 = 8;
    }
    else {
      uint64_t v11 = v10;
    }
    unsigned int v12 = a1[v11];
    unsigned int v13 = v12 - 3;
    if (v12 >= 3)
    {
      if (v11 <= 3) {
        uint64_t v14 = v11;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a1;
          if (v11 < 4) {
            goto LABEL_17;
          }
          goto LABEL_19;
        case 2:
          int v15 = *(unsigned __int16 *)a1;
          if (v11 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_17;
        case 3:
          int v15 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v11 < 4) {
            goto LABEL_17;
          }
          goto LABEL_19;
        case 4:
          int v15 = *(_DWORD *)a1;
          if (v11 < 4) {
LABEL_17:
          }
            unsigned int v12 = (v15 | (v13 << (8 * v11))) + 3;
          else {
LABEL_19:
          }
            unsigned int v12 = v15 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v8;
    if (v12 == 2)
    {
      uint64_t v35 = *(void *)(*(void *)(a3 + 16) - 8);
      uint64_t v17 = *(void *)(a3 + 16);
      uint64_t v18 = (unint64_t)&a1[v8 + 8] & v16;
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v19(v18, v17);
      uint64_t v20 = v36 + v8 + v18;
      uint64_t v5 = v17;
      uint64_t v6 = v35;
      v19(v20 & v16, v5);
      uint64_t v7 = v35;
    }
    else if (v12 != 1)
    {
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&a1[v8 + 8] & v16, v5);
    }
    unsigned int v21 = a2[v11];
    unsigned int v22 = v21 - 3;
    if (v21 >= 3)
    {
      if (v11 <= 3) {
        uint64_t v23 = v11;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a2;
          if (v11 >= 4) {
            goto LABEL_40;
          }
          goto LABEL_34;
        case 2:
          int v24 = *(unsigned __int16 *)a2;
          if (v11 >= 4) {
            goto LABEL_40;
          }
          goto LABEL_34;
        case 3:
          int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v11 < 4) {
            goto LABEL_34;
          }
          goto LABEL_40;
        case 4:
          int v24 = *(_DWORD *)a2;
          if (v11 < 4)
          {
LABEL_34:
            unsigned int v21 = (v24 | (v22 << (8 * v11))) + 3;
            break;
          }
LABEL_40:
          unsigned int v21 = v24 + 3;
          if (v21 == 2) {
            goto LABEL_41;
          }
          goto LABEL_36;
        default:
          break;
      }
    }
    if (v21 == 2)
    {
LABEL_41:
      *(void *)a1 = *(void *)a2;
      uint64_t v26 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32);
      v26((unint64_t)&a1[v8 + 8] & v16, (unint64_t)&a2[v8 + 8] & v16, v5);
      v26((v36 + v8 + ((unint64_t)&a1[v8 + 8] & v16)) & v16, (v36 + v8 + ((unint64_t)&a2[v8 + 8] & v16)) & v16, v5);
      char v25 = 2;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      if (v21 == 1)
      {
        char v25 = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))((unint64_t)&a1[v8 + 8] & v16, (unint64_t)&a2[v8 + 8] & v16, v5);
        char v25 = 0;
      }
    }
    a1[v11] = v25;
  }
  uint64_t v27 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v28 = *(void *)(v6 + 64);
  unint64_t v29 = ((v27 + 8) & ~v27) + v28;
  unint64_t v30 = ((v29 + v27) & ~v27) + v28;
  if (v29 > v30) {
    unint64_t v30 = v29;
  }
  if (v30 <= 8) {
    unint64_t v30 = 8;
  }
  unint64_t v31 = v30 + 8;
  unint64_t v32 = (void *)((unint64_t)&a1[v31] & 0xFFFFFFFFFFFFFFF8);
  unint64_t v33 = (void *)((unint64_t)&a2[v31] & 0xFFFFFFFFFFFFFFF8);
  void *v32 = *v33;
  *(void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A749075C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  unint64_t v6 = ((v4 + 8) & ~v4) + v5;
  unint64_t v7 = ((v6 + v4) & ~v4) + v5;
  if (v6 > v7) {
    unint64_t v7 = v6;
  }
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_25;
  }
  unint64_t v8 = (((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v9 = a2 - 252;
  uint64_t v10 = v8 & 0xFFFFFFF8;
  if ((v8 & 0xFFFFFFF8) != 0) {
    unsigned int v9 = 2;
  }
  if (v9 >= 0x10000) {
    int v11 = 4;
  }
  else {
    int v11 = 2;
  }
  if (v9 < 0x100) {
    int v12 = 1;
  }
  else {
    int v12 = v11;
  }
  if (v12 == 4)
  {
    int v13 = *(_DWORD *)((char *)a1 + v8);
    if (!v13) {
      goto LABEL_25;
    }
  }
  else if (v12 == 2)
  {
    int v13 = *(unsigned __int16 *)((char *)a1 + v8);
    if (!v13)
    {
LABEL_25:
      unsigned int v16 = *((unsigned __int8 *)a1 + v7);
      if (v16 >= 3) {
        return (v16 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  else
  {
    int v13 = *((unsigned __int8 *)a1 + v8);
    if (!v13) {
      goto LABEL_25;
    }
  }
  int v15 = v13 - 1;
  if (v10)
  {
    int v15 = 0;
    LODWORD(v10) = *a1;
  }
  return (v10 | v15) + 254;
}

void sub_1A7490878(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  unint64_t v8 = ((v6 + 8) & ~v6) + v7;
  unint64_t v9 = ((v8 + v6) & ~v6) + v7;
  if (v8 > v9) {
    unint64_t v9 = v8;
  }
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  unint64_t v10 = (((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (a3 < 0xFE)
  {
    int v13 = 0;
    int v14 = a2 - 253;
    if (a2 > 0xFD) {
      goto LABEL_15;
    }
  }
  else
  {
    unsigned int v11 = a3 - 252;
    if ((((v9 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8) {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v13 = 1;
    }
    else {
      int v13 = v12;
    }
    int v14 = a2 - 253;
    if (a2 > 0xFD)
    {
LABEL_15:
      if ((((v9 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
        int v15 = v14;
      }
      else {
        int v15 = 1;
      }
      if ((((v9 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
      {
        unsigned int v16 = a2 - 254;
        bzero(a1, (((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
        *(_DWORD *)a1 = v16;
      }
      switch(v13)
      {
        case 1:
          a1[v10] = v15;
          return;
        case 2:
          *(_WORD *)&a1[v10] = v15;
          return;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v10] = v15;
          return;
        default:
          return;
      }
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      goto LABEL_28;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1A7490A18);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    default:
LABEL_28:
      if (a2) {
LABEL_29:
      }
        a1[v9] = -(char)a2;
      return;
  }
}

uint64_t type metadata accessor for SortedPatchElement()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A7490A58()
{
  type metadata accessor for SortedPatchElement();
  type metadata accessor for DoublyLinkedList();
  type metadata accessor for LinkedList();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1A7492E8C(v0);
  uint64_t v2 = sub_1A7492EA4(v1);
  if (!v2) {
    return sub_1A7572A80();
  }
  if (*(void *)(v2 + 16))
  {
    uint64_t v3 = (uint64_t *)swift_retain();
    sub_1A7490D3C(v3);
    uint64_t v2 = swift_release();
  }
  MEMORY[0x1F4188790](v2);
  swift_retain();
  swift_getWitnessTable();
  uint64_t v4 = sub_1A7572920();
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1A7490BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for Patch();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for SortedPatchElement();
  *(void *)(a4 + *(int *)(result + 28)) = a2;
  *(void *)(a4 + *(int *)(result + 32)) = a3;
  return result;
}

uint64_t sub_1A7490C40(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (uint64_t)a1 + *(void *)(*a1 + 104);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v6 = *(void *)(v4 + *(int *)(v5 + 32));
  uint64_t v7 = a2 + *(void *)(*(void *)a2 + 104);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(v7 + *(int *)(v5 + 32));
  uint64_t v10 = v6 - v9;
  if (v6 == v9) {
    return 128;
  }
  if (__OFSUB__(v6, v9))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  if (v10 < 0)
  {
    BOOL v11 = __OFSUB__(0, v10);
    uint64_t v10 = v9 - v6;
    if (v11) {
      goto LABEL_13;
    }
  }
  if (v10 == 1) {
    return v9 >= v6;
  }
  if (v9 < v6) {
    return 64;
  }
  return 65;
}

uint64_t sub_1A7490D3C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_1A7493FC4();
  uint64_t v2 = *(void *)(v1 + 80);
  type metadata accessor for DoublyLinkedList();
  sub_1A75734B0();
  swift_getWitnessTable();
  sub_1A7572890();
  while (1)
  {
    sub_1A75734A0();
    if (!v9) {
      return swift_release();
    }
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t v4 = v9 + *(void *)(*(void *)v9 + 104);
    swift_beginAccess();
    if (Strong)
    {
      while (1)
      {
        uint64_t v5 = Strong + *(void *)(*(void *)Strong + 104);
        swift_beginAccess();
        if (*(void *)(v5 + *(int *)(v2 + 28)) >= *(void *)(v4 + *(int *)(v2 + 28))) {
          break;
        }
        uint64_t v6 = (uint64_t *)swift_retain();
        sub_1A7490EDC(v6, v9);
        uint64_t v7 = swift_weakLoadStrong();
        swift_release_n();
        uint64_t Strong = v7;
        if (!v7) {
          goto LABEL_2;
        }
      }
      swift_release();
    }
LABEL_2:
    swift_release();
  }
}

uint64_t sub_1A7490EDC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*a1 + 80);
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = type metadata accessor for Patch();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = *(void *)(v4 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v8);
  BOOL v47 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v48 = (uint64_t)&v42 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v42 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v42 - v19;
  uint64_t result = sub_1A7490C40(a1, a2);
  if ((result & 0x80) != 0)
  {
    uint64_t result = sub_1A7573840();
    __break(1u);
  }
  else if ((result & 1) == 0)
  {
    uint64_t v44 = v5;
    unsigned int v22 = (char *)a1 + *(void *)(*a1 + 104);
    swift_beginAccess();
    uint64_t v43 = v11;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v23(v20, v22, v4);
    uint64_t v24 = a2 + *(void *)(*(void *)a2 + 104);
    swift_beginAccess();
    uint64_t v42 = v24;
    v23(v18, (char *)v24, v4);
    char v25 = &v10[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v45 = *(void *)(v6 - 8);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v26(v10, v20, v6);
    uint64_t v46 = v25;
    v26(v25, v18, v6);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v28 = v47;
        uint64_t v29 = v42;
        v23(v47, (char *)v42, v4);
        uint64_t v30 = v48;
        sub_1A749140C(v4, 1, v48);
        uint64_t v31 = v43;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v4);
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 40))(v29, v30, v4);
        swift_endAccess();
      }
      else
      {
        uint64_t v38 = v44;
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        char v40 = &v10[*(int *)(TupleTypeMetadata3 + 48)];
        uint64_t v41 = *(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8);
        v41(&v10[*(int *)(TupleTypeMetadata3 + 64)], v38);
        v41(v40, v38);
      }
    }
    else
    {
      uint64_t v32 = v44;
      unint64_t v33 = &v10[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      int64_t v34 = v47;
      uint64_t v35 = v42;
      v23(v47, (char *)v42, v4);
      uint64_t v36 = v48;
      sub_1A749140C(v4, -1, v48);
      uint64_t v37 = v43;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v4);
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 40))(v35, v36, v4);
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8))(v33, v32);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v6);
  }
  return result;
}

uint64_t sub_1A749140C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for Patch();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1A74914C0(a2, v10, (char *)&v12 - v8);
  return sub_1A7490BA4((uint64_t)v9, *(void *)(v3 + *(int *)(a1 + 28)), *(void *)(v3 + *(int *)(a1 + 32)), a3);
}

uint64_t sub_1A74914C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v7, v9, a2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1) {
      goto LABEL_9;
    }
    uint64_t v11 = *(void *)v7 + a1;
    if (!__OFADD__(*(void *)v7, a1)) {
      goto LABEL_10;
    }
    __break(1u);
  }
  uint64_t v12 = *(void *)v7;
  uint64_t v13 = *(void *)(a2 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(&a3[*(int *)(TupleTypeMetadata2 + 48)], &v7[*(int *)(TupleTypeMetadata2 + 48)], v13);
  uint64_t v11 = v12 + a1;
  if (!__OFADD__(v12, a1)) {
    goto LABEL_10;
  }
  __break(1u);
LABEL_9:
  uint64_t v15 = *(void *)v7;
  uint64_t v16 = *(void *)(a2 + 16);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v18 = *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v7[*(int *)(TupleTypeMetadata3 + 64)];
  unsigned int v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
  v21(&a3[v18], v19, v16);
  uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v21)(&a3[*(int *)(TupleTypeMetadata3 + 64)], v20, v16);
  uint64_t v11 = v15 + a1;
  if (!__OFADD__(v15, a1))
  {
LABEL_10:
    *(void *)a3 = v11;
    return swift_storeEnumTagMultiPayload();
  }
  __break(1u);
  return result;
}

BOOL sub_1A74916DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SortedPatchElement();
  return *(void *)(a1 + *(int *)(v4 + 32)) < *(void *)(a2 + *(int *)(v4 + 32));
}

uint64_t String.base64EncodedHMACString(using:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4690);
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v24 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A7572660();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1A7572320();
  uint64_t v10 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  unint64_t v30 = a2;
  sub_1A72E3408(a1, a2);
  sub_1A7572310();
  sub_1A7572650();
  uint64_t v13 = sub_1A7572620();
  unint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v16 = 0;
  if (v15 >> 60 != 15)
  {
    uint64_t v29 = v13;
    unint64_t v30 = v15;
    sub_1A7572350();
    sub_1A7491D50();
    sub_1A7491DA8();
    uint64_t v23 = v13;
    uint64_t v17 = v24;
    sub_1A7572330();
    uint64_t v31 = v4;
    unint64_t v32 = sub_1A7491DFC();
    uint64_t v18 = __swift_allocate_boxed_opaque_existential_0(&v29);
    uint64_t v19 = v25;
    (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 16))(v18, v17, v4);
    __swift_project_boxed_opaque_existential_1(&v29, v31);
    sub_1A75717B0();
    uint64_t v20 = v27;
    unint64_t v21 = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
    uint64_t v16 = sub_1A7571A10();
    sub_1A72E3460(v20, v21);
    sub_1A7360424(v23, v15);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v4);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
  return v16;
}

uint64_t String.base64EncodedHMACString(using:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4690);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A7572660();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7572650();
  uint64_t v8 = sub_1A7572620();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v11 = 0;
  if (v10 >> 60 != 15)
  {
    v17[0] = v8;
    v17[1] = v10;
    sub_1A7572350();
    sub_1A7491D50();
    sub_1A7491DA8();
    sub_1A7572330();
    uint64_t v18 = v0;
    unint64_t v19 = sub_1A7491DFC();
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v17);
    (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(boxed_opaque_existential_0, v3, v0);
    __swift_project_boxed_opaque_existential_1(v17, v18);
    sub_1A75717B0();
    uint64_t v13 = v16[1];
    unint64_t v14 = v16[2];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    uint64_t v11 = sub_1A7571A10();
    sub_1A72E3460(v13, v14);
    sub_1A7360424(v8, v10);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v11;
}

unint64_t sub_1A7491D50()
{
  unint64_t result = qword_1E96F4698;
  if (!qword_1E96F4698)
  {
    sub_1A7572350();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4698);
  }
  return result;
}

unint64_t sub_1A7491DA8()
{
  unint64_t result = qword_1E96F46A0;
  if (!qword_1E96F46A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F46A0);
  }
  return result;
}

unint64_t sub_1A7491DFC()
{
  unint64_t result = qword_1E96F46A8;
  if (!qword_1E96F46A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F4690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F46A8);
  }
  return result;
}

unsigned char *sub_1A7491E58@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    unint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    unint64_t result = (unsigned char *)sub_1A752EF00(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    unint64_t result = (unsigned char *)sub_1A7491ED0((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    unint64_t result = (unsigned char *)sub_1A7491F4C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1A7491ED0(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1A7571610();
  swift_allocObject();
  uint64_t result = sub_1A75715D0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1A75719F0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1A7491F4C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1A7571610();
  swift_allocObject();
  uint64_t result = sub_1A75715D0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

void REMTimeOfDay.startHour.getter()
{
  id v0 = (id)_REMGetLocalizedString();
  uint64_t v1 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  unint64_t v3 = v2;

  uint64_t v4 = HIBYTE(v3) & 0xF;
  uint64_t v5 = v1 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v6 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    if ((v3 & 0x1000000000000000) != 0)
    {
      sub_1A7492928(v1, v3, 10);
LABEL_43:
      swift_bridgeObjectRelease();
      return;
    }
    if ((v3 & 0x2000000000000000) == 0)
    {
      if ((v1 & 0x1000000000000000) != 0) {
        uint64_t v7 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v7 = (unsigned __int8 *)sub_1A7573680();
      }
      sub_1A7492B6C(v7, v5, 10);
      goto LABEL_43;
    }
    v23[0] = v1;
    v23[1] = v3 & 0xFFFFFFFFFFFFFFLL;
    if (v1 == 43)
    {
      if (v4)
      {
        if (v4 != 1 && (BYTE1(v1) - 48) <= 9u && v4 != 2 && (BYTE2(v1) - 48) <= 9u)
        {
          uint64_t v8 = 10 * (BYTE1(v1) - 48) + (BYTE2(v1) - 48);
          uint64_t v9 = v4 - 3;
          if (v9)
          {
            unint64_t v10 = (unsigned __int8 *)v23 + 3;
            do
            {
              unsigned int v11 = *v10 - 48;
              if (v11 > 9) {
                break;
              }
              uint64_t v12 = 10 * v8;
              if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
                break;
              }
              uint64_t v8 = v12 + v11;
              if (__OFADD__(v12, v11)) {
                break;
              }
              ++v10;
              --v9;
            }
            while (v9);
          }
        }
        goto LABEL_43;
      }
    }
    else
    {
      if (v1 != 45)
      {
        if (v4)
        {
          if ((v1 - 48) <= 9u && v4 != 1 && (BYTE1(v1) - 48) <= 9u)
          {
            uint64_t v13 = 10 * (v1 - 48) + (BYTE1(v1) - 48);
            uint64_t v14 = v4 - 2;
            if (v14)
            {
              unint64_t v15 = (unsigned __int8 *)v23 + 2;
              do
              {
                unsigned int v16 = *v15 - 48;
                if (v16 > 9) {
                  break;
                }
                uint64_t v17 = 10 * v13;
                if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63) {
                  break;
                }
                uint64_t v13 = v17 + v16;
                if (__OFADD__(v17, v16)) {
                  break;
                }
                ++v15;
                --v14;
              }
              while (v14);
            }
          }
        }
        goto LABEL_43;
      }
      if (v4)
      {
        if (v4 != 1 && (BYTE1(v1) - 48) <= 9u && v4 != 2 && (BYTE2(v1) - 48) <= 9u)
        {
          uint64_t v18 = -10 * (BYTE1(v1) - 48) - (BYTE2(v1) - 48);
          uint64_t v19 = v4 - 3;
          if (v19)
          {
            uint64_t v20 = (unsigned __int8 *)v23 + 3;
            do
            {
              unsigned int v21 = *v20 - 48;
              if (v21 > 9) {
                break;
              }
              uint64_t v22 = 10 * v18;
              if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
                break;
              }
              uint64_t v18 = v22 - v21;
              if (__OFSUB__(v22, v21)) {
                break;
              }
              ++v20;
              --v19;
            }
            while (v19);
          }
        }
        goto LABEL_43;
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void REMTimeOfDay.endHour.getter()
{
  id v0 = (id)_REMGetLocalizedString();
  uint64_t v1 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  unint64_t v3 = v2;

  uint64_t v4 = HIBYTE(v3) & 0xF;
  uint64_t v5 = v1 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v6 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    if ((v3 & 0x1000000000000000) != 0)
    {
      sub_1A7492928(v1, v3, 10);
LABEL_43:
      swift_bridgeObjectRelease();
      return;
    }
    if ((v3 & 0x2000000000000000) == 0)
    {
      if ((v1 & 0x1000000000000000) != 0) {
        uint64_t v7 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v7 = (unsigned __int8 *)sub_1A7573680();
      }
      sub_1A7492B6C(v7, v5, 10);
      goto LABEL_43;
    }
    v23[0] = v1;
    v23[1] = v3 & 0xFFFFFFFFFFFFFFLL;
    if (v1 == 43)
    {
      if (v4)
      {
        if (v4 != 1 && (BYTE1(v1) - 48) <= 9u && v4 != 2 && (BYTE2(v1) - 48) <= 9u)
        {
          uint64_t v8 = 10 * (BYTE1(v1) - 48) + (BYTE2(v1) - 48);
          uint64_t v9 = v4 - 3;
          if (v9)
          {
            unint64_t v10 = (unsigned __int8 *)v23 + 3;
            do
            {
              unsigned int v11 = *v10 - 48;
              if (v11 > 9) {
                break;
              }
              uint64_t v12 = 10 * v8;
              if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
                break;
              }
              uint64_t v8 = v12 + v11;
              if (__OFADD__(v12, v11)) {
                break;
              }
              ++v10;
              --v9;
            }
            while (v9);
          }
        }
        goto LABEL_43;
      }
    }
    else
    {
      if (v1 != 45)
      {
        if (v4)
        {
          if ((v1 - 48) <= 9u && v4 != 1 && (BYTE1(v1) - 48) <= 9u)
          {
            uint64_t v13 = 10 * (v1 - 48) + (BYTE1(v1) - 48);
            uint64_t v14 = v4 - 2;
            if (v14)
            {
              unint64_t v15 = (unsigned __int8 *)v23 + 2;
              do
              {
                unsigned int v16 = *v15 - 48;
                if (v16 > 9) {
                  break;
                }
                uint64_t v17 = 10 * v13;
                if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63) {
                  break;
                }
                uint64_t v13 = v17 + v16;
                if (__OFADD__(v17, v16)) {
                  break;
                }
                ++v15;
                --v14;
              }
              while (v14);
            }
          }
        }
        goto LABEL_43;
      }
      if (v4)
      {
        if (v4 != 1 && (BYTE1(v1) - 48) <= 9u && v4 != 2 && (BYTE2(v1) - 48) <= 9u)
        {
          uint64_t v18 = -10 * (BYTE1(v1) - 48) - (BYTE2(v1) - 48);
          uint64_t v19 = v4 - 3;
          if (v19)
          {
            uint64_t v20 = (unsigned __int8 *)v23 + 3;
            do
            {
              unsigned int v21 = *v20 - 48;
              if (v21 > 9) {
                break;
              }
              uint64_t v22 = 10 * v18;
              if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
                break;
              }
              uint64_t v18 = v22 - v21;
              if (__OFSUB__(v22, v21)) {
                break;
              }
              ++v20;
              --v19;
            }
            while (v19);
          }
        }
        goto LABEL_43;
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

BOOL static REMTimeOfDay.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMTimeOfDay.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t REMTimeOfDay.hashValue.getter()
{
  return sub_1A7574110();
}

unsigned __int8 *sub_1A749267C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7492B6C(a1, a2, a3);
}

unsigned __int8 *sub_1A7492694(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_1A74926AC(a1, a2, a3);
}

unsigned __int8 *sub_1A74926AC(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  uint64_t v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1A7492928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1A7572850();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unsigned __int8 v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1A7354A78();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unsigned __int8 v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unsigned __int8 v7 = (unsigned __int8 *)sub_1A7573680();
  }
LABEL_7:
  unsigned int v11 = sub_1A7492B6C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_1A7492A14()
{
  unint64_t result = qword_1E96F46B0;
  if (!qword_1E96F46B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F46B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for REMTimeOfDay(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7492B34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTimeOfDay()
{
  return &type metadata for REMTimeOfDay;
}

unsigned __int8 *sub_1A7492B6C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t REMLocalizedTimeOfDay.creationHour.getter()
{
  return MEMORY[0x1F4148058]();
}

uint64_t sub_1A7492DEC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A7492E8C(uint64_t a1)
{
  return sub_1A7493910(a1, sub_1A7493014);
}

uint64_t sub_1A7492EA4(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  type metadata accessor for LinkedList();
  swift_retain();
  swift_getWitnessTable();
  uint64_t v1 = sub_1A7572B60();
  swift_allocObject();
  uint64_t v2 = sub_1A749395C(v1);
  swift_retain();
  swift_release();
  if (v2) {
    swift_release();
  }
  return v2;
}

char *sub_1A7492F70(uint64_t a1, uint64_t a2)
{
  int v4 = (char *)swift_allocObject();
  uint64_t v5 = *(void *)v4;
  *((void *)v4 + 2) = a1;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 32))(&v4[*(void *)(v5 + 96)], a2);
  return v4;
}

uint64_t sub_1A7493014(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = sub_1A7573210();
  unsigned __int8 v24 = *(void (***)(char *, char *))(v5 - 8);
  uint64_t v25 = (char *)v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  unsigned __int8 v8 = (char *)&v23 - v7;
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  unsigned int v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v27 = a1;
  sub_1A7572B30();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1A7572560();
  uint64_t v14 = v28;
  uint64_t v28 = a1;
  swift_getWitnessTable();
  sub_1A7572E20();
  uint64_t v15 = v26;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v4) == 1)
  {
    swift_bridgeObjectRelease();
    v24[1](v8, v25);
    type metadata accessor for LinkedList();
    swift_deallocPartialClassInstance();
    return 0;
  }
  unsigned __int8 v17 = *(void (***)(char *, char *))(v15 + 32);
  uint64_t v16 = v15 + 32;
  unsigned __int8 v24 = v17;
  uint64_t v25 = v13;
  ((void (*)(char *, char *, uint64_t))v17)(v13, v8, v4);
  uint64_t v28 = v14;
  sub_1A75738C0();
  swift_getWitnessTable();
  uint64_t result = sub_1A7572E10();
  uint64_t v19 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v26 = v16;
    uint64_t v23 = v4;
    if (result == 1)
    {
      char v20 = 0;
    }
    else
    {
      type metadata accessor for LinkedList();
      char v20 = 0;
      uint64_t v21 = 0;
      do
      {
        uint64_t v22 = v21 + 1;
        uint64_t v28 = v14;
        sub_1A748BC4C((uint64_t)v11);
        char v20 = sub_1A7492F70((uint64_t)v20, (uint64_t)v11);
        uint64_t v21 = v22;
      }
      while (v19 != v22);
    }
    swift_bridgeObjectRelease();
    v1[2] = v20;
    ((void (*)(char *, char *, uint64_t))v24)((char *)v1 + *(void *)(*v1 + 96), v25, v23);
    return (uint64_t)v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A74933B8()
{
  return sub_1A7493DBC((uint64_t)&unk_1EFCA4448, (uint64_t)&unk_1EFCA4470, (uint64_t)sub_1A7494484);
}

uint64_t sub_1A74933E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v7 = *(char **)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = *((void *)v7 + 2);
    swift_beginAccess();
    void *v6 = v8;
    swift_retain();
    swift_retain();
    swift_release();
    uint64_t v9 = *(void *)(a2 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a3, &v7[*(void *)(*(void *)v7 + 96)], a2);
    swift_release();
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v9 = *(void *)(a2 - 8);
    uint64_t v10 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v10, 1, a2);
}

char *sub_1A7493534()
{
  (*(void (**)(char *))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(&v0[*(void *)(*(void *)v0 + 96)]);
  uint64_t v1 = *((void *)v0 + 2);
  *((void *)v0 + 2) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v2 = *(void *)(v1 + 16);
      swift_retain();
      swift_release();
      uint64_t v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t sub_1A74935F0()
{
  return sub_1A74941EC((void (*)(void))sub_1A7493534);
}

uint64_t type metadata accessor for LinkedList()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A7493620()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A74936C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A74933B8();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1A7493708(uint64_t a1, uint64_t a2)
{
  return sub_1A74942D4(a1, a2, (void (*)(void, void))type metadata accessor for LinkedList);
}

void sub_1A7493720()
{
  type metadata accessor for LinkedList();

  JUMPOUT(0x1AD0CAAD0);
}

uint64_t sub_1A749378C()
{
  return sub_1A75728E0();
}

uint64_t sub_1A74937FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1A749384C(a1, a2);
  return v4;
}

char *sub_1A749384C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)v2;
  swift_weakInit();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 32))(&v2[*(void *)(*(void *)v2 + 104)], a2);
  *((void *)v2 + 2) = a1;
  if (a1) {
    swift_weakAssign();
  }
  return v2;
}

uint64_t sub_1A74938F8(uint64_t a1)
{
  return sub_1A7493910(a1, sub_1A749395C);
}

uint64_t sub_1A7493910(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  return a2(a1);
}

uint64_t sub_1A749395C(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = sub_1A7573210();
  uint64_t v25 = *(void (***)(char *, uint64_t))(v4 - 8);
  uint64_t v26 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (void (**)(char *, uint64_t))((char *)&v23 - v11);
  swift_weakInit();
  uint64_t v29 = a1;
  sub_1A7572B30();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1A7572560();
  uint64_t v13 = v30;
  uint64_t v30 = a1;
  swift_getWitnessTable();
  sub_1A7572E20();
  uint64_t v14 = v28;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v3) == 1)
  {
    swift_bridgeObjectRelease();
    v25[1](v7, v26);
    swift_weakDestroy();
    type metadata accessor for DoublyLinkedList();
    swift_deallocPartialClassInstance();
    return 0;
  }
  unsigned __int8 v17 = *(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v14 + 32);
  uint64_t v16 = v14 + 32;
  uint64_t v25 = v12;
  uint64_t v26 = v3;
  unsigned __int8 v24 = v17;
  v17((char *)v12, (void (**)(char *, uint64_t))v7, v3);
  uint64_t v30 = v13;
  sub_1A75738C0();
  swift_getWitnessTable();
  uint64_t result = sub_1A7572E10();
  uint64_t v19 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = v27;
      v24(&v15[*(void *)(*(void *)v15 + 104)], v25, v26);
      *((void *)v15 + 2) = 0;
    }
    else
    {
      uint64_t v28 = v16;
      type metadata accessor for DoublyLinkedList();
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      do
      {
        uint64_t v30 = v13;
        swift_retain();
        sub_1A748BC4C((uint64_t)v10);
        uint64_t v22 = swift_allocObject();
        sub_1A749384C(v21, (uint64_t)v10);
        if (v21)
        {
          swift_weakAssign();
          swift_release();
        }
        ++v20;
        uint64_t v21 = v22;
      }
      while (v19 != v20);
      swift_bridgeObjectRelease();
      uint64_t v15 = v27;
      v24(&v15[*(void *)(*(void *)v15 + 104)], v25, v26);
      *((void *)v15 + 2) = v22;
      swift_weakAssign();
    }
    return (uint64_t)v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7493D94()
{
  return sub_1A7493DBC((uint64_t)&unk_1EFCA43D0, (uint64_t)&unk_1EFCA4420, (uint64_t)sub_1A7494444);
}

uint64_t sub_1A7493DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(v7 + 16) = v8;
  *(void *)(v7 + 24) = v6;
  swift_retain();

  return MEMORY[0x1F4184C58](a3, v7, v8);
}

uint64_t sub_1A7493E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void **)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = v7[2];
    swift_beginAccess();
    void *v6 = v8;
    swift_retain();
    swift_retain();
    swift_release();
    uint64_t v9 = (char *)v7 + *(void *)(*v7 + 104);
    swift_beginAccess();
    uint64_t v10 = *(void *)(a2 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(a3, v9, a2);
    swift_release();
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = *(void *)(a2 - 8);
    uint64_t v11 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v11, 1, a2);
}

uint64_t sub_1A7493FC4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = *(void *)(v1 + 80);
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = type metadata accessor for DoublyLinkedList();
  swift_retain();

  return MEMORY[0x1F4184C58](sub_1A749443C, v3, v4);
}

uint64_t sub_1A7494078@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(v6 + 16);
    swift_beginAccess();
    void *v4 = v7;
    swift_retain();
    swift_retain();
    uint64_t result = swift_release();
  }
  *a2 = v6;
  return result;
}

char *sub_1A7494110()
{
  uint64_t v1 = *(void *)v0;
  swift_weakDestroy();
  (*(void (**)(char *))(*(void *)(*(void *)(v1 + 80) - 8) + 8))(&v0[*(void *)(*(void *)v0 + 104)]);
  uint64_t v2 = *((void *)v0 + 2);
  *((void *)v0 + 2) = 0;
  if (v2)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v3 = *(void *)(v2 + 16);
      swift_retain();
      swift_release();
      uint64_t v2 = v3;
    }
    while (v3);
  }
  swift_release();
  return v0;
}

uint64_t sub_1A74941D4()
{
  return sub_1A74941EC((void (*)(void))sub_1A7494110);
}

uint64_t sub_1A74941EC(void (*a1)(void))
{
  a1();
  uint64_t v2 = *(unsigned int *)(*(void *)v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(*(void *)v1 + 52);

  return MEMORY[0x1F4186488](v1, v2, v3);
}

uint64_t type metadata accessor for DoublyLinkedList()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A7494260()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A749427C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A7493D94();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1A74942BC(uint64_t a1, uint64_t a2)
{
  return sub_1A74942D4(a1, a2, (void (*)(void, void))type metadata accessor for DoublyLinkedList);
}

uint64_t sub_1A74942D4(uint64_t a1, uint64_t a2, void (*a3)(void, void))
{
  a3(0, *(void *)(a1 + 80));
  uint64_t v3 = sub_1A7494400();
  swift_release();
  return v3;
}

void sub_1A7494324()
{
  type metadata accessor for DoublyLinkedList();

  JUMPOUT(0x1AD0CAAD0);
}

uint64_t sub_1A7494390()
{
  return sub_1A75728E0();
}

uint64_t sub_1A7494404()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A749443C@<X0>(void *a1@<X8>)
{
  return sub_1A7494078(*(void *)(v1 + 24), a1);
}

uint64_t sub_1A7494444@<X0>(uint64_t a1@<X8>)
{
  return sub_1A7493E58(*(void *)(v1 + 24), *(void *)(v1 + 16), a1);
}

uint64_t sub_1A749444C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7494484@<X0>(uint64_t a1@<X8>)
{
  return sub_1A74933E0(*(void *)(v1 + 24), *(void *)(v1 + 16), a1);
}

uint64_t NSDateFormatter.testing_string(from:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)sub_1A7571AB0();
  id v3 = objc_msgSend(v1, sel_stringFromDate_, v2);

  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A72DF534();
  uint64_t v4 = sub_1A75732C0();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A749457C()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F46B8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F46B8);
  if (qword_1EB7042A8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F18);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void static REMSuggestedAttributesFeatureExtractor.train(in:parameters:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v4;
  uint64_t v13[2] = *(_OWORD *)(a1 + 32);
  char v14 = *(unsigned char *)(a1 + 48);
  id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A730450C((uint64_t)v5, v13, v9);

  if (!v2)
  {
    char v6 = v9[0];
    uint64_t v7 = v10;
    uint64_t v8 = v11;

    *(unsigned char *)a2 = v6;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v8;
  }
}

uint64_t static REMSuggestedAttributesFeatureExtractor.supportsSecureCoding.getter()
{
  return 1;
}

id REMSuggestedAttributesFeatureExtractor.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMSuggestedAttributesFeatureExtractor.init(coder:)(void *a1)
{
  id v3 = objc_msgSend(v1, sel_init);

  return v3;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Result.success.getter()
{
  return *v0;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Result.featureString.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Result __swiftcall REMSuggestedAttributesFeatureExtractor.Result.init(success:featureString:)(Swift::Bool success, Swift::String featureString)
{
  *(unsigned char *)uint64_t v2 = success;
  *(Swift::String *)(v2 + 8) = featureString;
  result.featureString = featureString;
  result.success = success;
  return result;
}

uint64_t sub_1A74947DC()
{
  if (*v0) {
    return 0x5365727574616566;
  }
  else {
    return 0x73736563637573;
  }
}

uint64_t sub_1A7494824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7496718(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A749484C(uint64_t a1)
{
  unint64_t v2 = sub_1A7494A38();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7494888(uint64_t a1)
{
  unint64_t v2 = sub_1A7494A38();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesFeatureExtractor.Result.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F46D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v10[0] = *(void *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7494A38();
  sub_1A75741B0();
  char v12 = 0;
  sub_1A7573B20();
  if (!v2)
  {
    char v11 = 1;
    sub_1A7573B10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A7494A38()
{
  unint64_t result = qword_1E96F46D8;
  if (!qword_1E96F46D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F46D8);
  }
  return result;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Result.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F46E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7494A38();
  sub_1A7574190();
  if (!v2)
  {
    char v16 = 0;
    char v9 = sub_1A7573A10();
    char v15 = 1;
    uint64_t v11 = sub_1A7573A00();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A7494C34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesFeatureExtractor.Result.init(from:)(a1, a2);
}

uint64_t sub_1A7494C4C(void *a1)
{
  return REMSuggestedAttributesFeatureExtractor.Result.encode(to:)(a1);
}

ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional __swiftcall REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional __swiftcall REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  result.Swift::Int value = REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.init(rawValue:)(stringValue).value;
  unsigned char *v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional __swiftcall REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  unsigned char *v1 = 6;
  return (ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.allCases.getter()
{
  return &unk_1EFC8FC90;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.rawValue.getter()
{
  unint64_t result = 0x694674757074756FLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C706D615378616DLL;
      break;
    case 2:
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x65536D6F646E6172;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x694674757074756FLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C706D615378616DLL;
      break;
    case 2:
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x65536D6F646E6172;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A7494EE4(unsigned __int8 *a1, char *a2)
{
  return sub_1A7540854(*a1, *a2);
}

uint64_t sub_1A7494EF0()
{
  return sub_1A7501BA8();
}

uint64_t sub_1A7494EF8()
{
  return sub_1A75021B4();
}

uint64_t sub_1A7494F00()
{
  return sub_1A7504514();
}

ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional sub_1A7494F08(Swift::String *a1)
{
  return REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.init(rawValue:)(*a1);
}

unint64_t sub_1A7494F14@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional sub_1A7494F40@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.Swift::Int value = REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A7494F78(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FC90;
}

uint64_t sub_1A7494F88(uint64_t a1)
{
  unint64_t v2 = sub_1A7495E38();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7494FC4(uint64_t a1)
{
  unint64_t v2 = sub_1A7495E38();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static REMSuggestedAttributesFeatureExtractor.Parameters.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.outputFileName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.maxSampleCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.minimumSampleCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.randomSeed.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.numOfIntentWords.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.includeTitleVector.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

void __swiftcall REMSuggestedAttributesFeatureExtractor.Parameters.init(outputFileName:maxSampleCount:minimumSampleCount:randomSeed:numOfIntentWords:includeTitleVector:)(ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters *__return_ptr retstr, Swift::String_optional outputFileName, Swift::Int_optional maxSampleCount, Swift::Int_optional minimumSampleCount, Swift::Int_optional randomSeed, Swift::Int_optional numOfIntentWords, Swift::Bool_optional includeTitleVector)
{
  Swift::Bool is_nil = randomSeed.is_nil;
  Swift::Int value = randomSeed.value;
  Swift::Bool v8 = minimumSampleCount.is_nil;
  Swift::Int v9 = minimumSampleCount.value;
  object = outputFileName.value._object;
  uint64_t countAndFlagsBits = outputFileName.value._countAndFlagsBits;
  if (maxSampleCount.is_nil) {
    Swift::Int v11 = 100;
  }
  else {
    Swift::Int v11 = maxSampleCount.value;
  }
  if (qword_1E96F08B0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1A7571E90();
  __swift_project_value_buffer(v12, (uint64_t)qword_1E96F46B8);
  uint64_t v13 = sub_1A7571E80();
  os_log_type_t v14 = sub_1A7572FF0();
  if (os_log_type_enabled(v13, v14))
  {
    char v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v15 = 134349056;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v13, v14, "maxSampleCount: %{public}ld", v15, 0xCu);
    MEMORY[0x1AD0CD330](v15, -1, -1);
  }

  if (v8) {
    Swift::Int v16 = 30;
  }
  else {
    Swift::Int v16 = v9;
  }
  unsigned __int8 v17 = sub_1A7571E80();
  os_log_type_t v18 = sub_1A7572FF0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 134349056;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v17, v18, "minimumSampleCount: %{public}ld", v19, 0xCu);
    MEMORY[0x1AD0CD330](v19, -1, -1);
  }

  if (is_nil) {
    Swift::Int value = sub_1A7433FA8(0x7FFFFFFFFFFFFFFFuLL);
  }
  uint64_t v20 = sub_1A7571E80();
  os_log_type_t v21 = sub_1A7572FF0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 134349056;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v20, v21, "randomSeed: %{public}ld", v22, 0xCu);
    MEMORY[0x1AD0CD330](v22, -1, -1);
  }

  uint64_t v23 = (void *)0xED00006E6F736A2ELL;
  if (object) {
    uint64_t v23 = object;
  }
  uint64_t v24 = 0x7365727574616566;
  if (object) {
    uint64_t v24 = countAndFlagsBits;
  }
  retstr->outputFileName._uint64_t countAndFlagsBits = v24;
  retstr->outputFileName._object = v23;
  Swift::Int v25 = 10;
  if (!numOfIntentWords.is_nil) {
    Swift::Int v25 = numOfIntentWords.value;
  }
  retstr->Swift::Int maxSampleCount = v11;
  retstr->Swift::Int minimumSampleCount = v16;
  retstr->randomSeed = value;
  retstr->numOfIntentWords = v25;
  retstr->includeTitleVector = includeTitleVector.value;
}

__n128 REMSuggestedAttributesFeatureExtractor.Parameters.init(partial:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = swift_retain();
    unint64_t v5 = sub_1A72B2AF0(v4);
    if (v6) {
      sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v5, (uint64_t)&v45);
    }
    else {
      memset(&v45, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v45, 0, 32);
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
  if (swift_dynamicCast())
  {
    uint64_t v41 = v44;
    uint64_t v42 = v43;
  }
  else
  {
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_retain();
    unint64_t v8 = sub_1A72B2AF0(v7);
    if (v9) {
      sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v8, (uint64_t)&v45);
    }
    else {
      memset(&v45, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v45, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v10 = swift_dynamicCast();
  if (v10)
  {
    Swift::Int v40 = v43;
  }
  else
  {
    Swift::Int v40 = 0;
    uint64_t v43 = 0;
  }
  char v11 = v10 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = swift_retain();
    unint64_t v13 = sub_1A72B2AF0(v12);
    if (v14) {
      sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v13, (uint64_t)&v45);
    }
    else {
      memset(&v45, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v45, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v15 = swift_dynamicCast();
  if (v15)
  {
    Swift::Int v39 = v43;
  }
  else
  {
    Swift::Int v39 = 0;
    uint64_t v43 = 0;
  }
  char v16 = v15 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = swift_retain();
    unint64_t v18 = sub_1A72B2AF0(v17);
    if (v19) {
      sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v18, (uint64_t)&v45);
    }
    else {
      memset(&v45, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v45, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v20 = swift_dynamicCast();
  if (v20)
  {
    Swift::Int v21 = v43;
  }
  else
  {
    Swift::Int v21 = 0;
    uint64_t v43 = 0;
  }
  char v22 = v20 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = swift_retain();
    unint64_t v24 = sub_1A72B2AF0(v23);
    if (v25) {
      sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v24, (uint64_t)&v45);
    }
    else {
      memset(&v45, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v45, 0, 32);
    swift_bridgeObjectRetain();
  }
  int v26 = swift_dynamicCast();
  if (v26)
  {
    Swift::Int v27 = v43;
  }
  else
  {
    Swift::Int v27 = 0;
    LOBYTE(v43) = 0;
  }
  char v28 = v26 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(void *)(v3 + 16))
  {
    uint64_t v29 = swift_retain();
    unint64_t v30 = sub_1A72B2AF0(v29);
    if (v31) {
      sub_1A72BEE98(*(void *)(v3 + 56) + 32 * v30, (uint64_t)&v45);
    }
    else {
      memset(&v45, 0, 32);
    }
    swift_release();
  }
  else
  {
    memset(&v45, 0, 32);
  }
  if (swift_dynamicCast()) {
    includeTitleVector.Swift::Int value = v43;
  }
  else {
    includeTitleVector.Swift::Int value = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  numOfIntentWords.Swift::Bool is_nil = v28;
  numOfIntentWords.Swift::Int value = v27;
  v33.value._object = v41;
  v33.value._uint64_t countAndFlagsBits = v42;
  v47.Swift::Int value = v39;
  v46.Swift::Int value = v40;
  v46.Swift::Bool is_nil = v11;
  v47.Swift::Bool is_nil = v16;
  v48.Swift::Int value = v21;
  v48.Swift::Bool is_nil = v22;
  REMSuggestedAttributesFeatureExtractor.Parameters.init(outputFileName:maxSampleCount:minimumSampleCount:randomSeed:numOfIntentWords:includeTitleVector:)(&v45, v33, v46, v47, v48, numOfIntentWords, includeTitleVector);
  object = v45.outputFileName._object;
  Swift::Bool v35 = v45.includeTitleVector;
  __n128 result = *(__n128 *)&v45.maxSampleCount;
  long long v37 = *(_OWORD *)&v45.randomSeed;
  *(void *)a2 = v45.outputFileName._countAndFlagsBits;
  *(void *)(a2 + 8) = object;
  *(__n128 *)(a2 + 16) = result;
  *(_OWORD *)(a2 + 32) = v37;
  *(unsigned char *)(a2 + 48) = v35;
  return result;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F46E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v15 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v12 = *(void *)(v1 + 40);
  uint64_t v13 = v8;
  v11[1] = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7495E38();
  sub_1A75741B0();
  char v22 = 0;
  uint64_t v9 = v16;
  sub_1A7573B10();
  if (!v9)
  {
    char v21 = 1;
    sub_1A7573B40();
    char v20 = 2;
    sub_1A7573B40();
    char v19 = 3;
    sub_1A7573B40();
    char v18 = 4;
    sub_1A7573B40();
    char v17 = 5;
    sub_1A7573B20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F46F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7495E38();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_1A7573A00();
  uint64_t v11 = v10;
  char v24 = 1;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1A7573A30();
  char v23 = 2;
  uint64_t v18 = sub_1A7573A30();
  char v22 = 3;
  uint64_t v17 = sub_1A7573A30();
  char v21 = 4;
  uint64_t v16 = sub_1A7573A30();
  char v20 = 5;
  char v13 = sub_1A7573A10();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  uint64_t v14 = v18;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v14;
  uint64_t v15 = v16;
  *(void *)(a2 + 32) = v17;
  *(void *)(a2 + 40) = v15;
  *(unsigned char *)(a2 + 48) = v13 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7495CDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesFeatureExtractor.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A7495CF4(void *a1)
{
  return REMSuggestedAttributesFeatureExtractor.Parameters.encode(to:)(a1);
}

uint64_t sub_1A7495D0C()
{
  return swift_getKeyPath();
}

id REMSuggestedAttributesFeatureExtractor.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMSuggestedAttributesFeatureExtractor.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMSuggestedAttributesFeatureExtractor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A7495E38()
{
  unint64_t result = qword_1E96F46F0;
  if (!qword_1E96F46F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F46F0);
  }
  return result;
}

unint64_t sub_1A7495E90()
{
  unint64_t result = qword_1E96F4700;
  if (!qword_1E96F4700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4700);
  }
  return result;
}

unint64_t sub_1A7495EE4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A7495F14();
  unint64_t result = sub_1A7495E38();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A7495F14()
{
  unint64_t result = qword_1E96F4708;
  if (!qword_1E96F4708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4708);
  }
  return result;
}

unint64_t sub_1A7495F6C()
{
  unint64_t result = qword_1E96F4710;
  if (!qword_1E96F4710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4710);
  }
  return result;
}

unint64_t sub_1A7495FC4()
{
  unint64_t result = qword_1E96F4718;
  if (!qword_1E96F4718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4718);
  }
  return result;
}

unint64_t sub_1A749601C()
{
  unint64_t result = qword_1E96F4720;
  if (!qword_1E96F4720)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F4728);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4720);
  }
  return result;
}

unint64_t sub_1A7496080(uint64_t a1)
{
  unint64_t result = sub_1A74960A8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A74960A8()
{
  unint64_t result = qword_1E96F4730;
  if (!qword_1E96F4730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4730);
  }
  return result;
}

unint64_t sub_1A749610C()
{
  unint64_t result = qword_1E96F4738;
  if (!qword_1E96F4738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4738);
  }
  return result;
}

uint64_t type metadata accessor for REMSuggestedAttributesFeatureExtractor()
{
  return self;
}

uint64_t destroy for REMSuggestedAttributesFeatureExtractor.Result()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19ReminderKitInternal38REMSuggestedAttributesFeatureExtractorC6ResultVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesFeatureExtractor.Result(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMSuggestedAttributesFeatureExtractor.Result(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesFeatureExtractor.Result()
{
  return &type metadata for REMSuggestedAttributesFeatureExtractor.Result;
}

uint64_t initializeWithCopy for REMSuggestedAttributesFeatureExtractor.Parameters(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesFeatureExtractor.Parameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for REMSuggestedAttributesFeatureExtractor.Parameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesFeatureExtractor.Parameters(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesFeatureExtractor.Parameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesFeatureExtractor.Parameters()
{
  return &type metadata for REMSuggestedAttributesFeatureExtractor.Parameters;
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74964D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributesFeatureExtractor.Result.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74965D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesFeatureExtractor.Result.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesFeatureExtractor.Result.CodingKeys;
}

unint64_t sub_1A7496614()
{
  unint64_t result = qword_1E96F4740;
  if (!qword_1E96F4740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4740);
  }
  return result;
}

unint64_t sub_1A749666C()
{
  unint64_t result = qword_1E96F4748;
  if (!qword_1E96F4748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4748);
  }
  return result;
}

unint64_t sub_1A74966C4()
{
  unint64_t result = qword_1E96F4750;
  if (!qword_1E96F4750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4750);
  }
  return result;
}

uint64_t sub_1A7496718(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5365727574616566 && a2 == 0xED0000676E697274)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t InitiallyEmptyCurrentValueSubject.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  InitiallyEmptyCurrentValueSubject.init()();
  return v0;
}

void *InitiallyEmptyCurrentValueSubject.init()()
{
  uint64_t v1 = *(void *)(*v0 + 80);
  uint64_t v2 = sub_1A7573210();
  MEMORY[0x1F4188790](v2);
  unsigned int v4 = (char *)&v6 - v3;
  sub_1A7572080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))(v4, 1, 1, v1);
  v0[2] = sub_1A7572090();
  return v0;
}

uint64_t InitiallyEmptyCurrentValueSubject.send(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = sub_1A7573210();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - v6, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v3);
  sub_1A7572070();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t InitiallyEmptyCurrentValueSubject.send(completion:)()
{
  return sub_1A7572050();
}

uint64_t InitiallyEmptyCurrentValueSubject.send(subscription:)()
{
  return sub_1A7572060();
}

uint64_t InitiallyEmptyCurrentValueSubject.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a3;
  uint64_t v17 = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 80);
  sub_1A7573210();
  uint64_t v7 = *(void *)(v5 + 88);
  sub_1A7572080();
  swift_getWitnessTable();
  uint64_t v8 = sub_1A7571F10();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v15 - v10;
  uint64_t v18 = v3[2];
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v6;
  v12[3] = v7;
  uint64_t v13 = v16;
  v12[4] = a2;
  v12[5] = v13;
  swift_retain();
  sub_1A75720F0();
  swift_release();
  swift_release();
  sub_1A7571F00();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A7496D04()
{
  return swift_deallocObject();
}

uint64_t sub_1A7496D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A7573210();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t InitiallyEmptyCurrentValueSubject.deinit()
{
  swift_release();
  return v0;
}

uint64_t InitiallyEmptyCurrentValueSubject.__deallocating_deinit()
{
  swift_release();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_1A7496DE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A7496E0C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_1A7496E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return InitiallyEmptyCurrentValueSubject.receive<A>(subscriber:)(a1, a2, a3);
}

uint64_t sub_1A7496E38()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InitiallyEmptyCurrentValueSubject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for InitiallyEmptyCurrentValueSubject(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InitiallyEmptyCurrentValueSubject);
}

uint64_t dispatch thunk of InitiallyEmptyCurrentValueSubject.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t Error.rem_errorDescription.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v31 - v8, v2, a1);
  uint64_t v11 = sub_1A7573D60();
  uint64_t v32 = v2;
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, a1);
  }
  else
  {
    uint64_t v12 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v9, a1);
  }
  uint64_t v14 = (void *)sub_1A7571840();

  id v15 = objc_msgSend(v14, sel_userInfo);
  uint64_t v16 = sub_1A75723F0();

  uint64_t v17 = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (v17 != 1)
  {
    if (!v17)
    {
      v10(v7, v32, a1);
      uint64_t v18 = sub_1A7572670();
LABEL_16:

      return v18;
    }
    goto LABEL_15;
  }
  id v19 = objc_msgSend(v14, sel_userInfo);
  uint64_t v20 = sub_1A75723F0();

  uint64_t v21 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  if (*(void *)(v20 + 16) && (unint64_t v23 = sub_1A72B2210(v21, v22), (v24 & 1) != 0))
  {
    sub_1A72BEE98(*(void *)(v20 + 56) + 32 * v23, (uint64_t)&v34);
  }
  else
  {
    long long v34 = 0u;
    long long v35 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v35 + 1))
  {
    sub_1A7315924((uint64_t)&v34);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    id v29 = objc_msgSend(v14, sel_description);
    uint64_t v18 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    goto LABEL_16;
  }
  id v25 = objc_msgSend(v14, sel_domain);
  uint64_t v26 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v28 = v27;

  *(void *)&long long v34 = v26;
  *((void *)&v34 + 1) = v28;
  sub_1A7572740();
  id v33 = objc_msgSend(v14, sel_code);
  sub_1A7573BC0();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  sub_1A7572740();

  swift_bridgeObjectRelease();
  return v34;
}

uint64_t Optional<A>.rem_errorDescription.getter(void *a1)
{
  if (!a1) {
    return 7104878;
  }
  swift_getErrorValue();
  id v2 = a1;
  uint64_t v3 = Error.rem_errorDescription.getter(v5);

  return v3;
}

BOOL Error.isREMError(withErrorCode:)(id a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, a2);
  uint64_t v8 = sub_1A7573D60();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);
  }
  else
  {
    uint64_t v9 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10, v6, a2);
  }
  uint64_t v11 = (void *)sub_1A7571840();

  id v12 = objc_msgSend(v11, sel_domain);
  uint64_t v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v15 = v14;

  if (v13 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v18 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {

      return 0;
    }
  }
  id v20 = objc_msgSend(v11, sel_code);

  return v20 == a1;
}

void CodableError.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (void *)sub_1A7571840();
  id v5 = objc_msgSend(v4, sel_domain);
  uint64_t v6 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v29 = v7;

  id v28 = objc_msgSend(v4, sel_code);
  id v8 = objc_msgSend(v4, sel_userInfo);
  uint64_t v9 = sub_1A75723F0();

  uint64_t v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  if (*(void *)(v9 + 16) && (unint64_t v12 = sub_1A72B2210(v10, v11), (v13 & 1) != 0))
  {
    sub_1A72BEE98(*(void *)(v9 + 56) + 32 * v12, (uint64_t)&v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v33 + 1))
    {
      int v14 = swift_dynamicCast();
      if (v14) {
        uint64_t v15 = v30;
      }
      else {
        uint64_t v15 = 0;
      }
      if (v14) {
        uint64_t v16 = v31;
      }
      else {
        uint64_t v16 = 0;
      }
      goto LABEL_12;
    }
  }
  else
  {
    long long v32 = 0u;
    long long v33 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1A7315924((uint64_t)&v32);
  uint64_t v15 = 0;
  uint64_t v16 = 0;
LABEL_12:
  id v17 = objc_msgSend(v4, sel_userInfo);
  uint64_t v18 = sub_1A75723F0();

  uint64_t v19 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  if (*(void *)(v18 + 16) && (unint64_t v21 = sub_1A72B2210(v19, v20), (v22 & 1) != 0))
  {
    sub_1A72BEE98(*(void *)(v18 + 56) + 32 * v21, (uint64_t)&v32);
  }
  else
  {
    long long v32 = 0u;
    long long v33 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v33 + 1))
  {
    sub_1A7315924((uint64_t)&v32);
    goto LABEL_20;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:
    uint64_t v26 = (uint64_t)v28;
    uint64_t v25 = v29;
    *(void *)&long long v32 = a1;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
    uint64_t v23 = sub_1A7572670();
    uint64_t v24 = v27;

    goto LABEL_21;
  }

  uint64_t v23 = v30;
  uint64_t v24 = v31;
  uint64_t v26 = (uint64_t)v28;
  uint64_t v25 = v29;
LABEL_21:
  *a2 = v6;
  a2[1] = v25;
  a2[2] = v26;
  a2[3] = v15;
  a2[4] = v16;
  a2[5] = v23;
  a2[6] = v24;
}

uint64_t CodableError.domain.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CodableError.errorCode.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t CodableError.localizedDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CodableError.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CodableError.errorUserInfo.getter()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = MEMORY[0x1E4FBC868];
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  if (v1)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v9 = v8;
    uint64_t v18 = v5;
    *(void *)&long long v17 = v6;
    *((void *)&v17 + 1) = v1;
    sub_1A72BEE44(&v17, v16);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A72D65D4(v16, v7, v9, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v3)
  {
    uint64_t v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v13 = v12;
    uint64_t v18 = v5;
    *(void *)&long long v17 = v2;
    *((void *)&v17 + 1) = v3;
    sub_1A72BEE44(&v17, v16);
    swift_bridgeObjectRetain();
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A72D65D4(v16, v11, v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_1A7497958()
{
  unint64_t result = 0x6E69616D6F64;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x646F43726F727265;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74979F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74984B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A7497A1C(uint64_t a1)
{
  unint64_t v2 = sub_1A7497FF0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7497A58(uint64_t a1)
{
  unint64_t v2 = sub_1A7497FF0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CodableError.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFD60);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[2];
  v15[4] = v1[3];
  v15[5] = v8;
  uint64_t v9 = v1[4];
  v15[2] = v1[5];
  void v15[3] = v9;
  v15[1] = v1[6];
  uint64_t v10 = a1[3];
  uint64_t v11 = a1;
  uint64_t v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_1A7497FF0();
  sub_1A75741B0();
  char v19 = 0;
  sub_1A7573B10();
  if (!v2)
  {
    char v18 = 1;
    sub_1A7573B40();
    char v17 = 2;
    sub_1A7573AC0();
    char v16 = 3;
    sub_1A7573AC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t CodableError.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFD58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7497FF0();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v9 = sub_1A7573A00();
  uint64_t v11 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1A7573A30();
  char v26 = 2;
  uint64_t v22 = sub_1A75739B0();
  uint64_t v23 = v13;
  char v25 = 3;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1A75739B0();
  uint64_t v16 = v15;
  char v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v21 = v14;
  v17(v8, v5);
  swift_bridgeObjectRetain();
  *a2 = v9;
  a2[1] = v11;
  uint64_t v18 = v23;
  uint64_t v19 = v22;
  a2[2] = v24;
  a2[3] = v19;
  uint64_t v20 = v21;
  a2[4] = v18;
  a2[5] = v20;
  a2[6] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7497F40(uint64_t a1)
{
  unint64_t v2 = sub_1A7498664();

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1A7497F7C(uint64_t a1)
{
  unint64_t v2 = sub_1A7498664();

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1A7497FC0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CodableError.init(from:)(a1, a2);
}

uint64_t sub_1A7497FD8(void *a1)
{
  return CodableError.encode(to:)(a1);
}

unint64_t sub_1A7497FF0()
{
  unint64_t result = qword_1EB701AA0;
  if (!qword_1EB701AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701AA0);
  }
  return result;
}

uint64_t destroy for CodableError()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CodableError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CodableError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CodableError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CodableError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableError()
{
  return &type metadata for CodableError;
}

unsigned char *storeEnumTagSinglePayload for CodableError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7498370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableError.CodingKeys()
{
  return &type metadata for CodableError.CodingKeys;
}

unint64_t sub_1A74983AC()
{
  unint64_t result = qword_1E96F4758;
  if (!qword_1E96F4758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4758);
  }
  return result;
}

unint64_t sub_1A7498404()
{
  unint64_t result = qword_1EB701AB0;
  if (!qword_1EB701AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701AB0);
  }
  return result;
}

unint64_t sub_1A749845C()
{
  unint64_t result = qword_1EB701AA8;
  if (!qword_1EB701AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701AA8);
  }
  return result;
}

uint64_t sub_1A74984B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A75A4030 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A4050)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1A7498664()
{
  unint64_t result = qword_1E96F4760;
  if (!qword_1E96F4760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4760);
  }
  return result;
}

ReminderKitInternal::REMMigrationResultState_optional __swiftcall REMMigrationResultState.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

unint64_t REMMigrationResultState.rawValue.getter()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x6E6964616F6C7075;
      break;
    case 7:
      unint64_t result = 0x6574656C706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74987FC(unsigned __int8 *a1, char *a2)
{
  return sub_1A7544174(*a1, *a2);
}

unint64_t sub_1A749880C()
{
  unint64_t result = qword_1E96F4768;
  if (!qword_1E96F4768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4768);
  }
  return result;
}

uint64_t sub_1A7498860()
{
  return sub_1A7503648();
}

uint64_t sub_1A749886C()
{
  return sub_1A75031D8();
}

uint64_t sub_1A7498874()
{
  return sub_1A7503648();
}

ReminderKitInternal::REMMigrationResultState_optional sub_1A749887C(Swift::String *a1)
{
  return REMMigrationResultState.init(rawValue:)(*a1);
}

unint64_t sub_1A7498888@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = REMMigrationResultState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for REMMigrationResultState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A749897CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMMigrationResultState()
{
  return &type metadata for REMMigrationResultState;
}

uint64_t _sSo17REMAccountStorageC19ReminderKitInternalE25loggable_supportedVersionSSvg_0()
{
  id v0 = (id)rem_loggableSupportedVersionFrom();
  uint64_t v1 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v1;
}

uint64_t sub_1A7498A20()
{
  id v0 = (id)rem_loggableSupportedVersionFrom();
  uint64_t v1 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v1;
}

uint64_t dispatch thunk of REMSupportedVersionLoggable.loggable_supportedVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A7498A84()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F4770);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F4770);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t static REMFileDigester.sha512Sum(url:)(uint64_t a1)
{
  uint64_t result = _s19ReminderKitInternal15REMFileDigesterO21sha512SumWithFileSize3urlSS_SitSg10Foundation3URLV_tFZ_0(a1);
  if (!v2) {
    return 0;
  }
  return result;
}

id sub_1A7498B70(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)sub_1A75718E0();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForReadingFromURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_1A75719C0();
    unsigned int v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_1A7571850();

    swift_willThrow();
    uint64_t v9 = sub_1A75719C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

void sub_1A7498CC8(void *a1)
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  v6[0] = 0;
  unsigned int v1 = objc_msgSend(a1, sel_closeAndReturnError_, v6);
  id v2 = v6[0];
  if (v1)
  {
    id v3 = v2;
  }
  else
  {
    id v4 = v6[0];
    uint64_t v5 = (void *)sub_1A7571850();

    swift_willThrow();
  }
}

uint64_t sub_1A7498DA8()
{
  sub_1A7572300();
  sub_1A7499BFC(&qword_1EB700FA8, MEMORY[0x1E4F24FB8]);
  uint64_t result = sub_1A7572340();
  uint64_t v2 = *(void *)(result + 16);
  if (v1 == v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v1 >= v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v3 = v1;
  if (v1 < 0) {
    goto LABEL_14;
  }
  if (!v2)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  sub_1A7499C44();
  do
  {
    sub_1A7572820();
    if (sub_1A7572700() <= 1)
    {
      sub_1A7572740();
      swift_bridgeObjectRelease();
    }
    sub_1A7572740();
    ++v3;
    swift_bridgeObjectRelease();
  }
  while (v2 != v3);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _s19ReminderKitInternal15REMFileDigesterO21sha512SumWithFileSize3urlSS_SitSg10Foundation3URLV_tFZ_0(uint64_t a1)
{
  v80[2] = *MEMORY[0x1E4F143B8];
  uint64_t v69 = sub_1A7572300();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v3 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A7572380();
  uint64_t v71 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A75719C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v74 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v63 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v63 - v14;
  sub_1A7571950();
  sub_1A7499BA8();
  unint64_t v75 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v76 = v8 + 16;
  v75(v15, a1, v7);
  id v16 = sub_1A7498B70((uint64_t)v15);
  BOOL v64 = v3;
  uint64_t v65 = v13;
  uint64_t v66 = v8;
  uint64_t v67 = v7;
  uint64_t v72 = a1;
  id v30 = v16;
  uint64_t v31 = sub_1A7572370();
  long long v32 = (void *)MEMORY[0x1AD0CC790](v31);
  uint64_t v33 = sub_1A7572F90();
  id v73 = v30;
  uint64_t v74 = v6;
  uint64_t v34 = v33;
  unint64_t v36 = v35;
  uint64_t v37 = (uint64_t)v6;
  uint64_t v38 = 0;
  uint64_t v39 = v4;
  uint64_t v70 = v4;
  while (2)
  {
    if (v36 >> 60 == 15)
    {
      uint64_t v62 = v64;
      sub_1A7572360();
      uint64_t v60 = sub_1A7498DA8();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v62, v69);
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v37, v39);
      sub_1A7498CC8(v30);

      goto LABEL_30;
    }
    switch(v36 >> 62)
    {
      case 1uLL:
        uint64_t v39 = (int)v34;
        uint64_t v37 = (v34 >> 32) - (int)v34;
        if (v34 >> 32 < (int)v34)
        {
          __break(1u);
          goto LABEL_34;
        }
        sub_1A72E3408(v34, v36);
        uint64_t v41 = sub_1A75715E0();
        if (v41)
        {
          uint64_t v42 = v41;
          uint64_t v43 = sub_1A7571600();
          if (__OFSUB__((int)v34, v43)) {
            goto LABEL_37;
          }
          id v30 = (id)(v42 + (int)v34 - v43);
        }
        else
        {
          id v30 = 0;
        }
        sub_1A75715F0();
        sub_1A7499BFC(&qword_1EB700FB0, MEMORY[0x1E4F25190]);
        uint64_t v37 = (uint64_t)v74;
        uint64_t v39 = v70;
        sub_1A75722D0();
        sub_1A7360424(v34, v36);
        sub_1A7360424(v34, v36);
        if (!__OFSUB__(HIDWORD(v34), v34))
        {
          uint64_t v40 = HIDWORD(v34) - (int)v34;
          goto LABEL_22;
        }
        goto LABEL_36;
      case 2uLL:
        id v30 = (id)(v36 & 0x3FFFFFFFFFFFFFFFLL);
        uint64_t v37 = *(void *)(v34 + 16);
        uint64_t v39 = *(void *)(v34 + 24);
        sub_1A7499BE8(v34, v36);
        swift_retain();
        swift_retain();
        if (sub_1A75715E0() && __OFSUB__(v37, sub_1A7571600())) {
          goto LABEL_38;
        }
        BOOL v44 = __OFSUB__(v39, v37);
        v39 -= v37;
        if (!v44)
        {
          sub_1A75715F0();
          sub_1A7499BFC(&qword_1EB700FB0, MEMORY[0x1E4F25190]);
          uint64_t v37 = (uint64_t)v74;
          uint64_t v39 = v70;
          sub_1A75722D0();
          swift_release();
          swift_release();
          sub_1A7360424(v34, v36);
          uint64_t v46 = *(void *)(v34 + 16);
          uint64_t v45 = *(void *)(v34 + 24);
          sub_1A7360424(v34, v36);
          BOOL v44 = __OFSUB__(v45, v46);
          uint64_t v40 = v45 - v46;
          if (v44) {
            goto LABEL_35;
          }
LABEL_22:
          id v30 = v73;
LABEL_23:
          BOOL v44 = __OFADD__(v38, v40);
          v38 += v40;
          if (v44)
          {
            __break(1u);
            swift_once();
            uint64_t v17 = sub_1A7571E90();
            __swift_project_value_buffer(v17, (uint64_t)qword_1E96F4770);
            uint64_t v18 = v74;
            v75(v74, v37, (uint64_t)v32);
            id v19 = 0;
            id v20 = 0;
            uint64_t v21 = sub_1A7571E80();
            os_log_type_t v22 = sub_1A7572FD0();
            if (os_log_type_enabled(v21, v22))
            {
              uint64_t v23 = swift_slowAlloc();
              uint64_t v24 = swift_slowAlloc();
              uint64_t v72 = v37;
              uint64_t v76 = v24;
              v80[0] = v24;
              *(_DWORD *)uint64_t v23 = 136315394;
              sub_1A7499BFC(&qword_1E96F2CE8, MEMORY[0x1E4F276F0]);
              uint64_t v25 = sub_1A7573BC0();
              uint64_t v79 = sub_1A72D1730(v25, v26, v80);
              sub_1A7573250();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, void *))(v36 + 8))(v18, v32);
              *(_WORD *)(v23 + 12) = 2082;
              swift_getErrorValue();
              uint64_t v27 = Error.rem_errorDescription.getter(v78);
              uint64_t v79 = sub_1A72D1730(v27, v28, v80);
              sub_1A7573250();
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_1A72A1000, v21, v22, "REMFileDigester: Failed opening file for reading at path %s {error: %{public}s}", (uint8_t *)v23, 0x16u);
              uint64_t v29 = v76;
              swift_arrayDestroy();
              MEMORY[0x1AD0CD330](v29, -1, -1);
              MEMORY[0x1AD0CD330](v23, -1, -1);
            }
            else
            {

              (*(void (**)(char *, void *))(v36 + 8))(v18, v32);
            }
            goto LABEL_29;
          }
          long long v32 = (void *)MEMORY[0x1AD0CC790]();
          uint64_t v34 = sub_1A7572F90();
          unint64_t v36 = v47;
          continue;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        swift_once();
        uint64_t v48 = sub_1A7571E90();
        __swift_project_value_buffer(v48, (uint64_t)qword_1E96F4770);
        uint64_t v49 = v67;
        v75((char *)v32, v37, v67);
        id v50 = 0;
        id v51 = 0;
        uint64_t v52 = sub_1A7571E80();
        os_log_type_t v53 = sub_1A7572FD0();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = swift_slowAlloc();
          uint64_t v76 = swift_slowAlloc();
          v80[0] = v76;
          *(_DWORD *)uint64_t v54 = 136315394;
          sub_1A7499BFC(&qword_1E96F2CE8, MEMORY[0x1E4F276F0]);
          uint64_t v55 = sub_1A7573BC0();
          uint64_t v79 = sub_1A72D1730(v55, v56, v80);
          sub_1A7573250();
          swift_bridgeObjectRelease();
          (*(void (**)(void *, uint64_t))(v66 + 8))(v32, v49);
          *(_WORD *)(v54 + 12) = 2082;
          swift_getErrorValue();
          uint64_t v57 = Error.rem_errorDescription.getter(v77);
          uint64_t v79 = sub_1A72D1730(v57, v58, v80);
          id v30 = v73;
          sub_1A7573250();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1A72A1000, v52, v53, "REMFileDigester: Failed while reading file at url %s {error: %{public}s}", (uint8_t *)v54, 0x16u);
          uint64_t v59 = v76;
          swift_arrayDestroy();
          MEMORY[0x1AD0CD330](v59, -1, -1);
          MEMORY[0x1AD0CD330](v54, -1, -1);
        }
        else
        {

          (*(void (**)(void *, uint64_t))(v66 + 8))(v32, v49);
        }
        (*(void (**)(char *, uint64_t))(v71 + 8))(v74, v39);
        sub_1A7498CC8(v30);

LABEL_29:
        uint64_t v60 = 0;
LABEL_30:
        sub_1A7571930();
        return v60;
      case 3uLL:
        sub_1A7499BFC(&qword_1EB700FB0, MEMORY[0x1E4F25190]);
        memset(v80, 0, 14);
        sub_1A75722D0();
        sub_1A7360424(v34, v36);
        sub_1A7360424(v34, v36);
        uint64_t v40 = 0;
        goto LABEL_23;
      default:
        v80[0] = v34;
        LOWORD(v80[1]) = v36;
        BYTE2(v80[1]) = BYTE2(v36);
        BYTE3(v80[1]) = BYTE3(v36);
        uint64_t v40 = BYTE6(v36);
        BYTE4(v80[1]) = BYTE4(v36);
        BYTE5(v80[1]) = BYTE5(v36);
        sub_1A7499BFC(&qword_1EB700FB0, MEMORY[0x1E4F25190]);
        sub_1A75722D0();
        sub_1A7360424(v34, v36);
        sub_1A7360424(v34, v36);
        goto LABEL_23;
    }
  }
}

ValueMetadata *type metadata accessor for REMFileDigester()
{
  return &type metadata for REMFileDigester;
}

unint64_t sub_1A7499BA8()
{
  unint64_t result = qword_1EB700FF0;
  if (!qword_1EB700FF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB700FF0);
  }
  return result;
}

uint64_t sub_1A7499BE8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A72E3408(a1, a2);
  }
  return a1;
}

uint64_t sub_1A7499BFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A7499C44()
{
  unint64_t result = qword_1EB7010F8;
  if (!qword_1EB7010F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7010F8);
  }
  return result;
}

uint64_t Bool.yesno.getter(char a1)
{
  if (a1) {
    return 7562617;
  }
  else {
    return 28526;
  }
}

uint64_t sub_1A7499CBC()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F4788);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F4788);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t OrderedDictionary.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A7572A80();
  swift_getTupleTypeMetadata2();
  sub_1A7572A80();
  uint64_t result = sub_1A7572430();
  *a1 = v2;
  a1[1] = result;
  return result;
}

void OrderedDictionary.subscript.getter()
{
}

void sub_1A7499E1C()
{
}

uint64_t sub_1A7499E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + a3 - 24);
  uint64_t v7 = sub_1A7573210();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v17 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v17 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v17 - v12, a3, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  uint64_t v15 = type metadata accessor for OrderedDictionary();
  return OrderedDictionary.subscript.setter(v11, (uint64_t)v13, v15);
}

uint64_t OrderedDictionary.subscript.setter(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = sub_1A7573210();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v23 = a1;
  v18(v14, a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v6) == 1)
  {
    id v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v14, v7);
    OrderedDictionary.removeValue(forKey:)(a2, a3, v11);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8))(a2);
    v19(v23, v7);
    return ((uint64_t (*)(char *, uint64_t))v19)(v11, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, v6);
    OrderedDictionary.updateValue(_:forKey:)((uint64_t)v17, a2, a3, (uint64_t)v11);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8))(a2);
    uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    v21(v23, v7);
    v21(v11, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v6);
  }
}

uint64_t OrderedDictionary.updateValue(_:forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v40 = a4;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v39 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 + 24);
  uint64_t v12 = sub_1A7573210();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v34 = v4;
  uint64_t v19 = *(void *)(v4 + 8);
  uint64_t v20 = *(void *)(a3 + 32);
  uint64_t v38 = a2;
  uint64_t v35 = v20;
  MEMORY[0x1AD0CA6D0](a2, v19, v7, v11);
  uint64_t v21 = *(void *)(v11 - 8);
  int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v11);
  uint64_t v23 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v37 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if (v22 == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    uint64_t v24 = *v23;
    uint64_t v26 = v38;
    uint64_t v25 = v39;
    (*v23)(v39, v38, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v16, v36, v11);
    uint64_t v27 = *v37;
    (*v37)((uint64_t)v16, 0, 1, v11);
    sub_1A75724A0();
    sub_1A75724E0();
    v24(v25, v26, v7);
    sub_1A7572B30();
    sub_1A7572AE0();
    return v27(v40, 1, 1, v11);
  }
  else
  {
    id v30 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
    uint64_t v29 = v21 + 32;
    uint64_t v31 = v40;
    v30(v40, v18, v11);
    (*v23)(v39, v38, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v29 - 16))(v16, v36, v11);
    long long v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v29 + 24);
    v32(v16, 0, 1, v11);
    sub_1A75724A0();
    sub_1A75724E0();
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v32)(v31, 0, 1, v11);
  }
}

uint64_t OrderedDictionary.removeValue(forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v46 = a3;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v44 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 24);
  uint64_t v11 = sub_1A7573210();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v38 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v45 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a1;
  uint64_t v43 = v3;
  uint64_t v20 = v3[1];
  uint64_t v21 = *(void *)(a2 + 32);
  uint64_t v22 = a1;
  uint64_t v24 = v23;
  uint64_t v41 = v6;
  MEMORY[0x1AD0CA6D0](v22, v20, v6, v10, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v18, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v46, 1, 1, v10);
  }
  else
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v38(v45, v18, v10);
    uint64_t v26 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v8, v42, v41);
    uint64_t v39 = v24;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    v27(v15, 1, 1, v10);
    sub_1A75724A0();
    uint64_t v40 = v8;
    sub_1A75724E0();
    uint64_t v47 = *v43;
    sub_1A7572B30();
    swift_getWitnessTable();
    sub_1A7572E50();
    if (v48)
    {
      unint64_t v28 = v45;
      if (qword_1E96F08C0 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1A7571E90();
      __swift_project_value_buffer(v29, (uint64_t)qword_1E96F4788);
      id v30 = sub_1A7571E80();
      os_log_type_t v31 = sub_1A7572FE0();
      BOOL v32 = os_log_type_enabled(v30, v31);
      uint64_t v33 = v46;
      uint64_t v34 = v39;
      if (v32)
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_1A72A1000, v30, v31, "OrderedDictionary array dictionary inconsistent", v35, 2u);
        MEMORY[0x1AD0CD330](v35, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v10);
      return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v27)(v33, 1, 1, v10);
    }
    else
    {
      uint64_t v36 = v40;
      sub_1A7572AF0();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v36, v26);
      uint64_t v37 = v46;
      v38(v46, v45, v10);
      return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v27)(v37, 0, 1, v10);
    }
  }
}

void (*OrderedDictionary.subscript.modify(void *a1, uint64_t a2, void *a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x50uLL);
  *a1 = v7;
  *uint64_t v7 = a3;
  v7[1] = v3;
  uint64_t v8 = a3[3];
  uint64_t v9 = sub_1A7573210();
  v7[2] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v7[3] = v10;
  size_t v11 = *(void *)(v10 + 64);
  v7[4] = malloc(v11);
  uint64_t v12 = malloc(v11);
  uint64_t v13 = a3[2];
  v7[5] = v12;
  v7[6] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14;
  v7[7] = v14;
  size_t v16 = *(void *)(v14 + 64);
  v7[8] = malloc(v16);
  v7[9] = malloc(v16);
  (*(void (**)(void))(v15 + 16))();
  MEMORY[0x1AD0CA6D0](a2, *(void *)(v3 + 8), v13, v8, a3[4]);
  return sub_1A749ACE8;
}

void sub_1A749ACE8(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[8];
  uint64_t v4 = (void *)(*a1)[9];
  if (a2)
  {
    uint64_t v5 = v2[7];
    uint64_t v11 = v2[6];
    uint64_t v7 = (char *)v2[4];
    uint64_t v6 = (char *)v2[5];
    uint64_t v8 = v2[2];
    uint64_t v9 = v2[3];
    uint64_t v10 = *v2;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v6, v8);
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v3, v4, v11);
    OrderedDictionary.subscript.setter(v7, (uint64_t)v3, v10);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    uint64_t v7 = (char *)v2[4];
    uint64_t v6 = (char *)v2[5];
    OrderedDictionary.subscript.setter(v6, (uint64_t)v4, *v2);
  }
  free(v4);
  free(v3);
  free(v6);
  free(v7);

  free(v2);
}

uint64_t OrderedDictionary.values.getter()
{
  sub_1A7572B30();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v0 = sub_1A75728B0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A749AEC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_1A7573210();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v23 - v14;
  MEMORY[0x1AD0CA6D0](a1, a2, a3, a4, a5);
  uint64_t v16 = *(void *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (qword_1E96F08C0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1A7571E90();
    __swift_project_value_buffer(v17, (uint64_t)qword_1E96F4788);
    uint64_t v18 = sub_1A7571E80();
    os_log_type_t v19 = sub_1A7572FE0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1A72A1000, v18, v19, "OrderedDictionary unknown key", v20, 2u);
      MEMORY[0x1AD0CD330](v20, -1, -1);
    }

    uint64_t v21 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a6, v15, a4);
    uint64_t v21 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a6, v21, 1, a4);
}

Swift::Void __swiftcall OrderedDictionary.removeAll()()
{
}

uint64_t OrderedDictionary.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v40 = sub_1A7573210();
  BOOL v32 = *(void (***)(uint64_t, uint64_t))(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v39 = (uint64_t)&v28 - v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v28 - v16;
  uint64_t v41 = a4;
  OrderedDictionary.init()(&v42);
  uint64_t v18 = v42;
  uint64_t v19 = v43;
  uint64_t v44 = v42;
  uint64_t v45 = v43;
  if (MEMORY[0x1AD0CAD00](a1, TupleTypeMetadata2))
  {
    id v30 = a5;
    uint64_t v20 = 0;
    uint64_t v35 = &v17[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v36 = a2;
    uint64_t v37 = (void (**)(char *, uint64_t *, uint64_t))(v12 + 16);
    uint64_t v38 = v17;
    uint64_t v33 = a3 - 8;
    uint64_t v34 = a2 - 8;
    os_log_type_t v31 = (void (**)(char *, uint64_t))(v12 + 8);
    ++v32;
    while (1)
    {
      char v21 = sub_1A7572AA0();
      sub_1A7572A50();
      if (v21)
      {
        uint64_t v22 = v38;
        (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v38, a1+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v20, TupleTypeMetadata2);
        uint64_t v23 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t result = sub_1A75735F0();
        uint64_t v22 = v38;
        if (v29 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v42 = result;
        (*v37)(v38, &v42, TupleTypeMetadata2);
        swift_unknownObjectRelease();
        uint64_t v23 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_10:
          __break(1u);
LABEL_11:
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v18 = v44;
          uint64_t v19 = v45;
          a5 = v30;
          goto LABEL_13;
        }
      }
      uint64_t v24 = (uint64_t)&v15[*(int *)(TupleTypeMetadata2 + 48)];
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v15, v22, v36);
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 32))(v24, v35, a3);
      uint64_t v25 = type metadata accessor for OrderedDictionary();
      uint64_t v26 = v39;
      OrderedDictionary.updateValue(_:forKey:)(v24, (uint64_t)v15, v25, v39);
      (*v32)(v26, v40);
      (*v31)(v15, TupleTypeMetadata2);
      ++v20;
      if (v23 == MEMORY[0x1AD0CAD00](a1, TupleTypeMetadata2)) {
        goto LABEL_11;
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_13:
  *a5 = v18;
  a5[1] = v19;
  return result;
}

uint64_t sub_1A749B544@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return OrderedDictionary.init(dictionaryLiteral:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t OrderedDictionary.description.getter()
{
  return 2651;
}

void sub_1A749B694(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X8>)
{
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v10 = sub_1A7573210();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v27 - v13;
  uint64_t v15 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[1] = a1;
  MEMORY[0x1AD0CA6D0](a1, a2, a3, a4, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a4) == 1)
  {
    uint64_t v18 = v29;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    if (qword_1E96F08C0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1A7571E90();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E96F4788);
    uint64_t v20 = sub_1A7571E80();
    os_log_type_t v21 = sub_1A7572FE0();
    uint64_t v22 = v18;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1A72A1000, v20, v21, "OrderedDictionary unknown key", v23, 2u);
      MEMORY[0x1AD0CD330](v23, -1, -1);
    }

    void *v22 = 0;
    v22[1] = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, a4);
    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    sub_1A7573D70();
    sub_1A7572740();
    sub_1A7573D70();
    uint64_t v24 = v30;
    unint64_t v25 = v31;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, a4);
    uint64_t v26 = v29;
    *uint64_t v29 = v24;
    v26[1] = v25;
  }
}

uint64_t OrderedDictionary.startIndex.getter()
{
  return 0;
}

void OrderedDictionary.endIndex.getter()
{
}

void OrderedDictionary.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v23 = a2;
  uint64_t v7 = sub_1A7571E90();
  uint64_t v22 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a4[3];
  uint64_t v11 = sub_1A7573210();
  uint64_t v21 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = *(void *)(v4 + 8);
  uint64_t v15 = a4[2];
  sub_1A7572B70();
  MEMORY[0x1AD0CA6D0](a1, v14, v15, v10, a4[4]);
  uint64_t v16 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v10) == 1)
  {
    uint64_t v17 = v22;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v11);
    if (qword_1E96F08C0 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v7, (uint64_t)qword_1E96F4788);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v9, v18, v7);
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1A72B0944(MEMORY[0x1E4FBC860]);
    sub_1A72B0944(v19);
    sub_1A73A67DC((uint64_t)"OrderedDictionary unknown key", 29, 2);
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v23, v13, v10);
  }
}

uint64_t sub_1A749BC38(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B0](a1, a2, WitnessTable, v5);
}

void *sub_1A749BCA8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A749C2AC(a1, a2, a3, MEMORY[0x1E4FBB618]);
}

uint64_t sub_1A749BCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A749BD44()
{
  swift_getWitnessTable();

  return sub_1A7572D30();
}

uint64_t sub_1A749BDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

void sub_1A749BE3C()
{
}

uint64_t sub_1A749BE54(uint64_t result)
{
  void *v1 = result;
  return result;
}

void (*sub_1A749BE64(uint64_t **a1, uint64_t *a2, void *a3))(uint64_t *a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t *)malloc(0x40uLL);
  *a1 = v6;
  uint64_t v8 = a3[2];
  uint64_t v7 = a3[3];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6[4] = TupleTypeMetadata2;
  uint64_t v10 = *(void *)(TupleTypeMetadata2 - 8);
  v6[5] = v10;
  uint64_t v11 = (char *)malloc(*(void *)(v10 + 64));
  void v6[6] = (uint64_t)v11;
  uint64_t v12 = sub_1A749C048(v6, *a2, a3);
  uint64_t v14 = v13;
  v6[7] = (uint64_t)v12;
  (*(void (**)(char *))(*(void *)(v8 - 8) + 16))(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(&v11[*(int *)(TupleTypeMetadata2 + 48)], v14, v7);
  return sub_1A749BFD0;
}

void sub_1A749BFD0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  (*(void (**)(void, void))(*(void *)(*a1 + 40) + 8))(*(void *)(*a1 + 48), *(void *)(*a1 + 32));
  uint64_t v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);

  free((void *)v3);
}

void (*sub_1A749C048(uint64_t *a1, uint64_t a2, void *a3))(void *a1)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  uint64_t v7 = *(void *)(TupleTypeMetadata2 - 8);
  a1[1] = v7;
  uint64_t v8 = malloc(*(void *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  OrderedDictionary.subscript.getter((uint64_t)v8, (uint64_t)v8 + *(int *)(TupleTypeMetadata2 + 48), a2, a3);
  return sub_1A7428CA8;
}

uint64_t sub_1A749C12C()
{
  swift_getWitnessTable();

  return sub_1A7572D70();
}

uint64_t sub_1A749C1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A749C7F8(a1, a2, a3, a4, MEMORY[0x1E4FBB6A0], MEMORY[0x1E4FBAFC8]);
}

uint64_t sub_1A749C1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A749C7F8(a1, a2, a3, a4, MEMORY[0x1E4FBB010], MEMORY[0x1E4FBAFD8]);
}

uint64_t sub_1A749C224(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842A8](a1, a2, WitnessTable, v5);
}

void *sub_1A749C294(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A749C2AC(a1, a2, a3, MEMORY[0x1E4FBB610]);
}

void *sub_1A749C2AC(void *a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, void))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = a4(&v9, a1, a2, WitnessTable, MEMORY[0x1E4FBB590]);
  *a1 = v9;
  return result;
}

uint64_t sub_1A749C324(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1A749C378()
{
  swift_getWitnessTable();
  uint64_t v0 = sub_1A749CA68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A749C3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A749AEC0(a1, v2[6], v2[2], v2[3], v2[4], a2);
}

uint64_t type metadata accessor for OrderedDictionary()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1A749C424(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1A749B694(a1, v2[6], v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1A749C448()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A749C464()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A749C4C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A749C4E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A749C548()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A749C56C()
{
  return 24;
}

__n128 sub_1A749C578(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1A749C58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1A749C594(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_1A7572F20();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_1A75725A0();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_1A75725A0();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1A749C7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A749C7F8(a1, a2, a3, a4, MEMORY[0x1E4FBB010], MEMORY[0x1E4FBAFD8]);
}

uint64_t sub_1A749C7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A749C7F8(a1, a2, a3, a4, MEMORY[0x1E4FBB6A0], MEMORY[0x1E4FBAFC8]);
}

uint64_t sub_1A749C7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v22 - v17;
  char v19 = sub_1A75725A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t NSManagedObjectContext.rem_performAndWait<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v21 = a4;
  uint64_t v22 = sub_1A7573210();
  uint64_t v9 = *(void *)(v22 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v22);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))((char *)&v21 - v13, 1, 1, a3);
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = a3;
  void v16[3] = v14;
  v16[4] = a1;
  v16[5] = a2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A749CE8C;
  *(void *)(v17 + 24) = v16;
  aBlock[4] = sub_1A72C9D1C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A72E36EC;
  aBlock[3] = &block_descriptor_15;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performBlockAndWait_, v18);
  _Block_release(v18);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v22;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v22);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, a3);
    if (result != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v21, v12, a3);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v20);
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void aBlock[8];

  uint64_t v22 = a2;
  uint64_t v21 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v6 = sub_1A7574170();
  uint64_t v7 = sub_1A7573210();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))((char *)&v20 - v12, 1, 1, v6);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a3;
  void v15[3] = v13;
  uint64_t v16 = v22;
  v15[4] = a1;
  v15[5] = v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A749D350;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A7329554;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A72E36EC;
  aBlock[3] = &block_descriptor_13_1;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend((id)aBlock[7], sel_performBlockAndWait_, v18);
  _Block_release(v18);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v18)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v6);
    if (result != 1)
    {
      sub_1A7373F9C(v6, (uint64_t)aBlock, v21);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A749CD5C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1A7573210();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v13 - v10;
  a2(v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(v11, 0, 1, a4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(a1, v11, v7);
}

uint64_t sub_1A749CE7C()
{
  return swift_deallocObject();
}

uint64_t sub_1A749CE8C()
{
  return sub_1A749CD5C(*(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 16));
}

uint64_t sub_1A749CE98()
{
  return swift_deallocObject();
}

uint64_t sub_1A749D1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v8 = sub_1A7574170();
  uint64_t v9 = sub_1A7573210();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v14[-v11];
  uint64_t v15 = a4;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  sub_1A7374474((void (*)(unsigned char *))sub_1A749D36C, (uint64_t)&v14[-v11]);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v12, 0, 1, v8);
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v10 + 40))(a1, v12, v9);
}

uint64_t sub_1A749D340()
{
  return swift_deallocObject();
}

uint64_t sub_1A749D350()
{
  return sub_1A749D1BC(v0[3], v0[4], v0[5], v0[2]);
}

uint64_t sub_1A749D35C()
{
  return swift_deallocObject();
}

uint64_t sub_1A749D36C(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 24))();
  if (v2) {
    *a1 = v2;
  }
  return result;
}

uint64_t static REMRemindersListDataView.fetchCustomSmartList(store:smartList:sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:shouldFetchManualOrderingID:diffingAgainst:)@<X0>(void *a1@<X0>, void *a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, char *a7@<X6>, int a8@<W7>, void *a9@<X8>, uint64_t a10)
{
  uint64_t v79 = a1;
  LODWORD(v78) = a8;
  LODWORD(v77) = a5;
  uint64_t v76 = a9;
  *((void *)&v78 + 1) = a10;
  uint64_t v15 = type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters(0);
  uint64_t v16 = (int *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a3) = *a3;
  char v19 = *a7;
  id v20 = objc_allocWithZone((Class)type metadata accessor for REMSmartList_Codable());
  uint64_t v21 = a2;
  id v22 = REMSmartList_Codable.init(_:)(v21);
  sub_1A74BE75C(a4, (uint64_t)&v18[v16[8]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A74BE75C(a6, (uint64_t)&v18[v16[10]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *(void *)uint64_t v18 = v22;
  v18[8] = (char)a3;
  v18[v16[9]] = v77;
  v18[v16[11]] = v19;
  v18[v16[12]] = v78;
  id v23 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation());
  id v24 = objc_msgSend(v23, sel_initWithFetchResultTokenToDiffAgainst_, *((void *)&v78 + 1));
  uint64_t v25 = v80;
  sub_1A72F4028((uint64_t)v24, (uint64_t)v18, (uint64_t)&v88);
  if (v25)
  {

    return sub_1A74BE86C((uint64_t)v18, type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters);
  }
  else
  {
    unint64_t v75 = v21;
    uint64_t v72 = 0;

    v81[0] = v88;
    v81[1] = v89;
    long long v85 = v94;
    long long v86 = v95;
    id v87 = v96;
    v81[2] = v90;
    long long v82 = v91;
    long long v83 = v92;
    long long v84 = v93;
    uint64_t v70 = v89;
    uint64_t v71 = *((void *)&v88 + 1);
    int v68 = BYTE9(v89);
    int v69 = BYTE8(v89);
    long long v27 = v90;
    uint64_t v28 = (void *)*((void *)&v93 + 1);
    long long v29 = v94;
    long long v30 = v95;
    uint64_t v31 = v88;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v80 = *((void *)&v27 + 1);
    swift_bridgeObjectRetain();
    id v32 = v28;
    uint64_t v79 = (void *)v29;
    long long v78 = v30;
    sub_1A7315C10((void *)v29);
    if (qword_1EB704BE8 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1A7571E90();
    uint64_t v65 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB702F90);
    uint64_t v74 = v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v77 = v27;
    swift_bridgeObjectRetain();
    unint64_t v75 = v32;
    uint64_t v34 = v79;
    sub_1A7315C10(v79);
    uint64_t v66 = v74;
    uint64_t v67 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v74 = v75;
    sub_1A7315C10(v34);
    uint64_t v35 = sub_1A7571E80();
    os_log_type_t v36 = sub_1A7572FF0();
    int v37 = v36;
    unint64_t v75 = v35;
    BOOL v38 = os_log_type_enabled(v35, v36);
    uint64_t v73 = *((void *)&v29 + 1);
    if (v38)
    {
      uint64_t v39 = swift_slowAlloc();
      LODWORD(v65) = v37;
      uint64_t v40 = v39;
      uint64_t v41 = (void *)swift_slowAlloc();
      BOOL v64 = v41;
      *(_DWORD *)uint64_t v40 = 138412546;
      uint64_t v42 = v66;
      id v43 = [v66 objectID];
      id v97 = v43;
      uint64_t v63 = &v98;
      sub_1A7573250();
      *uint64_t v41 = v43;

      *(_WORD *)(v40 + 12) = 2048;
      uint64_t v66 = (v40 + 14);
      uint64_t v44 = v67;
      uint64_t v62 = *(void **)(v67 + 16);
      uint64_t v45 = v74;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A7315D30(v79);
      id v97 = v62;
      sub_1A7573250();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v46 = v44;
      swift_bridgeObjectRelease();
      uint64_t v47 = v79;
      sub_1A7315D30(v79);
      _os_log_impl(&dword_1A72A1000, v75, (os_log_type_t)v65, "DATAVIEW RESULT {name: REMRemindersListDataView_CustomSmartListInvocation, smartList.objectID: %@, reminder.count: %ld}", (uint8_t *)v40, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      char v48 = v64;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v48, -1, -1);
      MEMORY[0x1AD0CD330](v40, -1, -1);
      uint64_t v49 = v47;
    }
    else
    {
      id v50 = v74;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v46 = v67;
      swift_bridgeObjectRelease();
      uint64_t v49 = v79;
      sub_1A7315D30(v79);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1A7315D30(v49);
      id v51 = v66;

      unint64_t v75 = v51;
    }

    sub_1A74BE86C((uint64_t)v18, type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters);
    long long v52 = v82;
    long long v53 = v83;
    uint64_t v54 = v84;
    id v55 = v87;
    id v56 = v87;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1A731D0D4((uint64_t)v81);
    uint64_t v57 = v76;
    uint64_t v58 = v71;
    void *v76 = v46;
    v57[1] = v58;
    v57[2] = v70;
    *((unsigned char *)v57 + 24) = v69;
    *((unsigned char *)v57 + 25) = v68;
    uint64_t v59 = v80;
    v57[4] = v77;
    v57[5] = v59;
    v57[6] = v74;
    v57[7] = v49;
    unint64_t v60 = v78;
    v57[8] = v73;
    *(_OWORD *)(v57 + 9) = __PAIR128__(*((unint64_t *)&v78 + 1), v60);
    *(_OWORD *)(v57 + 11) = v52;
    *(_OWORD *)(v57 + 13) = v53;
    v57[15] = v54;
    v57[16] = v55;
  }
  return result;
}

uint64_t REMRemindersListDataView.FetchConfiguration.init(sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char *a5@<X4>, unsigned char *a6@<X8>)
{
  char v10 = *a5;
  *a6 = *a1;
  Configuration = (int *)type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  sub_1A74BE804(a2, (uint64_t)&a6[Configuration[5]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  a6[Configuration[6]] = a3;
  uint64_t result = sub_1A74BE804(a4, (uint64_t)&a6[Configuration[7]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  a6[Configuration[8]] = v10;
  return result;
}

__n128 static REMRemindersListDataView.fetchList_Sections(store:list:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a1;
  uint64_t v7 = type metadata accessor for REMRemindersListDataView.ListSectionsInvocation.Parameters(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  char v10 = (uint64_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (objc_class *)type metadata accessor for REMList_Codable();
  id v12 = objc_allocWithZone(v11);
  id v13 = a2;
  id v14 = objc_msgSend(v13, sel_store);
  id v15 = objc_msgSend(v13, sel_account);
  id v16 = objc_msgSend(v13, sel_storage);
  v43.receiver = v12;
  v43.super_class = v11;
  id v17 = objc_msgSendSuper2(&v43, sel_initWithStore_account_storage_, v14, v15, v16);

  id v18 = v17;
  id v19 = objc_msgSend(v13, sel_parentList);
  objc_msgSend(v18, sel_setParentList_, v19);

  sub_1A74BE75C(v31, (uint64_t)v10 + *(int *)(v8 + 28), type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  *char v10 = v18;
  id v20 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.ListSectionsInvocation());
  id v21 = objc_msgSend(v20, sel_initWithFetchResultTokenToDiffAgainst_, v32);
  uint64_t v22 = v44;
  sub_1A72F9338(v21, (uint64_t)v10, &v34);

  sub_1A74BE86C((uint64_t)v10, type metadata accessor for REMRemindersListDataView.ListSectionsInvocation.Parameters);
  if (!v22)
  {
    char v24 = v36;
    char v25 = v37;
    uint64_t v26 = v42;
    __n128 result = v35;
    long long v27 = v38;
    long long v28 = v39;
    long long v29 = v40;
    long long v30 = v41;
    *(void *)a5 = v34;
    *(__n128 *)(a5 + 8) = result;
    *(unsigned char *)(a5 + 24) = v24;
    *(unsigned char *)(a5 + 25) = v25;
    *(_OWORD *)(a5 + 32) = v27;
    *(_OWORD *)(a5 + 48) = v28;
    *(_OWORD *)(a5 + 64) = v29;
    *(_OWORD *)(a5 + 80) = v30;
    *(void *)(a5 + 96) = v26;
  }
  return result;
}

uint64_t static REMRemindersListDataView.fetchCustomSmartList_Sections(store:smartList:shouldFetchManualOrderingID:configuration:diffingAgainst:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v11 = type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters(0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_allocWithZone((Class)type metadata accessor for REMSmartList_Codable());
  id v16 = REMSmartList_Codable.init(_:)(a2);
  sub_1A74BE75C(a4, (uint64_t)&v14[*(int *)(v12 + 32)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  *(void *)id v14 = v16;
  v14[8] = a3;
  id v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a5);
  uint64_t v18 = v58;
  sub_1A72F882C((unint64_t)v17, (uint64_t)v14, (uint64_t)&v49);

  if (v18) {
    return sub_1A74BE86C((uint64_t)v14, type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters);
  }
  sub_1A74BE86C((uint64_t)v14, type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters);
  v47[6] = v55;
  v47[7] = v56;
  char v48 = v57;
  v47[2] = v51;
  v47[3] = v52;
  v47[4] = v53;
  v47[5] = v54;
  v47[0] = v49;
  v47[1] = v50;
  uint64_t v45 = v50;
  uint64_t v46 = *((void *)&v49 + 1);
  int v43 = BYTE9(v50);
  int v44 = BYTE8(v50);
  uint64_t v40 = v49;
  uint64_t v39 = *((void *)&v51 + 1);
  uint64_t v41 = v51;
  long long v20 = v52;
  uint64_t v35 = v53;
  uint64_t v36 = *((void *)&v52 + 1);
  uint64_t v58 = *((void *)&v53 + 1);
  uint64_t v33 = *((void *)&v54 + 1);
  uint64_t v21 = v54;
  long long v34 = v55;
  uint64_t v37 = v56;
  uint64_t v42 = 0;
  uint64_t v22 = *((void *)&v56 + 1);
  id v23 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v38 = (id)v20;
  sub_1A7315C10(*((void **)&v20 + 1));
  id v24 = v23;
  uint64_t v25 = v33;
  swift_bridgeObjectRetain();
  uint64_t v26 = v34;
  swift_bridgeObjectRetain();
  uint64_t v27 = *((void *)&v34 + 1);
  swift_bridgeObjectRetain();
  uint64_t v28 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A73E8F6C((uint64_t)v47);
  uint64_t v29 = v46;
  *(void *)a6 = v40;
  *(void *)(a6 + 8) = v29;
  *(void *)(a6 + 16) = v45;
  *(unsigned char *)(a6 + 24) = v44;
  *(unsigned char *)(a6 + 25) = v43;
  uint64_t v30 = v39;
  *(void *)(a6 + 32) = v41;
  *(void *)(a6 + 40) = v30;
  uint64_t v31 = v36;
  *(void *)(a6 + 48) = v38;
  *(void *)(a6 + 56) = v31;
  uint64_t v32 = v58;
  *(void *)(a6 + 64) = v35;
  *(void *)(a6 + 72) = v32;
  *(void *)(a6 + 80) = v21;
  *(void *)(a6 + 88) = v25;
  *(void *)(a6 + 96) = v26;
  *(void *)(a6 + 104) = v27;
  *(void *)(a6 + 112) = v28;
  *(void *)(a6 + 120) = v22;
  *(void *)(a6 + 128) = v23;
  return result;
}

void static REMRemindersListDataView.fetchListRepresentationOfTemplate_Sections(store:templateObjectID:configuration:diffingAgainst:)(uint64_t a1@<X0>, void *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v50 = a4;
  uint64_t v51 = a1;
  uint64_t v8 = sub_1A7571BC0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v49 = *a3;
  LODWORD(v48) = a3[1];
  LODWORD(v47) = a3[2];
  uint64_t v12 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  id v46 = objc_allocWithZone(v12);
  id v13 = a2;
  id v14 = objc_msgSend(v13, sel_uuid);
  sub_1A7571BB0();

  id v15 = (void *)sub_1A7571B90();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v16 = objc_msgSend(v13, sel_entityName);
  if (!v16)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    id v16 = (id)sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  v63.receiver = v46;
  v63.super_class = v12;
  id v17 = objc_msgSendSuper2(&v63, sel_initWithUUID_entityName_, v15, v16);

  id v18 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.TemplateSectionsInvocation());
  id v19 = objc_msgSend(v18, sel_initWithFetchResultTokenToDiffAgainst_, v50);
  long long v20 = v19;
  if (v47) {
    int v21 = 0x10000;
  }
  else {
    int v21 = 0;
  }
  uint64_t v22 = v64;
  sub_1A72FA0E0(v19, v17, v49 | (v48 << 8) | v21, (uint64_t)&v54);

  if (!v22)
  {
    v52[0] = v54;
    v52[1] = v55;
    v52[2] = v56;
    v52[3] = v57;
    v52[4] = v58;
    v52[5] = v59;
    v52[6] = v60;
    v52[7] = v61;
    id v43 = v62;
    long long v53 = v62;
    uint64_t v64 = *((void *)&v54 + 1);
    uint64_t v47 = v54;
    uint64_t v51 = v55;
    int v49 = BYTE9(v55);
    LODWORD(v50) = BYTE8(v55);
    uint64_t v48 = v56;
    long long v23 = v57;
    uint64_t v40 = v58;
    uint64_t v41 = *((void *)&v57 + 1);
    uint64_t v36 = *((void *)&v59 + 1);
    uint64_t v42 = v59;
    long long v37 = v60;
    uint64_t v38 = v61;
    uint64_t v39 = *((void *)&v58 + 1);
    uint64_t v45 = *((void *)&v61 + 1);
    id v46 = (id)*((void *)&v56 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v44 = (id)v23;
    sub_1A7315C10(*((void **)&v23 + 1));
    id v24 = v43;
    id v25 = v43;
    uint64_t v26 = v36;
    swift_bridgeObjectRetain();
    uint64_t v27 = v37;
    swift_bridgeObjectRetain();
    uint64_t v28 = *((void *)&v37 + 1);
    swift_bridgeObjectRetain();
    uint64_t v29 = v38;
    swift_bridgeObjectRetain();
    uint64_t v30 = v45;
    swift_bridgeObjectRetain();
    sub_1A73E8F6C((uint64_t)v52);
    uint64_t v31 = v64;
    *(void *)a5 = v47;
    *(void *)(a5 + 8) = v31;
    *(void *)(a5 + 16) = v51;
    *(unsigned char *)(a5 + 24) = v50;
    *(unsigned char *)(a5 + 25) = v49;
    id v32 = v46;
    *(void *)(a5 + 32) = v48;
    *(void *)(a5 + 40) = v32;
    uint64_t v33 = v41;
    *(void *)(a5 + 48) = v44;
    *(void *)(a5 + 56) = v33;
    uint64_t v34 = v39;
    *(void *)(a5 + 64) = v40;
    *(void *)(a5 + 72) = v34;
    *(void *)(a5 + 80) = v42;
    *(void *)(a5 + 88) = v26;
    *(void *)(a5 + 96) = v27;
    *(void *)(a5 + 104) = v28;
    *(void *)(a5 + 112) = v29;
    *(void *)(a5 + 120) = v30;
    *(void *)(a5 + 128) = v24;
  }
}

void static REMRemindersListDataView.fetchListRepresentationOfTemplate(with:store:sortingStyle:fetchSubtasks:fetchManualOrderingID:diffingAgainst:)(void *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, unsigned __int8 *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v77 = a6;
  LODWORD(v80) = a5;
  uint64_t v11 = sub_1A7571BC0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v76) = *a3;
  LODWORD(v75) = *a4;
  id v15 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  id v16 = objc_allocWithZone(v15);
  id v17 = a1;
  id v18 = objc_msgSend(v17, sel_uuid);
  sub_1A7571BB0();

  id v19 = (void *)sub_1A7571B90();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v20 = objc_msgSend(v17, sel_entityName);
  if (!v20)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    id v20 = (id)sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  v95.receiver = v16;
  v95.super_class = v15;
  id v21 = objc_msgSendSuper2(&v95, sel_initWithUUID_entityName_, v19, v20);

  id v22 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.TemplateInvocation());
  id v23 = objc_msgSend(v22, sel_initWithFetchResultTokenToDiffAgainst_, v77);
  id v24 = v23;
  if (v80) {
    int v25 = 0x10000;
  }
  else {
    int v25 = 0;
  }
  id v80 = v21;
  uint64_t v26 = v79;
  sub_1A72FABE0(v23, v21, v25 | v76 | (v75 << 8), (uint64_t)&v86);
  if (v26)
  {
  }
  else
  {
    uint64_t v65 = a7;
    uint64_t v70 = 0;

    v81[0] = v86;
    v81[1] = v87;
    v81[2] = v88;
    _OWORD v81[3] = v89;
    v81[4] = v90;
    long long v82 = v91;
    long long v83 = v92;
    long long v84 = v93;
    id v85 = v94;
    uint64_t v27 = *((void *)&v86 + 1);
    uint64_t v68 = *((void *)&v87 + 1);
    uint64_t v69 = v87;
    int v66 = BYTE1(v88);
    int v67 = v88;
    uint64_t v28 = *((void *)&v88 + 1);
    long long v29 = v89;
    long long v31 = v90;
    uint64_t v30 = v91;
    id v75 = (id)v86;
    uint64_t v76 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v77 = v29;
    swift_bridgeObjectRetain();
    uint64_t v73 = (void *)*((void *)&v29 + 1);
    uint64_t v78 = v30;
    uint64_t v79 = *((void *)&v31 + 1);
    sub_1A7315C10(*((void **)&v29 + 1));
    if (qword_1EB704BE8 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1A7571E90();
    uint64_t v72 = __swift_project_value_buffer(v32, (uint64_t)qword_1EB702F90);
    id v33 = v17;
    id v75 = v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = v73;
    sub_1A7315C10(v73);
    id v64 = v33;
    id v75 = v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A7315C10(v34);
    uint64_t v35 = sub_1A7571E80();
    os_log_type_t v36 = sub_1A7572FF0();
    int v37 = v36;
    uint64_t v72 = v35;
    BOOL v38 = os_log_type_enabled(v35, v36);
    uint64_t v39 = v34;
    uint64_t v74 = v28;
    uint64_t v71 = v31;
    if (v38)
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = (void *)swift_slowAlloc();
      uint64_t v62 = v41;
      *(_DWORD *)uint64_t v40 = 138412546;
      int v63 = v37;
      id v42 = v64;
      id v96 = v64;
      v61[1] = &v97;
      id v43 = v64;
      sub_1A7573250();
      *uint64_t v41 = v42;

      *(_WORD *)(v40 + 12) = 2048;
      id v64 = (id)(v40 + 14);
      uint64_t v44 = v76;
      v61[0] = *(void *)(v76 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v45 = v75;

      sub_1A7315D30(v39);
      id v96 = (id)v61[0];
      sub_1A7573250();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1A7315D30(v39);
      _os_log_impl(&dword_1A72A1000, v72, (os_log_type_t)v63, "DATAVIEW RESULT {name: REMRemindersListDataView_TemplateInvocation, templateObjectID: %@, reminder.count: %ld}", (uint8_t *)v40, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      id v46 = v62;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v46, -1, -1);
      MEMORY[0x1AD0CD330](v40, -1, -1);
      uint64_t v47 = v44;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v48 = v76;
      swift_bridgeObjectRelease();
      id v49 = v75;

      sub_1A7315D30(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      id v50 = v64;
      sub_1A7315D30(v34);
      uint64_t v47 = v48;
    }
    uint64_t v51 = v65;

    uint64_t v52 = *((void *)&v82 + 1);
    long long v53 = v83;
    long long v55 = v84;
    id v54 = v85;
    id v56 = v85;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A73E0360((uint64_t)v81);
    *(void *)uint64_t v51 = v75;
    *(void *)(v51 + 8) = v47;
    uint64_t v57 = v68;
    *(void *)(v51 + 16) = v69;
    *(void *)(v51 + 24) = v57;
    *(unsigned char *)(v51 + 32) = v67;
    *(unsigned char *)(v51 + 33) = v66;
    uint64_t v58 = v77;
    *(void *)(v51 + 40) = v74;
    *(void *)(v51 + 48) = v58;
    uint64_t v59 = v71;
    *(void *)(v51 + 56) = v73;
    *(void *)(v51 + 64) = v59;
    uint64_t v60 = v78;
    *(void *)(v51 + 72) = v79;
    *(void *)(v51 + 80) = v60;
    *(void *)(v51 + 88) = v52;
    *(_OWORD *)(v51 + 96) = v53;
    *(_OWORD *)(v51 + 112) = v55;
    *(void *)(v51 + 128) = v54;
  }
}

uint64_t sub_1A749E9C8()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1EB702F90);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB702F90);
  if (qword_1EB704BF8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F68);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

ReminderKitInternal::REMRemindersListDataView::SortingDirection_optional __swiftcall REMRemindersListDataView.SortingDirection.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  char *v1 = v2;
  return (ReminderKitInternal::REMRemindersListDataView::SortingDirection_optional)rawValue;
}

uint64_t REMRemindersListDataView.SortingDirection.rawValue.getter()
{
  return *v0;
}

uint64_t sub_1A749EAB4()
{
  return sub_1A75729E0();
}

uint64_t sub_1A749EB14()
{
  return sub_1A7572990();
}

void REMRemindersListDataView.SortingStyle.init(remSortingStyle:)(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v6 = v5;
  if (v4 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v9 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_15:

    char v20 = 0x80;
    goto LABEL_16;
  }
  uint64_t v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v12 = v11;
  if (v10 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  char v15 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_18:

    char v20 = -127;
    goto LABEL_16;
  }
  uint64_t v16 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v18 = v17;
  if (v16 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_20:

    char v20 = 0;
    goto LABEL_16;
  }
  char v21 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_20;
  }
  uint64_t v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v24 = v23;
  if (v22 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
LABEL_25:

    char v20 = 1;
    goto LABEL_16;
  }
  char v26 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_25;
  }
  uint64_t v27 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v29 = v28;
  if (v27 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
LABEL_30:

    char v20 = 32;
    goto LABEL_16;
  }
  char v31 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_30;
  }
  uint64_t v32 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v34 = v33;
  if (v32 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v34 == v35)
  {
    swift_bridgeObjectRelease_n();
LABEL_35:

    char v20 = 33;
    goto LABEL_16;
  }
  char v36 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v36) {
    goto LABEL_35;
  }
  uint64_t v37 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v39 = v38;
  if (v37 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v39 == v40)
  {
    swift_bridgeObjectRelease_n();
LABEL_40:

    char v20 = 64;
    goto LABEL_16;
  }
  char v41 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v41) {
    goto LABEL_40;
  }
  uint64_t v42 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v44 = v43;
  if (v42 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v44 == v45)
  {
    swift_bridgeObjectRelease_n();
LABEL_45:

    char v20 = 65;
    goto LABEL_16;
  }
  char v46 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v46) {
    goto LABEL_45;
  }
  uint64_t v47 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v49 = v48;
  if (v47 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v49 == v50)
  {
    swift_bridgeObjectRelease_n();
LABEL_50:

    char v20 = 96;
    goto LABEL_16;
  }
  char v51 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v51) {
    goto LABEL_50;
  }
  uint64_t v52 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v54 = v53;
  char v58 = 97;
  if (v52 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v54 != v55)
  {
    if (sub_1A7573DB0()) {
      char v56 = 97;
    }
    else {
      char v56 = 0x80;
    }
    char v58 = v56;
  }
  id v57 = a1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v20 = v58;
LABEL_16:
  *a2 = v20;
}

void REMRemindersListDataView.SortingStyle.sortDirection.getter(char *a1@<X8>)
{
  char v2 = *v1 & 1;
  if ((char)*v1 < 0) {
    char v2 = 2;
  }
  *a1 = v2;
}

void REMRemindersListDataView.SortingStyle.flipped()(BOOL *a1@<X8>)
{
  unsigned int v2 = *v1;
  switch(v2 >> 5)
  {
    case 1u:
      char v3 = v2 & 1;
      char v4 = 33;
      goto LABEL_6;
    case 2u:
      char v3 = v2 & 1;
      char v4 = 65;
      goto LABEL_6;
    case 3u:
      char v3 = v2 & 1;
      char v4 = 97;
LABEL_6:
      LOBYTE(v2) = v3 ^ v4;
      goto LABEL_7;
    case 4u:
LABEL_7:
      *a1 = v2;
      break;
    default:
      *a1 = (v2 & 1) == 0;
      break;
  }
}

char *REMRemindersListDataView.SortingStyle.cloned(withSortingDirection:)@<X0>(char *result@<X0>, unsigned char *a2@<X8>)
{
  char v3 = *result;
  unsigned int v4 = *v2;
  switch(v4 >> 5)
  {
    case 1u:
      *a2 = v3 | 0x20;
      break;
    case 2u:
      *a2 = v3 | 0x40;
      break;
    case 3u:
      LOBYTE(v4) = v3 | 0x60;
      goto LABEL_6;
    case 4u:
LABEL_6:
      *a2 = v4;
      break;
    default:
      *a2 = v3;
      break;
  }
  return result;
}

uint64_t REMRemindersListDataView.SortingStyle.isEqualIgnoringDirection(_:)(unsigned __int8 *a1)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *v1;
  switch(v3 >> 5)
  {
    case 1u:
      return (v2 & 0xE0) == 32;
    case 2u:
      return (v2 & 0xE0) == 64;
    case 3u:
      return (v2 & 0xE0) == 96;
    case 4u:
      if (v3 == 128)
      {
        if (v2 == 128) {
          return 1;
        }
      }
      else if (v2 == 129)
      {
        return 1;
      }
      return 0;
    default:
      return v2 < 0x20;
  }
}

id REMRemindersListDataView.SortingStyle.remSortingStyle.getter()
{
  uint64_t v0 = (void *)sub_1A74BF31C();

  return v0;
}

void static REMRemindersListDataView.SortingStyle.fallbackForREMList.getter(unsigned char *a1@<X8>)
{
  *a1 = -127;
}

void static REMRemindersListDataView.SortingStyle.fallbackForCustomSmartList.getter(unsigned char *a1@<X8>)
{
  *a1 = 64;
}

void *static REMRemindersListDataView.SortingStyle.allCases.getter()
{
  return &unk_1EFC8FA58;
}

uint64_t REMRemindersListDataView.SortingStyle.description.getter()
{
  return _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
}

uint64_t REMRemindersListDataView.SortingStyle.hash(into:)()
{
  switch(*v0 >> 5)
  {
    case 4:
      return sub_1A75740D0();
    default:
      sub_1A75740D0();
      break;
  }
  return sub_1A75740D0();
}

uint64_t REMRemindersListDataView.SortingStyle.hashValue.getter()
{
  unsigned int v1 = *v0;
  sub_1A75740C0();
  switch(v1 >> 5)
  {
    case 4u:
      break;
    default:
      sub_1A75740D0();
      break;
  }
  sub_1A75740D0();
  return sub_1A7574110();
}

uint64_t sub_1A749F4C4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMRemindersListDataView.SortingStyle.init(from:)(a1, a2);
}

uint64_t REMRemindersListDataView.SortingStyle.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701020);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BF3CC();
  sub_1A7574190();
  if (!v2)
  {
    v10[30] = 0;
    sub_1A74BF420();
    sub_1A7573A50();
    switch(v10[31])
    {
      case 1:
        (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = -127;
        break;
      case 2:
        v10[14] = 1;
        sub_1A74BF474();
        sub_1A7573A50();
        (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = v10[15];
        break;
      case 3:
        v10[24] = 1;
        sub_1A74BF474();
        sub_1A7573A50();
        (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = v10[25] | 0x20;
        break;
      case 4:
        v10[26] = 1;
        sub_1A74BF474();
        sub_1A7573A50();
        (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = v10[27] | 0x40;
        break;
      case 5:
        v10[28] = 1;
        sub_1A74BF474();
        sub_1A7573A50();
        (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = v10[29] | 0x60;
        break;
      default:
        (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = 0x80;
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A749F858(void *a1)
{
  return REMRemindersListDataView.SortingStyle.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.SortingStyle.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702888);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BF3CC();
  sub_1A75741B0();
  switch(v8 >> 5)
  {
    case 1u:
      char v9 = 3;
      goto LABEL_7;
    case 2u:
      char v9 = 4;
      goto LABEL_7;
    case 3u:
      char v9 = 5;
      goto LABEL_7;
    case 4u:
      char v13 = v8 != 128;
      char v12 = 0;
      sub_1A74BF4C8();
      goto LABEL_9;
    default:
      char v9 = 2;
LABEL_7:
      char v13 = v9;
      char v12 = 0;
      sub_1A74BF4C8();
      sub_1A7573B60();
      if (!v2)
      {
        char v13 = v8 & 1;
        char v12 = 1;
        sub_1A74BF51C();
LABEL_9:
        sub_1A7573B60();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1A749FA8C()
{
  unsigned int v1 = *v0;
  sub_1A75740C0();
  switch(v1 >> 5)
  {
    case 4u:
      break;
    default:
      sub_1A75740D0();
      break;
  }
  sub_1A75740D0();
  return sub_1A7574110();
}

void sub_1A749FB54(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FA58;
}

uint64_t sub_1A749FB64()
{
  sub_1A74BF31C();

  return _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
}

ReminderKitInternal::REMRemindersListDataView::FetchSubtasks_optional __swiftcall REMRemindersListDataView.FetchSubtasks.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t REMRemindersListDataView.FetchSubtasks.rawValue.getter()
{
  uint64_t v1 = 28271;
  if (*v0 != 1) {
    uint64_t v1 = 0x746E756F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 6710895;
  }
}

uint64_t sub_1A749FC4C()
{
  return sub_1A7574110();
}

uint64_t sub_1A749FCD8()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A749FD50()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMRemindersListDataView::FetchSubtasks_optional sub_1A749FDD8(Swift::String *a1)
{
  return REMRemindersListDataView.FetchSubtasks.init(rawValue:)(*a1);
}

void sub_1A749FDE4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE300000000000000;
  unint64_t v4 = 0xE200000000000000;
  uint64_t v5 = 28271;
  if (v2 != 1)
  {
    uint64_t v5 = 0x746E756F63;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 6710895;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A749FE2C()
{
  return sub_1A75729D0();
}

uint64_t sub_1A749FE8C()
{
  return sub_1A7572980();
}

uint64_t sub_1A749FEDC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A7543654(*a1, *a2);
}

uint64_t sub_1A749FEEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ShowCompleted.init(from:)(a1, a2);
}

uint64_t REMRemindersListDataView.ShowCompleted.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v23 = sub_1A7571B60();
  uint64_t v20 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  unint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701028);
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BF570();
  uint64_t v11 = v24;
  sub_1A7574190();
  if (!v11)
  {
    uint64_t v19 = v4;
    uint64_t v12 = v22;
    uint64_t v24 = v10;
    char v28 = 0;
    sub_1A74BF5C4();
    sub_1A7573A50();
    uint64_t v13 = v5;
    switch(v29)
    {
      case 2:
        char v26 = 1;
        sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
        uint64_t v17 = v19;
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
        uint64_t v14 = v21;
        uint64_t v15 = (uint64_t)v24;
        (*(void (**)(void *, char *, uint64_t))(v20 + 32))(v24, v17, v23);
        break;
      case 3:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
        char v27 = 2;
        sub_1A748150C();
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v5);
        uint64_t v15 = (uint64_t)v24;
        *uint64_t v24 = v25;
        uint64_t v14 = v21;
        break;
      default:
        (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v5);
        uint64_t v14 = v21;
        uint64_t v15 = (uint64_t)v24;
        break;
    }
    swift_storeEnumTagMultiPayload();
    sub_1A74BE804(v15, v14, type metadata accessor for REMRemindersListDataView.ShowCompleted);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A74A0320(void *a1)
{
  return REMRemindersListDataView.ShowCompleted.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.ShowCompleted.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A7571B60();
  uint64_t v20 = *(void *)(v4 - 8);
  uint64_t v21 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702890);
  uint64_t v23 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BF570();
  sub_1A75741B0();
  sub_1A74BE75C(v2, (uint64_t)v9, type metadata accessor for REMRemindersListDataView.ShowCompleted);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = *v9;
      LOBYTE(v24) = 3;
      char v25 = 0;
      sub_1A74BF660();
      uint64_t v17 = v22;
      sub_1A7573B60();
      if (!v17)
      {
        uint64_t v24 = v16;
        char v25 = 2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
        sub_1A74815B4();
        sub_1A7573B60();
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
      return swift_bridgeObjectRelease();
    case 2u:
      LOBYTE(v24) = 0;
      goto LABEL_10;
    case 3u:
      LOBYTE(v24) = 1;
LABEL_10:
      char v25 = 0;
      sub_1A74BF660();
      sub_1A7573B60();
      return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v12, v10);
    default:
      uint64_t v14 = v20;
      uint64_t v13 = v21;
      (*(void (**)(char *, uint64_t *, uint64_t))(v20 + 32))(v6, v9, v21);
      LOBYTE(v24) = 2;
      char v25 = 0;
      sub_1A74BF660();
      uint64_t v15 = v22;
      sub_1A7573B60();
      if (!v15)
      {
        LOBYTE(v24) = 1;
        sub_1A74BF618(&qword_1EB704C38, MEMORY[0x1E4F27928]);
        sub_1A7573B60();
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
      return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v12, v10);
  }
}

void REMRemindersListDataView.FetchConfiguration.sortingStyle.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t REMRemindersListDataView.FetchConfiguration.showCompleted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  return sub_1A74BE75C(v1 + *(int *)(Configuration + 20), a1, type metadata accessor for REMRemindersListDataView.ShowCompleted);
}

uint64_t REMRemindersListDataView.FetchConfiguration.countCompleted.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for REMRemindersListDataView.FetchConfiguration(0) + 24));
}

uint64_t REMRemindersListDataView.FetchConfiguration.remindersPrefetch.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  return sub_1A74BE75C(v1 + *(int *)(Configuration + 28), a1, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
}

uint64_t REMRemindersListDataView.FetchConfiguration.fetchSubtasks.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

unint64_t sub_1A74A0844()
{
  unint64_t result = 0x53676E6974726F73;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x706D6F43776F6873;
      break;
    case 2:
      unint64_t result = 0x6D6F43746E756F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6275536863746566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74A0920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D0064(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A0948(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF6B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A0984(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF6B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.FetchConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BF6B4();
  sub_1A75741B0();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1A74BF708();
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
    v11[13] = 1;
    type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
    sub_1A74BF618(&qword_1EB702520, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.ShowCompleted);
    sub_1A7573B60();
    v11[12] = 2;
    sub_1A7573B20();
    v11[11] = 3;
    type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
    sub_1A74BF618(&qword_1EB704690, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
    sub_1A7573B60();
    v11[10] = v3[*(int *)(Configuration + 32)];
    v11[9] = 4;
    sub_1A74BF75C();
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMRemindersListDataView.FetchConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v20 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  MEMORY[0x1F4188790](v20);
  uint64_t v21 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  MEMORY[0x1F4188790](v23);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701040);
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  MEMORY[0x1F4188790](Configuration);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BF6B4();
  uint64_t v11 = (uint64_t)v26;
  sub_1A7574190();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v26 = a1;
  uint64_t v12 = v10;
  uint64_t v13 = v24;
  char v32 = 0;
  sub_1A74BF7B0();
  uint64_t v14 = v25;
  sub_1A7573A50();
  *uint64_t v12 = v33;
  char v31 = 1;
  sub_1A74BF618(&qword_1EB700EB8, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.ShowCompleted);
  uint64_t v15 = (uint64_t)v5;
  sub_1A7573A50();
  uint64_t v16 = Configuration;
  sub_1A74BE804(v15, (uint64_t)&v12[*(int *)(Configuration + 20)], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  char v30 = 2;
  v12[*(int *)(Configuration + 24)] = sub_1A7573A10() & 1;
  char v29 = 3;
  sub_1A74BF618(&qword_1EB700ED8, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  uint64_t v17 = (uint64_t)v21;
  sub_1A7573A50();
  sub_1A74BE804(v17, (uint64_t)&v12[*(int *)(v16 + 28)], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  char v27 = 4;
  sub_1A74BF804();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v14);
  v12[*(int *)(v16 + 32)] = v28;
  sub_1A74BE75C((uint64_t)v12, v13, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_1A74BE86C((uint64_t)v12, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
}

uint64_t sub_1A74A1180@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.FetchConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1A74A1198(void *a1)
{
  return REMRemindersListDataView.FetchConfiguration.encode(to:)(a1);
}

uint64_t sub_1A74A11B4(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF9A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A11F0(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF9A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74A122C(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF900();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A1268(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF900();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74A12A4()
{
  uint64_t result = 0x6C6562614C6C6C61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x736C6562614C6F6ELL;
      break;
    case 2:
      uint64_t result = 6581857;
      break;
    case 3:
      uint64_t result = 29295;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74A1324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D0300(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A134C(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF858();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A1388(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF858();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74A13C4(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF954();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A1400(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF954();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74A143C()
{
  if (*v0) {
    return 0x6564756C637865;
  }
  else {
    return 0x6564756C636E69;
  }
}

uint64_t sub_1A74A1464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D04A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A148C(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF8AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A14C8(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF8AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.HashtagLabelPredicate.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F47A0);
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x1F4188790](v3);
  char v36 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F47A8);
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v40 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F47B0);
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F47B8);
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F47C0);
  uint64_t v42 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = *v1;
  uint64_t v39 = v1[1];
  int v16 = *((unsigned __int8 *)v1 + 16);
  uint64_t v17 = a1[3];
  uint64_t v18 = a1;
  uint64_t v19 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v18, v17);
  sub_1A74BF858();
  sub_1A75741B0();
  if (v16)
  {
    uint64_t v20 = v41;
    if (v16 == 1)
    {
      LOBYTE(v44) = 3;
      sub_1A74BF8AC();
      uint64_t v21 = v36;
      sub_1A7573AB0();
      uint64_t v44 = v15;
      char v43 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
      sub_1A7474658(&qword_1EB704C00, &qword_1EB705A10);
      uint64_t v22 = v38;
      sub_1A7573B60();
      if (!v20)
      {
        uint64_t v44 = v39;
        char v43 = 1;
        sub_1A7573B60();
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v22);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v19, v13);
    }
    else
    {
      char v27 = v19;
      char v28 = (uint64_t (**)(char *, uint64_t))(v42 + 8);
      if (v15 | v39)
      {
        LOBYTE(v44) = 1;
        sub_1A74BF954();
        sub_1A7573AB0();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v33);
      }
      else
      {
        LOBYTE(v44) = 0;
        sub_1A74BF9A8();
        sub_1A7573AB0();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
      }
      return (*v28)(v27, v13);
    }
  }
  else
  {
    uint64_t v24 = v34;
    LOBYTE(v44) = 2;
    sub_1A74BF900();
    sub_1A7573AB0();
    uint64_t v44 = v15;
    char v43 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
    sub_1A7474658(&qword_1EB704C00, &qword_1EB705A10);
    uint64_t v25 = v35;
    uint64_t v26 = v41;
    sub_1A7573B60();
    if (v26)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v40, v25);
    }
    else
    {
      char v29 = v40;
      uint64_t v44 = v39;
      char v43 = 1;
      sub_1A7573B60();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v25);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v19, v13);
  }
}

uint64_t REMRemindersListDataView.HashtagLabelPredicate.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F47F0);
  uint64_t v39 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v48 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F47F8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  uint64_t v44 = v5;
  MEMORY[0x1F4188790](v4);
  char v46 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4800);
  uint64_t v41 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4808);
  uint64_t v40 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4810);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1A74BF858();
  uint64_t v17 = v50;
  sub_1A7574190();
  if (v17) {
    goto LABEL_10;
  }
  uint64_t v38 = v9;
  uint64_t v18 = v8;
  uint64_t v19 = v47;
  uint64_t v20 = v48;
  uint64_t v50 = v13;
  uint64_t v21 = sub_1A7573A70();
  uint64_t v22 = v21;
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v26 = sub_1A7573640();
    swift_allocError();
    char v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    *char v28 = &type metadata for REMRemindersListDataView.HashtagLabelPredicate;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x1E4FBBA70], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v12);
LABEL_10:
    uint64_t v29 = (uint64_t)v49;
    return __swift_destroy_boxed_opaque_existential_1(v29);
  }
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      LOBYTE(v53) = 1;
      sub_1A74BF954();
      sub_1A7573990();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v19);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v12);
      uint64_t v24 = 0;
      char v25 = 2;
      uint64_t v23 = 1;
      break;
    case 2:
      LOBYTE(v53) = 2;
      sub_1A74BF900();
      sub_1A7573990();
      uint64_t v47 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
      LOBYTE(v52) = 0;
      uint64_t v31 = v46;
      sub_1A7474658(&qword_1EB704C68, &qword_1EB705A10);
      uint64_t v32 = v43;
      sub_1A7573A50();
      uint64_t v23 = v53;
      char v51 = 1;
      sub_1A7573A50();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v12);
      char v25 = 0;
      uint64_t v24 = v52;
      break;
    case 3:
      LOBYTE(v53) = 3;
      sub_1A74BF8AC();
      sub_1A7573990();
      uint64_t v47 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
      LOBYTE(v52) = 0;
      sub_1A7474658(&qword_1EB704C68, &qword_1EB705A10);
      uint64_t v34 = v20;
      uint64_t v35 = v42;
      sub_1A7573A50();
      uint64_t v23 = v53;
      char v51 = 1;
      sub_1A7573A50();
      uint64_t v36 = v50;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v12);
      uint64_t v24 = v52;
      char v25 = 1;
      break;
    default:
      LOBYTE(v53) = 0;
      sub_1A74BF9A8();
      sub_1A7573990();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v12);
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      char v25 = 2;
      break;
  }
  uint64_t v29 = (uint64_t)v49;
  uint64_t v30 = v45;
  *uint64_t v45 = v23;
  v30[1] = v24;
  *((unsigned char *)v30 + 16) = v25;
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

uint64_t sub_1A74A238C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMRemindersListDataView.HashtagLabelPredicate.init(from:)(a1, a2);
}

uint64_t sub_1A74A23A4(void *a1)
{
  return REMRemindersListDataView.HashtagLabelPredicate.encode(to:)(a1);
}

id REMRemindersListDataView.ReminderLite.objectID.getter()
{
  return *v0;
}

uint64_t REMRemindersListDataView.ReminderLite.isCompleted.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t REMRemindersListDataView.ReminderLite.subtaskCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t REMRemindersListDataView.ReminderLite.subtasks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.ReminderLite.init(objectID:isCompleted:subtaskCount:subtasks:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(unsigned char *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  return result;
}

uint64_t REMRemindersListDataView.ReminderLite.init(objectID:isCompleted:subtasks:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (a3) {
    uint64_t v4 = *(void *)(a3 + 16);
  }
  else {
    uint64_t v4 = 0;
  }
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = a2 & 1;
  *(void *)(a4 + 16) = v4;
  *(void *)(a4 + 24) = a3;
  return result;
}

uint64_t sub_1A74A2414()
{
  uint64_t result = 0x44497463656A626FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C706D6F437369;
      break;
    case 2:
      uint64_t result = 0x436B736174627573;
      break;
    case 3:
      uint64_t result = 0x736B736174627573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74A24B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D0580(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A24D8(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF9FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A2514(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF9FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.ReminderLite.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701088);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  int v15 = *((unsigned __int8 *)v1 + 8);
  uint64_t v9 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BF9FC();
  sub_1A75741B0();
  uint64_t v17 = v8;
  char v16 = 0;
  type metadata accessor for REMObjectID_Codable();
  sub_1A74BF618(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v10 = v13;
    LOBYTE(v17) = 1;
    sub_1A7573B20();
    LOBYTE(v17) = 2;
    sub_1A7573B40();
    uint64_t v17 = v10;
    char v16 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
    sub_1A74C130C(&qword_1EB700FD0, &qword_1EB704818, (void (*)(void))sub_1A74BFA50);
    sub_1A7573B00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMRemindersListDataView.ReminderLite.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702880);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BF9FC();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for REMObjectID_Codable();
    char v14 = 0;
    sub_1A74BF618(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    sub_1A7573A50();
    uint64_t v9 = v15;
    LOBYTE(v15) = 1;
    id v10 = v9;
    char v11 = sub_1A7573A10();
    LOBYTE(v15) = 2;
    uint64_t v13 = sub_1A7573A30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
    char v14 = 3;
    sub_1A74C130C(&qword_1EB704820, &qword_1EB704818, (void (*)(void))sub_1A74BFAA4);
    sub_1A75739F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = v15;
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v11 & 1;
    *(void *)(a2 + 16) = v13;
    *(void *)(a2 + 24) = v12;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
}

void sub_1A74A2ABC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A74A2AD4(void *a1)
{
  return REMRemindersListDataView.ReminderLite.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.CountByCompleted.completed.getter()
{
  return *(void *)v0;
}

uint64_t REMRemindersListDataView.CountByCompleted.incomplete.getter()
{
  return *(void *)(v0 + 8);
}

ReminderKitInternal::REMRemindersListDataView::CountByCompleted __swiftcall REMRemindersListDataView.CountByCompleted.init(completed:incomplete:)(Swift::Int completed, Swift::Int incomplete)
{
  Swift::Int *v2 = completed;
  v2[1] = incomplete;
  result.incomplete = incomplete;
  result.completed = completed;
  return result;
}

ReminderKitInternal::REMRemindersListDataView::CountByCompleted __swiftcall REMRemindersListDataView.CountByCompleted.init(reminders:)(Swift::OpaquePointer reminders)
{
  uint64_t v2 = v1;
  uint64_t v3 = *((void *)reminders._rawValue + 2);
  if (!v3)
  {
    reminders._uint64_t rawValue = (void *)swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    uint64_t v6 = 0;
LABEL_20:
    void *v2 = v6;
    v2[1] = v5;
    goto LABEL_24;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = (char *)reminders._rawValue + 32 * v4 + 32;
    uint64_t v8 = *((void *)v7 + 3);
    if (v7[8] == 1) {
      break;
    }
    BOOL v9 = __OFADD__(v5++, 1);
    if (v9) {
      goto LABEL_23;
    }
LABEL_9:
    if (v8)
    {
      uint64_t v10 = *(void *)(v8 + 16);
      if (v10)
      {
        char v11 = (unsigned char *)(v8 + 40);
        do
        {
          if (*v11 == 1)
          {
            BOOL v9 = __OFADD__(v6++, 1);
            if (v9)
            {
              __break(1u);
              goto LABEL_18;
            }
          }
          else
          {
            BOOL v9 = __OFADD__(v5++, 1);
            if (v9)
            {
              __break(1u);
              goto LABEL_22;
            }
          }
          v11 += 32;
          --v10;
        }
        while (v10);
      }
    }
    if (++v4 == v3)
    {
LABEL_18:
      reminders._uint64_t rawValue = (void *)swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  BOOL v9 = __OFADD__(v6++, 1);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result.incomplete = v12;
  result.completed = (Swift::Int)reminders._rawValue;
  return result;
}

void static REMRemindersListDataView.CountByCompleted.zero.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

BOOL static REMRemindersListDataView.CountByCompleted.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1A74A2C00()
{
  if (*v0) {
    return 0x656C706D6F636E69;
  }
  else {
    return 0x6574656C706D6F63;
  }
}

uint64_t sub_1A74A2C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D076C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A2C6C(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFAF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A2CA8(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFAF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.CountByCompleted.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700E50);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFAF8();
  sub_1A75741B0();
  char v11 = 0;
  sub_1A7573B40();
  if (!v2)
  {
    char v10 = 1;
    sub_1A7573B40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.CountByCompleted.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700DF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFAF8();
  sub_1A7574190();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_1A7573A30();
    char v13 = 1;
    uint64_t v10 = sub_1A7573A30();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A74A2FEC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMRemindersListDataView.CountByCompleted.init(from:)(a1, a2);
}

uint64_t sub_1A74A3004(void *a1)
{
  return REMRemindersListDataView.CountByCompleted.encode(to:)(a1);
}

unint64_t sub_1A74A3020(char a1)
{
  unint64_t result = 0x7265646E696D6572;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000021;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A74A30DC()
{
  return sub_1A74A3020(*v0);
}

uint64_t sub_1A74A30E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D0878(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A310C(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFB4C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A3148(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFB4C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.FlatModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7010D8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v17 = v1[2];
  uint64_t v18 = v8;
  int v22 = *((unsigned __int8 *)v1 + 24);
  int v16 = *((unsigned __int8 *)v1 + 25);
  uint64_t v10 = v1[4];
  uint64_t v14 = v1[5];
  uint64_t v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFB4C();
  sub_1A75741B0();
  uint64_t v19 = v9;
  char v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
  sub_1A74C130C(&qword_1EB700FD0, &qword_1EB704818, (void (*)(void))sub_1A74BFA50);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v12 = v14;
    uint64_t v11 = v15;
    uint64_t v19 = v18;
    uint64_t v20 = v17;
    char v21 = v22;
    char v23 = 1;
    sub_1A74BFBA0();
    sub_1A7573B00();
    LOBYTE(v19) = 2;
    sub_1A7573AD0();
    uint64_t v19 = v11;
    char v23 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
    sub_1A731DB84();
    sub_1A7573B60();
    uint64_t v19 = v12;
    char v23 = 4;
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.FlatModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704830);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFB4C();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
  char v23 = 0;
  sub_1A74C130C(&qword_1EB704820, &qword_1EB704818, (void (*)(void))sub_1A74BFAA4);
  sub_1A7573A50();
  uint64_t v9 = v19;
  char v23 = 1;
  sub_1A74BFBF4();
  swift_bridgeObjectRetain();
  sub_1A75739F0();
  uint64_t v17 = v20;
  uint64_t v18 = v19;
  int v10 = v21;
  LOBYTE(v19) = 2;
  int v15 = sub_1A75739C0();
  int v22 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
  char v23 = 3;
  unint64_t v16 = sub_1A73182C8();
  sub_1A7573A50();
  char v23 = 4;
  uint64_t v14 = v19;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = v18;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v17;
  *(unsigned char *)(a2 + 24) = v22;
  *(unsigned char *)(a2 + 25) = v15;
  *(void *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74A37DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.FlatModel.init(from:)(a1, a2);
}

uint64_t sub_1A74A37F4(void *a1)
{
  return REMRemindersListDataView.FlatModel.encode(to:)(a1);
}

id REMRemindersListDataView.GroupModel.groupList.getter()
{
  return *(id *)(v0 + 40);
}

id REMRemindersListDataView.ListsModel.Sublist.listID.getter()
{
  return *v0;
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.listName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void *REMRemindersListDataView.ListsModel.Sublist.listColor.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.reminders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.isCustomSmartList.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.init(listID:listName:listColor:reminders:isCustomSmartList:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(unsigned char *)(a7 + 40) = a6;
  return result;
}

unint64_t sub_1A74A38B0()
{
  unint64_t result = 0x44497473696CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656D614E7473696CLL;
      break;
    case 2:
      unint64_t result = 0x6F6C6F437473696CLL;
      break;
    case 3:
      unint64_t result = 0x7265646E696D6572;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74A3968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D0AA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A3990(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFC48();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A39CC(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFC48();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701940);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v17 = v1[2];
  uint64_t v18 = v8;
  uint64_t v10 = v1[3];
  uint64_t v15 = v1[4];
  uint64_t v16 = v10;
  v14[1] = *((unsigned __int8 *)v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFC48();
  sub_1A75741B0();
  uint64_t v20 = v9;
  char v19 = 0;
  type metadata accessor for REMObjectID_Codable();
  sub_1A74BF618(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v11 = v15;
    uint64_t v12 = v16;
    LOBYTE(v20) = 1;
    sub_1A7573B10();
    uint64_t v20 = v12;
    char v19 = 2;
    type metadata accessor for REMColor_Codable();
    sub_1A74BF618(&qword_1EB703DF8, (void (*)(uint64_t))type metadata accessor for REMColor_Codable);
    sub_1A7573B00();
    uint64_t v20 = v11;
    char v19 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
    sub_1A74C130C(&qword_1EB700FD0, &qword_1EB704818, (void (*)(void))sub_1A74BFA50);
    sub_1A7573B60();
    LOBYTE(v20) = 4;
    sub_1A7573B20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMRemindersListDataView.ListsModel.Sublist.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701910);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFC48();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for REMObjectID_Codable();
    char v27 = 0;
    sub_1A74BF618(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    sub_1A7573A50();
    uint64_t v9 = v28;
    LOBYTE(v28) = 1;
    id v10 = v9;
    uint64_t v11 = sub_1A7573A00();
    uint64_t v13 = v12;
    uint64_t v25 = v11;
    type metadata accessor for REMColor_Codable();
    char v27 = 2;
    sub_1A74BF618(&qword_1EB7035C8, (void (*)(uint64_t))type metadata accessor for REMColor_Codable);
    swift_bridgeObjectRetain();
    sub_1A75739F0();
    uint64_t v14 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
    uint64_t v26 = 0;
    char v27 = 3;
    uint64_t v22 = sub_1A74C130C(&qword_1EB704820, &qword_1EB704818, (void (*)(void))sub_1A74BFAA4);
    uint64_t v24 = v14;
    id v23 = v14;
    uint64_t v15 = v26;
    sub_1A7573A50();
    if (v15)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      swift_bridgeObjectRelease();
      uint64_t v17 = v26;
      uint64_t v18 = v24;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();

      if (!v17) {
    }
      }
    else
    {
      uint64_t v16 = (uint64_t)v28;
      LOBYTE(v28) = 4;
      uint64_t v22 = v16;
      swift_bridgeObjectRetain();
      char v19 = sub_1A7573A10();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v20 = v25;
      *(void *)a2 = v10;
      *(void *)(a2 + 8) = v20;
      unsigned __int8 v21 = v24;
      *(void *)(a2 + 16) = v13;
      *(void *)(a2 + 24) = v21;
      *(void *)(a2 + 32) = v22;
      *(unsigned char *)(a2 + 40) = v19 & 1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
  }
}

void sub_1A74A418C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A74A41A4(void *a1)
{
  return REMRemindersListDataView.ListsModel.Sublist.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.ListsModel.hasCompletedReminders.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

unint64_t sub_1A74A41C8(char a1)
{
  unint64_t result = 0x7370756F7267;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A74A4280()
{
  return sub_1A74A41C8(*v0);
}

uint64_t sub_1A74A4288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D0CC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A42B0(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFC9C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A42EC(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFC9C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.ListsModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701938);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v19 = v1[1];
  int v9 = *((unsigned __int8 *)v1 + 16);
  int v17 = *((unsigned __int8 *)v1 + 17);
  int v18 = v9;
  uint64_t v10 = v1[3];
  uint64_t v15 = v1[4];
  uint64_t v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFC9C();
  sub_1A75741B0();
  uint64_t v21 = v8;
  char v20 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703388);
  sub_1A74C130C(&qword_1EB701928, &qword_1EB703388, (void (*)(void))sub_1A74BFCF0);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v12 = v15;
    uint64_t v11 = v16;
    LOBYTE(v21) = 1;
    sub_1A7573AF0();
    LOBYTE(v21) = 2;
    sub_1A7573AD0();
    uint64_t v21 = v11;
    char v20 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
    sub_1A731DB84();
    sub_1A7573B60();
    uint64_t v21 = v12;
    char v20 = 4;
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.ListsModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701908);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFC9C();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703388);
  char v21 = 0;
  sub_1A74C130C(&qword_1EB7018D8, &qword_1EB703388, (void (*)(void))sub_1A74BFD44);
  sub_1A7573A50();
  uint64_t v9 = v22;
  LOBYTE(v22) = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1A75739E0();
  int v20 = v11;
  LOBYTE(v22) = 2;
  int v17 = sub_1A75739C0();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
  char v21 = 3;
  unint64_t v18 = sub_1A73182C8();
  uint64_t v19 = v12;
  sub_1A7573A50();
  char v21 = 4;
  uint64_t v16 = v22;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = v20 & 1;
  *(unsigned char *)(a2 + 17) = v17;
  *(void *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74A4920@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ListsModel.init(from:)(a1, a2);
}

uint64_t sub_1A74A4938(void *a1)
{
  return REMRemindersListDataView.ListsModel.encode(to:)(a1);
}

void *REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter()
{
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

__n128 REMRemindersListDataView.FlaggedModel.init(flatModel:flaggedSmartList:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 25);
  *(void *)a3 = *(void *)a1;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)(a1 + 8);
  *(unsigned char *)(a3 + 24) = v3;
  *(unsigned char *)(a3 + 25) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a3 + 32) = result;
  *(void *)(a3 + 48) = a2;
  return result;
}

uint64_t sub_1A74A49AC()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x65646F4D74616C66;
  }
}

uint64_t sub_1A74A49F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D0EB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A4A18(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFD98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A4A54(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFD98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.FlaggedModel.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7010B8);
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = *v2;
  uint64_t v7 = *((void *)v2 + 2);
  char v8 = *((unsigned char *)v2 + 24);
  char v9 = *((unsigned char *)v2 + 25);
  uint64_t v13 = *((void *)v2 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFD98();
  sub_1A75741B0();
  long long v17 = v14;
  uint64_t v18 = v7;
  char v19 = v8;
  char v20 = v9;
  long long v21 = v2[2];
  char v22 = 0;
  sub_1A74BFDEC();
  uint64_t v10 = v15;
  sub_1A7573B60();
  if (!v10)
  {
    *(void *)&long long v17 = v13;
    char v22 = 1;
    type metadata accessor for REMSmartList_Codable();
    sub_1A74BF618(&qword_1EB703F48, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
    sub_1A7573B00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v6, v4);
}

uint64_t REMRemindersListDataView.FlaggedModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFD98();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v30 = 0;
  sub_1A74BFE40();
  sub_1A7573A50();
  char v9 = v22;
  uint64_t v18 = v24;
  uint64_t v19 = v23;
  int v29 = v25;
  int v17 = v26;
  uint64_t v10 = v28;
  uint64_t v20 = v27;
  type metadata accessor for REMSmartList_Codable();
  char v30 = 1;
  sub_1A74BF618(&qword_1EB703698, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
  long long v21 = v9;
  uint64_t v11 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A75739F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v22;
  uint64_t v13 = v19;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v18;
  *(unsigned char *)(a2 + 24) = v29;
  *(unsigned char *)(a2 + 25) = v17;
  *(void *)(a2 + 32) = v11;
  *(void *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v12;
  id v14 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74A4F6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.FlaggedModel.init(from:)(a1, a2);
}

uint64_t sub_1A74A4F84(void *a1)
{
  return REMRemindersListDataView.FlaggedModel.encode(to:)(a1);
}

void *REMRemindersListDataView.AssignedModel.assignedSmartList.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

__n128 REMRemindersListDataView.AssignedModel.init(listsModel:assignedSmartList:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 17);
  *(void *)a3 = *(void *)a1;
  *(void *)(a3 + 8) = v3;
  *(unsigned char *)(a3 + 16) = v4;
  *(unsigned char *)(a3 + 17) = v5;
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a3 + 24) = result;
  *(void *)(a3 + 40) = a2;
  return result;
}

uint64_t sub_1A74A4FF0()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x646F4D737473696CLL;
  }
}

uint64_t sub_1A74A5034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D0FB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A505C(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFE94();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A5098(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFE94();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.AssignedModel.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4818);
  uint64_t v13 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  uint64_t v7 = v2[1];
  char v9 = *((unsigned char *)v2 + 16);
  int v19 = *((unsigned __int8 *)v2 + 17);
  v12[0] = v2[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFE94();
  sub_1A75741B0();
  uint64_t v14 = v8;
  uint64_t v15 = v7;
  char v16 = v9;
  char v17 = v19;
  long long v18 = *(_OWORD *)(v2 + 3);
  char v20 = 0;
  sub_1A74BFEE8();
  uint64_t v10 = v12[1];
  sub_1A7573B60();
  if (!v10)
  {
    uint64_t v14 = v12[0];
    char v20 = 1;
    type metadata accessor for REMSmartList_Codable();
    sub_1A74BF618(&qword_1EB703F48, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
    sub_1A7573B00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v6, v4);
}

uint64_t REMRemindersListDataView.AssignedModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4830);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFE94();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  sub_1A74BFF3C();
  sub_1A7573A50();
  char v9 = v21;
  int v27 = v23;
  int v17 = v24;
  uint64_t v10 = v26;
  uint64_t v18 = v22;
  uint64_t v19 = v25;
  type metadata accessor for REMSmartList_Codable();
  char v28 = 1;
  sub_1A74BF618(&qword_1EB703698, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
  char v20 = v9;
  uint64_t v11 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A75739F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v21;
  uint64_t v13 = v18;
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v13;
  *(unsigned char *)(a2 + 16) = v27;
  *(unsigned char *)(a2 + 17) = v17;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v12;
  id v14 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74A5598@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.AssignedModel.init(from:)(a1, a2);
}

uint64_t sub_1A74A55B0(void *a1)
{
  return REMRemindersListDataView.AssignedModel.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.TaggedModel.flatModel.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 24);
  char v3 = *(unsigned char *)(v1 + 25);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(unsigned char *)(a1 + 24) = v2;
  *(unsigned char *)(a1 + 25) = v3;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.TaggedModel.allHashtagLabels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.TaggedModel.smartListHashtagLabels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.TaggedModel.smartListHashtagLabelsUpToDate.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

void *REMRemindersListDataView.TaggedModel.taggedSmartList.getter()
{
  uint64_t v1 = *(void **)(v0 + 72);
  id v2 = v1;
  return v1;
}

void *REMRemindersListDataView.TaggedModel.manualOrderingID.getter@<X0>(void *a1@<X8>)
{
  id v2 = (void *)v1[10];
  uint64_t v3 = v1[11];
  uint64_t v4 = v1[12];
  uint64_t v5 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1A7315C10(v2);
}

__n128 REMRemindersListDataView.TaggedModel.init(flatModel:allHashtagLabels:smartListHashtagLabels:smartListHashtagLabelsUpToDate:taggedSmartList:manualOrderingID:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7 = *(unsigned char *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 25);
  *(void *)a7 = *(void *)a1;
  *(_OWORD *)(a7 + 8) = *(_OWORD *)(a1 + 8);
  *(unsigned char *)(a7 + 24) = v7;
  *(unsigned char *)(a7 + 25) = v8;
  *(_OWORD *)(a7 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a7 + 48) = a2;
  *(void *)(a7 + 56) = a3;
  *(unsigned char *)(a7 + 64) = a4;
  *(void *)(a7 + 72) = a5;
  __n128 result = *(__n128 *)a6;
  long long v10 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a7 + 80) = *(_OWORD *)a6;
  *(_OWORD *)(a7 + 96) = v10;
  return result;
}

unint64_t sub_1A74A56C8(char a1)
{
  unint64_t result = 0x65646F4D74616C66;
  switch(a1)
  {
    case 1:
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 4:
      unint64_t result = 0x6D53646567676174;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A74A57A4()
{
  return sub_1A74A56C8(*v0);
}

uint64_t sub_1A74A57AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D10AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A57D4(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFF90();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A5810(uint64_t a1)
{
  unint64_t v2 = sub_1A74BFF90();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.TaggedModel.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4840);
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v28 = *v2;
  uint64_t v7 = *((void *)v2 + 2);
  char v8 = *((unsigned char *)v2 + 24);
  char v9 = *((unsigned char *)v2 + 25);
  uint64_t v10 = *((void *)v2 + 6);
  uint64_t v26 = *((void *)v2 + 7);
  uint64_t v27 = v10;
  int v35 = *((unsigned __int8 *)v2 + 64);
  uint64_t v11 = *((void *)v2 + 9);
  uint64_t v24 = *((void *)v2 + 10);
  uint64_t v25 = v11;
  uint64_t v12 = *((void *)v2 + 12);
  uint64_t v21 = *((void *)v2 + 11);
  uint64_t v22 = v12;
  uint64_t v23 = *((void *)v2 + 13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFF90();
  uint64_t v13 = v4;
  sub_1A75741B0();
  long long v31 = v28;
  uint64_t v32 = v7;
  LOBYTE(v33) = v8;
  BYTE1(v33) = v9;
  long long v34 = v2[2];
  char v36 = 0;
  sub_1A74BFDEC();
  uint64_t v14 = v29;
  sub_1A7573B60();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v6, v4);
  }
  uint64_t v17 = v25;
  uint64_t v16 = v26;
  uint64_t v18 = v24;
  uint64_t v19 = v30;
  *(void *)&long long v31 = v27;
  char v36 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705760);
  sub_1A74812B8();
  sub_1A7573B60();
  *(void *)&long long v31 = v16;
  char v36 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A7474658(&qword_1EB7003D8, &qword_1EB704AC0);
  sub_1A7573B60();
  LOBYTE(v31) = 3;
  sub_1A7573B20();
  *(void *)&long long v31 = v17;
  char v36 = 4;
  type metadata accessor for REMSmartList_Codable();
  sub_1A74BF618(&qword_1EB703F48, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
  sub_1A7573B00();
  *(void *)&long long v31 = v18;
  *((void *)&v31 + 1) = v21;
  uint64_t v32 = v22;
  uint64_t v33 = v23;
  char v36 = 5;
  sub_1A74BFFE4();
  sub_1A7573B00();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v6, v13);
}

void REMRemindersListDataView.TaggedModel.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4858);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74BFF90();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v50 = 0;
    sub_1A74BFE40();
    sub_1A7573A50();
    uint64_t v9 = (uint64_t)v43;
    uint64_t v38 = v44;
    uint64_t v39 = a2;
    uint64_t v37 = v45;
    int v49 = v46;
    int v36 = BYTE1(v46);
    uint64_t v11 = v47;
    uint64_t v10 = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705760);
    char v50 = 1;
    sub_1A731615C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A7573A50();
    uint64_t v34 = v11;
    uint64_t v35 = v9;
    uint64_t v12 = (uint64_t)v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    char v50 = 2;
    sub_1A7474658(&qword_1EB700070, &qword_1EB704AC0);
    uint64_t v41 = v12;
    swift_bridgeObjectRetain();
    uint64_t v33 = 0;
    sub_1A7573A50();
    uint64_t v13 = v43;
    LOBYTE(v43) = 3;
    swift_bridgeObjectRetain();
    int v14 = sub_1A7573A10();
    uint64_t v42 = v13;
    LODWORD(v32) = v14;
    type metadata accessor for REMSmartList_Codable();
    char v50 = 4;
    sub_1A74BF618(&qword_1EB703698, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
    sub_1A75739F0();
    uint64_t v15 = v43;
    char v50 = 5;
    sub_1A74C0038();
    long long v31 = v15;
    id v40 = v15;
    sub_1A75739F0();
    LODWORD(v33) = v32 & 1;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v16 = v43;
    uint64_t v32 = v43;
    uint64_t v30 = v44;
    uint64_t v17 = v45;
    uint64_t v18 = v46;
    swift_bridgeObjectRetain();
    uint64_t v19 = v34;
    swift_bridgeObjectRetain();
    uint64_t v29 = v10;
    swift_bridgeObjectRetain();
    uint64_t v20 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v40 = v40;
    uint64_t v21 = v16;
    uint64_t v22 = v30;
    sub_1A7315C10(v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v24 = v40;

    uint64_t v26 = v38;
    uint64_t v25 = v39;
    *uint64_t v39 = v23;
    v25[1] = v26;
    v25[2] = v37;
    *((unsigned char *)v25 + 24) = v49;
    *((unsigned char *)v25 + 25) = v36;
    v25[4] = v19;
    v25[5] = v29;
    v25[6] = v20;
    v25[7] = v42;
    *((unsigned char *)v25 + 64) = v33;
    uint64_t v27 = v32;
    v25[9] = v31;
    v25[10] = v27;
    v25[11] = v22;
    v25[12] = v17;
    v25[13] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A7315D30(v27);
  }
}

void sub_1A74A6258(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1A74A6270(void *a1)
{
  return REMRemindersListDataView.TaggedModel.encode(to:)(a1);
}

id REMRemindersListDataView.TemplateModel.listRepresentationOfTemplate.getter()
{
  return *v0;
}

uint64_t REMRemindersListDataView.TemplateModel.model.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  char v3 = *(unsigned char *)(v1 + 33);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 16);
  *(unsigned char *)(a1 + 24) = v2;
  *(unsigned char *)(a1 + 25) = v3;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 REMRemindersListDataView.TemplateModel.init(listRepresentationOfTemplate:model:manualOrderingID:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a4 + 40) = *((_OWORD *)a2 + 2);
  __n128 result = *(__n128 *)a3;
  long long v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 56) = *(_OWORD *)a3;
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 24);
  char v8 = *((unsigned char *)a2 + 25);
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = v6;
  *(unsigned char *)(a4 + 32) = v7;
  *(unsigned char *)(a4 + 33) = v8;
  *(_OWORD *)(a4 + 72) = v5;
  return result;
}

unint64_t sub_1A74A6338()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 == 1) {
    unint64_t v1 = 0x6C65646F6DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD00000000000001CLL;
  }
}

uint64_t sub_1A74A6394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D133C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A63BC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C008C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A63F8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C008C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.TemplateModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4868);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v23 = v1[2];
  uint64_t v24 = v8;
  uint64_t v22 = v1[3];
  int v31 = *((unsigned __int8 *)v1 + 32);
  int v21 = *((unsigned __int8 *)v1 + 33);
  long long v25 = *(_OWORD *)(v1 + 5);
  uint64_t v10 = v1[7];
  uint64_t v19 = v1[8];
  uint64_t v20 = v10;
  uint64_t v11 = v1[9];
  uint64_t v17 = v1[10];
  uint64_t v18 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C008C();
  sub_1A75741B0();
  uint64_t v26 = v9;
  char v32 = 0;
  type metadata accessor for REMList_Codable();
  sub_1A74BF618(&qword_1EB705888, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v13 = v17;
    uint64_t v12 = v18;
    uint64_t v15 = v19;
    uint64_t v14 = v20;
    uint64_t v26 = v24;
    uint64_t v27 = v23;
    uint64_t v28 = v22;
    LOBYTE(v29) = v31;
    BYTE1(v29) = v21;
    long long v30 = v25;
    char v32 = 1;
    sub_1A74BFDEC();
    sub_1A7573B60();
    uint64_t v26 = v14;
    uint64_t v27 = v15;
    uint64_t v28 = v12;
    uint64_t v29 = v13;
    char v32 = 2;
    sub_1A74BFFE4();
    sub_1A7573B00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMRemindersListDataView.TemplateModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4878);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C008C();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for REMList_Codable();
    char v41 = 0;
    sub_1A74BF618(&qword_1EB705890, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
    sub_1A7573A50();
    uint64_t v9 = v34;
    char v41 = 1;
    sub_1A74BFE40();
    id v10 = v9;
    sub_1A7573A50();
    uint64_t v11 = v34;
    uint64_t v30 = v35;
    id v31 = v10;
    uint64_t v29 = v36;
    int v40 = v37;
    int v28 = BYTE1(v37);
    uint64_t v12 = v38;
    uint64_t v13 = v39;
    char v41 = 2;
    sub_1A74C0038();
    uint64_t v33 = v11;
    swift_bridgeObjectRetain();
    uint64_t v32 = v12;
    uint64_t v14 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A75739F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v15 = v34;
    uint64_t v16 = v35;
    uint64_t v26 = v36;
    uint64_t v27 = v34;
    uint64_t v25 = v37;
    id v31 = v31;
    uint64_t v17 = v33;
    swift_bridgeObjectRetain();
    uint64_t v18 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = v15;
    uint64_t v20 = v16;
    uint64_t v21 = v25;
    sub_1A7315C10(v19);
    id v22 = v31;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)a2 = v22;
    *(void *)(a2 + 8) = v17;
    uint64_t v23 = v29;
    *(void *)(a2 + 16) = v30;
    *(void *)(a2 + 24) = v23;
    *(unsigned char *)(a2 + 32) = v40;
    *(unsigned char *)(a2 + 33) = v28;
    *(void *)(a2 + 40) = v18;
    *(void *)(a2 + 48) = v14;
    *(void *)(a2 + 56) = v27;
    *(void *)(a2 + 64) = v20;
    *(void *)(a2 + 72) = v26;
    *(void *)(a2 + 80) = v21;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1A7315D30(v27);
  }
}

void sub_1A74A6AA8(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A74A6AC0(void *a1)
{
  return REMRemindersListDataView.TemplateModel.encode(to:)(a1);
}

BOOL static REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t sub_1A74A6B1C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0134();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A6B58(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0134();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74A6B94()
{
  if (*v0) {
    return 0x664F6C6C61;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1A74A6BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D1484(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A6BF8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C00E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A6C34(uint64_t a1)
{
  unint64_t v2 = sub_1A74C00E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74A6C70(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0188();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A6CAC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0188();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4880);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4888);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4890);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C00E0();
  sub_1A75741B0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A74C0134();
    uint64_t v14 = v18;
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A74C0188();
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F48B0);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F48B8);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F48C0);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C00E0();
  uint64_t v11 = v32;
  sub_1A7574190();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_1A7573A70();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A7573640();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    void *v22 = &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A74C0134();
    uint64_t v18 = v14;
    sub_1A7573990();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A74C0188();
    sub_1A7573990();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_1A74A73E8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.init(from:)(a1, a2);
}

uint64_t sub_1A74A7400(void *a1)
{
  return REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.DateBucketsModel.RepresentativeDate.formattingStyle.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t REMRemindersListDataView.DateBucketsModel.RepresentativeDate.init(date:formattingStyle:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
  *(unsigned char *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_1A74A74CC()
{
  if (*v0) {
    return 0x697474616D726F66;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_1A74A750C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D156C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A7534(uint64_t a1)
{
  unint64_t v2 = sub_1A74C01FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A7570(uint64_t a1)
{
  unint64_t v2 = sub_1A74C01FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.DateBucketsModel.RepresentativeDate.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F48C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C01FC();
  sub_1A75741B0();
  v10[15] = 0;
  sub_1A7571B60();
  sub_1A74BF618(&qword_1EB704C38, MEMORY[0x1E4F27928]);
  sub_1A7573B60();
  if (!v2)
  {
    v10[14] = *(unsigned char *)(v3
                       + *(int *)(type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0)
                                + 20));
    v10[13] = 1;
    sub_1A74C0250();
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMRemindersListDataView.DateBucketsModel.RepresentativeDate.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v27 = sub_1A7571B60();
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F48E0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  uint64_t v26 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C01FC();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = v24;
  char v30 = 0;
  sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
  uint64_t v15 = v27;
  uint64_t v16 = v25;
  sub_1A7573A50();
  char v17 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v21 = (uint64_t)v13;
  v17(v13, v5, v15);
  char v28 = 1;
  sub_1A74C02A4();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v16);
  uint64_t v18 = v21;
  *(unsigned char *)(v21 + *(int *)(v22 + 20)) = v29;
  sub_1A74BE75C(v18, v23, type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A74BE86C(v18, type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate);
}

uint64_t sub_1A74A7AFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.DateBucketsModel.RepresentativeDate.init(from:)(a1, a2);
}

uint64_t sub_1A74A7B14(void *a1)
{
  return REMRemindersListDataView.DateBucketsModel.RepresentativeDate.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.Diff.insertedReminderObjectIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.Diff.updatedListObjectIDs.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL REMRemindersListDataView.Diff.isEmpty.getter()
{
  uint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = v0[4];
  if ((*v0 & 0xC000000000000001) != 0)
  {
    if (sub_1A7573400()) {
      return 0;
    }
  }
  else if (*(void *)(*v0 + 16))
  {
    return 0;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    if (sub_1A7573400()) {
      return 0;
    }
  }
  else if (*(void *)(v1 + 16))
  {
    return 0;
  }
  if ((v3 & 0xC000000000000001) == 0)
  {
    if (!*(void *)(v3 + 16)) {
      goto LABEL_13;
    }
    return 0;
  }
  if (sub_1A7573400()) {
    return 0;
  }
LABEL_13:
  if ((v2 & 0xC000000000000001) != 0)
  {
    if (sub_1A7573400()) {
      return 0;
    }
  }
  else if (*(void *)(v2 + 16))
  {
    return 0;
  }
  return *(void *)(v4 + 16) == 0;
}

uint64_t REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

unint64_t sub_1A74A7C38(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000023;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A74A7CE4()
{
  return sub_1A74A7C38(*v0);
}

uint64_t sub_1A74A7CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D1674(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74A7D14(uint64_t a1)
{
  unint64_t v2 = sub_1A74C02F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74A7D50(uint64_t a1)
{
  unint64_t v2 = sub_1A74C02F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.Diff.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7010D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v17 = v1[2];
  uint64_t v18 = v8;
  uint64_t v10 = v1[3];
  uint64_t v15 = v1[4];
  uint64_t v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C02F8();
  sub_1A75741B0();
  uint64_t v20 = v9;
  char v19 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
  sub_1A74815B4();
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v12 = v16;
    uint64_t v11 = v17;
    uint64_t v20 = v18;
    char v19 = 1;
    sub_1A7573B60();
    uint64_t v20 = v11;
    char v19 = 2;
    sub_1A7573B60();
    uint64_t v20 = v12;
    char v19 = 3;
    sub_1A7573B60();
    uint64_t v20 = v15;
    char v19 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
    sub_1A7474658(&qword_1EB704C00, &qword_1EB705A10);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.Diff.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704828);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C02F8();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
  char v23 = 0;
  sub_1A748150C();
  sub_1A7573A50();
  uint64_t v22 = a2;
  uint64_t v9 = v24;
  char v23 = 1;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  uint64_t v20 = v9;
  uint64_t v10 = v24;
  char v23 = 2;
  swift_bridgeObjectRetain();
  v19[1] = 0;
  sub_1A7573A50();
  uint64_t v21 = v10;
  uint64_t v11 = v24;
  char v23 = 3;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  uint64_t v13 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
  char v23 = 4;
  sub_1A7474658(&qword_1EB704C68, &qword_1EB705A10);
  v19[0] = v13;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  uint64_t v14 = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v24;
  swift_bridgeObjectRetain();
  uint64_t v16 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v22;
  void *v22 = v14;
  v17[1] = v16;
  uint64_t v18 = v19[0];
  void v17[2] = v11;
  uint64_t v17[3] = v18;
  v17[4] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74A84D8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMRemindersListDataView.Diff.init(from:)(a1, a2);
}

uint64_t sub_1A74A84F0(void *a1)
{
  return REMRemindersListDataView.Diff.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.Result.model.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t REMRemindersListDataView.Result.diff.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a1 + 28));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  a2[4] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void *REMRemindersListDataView.Result.latestFetchResultToken.getter(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + *(int *)(a1 + 32));
  id v3 = v2;
  return v2;
}

__n128 REMRemindersListDataView.Result.init(model:diff:latestFetchResultToken:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a2 + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t v9 = type metadata accessor for REMRemindersListDataView.Result();
  uint64_t v10 = a5 + *(int *)(v9 + 28);
  __n128 result = *(__n128 *)a2;
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)a2;
  *(_OWORD *)(v10 + 16) = v12;
  *(void *)(v10 + 32) = v8;
  *(void *)(a5 + *(int *)(v9 + 32)) = a3;
  return result;
}

double static REMRemindersListDataView.fetchList(store:list:sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:diffingAgainst:)@<D0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, unsigned __int8 *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v81 = a8;
  *(void *)&long long v82 = a1;
  uint64_t v78 = a4;
  uint64_t v79 = a6;
  LODWORD(v80) = a5;
  uint64_t v76 = a9;
  uint64_t v12 = type metadata accessor for REMRemindersListDataView.ListInvocation.Parameters(0);
  uint64_t v13 = (int *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *a3;
  int v77 = *a7;
  uint64_t v17 = (objc_class *)type metadata accessor for REMList_Codable();
  id v18 = objc_allocWithZone(v17);
  id v19 = a2;
  id v20 = objc_msgSend(v19, sel_store);
  id v21 = objc_msgSend(v19, sel_account);
  id v22 = objc_msgSend(v19, sel_storage);
  v94.receiver = v18;
  v94.super_class = v17;
  id v23 = objc_msgSendSuper2(&v94, sel_initWithStore_account_storage_, v20, v21, v22);

  id v24 = v23;
  id v25 = objc_msgSend(v19, sel_parentList);
  objc_msgSend(v24, sel_setParentList_, v25);

  sub_1A74BE75C(v78, (uint64_t)&v15[v13[8]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A74BE75C(v79, (uint64_t)&v15[v13[10]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *(void *)uint64_t v15 = v24;
  v15[8] = v16;
  v15[v13[9]] = v80;
  v15[v13[11]] = v77;
  id v26 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.ListInvocation());
  id v27 = objc_msgSend(v26, sel_initWithFetchResultTokenToDiffAgainst_, v81);
  uint64_t v28 = v95;
  sub_1A73050E4((uint64_t)v27, (uint64_t)v15, v83);

  if (v28)
  {
    sub_1A74BE86C((uint64_t)v15, type metadata accessor for REMRemindersListDataView.ListInvocation.Parameters);
  }
  else
  {
    uint64_t v71 = 0;
    uint64_t v79 = v83[2];
    uint64_t v80 = v83[1];
    LODWORD(v78) = v84;
    int v77 = v85;
    uint64_t v31 = v86;
    uint64_t v30 = v87;
    uint64_t v75 = v88;
    uint64_t v74 = v89;
    uint64_t v73 = v90;
    long long v82 = v91;
    uint64_t v32 = v92;
    id v72 = v93;
    uint64_t v33 = qword_1EB704BE8;
    uint64_t v95 = v83[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v34 = v32;
    if (v33 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1A7571E90();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EB702F90);
    id v36 = v19;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v37 = v34;
    id v38 = v36;
    uint64_t v39 = v30;
    id v40 = v38;
    id v41 = v37;
    uint64_t v42 = sub_1A7571E80();
    os_log_type_t v43 = sub_1A7572FF0();
    int v44 = v43;
    BOOL v45 = os_log_type_enabled(v42, v43);
    id v70 = v41;
    if (v45)
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v81 = v31;
      uint64_t v47 = v46;
      uint64_t v48 = swift_slowAlloc();
      os_log_t v69 = v42;
      int v49 = (void *)v48;
      *(_DWORD *)uint64_t v47 = 138412546;
      int v68 = v44;
      id v50 = objc_msgSend(v40, sel_objectID);
      v83[0] = (uint64_t)v50;
      uint64_t v51 = v95;
      uint64_t v67 = v39;
      sub_1A7573250();
      *int v49 = v50;
      uint64_t v52 = v49;

      *(_WORD *)(v47 + 12) = 2048;
      uint64_t v53 = *(void *)(v51 + 16);

      uint64_t v54 = v67;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v83[0] = v53;
      sub_1A7573250();

      uint64_t v39 = v54;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_log_t v55 = v69;
      _os_log_impl(&dword_1A72A1000, v69, (os_log_type_t)v68, "DATAVIEW RESULT {name: REMRemindersListDataView_ListInvocation, list.objectID: %@, reminder.count: %ld}", (uint8_t *)v47, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v52, -1, -1);
      uint64_t v56 = v47;
      uint64_t v31 = v81;
      MEMORY[0x1AD0CD330](v56, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v57 = v76;
    sub_1A74BE86C((uint64_t)v15, type metadata accessor for REMRemindersListDataView.ListInvocation.Parameters);
    id v58 = v72;
    id v59 = v72;
    uint64_t v60 = v75;
    swift_bridgeObjectRetain();
    uint64_t v61 = v74;
    swift_bridgeObjectRetain();
    uint64_t v62 = v73;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

    id v63 = v70;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v64 = v95;
    swift_bridgeObjectRelease();
    uint64_t v65 = v80;
    *(void *)uint64_t v57 = v64;
    *(void *)(v57 + 8) = v65;
    *(void *)(v57 + 16) = v79;
    *(unsigned char *)(v57 + 24) = v78;
    *(unsigned char *)(v57 + 25) = v77;
    *(void *)(v57 + 32) = v31;
    *(void *)(v57 + 40) = v39;
    *(void *)(v57 + 48) = v63;
    *(void *)(v57 + 56) = v60;
    *(void *)(v57 + 64) = v61;
    *(void *)(v57 + 72) = v62;
    double result = *(double *)&v82;
    *(_OWORD *)(v57 + 80) = v82;
    *(void *)(v57 + 96) = v58;
  }
  return result;
}

void static REMRemindersListDataView.fetchListRepresentationOfDownloadedPublicTemplate(with:store:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  id v9 = objc_allocWithZone(v8);
  id v10 = a1;
  id v11 = objc_msgSend(v10, sel_uuid);
  sub_1A7571BB0();

  uint64_t v12 = (void *)sub_1A7571B90();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v13 = objc_msgSend(v10, sel_entityName);
  if (!v13)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    id v13 = (id)sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  v87.receiver = v9;
  v87.super_class = v8;
  id v14 = objc_msgSendSuper2(&v87, sel_initWithUUID_entityName_, v12, v13);

  id v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.PublicTemplateInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  sub_1A7305EB0((uint64_t)v15, (uint64_t)v14, &v75);
  if (v2)
  {
  }
  else
  {

    uint64_t v16 = v75;
    uint64_t v71 = v76[0];
    uint64_t v70 = v76[1];
    int v69 = v77;
    int v68 = v78;
    uint64_t v18 = v79;
    uint64_t v17 = v80;
    id v19 = v81;
    uint64_t v67 = v82;
    uint64_t v66 = v83;
    uint64_t v65 = v84;
    long long v73 = v85;
    id v64 = v86;
    uint64_t v20 = qword_1EB704BE8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v21 = v19;
    if (v20 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1A7571E90();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB702F90);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v23 = v21;
    uint64_t v24 = v17;
    id v25 = v10;
    id v26 = v23;
    id v27 = v25;
    id v28 = v26;
    char v29 = sub_1A7571E80();
    int v30 = sub_1A7572FF0();
    BOOL v31 = os_log_type_enabled(v29, (os_log_type_t)v30);
    uint64_t v72 = 0;
    uint64_t v74 = v18;
    if (v31)
    {
      int v60 = v30;
      os_log_t v62 = v29;
      id v63 = v14;
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 138412802;
      uint64_t v75 = (uint64_t)v27;
      v59[0] = v28;
      id v34 = v27;
      sub_1A7573250();
      uint64_t v61 = v33;
      *uint64_t v33 = v27;

      *(_WORD *)(v32 + 12) = 2048;
      uint64_t v35 = *(void *)(v16 + 16);
      id v36 = v59[0];

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v75 = v35;
      id v37 = v36;
      v59[1] = v76;
      sub_1A7573250();

      uint64_t v38 = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2048;
      uint64_t v39 = MEMORY[0x1E4FBC860];
      uint64_t v75 = MEMORY[0x1E4FBC860];
      uint64_t v40 = *(void *)(v16 + 16);
      if (v40)
      {
        id v41 = v37;
        swift_bridgeObjectRetain();
        uint64_t v42 = 72;
        do
        {
          uint64_t v43 = swift_bridgeObjectRetain();
          sub_1A72D15DC(v43);
          v42 += 48;
          --v40;
        }
        while (v40);
        int v44 = v41;
        swift_bridgeObjectRelease();
        uint64_t v39 = v75;
      }
      else
      {
        int v44 = v37;
      }
      uint64_t v45 = v88;
      uint64_t v48 = *(void *)(v39 + 16);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v75 = v48;
      uint64_t v49 = v38;
      sub_1A7573250();
      uint64_t v47 = v44;

      uint64_t v46 = v49;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_log_t v50 = v62;
      _os_log_impl(&dword_1A72A1000, v62, (os_log_type_t)v60, "DATAVIEW RESULT {name: REMRemindersListDataView_PublicTemplateInvocation, publicTemplateObjectID: %@, section.count (including sectionless): %ld, reminder.count: %ld}", (uint8_t *)v32, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      uint64_t v51 = v61;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v51, -1, -1);
      MEMORY[0x1AD0CD330](v32, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v45 = v88;
      uint64_t v46 = v24;
      uint64_t v47 = v28;
    }
    id v52 = v64;
    id v53 = v64;
    uint64_t v54 = v67;
    swift_bridgeObjectRetain();
    uint64_t v55 = v66;
    swift_bridgeObjectRetain();
    uint64_t v56 = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v57 = v74;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v58 = v71;
    *(void *)uint64_t v45 = v16;
    *(void *)(v45 + 8) = v58;
    *(void *)(v45 + 16) = v70;
    *(unsigned char *)(v45 + 24) = v69;
    *(unsigned char *)(v45 + 25) = v68;
    *(void *)(v45 + 32) = v57;
    *(void *)(v45 + 40) = v46;
    *(void *)(v45 + 48) = v47;
    *(void *)(v45 + 56) = v54;
    *(void *)(v45 + 64) = v55;
    *(void *)(v45 + 72) = v56;
    *(_OWORD *)(v45 + 80) = v73;
    *(void *)(v45 + 96) = v52;
  }
}

__n128 _s19ReminderKitInternal24REMRemindersListDataViewO0E5ModelV5model4listAeC04FlatH0V_So7REMListCtcfC_0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 25);
  *(void *)a3 = *(void *)a1;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)(a1 + 8);
  *(unsigned char *)(a3 + 24) = v3;
  *(unsigned char *)(a3 + 25) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a3 + 32) = result;
  *(void *)(a3 + 48) = a2;
  return result;
}

uint64_t Array<A>.reminders.getter(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 72;
    do
    {
      uint64_t v5 = swift_bridgeObjectRetain();
      sub_1A72D15DC(v5);
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

__n128 static REMRemindersListDataView.fetchGroup(store:group:sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:includePinnedSublists:diffingAgainst:)@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W7>, uint64_t a8@<X8>, uint64_t a9)
{
  int v41 = a5;
  int v42 = a7;
  uint64_t v39 = a4;
  uint64_t v40 = a6;
  uint64_t v43 = a9;
  uint64_t v44 = a1;
  uint64_t v12 = type metadata accessor for REMRemindersListDataView.GroupInvocation.Parameters(0);
  id v13 = (int *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v38 = *a3;
  uint64_t v16 = (objc_class *)type metadata accessor for REMList_Codable();
  id v17 = objc_allocWithZone(v16);
  id v18 = a2;
  id v19 = objc_msgSend(v18, sel_store);
  id v20 = objc_msgSend(v18, sel_account);
  id v21 = objc_msgSend(v18, sel_storage);
  v54.receiver = v17;
  v54.super_class = v16;
  id v22 = objc_msgSendSuper2(&v54, sel_initWithStore_account_storage_, v19, v20, v21);

  id v23 = v22;
  id v24 = objc_msgSend(v18, sel_parentList);
  objc_msgSend(v23, sel_setParentList_, v24);

  sub_1A74BE75C(v39, (uint64_t)&v15[v13[8]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A74BE75C(v40, (uint64_t)&v15[v13[10]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *(void *)id v15 = v23;
  v15[8] = v38;
  v15[v13[9]] = v41;
  v15[v13[11]] = v42;
  id v25 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.GroupInvocation());
  id v26 = objc_msgSend(v25, sel_initWithFetchResultTokenToDiffAgainst_, v43);
  uint64_t v27 = v55;
  sub_1A7306BE8((uint64_t)v26, (uint64_t)v15, v45);

  sub_1A74BE86C((uint64_t)v15, type metadata accessor for REMRemindersListDataView.GroupInvocation.Parameters);
  if (!v27)
  {
    uint64_t v29 = v45[1];
    char v30 = v46;
    char v31 = v47;
    uint64_t v32 = v51;
    uint64_t v33 = v52;
    uint64_t v34 = v53;
    __n128 result = v48;
    long long v35 = v49;
    long long v36 = v50;
    *(void *)a8 = v45[0];
    *(void *)(a8 + 8) = v29;
    *(unsigned char *)(a8 + 16) = v30;
    *(unsigned char *)(a8 + 17) = v31;
    *(__n128 *)(a8 + 24) = result;
    *(void *)(a8 + 40) = v33;
    *(_OWORD *)(a8 + 48) = v35;
    *(_OWORD *)(a8 + 64) = v36;
    *(void *)(a8 + 80) = v32;
    *(void *)(a8 + 88) = v34;
  }
  return result;
}

__n128 static REMRemindersListDataView.fetchFlagged(store:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for REMRemindersListDataView.FlaggedInvocation.Parameters(0);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A74BE75C(a1, (uint64_t)v9, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  id v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.FlaggedInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a2);
  sub_1A7307994(v10, (uint64_t)v9, &v21);

  sub_1A74BE86C((uint64_t)v9, type metadata accessor for REMRemindersListDataView.FlaggedInvocation.Parameters);
  if (!v3)
  {
    char v12 = v23;
    char v13 = v24;
    uint64_t v14 = v26;
    uint64_t v15 = v29;
    uint64_t v16 = v30;
    __n128 result = v22;
    long long v17 = v25;
    long long v18 = v27;
    long long v19 = v28;
    *(void *)a3 = v21;
    *(__n128 *)(a3 + 8) = result;
    *(unsigned char *)(a3 + 24) = v12;
    *(unsigned char *)(a3 + 25) = v13;
    *(_OWORD *)(a3 + 32) = v17;
    *(void *)(a3 + 48) = v14;
    *(_OWORD *)(a3 + 56) = v18;
    *(_OWORD *)(a3 + 72) = v19;
    *(void *)(a3 + 88) = v15;
    *(void *)(a3 + 96) = v16;
  }
  return result;
}

uint64_t static REMRemindersListDataView.fetchFlagged(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:)@<X0>(unsigned char *a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  char v13 = (int *)(Configuration - 8);
  MEMORY[0x1F4188790](Configuration);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_1A74BE75C(a2, (uint64_t)&v15[v13[7]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A74BE75C(a4, (uint64_t)&v15[v13[9]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  unsigned char *v15 = (_BYTE)a1;
  v15[v13[8]] = a3;
  v15[v13[10]] = 0;
  static REMRemindersListDataView.fetchFlagged(store:configuration:diffingAgainst:)((uint64_t)v15, a5, a6);
  return sub_1A74BE86C((uint64_t)v15, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
}

__n128 static REMRemindersListDataView.fetchAll(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:)@<Q0>(unsigned char *a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for REMRemindersListDataView.AllInvocation.Parameters(0);
  char v13 = (int *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v27[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_1A74BE75C(a2, (uint64_t)&v15[v13[7]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A74BE75C(a4, (uint64_t)&v15[v13[9]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  unsigned char *v15 = (_BYTE)a1;
  v15[v13[8]] = a3;
  id v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.AllInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a5);
  uint64_t v17 = v35;
  sub_1A730875C((uint64_t)v16, (uint64_t)v15, v27);

  sub_1A74BE86C((uint64_t)v15, type metadata accessor for REMRemindersListDataView.AllInvocation.Parameters);
  if (!v17)
  {
    long long v19 = v27[1];
    char v20 = v28;
    char v21 = v29;
    uint64_t v22 = v33;
    uint64_t v23 = v34;
    __n128 result = v30;
    long long v24 = v31;
    long long v25 = v32;
    *(uint64_t **)a6 = v27[0];
    *(void *)(a6 + 8) = v19;
    *(unsigned char *)(a6 + 16) = v20;
    *(unsigned char *)(a6 + 17) = v21;
    *(__n128 *)(a6 + 24) = result;
    *(_OWORD *)(a6 + 40) = v24;
    *(_OWORD *)(a6 + 56) = v25;
    *(void *)(a6 + 72) = v22;
    *(void *)(a6 + 80) = v23;
  }
  return result;
}

__n128 static REMRemindersListDataView.fetchAssigned(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:currentUserShareParticipantIDsOverride:)@<Q0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  v31[1] = a1;
  uint64_t v15 = type metadata accessor for REMRemindersListDataView.AssignedInvocation.Parameters(0);
  id v16 = (int *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  long long v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  sub_1A74BE75C(a3, (uint64_t)&v18[v16[7]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A74BE75C(a5, (uint64_t)&v18[v16[9]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  unsigned char *v18 = (_BYTE)a2;
  v18[v16[8]] = a4;
  *(void *)&v18[v16[10]] = a7;
  id v19 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.AssignedInvocation());
  swift_bridgeObjectRetain();
  id v20 = objc_msgSend(v19, sel_initWithFetchResultTokenToDiffAgainst_, a6);
  uint64_t v21 = v41;
  sub_1A7308804(v20, (uint64_t)v18, v32);

  sub_1A74BE86C((uint64_t)v18, type metadata accessor for REMRemindersListDataView.AssignedInvocation.Parameters);
  if (!v21)
  {
    uint64_t v23 = v32[1];
    char v24 = v33;
    char v25 = v34;
    uint64_t v26 = v36;
    uint64_t v27 = v39;
    uint64_t v28 = v40;
    __n128 result = v35;
    long long v29 = v37;
    long long v30 = v38;
    *(void *)a8 = v32[0];
    *(void *)(a8 + 8) = v23;
    *(unsigned char *)(a8 + 16) = v24;
    *(unsigned char *)(a8 + 17) = v25;
    *(__n128 *)(a8 + 24) = result;
    *(void *)(a8 + 40) = v26;
    *(_OWORD *)(a8 + 48) = v29;
    *(_OWORD *)(a8 + 64) = v30;
    *(void *)(a8 + 80) = v27;
    *(void *)(a8 + 88) = v28;
  }
  return result;
}

double static REMRemindersListDataView.fetchAssigned(store:configuration:diffingAgainst:currentUserShareParticipantIDsOverride:)@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v12 = *a2;
  uint64_t Configuration = (int *)type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  *(void *)&double result = static REMRemindersListDataView.fetchAssigned(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:currentUserShareParticipantIDsOverride:)(a1, &v12, (uint64_t)&a2[Configuration[5]], a2[Configuration[6]], (uint64_t)&a2[Configuration[7]], a3, a4, a5).n128_u64[0];
  return result;
}

uint64_t static REMRemindersListDataView.fetchSearch(store:objectIDs:sortingStyle:showCompleted:countCompleted:diffingAgainst:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t **a7@<X8>)
{
  uint64_t v67 = a6;
  int v66 = a5;
  uint64_t v64 = a4;
  uint64_t v68 = a1;
  uint64_t v70 = sub_1A7571BC0();
  uint64_t v10 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v74 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for REMRemindersListDataView.SearchInvocation.Parameters(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  int v15 = *a3;
  unint64_t v73 = a2 & 0xC000000000000001;
  uint64_t v61 = a7;
  uint64_t v65 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v13;
  int v62 = v15;
  if ((a2 & 0xC000000000000001) != 0)
  {
    uint64_t v16 = sub_1A7573400();
    unint64_t v17 = MEMORY[0x1E4FBC860];
    if (!v16) {
      goto LABEL_19;
    }
    uint64_t v18 = v16;
    unint64_t v87 = MEMORY[0x1E4FBC860];
    sub_1A75736F0();
    uint64_t v84 = sub_1A75733B0();
    uint64_t v85 = v19;
    unsigned __int8 v86 = 1;
    if ((v18 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
    __break(1u);
  }
  uint64_t v18 = *(void *)(a2 + 16);
  unint64_t v17 = MEMORY[0x1E4FBC860];
  if (!v18)
  {
LABEL_19:
    uint64_t v45 = sub_1A72E72E8(v17);
    swift_bridgeObjectRelease();
    uint64_t v46 = v63;
    uint64_t v47 = (uint64_t)v65;
    sub_1A74BE75C(v64, (uint64_t)&v65[*(int *)(v63 + 24)], type metadata accessor for REMRemindersListDataView.ShowCompleted);
    *(void *)uint64_t v47 = v45;
    *(unsigned char *)(v47 + 8) = v62;
    *(unsigned char *)(v47 + *(int *)(v46 + 28)) = v66 & 1;
    id v48 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.SearchInvocation());
    id v49 = objc_msgSend(v48, sel_initWithFetchResultTokenToDiffAgainst_, v67);
    uint64_t v50 = v69;
    sub_1A73095A4((uint64_t)v49, v47, v75);

    uint64_t result = sub_1A74BE86C(v47, type metadata accessor for REMRemindersListDataView.SearchInvocation.Parameters);
    if (!v50)
    {
      uint64_t v51 = v75[1];
      char v52 = v76;
      char v53 = v77;
      objc_super v54 = v81;
      uint64_t v55 = v82;
      long long v56 = v78;
      long long v57 = v79;
      long long v58 = v80;
      id v59 = v61;
      *uint64_t v61 = v75[0];
      v59[1] = v51;
      *((unsigned char *)v59 + 16) = v52;
      *((unsigned char *)v59 + 17) = v53;
      *(_OWORD *)(v59 + 3) = v56;
      *(_OWORD *)(v59 + 5) = v57;
      *(_OWORD *)(v59 + 7) = v58;
      v59[9] = v54;
      v59[10] = v55;
    }
    return result;
  }
  unint64_t v87 = MEMORY[0x1E4FBC860];
  sub_1A75736F0();
  uint64_t v84 = sub_1A7348124(a2);
  uint64_t v85 = v20;
  unsigned __int8 v86 = v21 & 1;
LABEL_7:
  uint64_t v22 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v22 = a2;
  }
  uint64_t v71 = v22;
  uint64_t v72 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v23 = v70;
  while (1)
  {
    while (1)
    {
      uint64_t v33 = a2;
      sub_1A7347ECC(v84, v85, v86, a2);
      __n128 v35 = v34;
      uint64_t v36 = (objc_class *)type metadata accessor for REMObjectID_Codable();
      id v37 = objc_allocWithZone(v36);
      id v38 = v35;
      id v39 = objc_msgSend(v38, sel_uuid);
      uint64_t v40 = v74;
      sub_1A7571BB0();

      uint64_t v41 = (void *)sub_1A7571B90();
      (*v72)(v40, v23);
      id v42 = objc_msgSend(v38, sel_entityName);
      if (!v42)
      {
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        id v42 = (id)sub_1A75725E0();
        swift_bridgeObjectRelease();
      }
      v83.receiver = v37;
      v83.super_class = v36;
      objc_msgSendSuper2(&v83, sel_initWithUUID_entityName_, v41, v42);

      sub_1A75736C0();
      sub_1A7573700();
      sub_1A7573710();
      uint64_t result = sub_1A75736D0();
      if (v73) {
        break;
      }
      uint64_t v24 = v84;
      uint64_t v25 = v85;
      unsigned __int8 v26 = v86;
      uint64_t v27 = sub_1A7347DE4(v84, v85, v86, v33);
      uint64_t v29 = v28;
      char v31 = v30;
      char v32 = v26;
      uint64_t v23 = v70;
      a2 = v33;
      sub_1A7326484(v24, v25, v32);
      uint64_t v84 = v27;
      uint64_t v85 = v29;
      unsigned __int8 v86 = v31 & 1;
      if (!--v18) {
        goto LABEL_18;
      }
    }
    if ((v86 & 1) == 0) {
      break;
    }
    a2 = v33;
    if (sub_1A75733D0()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E48);
    uint64_t v44 = (void (*)(uint64_t **, void))sub_1A7572CB0();
    sub_1A7573460();
    v44(v75, 0);
    if (!--v18)
    {
LABEL_18:
      sub_1A7326484(v84, v85, v86);
      unint64_t v17 = v87;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t static REMRemindersListDataView.fetchSearch_Flat(store:objectIDs:configuration:diffingAgainst:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v62 = a4;
  uint64_t v60 = a3;
  uint64_t v63 = sub_1A7571BC0();
  uint64_t v10 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v67 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for REMRemindersListDataView.SearchFlatInvocation.Parameters(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  unint64_t v66 = a2 & 0xC000000000000001;
  uint64_t v61 = (uint64_t *)((char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v59 = v13;
  if ((a2 & 0xC000000000000001) != 0)
  {
    uint64_t v15 = sub_1A7573400();
    unint64_t v16 = MEMORY[0x1E4FBC860];
    if (!v15) {
      goto LABEL_19;
    }
    uint64_t v17 = v15;
    unint64_t v81 = MEMORY[0x1E4FBC860];
    sub_1A75736F0();
    uint64_t v78 = sub_1A75733B0();
    uint64_t v79 = v18;
    unsigned __int8 v80 = 1;
    if ((v17 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
    __break(1u);
  }
  uint64_t v17 = *(void *)(a2 + 16);
  unint64_t v16 = MEMORY[0x1E4FBC860];
  if (!v17)
  {
LABEL_19:
    uint64_t v44 = sub_1A72E72E8(v16);
    swift_bridgeObjectRelease();
    uint64_t v45 = v61;
    sub_1A74BE75C(v60, (uint64_t)v61 + *(int *)(v59 + 20), type metadata accessor for REMRemindersListDataView.FetchConfiguration);
    *uint64_t v45 = v44;
    id v46 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.SearchFlatInvocation());
    uint64_t v47 = (uint64_t *)objc_msgSend(v46, sel_initWithFetchResultTokenToDiffAgainst_, v62);
    sub_1A730964C(v47, v45, &v68);

    uint64_t result = sub_1A74BE86C((uint64_t)v45, type metadata accessor for REMRemindersListDataView.SearchFlatInvocation.Parameters);
    if (!v6)
    {
      char v48 = v70;
      char v49 = v71;
      uint64_t v50 = v75;
      uint64_t v51 = v76;
      long long v52 = v69;
      long long v53 = v72;
      long long v54 = v73;
      long long v55 = v74;
      *(void *)a5 = v68;
      *(_OWORD *)(a5 + 8) = v52;
      *(unsigned char *)(a5 + 24) = v48;
      *(unsigned char *)(a5 + 25) = v49;
      *(_OWORD *)(a5 + 32) = v53;
      *(_OWORD *)(a5 + 48) = v54;
      *(_OWORD *)(a5 + 64) = v55;
      *(void *)(a5 + 80) = v50;
      *(void *)(a5 + 88) = v51;
    }
    return result;
  }
  unint64_t v81 = MEMORY[0x1E4FBC860];
  sub_1A75736F0();
  uint64_t v78 = sub_1A7348124(a2);
  uint64_t v79 = v19;
  unsigned __int8 v80 = v20 & 1;
LABEL_7:
  uint64_t v56 = a1;
  uint64_t v57 = v5;
  uint64_t v58 = a5;
  uint64_t v21 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v21 = a2;
  }
  uint64_t v64 = v21;
  uint64_t v65 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v22 = v63;
  while (1)
  {
    while (1)
    {
      uint64_t v32 = a2;
      sub_1A7347ECC(v78, v79, v80, a2);
      char v34 = v33;
      __n128 v35 = (objc_class *)type metadata accessor for REMObjectID_Codable();
      id v36 = objc_allocWithZone(v35);
      id v37 = v34;
      id v38 = objc_msgSend(v37, sel_uuid);
      id v39 = v67;
      sub_1A7571BB0();

      uint64_t v40 = (void *)sub_1A7571B90();
      (*v65)(v39, v22);
      id v41 = objc_msgSend(v37, sel_entityName);
      if (!v41)
      {
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        id v41 = (id)sub_1A75725E0();
        swift_bridgeObjectRelease();
      }
      v77.receiver = v36;
      v77.super_class = v35;
      objc_msgSendSuper2(&v77, sel_initWithUUID_entityName_, v40, v41, v56, v57, v58, v59, v60);

      sub_1A75736C0();
      sub_1A7573700();
      sub_1A7573710();
      uint64_t result = sub_1A75736D0();
      if (v66) {
        break;
      }
      uint64_t v23 = v78;
      uint64_t v24 = v79;
      unsigned __int8 v25 = v80;
      uint64_t v26 = sub_1A7347DE4(v78, v79, v80, v32);
      uint64_t v28 = v27;
      char v30 = v29;
      char v31 = v25;
      uint64_t v22 = v63;
      a2 = v32;
      sub_1A7326484(v23, v24, v31);
      uint64_t v78 = v26;
      uint64_t v79 = v28;
      unsigned __int8 v80 = v30 & 1;
      if (!--v17) {
        goto LABEL_18;
      }
    }
    if ((v80 & 1) == 0) {
      break;
    }
    a2 = v32;
    if (sub_1A75733D0()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E48);
    uint64_t v43 = (void (*)(uint64_t **, void))sub_1A7572CB0();
    sub_1A7573460();
    v43(&v68, 0);
    if (!--v17)
    {
LABEL_18:
      sub_1A7326484(v78, v79, v80);
      unint64_t v16 = v81;
      a5 = v58;
      uint64_t v6 = v57;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

__n128 static REMRemindersListDataView.fetchSiriFoundInApps(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:)@<Q0>(unsigned char *a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for REMRemindersListDataView.SiriFoundInAppsInvocation.Parameters(0);
  uint64_t v13 = (int *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  LOBYTE(a1) = *a1;
  sub_1A74BE75C(a2, (uint64_t)v15 + v13[7], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A74BE75C(a4, (uint64_t)v15 + v13[9], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *(unsigned char *)uint64_t v15 = (_BYTE)a1;
  *((unsigned char *)v15 + v13[8]) = a3;
  unint64_t v16 = (uint64_t *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.SiriFoundInAppsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a5);
  uint64_t v17 = v35;
  sub_1A73096E0(v16, v15, &v26);

  sub_1A74BE86C((uint64_t)v15, type metadata accessor for REMRemindersListDataView.SiriFoundInAppsInvocation.Parameters);
  if (!v17)
  {
    char v19 = v28;
    char v20 = v29;
    uint64_t v21 = v33;
    uint64_t v22 = v34;
    __n128 result = v27;
    long long v23 = v30;
    long long v24 = v31;
    long long v25 = v32;
    *(void *)a6 = v26;
    *(__n128 *)(a6 + 8) = result;
    *(unsigned char *)(a6 + 24) = v19;
    *(unsigned char *)(a6 + 25) = v20;
    *(_OWORD *)(a6 + 32) = v23;
    *(_OWORD *)(a6 + 48) = v24;
    *(_OWORD *)(a6 + 64) = v25;
    *(void *)(a6 + 80) = v21;
    *(void *)(a6 + 88) = v22;
  }
  return result;
}

void *static REMRemindersListDataView.fetchTagged(store:hashtagLabelPredicate:sortingStyle:showCompleted:countCompleted:remindersPrefetch:smartListHashtagLabelsFetchStyle:shouldFetchManualOrderingID:diffingAgainst:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, unsigned char *a7@<X6>, int a8@<W7>, void *a9@<X8>, uint64_t a10)
{
  LODWORD(v54) = a8;
  uint64_t v51 = a4;
  uint64_t v52 = a6;
  LODWORD(v53) = a5;
  uint64_t v56 = a1;
  uint64_t v50 = a9;
  uint64_t v55 = a10;
  uint64_t v13 = type metadata accessor for REMRemindersListDataView.TaggedInvocation.Parameters(0);
  uint64_t v14 = (int *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)a2;
  uint64_t v17 = *(void *)(a2 + 8);
  char v19 = *a3;
  LOBYTE(a7) = *a7;
  LOBYTE(a3) = *(unsigned char *)(a2 + 16);
  sub_1A74BE75C(v51, (uint64_t)&v16[v14[8]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A74BE75C(v52, (uint64_t)&v16[v14[10]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *(void *)unint64_t v16 = v18;
  *((void *)v16 + 1) = v17;
  v16[16] = (char)a3;
  v16[17] = v19;
  v16[v14[9]] = v53;
  v16[v14[11]] = (char)a7;
  v16[v14[12]] = v54;
  id v20 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.TaggedInvocation());
  sub_1A74C0364(v18, v17, a3);
  id v21 = objc_msgSend(v20, sel_initWithFetchResultTokenToDiffAgainst_, v55);
  uint64_t v22 = v68;
  sub_1A7309774((unint64_t)v21, (uint64_t)v16, (uint64_t)&v58);

  if (v22) {
    return (void *)sub_1A74BE86C((uint64_t)v16, type metadata accessor for REMRemindersListDataView.TaggedInvocation.Parameters);
  }
  sub_1A74BE86C((uint64_t)v16, type metadata accessor for REMRemindersListDataView.TaggedInvocation.Parameters);
  v57[6] = v64;
  v57[7] = v65;
  v57[8] = v66;
  v57[9] = v67;
  v57[2] = v60;
  v57[3] = v61;
  v57[4] = v62;
  v57[5] = v63;
  v57[0] = v58;
  v57[1] = v59;
  uint64_t v68 = v58;
  uint64_t v52 = v59;
  uint64_t v53 = *((void *)&v58 + 1);
  LODWORD(v51) = BYTE8(v59);
  uint64_t v43 = v61;
  uint64_t v44 = *((void *)&v60 + 1);
  int v48 = v62;
  int v49 = BYTE9(v59);
  uint64_t v46 = v60;
  uint64_t v47 = *((void *)&v62 + 1);
  id v39 = (void *)v63;
  uint64_t v56 = v64;
  uint64_t v54 = *((void *)&v63 + 1);
  uint64_t v55 = *((void *)&v64 + 1);
  uint64_t v24 = *((void *)&v65 + 1);
  uint64_t v40 = v65;
  uint64_t v41 = *((void *)&v61 + 1);
  uint64_t v25 = *((void *)&v66 + 1);
  uint64_t v42 = v66;
  uint64_t v26 = (void *)*((void *)&v67 + 1);
  uint64_t v45 = v67;
  id v27 = *((id *)&v62 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v28 = v39;
  sub_1A7315C10(v39);
  id v29 = v26;
  uint64_t v30 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v31 = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = v45;
  swift_bridgeObjectRetain();
  __n128 result = sub_1A74C03AC(v57);
  uint64_t v33 = v50;
  uint64_t v34 = v53;
  *uint64_t v50 = v68;
  v33[1] = v34;
  v33[2] = v52;
  *((unsigned char *)v33 + 24) = v51;
  *((unsigned char *)v33 + 25) = v49;
  uint64_t v35 = v44;
  v33[4] = v46;
  v33[5] = v35;
  uint64_t v36 = v41;
  v33[6] = v43;
  v33[7] = v36;
  *((unsigned char *)v33 + 64) = v48;
  v33[9] = v47;
  v33[10] = v28;
  uint64_t v37 = v56;
  v33[11] = v54;
  v33[12] = v37;
  v33[13] = v55;
  v33[14] = v30;
  v33[15] = v24;
  v33[16] = v31;
  v33[17] = v25;
  v33[18] = v32;
  v33[19] = v26;
  return result;
}

double static REMRemindersListDataView.fetchTodayNotification(store:diffingAgainst:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)&double result = sub_1A74AADF0(a1, (uint64_t (*)(void))type metadata accessor for REMRemindersListDataView.TodayNotificationInvocation, (void (*)(uint64_t *__return_ptr))sub_1A730A2B0, a2).n128_u64[0];
  return result;
}

__n128 static REMRemindersListDataView._debugCountAssigned(store:diffingAgainst:currentUserShareParticipantIDsOverride:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  id v8 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.DEBUG_AssignedCountInvocation());
  swift_bridgeObjectRetain();
  id v9 = objc_msgSend(v8, sel_initWithFetchResultTokenToDiffAgainst_, a1);
  sub_1A730A314((uint64_t)v9, a2, &v14);
  swift_bridgeObjectRelease();

  if (!v4)
  {
    uint64_t v11 = v17;
    uint64_t v12 = v18;
    __n128 result = v15;
    long long v13 = v16;
    *(void *)a3 = v14;
    *(__n128 *)(a3 + 8) = result;
    *(_OWORD *)(a3 + 24) = v13;
    *(void *)(a3 + 40) = v11;
    *(void *)(a3 + 48) = v12;
  }
  return result;
}

double static REMRemindersListDataView._debugFetchPhantomReminders(store:diffingAgainst:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)&double result = sub_1A74AADF0(a1, (uint64_t (*)(void))type metadata accessor for REMRemindersListDataView.DEBUG_PhantomRemindersInvocation, (void (*)(uint64_t *__return_ptr))sub_1A730AF2C, a2).n128_u64[0];
  return result;
}

__n128 sub_1A74AADF0@<Q0>(uint64_t a1@<X1>, uint64_t (*a2)(void)@<X2>, void (*a3)(uint64_t *__return_ptr)@<X3>, uint64_t a4@<X8>)
{
  id v7 = objc_msgSend(objc_allocWithZone((Class)a2(0)), sel_initWithFetchResultTokenToDiffAgainst_, a1);
  a3(&v16);

  if (!v4)
  {
    char v9 = v18;
    char v10 = v19;
    uint64_t v11 = v23;
    uint64_t v12 = v24;
    __n128 result = v17;
    long long v13 = v20;
    long long v14 = v21;
    long long v15 = v22;
    *(void *)a4 = v16;
    *(__n128 *)(a4 + 8) = result;
    *(unsigned char *)(a4 + 24) = v9;
    *(unsigned char *)(a4 + 25) = v10;
    *(_OWORD *)(a4 + 32) = v13;
    *(_OWORD *)(a4 + 48) = v14;
    *(_OWORD *)(a4 + 64) = v15;
    *(void *)(a4 + 80) = v11;
    *(void *)(a4 + 88) = v12;
  }
  return result;
}

uint64_t sub_1A74AAEBC()
{
  if (*v0) {
    return 0x6C6E6F6974636573;
  }
  else {
    return 0x656E6F6974636573;
  }
}

uint64_t sub_1A74AAF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D1868(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74AAF2C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C049C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AAF68(uint64_t a1)
{
  unint64_t v2 = sub_1A74C049C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74AAFA4()
{
  uint64_t v1 = 0x4E79616C70736964;
  if (*v0 != 1) {
    uint64_t v1 = 0x6163696E6F6E6163;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x496E6F6974636573;
  }
}

uint64_t sub_1A74AB018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D1980(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74AB040(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0544();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AB07C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0544();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74AB0B8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C04F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AB0F4(uint64_t a1)
{
  unint64_t v2 = sub_1A74C04F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void REMRemindersListDataView.SectionLite.SectionType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7010A8);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7010A0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  uint64_t v26 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v24 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701098);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = *(void **)v1;
  uint64_t v13 = *(void *)(v1 + 8);
  uint64_t v21[3] = *(void *)(v1 + 16);
  v21[4] = v13;
  uint64_t v15 = *(void *)(v1 + 24);
  v21[1] = *(void *)(v1 + 32);
  v21[2] = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C049C();
  sub_1A75741B0();
  if (v14)
  {
    uint64_t v16 = v10;
    char v32 = 0;
    sub_1A74C0544();
    id v17 = v14;
    char v18 = v24;
    sub_1A7573AB0();
    id v28 = v17;
    char v31 = 0;
    type metadata accessor for REMObjectID_Codable();
    sub_1A74BF618(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    uint64_t v19 = v25;
    uint64_t v20 = v27;
    sub_1A7573B60();
    if (v20)
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v19);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v9);
    }
    else
    {
      char v30 = 1;
      sub_1A7573B10();
      char v29 = 2;
      sub_1A7573AC0();

      (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v19);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v9);
    }
  }
  else
  {
    char v33 = 1;
    sub_1A74C04F0();
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v23);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t REMRemindersListDataView.SectionLite.SectionType.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C10);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  uint64_t v36 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C08);
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C00);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1A74C049C();
  uint64_t v15 = v39;
  sub_1A7574190();
  if (!v15)
  {
    uint64_t v16 = v11;
    uint64_t v17 = sub_1A7573A70();
    if (*(void *)(v17 + 16) == 1)
    {
      if (*(unsigned char *)(v17 + 32))
      {
        char v45 = 1;
        sub_1A74C04F0();
        sub_1A7573990();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        uint64_t v18 = 0;
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        uint64_t v21 = 0;
        uint64_t v22 = 0;
      }
      else
      {
        char v44 = 0;
        sub_1A74C0544();
        sub_1A7573990();
        type metadata accessor for REMObjectID_Codable();
        char v43 = 0;
        sub_1A74BF618(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
        sub_1A7573A50();
        uint64_t v18 = v40;
        char v42 = 1;
        uint64_t v30 = sub_1A7573A00();
        uint64_t v20 = v31;
        uint64_t v36 = v30;
        char v41 = 2;
        id v39 = v9;
        uint64_t v21 = sub_1A75739B0();
        uint64_t v22 = v32;
        (*(void (**)(char *, uint64_t))(v34 + 8))(v39, v7);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v10);
        uint64_t v19 = v36;
      }
      uint64_t v23 = v37;
      *uint64_t v37 = v18;
      v23[1] = v19;
      v23[2] = v20;
      void v23[3] = v21;
      v23[4] = v22;
    }
    else
    {
      uint64_t v24 = v13;
      uint64_t v25 = v10;
      uint64_t v26 = sub_1A7573640();
      swift_allocError();
      id v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
      *id v28 = &type metadata for REMRemindersListDataView.SectionLite.SectionType;
      sub_1A75739A0();
      sub_1A7573620();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x1E4FBBA70], v26);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v25);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_1A74ABAB0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMRemindersListDataView.SectionLite.SectionType.init(from:)(a1, a2);
}

void sub_1A74ABAC8(void *a1)
{
}

uint64_t REMRemindersListDataView.SectionLite.type.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_1A73E8E74(v2);
}

uint64_t REMRemindersListDataView.SectionLite.reminders.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 REMRemindersListDataView.SectionLite.init(type:reminders:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v5;
  *(void *)(a3 + 32) = v3;
  *(void *)(a3 + 40) = a2;
  return result;
}

BOOL REMRemindersListDataView.SectionLite.isEmpty.getter()
{
  return *(void *)(*(void *)(v0 + 40) + 16) == 0;
}

uint64_t sub_1A74ABB30()
{
  if (*v0) {
    return 0x7265646E696D6572;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1A74ABB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D1B20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74ABB90(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0598();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74ABBCC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0598();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.SectionLite.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7010B0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *v1;
  long long v13 = v1[1];
  long long v14 = v8;
  uint64_t v9 = *((void *)v1 + 4);
  uint64_t v12 = *((void *)v1 + 5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0598();
  sub_1A75741B0();
  long long v15 = v14;
  long long v16 = v13;
  uint64_t v17 = v9;
  char v18 = 0;
  sub_1A74C05EC();
  sub_1A7573B60();
  if (!v2)
  {
    *(void *)&long long v15 = v12;
    char v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
    sub_1A74C130C(&qword_1EB700FD0, &qword_1EB704818, (void (*)(void))sub_1A74BFA50);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.SectionLite.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0598();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v33 = 0;
  sub_1A74C0640();
  sub_1A7573A50();
  uint64_t v9 = v28;
  uint64_t v24 = v29;
  uint64_t v10 = v30;
  uint64_t v22 = a2;
  uint64_t v23 = v31;
  uint64_t v11 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
  char v33 = 1;
  uint64_t v26 = (void *)v9;
  uint64_t v27 = v10;
  uint64_t v12 = v9;
  uint64_t v13 = v24;
  uint64_t v14 = v23;
  uint64_t v25 = v11;
  sub_1A73E8E74(v12);
  sub_1A74C130C(&qword_1EB704820, &qword_1EB704818, (void (*)(void))sub_1A74BFAA4);
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v27;
  uint64_t v15 = v28;
  uint64_t v17 = v25;
  char v18 = v26;
  sub_1A73E8E74((uint64_t)v26);
  swift_bridgeObjectRetain();
  sub_1A73E8EC0(v18);
  uint64_t v19 = v22;
  void *v22 = v18;
  v19[1] = v13;
  void v19[2] = v16;
  v19[3] = v14;
  v19[4] = v17;
  v19[5] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1A73E8EC0(v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74AC100@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMRemindersListDataView.SectionLite.init(from:)(a1, a2);
}

uint64_t sub_1A74AC118(void *a1)
{
  return REMRemindersListDataView.SectionLite.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.SectionsModel.sections.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 REMRemindersListDataView.SectionsModel.remindersCount.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = *(unsigned char *)(v1 + 24);
  __n128 result = *(__n128 *)(v1 + 8);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

uint64_t REMRemindersListDataView.SectionsModel.hasIncompleteOrCompletedReminders.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t REMRemindersListDataView.SectionsModel.prefetchedReminders.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 _s19ReminderKitInternal24REMRemindersListDataViewO9FlatModelV9reminders0J5Count33hasIncompleteOrCompletedReminders010prefetchedP00q3DueP0AESayAC0A4LiteVG_AC0k2ByO0VSgSbSgSayAA19REMReminder_CodableCGATtcfC_0@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unsigned __int8 v6 = a2[1].n128_u8[0];
  *(void *)a6 = a1;
  __n128 result = *a2;
  *(__n128 *)(a6 + 8) = *a2;
  *(unsigned char *)(a6 + 24) = v6;
  *(unsigned char *)(a6 + 25) = a3;
  *(void *)(a6 + 32) = a4;
  *(void *)(a6 + 40) = a5;
  return result;
}

unint64_t sub_1A74AC180(char a1)
{
  unint64_t result = 0x736E6F6974636573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7265646E696D6572;
      break;
    case 2:
      unint64_t result = 0xD000000000000021;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A74AC248()
{
  return sub_1A74AC180(*v0);
}

uint64_t sub_1A74AC250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D1C10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74AC278(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0694();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AC2B4(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0694();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.SectionsModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7010C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v17 = v1[2];
  uint64_t v18 = v8;
  int v22 = *((unsigned __int8 *)v1 + 24);
  int v16 = *((unsigned __int8 *)v1 + 25);
  uint64_t v10 = v1[4];
  uint64_t v14 = v1[5];
  uint64_t v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0694();
  sub_1A75741B0();
  uint64_t v19 = v9;
  char v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702840);
  sub_1A74C130C((unint64_t *)&unk_1EB700FD8, &qword_1EB702840, (void (*)(void))sub_1A74C06E8);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v12 = v14;
    uint64_t v11 = v15;
    uint64_t v19 = v18;
    uint64_t v20 = v17;
    char v21 = v22;
    char v23 = 1;
    sub_1A74BFBA0();
    sub_1A7573B00();
    LOBYTE(v19) = 2;
    sub_1A7573AD0();
    uint64_t v19 = v11;
    char v23 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
    sub_1A731DB84();
    sub_1A7573B60();
    uint64_t v19 = v12;
    char v23 = 4;
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.SectionsModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0694();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702840);
  char v23 = 0;
  sub_1A74C130C(&qword_1EB700BB8, &qword_1EB702840, (void (*)(void))sub_1A74C073C);
  sub_1A7573A50();
  uint64_t v9 = v19;
  char v23 = 1;
  sub_1A74BFBF4();
  swift_bridgeObjectRetain();
  sub_1A75739F0();
  uint64_t v17 = v20;
  uint64_t v18 = v19;
  int v10 = v21;
  LOBYTE(v19) = 2;
  int v15 = sub_1A75739C0();
  int v22 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
  char v23 = 3;
  unint64_t v16 = sub_1A73182C8();
  sub_1A7573A50();
  char v23 = 4;
  uint64_t v14 = v19;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = v18;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v17;
  *(unsigned char *)(a2 + 24) = v22;
  *(unsigned char *)(a2 + 25) = v15;
  *(void *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74AC948@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.SectionsModel.init(from:)(a1, a2);
}

uint64_t sub_1A74AC960(void *a1)
{
  return REMRemindersListDataView.SectionsModel.encode(to:)(a1);
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO0E5ModelV5modelAC04FlatH0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 24);
  char v3 = *(unsigned char *)(v1 + 25);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(unsigned char *)(a1 + 24) = v2;
  *(unsigned char *)(a1 + 25) = v3;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

id REMRemindersListDataView.ListSectionsModel.list.getter()
{
  return *(id *)(v0 + 48);
}

uint64_t sub_1A74AC9F0()
{
  if (*v0) {
    return 1953720684;
  }
  else {
    return 0x736E6F6974636573;
  }
}

uint64_t sub_1A74ACA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D1E3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74ACA58(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0790();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74ACA94(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0790();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.ListSectionsModel.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701090);
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = *v2;
  uint64_t v7 = *((void *)v2 + 2);
  char v8 = *((unsigned char *)v2 + 24);
  char v9 = *((unsigned char *)v2 + 25);
  uint64_t v13 = *((void *)v2 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0790();
  sub_1A75741B0();
  long long v17 = v14;
  uint64_t v18 = v7;
  char v19 = v8;
  char v20 = v9;
  long long v21 = v2[2];
  char v22 = 0;
  sub_1A74C07E4();
  uint64_t v10 = v15;
  sub_1A7573B60();
  if (!v10)
  {
    *(void *)&long long v17 = v13;
    char v22 = 1;
    type metadata accessor for REMList_Codable();
    sub_1A74BF618(&qword_1EB705888, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v6, v4);
}

uint64_t REMRemindersListDataView.ListSectionsModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700BF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0790();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v30 = 0;
  sub_1A74C0838();
  sub_1A7573A50();
  char v9 = v22;
  uint64_t v18 = v24;
  uint64_t v19 = v23;
  int v29 = v25;
  int v17 = v26;
  uint64_t v10 = v28;
  uint64_t v20 = v27;
  type metadata accessor for REMList_Codable();
  char v30 = 1;
  sub_1A74BF618(&qword_1EB705890, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
  long long v21 = v9;
  uint64_t v11 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v22;
  uint64_t v13 = v19;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v18;
  *(unsigned char *)(a2 + 24) = v29;
  *(unsigned char *)(a2 + 25) = v17;
  *(void *)(a2 + 32) = v11;
  *(void *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v12;
  id v14 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74ACFAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ListSectionsModel.init(from:)(a1, a2);
}

uint64_t sub_1A74ACFC4(void *a1)
{
  return REMRemindersListDataView.ListSectionsModel.encode(to:)(a1);
}

id REMRemindersListDataView.CustomSmartListSectionsModel.smartList.getter()
{
  return *(id *)(v0 + 48);
}

uint64_t sub_1A74ACFF0()
{
  unint64_t v1 = 0x73694C7472616D73;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x736E6F6974636573;
  }
}

uint64_t sub_1A74AD060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D1F44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74AD088(uint64_t a1)
{
  unint64_t v2 = sub_1A74C088C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AD0C4(uint64_t a1)
{
  unint64_t v2 = sub_1A74C088C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.CustomSmartListSectionsModel.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F48F8);
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v27 = *v2;
  uint64_t v7 = *((void *)v2 + 2);
  char v8 = *((unsigned char *)v2 + 24);
  char v9 = *((unsigned char *)v2 + 25);
  uint64_t v10 = *((void *)v2 + 6);
  uint64_t v25 = *((void *)v2 + 7);
  uint64_t v26 = v10;
  uint64_t v11 = *((void *)v2 + 8);
  uint64_t v23 = *((void *)v2 + 9);
  uint64_t v24 = v11;
  uint64_t v22 = *((void *)v2 + 10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C088C();
  sub_1A75741B0();
  long long v30 = v27;
  uint64_t v31 = v7;
  LOBYTE(v32) = v8;
  BYTE1(v32) = v9;
  long long v12 = v2[2];
  uint64_t v13 = v4;
  long long v33 = v12;
  char v34 = 0;
  sub_1A74C07E4();
  uint64_t v14 = v28;
  sub_1A7573B60();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v6, v4);
  }
  uint64_t v17 = v22;
  uint64_t v16 = v23;
  uint64_t v19 = v24;
  uint64_t v18 = v25;
  uint64_t v20 = v29;
  *(void *)&long long v30 = v26;
  char v34 = 1;
  type metadata accessor for REMSmartList_Codable();
  sub_1A74BF618(&qword_1EB703F48, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
  sub_1A7573B60();
  *(void *)&long long v30 = v18;
  *((void *)&v30 + 1) = v19;
  uint64_t v31 = v16;
  uint64_t v32 = v17;
  char v34 = 2;
  sub_1A74BFFE4();
  sub_1A7573B00();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v13);
}

void REMRemindersListDataView.CustomSmartListSectionsModel.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4908);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C088C();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v40 = 0;
    sub_1A74C0838();
    sub_1A7573A50();
    char v9 = v33;
    uint64_t v31 = v34;
    uint64_t v32 = a2;
    uint64_t v30 = v35;
    int v39 = v36;
    int v29 = BYTE1(v36);
    uint64_t v10 = v37;
    uint64_t v11 = v38;
    type metadata accessor for REMSmartList_Codable();
    char v40 = 1;
    sub_1A74BF618(&qword_1EB703698, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A7573A50();
    uint64_t v28 = v10;
    long long v12 = v33;
    char v40 = 2;
    sub_1A74C0038();
    id v27 = v12;
    uint64_t v26 = 0;
    sub_1A75739F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v33;
    uint64_t v26 = v34;
    uint64_t v23 = v36;
    uint64_t v24 = v35;
    swift_bridgeObjectRetain();
    uint64_t v14 = v28;
    swift_bridgeObjectRetain();
    uint64_t v15 = v11;
    swift_bridgeObjectRetain();
    id v16 = v27;
    uint64_t v17 = v13;
    uint64_t v25 = v13;
    uint64_t v18 = v13;
    uint64_t v20 = v23;
    uint64_t v19 = v24;
    sub_1A7315C10(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v22 = v31;
    uint64_t v21 = v32;
    void *v32 = v9;
    v21[1] = v22;
    v21[2] = v30;
    *((unsigned char *)v21 + 24) = v39;
    *((unsigned char *)v21 + 25) = v29;
    v21[4] = v14;
    void v21[5] = v15;
    v21[6] = v16;
    v21[7] = v17;
    v21[8] = v26;
    v21[9] = v19;
    v21[10] = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A7315D30(v25);
  }
}

void sub_1A74AD7A8(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1A74AD7C0(void *a1)
{
  return REMRemindersListDataView.CustomSmartListSectionsModel.encode(to:)(a1);
}

void *_s19ReminderKitInternal24REMRemindersListDataViewO011CustomSmartE5ModelV16manualOrderingIDSo09REMManualL0CAAE06ManuallM0VSgvg_0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)v1[7];
  uint64_t v3 = v1[8];
  uint64_t v4 = v1[9];
  uint64_t v5 = v1[10];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1A7315C10(v2);
}

__n128 _s19ReminderKitInternal24REMRemindersListDataViewO011CustomSmartE5ModelV5model05smartE016manualOrderingIDAeC04FlatJ0V_So08REMSmartE0CSo09REMManualN0CAAE06ManualnO0VSgtcfC_0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_OWORD *)(a4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  __n128 result = *(__n128 *)a3;
  long long v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 56) = *(_OWORD *)a3;
  char v6 = *(unsigned char *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 25);
  *(void *)a4 = *(void *)a1;
  *(unsigned char *)(a4 + 24) = v6;
  *(unsigned char *)(a4 + 25) = v7;
  *(void *)(a4 + 48) = a2;
  *(_OWORD *)(a4 + 72) = v5;
  return result;
}

uint64_t sub_1A74AD834()
{
  unint64_t v1 = 0xD00000000000001CLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x736E6F6974636573;
  }
}

uint64_t sub_1A74AD8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D20C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74AD8D0(uint64_t a1)
{
  unint64_t v2 = sub_1A74C08E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AD90C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C08E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.TemplateSectionsModel.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4910);
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v27 = *v2;
  uint64_t v7 = *((void *)v2 + 2);
  char v8 = *((unsigned char *)v2 + 24);
  char v9 = *((unsigned char *)v2 + 25);
  uint64_t v10 = *((void *)v2 + 6);
  uint64_t v25 = *((void *)v2 + 7);
  uint64_t v26 = v10;
  uint64_t v11 = *((void *)v2 + 8);
  uint64_t v23 = *((void *)v2 + 9);
  uint64_t v24 = v11;
  uint64_t v22 = *((void *)v2 + 10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C08E0();
  sub_1A75741B0();
  long long v30 = v27;
  uint64_t v31 = v7;
  LOBYTE(v32) = v8;
  BYTE1(v32) = v9;
  long long v12 = v2[2];
  uint64_t v13 = v4;
  long long v33 = v12;
  char v34 = 0;
  sub_1A74C07E4();
  uint64_t v14 = v28;
  sub_1A7573B60();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v6, v4);
  }
  uint64_t v17 = v22;
  uint64_t v16 = v23;
  uint64_t v19 = v24;
  uint64_t v18 = v25;
  uint64_t v20 = v29;
  *(void *)&long long v30 = v26;
  char v34 = 1;
  type metadata accessor for REMList_Codable();
  sub_1A74BF618(&qword_1EB705888, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
  sub_1A7573B60();
  *(void *)&long long v30 = v18;
  *((void *)&v30 + 1) = v19;
  uint64_t v31 = v16;
  uint64_t v32 = v17;
  char v34 = 2;
  sub_1A74BFFE4();
  sub_1A7573B00();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v13);
}

void REMRemindersListDataView.TemplateSectionsModel.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4920);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C08E0();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v40 = 0;
    sub_1A74C0838();
    sub_1A7573A50();
    char v9 = v33;
    uint64_t v31 = v34;
    uint64_t v32 = a2;
    uint64_t v30 = v35;
    int v39 = v36;
    int v29 = BYTE1(v36);
    uint64_t v10 = v37;
    uint64_t v11 = v38;
    type metadata accessor for REMList_Codable();
    char v40 = 1;
    sub_1A74BF618(&qword_1EB705890, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A7573A50();
    uint64_t v28 = v10;
    long long v12 = v33;
    char v40 = 2;
    sub_1A74C0038();
    id v27 = v12;
    uint64_t v26 = 0;
    sub_1A75739F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v33;
    uint64_t v26 = v34;
    uint64_t v23 = v36;
    uint64_t v24 = v35;
    swift_bridgeObjectRetain();
    uint64_t v14 = v28;
    swift_bridgeObjectRetain();
    uint64_t v15 = v11;
    swift_bridgeObjectRetain();
    id v16 = v27;
    uint64_t v17 = v13;
    uint64_t v25 = v13;
    uint64_t v18 = v13;
    uint64_t v20 = v23;
    uint64_t v19 = v24;
    sub_1A7315C10(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v22 = v31;
    uint64_t v21 = v32;
    void *v32 = v9;
    v21[1] = v22;
    v21[2] = v30;
    *((unsigned char *)v21 + 24) = v39;
    *((unsigned char *)v21 + 25) = v29;
    v21[4] = v14;
    void v21[5] = v15;
    v21[6] = v16;
    v21[7] = v17;
    v21[8] = v26;
    v21[9] = v19;
    v21[10] = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A7315D30(v25);
  }
}

void sub_1A74ADFF0(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1A74AE008(void *a1)
{
  return REMRemindersListDataView.TemplateSectionsModel.encode(to:)(a1);
}

uint64_t sub_1A74AE020()
{
  uint64_t v1 = 0x6D536D6F74737563;
  if (*v0 != 1) {
    uint64_t v1 = 0x797265636F7267;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x72616C75676572;
  }
}

uint64_t sub_1A74AE088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D2238(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74AE0B0(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0934();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AE0EC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0934();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74AE128(uint64_t a1)
{
  unint64_t v2 = sub_1A74C09DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AE164(uint64_t a1)
{
  unint64_t v2 = sub_1A74C09DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74AE1A0(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0988();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AE1DC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0988();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74AE218(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0A30();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AE254(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0A30();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.ListType.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4928);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4930);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4938);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4940);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0934();
  sub_1A75741B0();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_1A74C09DC();
      sub_1A7573AB0();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_1A74C0988();
      uint64_t v17 = v23;
      sub_1A7573AB0();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_1A74C0A30();
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.ListType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4968);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4970);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4978);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4980);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0934();
  uint64_t v12 = (uint64_t)v39;
  sub_1A7574190();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  int v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_1A7573A70();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_1A7573640();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    *uint64_t v23 = &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x1E4FBBA70], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_1A74C09DC();
      uint64_t v18 = v30;
      sub_1A7573990();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_1A74C0988();
      uint64_t v25 = v30;
      sub_1A7573990();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_1A74C0A30();
    uint64_t v24 = v30;
    sub_1A7573990();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_1A74AEBB0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMRemindersListDataView.ListsSectionsModel.List.ListType.init(from:)(a1, a2);
}

uint64_t sub_1A74AEBC8(void *a1)
{
  return REMRemindersListDataView.ListsSectionsModel.List.ListType.encode(to:)(a1);
}

id REMRemindersListDataView.ListsSectionsModel.List.listID.getter()
{
  return *v0;
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.listName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void *REMRemindersListDataView.ListsSectionsModel.List.listColor.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void REMRemindersListDataView.ListsSectionsModel.List.listType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.init(listID:listName:listColor:listType:sections:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7 = *a5;
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(unsigned char *)(a7 + 32) = v7;
  *(void *)(a7 + 40) = a6;
  return result;
}

uint64_t sub_1A74AEC64()
{
  uint64_t result = 0x44497473696CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D614E7473696CLL;
      break;
    case 2:
      uint64_t result = 0x6F6C6F437473696CLL;
      break;
    case 3:
      uint64_t result = 0x657079547473696CLL;
      break;
    case 4:
      uint64_t result = 0x736E6F6974636573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74AED10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D23B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74AED38(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0A84();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AED74(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0A84();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701338);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v17 = v1[2];
  uint64_t v18 = v8;
  uint64_t v16 = v1[3];
  int v15 = *((unsigned __int8 *)v1 + 32);
  uint64_t v14 = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0A84();
  sub_1A75741B0();
  uint64_t v20 = v9;
  char v19 = 0;
  type metadata accessor for REMObjectID_Codable();
  sub_1A74BF618(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v10 = v16;
    char v11 = v15;
    uint64_t v12 = v14;
    LOBYTE(v20) = 1;
    sub_1A7573B10();
    uint64_t v20 = v10;
    char v19 = 2;
    type metadata accessor for REMColor_Codable();
    sub_1A74BF618(&qword_1EB703DF8, (void (*)(uint64_t))type metadata accessor for REMColor_Codable);
    sub_1A7573B00();
    LOBYTE(v20) = v11;
    char v19 = 3;
    sub_1A74C0AD8();
    sub_1A7573B60();
    uint64_t v20 = v12;
    char v19 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702840);
    sub_1A74C130C((unint64_t *)&unk_1EB700FD8, &qword_1EB702840, (void (*)(void))sub_1A74C06E8);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMRemindersListDataView.ListsSectionsModel.List.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701268);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0A84();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for REMObjectID_Codable();
    char v25 = 0;
    sub_1A74BF618(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    sub_1A7573A50();
    uint64_t v9 = v26;
    LOBYTE(v26) = 1;
    id v10 = v9;
    uint64_t v11 = sub_1A7573A00();
    uint64_t v13 = v12;
    uint64_t v24 = v11;
    type metadata accessor for REMColor_Codable();
    char v25 = 2;
    sub_1A74BF618(&qword_1EB7035C8, (void (*)(uint64_t))type metadata accessor for REMColor_Codable);
    swift_bridgeObjectRetain();
    sub_1A75739F0();
    uint64_t v23 = v13;
    uint64_t v14 = v26;
    char v25 = 3;
    sub_1A74C0B2C();
    uint64_t v22 = v14;
    id v21 = v14;
    sub_1A7573A50();
    HIDWORD(v20) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702840);
    char v25 = 4;
    sub_1A74C130C(&qword_1EB700BB8, &qword_1EB702840, (void (*)(void))sub_1A74C073C);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    int v15 = v26;
    id v16 = v10;
    uint64_t v17 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    uint64_t v18 = v24;
    *(void *)a2 = v16;
    *(void *)(a2 + 8) = v18;
    char v19 = v22;
    *(void *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = v19;
    *(unsigned char *)(a2 + 32) = BYTE4(v20);
    *(void *)(a2 + 40) = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
}

void sub_1A74AF530(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A74AF548(void *a1)
{
  return REMRemindersListDataView.ListsSectionsModel.List.encode(to:)(a1);
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10ListsModelV6groups23completedRemindersCount012hasCompletedL0010prefetchedL00p3DueL0AESayAE7SublistVG_SiSgSbSgSayAA19REMReminder_CodableCGARtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3 & 1;
  *(unsigned char *)(a7 + 17) = a4;
  *(void *)(a7 + 24) = a5;
  *(void *)(a7 + 32) = a6;
  return result;
}

unint64_t sub_1A74AF57C(char a1)
{
  unint64_t result = 0x737473696CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A74AF634()
{
  return sub_1A74AF57C(*v0);
}

uint64_t sub_1A74AF63C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D25D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74AF664(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0B80();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AF6A0(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0B80();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.ListsSectionsModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701340);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v19 = v1[1];
  int v9 = *((unsigned __int8 *)v1 + 16);
  int v17 = *((unsigned __int8 *)v1 + 17);
  int v18 = v9;
  uint64_t v10 = v1[3];
  uint64_t v15 = v1[4];
  uint64_t v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0B80();
  sub_1A75741B0();
  uint64_t v21 = v8;
  char v20 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702F50);
  sub_1A74C130C(&qword_1EB701318, &qword_1EB702F50, (void (*)(void))sub_1A74C0BD4);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v12 = v15;
    uint64_t v11 = v16;
    LOBYTE(v21) = 1;
    sub_1A7573AF0();
    LOBYTE(v21) = 2;
    sub_1A7573AD0();
    uint64_t v21 = v11;
    char v20 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
    sub_1A731DB84();
    sub_1A7573B60();
    uint64_t v21 = v12;
    char v20 = 4;
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.ListsSectionsModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701270);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0B80();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702F50);
  char v21 = 0;
  sub_1A74C130C(&qword_1EB701260, &qword_1EB702F50, (void (*)(void))sub_1A74C0C28);
  sub_1A7573A50();
  uint64_t v9 = v22;
  LOBYTE(v22) = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1A75739E0();
  int v20 = v11;
  LOBYTE(v22) = 2;
  int v17 = sub_1A75739C0();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
  char v21 = 3;
  unint64_t v18 = sub_1A73182C8();
  uint64_t v19 = v12;
  sub_1A7573A50();
  char v21 = 4;
  uint64_t v16 = v22;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = v20 & 1;
  *(unsigned char *)(a2 + 17) = v17;
  *(void *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74AFCD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ListsSectionsModel.init(from:)(a1, a2);
}

uint64_t sub_1A74AFCEC(void *a1)
{
  return REMRemindersListDataView.ListsSectionsModel.encode(to:)(a1);
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10GroupModelV05listsI0AC05ListsI0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  char v4 = *((unsigned char *)v1 + 16);
  char v5 = *((unsigned char *)v1 + 17);
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 17) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 _s19ReminderKitInternal24REMRemindersListDataViewO10GroupModelV05listsI005groupE0AeC05ListsI0V_So7REMListCtcfC_0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 17);
  *(void *)a3 = *(void *)a1;
  *(void *)(a3 + 8) = v3;
  *(unsigned char *)(a3 + 16) = v4;
  *(unsigned char *)(a3 + 17) = v5;
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a3 + 24) = result;
  *(void *)(a3 + 40) = a2;
  return result;
}

uint64_t sub_1A74AFD90()
{
  if (*v0) {
    return 0x70756F7267;
  }
  else {
    return 0x746365537473696CLL;
  }
}

uint64_t sub_1A74AFDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D27C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74AFDF8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0C7C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74AFE34(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0C7C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.GroupSectionsModel.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4998);
  uint64_t v13 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  uint64_t v7 = v2[1];
  char v9 = *((unsigned char *)v2 + 16);
  int v19 = *((unsigned __int8 *)v2 + 17);
  v12[0] = v2[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0C7C();
  sub_1A75741B0();
  uint64_t v14 = v8;
  uint64_t v15 = v7;
  char v16 = v9;
  char v17 = v19;
  long long v18 = *(_OWORD *)(v2 + 3);
  char v20 = 0;
  sub_1A74C0CD0();
  uint64_t v10 = v12[1];
  sub_1A7573B60();
  if (!v10)
  {
    uint64_t v14 = v12[0];
    char v20 = 1;
    type metadata accessor for REMList_Codable();
    sub_1A74BF618(&qword_1EB705888, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v6, v4);
}

uint64_t REMRemindersListDataView.GroupSectionsModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F49B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0C7C();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  sub_1A74C0D24();
  sub_1A7573A50();
  char v9 = v21;
  int v27 = v23;
  int v17 = v24;
  uint64_t v10 = v26;
  uint64_t v18 = v22;
  uint64_t v19 = v25;
  type metadata accessor for REMList_Codable();
  char v28 = 1;
  sub_1A74BF618(&qword_1EB705890, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
  char v20 = v9;
  uint64_t v11 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v21;
  uint64_t v13 = v18;
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v13;
  *(unsigned char *)(a2 + 16) = v27;
  *(unsigned char *)(a2 + 17) = v17;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v12;
  id v14 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74B0334@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.GroupSectionsModel.init(from:)(a1, a2);
}

uint64_t sub_1A74B034C(void *a1)
{
  return REMRemindersListDataView.GroupSectionsModel.encode(to:)(a1);
}

__n128 static REMRemindersListDataView.fetchAll_Sections(store:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for REMRemindersListDataView.AllSectionsInvocation.Parameters(0);
  MEMORY[0x1F4188790](v7 - 8);
  char v9 = (char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A74BE75C(a1, (uint64_t)v9, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  id v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.AllSectionsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a2);
  sub_1A730BCCC((uint64_t)v10, (uint64_t)v9, v20);

  sub_1A74BE86C((uint64_t)v9, type metadata accessor for REMRemindersListDataView.AllSectionsInvocation.Parameters);
  if (!v3)
  {
    uint64_t v12 = v20[1];
    char v13 = v21;
    char v14 = v22;
    uint64_t v15 = v26;
    uint64_t v16 = v27;
    __n128 result = v23;
    long long v17 = v24;
    long long v18 = v25;
    *(uint64_t **)a3 = v20[0];
    *(void *)(a3 + 8) = v12;
    *(unsigned char *)(a3 + 16) = v13;
    *(unsigned char *)(a3 + 17) = v14;
    *(__n128 *)(a3 + 24) = result;
    *(_OWORD *)(a3 + 40) = v17;
    *(_OWORD *)(a3 + 56) = v18;
    *(void *)(a3 + 72) = v15;
    *(void *)(a3 + 80) = v16;
  }
  return result;
}

__n128 static REMRemindersListDataView.fetchGroup_Sections(store:group:includePinnedSublists:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v34 = a5;
  uint64_t v35 = a1;
  uint64_t v32 = a4;
  int v33 = a3;
  uint64_t v8 = type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation.Parameters(0);
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (objc_class *)type metadata accessor for REMList_Codable();
  id v13 = objc_allocWithZone(v12);
  id v14 = a2;
  id v15 = objc_msgSend(v14, sel_store);
  id v16 = objc_msgSend(v14, sel_account);
  id v17 = objc_msgSend(v14, sel_storage);
  v44.receiver = v13;
  v44.super_class = v12;
  id v18 = objc_msgSendSuper2(&v44, sel_initWithStore_account_storage_, v15, v16, v17);

  id v19 = v18;
  id v20 = objc_msgSend(v14, sel_parentList);
  objc_msgSend(v19, sel_setParentList_, v20);

  sub_1A74BE75C(v32, (uint64_t)&v11[*(int *)(v9 + 32)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  *(void *)uint64_t v11 = v19;
  _OWORD v11[8] = v33;
  id v21 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation());
  id v22 = objc_msgSend(v21, sel_initWithFetchResultTokenToDiffAgainst_, v34);
  uint64_t v23 = v45;
  sub_1A730BD74(v22, (uint64_t)v11, v36);

  sub_1A74BE86C((uint64_t)v11, type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation.Parameters);
  if (!v23)
  {
    uint64_t v25 = v36[1];
    char v26 = v37;
    char v27 = v38;
    uint64_t v28 = v43;
    __n128 result = v39;
    long long v29 = v40;
    long long v30 = v41;
    long long v31 = v42;
    *(void *)a6 = v36[0];
    *(void *)(a6 + 8) = v25;
    *(unsigned char *)(a6 + 16) = v26;
    *(unsigned char *)(a6 + 17) = v27;
    *(__n128 *)(a6 + 24) = result;
    *(_OWORD *)(a6 + 40) = v29;
    *(_OWORD *)(a6 + 56) = v30;
    *(_OWORD *)(a6 + 72) = v31;
    *(void *)(a6 + 88) = v28;
  }
  return result;
}

__n128 static REMRemindersListDataView.fetchAppIntents_Sections(store:diffingAgainst:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for REMRemindersListDataView.AppIntentsSectionsInvocation.Parameters(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v22[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  uint64_t v9 = Configuration - 8;
  MEMORY[0x1F4188790](Configuration);
  uint64_t v11 = (char *)&v22[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  swift_storeEnumTagMultiPayload();
  *uint64_t v11 = 0x80;
  v11[*(int *)(v9 + 32)] = 0;
  v11[*(int *)(v9 + 40)] = 0;
  sub_1A74BE75C((uint64_t)v11, (uint64_t)v7, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  id v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.AppIntentsSectionsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a1);
  sub_1A730CAF0((uint64_t)v12, (uint64_t)v7, v22);

  sub_1A74BE86C((uint64_t)v7, type metadata accessor for REMRemindersListDataView.AppIntentsSectionsInvocation.Parameters);
  sub_1A74BE86C((uint64_t)v11, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  if (!v2)
  {
    id v14 = v22[1];
    char v15 = v23;
    char v16 = v24;
    uint64_t v17 = v28;
    uint64_t v18 = v29;
    __n128 result = v25;
    long long v19 = v26;
    long long v20 = v27;
    *(uint64_t **)a2 = v22[0];
    *(void *)(a2 + 8) = v14;
    *(unsigned char *)(a2 + 16) = v15;
    *(unsigned char *)(a2 + 17) = v16;
    *(__n128 *)(a2 + 24) = result;
    *(_OWORD *)(a2 + 40) = v19;
    *(_OWORD *)(a2 + 56) = v20;
    *(void *)(a2 + 72) = v17;
    *(void *)(a2 + 80) = v18;
  }
  return result;
}

BOOL static REMRemindersListDataView.TodayGroupModel.Group.GroupType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.GroupType.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t sub_1A74B0934(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0EC8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B0970(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0EC8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B09AC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0FC4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B09E8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0FC4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B0A24()
{
  uint64_t result = 0x7961646F74;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F5465726F666562;
      break;
    case 2:
      uint64_t result = 0x6C6C417961646F74;
      break;
    case 3:
      uint64_t result = 0x676E696E726F6DLL;
      break;
    case 4:
      uint64_t result = 0x6F6F6E7265746661;
      break;
    case 5:
      uint64_t result = 0x746867696E6F74;
      break;
    case 6:
      uint64_t result = 0x79627261656ELL;
      break;
    case 7:
      uint64_t result = 0x7974706D65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74B0B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D28CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74B0B54(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0D78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B0B90(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0D78();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B0BCC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0DCC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B0C08(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0DCC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B0C44(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0F1C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B0C80(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0F1C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B0CBC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0E20();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B0CF8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0E20();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B0D34(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0F70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B0D70(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0F70();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B0DAC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1018();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B0DE8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1018();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B0E24(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0E74();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B0E60(uint64_t a1)
{
  unint64_t v2 = sub_1A74C0E74();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.GroupType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701888);
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  MEMORY[0x1F4188790](v3);
  int v49 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700E28);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700E38);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v43 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700E40);
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  MEMORY[0x1F4188790](v9);
  long long v40 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700E30);
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v39 = v11;
  MEMORY[0x1F4188790](v11);
  char v37 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700E18);
  uint64_t v35 = *(void *)(v13 - 8);
  uint64_t v36 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v34 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700E08);
  uint64_t v32 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  char v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700E10);
  uint64_t v31 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  long long v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700E20);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v52 = v20;
  uint64_t v53 = v21;
  MEMORY[0x1F4188790](v20);
  char v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C0D78();
  sub_1A75741B0();
  switch(v24)
  {
    case 1:
      char v55 = 1;
      sub_1A74C0FC4();
      uint64_t v25 = v52;
      sub_1A7573AB0();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v23, v25);
    case 2:
      char v56 = 2;
      sub_1A74C0F70();
      long long v26 = v34;
      uint64_t v25 = v52;
      sub_1A7573AB0();
      uint64_t v28 = v35;
      uint64_t v27 = v36;
      goto LABEL_10;
    case 3:
      char v57 = 3;
      sub_1A74C0F1C();
      long long v26 = v37;
      uint64_t v25 = v52;
      sub_1A7573AB0();
      uint64_t v28 = v38;
      uint64_t v27 = v39;
      goto LABEL_10;
    case 4:
      char v58 = 4;
      sub_1A74C0EC8();
      long long v26 = v40;
      uint64_t v25 = v52;
      sub_1A7573AB0();
      uint64_t v28 = v41;
      uint64_t v27 = v42;
      goto LABEL_10;
    case 5:
      char v59 = 5;
      sub_1A74C0E74();
      long long v26 = v43;
      uint64_t v25 = v52;
      sub_1A7573AB0();
      uint64_t v28 = v44;
      uint64_t v27 = v45;
      goto LABEL_10;
    case 6:
      char v60 = 6;
      sub_1A74C0E20();
      long long v26 = v46;
      uint64_t v25 = v52;
      sub_1A7573AB0();
      uint64_t v28 = v47;
      uint64_t v27 = v48;
      goto LABEL_10;
    case 7:
      char v61 = 7;
      sub_1A74C0DCC();
      long long v26 = v49;
      uint64_t v25 = v52;
      sub_1A7573AB0();
      uint64_t v28 = v50;
      uint64_t v27 = v51;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
      break;
    default:
      char v54 = 0;
      sub_1A74C1018();
      uint64_t v25 = v52;
      sub_1A7573AB0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v17);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v23, v25);
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.GroupType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v62 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701678);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x1F4188790](v3);
  long long v65 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7005E0);
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  char v61 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7005F0);
  uint64_t v56 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  long long v64 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7005F8);
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  MEMORY[0x1F4188790](v7);
  long long v63 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7005E8);
  uint64_t v52 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  char v60 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7005D0);
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v51 = v10;
  MEMORY[0x1F4188790](v10);
  char v59 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7005C0);
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v49 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7005C8);
  uint64_t v46 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7005D8);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  long long v66 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1A74C0D78();
  uint64_t v23 = v67;
  sub_1A7574190();
  if (v23) {
    goto LABEL_6;
  }
  uint64_t v43 = v17;
  uint64_t v42 = v15;
  uint64_t v25 = v63;
  uint64_t v24 = v64;
  long long v26 = v65;
  uint64_t v67 = v19;
  uint64_t v27 = v21;
  uint64_t v28 = sub_1A7573A70();
  if (*(void *)(v28 + 16) != 1)
  {
    uint64_t v31 = sub_1A7573640();
    swift_allocError();
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    *uint64_t v33 = &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x1E4FBBA70], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v27, v18);
LABEL_6:
    uint64_t v34 = (uint64_t)v66;
    return __swift_destroy_boxed_opaque_existential_1(v34);
  }
  char v29 = *(unsigned char *)(v28 + 32);
  switch(v29)
  {
    case 1:
      char v69 = 1;
      sub_1A74C0FC4();
      sub_1A7573990();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v49);
      break;
    case 2:
      char v70 = 2;
      sub_1A74C0F70();
      uint64_t v36 = v59;
      sub_1A7573990();
      uint64_t v38 = v50;
      uint64_t v37 = v51;
      goto LABEL_12;
    case 3:
      char v71 = 3;
      sub_1A74C0F1C();
      uint64_t v39 = v60;
      sub_1A7573990();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v39, v47);
      break;
    case 4:
      char v72 = 4;
      sub_1A74C0EC8();
      uint64_t v36 = v25;
      sub_1A7573990();
      uint64_t v38 = v54;
      uint64_t v37 = v55;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
      break;
    case 5:
      char v73 = 5;
      sub_1A74C0E74();
      sub_1A7573990();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v53);
      break;
    case 6:
      char v74 = 6;
      sub_1A74C0E20();
      long long v40 = v61;
      sub_1A7573990();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v40, v45);
      break;
    case 7:
      char v75 = 7;
      sub_1A74C0DCC();
      sub_1A7573990();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v58);
      break;
    default:
      char v68 = 0;
      sub_1A74C1018();
      uint64_t v30 = v43;
      sub_1A7573990();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v42);
      break;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v27, v18);
  uint64_t v34 = (uint64_t)v66;
  *long long v62 = v29;
  return __swift_destroy_boxed_opaque_existential_1(v34);
}

uint64_t sub_1A74B1F40@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMRemindersListDataView.TodayGroupModel.Group.GroupType.init(from:)(a1, a2);
}

uint64_t sub_1A74B1F58(void *a1)
{
  return REMRemindersListDataView.TodayGroupModel.Group.GroupType.encode(to:)(a1);
}

void REMRemindersListDataView.TodayGroupModel.Group.groupType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.reminders.getter()
{
  return swift_bridgeObjectRetain();
}

ReminderKitInternal::REMRemindersListDataView::TodayGroupModel::Group __swiftcall REMRemindersListDataView.TodayGroupModel.Group.init(groupType:reminders:)(ReminderKitInternal::REMRemindersListDataView::TodayGroupModel::Group::GroupType groupType, Swift::OpaquePointer reminders)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)groupType;
  *(Swift::OpaquePointer *)(v2 + 8) = reminders;
  result.reminders = reminders;
  result.groupType = groupType;
  return result;
}

uint64_t sub_1A74B1F94()
{
  if (*v0) {
    return 0x7265646E696D6572;
  }
  else {
    return 0x70795470756F7267;
  }
}

uint64_t sub_1A74B1FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D2C2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74B1FFC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C106C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B2038(uint64_t a1)
{
  unint64_t v2 = sub_1A74C106C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700E48);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  v10[0] = *((void *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C106C();
  sub_1A75741B0();
  char v13 = v8;
  char v12 = 0;
  sub_1A74C10C0();
  sub_1A7573B60();
  if (!v2)
  {
    v10[1] = v10[0];
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
    sub_1A74C130C(&qword_1EB700FD0, &qword_1EB704818, (void (*)(void))sub_1A74BFA50);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700600);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C106C();
  sub_1A7574190();
  if (!v2)
  {
    char v14 = 0;
    sub_1A74C1114();
    sub_1A7573A50();
    char v9 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
    char v13 = 1;
    sub_1A74C130C(&qword_1EB704820, &qword_1EB704818, (void (*)(void))sub_1A74BFAA4);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v12[1];
    *(unsigned char *)a2 = v9;
    *(void *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A74B246C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.TodayGroupModel.Group.init(from:)(a1, a2);
}

uint64_t sub_1A74B2484(void *a1)
{
  return REMRemindersListDataView.TodayGroupModel.Group.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.TodayGroupModel.groups.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 REMRemindersListDataView.TodayGroupModel.remindersCount.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = *(unsigned char *)(v1 + 24);
  __n128 result = *(__n128 *)(v1 + 8);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

void *REMRemindersListDataView.TodayGroupModel.currentLocation.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t REMRemindersListDataView.TodayGroupModel.prefetchedReminders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.TodayGroupModel.prefetchedDueReminders.getter()
{
  return swift_bridgeObjectRetain();
}

void *REMRemindersListDataView.TodayGroupModel.todaySmartList.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

__n128 REMRemindersListDataView.TodayGroupModel.init(groups:remindersCount:currentLocation:prefetchedReminders:prefetchedDueReminders:todaySmartList:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unsigned __int8 v7 = a2[1].n128_u8[0];
  *(void *)a7 = a1;
  __n128 result = *a2;
  *(__n128 *)(a7 + 8) = *a2;
  *(unsigned char *)(a7 + 24) = v7;
  *(void *)(a7 + 32) = a3;
  *(void *)(a7 + 40) = a4;
  *(void *)(a7 + 48) = a5;
  *(void *)(a7 + 56) = a6;
  return result;
}

uint64_t REMRemindersListDataView.TodayGroupModel.todayReminders.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = *(void *)v0 + 40;
  uint64_t result = MEMORY[0x1E4FBC860];
  while (*(unsigned char *)(v2 - 8))
  {
    v2 += 16;
    if (!--v1) {
      return result;
    }
  }
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.TodayGroupModel.nearbyReminders.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = *(void *)v0 + 40;
  uint64_t result = MEMORY[0x1E4FBC860];
  while (*(unsigned char *)(v2 - 8) != 6)
  {
    v2 += 16;
    if (!--v1) {
      return result;
    }
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_1A74B25FC(char a1)
{
  unint64_t result = 0x7370756F7267;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7265646E696D6572;
      break;
    case 2:
      unint64_t result = 0x4C746E6572727563;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x616D537961646F74;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A74B26F4()
{
  return sub_1A74B25FC(*v0);
}

uint64_t sub_1A74B26FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D2D30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74B2724(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1168();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B2760(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1168();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.TodayGroupModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7010C8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned __int8 v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v22 = v1[2];
  uint64_t v23 = v8;
  int v27 = *((unsigned __int8 *)v1 + 24);
  uint64_t v10 = v1[4];
  uint64_t v20 = v1[5];
  uint64_t v21 = v10;
  uint64_t v11 = v1[6];
  uint64_t v18 = v1[7];
  uint64_t v19 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1168();
  uint64_t v12 = v4;
  sub_1A75741B0();
  uint64_t v24 = v9;
  char v28 = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB701D68);
  sub_1A74C130C(qword_1EB700D68, qword_1EB701D68, (void (*)(void))sub_1A74C11BC);
  sub_1A7573B60();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  uint64_t v16 = v19;
  uint64_t v24 = v23;
  uint64_t v25 = v22;
  char v26 = v27;
  char v28 = 1;
  sub_1A74BFBA0();
  sub_1A7573B00();
  uint64_t v24 = v15;
  char v28 = 2;
  type metadata accessor for REMStructuredLocation_Codable();
  sub_1A74BF618(&qword_1EB7051B8, (void (*)(uint64_t))type metadata accessor for REMStructuredLocation_Codable);
  sub_1A7573B00();
  uint64_t v24 = v14;
  char v28 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
  sub_1A731DB84();
  sub_1A7573B60();
  uint64_t v24 = v16;
  char v28 = 4;
  sub_1A7573B60();
  uint64_t v24 = v18;
  char v28 = 5;
  type metadata accessor for REMSmartList_Codable();
  sub_1A74BF618(&qword_1EB703F48, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
  sub_1A7573B00();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t REMRemindersListDataView.TodayGroupModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C30);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1168();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB701D68);
  char v32 = 0;
  sub_1A74C130C(&qword_1EB7005B8, qword_1EB701D68, (void (*)(void))sub_1A74C1210);
  sub_1A7573A50();
  id v9 = v28;
  char v32 = 1;
  sub_1A74BFBF4();
  swift_bridgeObjectRetain();
  sub_1A75739F0();
  uint64_t v26 = v29;
  id v27 = v28;
  int v10 = v30;
  type metadata accessor for REMStructuredLocation_Codable();
  char v32 = 2;
  sub_1A74BF618(&qword_1EB7051C0, (void (*)(uint64_t))type metadata accessor for REMStructuredLocation_Codable);
  sub_1A75739F0();
  int v31 = v10;
  id v12 = v28;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
  char v32 = 3;
  unint64_t v13 = sub_1A73182C8();
  id v22 = v12;
  id v14 = v12;
  unint64_t v23 = v13;
  id v24 = v14;
  sub_1A7573A50();
  char v32 = 4;
  id v21 = v28;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  uint64_t v15 = (uint64_t)v28;
  type metadata accessor for REMSmartList_Codable();
  char v32 = 5;
  sub_1A74BF618(&qword_1EB703698, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
  uint64_t v25 = v15;
  swift_bridgeObjectRetain();
  sub_1A75739F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v16 = v28;
  id v17 = v28;
  id v18 = v27;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v18;
  uint64_t v19 = v25;
  *(void *)(a2 + 16) = v26;
  *(unsigned char *)(a2 + 24) = v31;
  id v20 = v21;
  *(void *)(a2 + 32) = v22;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v19;
  *(void *)(a2 + 56) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74B3080@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.TodayGroupModel.init(from:)(a1, a2);
}

uint64_t sub_1A74B3098(void *a1)
{
  return REMRemindersListDataView.TodayGroupModel.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.TodaySectionOrderingModel.sectionOrdering.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.TodaySectionOrderingModel.init(sectionOrdering:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1A74B30C0()
{
  return 0x4F6E6F6974636573;
}

uint64_t sub_1A74B30E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x4F6E6F6974636573 && a2 == 0xEF676E6972656472)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A74B31A0(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1264();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B31DC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1264();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.TodaySectionOrderingModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F49D0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1264();
  sub_1A75741B0();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1B50);
  sub_1A74C130C(&qword_1E96F49E0, &qword_1E96F1B50, (void (*)(void))sub_1A74C12B8);
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMRemindersListDataView.TodaySectionOrderingModel.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F49F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1264();
  sub_1A7574190();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1B50);
    sub_1A74C130C(&qword_1E96F49F8, &qword_1E96F1B50, (void (*)(void))sub_1A74C1378);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A74B3550@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMRemindersListDataView.TodaySectionOrderingModel.init(from:)(a1, a2);
}

uint64_t sub_1A74B3568(void *a1)
{
  return REMRemindersListDataView.TodaySectionOrderingModel.encode(to:)(a1);
}

__n128 static REMRemindersListDataView.fetchToday_Groups(store:grouped:currentLocation:today:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, id a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v29[1] = a1;
  uint64_t v13 = type metadata accessor for REMRemindersListDataView.TodayGroupInvocation.Parameters(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    objc_allocWithZone((Class)type metadata accessor for REMStructuredLocation_Codable());
    a3 = REMStructuredLocation_Codable.init(_:)(a3);
  }
  id v16 = &v15[*(int *)(v13 + 24)];
  uint64_t v17 = sub_1A7571B60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, a4, v17);
  sub_1A74BE75C(a5, (uint64_t)&v15[*(int *)(v13 + 28)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  char *v15 = a2 & 1;
  *((void *)v15 + 1) = a3;
  id v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.TodayGroupInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a6);
  uint64_t v19 = v40;
  sub_1A730D928(v18, (uint64_t)v15, &v30);

  sub_1A74BE86C((uint64_t)v15, type metadata accessor for REMRemindersListDataView.TodayGroupInvocation.Parameters);
  if (!v19)
  {
    char v21 = v32;
    uint64_t v22 = v33;
    uint64_t v23 = v35;
    uint64_t v24 = v38;
    uint64_t v25 = v39;
    __n128 result = v31;
    long long v26 = v34;
    long long v27 = v36;
    long long v28 = v37;
    *(void *)a7 = v30;
    *(__n128 *)(a7 + 8) = result;
    *(unsigned char *)(a7 + 24) = v21;
    *(void *)(a7 + 32) = v22;
    *(_OWORD *)(a7 + 40) = v26;
    *(void *)(a7 + 56) = v23;
    *(_OWORD *)(a7 + 64) = v27;
    *(_OWORD *)(a7 + 80) = v28;
    *(void *)(a7 + 96) = v24;
    *(void *)(a7 + 104) = v25;
  }
  return result;
}

void static REMRemindersListDataView.fetchTodaySectionOrdering(store:)(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.TodaySectionOrderingInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  sub_1A730E734((uint64_t)v3, v5);

  if (!v1)
  {
    uint64_t v4 = v5[0];

    *a1 = v4;
  }
}

uint64_t REMRemindersListDataView.DatesModel.Group.reminders.getter()
{
  return sub_1A74B4734((void (*)(void))type metadata accessor for REMRemindersListDataView.DatesModel.Group);
}

uint64_t REMRemindersListDataView.DatesModel.Group.isToday.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for REMRemindersListDataView.DatesModel.Group(0) + 24));
}

uint64_t REMRemindersListDataView.DatesModel.Group.init(date:reminders:isToday:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for REMRemindersListDataView.DatesModel.Group(0);
  *(void *)(a4 + *(int *)(result + 20)) = a2;
  *(unsigned char *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t sub_1A74B38B0()
{
  uint64_t v1 = 0x7265646E696D6572;
  if (*v0 != 1) {
    uint64_t v1 = 0x7961646F547369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_1A74B3908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D300C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74B3930(uint64_t a1)
{
  unint64_t v2 = sub_1A74C13EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B396C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C13EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.DatesModel.Group.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A08);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C13EC();
  sub_1A75741B0();
  char v12 = 0;
  sub_1A7571B60();
  sub_1A74BF618(&qword_1EB704C38, MEMORY[0x1E4F27928]);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for REMRemindersListDataView.DatesModel.Group(0) + 20));
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
    sub_1A74C130C(&qword_1EB700FD0, &qword_1EB704818, (void (*)(void))sub_1A74BFA50);
    sub_1A7573B60();
    v10[14] = 2;
    sub_1A7573B20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMRemindersListDataView.DatesModel.Group.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_1A7571B60();
  uint64_t v24 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v25 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A18);
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMRemindersListDataView.DatesModel.Group(0);
  MEMORY[0x1F4188790](v8);
  int v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C13EC();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v23;
  uint64_t v11 = v24;
  uint64_t v21 = v8;
  char v30 = 0;
  sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
  uint64_t v13 = v25;
  sub_1A7573A50();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  id v20 = v10;
  v14(v10, v13, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
  char v29 = 1;
  sub_1A74C130C(&qword_1EB704820, &qword_1EB704818, (void (*)(void))sub_1A74BFAA4);
  sub_1A7573A50();
  *(void *)&v20[*(int *)(v21 + 20)] = v27;
  char v28 = 2;
  char v15 = sub_1A7573A10();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v26);
  uint64_t v16 = v22;
  char v17 = v15 & 1;
  uint64_t v18 = (uint64_t)v20;
  v20[*(int *)(v21 + 24)] = v17;
  sub_1A74BE75C(v18, v16, type metadata accessor for REMRemindersListDataView.DatesModel.Group);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A74BE86C(v18, type metadata accessor for REMRemindersListDataView.DatesModel.Group);
}

uint64_t sub_1A74B4008@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.DatesModel.Group.init(from:)(a1, a2);
}

uint64_t sub_1A74B4020(void *a1)
{
  return REMRemindersListDataView.DatesModel.Group.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.DatesModel.groups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.DatesModel.completedRemindersCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t REMRemindersListDataView.DatesModel.prefetchedReminders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.DatesModel.prefetchedDueReminders.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall REMRemindersListDataView.DatesModel.init(groups:completedRemindersCount:prefetchedReminders:prefetchedDueReminders:)(ReminderKitInternal::REMRemindersListDataView::DatesModel *__return_ptr retstr, Swift::OpaquePointer groups, Swift::Int_optional completedRemindersCount, Swift::OpaquePointer prefetchedReminders, Swift::OpaquePointer prefetchedDueReminders)
{
  retstr->groups = groups;
  retstr->completedRemindersCount.Swift::Int value = completedRemindersCount.value;
  retstr->completedRemindersCount.Swift::Bool is_nil = completedRemindersCount.is_nil;
  retstr->prefetchedReminders = prefetchedReminders;
  retstr->prefetchedDueReminders = prefetchedDueReminders;
}

unint64_t sub_1A74B4070(char a1)
{
  unint64_t result = 0x7370756F7267;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A74B410C()
{
  return sub_1A74B4070(*v0);
}

uint64_t sub_1A74B4114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D3160(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74B413C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1440();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B4178(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1440();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.DatesModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A20);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v17 = v1[1];
  int v16 = *((unsigned __int8 *)v1 + 16);
  uint64_t v9 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v15 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1440();
  sub_1A75741B0();
  uint64_t v19 = v8;
  char v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A30);
  sub_1A74C1494();
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v11 = v14;
    uint64_t v10 = v15;
    LOBYTE(v19) = 1;
    sub_1A7573AF0();
    uint64_t v19 = v10;
    char v18 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
    sub_1A731DB84();
    sub_1A7573B60();
    uint64_t v19 = v11;
    char v18 = 3;
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.DatesModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1440();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A30);
  char v20 = 0;
  sub_1A74C1538();
  sub_1A7573A50();
  uint64_t v9 = v21;
  LOBYTE(v21) = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1A75739E0();
  int v17 = v11;
  uint64_t v18 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
  char v20 = 2;
  unint64_t v19 = sub_1A73182C8();
  sub_1A7573A50();
  char v20 = 3;
  uint64_t v16 = v21;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v18;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v14;
  *(unsigned char *)(a2 + 16) = v17 & 1;
  *(void *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74B46E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.DatesModel.init(from:)(a1, a2);
}

uint64_t sub_1A74B4700(void *a1)
{
  return REMRemindersListDataView.DatesModel.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Day.reminders.getter()
{
  return sub_1A74B4734((void (*)(void))type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
}

uint64_t sub_1A74B4734(void (*a1)(void))
{
  a1(0);

  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Day.init(date:reminders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A74B8F04(a1, a2, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day, a3);
}

uint64_t sub_1A74B4788(uint64_t a1)
{
  unint64_t v2 = sub_1A74C15FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B47C4(uint64_t a1)
{
  unint64_t v2 = sub_1A74C15FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Day.encode(to:)(void *a1)
{
  return sub_1A74B90B0(a1, &qword_1EB7012D8, (void (*)(void))sub_1A74C15FC, (uint64_t)&type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Day.CodingKeys, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Day.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v26 = sub_1A7571B60();
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7011E0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C15FC();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = v23;
  char v29 = 0;
  sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
  uint64_t v15 = v26;
  uint64_t v16 = v24;
  sub_1A7573A50();
  int v17 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v20 = (uint64_t)v13;
  v17(v13, v5, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
  char v28 = 1;
  sub_1A74C130C(&qword_1EB704820, &qword_1EB704818, (void (*)(void))sub_1A74BFAA4);
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v16);
  uint64_t v18 = v20;
  *(void *)(v20 + *(int *)(v21 + 20)) = v27;
  sub_1A74BE75C(v18, v22, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A74BE86C(v18, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
}

uint64_t sub_1A74B4C18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.Day.init(from:)(a1, a2);
}

uint64_t sub_1A74B4C30(void *a1)
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.Day.encode(to:)(a1);
}

uint64_t sub_1A74B4C48()
{
  uint64_t result = 0x65754474736170;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657669467478656ELL;
      break;
    case 2:
      uint64_t result = 7954788;
      break;
    case 3:
      uint64_t result = 0x68746E6F6DLL;
      break;
    case 4:
      uint64_t result = 1918985593;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74B4CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D32F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74B4D10(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1670();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B4D4C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1670();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B4D88(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1810();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B4DC4(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1810();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B4E00(uint64_t a1)
{
  unint64_t v2 = sub_1A74C17BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B4E3C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C17BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B4E78(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1864();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B4EB4(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1864();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B4EF0()
{
  return 1937334628;
}

uint64_t sub_1A74B4F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1937334628 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A74B4F88(uint64_t a1)
{
  unint64_t v2 = sub_1A74C18B8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B4FC4(uint64_t a1)
{
  unint64_t v2 = sub_1A74C18B8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B5000(uint64_t a1)
{
  unint64_t v2 = sub_1A74C16C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B503C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C16C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7012F0);
  uint64_t v62 = *(void *)(v2 - 8);
  uint64_t v63 = v2;
  MEMORY[0x1F4188790](v2);
  char v61 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7012F8);
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v58 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7012E8);
  uint64_t v49 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v53 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
  MEMORY[0x1F4188790](v51);
  uint64_t v52 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701308);
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v54 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A7571B60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v67 = v10;
  uint64_t v68 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  long long v66 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  long long v65 = (char *)&v49 - v15;
  MEMORY[0x1F4188790](v14);
  long long v64 = (char *)&v49 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701300);
  uint64_t v50 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char **)((char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7012E0);
  uint64_t v69 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1670();
  sub_1A75741B0();
  sub_1A74BE75C((uint64_t)v71, (uint64_t)v22, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v66 = *(char **)((char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702B88) + 48));
      uint64_t v28 = v67;
      uint64_t v27 = v68;
      char v29 = v64;
      (*(void (**)(char *, char **, uint64_t))(v68 + 32))(v64, v22, v67);
      LOBYTE(v74) = 1;
      sub_1A74C1864();
      char v30 = v54;
      uint64_t v31 = v72;
      sub_1A7573AB0();
      LOBYTE(v74) = 0;
      sub_1A74BF618(&qword_1EB704C38, MEMORY[0x1E4F27928]);
      uint64_t v32 = v57;
      uint64_t v33 = v70;
      sub_1A7573B60();
      if (!v33)
      {
        char v71 = v24;
        char v74 = v66;
        char v73 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702E68);
        sub_1A74C1718();
        sub_1A7573B60();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v32);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v64, v28);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v72);
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v32);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v24, v31);
    case 2u:
      uint64_t v35 = v52;
      sub_1A74BE804((uint64_t)v22, v52, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
      LOBYTE(v74) = 2;
      sub_1A74C1810();
      long long v36 = v53;
      uint64_t v37 = v72;
      sub_1A7573AB0();
      sub_1A74BF618(&qword_1EB701288, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
      uint64_t v38 = v55;
      sub_1A7573B60();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v38);
      sub_1A74BE86C(v35, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v24, v37);
    case 3u:
      long long v66 = *(char **)((char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702B88) + 48));
      uint64_t v40 = v67;
      uint64_t v39 = v68;
      uint64_t v41 = v65;
      (*(void (**)(char *, char **, uint64_t))(v68 + 32))(v65, v22, v67);
      LOBYTE(v74) = 3;
      sub_1A74C17BC();
      uint64_t v42 = v58;
      uint64_t v43 = v72;
      uint64_t v44 = v24;
      sub_1A7573AB0();
      LOBYTE(v74) = 0;
      sub_1A74BF618(&qword_1EB704C38, MEMORY[0x1E4F27928]);
      uint64_t v45 = v60;
      uint64_t v46 = v70;
      sub_1A7573B60();
      if (v46)
      {
        swift_bridgeObjectRelease();
        uint64_t v47 = v59;
        goto LABEL_10;
      }
      char v71 = v24;
      char v74 = v66;
      char v73 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702E68);
      sub_1A74C1718();
      sub_1A7573B60();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v45);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v65, v40);
      goto LABEL_16;
    case 4u:
      long long v65 = *(char **)((char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702B88) + 48));
      uint64_t v40 = v67;
      uint64_t v39 = v68;
      uint64_t v41 = v66;
      (*(void (**)(char *, char **, uint64_t))(v68 + 32))(v66, v22, v67);
      LOBYTE(v74) = 4;
      sub_1A74C16C4();
      uint64_t v42 = v61;
      uint64_t v43 = v72;
      uint64_t v44 = v24;
      sub_1A7573AB0();
      LOBYTE(v74) = 0;
      sub_1A74BF618(&qword_1EB704C38, MEMORY[0x1E4F27928]);
      uint64_t v45 = v63;
      uint64_t v48 = v70;
      sub_1A7573B60();
      if (v48)
      {
        swift_bridgeObjectRelease();
        uint64_t v47 = v62;
LABEL_10:
        (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v45);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v40);
        return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v44, v43);
      }
      else
      {
        char v71 = v24;
        char v74 = v65;
        char v73 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702E68);
        sub_1A74C1718();
        sub_1A7573B60();
        (*(void (**)(char *, uint64_t))(v62 + 8))(v42, v45);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v66, v40);
LABEL_16:
        (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v72);
        return swift_bridgeObjectRelease();
      }
    default:
      uint64_t v25 = *v22;
      LOBYTE(v74) = 0;
      sub_1A74C18B8();
      uint64_t v26 = v72;
      sub_1A7573AB0();
      char v74 = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702E68);
      sub_1A74C1718();
      sub_1A7573B60();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v19, v17);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v24, v26);
      return swift_bridgeObjectRelease();
  }
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7011F8);
  uint64_t v77 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  unint64_t v87 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701200);
  uint64_t v76 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  unsigned __int8 v86 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7011F0);
  uint64_t v71 = *(void *)(v5 - 8);
  uint64_t v72 = v5;
  MEMORY[0x1F4188790](v5);
  unsigned __int8 v80 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701210);
  uint64_t v73 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  unint64_t v81 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701208);
  uint64_t v84 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v79 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7011E8);
  uint64_t v82 = *(void *)(v9 - 8);
  uint64_t v83 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(0);
  uint64_t v12 = MEMORY[0x1F4188790](v88);
  uint64_t v70 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v64 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  unint64_t v19 = (char *)&v64 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v64 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (char *)&v64 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v64 - v26;
  uint64_t v28 = a1[3];
  uint64_t v89 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_1A74C1670();
  uint64_t v29 = v90;
  sub_1A7574190();
  if (!v29)
  {
    long long v64 = v25;
    long long v65 = v19;
    uint64_t v30 = v84;
    uint64_t v68 = v22;
    long long v66 = v16;
    uint64_t v90 = 0;
    uint64_t v31 = v85;
    uint64_t v32 = v86;
    uint64_t v33 = v87;
    uint64_t v67 = v27;
    uint64_t v34 = v83;
    uint64_t v35 = sub_1A7573A70();
    uint64_t v36 = v35;
    if (*(void *)(v35 + 16) == 1)
    {
      switch(*(unsigned char *)(v35 + 32))
      {
        case 1:
          LOBYTE(v91) = 1;
          sub_1A74C1864();
          uint64_t v45 = v81;
          uint64_t v46 = v90;
          sub_1A7573990();
          if (v46) {
            goto LABEL_15;
          }
          sub_1A7571B60();
          LOBYTE(v91) = 0;
          sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
          sub_1A7573A50();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702B88);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702E68);
          LOBYTE(v91) = 1;
          sub_1A74C190C();
          sub_1A7573A50();
          uint64_t v57 = v82;
          (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v31);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v34);
          uint64_t v62 = (uint64_t)v68;
          goto LABEL_17;
        case 2:
          LOBYTE(v91) = 2;
          sub_1A74C1810();
          uint64_t v47 = v80;
          uint64_t v48 = v90;
          sub_1A7573990();
          if (v48) {
            goto LABEL_15;
          }
          type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
          sub_1A74BF618(&qword_1EB7011A0, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
          uint64_t v49 = v65;
          uint64_t v50 = v72;
          sub_1A7573A50();
          (*(void (**)(char *, uint64_t))(v71 + 8))(v47, v50);
          swift_bridgeObjectRelease();
          uint64_t v62 = (uint64_t)v49;
          (*(void (**)(char *, uint64_t))(v82 + 8))(v11, v34);
LABEL_17:
          swift_storeEnumTagMultiPayload();
          uint64_t v41 = v62;
          break;
        case 3:
          LOBYTE(v91) = 3;
          sub_1A74C17BC();
          uint64_t v51 = v90;
          sub_1A7573990();
          if (v51) {
            goto LABEL_15;
          }
          sub_1A7571B60();
          LOBYTE(v91) = 0;
          sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
          uint64_t v52 = v66;
          uint64_t v53 = v74;
          sub_1A7573A50();
          uint64_t v90 = v36;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702B88);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702E68);
          LOBYTE(v91) = 1;
          sub_1A74C190C();
          sub_1A7573A50();
          uint64_t v58 = v53;
          uint64_t v59 = v82;
          (*(void (**)(char *, uint64_t))(v76 + 8))(v32, v58);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v11, v34);
          goto LABEL_18;
        case 4:
          LOBYTE(v91) = 4;
          sub_1A74C16C4();
          uint64_t v54 = v90;
          sub_1A7573990();
          if (v54) {
            goto LABEL_15;
          }
          sub_1A7571B60();
          LOBYTE(v91) = 0;
          sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
          uint64_t v52 = v70;
          uint64_t v55 = v75;
          sub_1A7573A50();
          uint64_t v90 = v36;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702B88);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702E68);
          LOBYTE(v91) = 1;
          sub_1A74C190C();
          sub_1A7573A50();
          uint64_t v60 = v55;
          uint64_t v61 = v82;
          (*(void (**)(char *, uint64_t))(v77 + 8))(v33, v60);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v61 + 8))(v11, v34);
LABEL_18:
          swift_storeEnumTagMultiPayload();
          uint64_t v41 = (uint64_t)v52;
          break;
        default:
          LOBYTE(v91) = 0;
          sub_1A74C18B8();
          uint64_t v37 = v79;
          uint64_t v38 = v90;
          sub_1A7573990();
          if (v38) {
            goto LABEL_15;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702E68);
          sub_1A74C190C();
          uint64_t v39 = v69;
          sub_1A7573A50();
          (*(void (**)(char *, uint64_t))(v30 + 8))(v37, v39);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v82 + 8))(v11, v34);
          uint64_t v40 = v64;
          *long long v64 = v91;
          swift_storeEnumTagMultiPayload();
          uint64_t v41 = (uint64_t)v40;
          break;
      }
      uint64_t v63 = (uint64_t)v67;
      sub_1A74BE804(v41, (uint64_t)v67, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket);
      sub_1A74BE804(v63, v78, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket);
    }
    else
    {
      uint64_t v42 = sub_1A7573640();
      swift_allocError();
      uint64_t v44 = v43;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
      uint64_t *v44 = v88;
      sub_1A75739A0();
      sub_1A7573620();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v42 - 8) + 104))(v44, *MEMORY[0x1E4FBBA70], v42);
      swift_willThrow();
LABEL_15:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v11, v34);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
}

uint64_t sub_1A74B6A4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.init(from:)(a1, a2);
}

uint64_t sub_1A74B6A64(void *a1)
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.encode(to:)(a1);
}

uint64_t sub_1A74B6A80(uint64_t a1)
{
  unint64_t v2 = sub_1A74C19B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B6ABC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C19B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7012D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v17 = v1[2];
  uint64_t v18 = v8;
  int v22 = *((unsigned __int8 *)v1 + 24);
  uint64_t v10 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C19B0();
  sub_1A75741B0();
  uint64_t v19 = v9;
  char v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702E70);
  sub_1A74C1A04();
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v12 = v15;
    uint64_t v11 = v16;
    uint64_t v19 = v18;
    uint64_t v20 = v17;
    char v21 = v22;
    char v23 = 1;
    sub_1A74BFBA0();
    sub_1A7573B00();
    uint64_t v19 = v11;
    char v23 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
    sub_1A731DB84();
    sub_1A7573B60();
    uint64_t v19 = v12;
    char v23 = 3;
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7011D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C19B0();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702E70);
  char v23 = 0;
  sub_1A74C1AA8();
  sub_1A7573A50();
  uint64_t v9 = v19;
  char v23 = 1;
  sub_1A74BFBF4();
  swift_bridgeObjectRetain();
  sub_1A75739F0();
  uint64_t v16 = v20;
  uint64_t v17 = v19;
  int v22 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
  char v23 = 2;
  unint64_t v18 = sub_1A73182C8();
  sub_1A7573A50();
  char v23 = 3;
  uint64_t v15 = v19;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v17;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v12;
  uint64_t v13 = v15;
  *(void *)(a2 + 16) = v16;
  *(unsigned char *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74B7078@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.init(from:)(a1, a2);
}

uint64_t sub_1A74B7090(void *a1)
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.encode(to:)(a1);
}

__n128 static REMRemindersListDataView.fetchScheduled_Flat(store:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for REMRemindersListDataView.ScheduledFlatInvocation.Parameters(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A74BE75C(a1, (uint64_t)v9, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  uint64_t v10 = (uint64_t *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.ScheduledFlatInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a2);
  sub_1A730F298(v10, v9, &v19);

  sub_1A74BE86C((uint64_t)v9, type metadata accessor for REMRemindersListDataView.ScheduledFlatInvocation.Parameters);
  if (!v3)
  {
    char v12 = v21;
    char v13 = v22;
    uint64_t v14 = v26;
    uint64_t v15 = v27;
    __n128 result = v20;
    long long v16 = v23;
    long long v17 = v24;
    long long v18 = v25;
    *(void *)a3 = v19;
    *(__n128 *)(a3 + 8) = result;
    *(unsigned char *)(a3 + 24) = v12;
    *(unsigned char *)(a3 + 25) = v13;
    *(_OWORD *)(a3 + 32) = v16;
    *(_OWORD *)(a3 + 48) = v17;
    *(_OWORD *)(a3 + 64) = v18;
    *(void *)(a3 + 80) = v14;
    *(void *)(a3 + 88) = v15;
  }
  return result;
}

uint64_t sub_1A74B71EC()
{
  return 0x7961646F74;
}

uint64_t sub_1A74B7200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7961646F74 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A74B7290(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1BC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B72CC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1BC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B7308(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1C14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B7344(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1C14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B7380()
{
  if (*v0) {
    return 0x737961776C61;
  }
  else {
    return 0x64656465654E7361;
  }
}

uint64_t sub_1A74B73B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D3508(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74B73E0(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1B6C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B741C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1B6C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.ScheduledTodayGroup.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A70);
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  MEMORY[0x1F4188790](v2);
  long long v24 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A7571B60();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v30 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A78);
  uint64_t v6 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A80);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1B6C();
  sub_1A75741B0();
  sub_1A74BE75C(v29, (uint64_t)v11, type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v11, 1, v16) == 1)
  {
    char v31 = 0;
    sub_1A74C1C14();
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v23);
  }
  else
  {
    uint64_t v19 = v25;
    uint64_t v18 = v26;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v11, v26);
    char v32 = 1;
    sub_1A74C1BC0();
    __n128 v20 = v24;
    sub_1A7573AB0();
    sub_1A74BF618(&qword_1EB704C38, MEMORY[0x1E4F27928]);
    uint64_t v21 = v28;
    sub_1A7573B60();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v21);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v30, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t REMRemindersListDataView.ScheduledTodayGroup.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4AA8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  uint64_t v36 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v40 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4AB0);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v39 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4AB8);
  uint64_t v38 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup(0);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v30 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1B6C();
  long long v17 = v41;
  sub_1A7574190();
  if (!v17)
  {
    char v31 = v14;
    char v32 = v16;
    uint64_t v18 = v39;
    uint64_t v19 = v40;
    uint64_t v41 = a1;
    uint64_t v20 = sub_1A7573A70();
    if (*(void *)(v20 + 16) == 1)
    {
      a1 = v41;
      if (*(unsigned char *)(v20 + 32))
      {
        uint64_t v39 = (char *)v20;
        char v43 = 1;
        sub_1A74C1BC0();
        sub_1A7573990();
        sub_1A7571B60();
        sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
        uint64_t v25 = (uint64_t)v31;
        uint64_t v26 = v35;
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v26);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v8);
        a1 = v41;
        uint64_t v27 = (uint64_t)v32;
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v25, 0, 1, v28);
        sub_1A74BE804(v25, v27, type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup);
      }
      else
      {
        char v42 = 0;
        sub_1A74C1C14();
        sub_1A7573990();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v34);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v8);
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
        uint64_t v27 = (uint64_t)v32;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v32, 1, 1, v29);
      }
      sub_1A74BE804(v27, v37, type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup);
    }
    else
    {
      uint64_t v21 = sub_1A7573640();
      swift_allocError();
      uint64_t v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
      *uint64_t v23 = v11;
      sub_1A75739A0();
      sub_1A7573620();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x1E4FBBA70], v21);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v8);
      a1 = v41;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A74B7F00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ScheduledTodayGroup.init(from:)(a1, a2);
}

uint64_t sub_1A74B7F18(void *a1)
{
  return REMRemindersListDataView.ScheduledTodayGroup.encode(to:)(a1);
}

__n128 static REMRemindersListDataView.fetchScheduled_ByDay(store:includeTodayGroup:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v22[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A74BE75C(a1, (uint64_t)v12, type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup);
  sub_1A74BE75C(a2, (uint64_t)&v12[*(int *)(v10 + 28)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  id v13 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a3);
  sub_1A730F32C(v13, (uint64_t)v12, v22);

  sub_1A74BE86C((uint64_t)v12, type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters);
  if (!v4)
  {
    uint64_t v15 = v22[1];
    char v16 = v23;
    uint64_t v17 = v27;
    uint64_t v18 = v28;
    __n128 result = v24;
    long long v19 = v25;
    long long v20 = v26;
    *(void *)a4 = v22[0];
    *(void *)(a4 + 8) = v15;
    *(unsigned char *)(a4 + 16) = v16;
    *(__n128 *)(a4 + 24) = result;
    *(_OWORD *)(a4 + 40) = v19;
    *(_OWORD *)(a4 + 56) = v20;
    *(void *)(a4 + 72) = v17;
    *(void *)(a4 + 80) = v18;
  }
  return result;
}

uint64_t sub_1A74B8098()
{
  if (*v0) {
    return 0x746361706D6F63;
  }
  else {
    return 0x72616C75676572;
  }
}

uint64_t sub_1A74B80CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D35F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74B80F4(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1C68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B8130(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1C68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B816C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1CBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B81A8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1CBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B81E4(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1D10();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B8220(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1D10();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.ScheduledByDateBucketsStyle.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701220);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701228);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701218);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1C68();
  sub_1A75741B0();
  id v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A74C1CBC();
    uint64_t v14 = v18;
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A74C1D10();
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t REMRemindersListDataView.ScheduledByDateBucketsStyle.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7012B8);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7012C0);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7012B0);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1C68();
  uint64_t v11 = v32;
  sub_1A7574190();
  if (v11) {
    goto LABEL_6;
  }
  char v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_1A7573A70();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A7573640();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    void *v22 = &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A74C1CBC();
    uint64_t v18 = v14;
    sub_1A7573990();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A74C1D10();
    sub_1A7573990();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_1A74B895C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMRemindersListDataView.ScheduledByDateBucketsStyle.init(from:)(a1, a2);
}

uint64_t sub_1A74B8974(void *a1)
{
  return REMRemindersListDataView.ScheduledByDateBucketsStyle.encode(to:)(a1);
}

__n128 static REMRemindersListDataView.fetchScheduled_ByDateBuckets(store:style:today:configuration:diffingAgainst:)@<Q0>(char *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsInvocation.Parameters(0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = *a1;
  uint64_t v15 = &v13[*(int *)(v11 + 28)];
  uint64_t v16 = sub_1A7571B60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a2, v16);
  sub_1A74BE75C(a3, (uint64_t)&v13[*(int *)(v11 + 32)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  *uint64_t v13 = v14;
  char v17 = (unint64_t *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a4);
  uint64_t v18 = v34;
  sub_1A731005C(v17, (uint64_t)v13, &v26);

  sub_1A74BE86C((uint64_t)v13, type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsInvocation.Parameters);
  if (!v18)
  {
    char v20 = v28;
    uint64_t v21 = v32;
    uint64_t v22 = v33;
    __n128 result = v27;
    long long v23 = v29;
    long long v24 = v30;
    long long v25 = v31;
    *(void *)a5 = v26;
    *(__n128 *)(a5 + 8) = result;
    *(unsigned char *)(a5 + 24) = v20;
    *(_OWORD *)(a5 + 32) = v23;
    *(_OWORD *)(a5 + 48) = v24;
    *(_OWORD *)(a5 + 64) = v25;
    *(void *)(a5 + 80) = v21;
    *(void *)(a5 + 88) = v22;
  }
  return result;
}

__n128 static REMRemindersListDataView.fetchScheduled(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:alwaysIncludeTodayGroup:diffingAgainst:)@<Q0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v36 = a8;
  uint64_t v37 = a7;
  int v47 = a6;
  uint64_t v12 = type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters(0);
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup(0);
  MEMORY[0x1F4188790](v15 - 8);
  char v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  uint64_t v19 = (int *)(Configuration - 8);
  MEMORY[0x1F4188790](Configuration);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  sub_1A74BE75C(a3, (uint64_t)&v21[v19[7]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A74BE75C(a5, (uint64_t)&v21[v19[9]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *uint64_t v21 = (_BYTE)a2;
  v21[v19[8]] = a4;
  v21[v19[10]] = 2;
  if (v47)
  {
    sub_1A7571B50();
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 0, 1, v22);
  }
  else
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v17, 1, 1, v23);
  }
  uint64_t v24 = v39;
  uint64_t v25 = v37;
  sub_1A74BE75C((uint64_t)v17, (uint64_t)v14, type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup);
  sub_1A74BE75C((uint64_t)v21, (uint64_t)&v14[*(int *)(v12 + 20)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  id v26 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, v25);
  sub_1A730F32C(v26, (uint64_t)v14, v40);

  sub_1A74BE86C((uint64_t)v14, type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters);
  sub_1A74BE86C((uint64_t)v17, type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup);
  sub_1A74BE86C((uint64_t)v21, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  if (!v24)
  {
    uint64_t v28 = v40[1];
    char v29 = v41;
    uint64_t v30 = v45;
    uint64_t v31 = v46;
    __n128 result = v42;
    long long v32 = v43;
    long long v33 = v44;
    uint64_t v34 = v36;
    void *v36 = v40[0];
    v34[1] = v28;
    *((unsigned char *)v34 + 16) = v29;
    *(__n128 *)(v34 + 3) = result;
    *(_OWORD *)(v34 + 5) = v32;
    *(_OWORD *)(v34 + 7) = v33;
    v34[9] = v30;
    v34[10] = v31;
  }
  return result;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO16DateBucketsModelO014RepresentativeH0V4date10Foundation0H0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A7571B60();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Day.reminders.getter()
{
  return sub_1A74B4734((void (*)(void))type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Day.init(date:reminders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A74B8F04(a1, a2, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day, a3);
}

uint64_t sub_1A74B8F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = a3(0);
  *(void *)(a4 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_1A74B8F88()
{
  if (*v0) {
    return 0x7265646E696D6572;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_1A74B8FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D36E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74B8FE8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1D84();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B9024(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1D84();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Day.encode(to:)(void *a1)
{
  return sub_1A74B90B0(a1, &qword_1E96F4AC8, (void (*)(void))sub_1A74C1D84, (uint64_t)&type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Day.CodingKeys, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
}

uint64_t sub_1A74B90B0(void *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v16 = a5;
  uint64_t v7 = v5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A75741B0();
  char v20 = 0;
  sub_1A7571B60();
  sub_1A74BF618(&qword_1EB704C38, MEMORY[0x1E4F27928]);
  uint64_t v13 = v17;
  sub_1A7573B60();
  if (!v13)
  {
    uint64_t v18 = *(void *)(v7 + *(int *)(v16(0) + 20));
    char v19 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
    sub_1A74C130C(&qword_1EB700FD0, &qword_1EB704818, (void (*)(void))sub_1A74BFA50);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Day.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v26 = sub_1A7571B60();
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4AD8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1D84();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = v23;
  char v29 = 0;
  sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
  uint64_t v15 = v26;
  uint64_t v16 = v24;
  sub_1A7573A50();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v20 = (uint64_t)v13;
  v17(v13, v5, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704818);
  char v28 = 1;
  sub_1A74C130C(&qword_1EB704820, &qword_1EB704818, (void (*)(void))sub_1A74BFAA4);
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v16);
  uint64_t v18 = v20;
  *(void *)(v20 + *(int *)(v21 + 20)) = v27;
  sub_1A74BE75C(v18, v22, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A74BE86C(v18, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
}

uint64_t sub_1A74B96A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.CompletedDateBucketsModel.Day.init(from:)(a1, a2);
}

uint64_t sub_1A74B96B8(void *a1)
{
  return REMRemindersListDataView.CompletedDateBucketsModel.Day.encode(to:)(a1);
}

uint64_t sub_1A74B96D0()
{
  uint64_t result = 7954788;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6576655374736170;
      break;
    case 2:
      uint64_t result = 0x7269685474736170;
      break;
    case 3:
      uint64_t result = 0x68746E6F6DLL;
      break;
    case 4:
      uint64_t result = 1918985593;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74B9780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D37D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74B97A8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1DF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B97E4(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1DF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B9820(uint64_t a1)
{
  unint64_t v2 = sub_1A74C2040();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B985C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C2040();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B9898()
{
  if (*v0) {
    return 1937334628;
  }
  else {
    return 0x7461447472617473;
  }
}

uint64_t sub_1A74B98D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D3A18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74B98F8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1F44();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B9934(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1F44();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B9970(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1FEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B99AC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1FEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B99E8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1F98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B9A24(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1F98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74B9A60()
{
  if (*v0) {
    return 1937334628;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_1A74B9A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D3B08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74B9AC0(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1E4C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74B9AFC(uint64_t a1)
{
  unint64_t v2 = sub_1A74C1E4C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Bucket.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4AE0);
  uint64_t v73 = *(void *)(v2 - 8);
  uint64_t v74 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v72 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
  MEMORY[0x1F4188790](v65);
  uint64_t v71 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4AE8);
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v68 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4AF0);
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  MEMORY[0x1F4188790](v7);
  long long v64 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4AF8);
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v61 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A7571B60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v78 = v10;
  uint64_t v79 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v77 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v76 = (char *)&v59 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v75 = (char *)&v59 - v16;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B00);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B08);
  uint64_t v81 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C1DF8();
  uint64_t v83 = v26;
  sub_1A75741B0();
  sub_1A74BE75C(v82, (uint64_t)v24, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v82 = *(void *)&v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B48) + 48)];
      uint64_t v32 = v79;
      long long v33 = v75;
      uint64_t v34 = v24;
      uint64_t v35 = v78;
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v75, v34, v78);
      LOBYTE(v86) = 1;
      sub_1A74C1FEC();
      uint64_t v36 = v61;
      uint64_t v37 = v83;
      uint64_t v38 = v84;
      sub_1A7573AB0();
      LOBYTE(v86) = 0;
      sub_1A74BF618(&qword_1EB704C38, MEMORY[0x1E4F27928]);
      uint64_t v39 = v63;
      uint64_t v40 = v80;
      sub_1A7573B60();
      if (!v40)
      {
        uint64_t v86 = v82;
        char v85 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B30);
        sub_1A74C1EA0();
        sub_1A7573B60();
        (*(void (**)(char *, uint64_t))(v62 + 8))(v36, v39);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v75, v35);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v84);
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v36, v39);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v35);
      return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v37, v38);
    case 2u:
      uint64_t v82 = *(void *)&v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B48) + 48)];
      uint64_t v43 = v78;
      uint64_t v42 = v79;
      long long v44 = v76;
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v76, v24, v78);
      LOBYTE(v86) = 2;
      sub_1A74C1F98();
      uint64_t v45 = v64;
      uint64_t v46 = v83;
      uint64_t v47 = v84;
      sub_1A7573AB0();
      LOBYTE(v86) = 0;
      sub_1A74BF618(&qword_1EB704C38, MEMORY[0x1E4F27928]);
      uint64_t v48 = v67;
      uint64_t v49 = v80;
      sub_1A7573B60();
      if (v49)
      {
        swift_bridgeObjectRelease();
        uint64_t v50 = v66;
        goto LABEL_9;
      }
      uint64_t v86 = v82;
      char v85 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B30);
      sub_1A74C1EA0();
      sub_1A7573B60();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v48);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v76, v43);
      goto LABEL_17;
    case 3u:
      uint64_t v82 = *(void *)&v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B48) + 48)];
      uint64_t v43 = v78;
      uint64_t v42 = v79;
      long long v44 = v77;
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v77, v24, v78);
      LOBYTE(v86) = 3;
      sub_1A74C1F44();
      uint64_t v45 = v68;
      uint64_t v46 = v83;
      uint64_t v47 = v84;
      sub_1A7573AB0();
      LOBYTE(v86) = 0;
      sub_1A74BF618(&qword_1EB704C38, MEMORY[0x1E4F27928]);
      uint64_t v48 = v70;
      uint64_t v51 = v80;
      sub_1A7573B60();
      if (v51)
      {
        swift_bridgeObjectRelease();
        uint64_t v50 = v69;
LABEL_9:
        (*(void (**)(char *, uint64_t))(v50 + 8))(v45, v48);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
        return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v46, v47);
      }
      uint64_t v86 = v82;
      char v85 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B30);
      sub_1A74C1EA0();
      sub_1A7573B60();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v48);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v77, v43);
LABEL_17:
      (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v84);
      return swift_bridgeObjectRelease();
    case 4u:
      uint64_t v52 = *(void *)&v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B18) + 48)];
      uint64_t v53 = (uint64_t)v24;
      uint64_t v54 = v71;
      sub_1A74BE804(v53, v71, type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate);
      LOBYTE(v86) = 4;
      sub_1A74C1E4C();
      uint64_t v55 = v72;
      uint64_t v56 = v83;
      uint64_t v27 = v84;
      sub_1A7573AB0();
      LOBYTE(v86) = 0;
      sub_1A74BF618(&qword_1E96F4B28, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate);
      uint64_t v57 = v74;
      uint64_t v58 = v80;
      sub_1A7573B60();
      if (v58)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v73 + 8))(v55, v57);
        sub_1A74BE86C(v54, type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate);
        uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v81 + 8);
        uint64_t v31 = v56;
        return v30(v31, v27);
      }
      else
      {
        uint64_t v86 = v52;
        char v85 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B30);
        sub_1A74C1EA0();
        sub_1A7573B60();
        (*(void (**)(char *, uint64_t))(v73 + 8))(v55, v57);
        sub_1A74BE86C(v54, type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v56, v27);
        return swift_bridgeObjectRelease();
      }
    default:
      sub_1A74BE804((uint64_t)v24, (uint64_t)v21, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
      LOBYTE(v86) = 0;
      sub_1A74C2040();
      char v28 = v83;
      uint64_t v27 = v84;
      sub_1A7573AB0();
      sub_1A74BF618(&qword_1E96F4B40, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
      uint64_t v29 = v60;
      sub_1A7573B60();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v18, v29);
      sub_1A74BE86C((uint64_t)v21, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
      uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v81 + 8);
      uint64_t v31 = v28;
      return v30(v31, v27);
  }
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Bucket.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B70);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v79 = v3;
  uint64_t v80 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v89 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B78);
  uint64_t v77 = *(void *)(v6 - 8);
  uint64_t v78 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v83 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B80);
  uint64_t v75 = *(void *)(v8 - 8);
  uint64_t v76 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v84 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B88);
  uint64_t v73 = *(void *)(v10 - 8);
  uint64_t v74 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v88 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B90);
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v82 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B98);
  uint64_t v86 = *(void *)(v13 - 8);
  uint64_t v87 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(0);
  uint64_t v16 = MEMORY[0x1F4188790](v85);
  uint64_t v81 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v66 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)v66 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)v66 - v25;
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  uint64_t v29 = (char *)v66 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)v66 - v30;
  uint64_t v32 = a1[3];
  uint64_t v91 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_1A74C1DF8();
  uint64_t v33 = v92;
  sub_1A7574190();
  if (v33) {
    goto LABEL_16;
  }
  uint64_t v67 = v29;
  uint64_t v68 = v26;
  uint64_t v69 = v23;
  uint64_t v70 = v20;
  uint64_t v34 = v88;
  uint64_t v35 = v89;
  uint64_t v92 = 0;
  uint64_t v36 = v31;
  uint64_t v37 = v90;
  uint64_t v38 = v87;
  uint64_t v39 = sub_1A7573A70();
  if (*(void *)(v39 + 16) != 1)
  {
    uint64_t v47 = sub_1A7573640();
    swift_allocError();
    uint64_t v49 = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    *uint64_t v49 = v85;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v47 - 8) + 104))(v49, *MEMORY[0x1E4FBBA70], v47);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v15, v38);
LABEL_16:
    uint64_t v45 = (uint64_t)v91;
    return __swift_destroy_boxed_opaque_existential_1(v45);
  }
  v66[1] = v39;
  uint64_t v40 = (uint64_t)v36;
  switch(*(unsigned char *)(v39 + 32))
  {
    case 1:
      char v96 = 1;
      sub_1A74C1FEC();
      uint64_t v50 = v92;
      sub_1A7573990();
      if (v50) {
        goto LABEL_15;
      }
      sub_1A7571B60();
      char v95 = 0;
      sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
      uint64_t v51 = v74;
      sub_1A7573A50();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B30);
      char v94 = 1;
      sub_1A74C2094();
      sub_1A7573A50();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v34, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v15, v38);
      uint64_t v64 = (uint64_t)v68;
      goto LABEL_18;
    case 2:
      char v99 = 2;
      sub_1A74C1F98();
      uint64_t v52 = v84;
      uint64_t v53 = v92;
      sub_1A7573990();
      if (v53) {
        goto LABEL_15;
      }
      sub_1A7571B60();
      char v98 = 0;
      sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
      uint64_t v54 = v76;
      sub_1A7573A50();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B30);
      char v97 = 1;
      sub_1A74C2094();
      sub_1A7573A50();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v52, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v15, v38);
      uint64_t v64 = (uint64_t)v69;
      goto LABEL_18;
    case 3:
      char v102 = 3;
      sub_1A74C1F44();
      uint64_t v55 = v83;
      uint64_t v56 = v92;
      sub_1A7573990();
      if (v56) {
        goto LABEL_15;
      }
      sub_1A7571B60();
      char v101 = 0;
      sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
      uint64_t v57 = v78;
      sub_1A7573A50();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B30);
      char v100 = 1;
      sub_1A74C2094();
      sub_1A7573A50();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v55, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v15, v38);
      uint64_t v64 = (uint64_t)v70;
LABEL_18:
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = v64;
      uint64_t v37 = v90;
      uint64_t v45 = (uint64_t)v91;
      goto LABEL_19;
    case 4:
      char v105 = 4;
      sub_1A74C1E4C();
      uint64_t v58 = v35;
      uint64_t v59 = v92;
      sub_1A7573990();
      if (v59) {
        goto LABEL_15;
      }
      type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
      char v104 = 0;
      sub_1A74BF618(&qword_1E96F4BA0, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate);
      uint64_t v60 = v79;
      sub_1A7573A50();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B30);
      char v103 = 1;
      sub_1A74C2094();
      sub_1A7573A50();
      uint64_t v62 = v58;
      uint64_t v63 = v86;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v62, v60);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v15, v38);
      uint64_t v65 = v81;
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v65;
      uint64_t v45 = (uint64_t)v91;
      goto LABEL_19;
    default:
      char v93 = 0;
      sub_1A74C2040();
      char v41 = v82;
      uint64_t v42 = v92;
      sub_1A7573990();
      if (v42)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v86 + 8))(v15, v38);
        goto LABEL_16;
      }
      uint64_t v92 = v40;
      type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0);
      sub_1A74BF618(&qword_1E96F4BB0, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
      uint64_t v43 = (uint64_t)v67;
      uint64_t v44 = v72;
      sub_1A7573A50();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v41, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v15, v38);
      uint64_t v45 = (uint64_t)v91;
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = v43;
      uint64_t v40 = v92;
LABEL_19:
      sub_1A74BE804(v46, v40, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
      sub_1A74BE804(v40, v37, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v45);
}

uint64_t sub_1A74BB7B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.CompletedDateBucketsModel.Bucket.init(from:)(a1, a2);
}

uint64_t sub_1A74BB7C8(void *a1)
{
  return REMRemindersListDataView.CompletedDateBucketsModel.Bucket.encode(to:)(a1);
}

__n128 _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelV7buckets14remindersCount19prefetchedReminders0o3DueP0AESayAE6BucketOG_AC0N11ByCompletedVSgSayAA19REMReminder_CodableCGARtcfC_0@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unsigned __int8 v5 = a2[1].n128_u8[0];
  *(void *)a5 = a1;
  __n128 result = *a2;
  *(__n128 *)(a5 + 8) = *a2;
  *(unsigned char *)(a5 + 24) = v5;
  *(void *)(a5 + 32) = a3;
  *(void *)(a5 + 40) = a4;
  return result;
}

unint64_t sub_1A74BB800()
{
  unint64_t result = 0x7374656B637562;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7265646E696D6572;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74BB8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74D3BE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74BB8D0(uint64_t a1)
{
  unint64_t v2 = sub_1A74C2138();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74BB90C(uint64_t a1)
{
  unint64_t v2 = sub_1A74C2138();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4BB8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v17 = v1[2];
  uint64_t v18 = v8;
  int v22 = *((unsigned __int8 *)v1 + 24);
  uint64_t v10 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C2138();
  sub_1A75741B0();
  uint64_t v19 = v9;
  char v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4BC8);
  sub_1A74C218C();
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v12 = v15;
    uint64_t v11 = v16;
    uint64_t v19 = v18;
    uint64_t v20 = v17;
    char v21 = v22;
    char v23 = 1;
    sub_1A74BFBA0();
    sub_1A7573B00();
    uint64_t v19 = v11;
    char v23 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
    sub_1A731DB84();
    sub_1A7573B60();
    uint64_t v19 = v12;
    char v23 = 3;
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4BE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C2138();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4BC8);
  char v23 = 0;
  sub_1A74C2230();
  sub_1A7573A50();
  uint64_t v9 = v19;
  char v23 = 1;
  sub_1A74BFBF4();
  swift_bridgeObjectRetain();
  sub_1A75739F0();
  uint64_t v16 = v20;
  uint64_t v17 = v19;
  int v22 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
  char v23 = 2;
  unint64_t v18 = sub_1A73182C8();
  sub_1A7573A50();
  char v23 = 3;
  uint64_t v15 = v19;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v17;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v12;
  uint64_t v13 = v15;
  *(void *)(a2 + 16) = v16;
  *(unsigned char *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74BBEC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.CompletedDateBucketsModel.init(from:)(a1, a2);
}

uint64_t sub_1A74BBEE0(void *a1)
{
  return REMRemindersListDataView.CompletedDateBucketsModel.encode(to:)(a1);
}

__n128 static REMRemindersListDataView.fetchCompleted_ByDateBuckets(store:today:calendar:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v11 = type metadata accessor for REMRemindersListDataView.CompletedByDateBucketsInvocation.Parameters(0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A7571B60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, a1, v15);
  uint64_t v16 = &v14[*(int *)(v12 + 28)];
  uint64_t v17 = sub_1A7571E00();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, a2, v17);
  sub_1A74BE75C(a3, (uint64_t)&v14[*(int *)(v12 + 32)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  unint64_t v18 = (unint64_t *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.CompletedByDateBucketsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a4);
  sub_1A7310104(v18, (uint64_t)v14, &v26);

  sub_1A74BE86C((uint64_t)v14, type metadata accessor for REMRemindersListDataView.CompletedByDateBucketsInvocation.Parameters);
  if (!v5)
  {
    char v20 = v28;
    uint64_t v21 = v32;
    uint64_t v22 = v33;
    __n128 result = v27;
    long long v23 = v29;
    long long v24 = v30;
    long long v25 = v31;
    *(void *)a5 = v26;
    *(__n128 *)(a5 + 8) = result;
    *(unsigned char *)(a5 + 24) = v20;
    *(_OWORD *)(a5 + 32) = v23;
    *(_OWORD *)(a5 + 48) = v24;
    *(_OWORD *)(a5 + 64) = v25;
    *(void *)(a5 + 80) = v21;
    *(void *)(a5 + 88) = v22;
  }
  return result;
}

uint64_t static REMRemindersListDataView.fetchRecentlyDeleted(store:accountID:deletedDaysFromNow:countCompleted:remindersPrefetch:diffingAgainst:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v57 = a3;
  uint64_t v54 = a6;
  uint64_t v52 = a5;
  int v53 = a4;
  id v46 = a2;
  uint64_t v55 = a1;
  uint64_t v45 = a7;
  uint64_t v48 = sub_1A7571BC0();
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for REMRemindersListDataView.RecentlyDeletedInvocation.Parameters(0);
  MEMORY[0x1F4188790](v49);
  uint64_t v10 = (uint64_t *)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1A7571DE0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A7571E00();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v68 = (uint64_t)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1A7571B60();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571B50();
  sub_1A7571DC0();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4F27BF0], v11);
  if (((unint64_t)v57 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v57 = v22;
    sub_1A7571DA0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    long long v24 = (objc_class *)type metadata accessor for REMObjectID_Codable();
    id v25 = objc_allocWithZone(v24);
    id v26 = v46;
    id v27 = objc_msgSend(v26, sel_uuid);
    sub_1A7571BB0();

    char v28 = (void *)sub_1A7571B90();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v48);
    id v29 = objc_msgSend(v26, sel_entityName);
    if (!v29)
    {
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      id v29 = (id)sub_1A75725E0();
      swift_bridgeObjectRelease();
    }
    v67.receiver = v25;
    v67.super_class = v24;
    id v30 = objc_msgSendSuper2(&v67, sel_initWithUUID_entityName_, v28, v29, v45);

    uint64_t v31 = v49;
    uint64_t v32 = v68;
    sub_1A73C3428(v68, (uint64_t)v10 + *(int *)(v49 + 20));
    sub_1A74BE75C(v52, (uint64_t)v10 + *(int *)(v31 + 24), type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
    *uint64_t v10 = (uint64_t)v30;
    *((unsigned char *)v10 + *(int *)(v31 + 28)) = v53 & 1;
    id v33 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.RecentlyDeletedInvocation());
    uint64_t v34 = (uint64_t *)objc_msgSend(v33, sel_initWithFetchResultTokenToDiffAgainst_, v54);
    uint64_t v35 = v56;
    sub_1A7310F40(v34, v10, &v58);
    if (v35)
    {

      sub_1A74BE86C((uint64_t)v10, type metadata accessor for REMRemindersListDataView.RecentlyDeletedInvocation.Parameters);
      sub_1A72CB560(v32, &qword_1EB704C60);
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v57, v51);
    }
    else
    {

      sub_1A74BE86C((uint64_t)v10, type metadata accessor for REMRemindersListDataView.RecentlyDeletedInvocation.Parameters);
      sub_1A72CB560(v32, &qword_1EB704C60);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v57, v51);
      char v36 = v60;
      char v37 = v61;
      uint64_t v38 = v65;
      uint64_t v39 = v66;
      long long v40 = v59;
      long long v41 = v62;
      long long v42 = v63;
      long long v43 = v64;
      uint64_t v44 = v45;
      *uint64_t v45 = v58;
      *(_OWORD *)(v44 + 1) = v40;
      *((unsigned char *)v44 + 24) = v36;
      *((unsigned char *)v44 + 25) = v37;
      *((_OWORD *)v44 + 2) = v41;
      *((_OWORD *)v44 + 3) = v42;
      *((_OWORD *)v44 + 4) = v43;
      v44[10] = v38;
      v44[11] = v39;
    }
  }
  return result;
}

uint64_t sub_1A74BC6A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A7543540(*a1, *a2);
}

uint64_t sub_1A74BC6B0()
{
  return sub_1A7574110();
}

uint64_t sub_1A74BC754()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74BC7E4()
{
  return sub_1A7574110();
}

uint64_t sub_1A74BC884@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A74D3DBC();
  *a1 = result;
  return result;
}

void sub_1A74BC8B4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE900000000000065;
  unint64_t v5 = 0x7461447265746661;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000012;
    unint64_t v4 = 0x80000001A759E7B0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1702060386;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A74BC914()
{
  unint64_t v1 = 0x7461447265746661;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1702060386;
  }
}

uint64_t sub_1A74BC970@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A74D3DBC();
  *a1 = result;
  return result;
}

uint64_t sub_1A74BC998(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF570();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74BC9D4(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF570();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74BCA10(unsigned __int8 *a1, char *a2)
{
  return sub_1A75433D8(*a1, *a2);
}

uint64_t sub_1A74BCA1C()
{
  return sub_1A7574110();
}

uint64_t sub_1A74BCAE4()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74BCB94()
{
  return sub_1A7574110();
}

uint64_t sub_1A74BCC58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A74D3EFC();
  *a1 = result;
  return result;
}

void sub_1A74BCC90(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 6710895;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 28271;
      goto LABEL_3;
    case 2:
      *a1 = 0x7265746661;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x73696C776F6C6C61;
      a1[1] = 0xE900000000000074;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A74BCD18()
{
  return sub_1A75729D0();
}

uint64_t sub_1A74BCD78()
{
  return sub_1A7572980();
}

uint64_t sub_1A74BCDC8(char *a1, char *a2)
{
  return sub_1A754395C(*a1, *a2);
}

uint64_t sub_1A74BCDD4()
{
  return sub_1A7574110();
}

uint64_t sub_1A74BCE5C()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74BCED0()
{
  return sub_1A7574110();
}

uint64_t sub_1A74BCF54@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1A74BCFB4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1702060386;
  if (*v1) {
    uint64_t v2 = 0x6572694474726F73;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xED00006E6F697463;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A74BCFF8()
{
  if (*v0) {
    return 0x6572694474726F73;
  }
  else {
    return 1702060386;
  }
}

uint64_t sub_1A74BD038@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1A74BD09C(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF3CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74BD0D8(uint64_t a1)
{
  unint64_t v2 = sub_1A74BF3CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74BD114(unsigned __int8 *a1, char *a2)
{
  return sub_1A7543740(*a1, *a2);
}

uint64_t sub_1A74BD120()
{
  return sub_1A7501CD8();
}

uint64_t sub_1A74BD128()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74BD22C()
{
  return sub_1A7503950();
}

uint64_t sub_1A74BD234@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A74D3E5C();
  *a1 = result;
  return result;
}

void sub_1A74BD264(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x746C7561666564;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6C61756E616DLL;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x4479616C70736964;
      *(void *)(a1 + 8) = 0xEB00000000657461;
      break;
    case 3:
      *(void *)a1 = 0x797469726F697270;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 4:
      strcpy((char *)a1, "creationDate");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 5:
      *(void *)a1 = 0x656C746974;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1A74BD348()
{
  return sub_1A75729D0();
}

uint64_t sub_1A74BD3A8()
{
  return sub_1A7572980();
}

uint64_t sub_1A74BD3F8(unsigned __int8 *a1, char *a2)
{
  return sub_1A7543258(*a1, *a2);
}

uint64_t sub_1A74BD404()
{
  return sub_1A7574110();
}

uint64_t sub_1A74BD4D8()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74BD594()
{
  return sub_1A7574110();
}

uint64_t sub_1A74BD664@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A74D3EFC();
  *a1 = result;
  return result;
}

void sub_1A74BD69C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1702060386;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x746E756F63;
      goto LABEL_3;
    case 2:
      *a1 = 0x7461446E69676562;
      a1[1] = 0xE900000000000065;
      break;
    case 3:
      *a1 = 0x65746144646E65;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A74BD730()
{
  uint64_t result = 1702060386;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E756F63;
      break;
    case 2:
      uint64_t result = 0x7461446E69676562;
      break;
    case 3:
      uint64_t result = 0x65746144646E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74BD7B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A74D3EFC();
  *a1 = result;
  return result;
}

uint64_t sub_1A74BD7E8(uint64_t a1)
{
  unint64_t v2 = sub_1A74C22D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74BD824(uint64_t a1)
{
  unint64_t v2 = sub_1A74C22D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74BD860(unsigned __int8 *a1, char *a2)
{
  return sub_1A75430B8(*a1, *a2);
}

uint64_t sub_1A74BD86C()
{
  return sub_1A7501DF4();
}

uint64_t sub_1A74BD874()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74BD940()
{
  return sub_1A7503A68();
}

uint64_t sub_1A74BD948@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A74D3EFC();
  *a1 = result;
  return result;
}

void sub_1A74BD980(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701736302;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6C616974696E69;
      goto LABEL_3;
    case 2:
      *a1 = 0x4964657461647075;
      a1[1] = 0xEF6465747265736ELL;
      break;
    case 3:
      *a1 = 0xD000000000000013;
      a1[1] = 0x80000001A759E830;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A74BDA24()
{
  return sub_1A75729D0();
}

uint64_t sub_1A74BDA84()
{
  return sub_1A7572980();
}

uint64_t REMRemindersListDataView.RemindersPrefetch.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB703D70);
  uint64_t v3 = MEMORY[0x1F4188790](v66);
  char v60 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  char v61 = (char *)&v54 - v5;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
  MEMORY[0x1F4188790](v58);
  long long v59 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1A7571B60();
  uint64_t v63 = *(void *)(v65 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v65);
  long long v62 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (void (*)(char *, uint64_t))((char *)&v54 - v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701038);
  long long v64 = *(char **)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (uint64_t *)((char *)&v54 - v18);
  uint64_t v20 = a1[3];
  uint64_t v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1A74C22D4();
  uint64_t v21 = v69;
  sub_1A7574190();
  if (v21)
  {
    uint64_t v26 = (uint64_t)v68;
  }
  else
  {
    uint64_t v56 = v17;
    uint64_t v57 = v10;
    long long v23 = v64;
    uint64_t v22 = v65;
    uint64_t v69 = v19;
    uint64_t v25 = v66;
    uint64_t v24 = v67;
    char v75 = 0;
    sub_1A74C2328();
    sub_1A7573A50();
    char v28 = v13;
    uint64_t v29 = v11;
    uint64_t v30 = v24;
    switch(v76)
    {
      case 1:
        char v70 = 1;
        uint64_t v32 = v29;
        uint64_t v33 = sub_1A7573A30();
        (*((void (**)(char *, uint64_t))v23 + 1))(v13, v32);
        uint64_t v34 = v69;
        uint64_t *v69 = v33;
        uint64_t v31 = v34;
        goto LABEL_9;
      case 2:
        char v71 = 1;
        uint64_t v35 = v29;
        uint64_t v36 = sub_1A7573A30();
        (*((void (**)(char *, uint64_t))v23 + 1))(v13, v35);
        char v37 = v69;
        uint64_t *v69 = v36;
        uint64_t v31 = v37;
        goto LABEL_9;
      case 3:
        char v74 = 1;
        uint64_t v39 = (void (*)(char *, char *, uint64_t))v29;
        long long v40 = v28;
        uint64_t v54 = sub_1A7573A30();
        char v73 = 2;
        uint64_t v55 = (void (*)(char *, char *, uint64_t))sub_1A74BF618((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
        sub_1A7573A50();
        char v72 = 3;
        sub_1A7573A50();
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8);
        uint64_t v55 = v39;
        uint64_t v42 = *(int *)(v41 + 48);
        void *v56 = v54;
        sub_1A74BF618((unint64_t *)&qword_1EB7057C8, MEMORY[0x1E4F27928]);
        char v43 = sub_1A75725A0();
        (*((void (**)(char *, void (*)(char *, char *, uint64_t)))v23 + 1))(v40, v55);
        if ((v43 & 1) == 0)
        {
          __break(1u);
          JUMPOUT(0x1A74BE2BCLL);
        }
        uint64_t v54 = (uint64_t)v56 + v42;
        long long v64 = &v61[*(int *)(v25 + 48)];
        uint64_t v44 = v64;
        uint64_t v45 = v63;
        id v46 = *(void (**)(void))(v63 + 32);
        uint64_t v55 = (void (*)(char *, char *, uint64_t))v46;
        v46();
        ((void (*)(char *, char *, uint64_t))v46)(v44, v62, v22);
        uint64_t v47 = v60;
        long long v62 = &v60[*(int *)(v25 + 48)];
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
        v48(v60, v61, v22);
        v48(v62, v64, v22);
        uint64_t v49 = (uint64_t)v59;
        v55(v59, v47, v22);
        uint64_t v50 = *(void (**)(char *, uint64_t))(v63 + 8);
        v63 += 8;
        uint64_t v57 = v50;
        v50(v62, v22);
        uint64_t v51 = &v47[*(int *)(v25 + 48)];
        uint64_t v52 = v55;
        v55(v47, v61, v22);
        v52(v51, v64, v22);
        v52((char *)(v49 + *(int *)(v58 + 36)), v51, v22);
        v57(v47, v22);
        sub_1A74C237C(v49, v54);
        uint64_t v53 = (uint64_t)v56;
        swift_storeEnumTagMultiPayload();
        uint64_t v31 = v69;
        sub_1A74BE804(v53, (uint64_t)v69, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
        uint64_t v30 = v24;
        goto LABEL_10;
      default:
        (*((void (**)(char *, uint64_t))v23 + 1))(v13, v29);
        uint64_t v31 = v69;
LABEL_9:
        swift_storeEnumTagMultiPayload();
LABEL_10:
        uint64_t v38 = (uint64_t)v68;
        sub_1A74BE804((uint64_t)v31, v30, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
        uint64_t v26 = v38;
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t REMRemindersListDataView.RemindersPrefetch.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
  MEMORY[0x1F4188790](v17);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704558);
  uint64_t v18 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74C22D4();
  sub_1A75741B0();
  sub_1A74BE75C(v2, (uint64_t)v8, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v26 = 2;
      char v25 = 0;
      sub_1A74C23E4();
      uint64_t v13 = v19;
      sub_1A7573B60();
      if (!v13)
      {
        char v24 = 1;
        goto LABEL_6;
      }
      break;
    case 2u:
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8);
      sub_1A74C237C((uint64_t)&v8[*(int *)(v14 + 48)], (uint64_t)v5);
      char v31 = 3;
      char v30 = 0;
      sub_1A74C23E4();
      uint64_t v15 = v19;
      sub_1A7573B60();
      if (!v15)
      {
        char v29 = 1;
        sub_1A7573B40();
        char v28 = 2;
        sub_1A7571B60();
        sub_1A74BF618(&qword_1EB704C38, MEMORY[0x1E4F27928]);
        sub_1A7573B60();
        char v27 = 3;
        sub_1A7573B60();
      }
      sub_1A72CB560((uint64_t)v5, (uint64_t *)&unk_1EB7058C8);
      break;
    case 3u:
      __int16 v20 = 0;
      sub_1A74C23E4();
      sub_1A7573B60();
      break;
    default:
      char v23 = 1;
      char v22 = 0;
      sub_1A74C23E4();
      uint64_t v12 = v19;
      sub_1A7573B60();
      if (!v12)
      {
        char v21 = 1;
LABEL_6:
        sub_1A7573B40();
      }
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t sub_1A74BE70C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.RemindersPrefetch.init(from:)(a1, a2);
}

uint64_t sub_1A74BE724(void *a1)
{
  return REMRemindersListDataView.RemindersPrefetch.encode(to:)(a1);
}

uint64_t type metadata accessor for REMRemindersListDataView.ShowCompleted(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1EB704548);
}

uint64_t sub_1A74BE75C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for REMRemindersListDataView.RemindersPrefetch(uint64_t a1)
{
  return sub_1A72E1CD8(a1, qword_1EB704698);
}

uint64_t type metadata accessor for REMRemindersListDataView.FetchConfiguration(uint64_t a1)
{
  return sub_1A72E1CD8(a1, qword_1EB704740);
}

uint64_t sub_1A74BE804(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A74BE86C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL _s19ReminderKitInternal24REMRemindersListDataViewO11SectionLiteV0H4TypeO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v8 = (void *)*a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  if (!*(void *)a1)
  {
    if (!v8)
    {
      sub_1A73E8EC0(0);
      uint64_t v16 = 0;
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  if (!v8)
  {
LABEL_13:
    sub_1A73E8E74(*a2);
    sub_1A73E8E74((uint64_t)v2);
    sub_1A73E8EC0(v2);
    uint64_t v17 = v8;
LABEL_20:
    sub_1A73E8EC0(v17);
    return 0;
  }
  sub_1A73765D8();
  uint64_t v22 = v11;
  sub_1A73E8E74((uint64_t)v8);
  sub_1A73E8E74((uint64_t)v2);
  uint64_t v21 = v10;
  uint64_t v12 = v7;
  id v13 = v2;
  uint64_t v20 = v9;
  id v14 = v8;
  char v15 = sub_1A7573190();

  if ((v15 & 1) == 0 || (v3 != v12 || v5 != v20) && (sub_1A7573DB0() & 1) == 0)
  {
LABEL_19:
    sub_1A73E8EC0(v2);
    uint64_t v17 = v8;
    goto LABEL_20;
  }
  if (v6)
  {
    if (v22)
    {
      if (v4 == v21 && v6 == v22)
      {
        sub_1A73E8EC0(v2);
        uint64_t v16 = v8;
LABEL_16:
        sub_1A73E8EC0(v16);
        return 1;
      }
      char v19 = sub_1A7573DB0();
      sub_1A73E8EC0(v2);
      sub_1A73E8EC0(v8);
      return (v19 & 1) != 0;
    }
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  sub_1A73E8EC0(v2);
  sub_1A73E8EC0(v8);
  if (v22)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO12SortingStyleO2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  switch(v2 >> 5)
  {
    case 1u:
      if ((v3 & 0xE0) == 0x20) {
        return ((v3 ^ v2) & 1) == 0;
      }
      return 0;
    case 2u:
      if ((v3 & 0xE0) != 0x40) {
        return 0;
      }
      return ((v3 ^ v2) & 1) == 0;
    case 3u:
      if ((v3 & 0xE0) == 0x60) {
        return ((v3 ^ v2) & 1) == 0;
      }
      return 0;
    case 4u:
      if (v2 == 128)
      {
        if (v3 == 128) {
          return 1;
        }
      }
      else if (v3 == 129)
      {
        return 1;
      }
      return 0;
    default:
      if (v3 >= 0x20) {
        return 0;
      }
      return ((v3 ^ v2) & 1) == 0;
  }
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO13ShowCompletedO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571B60();
  uint64_t v24 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700500);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t *)&v16[*(int *)(v14 + 56)];
  sub_1A74BE75C(a1, (uint64_t)v16, type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A74BE75C(a2, (uint64_t)v17, type metadata accessor for REMRemindersListDataView.ShowCompleted);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A74BE75C((uint64_t)v16, (uint64_t)v10, type metadata accessor for REMRemindersListDataView.ShowCompleted);
      uint64_t v18 = *v10;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        char v19 = sub_1A72DD304(v18, *v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 2u:
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_11;
      }
LABEL_9:
      sub_1A74BE86C((uint64_t)v16, type metadata accessor for REMRemindersListDataView.ShowCompleted);
      char v19 = 1;
      break;
    default:
      sub_1A74BE75C((uint64_t)v16, (uint64_t)v12, type metadata accessor for REMRemindersListDataView.ShowCompleted);
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v4);
LABEL_11:
        sub_1A72CB560((uint64_t)v16, &qword_1EB700500);
        char v19 = 0;
      }
      else
      {
        uint64_t v20 = v24;
        (*(void (**)(char *, uint64_t *, uint64_t))(v24 + 32))(v6, v17, v4);
        char v19 = sub_1A7571B10();
        uint64_t v21 = *(void (**)(char *, uint64_t))(v20 + 8);
        v21(v6, v4);
        v21(v12, v4);
LABEL_13:
        sub_1A74BE86C((uint64_t)v16, type metadata accessor for REMRemindersListDataView.ShowCompleted);
      }
      break;
  }
  return v19 & 1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO21HashtagLabelPredicateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16))
    {
      sub_1A74C0364(*(void *)a2, *(void *)(a2 + 8), 0);
      sub_1A74C0364(v3, v2, 0);
      if (sub_1A72DD5F0(v3, v6))
      {
        char v8 = sub_1A72DD5F0(v2, v5);
        sub_1A74C3EC8(v3, v2, 0);
        uint64_t v9 = v6;
        uint64_t v10 = v5;
        unsigned __int8 v11 = 0;
        goto LABEL_9;
      }
      sub_1A74C3EC8(v3, v2, 0);
      uint64_t v17 = v6;
      uint64_t v18 = v5;
      unsigned __int8 v19 = 0;
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v4 == 1)
  {
    if (v7 == 1)
    {
      sub_1A74C0364(*(void *)a2, *(void *)(a2 + 8), 1u);
      sub_1A74C0364(v3, v2, 1u);
      if (sub_1A72DD5F0(v3, v6))
      {
        char v8 = sub_1A72DD5F0(v2, v5);
        sub_1A74C3EC8(v3, v2, 1u);
        uint64_t v9 = v6;
        uint64_t v10 = v5;
        unsigned __int8 v11 = 1;
LABEL_9:
        sub_1A74C3EC8(v9, v10, v11);
        return v8 & 1;
      }
      sub_1A74C3EC8(v3, v2, 1u);
      uint64_t v17 = v6;
      uint64_t v18 = v5;
      unsigned __int8 v19 = 1;
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (!(v3 | v2))
  {
    if (v7 == 2 && (v5 | v6) == 0)
    {
      sub_1A74C3EC8(*(void *)a1, v2, 2u);
      sub_1A74C3EC8(0, 0, 2u);
      return 1;
    }
    goto LABEL_24;
  }
  if (v7 != 2 || v6 != 1 || v5 != 0)
  {
LABEL_24:
    sub_1A74C0364(*(void *)a2, *(void *)(a2 + 8), v7);
    sub_1A74C0364(v3, v2, v4);
    sub_1A74C3EC8(v3, v2, v4);
    uint64_t v17 = v6;
    uint64_t v18 = v5;
    unsigned __int8 v19 = v7;
LABEL_25:
    sub_1A74C3EC8(v17, v18, v19);
    return 0;
  }
  sub_1A74C3EC8(*(void *)a1, v2, 2u);
  uint64_t v15 = 1;
  sub_1A74C3EC8(1, 0, 2u);
  return v15;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO4DiffV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v9 = a2[4];
  if ((sub_1A72DD304(*a1, *a2) & 1) == 0
    || (sub_1A72DD304(v2, v6) & 1) == 0
    || (sub_1A72DD304(v4, v8) & 1) == 0
    || (sub_1A72DD304(v3, v7) & 1) == 0)
  {
    return 0;
  }

  return sub_1A72DD5F0(v5, v9);
}

uint64_t sub_1A74BF31C()
{
  unsigned int v1 = *v0;
  switch(v1 >> 5)
  {
    case 1u:
      uint64_t v2 = MEMORY[0x1E4F95050];
      uint64_t v3 = MEMORY[0x1E4F95058];
      goto LABEL_6;
    case 2u:
      uint64_t v2 = MEMORY[0x1E4F95020];
      uint64_t v3 = MEMORY[0x1E4F95028];
      goto LABEL_6;
    case 3u:
      uint64_t v2 = MEMORY[0x1E4F95068];
      uint64_t v3 = MEMORY[0x1E4F95060];
      goto LABEL_6;
    case 4u:
      uint64_t v2 = MEMORY[0x1E4F95048];
      uint64_t v3 = MEMORY[0x1E4F95030];
      BOOL v4 = v1 == 128;
      goto LABEL_8;
    default:
      uint64_t v2 = MEMORY[0x1E4F95038];
      uint64_t v3 = MEMORY[0x1E4F95040];
LABEL_6:
      BOOL v4 = (v1 & 1) == 0;
LABEL_8:
      if (v4) {
        uint64_t v5 = v3;
      }
      else {
        uint64_t v5 = v2;
      }
      return *(void *)v5;
  }
}

unint64_t sub_1A74BF3CC()
{
  unint64_t result = qword_1EB704580;
  if (!qword_1EB704580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704580);
  }
  return result;
}

unint64_t sub_1A74BF420()
{
  unint64_t result = qword_1EB700E90;
  if (!qword_1EB700E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700E90);
  }
  return result;
}

unint64_t sub_1A74BF474()
{
  unint64_t result = qword_1EB700EC8;
  if (!qword_1EB700EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700EC8);
  }
  return result;
}

unint64_t sub_1A74BF4C8()
{
  unint64_t result = qword_1EB7024E8;
  if (!qword_1EB7024E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7024E8);
  }
  return result;
}

unint64_t sub_1A74BF51C()
{
  unint64_t result = qword_1EB700940;
  if (!qword_1EB700940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700940);
  }
  return result;
}

unint64_t sub_1A74BF570()
{
  unint64_t result = qword_1EB7045A8;
  if (!qword_1EB7045A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7045A8);
  }
  return result;
}

unint64_t sub_1A74BF5C4()
{
  unint64_t result = qword_1EB700EB0;
  if (!qword_1EB700EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700EB0);
  }
  return result;
}

uint64_t sub_1A74BF618(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A74BF660()
{
  unint64_t result = qword_1EB702518;
  if (!qword_1EB702518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702518);
  }
  return result;
}

unint64_t sub_1A74BF6B4()
{
  unint64_t result = qword_1EB7025F0;
  if (!qword_1EB7025F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7025F0);
  }
  return result;
}

unint64_t sub_1A74BF708()
{
  unint64_t result = qword_1EB7024F0;
  if (!qword_1EB7024F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7024F0);
  }
  return result;
}

unint64_t sub_1A74BF75C()
{
  unint64_t result = qword_1EB7024F8;
  if (!qword_1EB7024F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7024F8);
  }
  return result;
}

unint64_t sub_1A74BF7B0()
{
  unint64_t result = qword_1EB700E98;
  if (!qword_1EB700E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700E98);
  }
  return result;
}

unint64_t sub_1A74BF804()
{
  unint64_t result = qword_1EB700EA0;
  if (!qword_1EB700EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700EA0);
  }
  return result;
}

unint64_t sub_1A74BF858()
{
  unint64_t result = qword_1E96F47C8;
  if (!qword_1E96F47C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F47C8);
  }
  return result;
}

unint64_t sub_1A74BF8AC()
{
  unint64_t result = qword_1E96F47D0;
  if (!qword_1E96F47D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F47D0);
  }
  return result;
}

unint64_t sub_1A74BF900()
{
  unint64_t result = qword_1E96F47D8;
  if (!qword_1E96F47D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F47D8);
  }
  return result;
}

unint64_t sub_1A74BF954()
{
  unint64_t result = qword_1E96F47E0;
  if (!qword_1E96F47E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F47E0);
  }
  return result;
}

unint64_t sub_1A74BF9A8()
{
  unint64_t result = qword_1E96F47E8;
  if (!qword_1E96F47E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F47E8);
  }
  return result;
}

unint64_t sub_1A74BF9FC()
{
  unint64_t result = qword_1EB704560;
  if (!qword_1EB704560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704560);
  }
  return result;
}

unint64_t sub_1A74BFA50()
{
  unint64_t result = qword_1EB700E78;
  if (!qword_1EB700E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700E78);
  }
  return result;
}

unint64_t sub_1A74BFAA4()
{
  unint64_t result = qword_1EB704578;
  if (!qword_1EB704578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704578);
  }
  return result;
}

unint64_t sub_1A74BFAF8()
{
  unint64_t result = qword_1EB700D18;
  if (!qword_1EB700D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700D18);
  }
  return result;
}

unint64_t sub_1A74BFB4C()
{
  unint64_t result = qword_1EB704800;
  if (!qword_1EB704800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704800);
  }
  return result;
}

unint64_t sub_1A74BFBA0()
{
  unint64_t result = qword_1EB700EC0;
  if (!qword_1EB700EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700EC0);
  }
  return result;
}

unint64_t sub_1A74BFBF4()
{
  unint64_t result = qword_1EB704660;
  if (!qword_1EB704660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704660);
  }
  return result;
}

unint64_t sub_1A74BFC48()
{
  unint64_t result = qword_1EB7032D0;
  if (!qword_1EB7032D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7032D0);
  }
  return result;
}

unint64_t sub_1A74BFC9C()
{
  unint64_t result = qword_1EB7032B8;
  if (!qword_1EB7032B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7032B8);
  }
  return result;
}

unint64_t sub_1A74BFCF0()
{
  unint64_t result = qword_1EB701920;
  if (!qword_1EB701920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701920);
  }
  return result;
}

unint64_t sub_1A74BFD44()
{
  unint64_t result = qword_1EB7018B8;
  if (!qword_1EB7018B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7018B8);
  }
  return result;
}

unint64_t sub_1A74BFD98()
{
  unint64_t result = qword_1EB7024D0;
  if (!qword_1EB7024D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7024D0);
  }
  return result;
}

unint64_t sub_1A74BFDEC()
{
  unint64_t result = qword_1EB700F90;
  if (!qword_1EB700F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700F90);
  }
  return result;
}

unint64_t sub_1A74BFE40()
{
  unint64_t result = qword_1EB702738;
  if (!qword_1EB702738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702738);
  }
  return result;
}

unint64_t sub_1A74BFE94()
{
  unint64_t result = qword_1E96F4820;
  if (!qword_1E96F4820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4820);
  }
  return result;
}

unint64_t sub_1A74BFEE8()
{
  unint64_t result = qword_1E96F4828;
  if (!qword_1E96F4828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4828);
  }
  return result;
}

unint64_t sub_1A74BFF3C()
{
  unint64_t result = qword_1E96F4838;
  if (!qword_1E96F4838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4838);
  }
  return result;
}

unint64_t sub_1A74BFF90()
{
  unint64_t result = qword_1E96F4848;
  if (!qword_1E96F4848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4848);
  }
  return result;
}

unint64_t sub_1A74BFFE4()
{
  unint64_t result = qword_1E96F4850;
  if (!qword_1E96F4850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4850);
  }
  return result;
}

unint64_t sub_1A74C0038()
{
  unint64_t result = qword_1E96F4860;
  if (!qword_1E96F4860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4860);
  }
  return result;
}

unint64_t sub_1A74C008C()
{
  unint64_t result = qword_1E96F4870;
  if (!qword_1E96F4870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4870);
  }
  return result;
}

unint64_t sub_1A74C00E0()
{
  unint64_t result = qword_1E96F4898;
  if (!qword_1E96F4898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4898);
  }
  return result;
}

unint64_t sub_1A74C0134()
{
  unint64_t result = qword_1E96F48A0;
  if (!qword_1E96F48A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F48A0);
  }
  return result;
}

unint64_t sub_1A74C0188()
{
  unint64_t result = qword_1E96F48A8;
  if (!qword_1E96F48A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F48A8);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1)
{
  return sub_1A72E1CD8(a1, qword_1EB701100);
}

unint64_t sub_1A74C01FC()
{
  unint64_t result = qword_1E96F48D0;
  if (!qword_1E96F48D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F48D0);
  }
  return result;
}

unint64_t sub_1A74C0250()
{
  unint64_t result = qword_1E96F48D8;
  if (!qword_1E96F48D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F48D8);
  }
  return result;
}

unint64_t sub_1A74C02A4()
{
  unint64_t result = qword_1E96F48E8;
  if (!qword_1E96F48E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F48E8);
  }
  return result;
}

unint64_t sub_1A74C02F8()
{
  unint64_t result = qword_1EB7047E0;
  if (!qword_1EB7047E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7047E0);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.Result()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A74C0364(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1A74C03AC(void *a1)
{
  uint64_t v2 = (void *)a1[9];
  BOOL v4 = (void *)a1[10];
  uint64_t v5 = (void *)a1[19];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1A7315D30(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

unint64_t sub_1A74C049C()
{
  unint64_t result = qword_1EB702478;
  if (!qword_1EB702478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702478);
  }
  return result;
}

unint64_t sub_1A74C04F0()
{
  unint64_t result = qword_1EB7024A0;
  if (!qword_1EB7024A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7024A0);
  }
  return result;
}

unint64_t sub_1A74C0544()
{
  unint64_t result = qword_1E96F48F0;
  if (!qword_1E96F48F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F48F0);
  }
  return result;
}

unint64_t sub_1A74C0598()
{
  unint64_t result = qword_1EB7024B8;
  if (!qword_1EB7024B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7024B8);
  }
  return result;
}

unint64_t sub_1A74C05EC()
{
  unint64_t result = qword_1EB700E80;
  if (!qword_1EB700E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700E80);
  }
  return result;
}

unint64_t sub_1A74C0640()
{
  unint64_t result = qword_1EB700928;
  if (!qword_1EB700928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700928);
  }
  return result;
}

unint64_t sub_1A74C0694()
{
  unint64_t result = qword_1EB702500;
  if (!qword_1EB702500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702500);
  }
  return result;
}

unint64_t sub_1A74C06E8()
{
  unint64_t result = qword_1EB700E88;
  if (!qword_1EB700E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700E88);
  }
  return result;
}

unint64_t sub_1A74C073C()
{
  unint64_t result = qword_1EB700930;
  if (!qword_1EB700930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700930);
  }
  return result;
}

unint64_t sub_1A74C0790()
{
  unint64_t result = qword_1EB7023B8;
  if (!qword_1EB7023B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7023B8);
  }
  return result;
}

unint64_t sub_1A74C07E4()
{
  unint64_t result = qword_1EB700EA8;
  if (!qword_1EB700EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700EA8);
  }
  return result;
}

unint64_t sub_1A74C0838()
{
  unint64_t result = qword_1EB700938;
  if (!qword_1EB700938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700938);
  }
  return result;
}

unint64_t sub_1A74C088C()
{
  unint64_t result = qword_1E96F4900;
  if (!qword_1E96F4900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4900);
  }
  return result;
}

unint64_t sub_1A74C08E0()
{
  unint64_t result = qword_1E96F4918;
  if (!qword_1E96F4918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4918);
  }
  return result;
}

unint64_t sub_1A74C0934()
{
  unint64_t result = qword_1E96F4948;
  if (!qword_1E96F4948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4948);
  }
  return result;
}

unint64_t sub_1A74C0988()
{
  unint64_t result = qword_1E96F4950;
  if (!qword_1E96F4950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4950);
  }
  return result;
}

unint64_t sub_1A74C09DC()
{
  unint64_t result = qword_1E96F4958;
  if (!qword_1E96F4958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4958);
  }
  return result;
}

unint64_t sub_1A74C0A30()
{
  unint64_t result = qword_1E96F4960;
  if (!qword_1E96F4960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4960);
  }
  return result;
}

unint64_t sub_1A74C0A84()
{
  unint64_t result = qword_1EB702EA0;
  if (!qword_1EB702EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702EA0);
  }
  return result;
}

unint64_t sub_1A74C0AD8()
{
  unint64_t result = qword_1E96F4988;
  if (!qword_1E96F4988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4988);
  }
  return result;
}

unint64_t sub_1A74C0B2C()
{
  unint64_t result = qword_1E96F4990;
  if (!qword_1E96F4990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4990);
  }
  return result;
}

unint64_t sub_1A74C0B80()
{
  unint64_t result = qword_1EB702EB8;
  if (!qword_1EB702EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702EB8);
  }
  return result;
}

unint64_t sub_1A74C0BD4()
{
  unint64_t result = qword_1EB701310;
  if (!qword_1EB701310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701310);
  }
  return result;
}

unint64_t sub_1A74C0C28()
{
  unint64_t result = qword_1EB701238;
  if (!qword_1EB701238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701238);
  }
  return result;
}

unint64_t sub_1A74C0C7C()
{
  unint64_t result = qword_1E96F49A0;
  if (!qword_1E96F49A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F49A0);
  }
  return result;
}

unint64_t sub_1A74C0CD0()
{
  unint64_t result = qword_1E96F49A8;
  if (!qword_1E96F49A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F49A8);
  }
  return result;
}

unint64_t sub_1A74C0D24()
{
  unint64_t result = qword_1E96F49B8;
  if (!qword_1E96F49B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F49B8);
  }
  return result;
}

unint64_t sub_1A74C0D78()
{
  unint64_t result = qword_1EB701FE8;
  if (!qword_1EB701FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701FE8);
  }
  return result;
}

unint64_t sub_1A74C0DCC()
{
  unint64_t result = qword_1EB7030F8;
  if (!qword_1EB7030F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7030F8);
  }
  return result;
}

unint64_t sub_1A74C0E20()
{
  unint64_t result = qword_1E96F49C0;
  if (!qword_1E96F49C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F49C0);
  }
  return result;
}

unint64_t sub_1A74C0E74()
{
  unint64_t result = qword_1EB702028;
  if (!qword_1EB702028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702028);
  }
  return result;
}

unint64_t sub_1A74C0EC8()
{
  unint64_t result = qword_1EB702040;
  if (!qword_1EB702040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702040);
  }
  return result;
}

unint64_t sub_1A74C0F1C()
{
  unint64_t result = qword_1EB702010;
  if (!qword_1EB702010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702010);
  }
  return result;
}

unint64_t sub_1A74C0F70()
{
  unint64_t result = qword_1EB701FD0;
  if (!qword_1EB701FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701FD0);
  }
  return result;
}

unint64_t sub_1A74C0FC4()
{
  unint64_t result = qword_1EB701FA8;
  if (!qword_1EB701FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701FA8);
  }
  return result;
}

unint64_t sub_1A74C1018()
{
  unint64_t result = qword_1E96F49C8;
  if (!qword_1E96F49C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F49C8);
  }
  return result;
}

unint64_t sub_1A74C106C()
{
  unint64_t result = qword_1EB702058;
  if (!qword_1EB702058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702058);
  }
  return result;
}

unint64_t sub_1A74C10C0()
{
  unint64_t result = qword_1EB700D08;
  if (!qword_1EB700D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700D08);
  }
  return result;
}

unint64_t sub_1A74C1114()
{
  unint64_t result = qword_1EB700590;
  if (!qword_1EB700590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700590);
  }
  return result;
}

unint64_t sub_1A74C1168()
{
  unint64_t result = qword_1EB702528;
  if (!qword_1EB702528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702528);
  }
  return result;
}

unint64_t sub_1A74C11BC()
{
  unint64_t result = qword_1EB700D10;
  if (!qword_1EB700D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700D10);
  }
  return result;
}

unint64_t sub_1A74C1210()
{
  unint64_t result = qword_1EB700598;
  if (!qword_1EB700598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700598);
  }
  return result;
}

unint64_t sub_1A74C1264()
{
  unint64_t result = qword_1E96F49D8;
  if (!qword_1E96F49D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F49D8);
  }
  return result;
}

unint64_t sub_1A74C12B8()
{
  unint64_t result = qword_1E96F49E8;
  if (!qword_1E96F49E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F49E8);
  }
  return result;
}

uint64_t sub_1A74C130C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A74C1378()
{
  unint64_t result = qword_1E96F4A00;
  if (!qword_1E96F4A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4A00);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.DatesModel.Group(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F4C48);
}

unint64_t sub_1A74C13EC()
{
  unint64_t result = qword_1E96F4A10;
  if (!qword_1E96F4A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4A10);
  }
  return result;
}

unint64_t sub_1A74C1440()
{
  unint64_t result = qword_1E96F4A28;
  if (!qword_1E96F4A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4A28);
  }
  return result;
}

unint64_t sub_1A74C1494()
{
  unint64_t result = qword_1E96F4A38;
  if (!qword_1E96F4A38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F4A30);
    sub_1A74BF618(&qword_1E96F4A40, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.DatesModel.Group);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4A38);
  }
  return result;
}

unint64_t sub_1A74C1538()
{
  unint64_t result = qword_1E96F4A50;
  if (!qword_1E96F4A50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F4A30);
    sub_1A74BF618(&qword_1E96F4A58, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.DatesModel.Group);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4A50);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(uint64_t a1)
{
  return sub_1A72E1CD8(a1, qword_1EB702BC0);
}

unint64_t sub_1A74C15FC()
{
  unint64_t result = qword_1EB702BA8;
  if (!qword_1EB702BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702BA8);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(uint64_t a1)
{
  return sub_1A72E1CD8(a1, qword_1EB702CD0);
}

unint64_t sub_1A74C1670()
{
  unint64_t result = qword_1EB702C50;
  if (!qword_1EB702C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702C50);
  }
  return result;
}

unint64_t sub_1A74C16C4()
{
  unint64_t result = qword_1E96F4A60;
  if (!qword_1E96F4A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4A60);
  }
  return result;
}

unint64_t sub_1A74C1718()
{
  unint64_t result = qword_1EB7012A0;
  if (!qword_1EB7012A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB702E68);
    sub_1A74BF618(&qword_1EB701288, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7012A0);
  }
  return result;
}

unint64_t sub_1A74C17BC()
{
  unint64_t result = qword_1EB702C90;
  if (!qword_1EB702C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702C90);
  }
  return result;
}

unint64_t sub_1A74C1810()
{
  unint64_t result = qword_1EB702C68;
  if (!qword_1EB702C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702C68);
  }
  return result;
}

unint64_t sub_1A74C1864()
{
  unint64_t result = qword_1E96F4A68;
  if (!qword_1E96F4A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4A68);
  }
  return result;
}

unint64_t sub_1A74C18B8()
{
  unint64_t result = qword_1EB702CA8;
  if (!qword_1EB702CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702CA8);
  }
  return result;
}

unint64_t sub_1A74C190C()
{
  unint64_t result = qword_1EB7011C8;
  if (!qword_1EB7011C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB702E68);
    sub_1A74BF618(&qword_1EB7011A0, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7011C8);
  }
  return result;
}

unint64_t sub_1A74C19B0()
{
  unint64_t result = qword_1EB702B90;
  if (!qword_1EB702B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702B90);
  }
  return result;
}

unint64_t sub_1A74C1A04()
{
  unint64_t result = qword_1EB7012A8;
  if (!qword_1EB7012A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB702E70);
    sub_1A74BF618(&qword_1EB701290, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7012A8);
  }
  return result;
}

unint64_t sub_1A74C1AA8()
{
  unint64_t result = qword_1EB7011D0;
  if (!qword_1EB7011D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB702E70);
    sub_1A74BF618(&qword_1EB7011A8, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7011D0);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F4C58);
}

unint64_t sub_1A74C1B6C()
{
  unint64_t result = qword_1E96F4A88;
  if (!qword_1E96F4A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4A88);
  }
  return result;
}

unint64_t sub_1A74C1BC0()
{
  unint64_t result = qword_1E96F4A98;
  if (!qword_1E96F4A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4A98);
  }
  return result;
}

unint64_t sub_1A74C1C14()
{
  unint64_t result = qword_1E96F4AA0;
  if (!qword_1E96F4AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4AA0);
  }
  return result;
}

unint64_t sub_1A74C1C68()
{
  unint64_t result = qword_1EB702D78;
  if (!qword_1EB702D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702D78);
  }
  return result;
}

unint64_t sub_1A74C1CBC()
{
  unint64_t result = qword_1E96F4AC0;
  if (!qword_1E96F4AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4AC0);
  }
  return result;
}

unint64_t sub_1A74C1D10()
{
  unint64_t result = qword_1EB702DA0;
  if (!qword_1EB702DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702DA0);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F4C68);
}

unint64_t sub_1A74C1D84()
{
  unint64_t result = qword_1E96F4AD0;
  if (!qword_1E96F4AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4AD0);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F4C78);
}

unint64_t sub_1A74C1DF8()
{
  unint64_t result = qword_1E96F4B10;
  if (!qword_1E96F4B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4B10);
  }
  return result;
}

unint64_t sub_1A74C1E4C()
{
  unint64_t result = qword_1E96F4B20;
  if (!qword_1E96F4B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4B20);
  }
  return result;
}

unint64_t sub_1A74C1EA0()
{
  unint64_t result = qword_1E96F4B38;
  if (!qword_1E96F4B38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F4B30);
    sub_1A74BF618(&qword_1E96F4B40, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4B38);
  }
  return result;
}

unint64_t sub_1A74C1F44()
{
  unint64_t result = qword_1E96F4B50;
  if (!qword_1E96F4B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4B50);
  }
  return result;
}

unint64_t sub_1A74C1F98()
{
  unint64_t result = qword_1E96F4B58;
  if (!qword_1E96F4B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4B58);
  }
  return result;
}

unint64_t sub_1A74C1FEC()
{
  unint64_t result = qword_1E96F4B60;
  if (!qword_1E96F4B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4B60);
  }
  return result;
}

unint64_t sub_1A74C2040()
{
  unint64_t result = qword_1E96F4B68;
  if (!qword_1E96F4B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4B68);
  }
  return result;
}

unint64_t sub_1A74C2094()
{
  unint64_t result = qword_1E96F4BA8;
  if (!qword_1E96F4BA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F4B30);
    sub_1A74BF618(&qword_1E96F4BB0, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4BA8);
  }
  return result;
}

unint64_t sub_1A74C2138()
{
  unint64_t result = qword_1E96F4BC0;
  if (!qword_1E96F4BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4BC0);
  }
  return result;
}

unint64_t sub_1A74C218C()
{
  unint64_t result = qword_1E96F4BD0;
  if (!qword_1E96F4BD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F4BC8);
    sub_1A74BF618(&qword_1E96F4BD8, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4BD0);
  }
  return result;
}

unint64_t sub_1A74C2230()
{
  unint64_t result = qword_1E96F4BE8;
  if (!qword_1E96F4BE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F4BC8);
    sub_1A74BF618(&qword_1E96F4BF0, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4BE8);
  }
  return result;
}

unint64_t sub_1A74C22D4()
{
  unint64_t result = qword_1EB704668;
  if (!qword_1EB704668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704668);
  }
  return result;
}

unint64_t sub_1A74C2328()
{
  unint64_t result = qword_1EB700ED0;
  if (!qword_1EB700ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700ED0);
  }
  return result;
}

uint64_t sub_1A74C237C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A74C23E4()
{
  unint64_t result = qword_1EB704680;
  if (!qword_1EB704680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704680);
  }
  return result;
}

unint64_t sub_1A74C243C()
{
  unint64_t result = qword_1E96F4BF8;
  if (!qword_1E96F4BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4BF8);
  }
  return result;
}

unint64_t sub_1A74C2494()
{
  unint64_t result = qword_1E96F4C00;
  if (!qword_1E96F4C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4C00);
  }
  return result;
}

unint64_t sub_1A74C24EC()
{
  unint64_t result = qword_1E96F4C08;
  if (!qword_1E96F4C08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F4C10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4C08);
  }
  return result;
}

unint64_t sub_1A74C254C()
{
  unint64_t result = qword_1E96F4C18;
  if (!qword_1E96F4C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4C18);
  }
  return result;
}

unint64_t sub_1A74C25A4()
{
  unint64_t result = qword_1E96F4C20;
  if (!qword_1E96F4C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4C20);
  }
  return result;
}

unint64_t sub_1A74C25FC()
{
  unint64_t result = qword_1E96F4C28;
  if (!qword_1E96F4C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4C28);
  }
  return result;
}

unint64_t sub_1A74C2654()
{
  unint64_t result = qword_1E96F4C30;
  if (!qword_1E96F4C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4C30);
  }
  return result;
}

unint64_t sub_1A74C26AC()
{
  unint64_t result = qword_1E96F4C38;
  if (!qword_1E96F4C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4C38);
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView()
{
  return &type metadata for REMRemindersListDataView;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SortingDirection()
{
  return &type metadata for REMRemindersListDataView.SortingDirection;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.SortingStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7C) {
    goto LABEL_17;
  }
  if (a2 + 132 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 132) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 132;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 132;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 132;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x7B) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for REMRemindersListDataView.SortingStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 132 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 132) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7C) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7B)
  {
    unsigned int v6 = ((a2 - 124) >> 8) + 1;
    *unint64_t result = a2 - 124;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74C289CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1A74C28C4(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 5;
  }
  else {
    return v1 & 1 | 4u;
  }
}

unsigned char *sub_1A74C28E0(unsigned char *result, unsigned int a2)
{
  if (a2 < 4) {
    *unint64_t result = *result & 1 | (32 * a2);
  }
  else {
    *unint64_t result = a2 & 1 | 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SortingStyle()
{
  return &type metadata for REMRemindersListDataView.SortingStyle;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.FetchSubtasks()
{
  return &type metadata for REMRemindersListDataView.FetchSubtasks;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.ShowCompleted(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_1A7571B60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for REMRemindersListDataView.ShowCompleted(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_1A7571B60();
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for REMRemindersListDataView.ShowCompleted(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1A7571B60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for REMRemindersListDataView.ShowCompleted(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A74BE86C((uint64_t)a1, type metadata accessor for REMRemindersListDataView.ShowCompleted);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1A7571B60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for REMRemindersListDataView.ShowCompleted(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1A7571B60();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for REMRemindersListDataView.ShowCompleted(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A74BE86C((uint64_t)a1, type metadata accessor for REMRemindersListDataView.ShowCompleted);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1A7571B60();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A74C2E58()
{
  uint64_t result = sub_1A7571B60();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.FetchConfiguration(unsigned char *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    void *v4 = *a2;
    unsigned int v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (void *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v8 = *v9;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v12 = sub_1A7571B60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v14 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      void *v15 = *v16;
      uint64_t v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8) + 48);
      unsigned __int8 v19 = (char *)v15 + v18;
      uint64_t v20 = (char *)v16 + v18;
      uint64_t v21 = sub_1A7571B60();
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      v22(v19, v20, v21);
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
      v22(&v19[*(int *)(v23 + 36)], &v20[*(int *)(v23 + 36)], v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t destroy for REMRemindersListDataView.FetchConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v6 = sub_1A7571B60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v9 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8) + 48);
    uint64_t v10 = sub_1A7571B60();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v12)((void *)(v10 - 8), v9, v10);
    uint64_t v11 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8) + 36);
    return v12(v11, v10);
  }
  return result;
}

unsigned char *initializeWithCopy for REMRemindersListDataView.FetchConfiguration(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *uint64_t v7 = *v8;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_1A7571B60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *uint64_t v13 = *v14;
    uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8) + 48);
    uint64_t v17 = (char *)v13 + v16;
    uint64_t v18 = (char *)v14 + v16;
    uint64_t v19 = sub_1A7571B60();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
    v20(&v17[*(int *)(v21 + 36)], &v18[*(int *)(v21 + 36)], v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

unsigned char *assignWithCopy for REMRemindersListDataView.FetchConfiguration(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  if (a1 == a2)
  {
    a1[a3[6]] = a2[a3[6]];
    goto LABEL_12;
  }
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  sub_1A74BE86C((uint64_t)&a1[v6], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  uint64_t v9 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *uint64_t v7 = *v8;
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v11 = sub_1A7571B60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
LABEL_7:
    swift_storeEnumTagMultiPayload();
    goto LABEL_9;
  }
  memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_9:
  a1[a3[6]] = a2[a3[6]];
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  sub_1A74BE86C((uint64_t)&a1[v12], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  uint64_t v15 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *uint64_t v13 = *v14;
    uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8) + 48);
    uint64_t v17 = (char *)v13 + v16;
    uint64_t v18 = (char *)v14 + v16;
    uint64_t v19 = sub_1A7571B60();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
    v20(&v17[*(int *)(v21 + 36)], &v18[*(int *)(v21 + 36)], v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
LABEL_12:
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

unsigned char *initializeWithTake for REMRemindersListDataView.FetchConfiguration(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1A7571B60();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *uint64_t v12 = *v13;
    uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8) + 48);
    uint64_t v16 = (char *)v12 + v15;
    uint64_t v17 = (char *)v13 + v15;
    uint64_t v18 = sub_1A7571B60();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
    v19(v16, v17, v18);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
    v19(&v16[*(int *)(v20 + 36)], &v17[*(int *)(v20 + 36)], v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

unsigned char *assignWithTake for REMRemindersListDataView.FetchConfiguration(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  if (a1 == a2)
  {
    a1[a3[6]] = a2[a3[6]];
  }
  else
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    sub_1A74BE86C((uint64_t)&a1[v6], type metadata accessor for REMRemindersListDataView.ShowCompleted);
    uint64_t v9 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v10 = sub_1A7571B60();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v11 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    sub_1A74BE86C((uint64_t)&a1[v11], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
    uint64_t v14 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *uint64_t v12 = *v13;
      uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8) + 48);
      uint64_t v16 = (char *)v12 + v15;
      uint64_t v17 = (char *)v13 + v15;
      uint64_t v18 = sub_1A7571B60();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
      v19(v16, v17, v18);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
      v19(&v16[*(int *)(v20 + 36)], &v17[*(int *)(v20 + 36)], v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.FetchConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A74C3B54);
}

uint64_t sub_1A74C3B54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 254)
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + a3[6]);
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v13 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[7];
    return v14(v16, a2, v15);
  }
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.FetchConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A74C3CA4);
}

uint64_t sub_1A74C3CA4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[6]) = a2 + 1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[7];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

uint64_t sub_1A74C3DD0()
{
  uint64_t result = type metadata accessor for REMRemindersListDataView.ShowCompleted(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for REMRemindersListDataView.HashtagLabelPredicate(uint64_t a1)
{
  return sub_1A74C3EC8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1A74C3EC8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO21HashtagLabelPredicateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A74C0364(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.HashtagLabelPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A74C0364(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A74C3EC8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.HashtagLabelPredicate(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A74C3EC8(v4, v5, v6);
  return a1;
}

uint64_t sub_1A74C3FFC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1A74C4014(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.HashtagLabelPredicate()
{
  return &type metadata for REMRemindersListDataView.HashtagLabelPredicate;
}

uint64_t destroy for REMRemindersListDataView.ReminderLite(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMRemindersListDataView.ReminderLite(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.ReminderLite(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.ReminderLite(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ReminderLite()
{
  return &type metadata for REMRemindersListDataView.ReminderLite;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CountByCompleted()
{
  return &type metadata for REMRemindersListDataView.CountByCompleted;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.FlatModel()
{
  return &type metadata for REMRemindersListDataView.FlatModel;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListModel()
{
  return &type metadata for REMRemindersListDataView.ListModel;
}

uint64_t sub_1A74C41F8(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CustomSmartListModel()
{
  return &type metadata for REMRemindersListDataView.CustomSmartListModel;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.GroupModel()
{
  return &type metadata for REMRemindersListDataView.GroupModel;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsModel()
{
  return &type metadata for REMRemindersListDataView.ListsModel;
}

uint64_t destroy for REMRemindersListDataView.ListsModel.Sublist(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMRemindersListDataView.ListsModel.Sublist(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  id v6 = v3;
  swift_bridgeObjectRetain();
  id v7 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.ListsModel.Sublist(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a1 + 24);
  unsigned __int8 v8 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v8;
  id v9 = v8;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.ListsModel.Sublist(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsModel.Sublist()
{
  return &type metadata for REMRemindersListDataView.ListsModel.Sublist;
}

uint64_t assignWithCopy for REMRemindersListDataView.FlaggedModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 48);
  id v6 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v6;
  id v7 = v6;

  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.FlaggedModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.FlaggedModel()
{
  return &type metadata for REMRemindersListDataView.FlaggedModel;
}

uint64_t assignWithCopy for REMRemindersListDataView.AssignedModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 40);
  id v6 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v6;
  id v7 = v6;

  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.AssignedModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.AssignedModel()
{
  return &type metadata for REMRemindersListDataView.AssignedModel;
}

void destroy for REMRemindersListDataView.TaggedModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  unint64_t v2 = *(void **)(a1 + 80);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for REMRemindersListDataView.TaggedModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  id v6 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v6;
  unsigned __int8 v8 = (_OWORD *)(a2 + 80);
  id v7 = *(void **)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = v6;
  if (v7)
  {
    *(void *)(a1 + 80) = v7;
    *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
    uint64_t v10 = *(void *)(a2 + 96);
    uint64_t v11 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v10;
    *(void *)(a1 + 104) = v11;
    id v12 = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = v8[1];
    *(_OWORD *)(a1 + 80) = *v8;
    *(_OWORD *)(a1 + 96) = v13;
  }
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.TaggedModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void **)(a1 + 72);
  id v6 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v6;
  id v7 = v6;

  unsigned __int8 v8 = (_OWORD *)(a1 + 80);
  id v9 = *(void **)(a1 + 80);
  uint64_t v11 = (_OWORD *)(a2 + 80);
  uint64_t v10 = *(void **)(a2 + 80);
  if (v9)
  {
    if (v10)
    {
      *(void *)(a1 + 80) = v10;
      id v12 = v10;

      *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A74C41F8(a1 + 80);
      long long v14 = *(_OWORD *)(a2 + 96);
      *unsigned __int8 v8 = *v11;
      *(_OWORD *)(a1 + 96) = v14;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 80) = v10;
    *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    id v13 = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 96);
    *unsigned __int8 v8 = *v11;
    *(_OWORD *)(a1 + 96) = v15;
  }
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for REMRemindersListDataView.TaggedModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  long long v4 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  long long v5 = *(void **)(a1 + 80);
  uint64_t v6 = *(void *)(a2 + 80);
  if (!v5) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_1A74C41F8(a1 + 80);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v8;
    return a1;
  }
  *(void *)(a1 + 80) = v6;

  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.TaggedModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.TaggedModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TaggedModel()
{
  return &type metadata for REMRemindersListDataView.TaggedModel;
}

uint64_t destroy for REMRemindersListDataView.TemplateModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  long long v3 = *(void **)(a1 + 56);
  if (v3)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for REMRemindersListDataView.TemplateModel(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  long long v8 = (_OWORD *)(a2 + 56);
  uint64_t v7 = *(void **)(a2 + 56);
  id v9 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 56) = v7;
    *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
    uint64_t v10 = *(void *)(a2 + 72);
    uint64_t v11 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v11;
    id v12 = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = v8[1];
    *(_OWORD *)(a1 + 56) = *v8;
    *(_OWORD *)(a1 + 72) = v13;
  }
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.TemplateModel(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v8 = (_OWORD *)(a1 + 56);
  id v9 = *(void **)(a1 + 56);
  uint64_t v11 = (_OWORD *)(a2 + 56);
  uint64_t v10 = *(void **)(a2 + 56);
  if (v9)
  {
    if (v10)
    {
      *(void *)(a1 + 56) = v10;
      id v12 = v10;

      *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A74C41F8(a1 + 56);
      long long v14 = *(_OWORD *)(a2 + 72);
      *long long v8 = *v11;
      *(_OWORD *)(a1 + 72) = v14;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 56) = v10;
    *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    id v13 = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 72);
    *long long v8 = *v11;
    *(_OWORD *)(a1 + 72) = v15;
  }
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.TemplateModel(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 56);
  uint64_t v6 = *(void *)(a2 + 56);
  if (!v5) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_1A74C41F8(a1 + 56);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v8;
    return a1;
  }
  *(void *)(a1 + 56) = v6;

  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TemplateModel()
{
  return &type metadata for REMRemindersListDataView.TemplateModel;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DateBucketsModel()
{
  return &type metadata for REMRemindersListDataView.DateBucketsModel;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle()
{
  return &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle;
}

void *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A7571B60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1)
{
  uint64_t v2 = sub_1A7571B60();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A74C5208);
}

uint64_t sub_1A74C5208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A74C52D8);
}

uint64_t sub_1A74C52D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A7571B60();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1A74C5394()
{
  return sub_1A74CA114();
}

uint64_t destroy for REMRemindersListDataView.Diff()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for REMRemindersListDataView.Diff(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMRemindersListDataView.Diff(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.Diff(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.Diff()
{
  return &type metadata for REMRemindersListDataView.Diff;
}

uint64_t sub_1A74C5584()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A74C5628(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unsigned int v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v10 = *v11;
    v10[1] = v11[1];
    void v10[2] = v11[2];
    _DWORD v10[3] = v11[3];
    v10[4] = v11[4];
    id v12 = (void **)(((unint64_t)v11 + 47) & 0xFFFFFFFFFFFFFFF8);
    id v13 = *v12;
    *(void *)(((unint64_t)v10 + 47) & 0xFFFFFFFFFFFFFFF8) = *v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v13;
  }
  return v4;
}

void sub_1A74C5790(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)((v4 + 47) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1A74C5830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  uint64_t v7[3] = v8[3];
  v7[4] = v8[4];
  uint64_t v9 = (void **)(((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v10 = *v9;
  *(void *)(((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8) = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v10;
  return a1;
}

uint64_t sub_1A74C5914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void **)(((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v10 = *(void **)(((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  id v11 = *v9;
  *uint64_t v9 = v10;
  id v12 = v10;

  return a1;
}

uint64_t sub_1A74C5A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  *(void *)((v7 + 47) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A74C5AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  swift_bridgeObjectRelease();
  uint64_t v7[3] = v8[3];
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  swift_bridgeObjectRelease();
  long long v9 = (void **)(((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  long long v10 = *v9;
  *long long v9 = *(void **)(((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1A74C5BA4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A74C5CF8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1A74C5D0C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v19 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
              if ((a2 & 0x80000000) != 0)
              {
                *(_OWORD *)(v19 + 8) = 0u;
                uint64_t v20 = a2 ^ 0x80000000;
                *(_OWORD *)(v19 + 24) = 0u;
              }
              else
              {
                uint64_t v20 = a2 - 1;
              }
              *(void *)unint64_t v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1A74C5F08);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.RemindersPrefetch(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8) + 48);
      unsigned int v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1A7571B60();
      unsigned int v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      v11(v8, v9, v10);
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
      v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for REMRemindersListDataView.RemindersPrefetch(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8) + 48);
    uint64_t v4 = sub_1A7571B60();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v6)((void *)(v4 - 8), v3, v4);
    uint64_t v5 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8) + 36);
    return v6(v5, v4);
  }
  return result;
}

void *initializeWithCopy for REMRemindersListDataView.RemindersPrefetch(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8) + 48);
    uint64_t v7 = (char *)a1 + v6;
    unsigned int v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1A7571B60();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    v10(v7, v8, v9);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
    v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for REMRemindersListDataView.RemindersPrefetch(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A74BE86C((uint64_t)a1, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8) + 48);
      uint64_t v7 = (char *)a1 + v6;
      unsigned int v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1A7571B60();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      v10(v7, v8, v9);
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
      v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for REMRemindersListDataView.RemindersPrefetch(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8) + 48);
    uint64_t v7 = (char *)a1 + v6;
    unsigned int v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1A7571B60();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
    v10(v7, v8, v9);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
    v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for REMRemindersListDataView.RemindersPrefetch(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A74BE86C((uint64_t)a1, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB702FA8) + 48);
      uint64_t v7 = (char *)a1 + v6;
      unsigned int v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1A7571B60();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
      v10(v7, v8, v9);
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
      v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1A74C65F0()
{
  uint64_t v2 = MEMORY[0x1E4FBADA0] + 64;
  uint64_t v3 = MEMORY[0x1E4FBADA0] + 64;
  sub_1A738605C();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v1;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t destroy for REMRemindersListDataView.SectionLite(id *a1)
{
  if (*a1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for REMRemindersListDataView.SectionLite(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  if (*(void *)a2)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    uint64_t v6 = *(void *)(a2 + 16);
    *a1 = v4;
    a1[1] = v5;
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    a1[2] = v6;
    a1[3] = v7;
    a1[4] = v8;
    id v9 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v10;
    a1[4] = *(void *)(a2 + 32);
  }
  a1[5] = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMRemindersListDataView.SectionLite(void *a1, long long *a2)
{
  uint64_t v4 = (void *)*a1;
  uint64_t v5 = *(void **)a2;
  if (*a1)
  {
    if (v5)
    {
      *a1 = v5;
      id v6 = v5;

      a1[1] = *((void *)a2 + 1);
      a1[2] = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[3] = *((void *)a2 + 3);
      a1[4] = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A72CB560((uint64_t)a1, &qword_1E96F4C40);
      uint64_t v8 = *((void *)a2 + 4);
      long long v9 = a2[1];
      *(_OWORD *)a1 = *a2;
      *((_OWORD *)a1 + 1) = v9;
      a1[4] = v8;
    }
  }
  else if (v5)
  {
    *a1 = v5;
    a1[1] = *((void *)a2 + 1);
    a1[2] = *((void *)a2 + 2);
    a1[3] = *((void *)a2 + 3);
    a1[4] = *((void *)a2 + 4);
    id v7 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *a2;
    long long v11 = a2[1];
    a1[4] = *((void *)a2 + 4);
    *(_OWORD *)a1 = v10;
    *((_OWORD *)a1 + 1) = v11;
  }
  a1[5] = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.SectionLite(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  if (!*(void *)a1) {
    goto LABEL_5;
  }
  if (!*(void *)a2)
  {
    sub_1A72CB560(a1, &qword_1E96F4C40);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionLite()
{
  return &type metadata for REMRemindersListDataView.SectionLite;
}

id *destroy for REMRemindersListDataView.SectionLite.SectionType(id *result)
{
  if ((unint64_t)*result >= 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
    return (id *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for REMRemindersListDataView.SectionLite.SectionType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 8);
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    id v8 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.SectionLite.SectionType(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      id v7 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v8 = *a2;
    long long v9 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v8;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = v5;
  id v6 = v5;

  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.SectionLite.SectionType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return a1;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.SectionLite.SectionType(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.SectionLite.SectionType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1A74C6C54(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    uint64_t v2 = a2 ^ 0x80000000;
    *(_OWORD *)(result + 24) = 0u;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionLite.SectionType()
{
  return &type metadata for REMRemindersListDataView.SectionLite.SectionType;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9FlatModelVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9FlatModelVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9FlatModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionsModel()
{
  return &type metadata for REMRemindersListDataView.SectionsModel;
}

void _s19ReminderKitInternal24REMRemindersListDataViewO9ListModelVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 48);
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9ListModelVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  long long v4 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9ListModelVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v5 = *(void **)(a2 + 48);
  uint64_t v6 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v5;
  id v7 = v5;

  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9ListModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9ListModelVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A74C7000(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListSectionsModel()
{
  return &type metadata for REMRemindersListDataView.ListSectionsModel;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsModel()
{
  return &type metadata for REMRemindersListDataView.CustomSmartListSectionsModel;
}

void _s19ReminderKitInternal24REMRemindersListDataViewO20CustomSmartListModelVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 56);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO20CustomSmartListModelVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  id v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v7 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void **)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v5;
  if (v6)
  {
    *(void *)(a1 + 56) = v6;
    *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
    uint64_t v9 = *(void *)(a2 + 72);
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v9;
    *(void *)(a1 + 80) = v10;
    id v11 = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = v7[1];
    *(_OWORD *)(a1 + 56) = *v7;
    *(_OWORD *)(a1 + 72) = v12;
  }
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO20CustomSmartListModelVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v5 = *(void **)(a2 + 48);
  uint64_t v6 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v5;
  id v7 = v5;

  id v8 = (_OWORD *)(a1 + 56);
  uint64_t v9 = *(void **)(a1 + 56);
  id v11 = (_OWORD *)(a2 + 56);
  uint64_t v10 = *(void **)(a2 + 56);
  if (v9)
  {
    if (v10)
    {
      *(void *)(a1 + 56) = v10;
      id v12 = v10;

      *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A74C41F8(a1 + 56);
      long long v14 = *(_OWORD *)(a2 + 72);
      *id v8 = *v11;
      *(_OWORD *)(a1 + 72) = v14;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 56) = v10;
    *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    id v13 = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 72);
    *id v8 = *v11;
    *(_OWORD *)(a1 + 72) = v15;
  }
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO20CustomSmartListModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  id v5 = *(void **)(a1 + 56);
  uint64_t v6 = *(void *)(a2 + 56);
  if (!v5) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_1A74C41F8(a1 + 56);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v8;
    return a1;
  }
  *(void *)(a1 + 56) = v6;

  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr1EFC8D8B9O15GroupInvocationC6ResultVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr1EFC8D8B9O15GroupInvocationC6ResultVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TemplateSectionsModel()
{
  return &type metadata for REMRemindersListDataView.TemplateSectionsModel;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10ListsModelVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10ListsModelVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10ListsModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel;
}

uint64_t destroy for REMRemindersListDataView.ListsSectionsModel.List(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMRemindersListDataView.ListsSectionsModel.List(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  id v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v6 = v3;
  swift_bridgeObjectRetain();
  id v7 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.ListsSectionsModel.List(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a1 + 24);
  long long v8 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v8;
  id v9 = v8;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.ListsSectionsModel.List(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  id v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType;
}

void _s19ReminderKitInternal24REMRemindersListDataViewO10GroupModelVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10GroupModelVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  id v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10GroupModelVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v5 = *(void **)(a2 + 40);
  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v5;
  id v7 = v5;

  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10GroupModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.GroupSectionsModel()
{
  return &type metadata for REMRemindersListDataView.GroupSectionsModel;
}

void destroy for REMRemindersListDataView.TodayGroupModel(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for REMRemindersListDataView.TodayGroupModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void **)(a2 + 32);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v3;
  id v5 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  id v6 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v5;
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.TodayGroupModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  id v5 = *(void **)(a1 + 32);
  id v6 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v6;
  id v7 = v6;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v8 = *(void **)(a1 + 56);
  id v9 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v9;
  id v10 = v9;

  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.TodayGroupModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.TodayGroupModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.TodayGroupModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel;
}

uint64_t initializeBufferWithCopyOfBuffer for REMRemindersListDataView.TodayGroupModel.Group(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.TodayGroupModel.Group(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.TodayGroupModel.Group(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodaySectionOrderingModel()
{
  return &type metadata for REMRemindersListDataView.TodaySectionOrderingModel;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10ListsModelVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMRemindersListDataView.DatesModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.DatesModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.DatesModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DatesModel()
{
  return &type metadata for REMRemindersListDataView.DatesModel;
}

void *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.DatesModel.Group(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A7571B60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for REMRemindersListDataView.DatesModel.Group(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.DatesModel.Group(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for REMRemindersListDataView.DatesModel.Group(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.DatesModel.Group(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.DatesModel.Group(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_65Tm);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.DatesModel.Group(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_66Tm);
}

uint64_t sub_1A74C81BC()
{
  uint64_t result = sub_1A7571B60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.ScheduledDateBucketsModel.Day(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_65Tm_0);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.ScheduledDateBucketsModel.Day(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_66Tm_0);
}

uint64_t sub_1A74C82C0()
{
  return sub_1A74CA114();
}

uint64_t *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
      case 4u:
        uint64_t v9 = sub_1A7571B60();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702B88);
        *(uint64_t *)((char *)a1 + *(int *)(v10 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 48));
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v7 = sub_1A7571B60();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
        *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
        swift_bridgeObjectRetain();
        break;
      default:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      goto LABEL_4;
    case 1:
    case 3:
    case 4:
      uint64_t v3 = sub_1A7571B60();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702B88);
      goto LABEL_4;
    case 2:
      uint64_t v4 = sub_1A7571B60();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
      uint64_t v6 = sub_1A7571B60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702B88);
      *(void *)((char *)a1 + *(int *)(v7 + 48)) = *(void *)((char *)a2 + *(int *)(v7 + 48));
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v4 = sub_1A7571B60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
      *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
      swift_bridgeObjectRetain();
      break;
    default:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1A74BE86C((uint64_t)a1, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
      case 4u:
        uint64_t v6 = sub_1A7571B60();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702B88);
        *(void *)((char *)a1 + *(int *)(v7 + 48)) = *(void *)((char *)a2 + *(int *)(v7 + 48));
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v4 = sub_1A7571B60();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
        *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
        swift_bridgeObjectRetain();
        break;
      default:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
      uint64_t v8 = sub_1A7571B60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702B88);
      *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
      goto LABEL_5;
    case 2u:
      uint64_t v6 = sub_1A7571B60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
      *(void *)&a1[*(int *)(v7 + 20)] = *(void *)&a2[*(int *)(v7 + 20)];
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A74BE86C((uint64_t)a1, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
      case 4u:
        uint64_t v8 = sub_1A7571B60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702B88);
        *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
        goto LABEL_6;
      case 2u:
        uint64_t v6 = sub_1A7571B60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
        *(void *)&a1[*(int *)(v7 + 20)] = *(void *)&a2[*(int *)(v7 + 20)];
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1A74C8F6C()
{
  uint64_t v6 = MEMORY[0x1E4FBAD80] + 64;
  uint64_t result = sub_1A7571B60();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v5;
    uint64_t result = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(319);
    if (v2 <= 0x3F)
    {
      uint64_t v8 = *(void *)(result - 8) + 64;
      swift_getTupleTypeLayout2();
      uint64_t v9 = &v4;
      swift_getTupleTypeLayout2();
      uint64_t v10 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.ScheduledTodayGroup(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_1A7571B60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for REMRemindersListDataView.ScheduledTodayGroup(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_1A7571B60();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *initializeWithCopy for REMRemindersListDataView.ScheduledTodayGroup(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1A7571B60();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for REMRemindersListDataView.ScheduledTodayGroup(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_1A7571B60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_1A72CB560((uint64_t)a1, &qword_1E96F4A90);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1A7571B60();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for REMRemindersListDataView.ScheduledTodayGroup(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1A7571B60();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for REMRemindersListDataView.ScheduledTodayGroup(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_1A7571B60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_1A72CB560((uint64_t)a1, &qword_1E96F4A90);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1A7571B60();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.ScheduledTodayGroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A74C9884);
}

uint64_t sub_1A74C9884(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.ScheduledTodayGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A74C9908);
}

uint64_t sub_1A74C9908(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1A74C998C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1A74C99F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4A90);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsStyle()
{
  return &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9FlatModelVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel;
}

uint64_t *_s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelV3DayVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A7571B60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10DatesModelV5GroupVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelV3DayVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelV3DayVwca_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelV3DayVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelV3DayVwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.CompletedDateBucketsModel.Day(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A74C9F7C);
}

uint64_t __swift_get_extra_inhabitant_index_65Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.CompletedDateBucketsModel.Day(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A74CA054);
}

uint64_t __swift_store_extra_inhabitant_index_66Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A7571B60();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A74CA114()
{
  uint64_t result = sub_1A7571B60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
        uint64_t v9 = sub_1A7571B60();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B48);
        *(void *)((char *)a1 + *(int *)(v10 + 48)) = *(void *)((char *)a2 + *(int *)(v10 + 48));
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v11 = sub_1A7571B60();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
        *((unsigned char *)a1 + *(int *)(v12 + 20)) = *((unsigned char *)a2 + *(int *)(v12 + 20));
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F4B18);
        *(void *)((char *)a1 + *(int *)(v13 + 48)) = *(void *)((char *)a2 + *(int *)(v13 + 48));
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = sub_1A7571B60();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0);
        *(void *)((char *)a1 + *(int *)(v7 + 20)) = *(void *)((char *)a2 + *(int *)(v7 + 20));
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v5 = sub_1A7571B60();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0);
      goto LABEL_6;
    case 1:
    case 2:
    case 3:
      uint64_t v3 = sub_1A7571B60();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      long long v4 = &qword_1E96F4B48;
      goto LABEL_5;
    case 4:
      uint64_t v6 = sub_1A7571B60();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      long long v4 = &qword_1E96F4B18;
LABEL_5:
      __swift_instantiateConcreteTypeFromMangledName(v4);
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
      uint64_t v4 = sub_1A7571B60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = &qword_1E96F4B48;
      goto LABEL_4;
    case 4u:
      uint64_t v6 = sub_1A7571B60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
      *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
      uint64_t v5 = &qword_1E96F4B18;
LABEL_4:
      uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v5) + 48);
      break;
    default:
      uint64_t v10 = sub_1A7571B60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v8 = *(int *)(type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0) + 20);
      break;
  }
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1A74BE86C(a1, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
        uint64_t v4 = sub_1A7571B60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = &qword_1E96F4B48;
        goto LABEL_5;
      case 4u:
        uint64_t v6 = sub_1A7571B60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
        *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
        uint64_t v5 = &qword_1E96F4B18;
LABEL_5:
        uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v5) + 48);
        break;
      default:
        uint64_t v10 = sub_1A7571B60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        uint64_t v8 = *(int *)(type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0) + 20);
        break;
    }
    *(void *)(a1 + v8) = *(void *)(a2 + v8);
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
      uint64_t v4 = sub_1A7571B60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = &qword_1E96F4B48;
      goto LABEL_4;
    case 4u:
      uint64_t v6 = sub_1A7571B60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
      *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
      uint64_t v5 = &qword_1E96F4B18;
LABEL_4:
      uint64_t v8 = (int *)(__swift_instantiateConcreteTypeFromMangledName(v5) + 48);
      break;
    default:
      uint64_t v10 = sub_1A7571B60();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v8 = (int *)(type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0) + 20);
      break;
  }
  *(void *)(a1 + *v8) = *(void *)(a2 + *v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1A74BE86C(a1, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
        uint64_t v4 = sub_1A7571B60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        uint64_t v5 = &qword_1E96F4B48;
        goto LABEL_5;
      case 4u:
        uint64_t v6 = sub_1A7571B60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
        *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
        uint64_t v5 = &qword_1E96F4B18;
LABEL_5:
        uint64_t v8 = (int *)(__swift_instantiateConcreteTypeFromMangledName(v5) + 48);
        break;
      default:
        uint64_t v10 = sub_1A7571B60();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        uint64_t v8 = (int *)(type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0) + 20);
        break;
    }
    *(void *)(a1 + *v8) = *(void *)(a2 + *v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A74CAC58()
{
  uint64_t result = type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(319);
  if (v1 <= 0x3F)
  {
    uint64_t v8 = *(void *)(result - 8) + 64;
    uint64_t result = sub_1A7571B60();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v9 = &v7;
      swift_getTupleTypeLayout2();
      uint64_t v10 = &v6;
      swift_getTupleTypeLayout2();
      uint64_t v11 = &v5;
      uint64_t result = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(319);
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v12 = &v4;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ShowCompleted.CodingError()
{
  return &type metadata for REMRemindersListDataView.ShowCompleted.CodingError;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SortingStyle.CodingError()
{
  return &type metadata for REMRemindersListDataView.SortingStyle.CodingError;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.RemindersPrefetch.Base()
{
  return &type metadata for REMRemindersListDataView.RemindersPrefetch.Base;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.RemindersPrefetch.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.RemindersPrefetch.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.DayCodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.DayCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastSevenDaysCodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastSevenDaysCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastThirtyDaysCodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastThirtyDaysCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.MonthCodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.MonthCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.YearCodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.YearCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Day.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsStyle.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsStyle.RegularCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.RegularCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsStyle.CompactCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.CompactCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledTodayGroup.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup.AsNeededCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledTodayGroup.AsNeededCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup.AlwaysCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledTodayGroup.AlwaysCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.PastDueCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.PastDueCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.NextFiveDaysCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.NextFiveDaysCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.DayCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.DayCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.MonthCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.MonthCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.YearCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.YearCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Day.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DatesModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.DatesModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DatesModel.Group.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.DatesModel.Group.CodingKeys;
}

unsigned char *_s19ReminderKitInternal24REMRemindersListDataViewO25CompletedDateBucketsModelV6BucketO13DayCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A74CB028);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodaySectionOrderingModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodaySectionOrderingModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.CodingKeys;
}

unsigned char *_s19ReminderKitInternal24REMRemindersListDataViewO15TodayGroupModelV5GroupV9GroupTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74CB154);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.BeforeTodayCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.BeforeTodayCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayAllDayCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayAllDayCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.MorningCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.MorningCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.AfternoonCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.AfternoonCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TonightCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TonightCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.NearbyCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.NearbyCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.EmptyCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.EmptyCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.GroupSectionsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.GroupSectionsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType.RegularCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.RegularCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType.CustomSmartListCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.CustomSmartListCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType.GroceryCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.GroceryCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TemplateSectionsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TemplateSectionsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.CustomSmartListSectionsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListSectionsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListSectionsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.SectionsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionLite.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.SectionLite.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionLite.SectionType.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.SectionLite.SectionType.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionLite.SectionType.SectionedCodingKeys()
{
  return &type metadata for REMRemindersListDataView.SectionLite.SectionType.SectionedCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionLite.SectionType.SectionlessCodingKeys()
{
  return &type metadata for REMRemindersListDataView.SectionLite.SectionType.SectionlessCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.Diff.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.Diff.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.DateBucketsModel.RepresentativeDate.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.RestOfUnlessFirstDayCodingKeys()
{
  return &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.RestOfUnlessFirstDayCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.AllOfCodingKeys()
{
  return &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.AllOfCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TemplateModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TemplateModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TaggedModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TaggedModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.AssignedModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.AssignedModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.FlaggedModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.FlaggedModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsModel.Sublist.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsModel.Sublist.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.FlatModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.FlatModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CountByCompleted.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.CountByCompleted.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ReminderLite.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ReminderLite.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.HashtagLabelPredicate.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.HashtagLabelPredicate.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.HashtagLabelPredicate.AllLabelsCodingKeys()
{
  return &type metadata for REMRemindersListDataView.HashtagLabelPredicate.AllLabelsCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.HashtagLabelPredicate.NoLabelsCodingKeys()
{
  return &type metadata for REMRemindersListDataView.HashtagLabelPredicate.NoLabelsCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.HashtagLabelPredicate.AndCodingKeys()
{
  return &type metadata for REMRemindersListDataView.HashtagLabelPredicate.AndCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.HashtagLabelPredicate.OrCodingKeys()
{
  return &type metadata for REMRemindersListDataView.HashtagLabelPredicate.OrCodingKeys;
}

unsigned char *_s19ReminderKitInternal24REMRemindersListDataViewO25CompletedDateBucketsModelV6BucketO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74CB4F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.FetchConfiguration.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.FetchConfiguration.CodingKeys;
}

unsigned char *_s19ReminderKitInternal24REMRemindersListDataViewO17RemindersPrefetchO4BaseOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74CB5FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ShowCompleted.Base()
{
  return &type metadata for REMRemindersListDataView.ShowCompleted.Base;
}

unsigned char *_s19ReminderKitInternal24REMRemindersListDataViewO13FetchSubtasksOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74CB700);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ShowCompleted.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ShowCompleted.CodingKeys;
}

unsigned char *_s19ReminderKitInternal24REMRemindersListDataViewO15TodayGroupModelV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74CB804);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SortingStyle.Base()
{
  return &type metadata for REMRemindersListDataView.SortingStyle.Base;
}

unsigned char *_s19ReminderKitInternal24REMRemindersListDataViewO16SortingDirectionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74CB908);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SortingStyle.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.SortingStyle.CodingKeys;
}

unint64_t sub_1A74CB944()
{
  unint64_t result = qword_1E96F4C88;
  if (!qword_1E96F4C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4C88);
  }
  return result;
}

unint64_t sub_1A74CB99C()
{
  unint64_t result = qword_1E96F4C90;
  if (!qword_1E96F4C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4C90);
  }
  return result;
}

unint64_t sub_1A74CB9F4()
{
  unint64_t result = qword_1E96F4C98;
  if (!qword_1E96F4C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4C98);
  }
  return result;
}

unint64_t sub_1A74CBA4C()
{
  unint64_t result = qword_1E96F4CA0;
  if (!qword_1E96F4CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4CA0);
  }
  return result;
}

unint64_t sub_1A74CBAA4()
{
  unint64_t result = qword_1E96F4CA8;
  if (!qword_1E96F4CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4CA8);
  }
  return result;
}

unint64_t sub_1A74CBAFC()
{
  unint64_t result = qword_1E96F4CB0;
  if (!qword_1E96F4CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4CB0);
  }
  return result;
}

unint64_t sub_1A74CBB54()
{
  unint64_t result = qword_1E96F4CB8;
  if (!qword_1E96F4CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4CB8);
  }
  return result;
}

unint64_t sub_1A74CBBAC()
{
  unint64_t result = qword_1E96F4CC0;
  if (!qword_1E96F4CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4CC0);
  }
  return result;
}

unint64_t sub_1A74CBC04()
{
  unint64_t result = qword_1E96F4CC8;
  if (!qword_1E96F4CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4CC8);
  }
  return result;
}

unint64_t sub_1A74CBC5C()
{
  unint64_t result = qword_1E96F4CD0;
  if (!qword_1E96F4CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4CD0);
  }
  return result;
}

unint64_t sub_1A74CBCB4()
{
  unint64_t result = qword_1E96F4CD8;
  if (!qword_1E96F4CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4CD8);
  }
  return result;
}

unint64_t sub_1A74CBD0C()
{
  unint64_t result = qword_1E96F4CE0;
  if (!qword_1E96F4CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4CE0);
  }
  return result;
}

unint64_t sub_1A74CBD64()
{
  unint64_t result = qword_1E96F4CE8;
  if (!qword_1E96F4CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4CE8);
  }
  return result;
}

unint64_t sub_1A74CBDBC()
{
  unint64_t result = qword_1E96F4CF0;
  if (!qword_1E96F4CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4CF0);
  }
  return result;
}

unint64_t sub_1A74CBE14()
{
  unint64_t result = qword_1E96F4CF8;
  if (!qword_1E96F4CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4CF8);
  }
  return result;
}

unint64_t sub_1A74CBE6C()
{
  unint64_t result = qword_1E96F4D00;
  if (!qword_1E96F4D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D00);
  }
  return result;
}

unint64_t sub_1A74CBEC4()
{
  unint64_t result = qword_1E96F4D08;
  if (!qword_1E96F4D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D08);
  }
  return result;
}

unint64_t sub_1A74CBF1C()
{
  unint64_t result = qword_1E96F4D10;
  if (!qword_1E96F4D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D10);
  }
  return result;
}

unint64_t sub_1A74CBF74()
{
  unint64_t result = qword_1E96F4D18;
  if (!qword_1E96F4D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D18);
  }
  return result;
}

unint64_t sub_1A74CBFCC()
{
  unint64_t result = qword_1E96F4D20;
  if (!qword_1E96F4D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D20);
  }
  return result;
}

unint64_t sub_1A74CC024()
{
  unint64_t result = qword_1E96F4D28;
  if (!qword_1E96F4D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D28);
  }
  return result;
}

unint64_t sub_1A74CC07C()
{
  unint64_t result = qword_1E96F4D30;
  if (!qword_1E96F4D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D30);
  }
  return result;
}

unint64_t sub_1A74CC0D4()
{
  unint64_t result = qword_1E96F4D38;
  if (!qword_1E96F4D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D38);
  }
  return result;
}

unint64_t sub_1A74CC12C()
{
  unint64_t result = qword_1E96F4D40;
  if (!qword_1E96F4D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D40);
  }
  return result;
}

unint64_t sub_1A74CC184()
{
  unint64_t result = qword_1E96F4D48;
  if (!qword_1E96F4D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D48);
  }
  return result;
}

unint64_t sub_1A74CC1DC()
{
  unint64_t result = qword_1E96F4D50;
  if (!qword_1E96F4D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D50);
  }
  return result;
}

unint64_t sub_1A74CC234()
{
  unint64_t result = qword_1E96F4D58;
  if (!qword_1E96F4D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D58);
  }
  return result;
}

unint64_t sub_1A74CC28C()
{
  unint64_t result = qword_1E96F4D60;
  if (!qword_1E96F4D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D60);
  }
  return result;
}

unint64_t sub_1A74CC2E4()
{
  unint64_t result = qword_1E96F4D68;
  if (!qword_1E96F4D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D68);
  }
  return result;
}

unint64_t sub_1A74CC33C()
{
  unint64_t result = qword_1E96F4D70;
  if (!qword_1E96F4D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D70);
  }
  return result;
}

unint64_t sub_1A74CC394()
{
  unint64_t result = qword_1E96F4D78;
  if (!qword_1E96F4D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D78);
  }
  return result;
}

unint64_t sub_1A74CC3EC()
{
  unint64_t result = qword_1E96F4D80;
  if (!qword_1E96F4D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D80);
  }
  return result;
}

unint64_t sub_1A74CC444()
{
  unint64_t result = qword_1E96F4D88;
  if (!qword_1E96F4D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D88);
  }
  return result;
}

unint64_t sub_1A74CC49C()
{
  unint64_t result = qword_1E96F4D90;
  if (!qword_1E96F4D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D90);
  }
  return result;
}

unint64_t sub_1A74CC4F4()
{
  unint64_t result = qword_1E96F4D98;
  if (!qword_1E96F4D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4D98);
  }
  return result;
}

unint64_t sub_1A74CC54C()
{
  unint64_t result = qword_1E96F4DA0;
  if (!qword_1E96F4DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4DA0);
  }
  return result;
}

unint64_t sub_1A74CC5A4()
{
  unint64_t result = qword_1E96F4DA8;
  if (!qword_1E96F4DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4DA8);
  }
  return result;
}

unint64_t sub_1A74CC5FC()
{
  unint64_t result = qword_1E96F4DB0;
  if (!qword_1E96F4DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4DB0);
  }
  return result;
}

unint64_t sub_1A74CC654()
{
  unint64_t result = qword_1E96F4DB8;
  if (!qword_1E96F4DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4DB8);
  }
  return result;
}

unint64_t sub_1A74CC6AC()
{
  unint64_t result = qword_1E96F4DC0;
  if (!qword_1E96F4DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4DC0);
  }
  return result;
}

unint64_t sub_1A74CC704()
{
  unint64_t result = qword_1E96F4DC8;
  if (!qword_1E96F4DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4DC8);
  }
  return result;
}

unint64_t sub_1A74CC75C()
{
  unint64_t result = qword_1E96F4DD0;
  if (!qword_1E96F4DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4DD0);
  }
  return result;
}

unint64_t sub_1A74CC7B4()
{
  unint64_t result = qword_1E96F4DD8;
  if (!qword_1E96F4DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4DD8);
  }
  return result;
}

unint64_t sub_1A74CC80C()
{
  unint64_t result = qword_1E96F4DE0;
  if (!qword_1E96F4DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4DE0);
  }
  return result;
}

unint64_t sub_1A74CC864()
{
  unint64_t result = qword_1E96F4DE8;
  if (!qword_1E96F4DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4DE8);
  }
  return result;
}

unint64_t sub_1A74CC8BC()
{
  unint64_t result = qword_1E96F4DF0;
  if (!qword_1E96F4DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4DF0);
  }
  return result;
}

unint64_t sub_1A74CC914()
{
  unint64_t result = qword_1E96F4DF8;
  if (!qword_1E96F4DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4DF8);
  }
  return result;
}

unint64_t sub_1A74CC96C()
{
  unint64_t result = qword_1E96F4E00;
  if (!qword_1E96F4E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E00);
  }
  return result;
}

unint64_t sub_1A74CC9C4()
{
  unint64_t result = qword_1E96F4E08;
  if (!qword_1E96F4E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E08);
  }
  return result;
}

unint64_t sub_1A74CCA1C()
{
  unint64_t result = qword_1E96F4E10;
  if (!qword_1E96F4E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E10);
  }
  return result;
}

unint64_t sub_1A74CCA74()
{
  unint64_t result = qword_1E96F4E18;
  if (!qword_1E96F4E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E18);
  }
  return result;
}

unint64_t sub_1A74CCACC()
{
  unint64_t result = qword_1E96F4E20;
  if (!qword_1E96F4E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E20);
  }
  return result;
}

unint64_t sub_1A74CCB24()
{
  unint64_t result = qword_1E96F4E28;
  if (!qword_1E96F4E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E28);
  }
  return result;
}

unint64_t sub_1A74CCB7C()
{
  unint64_t result = qword_1E96F4E30;
  if (!qword_1E96F4E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E30);
  }
  return result;
}

unint64_t sub_1A74CCBD4()
{
  unint64_t result = qword_1E96F4E38;
  if (!qword_1E96F4E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E38);
  }
  return result;
}

unint64_t sub_1A74CCC2C()
{
  unint64_t result = qword_1E96F4E40;
  if (!qword_1E96F4E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E40);
  }
  return result;
}

unint64_t sub_1A74CCC84()
{
  unint64_t result = qword_1E96F4E48;
  if (!qword_1E96F4E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E48);
  }
  return result;
}

unint64_t sub_1A74CCCDC()
{
  unint64_t result = qword_1E96F4E50;
  if (!qword_1E96F4E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E50);
  }
  return result;
}

unint64_t sub_1A74CCD34()
{
  unint64_t result = qword_1EB704678;
  if (!qword_1EB704678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704678);
  }
  return result;
}

unint64_t sub_1A74CCD8C()
{
  unint64_t result = qword_1EB704670;
  if (!qword_1EB704670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704670);
  }
  return result;
}

unint64_t sub_1A74CCDE4()
{
  unint64_t result = qword_1E96F4E58;
  if (!qword_1E96F4E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E58);
  }
  return result;
}

unint64_t sub_1A74CCE3C()
{
  unint64_t result = qword_1E96F4E60;
  if (!qword_1E96F4E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E60);
  }
  return result;
}

unint64_t sub_1A74CCE94()
{
  unint64_t result = qword_1E96F4E68;
  if (!qword_1E96F4E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E68);
  }
  return result;
}

unint64_t sub_1A74CCEEC()
{
  unint64_t result = qword_1E96F4E70;
  if (!qword_1E96F4E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E70);
  }
  return result;
}

unint64_t sub_1A74CCF44()
{
  unint64_t result = qword_1E96F4E78;
  if (!qword_1E96F4E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E78);
  }
  return result;
}

unint64_t sub_1A74CCF9C()
{
  unint64_t result = qword_1E96F4E80;
  if (!qword_1E96F4E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E80);
  }
  return result;
}

unint64_t sub_1A74CCFF4()
{
  unint64_t result = qword_1E96F4E88;
  if (!qword_1E96F4E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E88);
  }
  return result;
}

unint64_t sub_1A74CD04C()
{
  unint64_t result = qword_1E96F4E90;
  if (!qword_1E96F4E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E90);
  }
  return result;
}

unint64_t sub_1A74CD0A4()
{
  unint64_t result = qword_1E96F4E98;
  if (!qword_1E96F4E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4E98);
  }
  return result;
}

unint64_t sub_1A74CD0FC()
{
  unint64_t result = qword_1E96F4EA0;
  if (!qword_1E96F4EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4EA0);
  }
  return result;
}

unint64_t sub_1A74CD154()
{
  unint64_t result = qword_1E96F4EA8;
  if (!qword_1E96F4EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4EA8);
  }
  return result;
}

unint64_t sub_1A74CD1AC()
{
  unint64_t result = qword_1E96F4EB0;
  if (!qword_1E96F4EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4EB0);
  }
  return result;
}

unint64_t sub_1A74CD204()
{
  unint64_t result = qword_1E96F4EB8;
  if (!qword_1E96F4EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4EB8);
  }
  return result;
}

unint64_t sub_1A74CD25C()
{
  unint64_t result = qword_1E96F4EC0;
  if (!qword_1E96F4EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4EC0);
  }
  return result;
}

unint64_t sub_1A74CD2B4()
{
  unint64_t result = qword_1E96F4EC8;
  if (!qword_1E96F4EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4EC8);
  }
  return result;
}

unint64_t sub_1A74CD30C()
{
  unint64_t result = qword_1E96F4ED0;
  if (!qword_1E96F4ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4ED0);
  }
  return result;
}

unint64_t sub_1A74CD364()
{
  unint64_t result = qword_1EB702DB0;
  if (!qword_1EB702DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702DB0);
  }
  return result;
}

unint64_t sub_1A74CD3BC()
{
  unint64_t result = qword_1EB702DA8;
  if (!qword_1EB702DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702DA8);
  }
  return result;
}

unint64_t sub_1A74CD414()
{
  unint64_t result = qword_1EB702D98;
  if (!qword_1EB702D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702D98);
  }
  return result;
}

unint64_t sub_1A74CD46C()
{
  unint64_t result = qword_1EB702D90;
  if (!qword_1EB702D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702D90);
  }
  return result;
}

unint64_t sub_1A74CD4C4()
{
  unint64_t result = qword_1EB702D88;
  if (!qword_1EB702D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702D88);
  }
  return result;
}

unint64_t sub_1A74CD51C()
{
  unint64_t result = qword_1EB702D80;
  if (!qword_1EB702D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702D80);
  }
  return result;
}

unint64_t sub_1A74CD574()
{
  unint64_t result = qword_1E96F4ED8;
  if (!qword_1E96F4ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4ED8);
  }
  return result;
}

unint64_t sub_1A74CD5CC()
{
  unint64_t result = qword_1E96F4EE0;
  if (!qword_1E96F4EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4EE0);
  }
  return result;
}

unint64_t sub_1A74CD624()
{
  unint64_t result = qword_1E96F4EE8;
  if (!qword_1E96F4EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4EE8);
  }
  return result;
}

unint64_t sub_1A74CD67C()
{
  unint64_t result = qword_1E96F4EF0;
  if (!qword_1E96F4EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4EF0);
  }
  return result;
}

unint64_t sub_1A74CD6D4()
{
  unint64_t result = qword_1E96F4EF8;
  if (!qword_1E96F4EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4EF8);
  }
  return result;
}

unint64_t sub_1A74CD72C()
{
  unint64_t result = qword_1E96F4F00;
  if (!qword_1E96F4F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F00);
  }
  return result;
}

unint64_t sub_1A74CD784()
{
  unint64_t result = qword_1EB702BA0;
  if (!qword_1EB702BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702BA0);
  }
  return result;
}

unint64_t sub_1A74CD7DC()
{
  unint64_t result = qword_1EB702B98;
  if (!qword_1EB702B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702B98);
  }
  return result;
}

unint64_t sub_1A74CD834()
{
  unint64_t result = qword_1EB702CB8;
  if (!qword_1EB702CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702CB8);
  }
  return result;
}

unint64_t sub_1A74CD88C()
{
  unint64_t result = qword_1EB702CB0;
  if (!qword_1EB702CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702CB0);
  }
  return result;
}

unint64_t sub_1A74CD8E4()
{
  unint64_t result = qword_1EB702CC8;
  if (!qword_1EB702CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702CC8);
  }
  return result;
}

unint64_t sub_1A74CD93C()
{
  unint64_t result = qword_1EB702CC0;
  if (!qword_1EB702CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702CC0);
  }
  return result;
}

unint64_t sub_1A74CD994()
{
  unint64_t result = qword_1EB702C78;
  if (!qword_1EB702C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702C78);
  }
  return result;
}

unint64_t sub_1A74CD9EC()
{
  unint64_t result = qword_1EB702C70;
  if (!qword_1EB702C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702C70);
  }
  return result;
}

unint64_t sub_1A74CDA44()
{
  unint64_t result = qword_1EB702CA0;
  if (!qword_1EB702CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702CA0);
  }
  return result;
}

unint64_t sub_1A74CDA9C()
{
  unint64_t result = qword_1EB702C98;
  if (!qword_1EB702C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702C98);
  }
  return result;
}

unint64_t sub_1A74CDAF4()
{
  unint64_t result = qword_1EB702C88;
  if (!qword_1EB702C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702C88);
  }
  return result;
}

unint64_t sub_1A74CDB4C()
{
  unint64_t result = qword_1EB702C80;
  if (!qword_1EB702C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702C80);
  }
  return result;
}

unint64_t sub_1A74CDBA4()
{
  unint64_t result = qword_1EB702C60;
  if (!qword_1EB702C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702C60);
  }
  return result;
}

unint64_t sub_1A74CDBFC()
{
  unint64_t result = qword_1EB702C58;
  if (!qword_1EB702C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702C58);
  }
  return result;
}

unint64_t sub_1A74CDC54()
{
  unint64_t result = qword_1EB702BB8;
  if (!qword_1EB702BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702BB8);
  }
  return result;
}

unint64_t sub_1A74CDCAC()
{
  unint64_t result = qword_1EB702BB0;
  if (!qword_1EB702BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702BB0);
  }
  return result;
}

unint64_t sub_1A74CDD04()
{
  unint64_t result = qword_1E96F4F08;
  if (!qword_1E96F4F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F08);
  }
  return result;
}

unint64_t sub_1A74CDD5C()
{
  unint64_t result = qword_1E96F4F10;
  if (!qword_1E96F4F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F10);
  }
  return result;
}

unint64_t sub_1A74CDDB4()
{
  unint64_t result = qword_1E96F4F18;
  if (!qword_1E96F4F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F18);
  }
  return result;
}

unint64_t sub_1A74CDE0C()
{
  unint64_t result = qword_1E96F4F20;
  if (!qword_1E96F4F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F20);
  }
  return result;
}

unint64_t sub_1A74CDE64()
{
  unint64_t result = qword_1E96F4F28;
  if (!qword_1E96F4F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F28);
  }
  return result;
}

unint64_t sub_1A74CDEBC()
{
  unint64_t result = qword_1E96F4F30;
  if (!qword_1E96F4F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F30);
  }
  return result;
}

unint64_t sub_1A74CDF14()
{
  unint64_t result = qword_1EB702538;
  if (!qword_1EB702538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702538);
  }
  return result;
}

unint64_t sub_1A74CDF6C()
{
  unint64_t result = qword_1EB702530;
  if (!qword_1EB702530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702530);
  }
  return result;
}

unint64_t sub_1A74CDFC4()
{
  unint64_t result = qword_1EB702068[0];
  if (!qword_1EB702068[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB702068);
  }
  return result;
}

unint64_t sub_1A74CE01C()
{
  unint64_t result = qword_1EB702060;
  if (!qword_1EB702060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702060);
  }
  return result;
}

unint64_t sub_1A74CE074()
{
  unint64_t result = qword_1EB701FC8;
  if (!qword_1EB701FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701FC8);
  }
  return result;
}

unint64_t sub_1A74CE0CC()
{
  unint64_t result = qword_1EB701FC0;
  if (!qword_1EB701FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701FC0);
  }
  return result;
}

unint64_t sub_1A74CE124()
{
  unint64_t result = qword_1EB701FB8;
  if (!qword_1EB701FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701FB8);
  }
  return result;
}

unint64_t sub_1A74CE17C()
{
  unint64_t result = qword_1EB701FB0;
  if (!qword_1EB701FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701FB0);
  }
  return result;
}

unint64_t sub_1A74CE1D4()
{
  unint64_t result = qword_1EB701FE0;
  if (!qword_1EB701FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701FE0);
  }
  return result;
}

unint64_t sub_1A74CE22C()
{
  unint64_t result = qword_1EB701FD8;
  if (!qword_1EB701FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701FD8);
  }
  return result;
}

unint64_t sub_1A74CE284()
{
  unint64_t result = qword_1EB702020;
  if (!qword_1EB702020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702020);
  }
  return result;
}

unint64_t sub_1A74CE2DC()
{
  unint64_t result = qword_1EB702018;
  if (!qword_1EB702018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702018);
  }
  return result;
}

unint64_t sub_1A74CE334()
{
  unint64_t result = qword_1EB702050;
  if (!qword_1EB702050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702050);
  }
  return result;
}

unint64_t sub_1A74CE38C()
{
  unint64_t result = qword_1EB702048;
  if (!qword_1EB702048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702048);
  }
  return result;
}

unint64_t sub_1A74CE3E4()
{
  unint64_t result = qword_1EB702038;
  if (!qword_1EB702038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702038);
  }
  return result;
}

unint64_t sub_1A74CE43C()
{
  unint64_t result = qword_1EB702030;
  if (!qword_1EB702030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702030);
  }
  return result;
}

unint64_t sub_1A74CE494()
{
  unint64_t result = qword_1EB702008;
  if (!qword_1EB702008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702008);
  }
  return result;
}

unint64_t sub_1A74CE4EC()
{
  unint64_t result = qword_1EB702000;
  if (!qword_1EB702000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702000);
  }
  return result;
}

unint64_t sub_1A74CE544()
{
  unint64_t result = qword_1EB703108[0];
  if (!qword_1EB703108[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB703108);
  }
  return result;
}

unint64_t sub_1A74CE59C()
{
  unint64_t result = qword_1EB703100;
  if (!qword_1EB703100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703100);
  }
  return result;
}

unint64_t sub_1A74CE5F4()
{
  unint64_t result = qword_1EB701FF8;
  if (!qword_1EB701FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701FF8);
  }
  return result;
}

unint64_t sub_1A74CE64C()
{
  unint64_t result = qword_1EB701FF0;
  if (!qword_1EB701FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701FF0);
  }
  return result;
}

unint64_t sub_1A74CE6A4()
{
  unint64_t result = qword_1E96F4F38;
  if (!qword_1E96F4F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F38);
  }
  return result;
}

unint64_t sub_1A74CE6FC()
{
  unint64_t result = qword_1E96F4F40;
  if (!qword_1E96F4F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F40);
  }
  return result;
}

unint64_t sub_1A74CE754()
{
  unint64_t result = qword_1EB702EC8;
  if (!qword_1EB702EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702EC8);
  }
  return result;
}

unint64_t sub_1A74CE7AC()
{
  unint64_t result = qword_1EB702EC0;
  if (!qword_1EB702EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702EC0);
  }
  return result;
}

unint64_t sub_1A74CE804()
{
  unint64_t result = qword_1EB702EB0;
  if (!qword_1EB702EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702EB0);
  }
  return result;
}

unint64_t sub_1A74CE85C()
{
  unint64_t result = qword_1EB702EA8;
  if (!qword_1EB702EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702EA8);
  }
  return result;
}

unint64_t sub_1A74CE8B4()
{
  unint64_t result = qword_1E96F4F48;
  if (!qword_1E96F4F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F48);
  }
  return result;
}

unint64_t sub_1A74CE90C()
{
  unint64_t result = qword_1E96F4F50;
  if (!qword_1E96F4F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F50);
  }
  return result;
}

unint64_t sub_1A74CE964()
{
  unint64_t result = qword_1E96F4F58;
  if (!qword_1E96F4F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F58);
  }
  return result;
}

unint64_t sub_1A74CE9BC()
{
  unint64_t result = qword_1E96F4F60;
  if (!qword_1E96F4F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F60);
  }
  return result;
}

unint64_t sub_1A74CEA14()
{
  unint64_t result = qword_1E96F4F68;
  if (!qword_1E96F4F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F68);
  }
  return result;
}

unint64_t sub_1A74CEA6C()
{
  unint64_t result = qword_1E96F4F70;
  if (!qword_1E96F4F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F70);
  }
  return result;
}

unint64_t sub_1A74CEAC4()
{
  unint64_t result = qword_1E96F4F78;
  if (!qword_1E96F4F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F78);
  }
  return result;
}

unint64_t sub_1A74CEB1C()
{
  unint64_t result = qword_1E96F4F80;
  if (!qword_1E96F4F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F80);
  }
  return result;
}

unint64_t sub_1A74CEB74()
{
  unint64_t result = qword_1E96F4F88;
  if (!qword_1E96F4F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F88);
  }
  return result;
}

unint64_t sub_1A74CEBCC()
{
  unint64_t result = qword_1E96F4F90;
  if (!qword_1E96F4F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F90);
  }
  return result;
}

unint64_t sub_1A74CEC24()
{
  unint64_t result = qword_1E96F4F98;
  if (!qword_1E96F4F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4F98);
  }
  return result;
}

unint64_t sub_1A74CEC7C()
{
  unint64_t result = qword_1E96F4FA0;
  if (!qword_1E96F4FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4FA0);
  }
  return result;
}

unint64_t sub_1A74CECD4()
{
  unint64_t result = qword_1EB7023C8;
  if (!qword_1EB7023C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7023C8);
  }
  return result;
}

unint64_t sub_1A74CED2C()
{
  unint64_t result = qword_1EB7023C0;
  if (!qword_1EB7023C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7023C0);
  }
  return result;
}

unint64_t sub_1A74CED84()
{
  unint64_t result = qword_1EB702510;
  if (!qword_1EB702510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702510);
  }
  return result;
}

unint64_t sub_1A74CEDDC()
{
  unint64_t result = qword_1EB702508;
  if (!qword_1EB702508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702508);
  }
  return result;
}

unint64_t sub_1A74CEE34()
{
  unint64_t result = qword_1EB7024C8;
  if (!qword_1EB7024C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7024C8);
  }
  return result;
}

unint64_t sub_1A74CEE8C()
{
  unint64_t result = qword_1EB7024C0;
  if (!qword_1EB7024C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7024C0);
  }
  return result;
}

unint64_t sub_1A74CEEE4()
{
  unint64_t result = qword_1EB702498;
  if (!qword_1EB702498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702498);
  }
  return result;
}

unint64_t sub_1A74CEF3C()
{
  unint64_t result = qword_1EB702490;
  if (!qword_1EB702490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702490);
  }
  return result;
}

unint64_t sub_1A74CEF94()
{
  unint64_t result = qword_1EB7024B0;
  if (!qword_1EB7024B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7024B0);
  }
  return result;
}

unint64_t sub_1A74CEFEC()
{
  unint64_t result = qword_1EB7024A8;
  if (!qword_1EB7024A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7024A8);
  }
  return result;
}

unint64_t sub_1A74CF044()
{
  unint64_t result = qword_1EB702488;
  if (!qword_1EB702488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702488);
  }
  return result;
}

unint64_t sub_1A74CF09C()
{
  unint64_t result = qword_1EB702480;
  if (!qword_1EB702480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702480);
  }
  return result;
}

unint64_t sub_1A74CF0F4()
{
  unint64_t result = qword_1EB7047F0;
  if (!qword_1EB7047F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7047F0);
  }
  return result;
}

unint64_t sub_1A74CF14C()
{
  unint64_t result = qword_1EB7047E8;
  if (!qword_1EB7047E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7047E8);
  }
  return result;
}

unint64_t sub_1A74CF1A4()
{
  unint64_t result = qword_1E96F4FA8;
  if (!qword_1E96F4FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4FA8);
  }
  return result;
}

unint64_t sub_1A74CF1FC()
{
  unint64_t result = qword_1E96F4FB0;
  if (!qword_1E96F4FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4FB0);
  }
  return result;
}

unint64_t sub_1A74CF254()
{
  unint64_t result = qword_1E96F4FB8;
  if (!qword_1E96F4FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4FB8);
  }
  return result;
}

unint64_t sub_1A74CF2AC()
{
  unint64_t result = qword_1E96F4FC0;
  if (!qword_1E96F4FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4FC0);
  }
  return result;
}

unint64_t sub_1A74CF304()
{
  unint64_t result = qword_1E96F4FC8;
  if (!qword_1E96F4FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4FC8);
  }
  return result;
}

unint64_t sub_1A74CF35C()
{
  unint64_t result = qword_1E96F4FD0;
  if (!qword_1E96F4FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4FD0);
  }
  return result;
}

unint64_t sub_1A74CF3B4()
{
  unint64_t result = qword_1E96F4FD8;
  if (!qword_1E96F4FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4FD8);
  }
  return result;
}

unint64_t sub_1A74CF40C()
{
  unint64_t result = qword_1E96F4FE0;
  if (!qword_1E96F4FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4FE0);
  }
  return result;
}

unint64_t sub_1A74CF464()
{
  unint64_t result = qword_1E96F4FE8;
  if (!qword_1E96F4FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4FE8);
  }
  return result;
}

unint64_t sub_1A74CF4BC()
{
  unint64_t result = qword_1E96F4FF0;
  if (!qword_1E96F4FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4FF0);
  }
  return result;
}

unint64_t sub_1A74CF514()
{
  unint64_t result = qword_1E96F4FF8;
  if (!qword_1E96F4FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F4FF8);
  }
  return result;
}

unint64_t sub_1A74CF56C()
{
  unint64_t result = qword_1E96F5000;
  if (!qword_1E96F5000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5000);
  }
  return result;
}

unint64_t sub_1A74CF5C4()
{
  unint64_t result = qword_1E96F5008;
  if (!qword_1E96F5008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5008);
  }
  return result;
}

unint64_t sub_1A74CF61C()
{
  unint64_t result = qword_1E96F5010;
  if (!qword_1E96F5010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5010);
  }
  return result;
}

unint64_t sub_1A74CF674()
{
  unint64_t result = qword_1EB7024E0;
  if (!qword_1EB7024E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7024E0);
  }
  return result;
}

unint64_t sub_1A74CF6CC()
{
  unint64_t result = qword_1EB7024D8;
  if (!qword_1EB7024D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7024D8);
  }
  return result;
}

unint64_t sub_1A74CF724()
{
  unint64_t result = qword_1EB7032C8;
  if (!qword_1EB7032C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7032C8);
  }
  return result;
}

unint64_t sub_1A74CF77C()
{
  unint64_t result = qword_1EB7032C0;
  if (!qword_1EB7032C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7032C0);
  }
  return result;
}

unint64_t sub_1A74CF7D4()
{
  unint64_t result = qword_1EB7032E0;
  if (!qword_1EB7032E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7032E0);
  }
  return result;
}

unint64_t sub_1A74CF82C()
{
  unint64_t result = qword_1EB7032D8;
  if (!qword_1EB7032D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7032D8);
  }
  return result;
}

unint64_t sub_1A74CF884()
{
  unint64_t result = qword_1EB704810;
  if (!qword_1EB704810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704810);
  }
  return result;
}

unint64_t sub_1A74CF8DC()
{
  unint64_t result = qword_1EB704808;
  if (!qword_1EB704808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704808);
  }
  return result;
}

unint64_t sub_1A74CF934()
{
  unint64_t result = qword_1EB700D28;
  if (!qword_1EB700D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700D28);
  }
  return result;
}

unint64_t sub_1A74CF98C()
{
  unint64_t result = qword_1EB700D20;
  if (!qword_1EB700D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700D20);
  }
  return result;
}

unint64_t sub_1A74CF9E4()
{
  unint64_t result = qword_1EB704570;
  if (!qword_1EB704570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704570);
  }
  return result;
}

unint64_t sub_1A74CFA3C()
{
  unint64_t result = qword_1EB704568;
  if (!qword_1EB704568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704568);
  }
  return result;
}

unint64_t sub_1A74CFA94()
{
  unint64_t result = qword_1E96F5018;
  if (!qword_1E96F5018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5018);
  }
  return result;
}

unint64_t sub_1A74CFAEC()
{
  unint64_t result = qword_1E96F5020;
  if (!qword_1E96F5020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5020);
  }
  return result;
}

unint64_t sub_1A74CFB44()
{
  unint64_t result = qword_1E96F5028;
  if (!qword_1E96F5028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5028);
  }
  return result;
}

unint64_t sub_1A74CFB9C()
{
  unint64_t result = qword_1E96F5030;
  if (!qword_1E96F5030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5030);
  }
  return result;
}

unint64_t sub_1A74CFBF4()
{
  unint64_t result = qword_1E96F5038;
  if (!qword_1E96F5038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5038);
  }
  return result;
}

unint64_t sub_1A74CFC4C()
{
  unint64_t result = qword_1E96F5040;
  if (!qword_1E96F5040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5040);
  }
  return result;
}

unint64_t sub_1A74CFCA4()
{
  unint64_t result = qword_1E96F5048;
  if (!qword_1E96F5048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5048);
  }
  return result;
}

unint64_t sub_1A74CFCFC()
{
  unint64_t result = qword_1E96F5050;
  if (!qword_1E96F5050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5050);
  }
  return result;
}

unint64_t sub_1A74CFD54()
{
  unint64_t result = qword_1E96F5058;
  if (!qword_1E96F5058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5058);
  }
  return result;
}

unint64_t sub_1A74CFDAC()
{
  unint64_t result = qword_1E96F5060;
  if (!qword_1E96F5060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5060);
  }
  return result;
}

unint64_t sub_1A74CFE04()
{
  unint64_t result = qword_1EB702600;
  if (!qword_1EB702600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702600);
  }
  return result;
}

unint64_t sub_1A74CFE5C()
{
  unint64_t result = qword_1EB7025F8;
  if (!qword_1EB7025F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7025F8);
  }
  return result;
}

unint64_t sub_1A74CFEB4()
{
  unint64_t result = qword_1EB7045B8;
  if (!qword_1EB7045B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7045B8);
  }
  return result;
}

unint64_t sub_1A74CFF0C()
{
  unint64_t result = qword_1EB7045B0;
  if (!qword_1EB7045B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7045B0);
  }
  return result;
}

unint64_t sub_1A74CFF64()
{
  unint64_t result = qword_1EB704590;
  if (!qword_1EB704590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704590);
  }
  return result;
}

unint64_t sub_1A74CFFBC()
{
  unint64_t result = qword_1EB704588;
  if (!qword_1EB704588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704588);
  }
  return result;
}

unint64_t sub_1A74D0010()
{
  unint64_t result = qword_1EB704598;
  if (!qword_1EB704598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704598);
  }
  return result;
}

uint64_t sub_1A74D0064(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x53676E6974726F73 && a2 == 0xEC000000656C7974;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x706D6F43776F6873 && a2 == 0xED0000646574656CLL || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6F43746E756F63 && a2 == 0xEE00646574656C70 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A75A40A0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6275536863746566 && a2 == 0xED0000736B736174)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A74D0300(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6562614C6C6C61 && a2 == 0xE900000000000073;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C6562614C6F6ELL && a2 == 0xE800000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6581857 && a2 == 0xE300000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 29295 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A74D04A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564756C636E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6564756C637865 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D0580(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44497463656A626FLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C706D6F437369 && a2 == 0xEB00000000646574 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x436B736174627573 && a2 == 0xEC000000746E756FLL || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736B736174627573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A74D076C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C706D6F636E69 && a2 == 0xEA00000000006574)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D0878(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEE00746E756F4373 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001A75A40C0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A75A40F0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A75A4110)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A74D0AA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44497473696CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E7473696CLL && a2 == 0xE800000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6C6F437473696CLL && a2 == 0xE900000000000072 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A75A4130)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A74D0CC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7370756F7267 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A75A4150 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A75A4170 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A75A40F0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A75A4110)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A74D0EB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65646F4D74616C66 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A4190)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D0FB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646F4D737473696CLL && a2 == 0xEA00000000006C65;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A75A41B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D10AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65646F4D74616C66 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A41D0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A75A41F0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001A75A4210 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D53646567676174 && a2 == 0xEF7473694C747261 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A4230)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1A74D133C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A75A4250 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A4230)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A74D1484(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001A75A4270 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x664F6C6C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D156C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697474616D726F66 && a2 == 0xEF656C797453676ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D1674(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001A75A4290 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A75A42B0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A75A42D0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A75A42F0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001A75A4310)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A74D1868(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E6F6974636573 && a2 == 0xE900000000000064;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6E6F6974636573 && a2 == 0xEB00000000737365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D1980(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x496E6F6974636573 && a2 == 0xE900000000000044;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6163696E6F6E6163 && a2 == 0xED0000656D614E6CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A74D1B20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D1C10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736E6F6974636573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEE00746E756F4373 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001A75A40C0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A75A40F0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A75A4110)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A74D1E3C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736E6F6974636573 && a2 == 0xED00006C65646F4DLL;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953720684 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D1F44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736E6F6974636573 && a2 == 0xED00006C65646F4DLL;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73694C7472616D73 && a2 == 0xE900000000000074 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A4230)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A74D20C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736E6F6974636573 && a2 == 0xED00006C65646F4DLL;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A75A4250 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A4230)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A74D2238(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72616C75676572 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D536D6F74737563 && a2 == 0xEF7473694C747261 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797265636F7267 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A74D23B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44497473696CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E7473696CLL && a2 == 0xE800000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6C6F437473696CLL && a2 == 0xE900000000000072 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657079547473696CLL && a2 == 0xE800000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E6F6974636573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A74D25D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737473696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A75A4150 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A75A4170 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A75A40F0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A75A4110)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A74D27C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746365537473696CLL && a2 == 0xEC000000736E6F69;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70756F7267 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D28CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7961646F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F5465726F666562 && a2 == 0xEB00000000796164 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6C417961646F74 && a2 == 0xEB00000000796144 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E696E726F6DLL && a2 == 0xE700000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6F6E7265746661 && a2 == 0xE90000000000006ELL || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746867696E6F74 && a2 == 0xE700000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x79627261656ELL && a2 == 0xE600000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7974706D65 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1A74D2C2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x70795470756F7267 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D2D30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7370756F7267 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEE00746E756F4373 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C746E6572727563 && a2 == 0xEF6E6F697461636FLL || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A75A40F0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A75A4110 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x616D537961646F74 && a2 == 0xEE007473694C7472)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1A74D300C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7961646F547369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A74D3160(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7370756F7267 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A75A4150 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A75A40F0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A75A4110)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A74D32F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65754474736170 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657669467478656ELL && a2 == 0xEC00000073796144 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7954788 && a2 == 0xE300000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x68746E6F6DLL && a2 == 0xE500000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1918985593 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A74D3508(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656465654E7361 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737961776C61 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D35F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72616C75676572 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746361706D6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D36E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D37D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7954788 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6576655374736170 && a2 == 0xED0000737961446ELL || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7269685474736170 && a2 == 0xEE00737961447974 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x68746E6F6DLL && a2 == 0xE500000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1918985593 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A74D3A18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1937334628 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D3B08(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001A75A4340 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1937334628 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74D3BE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7374656B637562 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEE00746E756F4373 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A75A40F0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A75A4110)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A74D3DBC()
{
  unint64_t v0 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1A74D3E08()
{
  unint64_t result = qword_1EB7045C0;
  if (!qword_1EB7045C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7045C0);
  }
  return result;
}

uint64_t sub_1A74D3E5C()
{
  unint64_t v0 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

unint64_t sub_1A74D3EA8()
{
  unint64_t result = qword_1EB704688;
  if (!qword_1EB704688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704688);
  }
  return result;
}

uint64_t sub_1A74D3EFC()
{
  unint64_t v0 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1A74D3F44()
{
  unint64_t result = qword_1EB7045A0;
  if (!qword_1EB7045A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7045A0);
  }
  return result;
}

unint64_t sub_1A74D3F98()
{
  unint64_t result = qword_1EB702540;
  if (!qword_1EB702540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702540);
  }
  return result;
}

uint64_t sub_1A74D40A8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1A72D2D20(0, v1, 0);
  uint64_t v2 = v23;
  uint64_t result = sub_1A73ABE8C(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    uint64_t result = swift_beginAccess();
    uint64_t v13 = *(void *)(v12 + 120);
    unint64_t v15 = *(void *)(v23 + 16);
    unint64_t v14 = *(void *)(v23 + 24);
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_1A72D2D20(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v23 + 16) = v15 + 1;
    *(void *)(v23 + 8 * v15 + 32) = v13;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v16 = *(void *)(v8 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v8 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A74D42BC()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F5068);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F5068);
  if (qword_1EB7042A8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F18);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t RDIntentClusterModel.TuningSnapshot.bestK.getter()
{
  return *(void *)v0;
}

uint64_t RDIntentClusterModel.TuningSnapshot.intentionalWords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RDIntentClusterModel.TuningSnapshot.kmeansTuningHistory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v2 = *(void *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t RDIntentClusterModel.ModelSnapshot.intentionalWords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RDIntentClusterModel.ModelSnapshot.kmeansMetrics.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = v1[1];
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

unint64_t static RDIntentClusterModel.modelFilename.getter()
{
  return 0xD000000000000029;
}

uint64_t static RDIntentClusterModel.modelByTraining(_:writeTo:k:embedding:randomGenerator:filename:)(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v120 = a8;
  uint64_t v119 = a7;
  uint64_t v124 = a3;
  uint64_t v115 = a1;
  uint64_t v122 = sub_1A75719C0();
  uint64_t v121 = *(void *)(v122 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v122);
  uint64_t v116 = (char *)v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v117 = (char *)v108 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  unint64_t v20 = (void (*)(uint64_t, uint64_t, Class))((char *)v108 - v19);
  MEMORY[0x1F4188790](v18);
  char v123 = (char *)v108 - v21;
  unint64_t v22 = sub_1A7341B8C(a2);
  LOBYTE(v131) = 1;
  type metadata accessor for PointCloud();
  swift_allocObject();
  uint64_t v23 = PointCloud.init(points:distanceCalculator:)(v22, (char *)&v131);
  swift_beginAccess();
  if (*(void *)(v23 + 40) < a4)
  {
    uint64_t v24 = self;
    *(void *)&unsigned long long v131 = 0;
    *((void *)&v131 + 1) = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    uint64_t v130 = *(void *)(v23 + 40);
    sub_1A7573BC0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    char v25 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    [v24 internalErrorWithDebugDescription:v25];

    swift_willThrow();
LABEL_7:
    swift_release();
    return (uint64_t)v24;
  }
  if (qword_1E96F08D0 != -1) {
LABEL_51:
  }
    swift_once();
  uint64_t v26 = sub_1A7571E90();
  uint64_t v118 = __swift_project_value_buffer(v26, (uint64_t)qword_1E96F5068);
  uint64_t v24 = sub_1A7571E80();
  os_log_type_t v27 = sub_1A7572FF0();
  BOOL v28 = os_log_type_enabled(v24, v27);
  uint64_t v127 = a5;
  if (v28)
  {
    char v29 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v29 = 134349056;
    *(void *)&unsigned long long v131 = a4;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v24, v27, "running k-Mean with k = %{public}ld", v29, 0xCu);
    MEMORY[0x1AD0CD330](v29, -1, -1);
  }

  sub_1A72B21AC(a6, (uint64_t)&v131);
  type metadata accessor for KMeans();
  swift_allocObject();
  swift_retain();
  char v30 = KMeans.init(k:pointCloud:maxIter:tolerance:randomGenerator:)(a4, v23, 100, (uint64_t)&v131, 0.0001);
  if (v9) {
    goto LABEL_7;
  }
  uint64_t v32 = v30;
  uint64_t v111 = 0;
  swift_retain();
  uint64_t v33 = sub_1A7571E80();
  uint64_t v34 = sub_1A7572FF0();
  BOOL v35 = os_log_type_enabled(v33, (os_log_type_t)v34);
  uint64_t v114 = v32;
  if (v35)
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 134349056;
    swift_beginAccess();
    *(void *)&unsigned long long v131 = v114[15];
    uint64_t v32 = v114;
    sub_1A7573250();
    swift_release();
    _os_log_impl(&dword_1A72A1000, v33, (os_log_type_t)v34, "k-Mean mse: %{public}f", v36, 0xCu);
    MEMORY[0x1AD0CD330](v36, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v110 = v23;
  uint64_t v37 = *(void *)(v32[12] + 16);
  v108[0] = v20;
  uint64_t v126 = v37;
  if (!v37)
  {
    long long v64 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v128 = MEMORY[0x1E4FBC868];
LABEL_31:
    swift_beginAccess();
    uint64_t v67 = v32 + 13;
    uint64_t v65 = v32[13];
    uint64_t v66 = v67[1];
    uint64_t v68 = v64[2];
    uint64_t v69 = v127;
    uint64_t v129 = v64;
    if (v68 && *(void *)(v66 + 16) && *(void *)(v65 + 16))
    {
      uint64_t v70 = v65;
      uint64_t v72 = v64[4];
      unint64_t v71 = v64[5];
      uint64_t v113 = v70 + 32;
      uint64_t v73 = v66;
      uint64_t v74 = *(void *)(v66 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v125 = v70;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v75 = 0;
      char v76 = v64 + 7;
      uint64_t v126 = v73;
      uint64_t v112 = v73 + 40;
      *(void *)&long long v77 = 136315650;
      long long v109 = v77;
      v108[1] = MEMORY[0x1E4FBC840] + 8;
      while (1)
      {
        uint64_t v78 = *(void *)(v113 + 8 * v75);
        swift_bridgeObjectRetain();
        uint64_t v79 = sub_1A7571E80();
        os_log_type_t v80 = sub_1A7572FF0();
        if (os_log_type_enabled(v79, v80))
        {
          uint64_t v81 = swift_slowAlloc();
          uint64_t v82 = swift_slowAlloc();
          *(void *)&unsigned long long v131 = v82;
          *(_DWORD *)uint64_t v81 = v109;
          swift_bridgeObjectRetain();
          *(void *)(v81 + 4) = sub_1A72D1730(v72, v71, (uint64_t *)&v131);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v81 + 12) = 2050;
          *(void *)(v81 + 14) = v74;
          *(_WORD *)(v81 + 22) = 2050;
          *(void *)(v81 + 24) = v78;
          _os_log_impl(&dword_1A72A1000, v79, v80, "Cluster %s has %{public}ld samples with variance %{public}f", (uint8_t *)v81, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1AD0CD330](v82, -1, -1);
          uint64_t v83 = v81;
          uint64_t v69 = v127;
          MEMORY[0x1AD0CD330](v83, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        unint64_t v84 = v75 + 1;
        unint64_t v85 = v129[2];
        if (v75 + 1 == v85) {
          break;
        }
        if (v75 + 1 >= v85)
        {
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        unint64_t v86 = *(void *)(v126 + 16);
        if (v84 == v86) {
          break;
        }
        if (v84 >= v86) {
          goto LABEL_53;
        }
        unint64_t v87 = *(void *)(v125 + 16);
        if (v84 == v87) {
          break;
        }
        uint64_t v72 = *(v76 - 1);
        unint64_t v71 = *v76;
        uint64_t v74 = *(void *)(v112 + 8 * v75);
        swift_bridgeObjectRetain();
        v76 += 2;
        ++v75;
        if (v84 >= v87)
        {
          __break(1u);
          goto LABEL_45;
        }
      }
    }
    else
    {
LABEL_45:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v127 = 0x80000001A75A4360;
    swift_bridgeObjectRetain();
    uint64_t v88 = v123;
    sub_1A7571910();
    swift_bridgeObjectRelease();
    unint64_t v89 = sub_1A74D6944();
    uint64_t v90 = v111;
    sub_1A74D6984(v128);
    swift_bridgeObjectRelease();
    uint64_t v24 = v69;
    uint64_t isa = (uint64_t)v69[3].isa;
    Class v92 = v69[4].isa;
    __swift_project_boxed_opaque_existential_1(v24, isa);
    char v93 = (void *)(*((uint64_t (**)(uint64_t, Class))v92 + 1))(isa, v92);
    uint64_t v94 = (uint64_t)v24[3].isa;
    Class v95 = v24[4].isa;
    __swift_project_boxed_opaque_existential_1(v24, v94);
    (*((void (**)(uint64_t, Class))v95 + 2))(v94, v95);
    uint64_t v128 = v89;
    sub_1A7572F30();
    swift_release();
    if (v90)
    {
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v121 + 8))(v88, v122);
      swift_bridgeObjectRelease();
    }
    else
    {

      uint64_t v96 = v121;
      char v97 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 16);
      uint64_t v98 = v108[0];
      uint64_t v99 = v122;
      v97((char *)v108[0], v124, v122);
      sub_1A72B21AC((uint64_t)v24, (uint64_t)&v131);
      char v100 = v117;
      sub_1A7571910();
      uint64_t v101 = (uint64_t)v116;
      v97(v116, (uint64_t)v100, v99);
      char v102 = (objc_class *)sub_1A74D655C(v101);
      char v103 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v103(v98, v99);
      v103((uint64_t)v100, v99);
      uint64_t v24 = swift_allocObject();
      v24[2].uint64_t isa = v102;
      sub_1A735CEA4((long long *)&v131, (uint64_t)&v24[3]);
      v103((uint64_t)v123, v99);
      swift_release();
      uint64_t v104 = v114[13];
      uint64_t v105 = v114[14];
      uint64_t v106 = v114[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v107 = v115;
      *uint64_t v115 = v129;
      v107[1] = v104;
      v107[2] = v105;
      v107[3] = v106;
    }
    return (uint64_t)v24;
  }
  uint64_t v38 = swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  uint64_t v129 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v128 = MEMORY[0x1E4FBC868];
  uint64_t v9 = 32;
  uint64_t v125 = v38;
  while (1)
  {
    a4 = *(void *)(v38 + v9);
    *(void *)&unsigned long long v131 = v23;
    swift_retain();
    *(void *)&unsigned long long v131 = sub_1A7573BC0();
    *((void *)&v131 + 1) = v40;
    swift_bridgeObjectRetain();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    unint64_t v41 = *((void *)&v131 + 1);
    unint64_t v42 = v131;
    uint64_t v43 = (uint64_t)v127[3].isa;
    Class v44 = v127[4].isa;
    __swift_project_boxed_opaque_existential_1(v127, v43);
    unint64_t v20 = (void (*)(uint64_t, uint64_t, Class))*((void *)v44 + 7);
    uint64_t v45 = swift_retain();
    v20(v45, v43, v44);
    swift_release();
    unsigned long long v131 = __PAIR128__(v41, v42);
    swift_bridgeObjectRetain();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = *((void *)&v131 + 1);
    a5 = v131;
    swift_bridgeObjectRetain();
    uint64_t v47 = v129;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v47 = sub_1A72AC148(0, v47[2] + 1, 1, v47);
    }
    unint64_t v49 = v47[2];
    unint64_t v48 = v47[3];
    if (v49 >= v48 >> 1) {
      uint64_t v47 = sub_1A72AC148((void *)(v48 > 1), v49 + 1, 1, v47);
    }
    v47[2] = v49 + 1;
    uint64_t v129 = v47;
    uint64_t v50 = &v47[2 * v49];
    v50[4] = a5;
    v50[5] = v46;
    swift_retain();
    uint64_t v51 = v128;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&unsigned long long v131 = v51;
    a6 = sub_1A72B2210((uint64_t)a5, v46);
    uint64_t v54 = *(void *)(v51 + 16);
    BOOL v55 = (v53 & 1) == 0;
    uint64_t v56 = v54 + v55;
    if (__OFADD__(v54, v55))
    {
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    unint64_t v20 = v53;
    if (*(void *)(v51 + 24) < v56) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1A72BE7BC();
    }
LABEL_26:
    long long v59 = (void *)v131;
    uint64_t v128 = v131;
    if (v20)
    {
      uint64_t v39 = *(void *)(v131 + 56);
      swift_release();
      *(void *)(v39 + 8 * a6) = a4;
    }
    else
    {
      *(void *)(v131 + 8 * (a6 >> 6) + 64) |= 1 << a6;
      char v60 = (NSObject **)(v59[6] + 16 * a6);
      *char v60 = a5;
      v60[1] = v46;
      *(void *)(v59[7] + 8 * a6) = a4;
      uint64_t v61 = v59[2];
      BOOL v62 = __OFADD__(v61, 1);
      uint64_t v63 = v61 + 1;
      if (v62) {
        goto LABEL_50;
      }
      id v59[2] = v63;
      swift_bridgeObjectRetain();
    }
    ++v23;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 += 24;
    uint64_t v38 = v125;
    if (v126 == v23)
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = v114;
      long long v64 = v129;
      goto LABEL_31;
    }
  }
  sub_1A72BAAB0(v56, isUniquelyReferenced_nonNull_native);
  unint64_t v57 = sub_1A72B2210((uint64_t)a5, v46);
  if ((v20 & 1) == (v58 & 1))
  {
    a6 = v57;
    goto LABEL_26;
  }
LABEL_54:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t RDIntentClusterModel.__allocating_init(url:embedding:)(uint64_t a1, long long *a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_1A75719C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v19 - v12;
  sub_1A7571910();
  sub_1A74D6944();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  id v14 = sub_1A74D655C((uint64_t)v11);
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v15(a1, v7);
    v15((uint64_t)v13, v7);
  }
  else
  {
    id v16 = v14;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v17(a1, v7);
    v17((uint64_t)v13, v7);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v16;
    sub_1A735CEA4(a2, v4 + 24);
  }
  return v4;
}

uint64_t static RDIntentClusterModel.modelByTuning(_:writeTo:minK:maxK:maxIter:embedding:randomGenerator:filename:)(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v165 = a7;
  uint64_t v160 = a3;
  uint64_t v158 = sub_1A75719C0();
  uint64_t v155 = *(void *)(v158 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v158);
  uint64_t v151 = (char *)v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v153 = (char *)v142 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v152 = (char *)v142 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v156 = (char *)v142 - v20;
  uint64_t v162 = sub_1A7571B60();
  uint64_t v21 = *(void *)(v162 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v162);
  uint64_t v24 = (char *)v142 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v161 = (char *)v142 - v25;
  sub_1A7571B50();
  LOBYTE(v169) = 1;
  type metadata accessor for PointCloud();
  swift_allocObject();
  unint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = PointCloud.init(points:distanceCalculator:)(v26, (char *)&v169);
  swift_beginAccess();
  uint64_t v28 = *(void *)(v27 + 40);
  if (__OFADD__(v28, 1)) {
    goto LABEL_76;
  }
  uint64_t v150 = a1;
  if (v28 >= (uint64_t)a4) {
    uint64_t v29 = (uint64_t)a4;
  }
  else {
    uint64_t v29 = v28;
  }
  if (v28 + 1 >= a5) {
    uint64_t v30 = a5;
  }
  else {
    uint64_t v30 = v28 + 1;
  }
  sub_1A72B21AC(a8, (uint64_t)&v169);
  type metadata accessor for KMeansAutoTuner();
  swift_allocObject();
  uint64_t v31 = swift_retain();
  uint64_t v32 = v167;
  uint64_t v34 = KMeansAutoTuner.init(pointCloud:mathod:minK:maxK:maxIter:randomGenerator:)(v31, v33, v29, v30, a6, (uint64_t)&v169);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v161, v162);
    swift_release();
    return (uint64_t)a4;
  }
  else
  {
    uint64_t v167 = a4;
    uint64_t v157 = (void *)v34;
    uint64_t v154 = 0;
    sub_1A7571B50();
    sub_1A7571A90();
    uint64_t v8 = v35;
    a8 = *(void *)(v21 + 8);
    uint64_t v147 = v21 + 8;
    ((void (*)(char *, uint64_t))a8)(v24, v162);
    if (qword_1E96F08D0 != -1) {
      goto LABEL_80;
    }
    while (1)
    {
      uint64_t v36 = sub_1A7571E90();
      uint64_t v159 = __swift_project_value_buffer(v36, (uint64_t)qword_1E96F5068);
      uint64_t v37 = sub_1A7571E80();
      os_log_type_t v38 = sub_1A7572FF0();
      BOOL v39 = os_log_type_enabled(v37, v38);
      uint64_t v40 = v157;
      uint64_t v41 = a5;
      if (v39)
      {
        unint64_t v42 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v42 = 134349056;
        *(void *)&unsigned long long v169 = v8;
        sub_1A7573250();
        _os_log_impl(&dword_1A72A1000, v37, v38, "Intent Cluster Model auto tuned in %{public}f seconds", v42, 0xCu);
        MEMORY[0x1AD0CD330](v42, -1, -1);
      }

      swift_retain();
      uint64_t v43 = sub_1A7571E80();
      os_log_type_t v44 = sub_1A7572FF0();
      BOOL v45 = os_log_type_enabled(v43, v44);
      uint64_t v46 = v167;
      uint64_t v145 = (void (*)(char *, uint64_t))a8;
      if (v45)
      {
        uint64_t v47 = swift_slowAlloc();
        *(_DWORD *)uint64_t v47 = 134349568;
        *(void *)&unsigned long long v169 = v46;
        sub_1A7573250();
        *(_WORD *)(v47 + 12) = 2050;
        *(void *)&unsigned long long v169 = v41;
        sub_1A7573250();
        *(_WORD *)(v47 + 22) = 2050;
        *(void *)&unsigned long long v169 = v40[2];
        sub_1A7573250();
        swift_release();
        _os_log_impl(&dword_1A72A1000, v43, v44, "auto tuned k-Mean with k in [%{public}ld, %{public}ld), found best k = %{public}ld", (uint8_t *)v47, 0x20u);
        MEMORY[0x1AD0CD330](v47, -1, -1);
      }
      else
      {

        swift_release();
      }
      swift_retain_n();
      unint64_t v48 = sub_1A7571E80();
      os_log_type_t v49 = sub_1A7572FF0();
      BOOL v50 = os_log_type_enabled(v48, v49);
      uint64_t v146 = v27;
      if (v50)
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        *(void *)&unsigned long long v169 = v52;
        *(_DWORD *)uint64_t v51 = 136446210;
        uint64_t v53 = swift_bridgeObjectRetain();
        uint64_t v54 = v154;
        uint64_t v55 = sub_1A74D40A8(v53);
        uint64_t v154 = v54;
        swift_bridgeObjectRelease();
        uint64_t v56 = MEMORY[0x1AD0CAC20](v55, MEMORY[0x1E4FBB3D0]);
        unint64_t v58 = v57;
        uint64_t v40 = v157;
        swift_bridgeObjectRelease();
        uint64_t v168 = sub_1A72D1730(v56, v58, (uint64_t *)&v169);
        sub_1A7573250();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v48, v49, "Mean Squared Error History: %{public}s", v51, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v52, -1, -1);
        MEMORY[0x1AD0CD330](v51, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      a5 = (uint64_t)v165;
      uint64_t v59 = v40[3];
      if (!*(void *)(v59 + 16)) {
        break;
      }
      unint64_t v60 = sub_1A72B23E4(v40[2]);
      if ((v61 & 1) == 0) {
        goto LABEL_82;
      }
      BOOL v62 = *(void **)(*(void *)(v59 + 56) + 8 * v60);
      uint64_t v63 = (void *)v62[12];
      uint64_t v164 = (void (*)(char *, uint64_t))v63[2];
      uint64_t v148 = v62;
      if (v164)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        a8 = 0;
        uint64_t v167 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v166 = MEMORY[0x1E4FBC868];
        a5 = 32;
        uint64_t v163 = v63;
        while (1)
        {
          uint64_t v65 = *(void *)((char *)v63 + a5);
          *(void *)&unsigned long long v169 = a8;
          swift_retain();
          *(void *)&unsigned long long v169 = sub_1A7573BC0();
          *((void *)&v169 + 1) = v66;
          swift_bridgeObjectRetain();
          sub_1A7572740();
          swift_bridgeObjectRelease();
          unint64_t v67 = *((void *)&v169 + 1);
          unint64_t v68 = v169;
          uint64_t v69 = v165[3];
          uint64_t v70 = v165[4];
          __swift_project_boxed_opaque_existential_1(v165, v69);
          unint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 56);
          uint64_t v72 = swift_retain();
          v71(v72, v69, v70);
          swift_release();
          unsigned long long v169 = __PAIR128__(v67, v68);
          swift_bridgeObjectRetain();
          sub_1A7572740();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v27 = *((void *)&v169 + 1);
          uint64_t v73 = v169;
          swift_bridgeObjectRetain();
          uint64_t v74 = v167;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v74 = sub_1A72AC148(0, v74[2] + 1, 1, v74);
          }
          unint64_t v76 = v74[2];
          unint64_t v75 = v74[3];
          if (v76 >= v75 >> 1) {
            uint64_t v74 = sub_1A72AC148((void *)(v75 > 1), v76 + 1, 1, v74);
          }
          v74[2] = v76 + 1;
          uint64_t v167 = v74;
          long long v77 = &v74[2 * v76];
          v77[4] = v73;
          v77[5] = v27;
          swift_retain();
          uint64_t v78 = v166;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&unsigned long long v169 = v78;
          unint64_t v81 = sub_1A72B2210(v73, v27);
          uint64_t v82 = *(void *)(v78 + 16);
          BOOL v83 = (v80 & 1) == 0;
          uint64_t v84 = v82 + v83;
          if (__OFADD__(v82, v83)) {
            break;
          }
          char v85 = v80;
          if (*(void *)(v78 + 24) >= v84)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1A72BE7BC();
            }
          }
          else
          {
            sub_1A72BAAB0(v84, isUniquelyReferenced_nonNull_native);
            unint64_t v86 = sub_1A72B2210(v73, v27);
            if ((v85 & 1) != (v87 & 1)) {
              goto LABEL_84;
            }
            unint64_t v81 = v86;
          }
          uint64_t v88 = (void *)v169;
          uint64_t v166 = v169;
          if (v85)
          {
            uint64_t v64 = *(void *)(v169 + 56);
            swift_release();
            *(void *)(v64 + 8 * v81) = v65;
          }
          else
          {
            *(void *)(v169 + 8 * (v81 >> 6) + 64) |= 1 << v81;
            unint64_t v89 = (uint64_t *)(v88[6] + 16 * v81);
            uint64_t *v89 = v73;
            v89[1] = v27;
            *(void *)(v88[7] + 8 * v81) = v65;
            uint64_t v90 = v88[2];
            BOOL v91 = __OFADD__(v90, 1);
            uint64_t v92 = v90 + 1;
            if (v91) {
              goto LABEL_75;
            }
            v88[2] = v92;
            swift_bridgeObjectRetain();
          }
          ++a8;
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a5 += 24;
          uint64_t v63 = v163;
          if (v164 == (void (*)(char *, uint64_t))a8)
          {
            swift_bridgeObjectRelease();
            a5 = (uint64_t)v165;
            char v93 = v167;
            BOOL v62 = v148;
            goto LABEL_40;
          }
        }
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
      }
      else
      {
        swift_retain();
        char v93 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v166 = MEMORY[0x1E4FBC868];
LABEL_40:
        swift_beginAccess();
        uint64_t v94 = (void *)v62[13];
        uint64_t v95 = v62[14];
        uint64_t v96 = v93[2];
        uint64_t v167 = v93;
        if (v96 && *(void *)(v95 + 16) && v94[2])
        {
          uint64_t v97 = v93[4];
          uint64_t v27 = v93[5];
          uint64_t v163 = v94 + 4;
          uint64_t v98 = *(void *)(v95 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v164 = (void (*)(char *, uint64_t))v94;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          a8 = 0;
          a5 = (uint64_t)(v93 + 7);
          uint64_t v149 = v95 + 40;
          *(void *)&long long v99 = 136315650;
          long long v143 = v99;
          v142[1] = MEMORY[0x1E4FBC840] + 8;
          uint64_t v144 = v95;
          while (1)
          {
            uint64_t v8 = v163[a8];
            swift_bridgeObjectRetain();
            char v100 = sub_1A7571E80();
            os_log_type_t v101 = sub_1A7572FF0();
            if (os_log_type_enabled(v100, v101))
            {
              uint64_t v102 = swift_slowAlloc();
              uint64_t v103 = swift_slowAlloc();
              *(void *)&unsigned long long v169 = v103;
              *(_DWORD *)uint64_t v102 = v143;
              swift_bridgeObjectRetain();
              *(void *)(v102 + 4) = sub_1A72D1730(v97, v27, (uint64_t *)&v169);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v102 + 12) = 2050;
              *(void *)(v102 + 14) = v98;
              *(_WORD *)(v102 + 22) = 2050;
              *(void *)(v102 + 24) = v8;
              _os_log_impl(&dword_1A72A1000, v100, v101, "Cluster %s has %{public}ld samples with variance %{public}f", (uint8_t *)v102, 0x20u);
              swift_arrayDestroy();
              uint64_t v104 = v103;
              uint64_t v95 = v144;
              MEMORY[0x1AD0CD330](v104, -1, -1);
              MEMORY[0x1AD0CD330](v102, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            unint64_t v105 = a8 + 1;
            unint64_t v106 = v167[2];
            if (a8 + 1 == v106) {
              break;
            }
            if (a8 + 1 >= v106) {
              goto LABEL_77;
            }
            unint64_t v107 = *(void *)(v95 + 16);
            if (v105 == v107) {
              break;
            }
            if (v105 >= v107) {
              goto LABEL_78;
            }
            unint64_t v108 = *((void *)v164 + 2);
            if (v105 == v108) {
              break;
            }
            uint64_t v97 = *(void *)(a5 - 8);
            uint64_t v27 = *(void *)a5;
            uint64_t v98 = *(void *)(v149 + 8 * a8);
            swift_bridgeObjectRetain();
            a5 += 16;
            ++a8;
            if (v105 >= v108)
            {
              __break(1u);
              goto LABEL_54;
            }
          }
          a5 = (uint64_t)v165;
        }
        else
        {
LABEL_54:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v165 = (void *)0x80000001A75A4360;
        swift_bridgeObjectRetain();
        long long v109 = v156;
        sub_1A7571910();
        swift_bridgeObjectRelease();
        unint64_t v110 = sub_1A74D6944();
        uint64_t v111 = v154;
        sub_1A74D6984(v166);
        swift_bridgeObjectRelease();
        a4 = (void *)a5;
        uint64_t v112 = *(void *)(a5 + 24);
        uint64_t v113 = a4[4];
        __swift_project_boxed_opaque_existential_1(a4, v112);
        uint64_t v114 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v113 + 8))(v112, v113);
        uint64_t v115 = a4[3];
        uint64_t v116 = a4[4];
        __swift_project_boxed_opaque_existential_1(a4, v115);
        (*(void (**)(uint64_t, uint64_t))(v116 + 16))(v115, v116);
        uint64_t v166 = v110;
        sub_1A7572F30();
        if (v111)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(char *, uint64_t))(v155 + 8))(v109, v158);
          swift_bridgeObjectRelease();
          v145(v161, v162);
          return (uint64_t)a4;
        }
        swift_release();

        uint64_t v118 = v155;
        uint64_t v119 = *(void (**)(char *, uint64_t, uint64_t))(v155 + 16);
        uint64_t v120 = v152;
        uint64_t v121 = v158;
        v119(v152, v160, v158);
        sub_1A72B21AC((uint64_t)a4, (uint64_t)&v169);
        uint64_t v122 = v153;
        sub_1A7571910();
        uint64_t v123 = (uint64_t)v151;
        v119(v151, (uint64_t)v122, v121);
        id v124 = sub_1A74D655C(v123);
        uint64_t v154 = 0;
        uint64_t v125 = v157;
        id v126 = v124;
        uint64_t v128 = *(void (**)(char *, uint64_t))(v118 + 8);
        uint64_t v27 = v118 + 8;
        uint64_t v127 = v128;
        v128(v120, v121);
        v128(v122, v121);
        a4 = (void *)swift_allocObject();
        a4[2] = v126;
        sub_1A735CEA4((long long *)&v169, (uint64_t)(a4 + 3));
        uint64_t v129 = v125[4];
        a8 = v125[5];
        if (a8 < v129) {
          goto LABEL_83;
        }
        uint64_t v165 = (void *)v125[2];
        uint64_t v166 = v129;
        if (v129 == a8)
        {
          swift_release();
          swift_release();
          uint64_t v130 = (void *)MEMORY[0x1E4FBC860];
LABEL_73:
          swift_release();
          v127(v156, v121);
          v145(v161, v162);
          uint64_t v139 = v150;
          uint64_t v140 = v165;
          uint64_t v141 = v167;
          *uint64_t v150 = v165;
          v139[1] = v141;
          v139[2] = v166;
          v139[3] = a8;
          v139[4] = v140;
          v139[5] = v130;
          return (uint64_t)a4;
        }
        uint64_t v164 = v127;
        uint64_t v155 = v27;
        uint64_t v131 = v125[3];
        uint64_t v130 = (void *)MEMORY[0x1E4FBC860];
        a5 = v129;
        while (a5 < a8)
        {
          if (*(void *)(v131 + 16))
          {
            unint64_t v133 = sub_1A72B23E4(a5);
            if (v134)
            {
              uint64_t v135 = *(void **)(*(void *)(v131 + 56) + 8 * v133);
              swift_beginAccess();
              uint64_t v136 = v135[13];
              uint64_t v27 = v135[14];
              uint64_t v8 = v135[15];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v130 = sub_1A72AC7BC(0, v130[2] + 1, 1, v130);
              }
              unint64_t v138 = v130[2];
              unint64_t v137 = v130[3];
              if (v138 >= v137 >> 1) {
                uint64_t v130 = sub_1A72AC7BC((void *)(v137 > 1), v138 + 1, 1, v130);
              }
              v130[2] = v138 + 1;
              uint64_t v132 = &v130[3 * v138];
              v132[4] = v136;
              v132[5] = v27;
              v132[6] = v8;
              uint64_t v121 = v158;
            }
          }
          if (a8 == ++a5)
          {
            swift_release();
            swift_release();
            uint64_t v127 = v164;
            goto LABEL_73;
          }
        }
      }
      __break(1u);
LABEL_80:
      swift_once();
    }
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    uint64_t result = sub_1A7574010();
    __break(1u);
  }
  return result;
}

id sub_1A74D655C(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)sub_1A75718E0();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_embeddingWithContentsOfURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_1A75719C0();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_1A7571850();

    swift_willThrow();
    uint64_t v9 = sub_1A75719C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t RDIntentClusterModel.predict(for:)()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1A7572F60();
  swift_bridgeObjectRelease();
  if (qword_1E96F08D0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A7571E90();
  __swift_project_value_buffer(v1, (uint64_t)qword_1E96F5068);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1A7571E80();
  os_log_type_t v3 = sub_1A7572FF0();
  if (!os_log_type_enabled(v2, v3))
  {

    swift_bridgeObjectRelease_n();
    if (*(void *)(v0 + 16)) {
      goto LABEL_5;
    }
LABEL_7:
    uint64_t v9 = 0;
    goto LABEL_8;
  }
  id v4 = (uint8_t *)swift_slowAlloc();
  uint64_t v5 = swift_slowAlloc();
  uint64_t v11 = v5;
  *(_DWORD *)id v4 = 136315138;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DE0);
  uint64_t v7 = MEMORY[0x1AD0CAC20](v0, v6);
  sub_1A72D1730(v7, v8, &v11);
  sub_1A7573250();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1A72A1000, v2, v3, "RDIntentClusterModel closest intent %s", v4, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1AD0CD330](v5, -1, -1);
  MEMORY[0x1AD0CD330](v4, -1, -1);

  if (!*(void *)(v0 + 16)) {
    goto LABEL_7;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
LABEL_8:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t RDIntentClusterModel.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t RDIntentClusterModel.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return MEMORY[0x1F4186488](v0, 64, 7);
}

unint64_t sub_1A74D6944()
{
  unint64_t result = qword_1E96F5080;
  if (!qword_1E96F5080)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E96F5080);
  }
  return result;
}

uint64_t sub_1A74D6984(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1E96F5088);
  uint64_t result = sub_1A75738F0();
  os_log_type_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v26 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v23 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v24 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v25 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v26 + 48) + 16 * i);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = *(void *)(*(void *)(v26 + 56) + 8 * i);
    uint64_t result = swift_beginAccess();
    uint64_t v18 = *(void *)(v17 + 16);
    *(void *)(v25 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v19 = (void *)(v3[6] + 16 * i);
    *uint64_t v19 = v16;
    v19[1] = v15;
    *(void *)(v3[7] + 8 * i) = v18;
    uint64_t v20 = v3[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v11 >= v24) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v23 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v24) {
        return (uint64_t)v3;
      }
      unint64_t v12 = *(void *)(v23 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v24) {
          return (uint64_t)v3;
        }
        unint64_t v12 = *(void *)(v23 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v24) {
    return (uint64_t)v3;
  }
  unint64_t v12 = *(void *)(v23 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v24) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v23 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RDIntentClusterModel()
{
  return self;
}

uint64_t method lookup function for RDIntentClusterModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RDIntentClusterModel);
}

uint64_t destroy for RDIntentClusterModel.TuningSnapshot()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RDIntentClusterModel.TuningSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RDIntentClusterModel.TuningSnapshot(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RDIntentClusterModel.TuningSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RDIntentClusterModel.TuningSnapshot()
{
  return &type metadata for RDIntentClusterModel.TuningSnapshot;
}

void *initializeWithCopy for RDIntentClusterModel.ModelSnapshot(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RDIntentClusterModel.ModelSnapshot(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for RDIntentClusterModel.ModelSnapshot(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for RDIntentClusterModel.ModelSnapshot()
{
  return &type metadata for RDIntentClusterModel.ModelSnapshot;
}

uint64_t sub_1A74D6E7C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t *))result;
    unint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    unint64_t v12 = (uint64_t (*)(uint64_t *))result;
    while (v7 < *(void *)(a3 + 16))
    {
      uint64_t v11 = *(void *)(a3 + 8 * v7 + 32);
      uint64_t v13 = v11;
      uint64_t result = v6(&v13);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v14 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1A72D2CD8(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v14;
        }
        unint64_t v10 = *(void *)(v8 + 16);
        unint64_t v9 = *(void *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          uint64_t result = sub_1A72D2CD8(v9 > 1, v10 + 1, 1);
          uint64_t v8 = v14;
        }
        *(void *)(v8 + 16) = v10 + 1;
        *(void *)(v8 + 8 * v10 + 32) = v11;
        uint64_t v6 = v12;
      }
      if (v5 == ++v7) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1A74D6FC4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t *))result;
    unint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    unint64_t v12 = (uint64_t (*)(uint64_t *))result;
    while (v7 < *(void *)(a3 + 16))
    {
      uint64_t v11 = *(void *)(a3 + 8 * v7 + 32);
      uint64_t v13 = v11;
      uint64_t result = v6(&v13);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v14 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1A72D2CD8(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v14;
        }
        unint64_t v10 = *(void *)(v8 + 16);
        unint64_t v9 = *(void *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          uint64_t result = sub_1A72D2CD8(v9 > 1, v10 + 1, 1);
          uint64_t v8 = v14;
        }
        *(void *)(v8 + 16) = v10 + 1;
        *(void *)(v8 + 8 * v10 + 32) = v11;
        uint64_t v6 = v12;
      }
      if (v5 == ++v7) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t Series.__allocating_init(_:defaultValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_allocObject();
  uint64_t v6 = sub_1A74D8B3C(a1, a2);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a2);
  return v6;
}

uint64_t sub_1A74D71A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1A74D71F4(a1, a2);
  return v4;
}

char *sub_1A74D71F4(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  uint64_t v4 = *(void *)(*(void *)v2 + 80);
  uint64_t v5 = sub_1A7573210();
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v25 - v6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v30 = sub_1A7573210();
  uint64_t v26 = *(void *)(v30 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v30);
  uint64_t v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v25 - v11;
  *(void *)&long long v36 = a1;
  uint64_t v13 = sub_1A7572B30();
  swift_getWitnessTable();
  uint64_t v14 = MEMORY[0x1E4FBB590];
  sub_1A7572D70();
  long long v36 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C78);
  unint64_t v15 = sub_1A72E9340();
  uint64_t v34 = v14;
  unint64_t v35 = v15;
  swift_getWitnessTable();
  uint64_t v16 = sub_1A7572B60();
  sub_1A7398264(v16, &v33);
  uint64_t v28 = v2;
  *((_OWORD *)v2 + 1) = v33;
  *(void *)&long long v36 = sub_1A7572390();
  *(void *)&long long v33 = a1;
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1AD0CAAC0](&v32, v13, WitnessTable);
  swift_bridgeObjectRelease();
  uint64_t v31 = v32;
  sub_1A75738B0();
  sub_1A7573880();
  sub_1A75738A0();
  uint64_t v18 = (void (**)(char *, char *, uint64_t))(v26 + 32);
  while (1)
  {
    uint64_t v19 = v29;
    sub_1A7573890();
    (*v18)(v12, v19, v30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v12, 1, TupleTypeMetadata2) == 1)break; {
    uint64_t v20 = *(void *)v12;
    }
    uint64_t v21 = *(void *)(v4 - 8);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v7, &v12[*(int *)(TupleTypeMetadata2 + 48)], v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v7, 0, 1, v4);
    uint64_t v32 = v20;
    sub_1A75724A0();
    sub_1A75724E0();
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = v27;
  uint64_t v23 = v28;
  *((void *)v28 + 4) = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(&v23[*(void *)(*(void *)v23 + 104)], v22, v4);
  return v23;
}

uint64_t sub_1A74D7638(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1A74D7690(a1, a2, a3);
  return v6;
}

char *sub_1A74D7690(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v6 = *(void *)(*(void *)v3 + 80);
  uint64_t v7 = sub_1A7573210();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v27 - v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_1A7573210();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = *a2;
  uint64_t v15 = a2[1];
  *((void *)v3 + 2) = *a2;
  *((void *)v3 + 3) = v15;
  uint64_t v28 = v3;
  uint64_t v16 = v14;
  uint64_t v30 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1A7572390();
  uint64_t v36 = v16;
  uint64_t v37 = v15;
  *(void *)&long long v34 = a1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F5190);
  uint64_t v18 = sub_1A7572B30();
  unint64_t v19 = sub_1A74D919C();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1A7573FF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v34 = v31;
  unint64_t v35 = v32;
  uint64_t v36 = v17;
  uint64_t v29 = v18;
  uint64_t v30 = v17;
  uint64_t v37 = v18;
  unint64_t v38 = v19;
  uint64_t v21 = WitnessTable;
  uint64_t v39 = WitnessTable;
  sub_1A75735D0();
  sub_1A75735A0();
  while (1)
  {
    *(void *)&long long v31 = v30;
    *((void *)&v31 + 1) = v29;
    unint64_t v32 = v19;
    uint64_t v33 = v21;
    sub_1A75735C0();
    sub_1A75735B0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v13, 1, TupleTypeMetadata2) == 1)break; {
    uint64_t v22 = *(void *)v13;
    }
    uint64_t v23 = *(void *)(v6 - 8);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v9, &v13[*(int *)(TupleTypeMetadata2 + 48)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v9, 0, 1, v6);
    *(void *)&long long v31 = v22;
    sub_1A75724A0();
    sub_1A75724E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = v27;
  uint64_t v25 = v28;
  *((void *)v28 + 4) = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(&v25[*(void *)(*(void *)v25 + 104)], v24, v6);
  return v25;
}

uint64_t sub_1A74D7A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)v2;
  uint64_t v7 = *(void *)(*(void *)v2 + 80);
  uint64_t v8 = sub_1A7573210();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v18 - v10;
  if (*(void *)(*((void *)v2 + 3) + 16))
  {
    sub_1A72B23E4(a1);
    if (v12)
    {
      uint64_t v13 = *((void *)v2 + 4);
      uint64_t v19 = a1;
      MEMORY[0x1AD0CA6D0](&v19, v13, MEMORY[0x1E4FBB550], v7, MEMORY[0x1E4FBB560]);
      uint64_t v14 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v7) != 1) {
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v11, v7);
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(a2, &v3[*(void *)(*(void *)v3 + 104)], v7);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    uint64_t v6 = *(void *)v2;
  }
  uint64_t v16 = &v2[*(void *)(v6 + 104)];
  uint64_t v17 = *(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v7 - 8) + 16);

  return v17(a2, v16, v7);
}

uint64_t sub_1A74D7C88()
{
  return *(void *)(*(void *)(v0 + 16) + 16);
}

uint64_t *sub_1A74D7C94()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 104));
  return v0;
}

uint64_t sub_1A74D7D2C()
{
  sub_1A74D7C94();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t Series.index.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *a1 = *(void *)(v1 + 32);
  a1[1] = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A74D7DC0(uint64_t a1, long long *a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  long long v5 = *a2;
  *(_OWORD *)(result + 32) = *a2;
  *(unsigned char *)(result + 24) = *(void *)(*(void *)(a1 + 16) + 16) == *(void *)(v5 + 16);
  return result;
}

uint64_t sub_1A74D7E24(uint64_t a1, uint64_t a2)
{
  sub_1A7398264(a2, &v5);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  uint64_t v4 = v5;
  *(_OWORD *)(result + 32) = v5;
  *(unsigned char *)(result + 24) = *(void *)(*(void *)(a1 + 16) + 16) == *(void *)(v4 + 16);
  return result;
}

uint64_t Series.init(_:defaultValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1A74D8B3C(a1, a2);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 80) - 8) + 8))(a2);
  return v5;
}

uint64_t Series.__allocating_init(_:index:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A74D8E6C(a1, a2, a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a3);
  return v5;
}

{
  uint64_t v3;
  uint64_t v6;
  long long v8;
  long long v9;

  sub_1A7398264(a2, &v9);
  uint64_t v8 = v9;
  uint64_t v6 = sub_1A74D8E6C(a1, (uint64_t)&v8, a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a3);
  return v6;
}

uint64_t Series.init(_:index:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  uint64_t v6 = sub_1A74D8D20(a1, a2, a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 8))(a3);
  return v6;
}

uint64_t sub_1A74D8074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*((unsigned char *)v2 + 24) == 1) {
    return sub_1A74D7A30(a1, a2);
  }
  uint64_t v5 = *v2;
  if (*(void *)(v2[5] + 16))
  {
    sub_1A72B23E4(a1);
    if (v6) {
      return sub_1A74D7A30(a1, a2);
    }
  }
  uint64_t v8 = v2[2] + *(void *)(*(void *)v2[2] + 104);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 16);

  return v9(a2, v8);
}

uint64_t sub_1A74D8174(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A74D6E7C((uint64_t)sub_1A74D8EC8, v1, a1);
  if (*(unsigned char *)(v1 + 24) == 1) {
    uint64_t v4 = *(void *)(v1 + 16) + 16;
  }
  else {
    uint64_t v4 = v1 + 32;
  }
  if (*(void *)(v3 + 16) == *(void *)(*(void *)v4 + 16))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    return v1;
  }
  else
  {
    type metadata accessor for Series();
    uint64_t v6 = swift_retain();
    return sub_1A74D7E24(v6, v3);
  }
}

uint64_t sub_1A74D8264(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = v1 + 32;
  unint64_t v4 = *(void *)(v1 + 32);
  if (*(void *)(*a1 + 16) >= *(void *)(v4 + 16))
  {
    uint64_t v7 = *(void *)(v1 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1A74D89FC(v4, v7, v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1A74D6FC4((uint64_t)sub_1A74D8EC8, v1, v2);
  }
  if (*(unsigned char *)(v1 + 24) == 1) {
    uint64_t v5 = *(void *)(v1 + 16) + 16;
  }
  if (*(void *)(v6 + 16) == *(void *)(*(void *)v5 + 16))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    return v1;
  }
  else
  {
    type metadata accessor for Series();
    uint64_t v9 = swift_retain();
    return sub_1A74D7E24(v9, v6);
  }
}

uint64_t sub_1A74D83E8(uint64_t result, int64_t a2)
{
  unint64_t v4 = (int64_t *)result;
  if (*(unsigned char *)(v2 + 24) == 1)
  {
    if (*(void *)(*(void *)(*(void *)(v2 + 16) + 16) + 16) > a2)
    {
      type metadata accessor for Series();
      uint64_t v5 = sub_1A72D262C(v4, a2);
      uint64_t v6 = swift_retain();
      uint64_t v7 = (uint64_t)v5;
      return sub_1A74D7E24(v6, v7);
    }
    return swift_retain();
  }
  else
  {
    if (!__OFSUB__(a2, result))
    {
      uint64_t v8 = *(void *)(v2 + 32);
      int64_t v9 = *(void *)(v8 + 16);
      if (v9 < a2 - result)
      {
        uint64_t v10 = sub_1A72D262C((int64_t *)result, a2);
        uint64_t v11 = sub_1A74D8174((uint64_t)v10);
        swift_release();
        return v11;
      }
      if (!v9)
      {
        uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_26:
        type metadata accessor for Series();
        uint64_t v6 = swift_retain();
        uint64_t v7 = v13;
        return sub_1A74D7E24(v6, v7);
      }
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      unint64_t v12 = 0;
      uint64_t v13 = MEMORY[0x1E4FBC860];
      while (v12 < *(void *)(v8 + 16))
      {
        int64_t v16 = *(void *)(v8 + 8 * v12 + 32);
        if (v16 >= (uint64_t)v4 && v16 < a2)
        {
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0) {
            uint64_t result = sub_1A72D2CD8(0, *(void *)(v13 + 16) + 1, 1);
          }
          unint64_t v15 = *(void *)(v13 + 16);
          unint64_t v14 = *(void *)(v13 + 24);
          if (v15 >= v14 >> 1) {
            uint64_t result = sub_1A72D2CD8(v14 > 1, v15 + 1, 1);
          }
          *(void *)(v13 + 16) = v15 + 1;
          *(void *)(v13 + 8 * v15 + 32) = v16;
        }
        if (v9 == ++v12)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A74D863C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t result = sub_1A75723A0();
  uint64_t v10 = result;
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *(void *)(v5 + 8 * v7++ + 32);
      sub_1A74D7A30(v8, (uint64_t)v3);
      sub_1A7572B30();
      sub_1A7572AE0();
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1A74D874C(uint64_t a1)
{
  return sub_1A75734C0();
}

uint64_t sub_1A74D8800()
{
  if (*(unsigned char *)(v0 + 24) == 1) {
    uint64_t v1 = *(void *)(v0 + 16) + 16;
  }
  else {
    uint64_t v1 = v0 + 32;
  }
  return *(void *)(*(void *)v1 + 16);
}

uint64_t Series.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Series.__deallocating_deinit()
{
  Series.deinit();

  return MEMORY[0x1F4186488](v0, 48, 7);
}

uint64_t sub_1A74D8894@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1A74D874C(a1);
  uint64_t result = swift_release();
  *a2 = v3;
  return result;
}

uint64_t sub_1A74D88D4()
{
  type metadata accessor for Series();
  uint64_t v0 = sub_1A7494400();
  swift_release();
  return v0;
}

void sub_1A74D8920()
{
  type metadata accessor for Series();

  JUMPOUT(0x1AD0CAAD0);
}

uint64_t sub_1A74D898C()
{
  return sub_1A75728E0();
}

unint64_t sub_1A74D89FC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v6 = *(void *)(result + 16);
  if (!v6) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v8 = 0;
  unint64_t v9 = result + 32;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  do
  {
    if (v8 <= v6) {
      unint64_t v11 = v6;
    }
    else {
      unint64_t v11 = v8;
    }
    unint64_t v12 = v8;
    while (1)
    {
      if (v11 == v12)
      {
        __break(1u);
        return result;
      }
      if (*(void *)(a4 + 16))
      {
        uint64_t v13 = *(void *)(v9 + 8 * v12);
        uint64_t result = sub_1A72B23E4(v13);
        if (v14) {
          break;
        }
      }
      if (v6 == ++v12) {
        return v10;
      }
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = v5;
    if ((result & 1) == 0) {
      uint64_t result = sub_1A72D2CD8(0, *(void *)(v10 + 16) + 1, 1);
    }
    unint64_t v16 = *(void *)(v10 + 16);
    unint64_t v15 = *(void *)(v10 + 24);
    if (v16 >= v15 >> 1) {
      uint64_t result = sub_1A72D2CD8(v15 > 1, v16 + 1, 1);
    }
    unint64_t v8 = v12 + 1;
    *(void *)(v10 + 16) = v16 + 1;
    *(void *)(v10 + 8 * v16 + 32) = v13;
    uint64_t v5 = v17;
  }
  while (v6 - 1 != v12);
  return v10;
}

uint64_t sub_1A74D8B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(*(void *)v3 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v9 = (char *)v16 - v8;
  type metadata accessor for SeriesMaterial();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_1A74D71F4(v11, (uint64_t)v9);
  *(void *)(v3 + 16) = v10;
  *(void *)&long long v17 = a1;
  sub_1A7572B30();
  swift_getWitnessTable();
  uint64_t v12 = MEMORY[0x1E4FBB590];
  sub_1A7572D70();
  swift_bridgeObjectRelease();
  long long v17 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C78);
  unint64_t v13 = sub_1A72E9340();
  v16[0] = v12;
  v16[1] = v13;
  swift_getWitnessTable();
  uint64_t v14 = sub_1A7572B60();
  sub_1A7398264(v14, &v18);
  *(_OWORD *)(v3 + 32) = v18;
  *(unsigned char *)(v3 + 24) = 1;
  return v3;
}

uint64_t sub_1A74D8D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(*(void *)v4 + 80);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v16 - v9;
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  type metadata accessor for SeriesMaterial();
  v16[0] = v12;
  v16[1] = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  uint64_t v14 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A74D7690(a1, v16, (uint64_t)v10);
  *(void *)(v4 + 16) = v14;
  *(void *)(v4 + 32) = v12;
  *(void *)(v4 + 40) = v13;
  *(unsigned char *)(v4 + 24) = 1;
  return v4;
}

uint64_t sub_1A74D8E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A74D8D20(a1, a2, a3);
}

uint64_t sub_1A74D8EC8(uint64_t *a1)
{
  return sub_1A74D8EFC(a1) & 1;
}

uint64_t type metadata accessor for Series()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A74D8EFC(uint64_t *a1)
{
  if (*(void *)(*(void *)(v1 + 40) + 16)) {
    sub_1A72B23E4(*a1);
  }
  else {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t sub_1A74D8F40()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SeriesMaterial()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A74D9004()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for Series(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Series);
}

uint64_t dispatch thunk of Series.__allocating_init(_:defaultValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of Series.__allocating_init(_:index:defaultValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of Series.iloc(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of Series.iloc(index:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of Series.values.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of Series.makeIterator()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of Series.size.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

unint64_t sub_1A74D919C()
{
  unint64_t result = qword_1E96F5198;
  if (!qword_1E96F5198)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F5190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5198);
  }
  return result;
}

uint64_t sub_1A74D91F8()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F51A0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F51A0);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void REMAlarmProximity.description.getter(unint64_t a1)
{
  uint64_t v2 = sub_1A7571E90();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 > 2)
  {
    uint64_t v7 = v4;
    if (qword_1E96F08D8 != -1) {
      swift_once();
    }
    uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1E96F51A0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v7);
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1A72B0944(MEMORY[0x1E4FBC860]);
    sub_1A72B0944(v9);
    sub_1A73A67DC((uint64_t)"unknown proximity", 17, 2);
    __break(1u);
  }
}

uint64_t sub_1A74D9444(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if (a2 >> 62) {
    goto LABEL_27;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1A75738D0())
  {
    uint64_t v5 = 0;
    uint64_t v20 = v4;
    unint64_t v21 = v2 & 0xC000000000000001;
    unint64_t v19 = v2;
    unint64_t v18 = v2 + 32;
    while (1)
    {
      if (v21)
      {
        uint64_t v8 = MEMORY[0x1AD0CB800](v5, v19);
        BOOL v9 = __OFADD__(v5++, 1);
        if (v9) {
          goto LABEL_25;
        }
      }
      else
      {
        uint64_t v8 = *(void *)(v18 + 8 * v5);
        swift_retain();
        BOOL v9 = __OFADD__(v5++, 1);
        if (v9) {
          goto LABEL_25;
        }
      }
      swift_beginAccess();
      unint64_t v2 = *(void *)(a1 + 24);
      if ((v2 & 0x8000000000000000) != 0) {
        goto LABEL_26;
      }
      if (v2) {
        break;
      }
      uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
LABEL_5:
      type metadata accessor for RDVector();
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v6;
      unint64_t v2 = v6[2];
      swift_release();
      *(void *)(v7 + 24) = v2;
      swift_release();
      a1 = v7;
      if (v5 == v20)
      {
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    uint64_t v10 = a1 + 16;
    uint64_t v11 = v8 + 16;
    swift_beginAccess();
    swift_beginAccess();
    unint64_t v12 = 0;
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    while (v12 < *(void *)(*(void *)v10 + 16))
    {
      if (v12 >= *(void *)(*(void *)v11 + 16)) {
        goto LABEL_24;
      }
      double v13 = *(double *)(*(void *)v10 + 8 * v12 + 32);
      double v14 = *(double *)(*(void *)v11 + 8 * v12 + 32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1A72AC59C(0, v6[2] + 1, 1, v6);
      }
      unint64_t v16 = v6[2];
      unint64_t v15 = v6[3];
      if (v16 >= v15 >> 1) {
        uint64_t v6 = sub_1A72AC59C((void *)(v15 > 1), v16 + 1, 1, v6);
      }
      ++v12;
      id v6[2] = v16 + 1;
      *(double *)&v6[v16 + 4] = v13 + v14;
      if (v2 == v12) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t RDVector.__allocating_init(_:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  uint64_t v3 = *(void *)(a1 + 16);
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t Array<A>.average()(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A75738D0();
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = MEMORY[0x1AD0CB800](0, a1);
    goto LABEL_6;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    swift_retain();
LABEL_6:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v6 = *(void *)(v5 + 24);
    type metadata accessor for RDVector();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 24) = v6;
    *(void *)(inited + 16) = sub_1A7329790(v6, 0.0);
    uint64_t v8 = sub_1A74D9444(inited, a1);
    swift_release();
    swift_release();
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1A75738D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v10 = / infix(_:_:)(v8, (double)v9);
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t - infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 24);
  if (v5 < 0)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  if (v5)
  {
    uint64_t v6 = a1 + 16;
    uint64_t v7 = a2 + 16;
    swift_beginAccess();
    uint64_t result = swift_beginAccess();
    unint64_t v8 = 0;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    while (v8 < *(void *)(*(void *)v6 + 16))
    {
      if (v8 >= *(void *)(*(void *)v7 + 16)) {
        goto LABEL_15;
      }
      double v10 = *(double *)(*(void *)v6 + 8 * v8 + 32);
      double v11 = *(double *)(*(void *)v7 + 8 * v8 + 32);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1A72AC59C(0, v9[2] + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      unint64_t v13 = v9[2];
      unint64_t v12 = v9[3];
      if (v13 >= v12 >> 1)
      {
        uint64_t result = (uint64_t)sub_1A72AC59C((void *)(v12 > 1), v13 + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      ++v8;
      void v9[2] = v13 + 1;
      *(double *)&v9[v13 + 4] = v10 - v11;
      if (v5 == v8) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
LABEL_13:
  type metadata accessor for RDVector();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v9;
  *(void *)(result + 24) = v9[2];
  return result;
}

uint64_t Array<A>.truncatedLoggingDescription()(unint64_t a1)
{
  unint64_t v1 = a1;
  int64_t v2 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_28;
  }
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 5) {
    uint64_t v3 = 5;
  }
  else {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0 && v3)
    {
      type metadata accessor for RDVector();
      uint64_t v4 = 0;
      do
      {
        uint64_t v5 = v4 + 1;
        sub_1A75735E0();
        uint64_t v4 = v5;
      }
      while (v3 != v5);
    }
    if (v2)
    {
      swift_bridgeObjectRetain();
      sub_1A75738E0();
      uint64_t v6 = v7;
      int64_t v2 = v8;
      unint64_t v10 = v9;
      swift_bridgeObjectRelease_n();
      uint64_t v3 = v10 >> 1;
    }
    else
    {
      uint64_t v6 = (v1 & 0xFFFFFFFFFFFFFF8) + 32;
    }
    uint64_t v11 = v3 - v2;
    if (__OFSUB__(v3, v2)) {
      goto LABEL_30;
    }
    if (!v11) {
      break;
    }
    v28[0] = MEMORY[0x1E4FBC860];
    unint64_t v1 = (unint64_t)v28;
    sub_1A72D2D00(0, v11 & ~(v11 >> 63), 0);
    if ((v11 & 0x8000000000000000) == 0)
    {
      uint64_t v12 = v28[0];
      if (v3 <= v2) {
        uint64_t v13 = v2;
      }
      else {
        uint64_t v13 = v3;
      }
      uint64_t v14 = v13 - v2;
      unint64_t v15 = (unint64_t *)(v6 + 8 * v2);
      while (v14)
      {
        unint64_t v1 = *v15;
        swift_retain();
        uint64_t v16 = sub_1A74DA048();
        int64_t v2 = v17;
        swift_release();
        v28[0] = v12;
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        if (v19 >= v18 >> 1)
        {
          unint64_t v1 = (unint64_t)v28;
          sub_1A72D2D00(v18 > 1, v19 + 1, 1);
          uint64_t v12 = v28[0];
        }
        *(void *)(v12 + 16) = v19 + 1;
        uint64_t v20 = v12 + 16 * v19;
        *(void *)(v20 + 32) = v16;
        *(void *)(v20 + 40) = v2;
        --v14;
        ++v15;
        if (!--v11)
        {
          swift_unknownObjectRelease();
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1A75738D0();
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1A75738D0();
      swift_bridgeObjectRelease();
      if ((v25 & 0x8000000000000000) == 0) {
        goto LABEL_32;
      }
      __break(1u);
LABEL_30:
      __break(1u);
    }
    __break(1u);
LABEL_32:
    if (v3 >= 5) {
      uint64_t v26 = 5;
    }
    else {
      uint64_t v26 = v3;
    }
    if (v3 >= 0) {
      uint64_t v3 = v26;
    }
    else {
      uint64_t v3 = 5;
    }
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1A75738D0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v27 < v3)
    {
      __break(1u);
      return result;
    }
  }
  swift_unknownObjectRelease();
  uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_26:
  v28[0] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72E3500();
  uint64_t v21 = sub_1A7572570();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  v28[0] = v21;
  v28[1] = v23;
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  return v28[0];
}

uint64_t sub_1A74D9CC0()
{
  swift_beginAccess();
  return *(void *)(v0 + 24);
}

uint64_t RDVector.init(_:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = *(void *)(a1 + 16);
  return v1;
}

uint64_t RDVector.__allocating_init(dimension:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 24) = a1;
  if (a1 < 0)
  {
    uint64_t result = sub_1A7573830();
    __break(1u);
  }
  else
  {
    uint64_t v3 = v2;
    if (a1)
    {
      uint64_t v4 = sub_1A7572A90();
      *(void *)(v4 + 16) = a1;
      bzero((void *)(v4 + 32), 8 * a1);
    }
    else
    {
      uint64_t v4 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v3 + 16) = v4;
    return v3;
  }
  return result;
}

uint64_t RDVector.init(dimension:)(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  if (a1 < 0)
  {
    uint64_t result = sub_1A7573830();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      uint64_t v3 = sub_1A7572A90();
      *(void *)(v3 + 16) = a1;
      bzero((void *)(v3 + 32), 8 * a1);
    }
    else
    {
      uint64_t v3 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v1 + 16) = v3;
    return v1;
  }
  return result;
}

uint64_t sub_1A74D9E98(unint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(void *)(*(void *)(v1 + 16) + 16) <= a1) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1A74D9EF8()
{
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 1;
  }
  if ((*(void *)(v2 + 32) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    return 0;
  }
  if (v3 == 1) {
    return 1;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v5 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    uint64_t v6 = *(void *)(v2 + 8 * i) & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t result = v6 == 0;
    if (v6) {
      BOOL v7 = 1;
    }
    else {
      BOOL v7 = v5 == v3;
    }
    if (v7) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A74D9F88()
{
  return sub_1A75740D0();
}

uint64_t sub_1A74D9FB4()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1AD0CAC20](v0, MEMORY[0x1E4FBB3D0]);
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x726F746365564452;
}

uint64_t sub_1A74DA048()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(void *)(v1 + 16) >= 5uLL) {
    int64_t v2 = 5;
  }
  else {
    int64_t v2 = *(void *)(v1 + 16);
  }
  if (v2)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1A72D2D00(0, v2, 0);
    uint64_t v3 = 0;
    uint64_t v4 = 8 * v2;
    uint64_t v5 = MEMORY[0x1E4FBB460];
    do
    {
      uint64_t v6 = *(void *)(v1 + v3 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7054F0);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1A75785A0;
      *(void *)(v7 + 56) = MEMORY[0x1E4FBB3D0];
      *(void *)(v7 + 64) = v5;
      *(void *)(v7 + 32) = v6;
      uint64_t v8 = sub_1A7572640();
      uint64_t v10 = v9;
      unint64_t v12 = *(void *)(v15 + 16);
      unint64_t v11 = *(void *)(v15 + 24);
      if (v12 >= v11 >> 1) {
        sub_1A72D2D00(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v15 + 16) = v12 + 1;
      uint64_t v13 = v15 + 16 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
      v3 += 8;
    }
    while (v4 != v3);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72E3500();
  sub_1A7572570();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  return 2636374;
}

uint64_t sub_1A74DA244()
{
  if (*v0) {
    return 0x6F69736E656D6964;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_1A74DA27C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74DB590(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74DA2A4(uint64_t a1)
{
  unint64_t v2 = sub_1A74DAFD8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74DA2E0(uint64_t a1)
{
  unint64_t v2 = sub_1A74DAFD8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RDVector.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RDVector.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_1A74DA374(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F51B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74DAFD8();
  sub_1A75741B0();
  swift_beginAccess();
  v10[1] = *(void *)(v3 + 16);
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D10);
  sub_1A74DB02C(&qword_1E96F3D18);
  sub_1A7573B60();
  if (!v2)
  {
    swift_beginAccess();
    char v11 = 1;
    sub_1A7573B40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A74DA544()
{
  return sub_1A7574110();
}

uint64_t RDVector.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  RDVector.init(from:)(a1);
  return v2;
}

uint64_t RDVector.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F51C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74DAFD8();
  sub_1A7574190();
  if (v2)
  {
    type metadata accessor for RDVector();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3D10);
    v11[15] = 0;
    sub_1A74DB02C(&qword_1E96F3D30);
    sub_1A7573A50();
    *(void *)(v1 + 16) = v12;
    v11[14] = 1;
    uint64_t v10 = sub_1A7573A30();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v3 + 24) = v10;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1A74DA808()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1AD0CAC20](v0, MEMORY[0x1E4FBB3D0]);
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x726F746365564452;
}

uint64_t sub_1A74DA8A0(uint64_t *a1, uint64_t *a2)
{
  return == infix(_:_:)(*a1, *a2);
}

uint64_t == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t result = swift_beginAccess();
  if (v4 != *(void *)(a2 + 24)) {
    return 0;
  }
  if (v4 < 0) {
    goto LABEL_24;
  }
  if (!v4) {
    return 1;
  }
  uint64_t v6 = a2 + 16;
  swift_beginAccess();
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (!*(void *)(*(void *)v6 + 16))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  double v9 = *(double *)(v7 + 32);
  double v10 = *(double *)(*(void *)v6 + 32);
  uint64_t result = v9 == v10;
  if (v9 == v10 && v4 != 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = v7 + 40;
    while (v12 + 1 < v8)
    {
      if ((unint64_t)(v12 + 1) >= *(void *)(*(void *)v6 + 16)) {
        goto LABEL_23;
      }
      double v14 = *(double *)(v13 + 8 * v12);
      double v15 = *(double *)(*(void *)v6 + 8 * v12 + 40);
      uint64_t result = v14 == v15;
      if (v14 != v15 || v4 - 2 == v12++) {
        return result;
      }
    }
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_1A74DA9E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for RDVector();
  uint64_t v5 = swift_allocObject();
  uint64_t result = RDVector.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1A74DAA3C(void *a1)
{
  return sub_1A74DA374(a1);
}

uint64_t sub_1A74DAA60()
{
  return sub_1A7574110();
}

uint64_t + infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 24);
  if (v5 < 0)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  if (v5)
  {
    uint64_t v6 = a1 + 16;
    uint64_t v7 = a2 + 16;
    swift_beginAccess();
    uint64_t result = swift_beginAccess();
    unint64_t v8 = 0;
    double v9 = (void *)MEMORY[0x1E4FBC860];
    while (v8 < *(void *)(*(void *)v6 + 16))
    {
      if (v8 >= *(void *)(*(void *)v7 + 16)) {
        goto LABEL_15;
      }
      double v10 = *(double *)(*(void *)v6 + 8 * v8 + 32);
      double v11 = *(double *)(*(void *)v7 + 8 * v8 + 32);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1A72AC59C(0, v9[2] + 1, 1, v9);
        double v9 = (void *)result;
      }
      unint64_t v13 = v9[2];
      unint64_t v12 = v9[3];
      if (v13 >= v12 >> 1)
      {
        uint64_t result = (uint64_t)sub_1A72AC59C((void *)(v12 > 1), v13 + 1, 1, v9);
        double v9 = (void *)result;
      }
      ++v8;
      void v9[2] = v13 + 1;
      *(double *)&v9[v13 + 4] = v10 + v11;
      if (v5 == v8) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  double v9 = (void *)MEMORY[0x1E4FBC860];
LABEL_13:
  type metadata accessor for RDVector();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v9;
  *(void *)(result + 24) = v9[2];
  return result;
}

uint64_t / infix(_:_:)(uint64_t a1, double a2)
{
  swift_beginAccess();
  uint64_t v3 = (float64x2_t *)sub_1A7329790(*(void *)(a1 + 24), 0.0);
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_16:
    }
      uint64_t v3 = (float64x2_t *)sub_1A74DAF74(v3);
    unint64_t v6 = 0;
    unint64_t v7 = *(void *)&v3[1].f64[0];
    unint64_t v8 = v5 - 1;
    if (v7 < v5 - 1) {
      unint64_t v8 = *(void *)&v3[1].f64[0];
    }
    if (v8 >= 6 && (unint64_t)v3 - v4 >= 0x20)
    {
      unint64_t v9 = v8 + 1;
      uint64_t v10 = (v8 + 1) & 3;
      if (!v10) {
        uint64_t v10 = 4;
      }
      unint64_t v6 = v9 - v10;
      float64x2_t v11 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&a2, 0);
      unint64_t v12 = (float64x2_t *)(v4 + 48);
      unint64_t v13 = v3 + 3;
      unint64_t v14 = v6;
      do
      {
        float64x2_t v15 = vdivq_f64(*v12, v11);
        v13[-1] = vdivq_f64(v12[-1], v11);
        *unint64_t v13 = v15;
        v12 += 2;
        v13 += 2;
        v14 -= 4;
      }
      while (v14);
    }
    do
    {
      if (v6 >= v7)
      {
        __break(1u);
        goto LABEL_16;
      }
      uint64_t v16 = v6;
      double v17 = *(double *)(v4 + 8 * v6++ + 32) / a2;
      v3[2].f64[v16] = v17;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
  }
  type metadata accessor for RDVector();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(float64_t *)(result + 24) = v3[1].f64[0];
  return result;
}

uint64_t Array<A>.sum()(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A75738D0();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1AD0CB800](0, a1);
    goto LABEL_6;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    swift_retain();
LABEL_6:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v5 = *(void *)(v4 + 24);
    type metadata accessor for RDVector();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 24) = v5;
    *(void *)(v6 + 16) = sub_1A7329790(v5, 0.0);
    uint64_t v7 = sub_1A74D9444(v6, a1);
    swift_release();
    swift_release();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RDVector()
{
  return self;
}

void *sub_1A74DAED0(void *a1)
{
  return sub_1A72AC37C(0, a1[2], 0, a1);
}

void *sub_1A74DAEE4(void *a1)
{
  return sub_1A72AC6AC(0, a1[2], 0, a1);
}

void sub_1A74DAEF8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A75738D0();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x1AD0CB810);
}

void *sub_1A74DAF74(void *a1)
{
  return sub_1A72AC59C(0, a1[2], 0, a1);
}

uint64_t sub_1A74DAF88(unint64_t a1)
{
  return sub_1A72ACF9C(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1A74DAF9C(void *a1)
{
  return sub_1A72AC148(0, a1[2], 0, a1);
}

void *sub_1A74DAFB0(void *a1)
{
  return sub_1A72AC48C(0, a1[2], 0, a1);
}

void *sub_1A74DAFC4(void *a1)
{
  return sub_1A72ADE90(0, a1[2], 0, a1);
}

unint64_t sub_1A74DAFD8()
{
  unint64_t result = qword_1E96F51C0;
  if (!qword_1E96F51C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F51C0);
  }
  return result;
}

uint64_t sub_1A74DB02C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3D10);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A74DB094()
{
  unint64_t result = qword_1E96F51D0;
  if (!qword_1E96F51D0)
  {
    type metadata accessor for RDVector();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F51D0);
  }
  return result;
}

uint64_t sub_1A74DB0E8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A74DB138@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 24);
  return result;
}

uint64_t sub_1A74DB180(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  return result;
}

uint64_t method lookup function for RDVector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RDVector);
}

uint64_t dispatch thunk of RDVector.data.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of RDVector.dimension.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of RDVector.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of RDVector.__allocating_init(dimension:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of RDVector.subscript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of RDVector.isZero()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of RDVector.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of RDVector.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of RDVector.truncatedLoggingDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of RDVector.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of RDVector.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of RDVector.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

unsigned char *storeEnumTagSinglePayload for RDVector.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74DB450);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RDVector.CodingKeys()
{
  return &type metadata for RDVector.CodingKeys;
}

unint64_t sub_1A74DB48C()
{
  unint64_t result = qword_1E96F51D8;
  if (!qword_1E96F51D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F51D8);
  }
  return result;
}

unint64_t sub_1A74DB4E4()
{
  unint64_t result = qword_1E96F51E0;
  if (!qword_1E96F51E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F51E0);
  }
  return result;
}

unint64_t sub_1A74DB53C()
{
  unint64_t result = qword_1E96F51E8;
  if (!qword_1E96F51E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F51E8);
  }
  return result;
}

uint64_t sub_1A74DB590(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69736E656D6964 && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1A74DB680(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1A74DF4E8(&qword_1EB704230, (void (*)(uint64_t))type metadata accessor for REMSuggestedAttributeInput);
  static PartialDecodable.partialDecode<A>(key:in:)(v1, v3, a1);
}

void static PartialDecodable.partialDecode<A>(key:in:)(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1A7573640();
  uint64_t v19 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1;
  uint64_t v9 = type metadata accessor for Partial();
  a3[3] = v9;
  sub_1A7573A80();
  uint64_t v22 = a2;
  swift_getWitnessTable();
  uint64_t v10 = v20;
  sub_1A7573A50();
  if (v10)
  {
    __swift_deallocate_boxed_opaque_existential_0((uint64_t)a3);
    id v21 = v10;
    id v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
    if (swift_dynamicCast())
    {
      uint64_t v12 = v19;
      int v13 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v8, v6);
      if (v13 == *MEMORY[0x1E4FBBA80])
      {

        (*(void (**)(char *, uint64_t))(v12 + 96))(v8, v6);
        unint64_t v14 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538) + 48)];
        a3[3] = v9;
        Partial.init()(a3);
        uint64_t v15 = sub_1A7573630();
        (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      }
      else if (v13 == *MEMORY[0x1E4FBBA68])
      {

        (*(void (**)(char *, uint64_t))(v12 + 96))(v8, v6);
        uint64_t v16 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704508) + 48)];
        a3[3] = v9;
        Partial.init()(a3);
        uint64_t v17 = sub_1A7573630();
        (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v6);
      }
    }
  }
}

uint64_t type metadata accessor for Partial()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t __swift_deallocate_boxed_opaque_existential_0(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x1AD0CD330);
  }
  return result;
}

void sub_1A74DBA9C(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1A74DF494();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A74DBB14(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1A74DF440();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A74DBB8C(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1A74DF3EC();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A74DBC04(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1A74DF398();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A74DBC7C(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1A74DF344();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A74DBCF4(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1A74DF2F0();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A74DBD6C(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1A74DF29C();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

uint64_t Partial.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v7 = a1;
  uint64_t v5 = sub_1A75736A0();
  swift_retain();
  MEMORY[0x1AD0CA6D0](v8, &v7, v4, v5, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB8F8]);
  swift_release();
  if (v8[3])
  {
    type metadata accessor for Partial();
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      *a2 = v7;
      return result;
    }
  }
  else
  {
    sub_1A72CB560((uint64_t)v8, &qword_1EB705938);
  }
  return Partial.init()(a2);
}

{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  long long v8;
  uint64_t v9;
  _OWORD v10[2];

  uint64_t v4 = *v2;
  uint64_t v7 = a1;
  uint64_t v5 = sub_1A75736A0();
  swift_retain();
  MEMORY[0x1AD0CA6D0](&v8, &v7, v4, v5, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB8F8]);
  swift_release();
  if (v9)
  {
    sub_1A72BEE44(&v8, v10);
    sub_1A72BEE44(v10, &v8);
    type metadata accessor for Partial();
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      *a2 = v7;
      return result;
    }
  }
  else
  {
    sub_1A72CB560((uint64_t)&v8, &qword_1EB705938);
  }
  return Partial.init()(a2);
}

uint64_t Partial.subscript.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *v2;
  id v11 = a1;
  uint64_t v6 = v4;
  uint64_t v7 = sub_1A75736A0();
  swift_retain();
  MEMORY[0x1AD0CA6D0](v12, &v11, v5, v7, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB8F8]);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
  uint64_t v8 = *(void *)(*MEMORY[0x1E4FBC5F0] + v6 + 8);
  int v9 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, v9 ^ 1u, 1, v8);
}

{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void (*v14)(char *, void, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  long long v19;
  uint64_t v20;
  _OWORD v21[2];

  uint64_t v4 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a1 + 8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v17 - v7;
  int v9 = *v2;
  uint64_t v18 = v6;
  uint64_t v10 = sub_1A75736A0();
  swift_retain();
  MEMORY[0x1AD0CA6D0](&v19, &v18, v9, v10, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB8F8]);
  swift_release();
  if (v20)
  {
    sub_1A72BEE44(&v19, v21);
    sub_1A72BEE44(v21, &v19);
    id v11 = *(void *)(v4 + 16);
    uint64_t v12 = swift_dynamicCast();
    int v13 = *(void *)(v11 - 8);
    unint64_t v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
    if (v12)
    {
      uint64_t v15 = *(void *)(v11 - 8);
      v14(v8, 0, 1, v11);
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v8, v11);
      return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v14)(a2, 0, 1, v11);
    }
    v14(v8, 1, 1, v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    sub_1A72CB560((uint64_t)&v19, &qword_1EB705938);
    id v11 = *(void *)(v4 + 16);
    int v13 = *(void *)(v11 - 8);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v11);
}

void sub_1A74DC2C8(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1A74DF248();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A74DC340(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1A74DF1F4();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

uint64_t Partial.init(backing:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t Partial.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1A75736A0();
  swift_getTupleTypeMetadata2();
  sub_1A7572A80();
  uint64_t result = sub_1A7572430();
  *a1 = result;
  return result;
}

void Partial<A>.init(dictionary:)(void *a1@<X0>, void *a2@<X2>, id *a3@<X8>)
{
  v15[2] = *(id *)MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v7 = self;
    v15[0] = 0;
    id v8 = a1;
    id v9 = objc_msgSend(v7, sel_dataWithJSONObject_options_error_, v8, 0, v15);
    id v10 = v15[0];
    if (v9)
    {
      uint64_t v11 = sub_1A7571A20();
      unint64_t v13 = v12;

      sub_1A7571460();
      swift_allocObject();
      sub_1A7571450();
      type metadata accessor for Partial();
      v15[1] = a2;
      swift_getWitnessTable();
      sub_1A7571440();

      sub_1A72E3460(v11, v13);
      swift_release();
      if (!v3) {
        *a3 = v15[0];
      }
    }
    else
    {
      unint64_t v14 = v10;
      sub_1A7571850();

      swift_willThrow();
    }
  }
  else
  {
    sub_1A75736A0();
    swift_getTupleTypeMetadata2();
    sub_1A7572A80();
    *a3 = (id)sub_1A7572430();
  }
}

uint64_t Partial<A>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void (**a3)(char *, void *, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v48 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  os_log_type_t v49 = (char *)&v46 - v8;
  uint64_t v69 = sub_1A75736A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v65 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v9 = *(void *)(v65 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  BOOL v62 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v64 = (char *)&v46 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v66 = (char *)&v46 - v13;
  unint64_t v57 = a3;
  uint64_t v61 = a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v15 = sub_1A7573A80();
  uint64_t v63 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v46 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = v68;
  sub_1A7574190();
  if (v18) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = v56;
  uint64_t v58 = AssociatedConformanceWitness;
  uint64_t v47 = v9;
  uint64_t v68 = 0;
  unint64_t v60 = v17;
  uint64_t v59 = v15;
  uint64_t v21 = AssociatedTypeWitness;
  uint64_t v22 = v49;
  uint64_t v50 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v74 = sub_1A7572390();
  uint64_t v61 = sub_1A74DCFC0(v61, (uint64_t)v57);
  uint64_t v23 = TupleTypeMetadata2;
  if (MEMORY[0x1AD0CAD00](v61, TupleTypeMetadata2))
  {
    uint64_t v24 = 0;
    uint64_t v54 = &v66[*(int *)(v23 + 48)];
    unint64_t v57 = (void (**)(char *, void *, uint64_t))(v65 + 16);
    uint64_t v53 = (void (**)(char *, char *, uint64_t))(v20 + 4);
    uint64_t v52 = (void (**)(char *, char *, uint64_t))(v20 + 2);
    uint64_t v55 = v20 + 1;
    uint64_t v56 = (void (**)(char *, uint64_t))(v65 + 8);
    uint64_t v25 = v64;
    uint64_t v26 = v61;
    uint64_t v51 = a1;
    while (1)
    {
      char v27 = sub_1A7572AA0();
      sub_1A7572A50();
      if (v27)
      {
        unint64_t v28 = v26
            + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))
            + *(void *)(v65 + 72) * v24;
        uint64_t v29 = v66;
        (*(void (**)(char *, unint64_t, uint64_t))(v65 + 16))(v66, v28, v23);
        uint64_t v30 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t result = sub_1A75735F0();
        uint64_t v29 = v66;
        if (v47 != 8)
        {
          __break(1u);
          return result;
        }
        v73[0] = result;
        (*v57)(v66, v73, v23);
        swift_unknownObjectRelease();
        uint64_t v30 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
LABEL_15:
          __break(1u);
          break;
        }
      }
      long long v31 = (char *)v25 + *(int *)(v23 + 48);
      unint64_t v32 = v25;
      uint64_t v33 = *(void *)v29;
      void *v32 = *(void *)v29;
      uint64_t v34 = v23;
      unint64_t v35 = *v53;
      (*v53)(v31, v54, v21);
      uint64_t v36 = &v62[*(int *)(v34 + 48)];
      (*v52)(v36, v31, v21);
      v35(v22, v36, v21);
      uint64_t v72 = v33;
      swift_retain_n();
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB704340);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v71 = 0;
        memset(v70, 0, sizeof(v70));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A72CB560((uint64_t)v70, &qword_1E96F51F0);
        uint64_t v42 = sub_1A7574240();
        uint64_t v44 = v43;
        sub_1A74DE8D0();
        swift_allocError();
        *BOOL v45 = v42;
        v45[1] = v44;
        swift_willThrow();
        swift_release();
        (*v55)(v22, v21);
        (*v56)(v64, TupleTypeMetadata2);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v59);
        a1 = v51;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      sub_1A735CEA4(v70, (uint64_t)v73);
      __swift_project_boxed_opaque_existential_1(v73, v73[3]);
      swift_getDynamicType();
      uint64_t v37 = v60;
      uint64_t v38 = v68;
      (*(void (**)(long long *__return_ptr, char *, char *, uint64_t, uint64_t))(v73[4] + 8))(v70, v22, v60, v21, v58);
      a1 = v51;
      if (v38)
      {
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
        (*v55)(v22, v21);
        (*v56)(v64, TupleTypeMetadata2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v37, v59);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      uint64_t v68 = 0;
      uint64_t v72 = v33;
      sub_1A75724A0();
      sub_1A75724E0();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
      (*v55)(v22, v21);
      uint64_t v25 = v64;
      uint64_t v23 = TupleTypeMetadata2;
      (*v56)(v64, TupleTypeMetadata2);
      uint64_t v26 = v61;
      ++v24;
      BOOL v39 = v30 == MEMORY[0x1AD0CAD00](v61, v23);
      uint64_t v40 = v59;
      uint64_t v41 = v63;
      if (v39) {
        goto LABEL_17;
      }
    }
  }
  uint64_t v40 = v59;
  uint64_t v41 = v63;
LABEL_17:
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v60, v40);
  *unint64_t v48 = v74;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A74DCFC0(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = &v14[-v7];
  swift_checkMetadataState();
  sub_1A7573580();
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = v2;
  sub_1A75736A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v12 = sub_1A7320598((void (*)(char *, char *))sub_1A74DF530, (uint64_t)v14, AssociatedTypeWitness, TupleTypeMetadata2, MEMORY[0x1E4FBC248], AssociatedConformanceWitness, MEMORY[0x1E4FBC278], v11);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  return v12;
}

uint64_t sub_1A74DD1AC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return Partial<A>.init(from:)(a1, *(void *)(a2 + 16), *(void (***)(char *, void *, uint64_t))(a3 - 8), a4);
}

uint64_t PartialOverride._full.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t PartialOverride._partials.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PartialOverride.init(full:partials:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t result = type metadata accessor for PartialOverride();
  *(void *)(a4 + *(int *)(result + 28)) = a2;
  return result;
}

uint64_t PartialOverride.subscript.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a1 + 8);
  uint64_t v11 = sub_1A7573210();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = &v19[-v13];
  uint64_t v22 = *(void *)(v5 + *(int *)(a2 + 28));
  uint64_t v20 = a3;
  uint64_t v21 = a1;
  type metadata accessor for Partial();
  uint64_t v15 = sub_1A7572B30();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = (char *)swift_getWitnessTable();
  Sequence.firstMap<A>(_:)((void (*)(char *))sub_1A74DE93C, (uint64_t)v19, v15, v10, WitnessTable, (uint64_t)v14);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v17 + 32))(a4, v14, v10);
  }
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_getAtKeyPath();
}

uint64_t PartialOverride.subscript.getter@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  unint64_t v35 = a2;
  uint64_t v3 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a1 + 8);
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = *(void *)(v3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v7);
  unint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v19 = *(int *)(v18 + 28);
  uint64_t v33 = v2;
  uint64_t v39 = *(void *)(v2 + v19);
  uint64_t v37 = v20;
  uint64_t v38 = v15;
  type metadata accessor for Partial();
  uint64_t v21 = sub_1A7572B30();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = (char *)swift_getWitnessTable();
  Sequence.firstMap<A>(_:)((void (*)(char *))sub_1A74DE96C, (uint64_t)v36, v21, v10, WitnessTable, (uint64_t)v9);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v23(v9, 1, v10) == 1)
  {
    uint64_t v24 = *(void (**)(char *, uint64_t))(v34 + 8);
    v24(v9, v3);
    swift_getAtKeyPath();
    int v25 = v23(v6, 1, v10);
    uint64_t v26 = v35;
    if (v25 == 1)
    {
      v24(v6, v3);
      uint64_t v27 = 1;
    }
    else
    {
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v30(v14, v6, v10);
      v30(v26, v14, v10);
      uint64_t v27 = 0;
    }
  }
  else
  {
    unint64_t v28 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v28(v17, v9, v10);
    uint64_t v29 = v35;
    v28(v35, v17, v10);
    uint64_t v27 = 0;
    uint64_t v26 = v29;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v26, v27, 1, v10);
}

uint64_t sub_1A74DD818(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = type metadata accessor for Partial();
  swift_bridgeObjectRetain();
  a4(a2, v6);
  return swift_bridgeObjectRelease();
}

uint64_t PartialOverride.subscript.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a1 + 8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)v16 - v7;
  v16[1] = *(void *)(v2 + *(int *)(v9 + 28));
  type metadata accessor for Partial();
  uint64_t v10 = sub_1A7572B30();
  uint64_t v11 = type metadata accessor for Partial();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_1A7320598((void (*)(char *, char *))sub_1A74DE99C, (uint64_t)a1, v10, v11, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v13);
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
  uint64_t result = type metadata accessor for PartialOverride();
  *(void *)(a2 + *(int *)(result + 28)) = v14;
  return result;
}

uint64_t sub_1A74DDAA8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return swift_bridgeObjectRelease();
}

void static Optional<A>.partialDecode<A>(key:in:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t *a4@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v29 = a4;
  uint64_t v6 = sub_1A7573640();
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A7573210();
  uint64_t v28 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v27 - v10;
  sub_1A7573A80();
  uint64_t v33 = a3;
  swift_getWitnessTable();
  uint64_t v12 = v31;
  sub_1A7573A50();
  if (v12)
  {
    id v32 = v12;
    id v13 = v12;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
    if (swift_dynamicCast())
    {
      uint64_t v14 = v27;
      int v15 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v8, v6);
      if (v15 == *MEMORY[0x1E4FBBA80])
      {

        (*(void (**)(char *, uint64_t))(v14 + 96))(v8, v6);
        uint64_t v16 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538) + 48)];
        uint64_t v17 = sub_1A7573630();
        uint64_t v18 = v29;
        *(_OWORD *)uint64_t v29 = 0u;
        *((_OWORD *)v18 + 1) = 0u;
        (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      }
      else if (v15 == *MEMORY[0x1E4FBBA68])
      {

        (*(void (**)(char *, uint64_t))(v14 + 96))(v8, v6);
        uint64_t v24 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704508) + 48)];
        uint64_t v25 = sub_1A7573630();
        uint64_t v26 = v29;
        *(_OWORD *)uint64_t v29 = 0u;
        *((_OWORD *)v26 + 1) = 0u;
        (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
      }
    }
  }
  else
  {
    uint64_t v19 = v28;
    uint64_t v20 = *(void *)(a2 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, a2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
      uint64_t v21 = v29;
      *(_OWORD *)uint64_t v29 = 0u;
      *((_OWORD *)v21 + 1) = 0u;
    }
    else
    {
      uint64_t v22 = v29;
      void v29[3] = a2;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v22);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_0, v11, a2);
    }
  }
}

void sub_1A74DDF68(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t *a4@<X8>)
{
}

uint64_t static KeyPath<>.partialDecode<A>(key:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(a4 + 8))(a1, a2, a3, a5, *(void *)(*MEMORY[0x1E4FBC5F0] + v5 + 8), a4);
}

uint64_t sub_1A74DDFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static KeyPath<>.partialDecode<A>(key:in:)(a1, a2, a3, *(void *)(a6 - 8), a4);
}

void static PartialPrimitive<>.partialDecode<A>(key:in:)(uint64_t a1@<X2>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v5 = sub_1A7573640();
  uint64_t v17 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a3 + 24) = a1;
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)a3);
  sub_1A7573A80();
  uint64_t v8 = v19;
  sub_1A7573A50();
  if (v8)
  {
    __swift_deallocate_boxed_opaque_existential_0(a3);
    id v20 = v8;
    id v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
    if (swift_dynamicCast())
    {
      uint64_t v10 = v17;
      int v11 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v7, v5);
      if (v11 == *MEMORY[0x1E4FBBA80])
      {

        (*(void (**)(char *, uint64_t))(v10 + 96))(v7, v5);
        uint64_t v12 = &v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538) + 48)];
        uint64_t v13 = sub_1A7573630();
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      else if (v11 == *MEMORY[0x1E4FBBA68])
      {

        (*(void (**)(char *, uint64_t))(v10 + 96))(v7, v5);
        uint64_t v14 = &v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704508) + 48)];
        uint64_t v15 = sub_1A7573630();
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v5);
      }
    }
  }
}

uint64_t sub_1A74DE2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  sub_1A75736A0();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  id v9 = (char *)a4 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *a4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 48))(a1, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v9, a1, AssociatedTypeWitness);
}

void sub_1A74DE3C8(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE3F4(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE420(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE44C(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE478(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE4A4(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE4D0(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE4FC(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE528(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE554(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE580(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE5AC(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE5D8(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE604(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE630(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE670(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
}

void sub_1A74DE6B0(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  swift_getWitnessTable();
  uint64_t WitnessTable = swift_getWitnessTable();
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, WitnessTable, a2);
}

void sub_1A74DE764(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  swift_getWitnessTable();
  uint64_t WitnessTable = swift_getWitnessTable();
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, WitnessTable, a2);
}

void sub_1A74DE834(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1A74DF4E8(&qword_1E96F5200, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
  static PartialDecodable.partialDecode<A>(key:in:)(v1, v3, a1);
}

unint64_t sub_1A74DE8D0()
{
  unint64_t result = qword_1E96F51F8;
  if (!qword_1E96F51F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F51F8);
  }
  return result;
}

uint64_t type metadata accessor for PartialOverride()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A74DE93C(uint64_t a1)
{
  return sub_1A74DD818(a1, *(void *)(v1 + 24), *(void *)(v1 + 16), (void (*)(uint64_t, uint64_t))Partial.subscript.getter);
}

uint64_t sub_1A74DE96C(uint64_t a1)
{
  return sub_1A74DD818(a1, *(void *)(v1 + 24), *(void *)(v1 + 16), (void (*)(uint64_t, uint64_t))Partial.subscript.getter);
}

uint64_t sub_1A74DE99C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A74DDAA8(v1, a1);
}

uint64_t sub_1A74DE9BC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A74DEA0C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A74DEA5C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for PropertyDoesNotConformToPartialDecodableValue()
{
  return &type metadata for PropertyDoesNotConformToPartialDecodableValue;
}

uint64_t sub_1A74DEABC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A74DEB58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1A74DEC54(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74DECC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A74DED44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A74DEDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A74DEE54(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A74DEFA0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1A74DEFB4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1A74DF190);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          void *v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t dispatch thunk of static PartialDecodable.partialKeyPath(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of static PartialDecodableValue.partialDecode<A>(key:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

unint64_t sub_1A74DF1F4()
{
  unint64_t result = qword_1E96F5208;
  if (!qword_1E96F5208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5208);
  }
  return result;
}

unint64_t sub_1A74DF248()
{
  unint64_t result = qword_1E96F5210;
  if (!qword_1E96F5210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5210);
  }
  return result;
}

unint64_t sub_1A74DF29C()
{
  unint64_t result = qword_1E96F5218;
  if (!qword_1E96F5218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5218);
  }
  return result;
}

unint64_t sub_1A74DF2F0()
{
  unint64_t result = qword_1E96F5220;
  if (!qword_1E96F5220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5220);
  }
  return result;
}

unint64_t sub_1A74DF344()
{
  unint64_t result = qword_1E96F5228;
  if (!qword_1E96F5228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5228);
  }
  return result;
}

unint64_t sub_1A74DF398()
{
  unint64_t result = qword_1E96F5230;
  if (!qword_1E96F5230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5230);
  }
  return result;
}

unint64_t sub_1A74DF3EC()
{
  unint64_t result = qword_1E96F5238;
  if (!qword_1E96F5238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F5238);
  }
  return result;
}

unint64_t sub_1A74DF440()
{
  unint64_t result = qword_1EB7043F8;
  if (!qword_1EB7043F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7043F8);
  }
  return result;
}

unint64_t sub_1A74DF494()
{
  unint64_t result = qword_1EB7043E8;
  if (!qword_1EB7043E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7043E8);
  }
  return result;
}

uint64_t sub_1A74DF4E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A74DF530@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1A74DE2CC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t REMOrderedIdentifierMap.reorder<A>(objects:)(uint64_t a1, uint64_t a2)
{
  sub_1A7572B30();
  swift_getTupleTypeMetadata2();
  swift_getWitnessTable();
  uint64_t v5 = v2;
  sub_1A75728B0();
  sub_1A7572B30();
  swift_getWitnessTable();
  sub_1A75724B0();
  if (!v2)
  {
    uint64_t v11 = a1;
    sub_1A75723A0();
    swift_bridgeObjectRetain();
    id v6 = objc_msgSend(v12, sel_orderedIdentifiers);
    uint64_t v7 = MEMORY[0x1E4FBB1A0];
    sub_1A7572A10();

    MEMORY[0x1F4188790](v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A74DFBD4();
    sub_1A7572900();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v13;
    uint64_t v9 = swift_bridgeObjectRetain();
    LOBYTE(v7) = MEMORY[0x1AD0CA660](v9, v7, a2, MEMORY[0x1E4FBB1B0]);
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      MEMORY[0x1F4188790](v11);
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      sub_1A75736B0();
      sub_1A7572AD0();
      uint64_t v5 = v13;
    }
    swift_bridgeObjectRelease();
  }
  return v5;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  uint64_t v3 = v2;
  id v6 = _s24ObjectWithNonNilObjectIDCMa();
  uint64_t v7 = sub_1A75723A0();
  uint64_t v22 = v7;
  uint64_t v21 = sub_1A75723A0();
  uint64_t v8 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1AD0CAD00](v8, a2))
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v9 = 4;
  while (1)
  {
    unint64_t v10 = v9 - 4;
    uint64_t v11 = sub_1A7572AA0();
    sub_1A7572A50();
    if ((v11 & 1) == 0) {
      break;
    }
    int v12 = *(void **)(a1 + 8 * v9);
    swift_unknownObjectRetain();
    uint64_t v13 = v9 - 3;
    if (__OFADD__(v10, 1)) {
      goto LABEL_11;
    }
LABEL_7:
    uint64_t v14 = objc_msgSend(v12, sel_remObjectID);
    id v20 = (char *)v12;
    if (v14) {
      id v20 = sub_1A7492F70((uint64_t)v14, (uint64_t)&v20);
    }
    sub_1A7572B30();
    sub_1A7572AE0();
    ++v9;
    if (v13 == MEMORY[0x1AD0CAD00](a1, a2)) {
      goto LABEL_12;
    }
  }
  int v12 = (void *)sub_1A75735F0();
  uint64_t v13 = v9 - 3;
  if (!__OFADD__(v10, 1)) {
    goto LABEL_7;
  }
LABEL_11:
  __break(1u);
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v7 = v22;
  uint64_t v3 = v2;
LABEL_14:
  int v15 = REMOrderedIdentifierMap.reorder<A>(objects:)(v7, v6);
  if (v3)
  {
    int v16 = v21;
  }
  else
  {
    unint64_t v17 = (char *)v15;
    uint64_t v18 = swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t)v17;
    id v20 = v17;
    MEMORY[0x1F4188790](v18);
    sub_1A7572B30();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_1A75728B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v16 = sub_1A7572A70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1A74DF874@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *a1;
  id v9 = objc_msgSend(*a1, sel_remObjectID);
  id v10 = objc_msgSend(v9, sel_uuid);

  sub_1A7571BB0();
  uint64_t v11 = sub_1A7571B80();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v11;
  a2[1] = v13;
  a2[2] = (uint64_t)v8;
  return swift_unknownObjectRetain();
}

uint64_t sub_1A74DF9B8@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A74DF874(a1, a2);
}

uint64_t sub_1A74DF9D4(void **a1)
{
  unint64_t v1 = *a1;
  uint64_t v2 = self;
  sub_1A7573560();
  sub_1A7572740();
  id v3 = objc_msgSend(v1, sel_remObjectID, 0, 0xE000000000000000);
  id v4 = objc_msgSend(v3, sel_description);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  sub_1A7572740();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_invalidParameterErrorWithDescription_, v5);

  return swift_willThrow();
}

uint64_t sub_1A74DFB00(void **a1)
{
  return sub_1A74DF9D4(a1);
}

uint64_t sub_1A74DFB1C()
{
  sub_1A75724A0();
  uint64_t result = sub_1A7572410();
  if (v1)
  {
    sub_1A7572B30();
    return sub_1A7572AE0();
  }
  return result;
}

uint64_t sub_1A74DFBB8()
{
  return sub_1A74DFB1C();
}

unint64_t sub_1A74DFBD4()
{
  unint64_t result = qword_1E96F5240[0];
  if (!qword_1E96F5240[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB704AC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96F5240);
  }
  return result;
}

BOOL sub_1A74DFC30(id *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(*a1, sel_remObjectID);
  id v11 = objc_msgSend(v10, sel_uuid);

  sub_1A7571BB0();
  uint64_t v12 = sub_1A7571B80();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v15 = *a2;
  v19[0] = v12;
  v19[1] = v14;
  MEMORY[0x1AD0CA6D0](&v20, v19, v15, MEMORY[0x1E4FBB1A0], a3, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  uint64_t v16 = v20;
  if (v20) {
    swift_unknownObjectRelease();
  }
  return v16 != 0;
}

BOOL sub_1A74DFDB0(id *a1)
{
  return sub_1A74DFC30(a1, *(uint64_t **)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t _s24ObjectWithNonNilObjectIDCMa()
{
  return __swift_instantiateGenericMetadata();
}

id sub_1A74E009C(uint64_t a1)
{
  return *(id *)(a1 + 16);
}

id *sub_1A74E00A4()
{
  uint64_t v1 = *v0;

  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 12));
  return v0;
}

uint64_t sub_1A74E0124()
{
  uint64_t v0 = sub_1A74E00A4();
  uint64_t v1 = *((unsigned int *)*v0 + 12);
  uint64_t v2 = *((unsigned __int16 *)*v0 + 26);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_1A74E0178@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 24);
  return swift_unknownObjectRetain();
}

void *REMGroceryLocaleMapping.requiredLocaleIds(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[1];
  v11[0] = *v2;
  v11[1] = v3;
  id v4 = v11;
  REMGroceryLocaleMapping.localeSetting(for:)(&v12, *(Swift::String *)&a1);
  if (!v5)
  {
    Swift::String base = v12.base;
    uint64_t countAndFlagsBits = v12.meta._countAndFlagsBits;
    object = v12.meta._object;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A7578D60;
    *(Swift::String *)(inited + 32) = base;
    *(void *)(inited + 48) = countAndFlagsBits;
    *(void *)(inited + 56) = object;
    swift_bridgeObjectRelease();
    id v4 = (void *)sub_1A72E6AB4(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  return v4;
}

uint64_t REMGroceryLocaleMapping.init(url:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1A75719D0();
  if (v2)
  {
    uint64_t v9 = sub_1A75719C0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  else
  {
    uint64_t v7 = v5;
    unint64_t v8 = v6;
    sub_1A7571460();
    swift_allocObject();
    sub_1A7571450();
    sub_1A74EA528();
    sub_1A7571440();
    uint64_t v10 = sub_1A75719C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
    swift_release();
    uint64_t result = sub_1A72E3460(v7, v8);
    *a2 = v12;
    a2[1] = v13;
  }
  return result;
}

uint64_t static REMGroceryLocaleMapping.loadV1(url:)@<X0>(void *a1@<X8>)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  uint64_t result = sub_1A75719D0();
  if (!v1)
  {
    uint64_t v5 = result;
    unint64_t v6 = v4;
    uint64_t v7 = self;
    unint64_t v8 = (void *)sub_1A7571A00();
    id v17 = 0;
    id v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 2, &v17);

    id v10 = v17;
    if (v9)
    {
      sub_1A7573330();
      swift_unknownObjectRelease();
      sub_1A72BEE98((uint64_t)v19, (uint64_t)&v17);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701A98);
      if (swift_dynamicCast())
      {
        uint64_t v11 = sub_1A74EA350(v16);
        swift_bridgeObjectRelease();
        sub_1A72E3460(v5, v6);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        *a1 = 1;
        a1[1] = v11;
      }
      else
      {
        id v17 = 0;
        unint64_t v18 = 0xE000000000000000;
        sub_1A7573560();
        sub_1A7572740();
        sub_1A7571870();
        sub_1A7572740();
        swift_bridgeObjectRelease();
        id v13 = v17;
        unint64_t v14 = v18;
        sub_1A74EA57C();
        swift_allocError();
        *(void *)uint64_t v15 = v13;
        *(void *)(v15 + 8) = v14;
        *(unsigned char *)(v15 + 16) = 1;
        swift_willThrow();
        sub_1A72E3460(v5, v6);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      }
    }
    else
    {
      uint64_t v12 = v10;
      sub_1A7571850();

      swift_willThrow();
      return sub_1A72E3460(v5, v6);
    }
  }
  return result;
}

uint64_t sub_1A74E06F0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1A74F9ECC();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1A74E37E0(v6);
  return sub_1A75736D0();
}

uint64_t sub_1A74E076C()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F52C8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F52C8);
  if (qword_1E96F0790 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1E972BC28);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1A74E0834()
{
  qword_1EB7029A8 = MEMORY[0x1E4FBC870];
}

id REMGroceryDummyModel.__allocating_init(labels:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC19ReminderKitInternal20REMGroceryDummyModel_labels] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id REMGroceryDummyModel.init(labels:)(uint64_t a1)
{
  Class ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC19ReminderKitInternal20REMGroceryDummyModel_labels] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t REMGroceryDummyModel.predict(_:thresholds:)()
{
  return sub_1A73467B0(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x1E4FBC860]);
}

uint64_t REMGroceryDummyModel.labels.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL static REMGroceryDummyModel.isSupported(localeIdentifier:)(uint64_t a1, void *a2)
{
  if (qword_1EB7029B8 != -1) {
    swift_once();
  }
  if ((sub_1A72DB328(a1, (uint64_t)a2, qword_1EB7029A8) & 1) == 0)
  {
    sub_1A74E0A14(v8);
    if (v3) {
      return v2;
    }
    if (v8[1])
    {
      v6._uint64_t countAndFlagsBits = a1;
      v6._object = a2;
      Swift::Bool v2 = REMGroceryLocaleMapping.isSupported(localeIdentifier:)(v6);
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  return 0;
}

void sub_1A74E0A14(void *a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v53 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  unint64_t v48 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v44 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v51 = (char *)&v44 - v12;
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v44 - v13;
  type metadata accessor for REMTrialClient();
  uint64_t inited = swift_initStackObject();
  *(_DWORD *)(inited + 24) = 304;
  id v16 = objc_msgSend(self, sel_clientWithIdentifier_, 304);
  *(void *)(inited + 16) = v16;
  sub_1A738C89C(v56);
  if (!v1)
  {

LABEL_7:
    uint64_t v29 = v56[1];
    uint64_t v30 = v52;
    *uint64_t v52 = v56[0];
    v30[1] = v29;
    return;
  }
  os_log_type_t v49 = v14;
  uint64_t v50 = v5;
  if (qword_1E96F08E0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1A7571E90();
  __swift_project_value_buffer(v17, (uint64_t)qword_1E96F52C8);
  id v18 = v1;
  id v19 = v1;
  uint64_t v20 = sub_1A7571E80();
  os_log_type_t v21 = sub_1A7572FD0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    BOOL v45 = v10;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v46 = inited;
    uint64_t v25 = v24;
    v56[0] = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v47 = v4;
    swift_getErrorValue();
    uint64_t v26 = Error.rem_errorDescription.getter(v55);
    uint64_t v54 = sub_1A72D1730(v26, v27, v56);
    uint64_t v4 = v47;
    sub_1A7573250();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A72A1000, v20, v21, "localeSetting { error: %s }", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v25, -1, -1);
    uint64_t v28 = v23;
    id v10 = v45;
    MEMORY[0x1AD0CD330](v28, -1, -1);
  }
  else
  {
  }
  uint64_t v31 = v50;
  uint64_t v32 = (uint64_t)v53;
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v34 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v35 = objc_msgSend(v34, sel_resourceURL);

  uint64_t v36 = v49;
  if (v35)
  {
    uint64_t v37 = v51;
    sub_1A7571940();

    uint64_t v38 = *(void (**)(uint64_t, char *, uint64_t))(v31 + 32);
    v38(v32, v37, v4);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v32, 1, v4) != 1)
    {
      v38((uint64_t)v36, (char *)v32, v4);
      sub_1A7571900();
      sub_1A7571900();
      uint64_t v39 = v10;
      uint64_t v40 = *(void (**)(char *, uint64_t))(v31 + 8);
      v40(v37, v4);
      uint64_t v41 = (uint64_t)v48;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v48, v39, v4);
      REMGroceryLocaleMapping.init(url:)(v41, v56);
      swift_release();
      v40(v39, v4);
      v40(v36, v4);
      goto LABEL_7;
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v32, 1, 1, v4);
  }
  sub_1A72CB560(v32, &qword_1EB704C30);
  uint64_t v42 = self;
  uint64_t v43 = (void *)sub_1A75725E0();
  objc_msgSend(v42, sel_internalErrorWithDebugDescription_, v43);

  swift_willThrow();
  swift_release();
}

Swift::Bool __swiftcall REMGroceryLocaleMapping.isSupported(localeIdentifier:)(Swift::String localeIdentifier)
{
  uint64_t v2 = v1;
  object = localeIdentifier._object;
  uint64_t countAndFlagsBits = localeIdentifier._countAndFlagsBits;
  uint64_t v5 = sub_1A7571D10();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7029E8);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A7571D30();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  uint64_t v44 = v12;
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A7571BF0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t v39 = countAndFlagsBits;
  unint64_t v40 = (unint64_t)object;
  sub_1A7571BE0();
  Swift::String v20 = Locale.Components.rem_languageAndScriptWithRegion()();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (*(void *)(v19 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1A72B2210(v20._countAndFlagsBits, (uint64_t)v20._object);
    char v22 = v21;
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_3;
    }
  }
  uint64_t v24 = v14;
  sub_1A7571C00();
  if ((sub_1A74E32C4() & 1) == 0)
  {
    sub_1A7571D20();
    sub_1A7571CE0();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v42);
    uint64_t v26 = sub_1A7571C20();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v10, 1, v26) == 1)
    {
      sub_1A72CB560((uint64_t)v10, &qword_1EB7029E8);
      if (qword_1E96F08E0 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1A7571E90();
      __swift_project_value_buffer(v28, (uint64_t)qword_1E96F52C8);
      unint64_t v29 = v40;
      swift_bridgeObjectRetain_n();
      uint64_t v30 = sub_1A7571E80();
      os_log_type_t v31 = sub_1A7572FD0();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        uint64_t v46 = v33;
        *(_DWORD *)uint64_t v32 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v45 = sub_1A72D1730(v39, v29, &v46);
        sub_1A7573250();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A72A1000, v30, v31, "REMTrialClient: cannot identify the language identifier for locale: %s", v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v33, -1, -1);
        MEMORY[0x1AD0CD330](v32, -1, -1);

        (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v43);
LABEL_20:
        char v23 = 0;
        return v23 & 1;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v34 = sub_1A7571C10();
      uint64_t v36 = v35;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v26);
      if (*(void *)(v19 + 16))
      {
        sub_1A72B2210(v34, v36);
        if (v37)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v43);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_3:
          swift_bridgeObjectRelease();
          char v23 = 1;
          return v23 & 1;
        }
      }
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v43);
    goto LABEL_20;
  }
  if (*(void *)(v19 + 16))
  {
    sub_1A72B2210(0x746E61482D687ALL, 0xE700000000000000);
    char v23 = v25;
  }
  else
  {
    char v23 = 0;
  }
  (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v43);
  return v23 & 1;
}

BOOL static REMGroceryDummyModel.isGrocerySupported(localeIdentifier:)(uint64_t a1, void *a2)
{
  if (qword_1EB7029B8 != -1) {
    swift_once();
  }
  if (sub_1A72DB328(a1, (uint64_t)a2, qword_1EB7029A8)) {
    return 0;
  }
  sub_1A74E0A14(v7);
  if (!v7[1])
  {
    return 0;
  }
  else
  {
    v4._uint64_t countAndFlagsBits = a1;
    v4._object = a2;
    Swift::Bool v5 = REMGroceryLocaleMapping.isSupported(localeIdentifier:)(v4);
    swift_bridgeObjectRelease();
  }
  return v5;
}

void *static REMGroceryDummyModel.modelBaseLocale(for:)(uint64_t a1, void *a2)
{
  sub_1A74E0A14(&v10);
  if (!v3)
  {
    if (v10.base._object)
    {
      v9[0] = v10.base._countAndFlagsBits;
      v9[1] = v10.base._object;
      uint64_t countAndFlagsBits = v9;
      v7._uint64_t countAndFlagsBits = a1;
      v7._object = a2;
      REMGroceryLocaleMapping.localeSetting(for:)(&v10, v7);
      swift_bridgeObjectRelease();
      if (!v8)
      {
        uint64_t countAndFlagsBits = (void *)v10.base._countAndFlagsBits;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      return 0;
    }
  }
  return countAndFlagsBits;
}

uint64_t static REMGroceryDummyModel.groceryLanguagesForSettings()()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1A7571D30();
  uint64_t v3 = *(void **)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v104 - v7;
  sub_1A74E0A14(&v125);
  if (v0) {
    return v1;
  }
  uint64_t v113 = v3;
  uint64_t v121 = v2;
  uint64_t v122 = v6;
  uint64_t v9 = v126;
  if (!v126) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v119 = v8;
  uint64_t v105 = 0;
  int64_t v10 = 0;
  unint64_t v125 = MEMORY[0x1E4FBC860];
  uint64_t v11 = v126 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v126 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v126 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v108 = MEMORY[0x1E4FBC868];
  uint64_t v16 = v121;
  int64_t v116 = v15;
  uint64_t v117 = v126 + 64;
  if (!v14) {
    goto LABEL_9;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v17 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v10 << 6))
  {
    uint64_t v19 = *(void *)(v9 + 56);
    uint64_t v20 = v19 + 48 * i;
    unint64_t v1 = *(void *)(v20 + 40);
    if (!v1)
    {
      if (v14) {
        goto LABEL_6;
      }
      goto LABEL_9;
    }
    char v25 = (uint64_t *)(v19 + 48 * i);
    uint64_t v26 = v25[1];
    uint64_t v118 = *v25;
    uint64_t v27 = (void *)v25[3];
    uint64_t v28 = *(void *)(v20 + 32);
    uint64_t v29 = v108;
    uint64_t v30 = *(void *)(v108 + 16);
    swift_bridgeObjectRetain();
    uint64_t v120 = v27;
    if (!v30)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_28:
      uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
      goto LABEL_29;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_1A72B2210(v28, v1);
    if ((v32 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    uint64_t v33 = *(void **)(*(void *)(v29 + 56) + 8 * v31);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_29:
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v123 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v33 = sub_1A72AC148(0, v33[2] + 1, 1, v33);
    }
    unint64_t v36 = v33[2];
    unint64_t v35 = v33[3];
    id v124 = v33;
    if (v36 >= v35 >> 1) {
      id v124 = sub_1A72AC148((void *)(v35 > 1), v36 + 1, 1, v124);
    }
    char v37 = v124;
    v124[2] = v36 + 1;
    uint64_t v38 = &v37[2 * v36];
    v38[4] = v118;
    v38[5] = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v39 = v108;
    char v40 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v127 = (void *)v39;
    uint64_t v16 = v123;
    unint64_t v42 = sub_1A72B2210(v123, v1);
    uint64_t v43 = *(void *)(v39 + 16);
    BOOL v44 = (v41 & 1) == 0;
    uint64_t v45 = v43 + v44;
    if (__OFADD__(v43, v44)) {
      goto LABEL_96;
    }
    char v46 = v41;
    if (*(void *)(v39 + 24) >= v45)
    {
      uint64_t v16 = v121;
      if ((v40 & 1) == 0)
      {
        unint64_t v39 = (unint64_t)&v127;
        sub_1A72BB974();
      }
    }
    else
    {
      sub_1A72B5778(v45, v40);
      unint64_t v39 = (unint64_t)v127;
      unint64_t v47 = sub_1A72B2210(v16, v1);
      uint64_t v16 = v121;
      if ((v46 & 1) != (v48 & 1))
      {
        sub_1A7574010();
        __break(1u);
LABEL_109:
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      unint64_t v42 = v47;
    }
    os_log_type_t v49 = v127;
    uint64_t v108 = (uint64_t)v127;
    if (v46)
    {
      uint64_t v50 = v127[7];
      swift_bridgeObjectRelease();
      *(void *)(v50 + 8 * v42) = v124;
    }
    else
    {
      v127[(v42 >> 6) + 8] |= 1 << v42;
      uint64_t v51 = (void *)(v49[6] + 16 * v42);
      *uint64_t v51 = v123;
      v51[1] = v1;
      *(void *)(v49[7] + 8 * v42) = v124;
      uint64_t v52 = v49[2];
      BOOL v53 = __OFADD__(v52, 1);
      uint64_t v54 = v52 + 1;
      if (v53)
      {
        __break(1u);
        goto LABEL_104;
      }
      v49[2] = v54;
      swift_bridgeObjectRetain();
    }
    int64_t v15 = v116;
    uint64_t v11 = v117;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_6;
    }
LABEL_9:
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    char v22 = v119;
    if (v21 >= v15) {
      goto LABEL_45;
    }
    unint64_t v23 = *(void *)(v11 + 8 * v21);
    ++v10;
    if (!v23)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_45;
      }
      unint64_t v23 = *(void *)(v11 + 8 * v10);
      if (!v23)
      {
        int64_t v10 = v21 + 2;
        if (v21 + 2 >= v15) {
          goto LABEL_45;
        }
        unint64_t v23 = *(void *)(v11 + 8 * v10);
        if (!v23)
        {
          int64_t v24 = v21 + 3;
          if (v24 >= v15)
          {
LABEL_45:
            swift_release();
            uint64_t v55 = v108;
            uint64_t v56 = *(void *)(v108 + 64);
            uint64_t v106 = v108 + 64;
            uint64_t v57 = 1 << *(unsigned char *)(v108 + 32);
            if (v57 < 64) {
              uint64_t v58 = ~(-1 << v57);
            }
            else {
              uint64_t v58 = -1;
            }
            unint64_t v59 = v58 & v56;
            int64_t v107 = (unint64_t)(v57 + 63) >> 6;
            unint64_t v60 = (unint64_t)(v113 + 2);
            id v124 = v113 + 1;
            swift_bridgeObjectRetain();
            int64_t v61 = 0;
            uint64_t v120 = (void *)v60;
            if (!v59) {
              goto LABEL_50;
            }
LABEL_49:
            uint64_t v112 = (v59 - 1) & v59;
            for (unint64_t j = __clz(__rbit64(v59)) | (v61 << 6); ; unint64_t j = __clz(__rbit64(v64)) + (v61 << 6))
            {
              uint64_t v66 = (uint64_t *)(*(void *)(v55 + 48) + 16 * j);
              uint64_t v68 = *v66;
              uint64_t v67 = v66[1];
              uint64_t v69 = *(void *)(*(void *)(v55 + 56) + 8 * j);
              type metadata accessor for REMGroceryLanguage();
              uint64_t v70 = swift_allocObject();
              uint64_t v71 = v69;
              uint64_t v72 = v70;
              *(void *)(v70 + 16) = v68;
              *(void *)(v70 + 24) = v67;
              int64_t v116 = *(void *)(v71 + 16);
              if (v116)
              {
                uint64_t v110 = v70;
                int64_t v111 = v61;
                uint64_t v115 = v71 + 32;
                swift_bridgeObjectRetain();
                uint64_t v109 = v71;
                swift_bridgeObjectRetain();
                uint64_t v73 = 0;
                uint64_t v74 = MEMORY[0x1E4FBC870];
                uint64_t v75 = (uint64_t)v122;
                do
                {
                  uint64_t v118 = v73;
                  uint64_t v76 = *(void *)(v115 + 16 * v73 + 8);
                  swift_bridgeObjectRetain_n();
                  uint64_t v117 = v76;
                  sub_1A7571C00();
                  sub_1A72E1094(&qword_1E96F1488, MEMORY[0x1E4F27A78]);
                  swift_bridgeObjectRetain();
                  uint64_t v77 = sub_1A7572510();
                  uint64_t v78 = -1 << *(unsigned char *)(v74 + 32);
                  unint64_t v79 = v77 & ~v78;
                  uint64_t v123 = v74 + 56;
                  if ((*(void *)(v74 + 56 + ((v79 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v79))
                  {
                    unint64_t v114 = v60 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
                    uint64_t v80 = ~v78;
                    uint64_t v81 = v113[9];
                    uint64_t v82 = (void (*)(void, void, void))v113[2];
                    do
                    {
                      uint64_t v83 = v121;
                      uint64_t v84 = v122;
                      char v85 = v82;
                      v82(v122, *(void *)(v74 + 48) + v81 * v79, v121);
                      sub_1A72E1094(&qword_1E96F1490, MEMORY[0x1E4F27A78]);
                      char v86 = sub_1A75725C0();
                      char v87 = (void (*)(char *, uint64_t))*v124;
                      ((void (*)(char *, uint64_t))*v124)(v84, v83);
                      if (v86)
                      {
                        swift_bridgeObjectRelease();
                        char v22 = v119;
                        uint64_t v16 = v121;
                        v87(v119, v121);
                        uint64_t v75 = (uint64_t)v122;
                        unint64_t v60 = (unint64_t)v120;
                        goto LABEL_67;
                      }
                      unint64_t v79 = (v79 + 1) & v80;
                      char v22 = v119;
                      uint64_t v82 = v85;
                    }
                    while (((*(void *)(v123 + ((v79 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v79) & 1) != 0);
                    swift_bridgeObjectRelease();
                    uint64_t v16 = v121;
                    uint64_t v75 = (uint64_t)v122;
                    unint64_t v60 = (unint64_t)v120;
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v82 = *(void (**)(void, void, void))v60;
                  }
                  char v88 = swift_isUniquelyReferenced_nonNull_native();
                  v82(v75, v22, v16);
                  uint64_t v127 = (void *)v74;
                  sub_1A74E795C(v75, v79, v88);
                  uint64_t v74 = (uint64_t)v127;
                  swift_bridgeObjectRelease();
                  ((void (*)(char *, uint64_t))*v124)(v22, v16);
LABEL_67:
                  swift_bridgeObjectRelease();
                  uint64_t v73 = v118 + 1;
                }
                while (v118 + 1 != v116);
                uint64_t v89 = swift_bridgeObjectRelease();
                uint64_t v55 = v108;
                uint64_t v90 = v74;
                uint64_t v72 = v110;
                int64_t v61 = v111;
              }
              else
              {
                uint64_t v89 = swift_bridgeObjectRetain();
                uint64_t v90 = MEMORY[0x1E4FBC870];
              }
              *(void *)(v72 + 32) = v90;
              MEMORY[0x1AD0CABF0](v89);
              unint64_t v1 = *(void *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v1 >= *(void *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1A7572A60();
              }
              sub_1A7572AB0();
              sub_1A7572A30();
              unint64_t v59 = v112;
              if (v112) {
                goto LABEL_49;
              }
LABEL_50:
              int64_t v63 = v61 + 1;
              if (__OFADD__(v61, 1)) {
                goto LABEL_93;
              }
              if (v63 >= v107) {
                break;
              }
              unint64_t v64 = *(void *)(v106 + 8 * v63);
              ++v61;
              if (!v64)
              {
                int64_t v61 = v63 + 1;
                if (v63 + 1 >= v107) {
                  break;
                }
                unint64_t v64 = *(void *)(v106 + 8 * v61);
                if (!v64)
                {
                  int64_t v61 = v63 + 2;
                  if (v63 + 2 >= v107) {
                    break;
                  }
                  unint64_t v64 = *(void *)(v106 + 8 * v61);
                  if (!v64)
                  {
                    int64_t v65 = v63 + 3;
                    if (v65 >= v107) {
                      break;
                    }
                    unint64_t v64 = *(void *)(v106 + 8 * v65);
                    if (!v64)
                    {
                      while (1)
                      {
                        int64_t v61 = v65 + 1;
                        if (__OFADD__(v65, 1)) {
                          goto LABEL_95;
                        }
                        if (v61 >= v107) {
                          goto LABEL_81;
                        }
                        unint64_t v64 = *(void *)(v106 + 8 * v61);
                        ++v65;
                        if (v64) {
                          goto LABEL_63;
                        }
                      }
                    }
                    int64_t v61 = v65;
                  }
                }
              }
LABEL_63:
              uint64_t v112 = (v64 - 1) & v64;
            }
LABEL_81:
            swift_release();
            unint64_t v1 = v125;
            uint64_t v16 = v105;
            if (v125 >> 62) {
              goto LABEL_97;
            }
            if (*(void *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_83;
            }
            goto LABEL_98;
          }
          unint64_t v23 = *(void *)(v11 + 8 * v24);
          if (!v23)
          {
            while (1)
            {
              int64_t v10 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                goto LABEL_94;
              }
              if (v10 >= v15) {
                goto LABEL_45;
              }
              unint64_t v23 = *(void *)(v11 + 8 * v10);
              ++v24;
              if (v23) {
                goto LABEL_22;
              }
            }
          }
          int64_t v10 = v24;
        }
      }
    }
LABEL_22:
    unint64_t v14 = (v23 - 1) & v23;
  }
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  swift_bridgeObjectRetain();
  uint64_t v92 = sub_1A75738D0();
  swift_bridgeObjectRelease();
  if (v92)
  {
LABEL_83:
    if ((v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0) {
      goto LABEL_107;
    }
    uint64_t v91 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      uint64_t v127 = (void *)v91;
      sub_1A74E06F0((uint64_t *)&v127);
      if (v16) {
        goto LABEL_109;
      }
      uint64_t v16 = 0;
      swift_bridgeObjectRelease();
      unint64_t v39 = (unint64_t)v127;
      swift_bridgeObjectRelease();
      unint64_t v125 = v39;
      if (qword_1E96F0930 != -1) {
LABEL_104:
      }
        swift_once();
      unint64_t v1 = qword_1E96F5938;
      if (!(v39 >> 62))
      {
        swift_retain();
LABEL_90:
        sub_1A72DEC50(0, 0, v1);
        unint64_t v1 = v125;
        goto LABEL_101;
      }
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v103 = sub_1A75738D0();
      swift_bridgeObjectRelease();
      if ((v103 & 0x8000000000000000) == 0) {
        goto LABEL_90;
      }
      __break(1u);
LABEL_107:
      swift_bridgeObjectRetain_n();
      uint64_t v91 = (uint64_t)sub_1A72D2A68(v1);
      swift_bridgeObjectRelease();
    }
  }
LABEL_98:
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C80);
  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_1A75946B0;
  if (qword_1E96F0930 != -1) {
    swift_once();
  }
  *(void *)(v93 + 32) = qword_1E96F5938;
  type metadata accessor for REMGroceryLanguage();
  swift_allocObject();
  swift_retain();
  uint64_t v94 = sub_1A752C644(0x736E61482D687ALL, 0xE700000000000000, (uint64_t)&unk_1EFC93030);
  swift_arrayDestroy();
  *(void *)(v93 + 40) = v94;
  swift_allocObject();
  uint64_t v95 = sub_1A752C644(28261, 0xE200000000000000, (uint64_t)&unk_1EFC93060);
  swift_arrayDestroy();
  *(void *)(v93 + 48) = v95;
  swift_allocObject();
  uint64_t v96 = sub_1A752C644(29286, 0xE200000000000000, (uint64_t)&unk_1EFC93090);
  swift_arrayDestroy();
  *(void *)(v93 + 56) = v96;
  swift_allocObject();
  uint64_t v97 = sub_1A752C644(25956, 0xE200000000000000, (uint64_t)&unk_1EFC930D0);
  swift_arrayDestroy();
  *(void *)(v93 + 64) = v97;
  swift_allocObject();
  uint64_t v98 = sub_1A752C644(24938, 0xE200000000000000, (uint64_t)&unk_1EFC93100);
  swift_arrayDestroy();
  *(void *)(v93 + 72) = v98;
  swift_allocObject();
  long long v99 = sub_1A752C644(28523, 0xE200000000000000, (uint64_t)&unk_1EFC93130);
  swift_arrayDestroy();
  *(void *)(v93 + 80) = v99;
  swift_allocObject();
  char v100 = sub_1A752C644(0x3931345F7365, 0xE600000000000000, (uint64_t)&unk_1EFC93160);
  swift_arrayDestroy();
  *(void *)(v93 + 88) = v100;
  swift_allocObject();
  os_log_type_t v101 = sub_1A752C644(0x53455F7365, 0xE500000000000000, (uint64_t)&unk_1EFC93190);
  swift_arrayDestroy();
  *(void *)(v93 + 96) = v101;
  uint64_t v127 = (void *)v93;
  sub_1A7572A30();
  unint64_t v1 = (unint64_t)v127;
LABEL_101:
  swift_bridgeObjectRelease();
  return v1;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMGroceryLocaleMapping.localeSetting(for:)(ReminderKitInternal::REMGroceryLocaleMapping::LocaleSetting *__return_ptr retstr, Swift::String a2)
{
  uint64_t v54 = retstr;
  uint64_t v3 = v2;
  object = a2._object;
  uint64_t countAndFlagsBits = a2._countAndFlagsBits;
  uint64_t v6 = sub_1A7571D10();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7029E8);
  MEMORY[0x1F4188790](v9 - 8);
  BOOL v53 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1A7571D30();
  uint64_t v55 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v12 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A7571BF0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v3 + 8);
  swift_bridgeObjectRetain();
  v50[0] = countAndFlagsBits;
  v50[1] = object;
  sub_1A7571BE0();
  Swift::String v18 = Locale.Components.rem_languageAndScriptWithRegion()();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (*(void *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1A72B2210(v18._countAndFlagsBits, (uint64_t)v18._object);
    if (v20)
    {
      int64_t v21 = (uint64_t *)(*(void *)(v17 + 56) + 48 * v19);
      uint64_t v23 = *v21;
      char v22 = (void *)v21[1];
      uint64_t v25 = v21[2];
      int64_t v24 = (void *)v21[3];
      uint64_t v27 = v21[4];
      uint64_t v26 = (void *)v21[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
LABEL_15:
      char v48 = v54;
      v54->base._uint64_t countAndFlagsBits = v23;
      v48->base._object = v22;
      v48->meta._uint64_t countAndFlagsBits = v25;
      v48->meta._object = v24;
      v48->ui.value._uint64_t countAndFlagsBits = v27;
      v48->ui.value._object = v26;
      return;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = v12;
  sub_1A7571C00();
  if (sub_1A74E32C4())
  {
    uint64_t v29 = v55;
    if (*(void *)(v17 + 16))
    {
      unint64_t v30 = sub_1A72B2210(0x746E61482D687ALL, 0xE700000000000000);
      if (v31)
      {
        char v32 = (uint64_t *)(*(void *)(v17 + 56) + 48 * v30);
        uint64_t v23 = *v32;
        char v22 = (void *)v32[1];
        uint64_t v25 = v32[2];
        int64_t v24 = (void *)v32[3];
        uint64_t v27 = v32[4];
        uint64_t v26 = (void *)v32[5];
        uint64_t v33 = *(void (**)(char *, uint64_t))(v29 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v33(v28, v58);
        goto LABEL_15;
      }
    }
    sub_1A74EA57C();
    swift_allocError();
    *(void *)uint64_t v39 = 0xD000000000000011;
    unint64_t v37 = 0x80000001A75A45C0;
    char v40 = 2;
    uint64_t v41 = v58;
  }
  else
  {
    sub_1A7571D20();
    uint64_t v34 = (uint64_t)v53;
    sub_1A7571CE0();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v52);
    uint64_t v35 = sub_1A7571C20();
    uint64_t v36 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
    {
      sub_1A72CB560(v34, &qword_1EB7029E8);
      unint64_t v56 = 0;
      unint64_t v57 = 0xE000000000000000;
      sub_1A7573560();
      swift_bridgeObjectRelease();
      unint64_t v56 = 0xD000000000000010;
      unint64_t v57 = 0x80000001A75A45A0;
      sub_1A7572740();
      unint64_t v38 = v56;
      unint64_t v37 = v57;
      sub_1A74EA57C();
      swift_allocError();
      char v40 = 0;
      *(void *)uint64_t v39 = v38;
    }
    else
    {
      uint64_t v42 = sub_1A7571C10();
      uint64_t v44 = v43;
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
      if (*(void *)(v17 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v45 = sub_1A72B2210(v42, v44);
        if (v46)
        {
          unint64_t v47 = (uint64_t *)(*(void *)(v17 + 56) + 48 * v45);
          uint64_t v23 = *v47;
          char v22 = (void *)v47[1];
          uint64_t v25 = v47[2];
          int64_t v24 = (void *)v47[3];
          uint64_t v27 = v47[4];
          uint64_t v26 = (void *)v47[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v58);
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
      }
      unint64_t v56 = 0x65676175676E614CLL;
      unint64_t v57 = 0xEA0000000000203ALL;
      sub_1A7572740();
      swift_bridgeObjectRelease();
      unint64_t v49 = v56;
      unint64_t v37 = v57;
      sub_1A74EA57C();
      swift_allocError();
      *(void *)uint64_t v39 = v49;
      char v40 = 2;
    }
    uint64_t v41 = v58;
    uint64_t v29 = v55;
  }
  *(void *)(v39 + 8) = v37;
  *(unsigned char *)(v39 + 16) = v40;
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v41);
}

id REMGroceryDummyModel.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void REMGroceryDummyModel.init()()
{
}

id REMGroceryDummyModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A74E2E58()
{
  return sub_1A73467B0(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x1E4FBC860]);
}

uint64_t sub_1A74E2E98()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMGroceryLocaleMapping.LocaleSetting.base.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMGroceryLocaleMapping.LocaleSetting.meta.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMGroceryLocaleMapping.LocaleSetting.ui.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A74E2F3C()
{
  uint64_t v1 = 1635018093;
  if (*v0 != 1) {
    uint64_t v1 = 26997;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1702060386;
  }
}

uint64_t sub_1A74E2F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74EAE0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74E2FA4(uint64_t a1)
{
  unint64_t v2 = sub_1A74EA5D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74E2FE0(uint64_t a1)
{
  unint64_t v2 = sub_1A74EA5D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMGroceryLocaleMapping.LocaleSetting.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7029D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74EA5D0();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_1A7573A00();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1A7573A00();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_1A75739B0();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74E32AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMGroceryLocaleMapping.LocaleSetting.init(from:)(a1, a2);
}

uint64_t sub_1A74E32C4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702960);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1A7571D10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7571C70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571D20();
  sub_1A7571D00();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v7) == 1)
  {
    sub_1A72CB560((uint64_t)v2, &qword_1EB702960);
    char v11 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v2, v7);
    if (sub_1A7571C10() == 1953390920 && v12 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      char v11 = 1;
    }
    else
    {
      char v11 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v11 & 1;
}

uint64_t sub_1A74E3530()
{
  if (*v0) {
    return 0x676E697070616DLL;
  }
  else {
    return 0x6E6F6973726576;
  }
}

uint64_t sub_1A74E3564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74EAF2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A74E358C(uint64_t a1)
{
  unint64_t v2 = sub_1A74EA624();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74E35C8(uint64_t a1)
{
  unint64_t v2 = sub_1A74EA624();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMGroceryLocaleMapping.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7029E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74EA624();
  sub_1A7574190();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_1A7573A30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7029C0);
    char v13 = 1;
    sub_1A74EA678();
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v12[1];
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A74E37C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMGroceryLocaleMapping.init(from:)(a1, a2);
}

uint64_t sub_1A74E37E0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v167 = sub_1A7571D30();
  uint64_t v4 = *(void *)(v167 - 8);
  MEMORY[0x1F4188790](v167);
  uint64_t v166 = (char *)&v152 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_166;
    }
    if (v6) {
      return sub_1A74E4598(0, v6, 1, a1);
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_174;
  }
  uint64_t v157 = result;
  uint64_t v152 = a1;
  if (v6 < 2)
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v173 = MEMORY[0x1E4FBC860];
    uint64_t v162 = (char *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      unint64_t v15 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_132:
      if (v15 >= 2)
      {
        uint64_t v146 = *v152;
        do
        {
          unint64_t v147 = v15 - 2;
          if (v15 < 2) {
            goto LABEL_161;
          }
          if (!v146) {
            goto LABEL_173;
          }
          uint64_t v148 = *(void *)&v12[16 * v147 + 32];
          uint64_t v149 = *(void *)&v12[16 * v15 + 24];
          sub_1A74E4924((char *)(v146 + 8 * v148), (char *)(v146 + 8 * *(void *)&v12[16 * v15 + 16]), (char *)(v146 + 8 * v149), v162);
          if (v2) {
            break;
          }
          if (v149 < v148) {
            goto LABEL_162;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v12 = sub_1A74F9DDC((uint64_t)v12);
          }
          if (v147 >= *((void *)v12 + 2)) {
            goto LABEL_163;
          }
          uint64_t v150 = &v12[16 * v147 + 32];
          *(void *)uint64_t v150 = v148;
          *((void *)v150 + 1) = v149;
          unint64_t v151 = *((void *)v12 + 2);
          if (v15 > v151) {
            goto LABEL_164;
          }
          memmove(&v12[16 * v15 + 16], &v12[16 * v15 + 32], 16 * (v151 - v15));
          *((void *)v12 + 2) = v151 - 1;
          unint64_t v15 = v151 - 1;
        }
        while (v151 > 2);
      }
LABEL_143:
      swift_bridgeObjectRelease();
      *(void *)((v173 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1A7572A30();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v9 = a1;
    uint64_t v10 = v8 >> 1;
    type metadata accessor for REMGroceryLanguage();
    uint64_t v11 = sub_1A7572A90();
    *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v10;
    a1 = v9;
    uint64_t v162 = (char *)((v11 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v173 = v11;
  }
  uint64_t v13 = 0;
  uint64_t v14 = *a1;
  uint64_t v165 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v153 = v14 - 8;
  uint64_t v154 = v14 + 16;
  uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v159 = v6;
  uint64_t v168 = v14;
  while (2)
  {
    uint64_t v16 = v13 + 1;
    uint64_t v160 = v13;
    if (v13 + 1 >= v6) {
      goto LABEL_53;
    }
    uint64_t v17 = *(void *)(v14 + 8 * v16);
    uint64_t v18 = *(void *)(v14 + 8 * v13);
    uint64_t v19 = *(void *)(v17 + 24);
    uint64_t v163 = v17;
    if (!v19)
    {
      swift_retain();
      swift_retain();
      id v25 = (id)_REMGetLocalizedString();
      uint64_t v20 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v19 = v28;
      goto LABEL_20;
    }
    uint64_t v20 = *(void *)(v17 + 16);
    swift_retain();
    uint64_t v21 = v18;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v22 = v166;
    sub_1A7571C80();
    uint64_t v23 = (void *)sub_1A7571C30();
    (*v165)(v22, v167);
    uint64_t v24 = (void *)sub_1A75725E0();
    id v25 = objc_msgSend(v23, sel_localizedStringForLanguage_context_, v24, 3);

    if (v25)
    {
      uint64_t v20 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      uint64_t v19 = v27;
      uint64_t v18 = v21;
LABEL_20:

      goto LABEL_22;
    }
    uint64_t v18 = v21;
LABEL_22:
    uint64_t v171 = v20;
    uint64_t v172 = v19;
    uint64_t v29 = *(void *)(v18 + 24);
    if (v29)
    {
      unint64_t v30 = v12;
      uint64_t v164 = v18;
      uint64_t v31 = *(void *)(v18 + 16);
      swift_bridgeObjectRetain();
      char v32 = v166;
      sub_1A7571C80();
      uint64_t v33 = (void *)sub_1A7571C30();
      (*v165)(v32, v167);
      uint64_t v34 = (void *)sub_1A75725E0();
      id v35 = objc_msgSend(v33, sel_localizedStringForLanguage_context_, v34, 3);

      if (!v35)
      {
        uint64_t v12 = v30;
        goto LABEL_28;
      }
      uint64_t v31 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v37 = v36;
      swift_bridgeObjectRelease();
      uint64_t v29 = v37;
      uint64_t v12 = v30;
    }
    else
    {
      id v35 = (id)_REMGetLocalizedString();
      uint64_t v31 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v29 = v38;
    }

LABEL_28:
    uint64_t v169 = v31;
    uint64_t v170 = v29;
    unint64_t v161 = sub_1A72DF534();
    uint64_t v164 = sub_1A75732E0();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v159;
    uint64_t v16 = v160 + 2;
    if (v160 + 2 >= v159) {
      goto LABEL_45;
    }
    uint64_t v155 = v12;
    uint64_t v156 = v2;
    uint64_t v39 = v154 + 8 * v160;
    while (1)
    {
      uint64_t v163 = v16;
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = *(void *)(*(void *)v39 + 24);
      if (v41)
      {
        uint64_t v42 = *(void *)(*(void *)v39 + 16);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v43 = v166;
        sub_1A7571C80();
        uint64_t v44 = (void *)sub_1A7571C30();
        (*v165)(v43, v167);
        unint64_t v45 = (void *)sub_1A75725E0();
        id v46 = objc_msgSend(v44, sel_localizedStringForLanguage_context_, v45, 3);

        if (!v46) {
          goto LABEL_35;
        }
        uint64_t v42 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v48 = v47;
        swift_bridgeObjectRelease();
        uint64_t v41 = v48;
      }
      else
      {
        swift_retain();
        swift_retain();
        id v46 = (id)_REMGetLocalizedString();
        uint64_t v42 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v41 = v49;
      }

LABEL_35:
      uint64_t v171 = v42;
      uint64_t v172 = v41;
      uint64_t v50 = *(void *)(v40 + 24);
      if (!v50)
      {
        id v55 = (id)_REMGetLocalizedString();
        uint64_t v51 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v50 = v58;
        goto LABEL_39;
      }
      uint64_t v51 = *(void *)(v40 + 16);
      swift_bridgeObjectRetain();
      uint64_t v52 = v166;
      sub_1A7571C80();
      BOOL v53 = (void *)sub_1A7571C30();
      (*v165)(v52, v167);
      uint64_t v54 = (void *)sub_1A75725E0();
      id v55 = objc_msgSend(v53, sel_localizedStringForLanguage_context_, v54, 3);

      if (v55)
      {
        uint64_t v51 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v57 = v56;
        swift_bridgeObjectRelease();
        uint64_t v50 = v57;
        uint64_t v14 = v168;
LABEL_39:

        goto LABEL_41;
      }
      uint64_t v14 = v168;
LABEL_41:
      BOOL v59 = v164 == -1;
      uint64_t v169 = v51;
      uint64_t v170 = v50;
      uint64_t v60 = sub_1A75732E0();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v59 == (v60 != -1)) {
        break;
      }
      uint64_t v16 = v163 + 1;
      v39 += 8;
      uint64_t v6 = v159;
      if (v159 == v163 + 1)
      {
        uint64_t v16 = v159;
        uint64_t v12 = v155;
        uint64_t v2 = v156;
        goto LABEL_45;
      }
    }
    uint64_t v12 = v155;
    uint64_t v2 = v156;
    uint64_t v6 = v159;
    uint64_t v16 = v163;
LABEL_45:
    if (v164 != -1)
    {
LABEL_53:
      if (v16 >= v6) {
        goto LABEL_84;
      }
      if (__OFSUB__(v16, v160)) {
        goto LABEL_165;
      }
      if (v16 - v160 >= v157)
      {
LABEL_84:
        uint64_t v67 = v160;
        if (v16 < v160) {
          goto LABEL_160;
        }
        goto LABEL_85;
      }
      uint64_t v66 = v160 + v157;
      if (__OFADD__(v160, v157)) {
        goto LABEL_167;
      }
      if (v66 >= v6) {
        uint64_t v66 = v6;
      }
      if (v66 < v160)
      {
LABEL_168:
        __break(1u);
        goto LABEL_169;
      }
      if (v16 == v66)
      {
        uint64_t v67 = v160;
        if (v16 < v160) {
          goto LABEL_160;
        }
LABEL_85:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v163 = v16;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v12 = sub_1A74F9714(0, *((void *)v12 + 2) + 1, 1, v12);
        }
        unint64_t v96 = *((void *)v12 + 2);
        unint64_t v95 = *((void *)v12 + 3);
        unint64_t v15 = v96 + 1;
        if (v96 >= v95 >> 1) {
          uint64_t v12 = sub_1A74F9714((char *)(v95 > 1), v96 + 1, 1, v12);
        }
        *((void *)v12 + 2) = v15;
        uint64_t v97 = v12 + 32;
        uint64_t v98 = &v12[16 * v96 + 32];
        uint64_t v99 = v163;
        *(void *)uint64_t v98 = v67;
        *((void *)v98 + 1) = v99;
        if (v96)
        {
          while (1)
          {
            unint64_t v100 = v15 - 1;
            if (v15 >= 4)
            {
              uint64_t v105 = &v97[16 * v15];
              uint64_t v106 = *((void *)v105 - 8);
              uint64_t v107 = *((void *)v105 - 7);
              BOOL v111 = __OFSUB__(v107, v106);
              uint64_t v108 = v107 - v106;
              if (v111) {
                goto LABEL_149;
              }
              uint64_t v110 = *((void *)v105 - 6);
              uint64_t v109 = *((void *)v105 - 5);
              BOOL v111 = __OFSUB__(v109, v110);
              uint64_t v103 = v109 - v110;
              char v104 = v111;
              if (v111) {
                goto LABEL_150;
              }
              unint64_t v112 = v15 - 2;
              uint64_t v113 = &v97[16 * v15 - 32];
              uint64_t v115 = *(void *)v113;
              uint64_t v114 = *((void *)v113 + 1);
              BOOL v111 = __OFSUB__(v114, v115);
              uint64_t v116 = v114 - v115;
              if (v111) {
                goto LABEL_152;
              }
              BOOL v111 = __OFADD__(v103, v116);
              uint64_t v117 = v103 + v116;
              if (v111) {
                goto LABEL_155;
              }
              if (v117 >= v108)
              {
                uint64_t v135 = &v97[16 * v100];
                uint64_t v137 = *(void *)v135;
                uint64_t v136 = *((void *)v135 + 1);
                BOOL v111 = __OFSUB__(v136, v137);
                uint64_t v138 = v136 - v137;
                if (v111) {
                  goto LABEL_159;
                }
                BOOL v128 = v103 < v138;
                goto LABEL_121;
              }
            }
            else
            {
              if (v15 != 3)
              {
                uint64_t v129 = *((void *)v12 + 4);
                uint64_t v130 = *((void *)v12 + 5);
                BOOL v111 = __OFSUB__(v130, v129);
                uint64_t v122 = v130 - v129;
                char v123 = v111;
                goto LABEL_115;
              }
              uint64_t v102 = *((void *)v12 + 4);
              uint64_t v101 = *((void *)v12 + 5);
              BOOL v111 = __OFSUB__(v101, v102);
              uint64_t v103 = v101 - v102;
              char v104 = v111;
            }
            if (v104) {
              goto LABEL_151;
            }
            unint64_t v112 = v15 - 2;
            uint64_t v118 = &v97[16 * v15 - 32];
            uint64_t v120 = *(void *)v118;
            uint64_t v119 = *((void *)v118 + 1);
            BOOL v121 = __OFSUB__(v119, v120);
            uint64_t v122 = v119 - v120;
            char v123 = v121;
            if (v121) {
              goto LABEL_154;
            }
            id v124 = &v97[16 * v100];
            uint64_t v126 = *(void *)v124;
            uint64_t v125 = *((void *)v124 + 1);
            BOOL v111 = __OFSUB__(v125, v126);
            uint64_t v127 = v125 - v126;
            if (v111) {
              goto LABEL_157;
            }
            if (__OFADD__(v122, v127)) {
              goto LABEL_158;
            }
            if (v122 + v127 >= v103)
            {
              BOOL v128 = v103 < v127;
LABEL_121:
              if (v128) {
                unint64_t v100 = v112;
              }
              goto LABEL_123;
            }
LABEL_115:
            if (v123) {
              goto LABEL_153;
            }
            uint64_t v131 = &v97[16 * v100];
            uint64_t v133 = *(void *)v131;
            uint64_t v132 = *((void *)v131 + 1);
            BOOL v111 = __OFSUB__(v132, v133);
            uint64_t v134 = v132 - v133;
            if (v111) {
              goto LABEL_156;
            }
            if (v134 < v122) {
              goto LABEL_14;
            }
LABEL_123:
            unint64_t v139 = v100 - 1;
            if (v100 - 1 >= v15)
            {
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
              goto LABEL_168;
            }
            if (!v14) {
              goto LABEL_171;
            }
            uint64_t v140 = v14;
            uint64_t v141 = &v97[16 * v139];
            uint64_t v142 = *(void *)v141;
            long long v143 = &v97[16 * v100];
            uint64_t v144 = *((void *)v143 + 1);
            sub_1A74E4924((char *)(v140 + 8 * *(void *)v141), (char *)(v140 + 8 * *(void *)v143), (char *)(v140 + 8 * v144), v162);
            if (v2) {
              goto LABEL_143;
            }
            if (v144 < v142) {
              goto LABEL_146;
            }
            if (v100 > *((void *)v12 + 2)) {
              goto LABEL_147;
            }
            *(void *)uint64_t v141 = v142;
            *(void *)&v97[16 * v139 + 8] = v144;
            unint64_t v145 = *((void *)v12 + 2);
            if (v100 >= v145) {
              goto LABEL_148;
            }
            unint64_t v15 = v145 - 1;
            memmove(&v97[16 * v100], v143 + 16, 16 * (v145 - 1 - v100));
            *((void *)v12 + 2) = v145 - 1;
            uint64_t v14 = v168;
            if (v145 <= 2) {
              goto LABEL_14;
            }
          }
        }
        unint64_t v15 = 1;
LABEL_14:
        uint64_t v6 = v159;
        uint64_t v13 = v163;
        if (v163 >= v159) {
          goto LABEL_132;
        }
        continue;
      }
      uint64_t v158 = v66;
      uint64_t v155 = v12;
      uint64_t v156 = v2;
      uint64_t v68 = (uint64_t *)(v153 + 8 * v16);
LABEL_66:
      uint64_t v70 = *(void *)(v14 + 8 * v16);
      uint64_t v71 = v160;
      unint64_t v161 = (unint64_t)v68;
      uint64_t v163 = v16;
      while (1)
      {
        uint64_t v72 = *v68;
        uint64_t v73 = *(void *)(v70 + 24);
        if (!v73) {
          break;
        }
        uint64_t v74 = *(void *)(v70 + 16);
        swift_retain();
        uint64_t v75 = v72;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v76 = v166;
        sub_1A7571C80();
        uint64_t v77 = (void *)sub_1A7571C30();
        (*v165)(v76, v167);
        uint64_t v78 = (void *)sub_1A75725E0();
        id v79 = objc_msgSend(v77, sel_localizedStringForLanguage_context_, v78, 3);

        if (v79)
        {
          uint64_t v74 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v81 = v80;
          swift_bridgeObjectRelease();
          uint64_t v73 = v81;
          uint64_t v72 = v75;
          uint64_t v14 = v168;
LABEL_71:

          goto LABEL_73;
        }
        uint64_t v72 = v75;
        uint64_t v14 = v168;
LABEL_73:
        uint64_t v171 = v74;
        uint64_t v172 = v73;
        uint64_t v83 = *(void *)(v72 + 24);
        if (!v83)
        {
          id v88 = (id)_REMGetLocalizedString();
          uint64_t v84 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v83 = v91;
          goto LABEL_77;
        }
        uint64_t v164 = v72;
        uint64_t v84 = *(void *)(v72 + 16);
        swift_bridgeObjectRetain();
        char v85 = v166;
        sub_1A7571C80();
        char v86 = (void *)sub_1A7571C30();
        (*v165)(v85, v167);
        char v87 = (void *)sub_1A75725E0();
        id v88 = objc_msgSend(v86, sel_localizedStringForLanguage_context_, v87, 3);

        if (v88)
        {
          uint64_t v84 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v90 = v89;
          swift_bridgeObjectRelease();
          uint64_t v83 = v90;
          uint64_t v14 = v168;
LABEL_77:

          goto LABEL_79;
        }
        uint64_t v14 = v168;
LABEL_79:
        uint64_t v169 = v84;
        uint64_t v170 = v83;
        sub_1A72DF534();
        uint64_t v92 = sub_1A75732E0();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v92 != -1)
        {
          uint64_t v69 = v163;
LABEL_65:
          uint64_t v16 = v69 + 1;
          uint64_t v68 = (uint64_t *)(v161 + 8);
          if (v16 == v158)
          {
            uint64_t v16 = v158;
            uint64_t v12 = v155;
            uint64_t v2 = v156;
            goto LABEL_84;
          }
          goto LABEL_66;
        }
        uint64_t v69 = v163;
        if (!v14) {
          goto LABEL_170;
        }
        uint64_t v93 = *v68;
        uint64_t v70 = v68[1];
        uint64_t *v68 = v70;
        v68[1] = v93;
        --v68;
        if (v69 == ++v71) {
          goto LABEL_65;
        }
      }
      swift_retain();
      swift_retain();
      id v79 = (id)_REMGetLocalizedString();
      uint64_t v74 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v73 = v82;
      goto LABEL_71;
    }
    break;
  }
  if (v16 >= v160)
  {
    if (v160 < v16)
    {
      int64_t v61 = (uint64_t *)(v153 + 8 * v16);
      uint64_t v62 = v16;
      uint64_t v63 = v160;
      unint64_t v64 = (uint64_t *)(v14 + 8 * v160);
      while (1)
      {
        if (v63 != --v62)
        {
          if (!v14) {
            goto LABEL_172;
          }
          uint64_t v65 = *v64;
          *unint64_t v64 = *v61;
          *int64_t v61 = v65;
        }
        ++v63;
        --v61;
        ++v64;
        if (v63 >= v62) {
          goto LABEL_53;
        }
      }
    }
    goto LABEL_53;
  }
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A74E4598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v38 = a1;
  uint64_t v49 = sub_1A7571D30();
  uint64_t result = MEMORY[0x1F4188790](v49);
  uint64_t v44 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a2;
  uint64_t v41 = a3;
  if (a3 != a2)
  {
    uint64_t v10 = *a4;
    uint64_t v43 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v40 = v10;
    uint64_t v11 = (void *)(v10 + 8 * v41 - 8);
LABEL_5:
    uint64_t v12 = *(void *)(v40 + 8 * v41);
    uint64_t v13 = v38;
    uint64_t v39 = v11;
    while (1)
    {
      uint64_t v14 = *v11;
      uint64_t v15 = *(void *)(v12 + 24);
      if (!v15) {
        break;
      }
      uint64_t v16 = *(void *)(v12 + 16);
      swift_retain();
      uint64_t v17 = v14;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v18 = v44;
      sub_1A7571C80();
      uint64_t v19 = (void *)sub_1A7571C30();
      (*v43)(v18, v49);
      uint64_t v20 = (void *)sub_1A75725E0();
      id v21 = objc_msgSend(v19, sel_localizedStringForLanguage_context_, v20, 3);

      if (v21)
      {
        uint64_t v16 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v23 = v22;
        swift_bridgeObjectRelease();
        uint64_t v15 = v23;
        uint64_t v14 = v17;
LABEL_10:

        goto LABEL_12;
      }
      uint64_t v14 = v17;
LABEL_12:
      uint64_t v47 = v16;
      uint64_t v48 = v15;
      uint64_t v25 = *(void *)(v14 + 24);
      if (v25)
      {
        uint64_t v42 = v14;
        uint64_t v26 = *(void *)(v14 + 16);
        swift_bridgeObjectRetain();
        uint64_t v27 = v44;
        sub_1A7571C80();
        uint64_t v28 = (void *)sub_1A7571C30();
        (*v43)(v27, v49);
        uint64_t v29 = (void *)sub_1A75725E0();
        id v30 = objc_msgSend(v28, sel_localizedStringForLanguage_context_, v29, 3);

        if (!v30) {
          goto LABEL_17;
        }
        uint64_t v26 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v32 = v31;
        swift_bridgeObjectRelease();
        uint64_t v25 = v32;
      }
      else
      {
        id v30 = (id)_REMGetLocalizedString();
        uint64_t v26 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v25 = v33;
      }

LABEL_17:
      uint64_t v45 = v26;
      uint64_t v46 = v25;
      sub_1A72DF534();
      uint64_t v34 = sub_1A75732E0();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v34 != -1) {
        goto LABEL_4;
      }
      if (!v40)
      {
        __break(1u);
        return result;
      }
      uint64_t v35 = *v11;
      uint64_t v12 = v11[1];
      *uint64_t v11 = v12;
      v11[1] = v35;
      --v11;
      if (v41 == ++v13)
      {
LABEL_4:
        uint64_t v11 = v39 + 1;
        if (++v41 == v37) {
          return result;
        }
        goto LABEL_5;
      }
    }
    swift_retain();
    swift_retain();
    id v21 = (id)_REMGetLocalizedString();
    uint64_t v16 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v15 = v24;
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1A74E4924(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v77 = sub_1A7571D30();
  uint64_t v8 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v76 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 - a1;
  uint64_t v11 = a2 - a1 + 7;
  if (a2 - a1 >= 0) {
    uint64_t v11 = a2 - a1;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v74 = a3;
  uint64_t v13 = a3 - a2;
  uint64_t v14 = v13 / 8;
  char v86 = a1;
  uint64_t v71 = a4;
  char v85 = a4;
  if (v11 >> 3 >= v13 / 8)
  {
    if (v13 < -7) {
      goto LABEL_63;
    }
    uint64_t v40 = v71;
    if (v71 != a2 || &a2[8 * v14] <= v71) {
      memmove(v71, a2, 8 * v14);
    }
    uint64_t v41 = &v40[8 * v14];
    uint64_t v84 = v41;
    char v86 = a2;
    if (v13 < 8 || a1 >= a2)
    {
LABEL_62:
      sub_1A74F9BAC((void **)&v86, (const void **)&v85, &v84);
      return 1;
    }
    uint64_t v72 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v42 = v74 - 8;
    uint64_t v43 = a2;
    uint64_t v78 = a1;
    while (1)
    {
      id v79 = a2;
      uint64_t v75 = (void (**)(char *, uint64_t))v41;
      uint64_t v44 = *((void *)v41 - 1);
      uint64_t v45 = *((void *)v43 - 1);
      uint64_t v73 = v43 - 8;
      uint64_t v74 = v41 - 8;
      uint64_t v46 = *(void *)(v44 + 24);
      if (v46)
      {
        uint64_t v47 = *(void *)(v44 + 16);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v48 = v76;
        sub_1A7571C80();
        uint64_t v49 = (void *)sub_1A7571C30();
        (*v72)(v48, v77);
        uint64_t v50 = (void *)sub_1A75725E0();
        id v51 = objc_msgSend(v49, sel_localizedStringForLanguage_context_, v50, 3);

        if (!v51) {
          goto LABEL_44;
        }
        uint64_t v47 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v53 = v52;
        swift_bridgeObjectRelease();
        uint64_t v46 = v53;
      }
      else
      {
        swift_retain();
        swift_retain();
        id v51 = (id)_REMGetLocalizedString();
        uint64_t v47 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v46 = v54;
      }

LABEL_44:
      uint64_t v82 = v47;
      uint64_t v83 = v46;
      uint64_t v55 = *(void *)(v45 + 24);
      if (!v55)
      {
        id v60 = (id)_REMGetLocalizedString();
        uint64_t v56 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v55 = v63;
        goto LABEL_48;
      }
      uint64_t v56 = *(void *)(v45 + 16);
      swift_bridgeObjectRetain();
      uint64_t v57 = v76;
      sub_1A7571C80();
      uint64_t v58 = (void *)sub_1A7571C30();
      (*v72)(v57, v77);
      BOOL v59 = (void *)sub_1A75725E0();
      id v60 = objc_msgSend(v58, sel_localizedStringForLanguage_context_, v59, 3);

      if (v60)
      {
        uint64_t v56 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v62 = v61;
        swift_bridgeObjectRelease();
        uint64_t v55 = v62;
        uint64_t v40 = v71;
LABEL_48:

        goto LABEL_50;
      }
      uint64_t v40 = v71;
LABEL_50:
      unint64_t v64 = v42 + 8;
      uint64_t v80 = v56;
      uint64_t v81 = v55;
      sub_1A72DF534();
      uint64_t v65 = sub_1A75732E0();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v65 == -1)
      {
        uint64_t v68 = v78;
        uint64_t v41 = (char *)v75;
        uint64_t v43 = v73;
        if (v64 != v79 || v42 >= v79) {
          *(void *)uint64_t v42 = *(void *)v73;
        }
        char v86 = v43;
        if (v41 <= v40) {
          goto LABEL_62;
        }
      }
      else
      {
        uint64_t v66 = v74;
        uint64_t v84 = v74;
        uint64_t v68 = v78;
        uint64_t v67 = v79;
        if (v64 < (char *)v75 || v42 >= (char *)v75 || v64 != (char *)v75) {
          *(void *)uint64_t v42 = *(void *)v74;
        }
        uint64_t v43 = v67;
        uint64_t v41 = v66;
        if (v66 <= v40) {
          goto LABEL_62;
        }
      }
      v42 -= 8;
      a2 = v43;
      if (v43 <= v68) {
        goto LABEL_62;
      }
    }
  }
  if (v10 >= -7)
  {
    uint64_t v15 = v71;
    if (v71 != a1 || &a1[8 * v12] <= v71) {
      memmove(v71, a1, 8 * v12);
    }
    uint64_t v73 = &v15[8 * v12];
    uint64_t v84 = v73;
    if (v10 >= 8 && a2 < v74)
    {
      uint64_t v75 = (void (**)(char *, uint64_t))(v8 + 8);
      while (1)
      {
        uint64_t v78 = a1;
        id v79 = a2;
        uint64_t v16 = *(void *)a2;
        uint64_t v17 = *(void *)v15;
        uint64_t v18 = *(void *)(v16 + 24);
        if (v18)
        {
          uint64_t v19 = *(void *)(v16 + 16);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v20 = v76;
          sub_1A7571C80();
          id v21 = (void *)sub_1A7571C30();
          (*v75)(v20, v77);
          uint64_t v22 = (void *)sub_1A75725E0();
          id v23 = objc_msgSend(v21, sel_localizedStringForLanguage_context_, v22, 3);

          if (!v23) {
            goto LABEL_16;
          }
          uint64_t v19 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v25 = v24;
          swift_bridgeObjectRelease();
          uint64_t v18 = v25;
        }
        else
        {
          swift_retain();
          swift_retain();
          id v23 = (id)_REMGetLocalizedString();
          uint64_t v19 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v18 = v26;
        }

LABEL_16:
        uint64_t v82 = v19;
        uint64_t v83 = v18;
        uint64_t v27 = *(void *)(v17 + 24);
        if (!v27)
        {
          id v32 = (id)_REMGetLocalizedString();
          uint64_t v28 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v27 = v35;
          goto LABEL_20;
        }
        uint64_t v28 = *(void *)(v17 + 16);
        swift_bridgeObjectRetain();
        uint64_t v29 = v76;
        sub_1A7571C80();
        id v30 = (void *)sub_1A7571C30();
        (*v75)(v29, v77);
        uint64_t v31 = (void *)sub_1A75725E0();
        id v32 = objc_msgSend(v30, sel_localizedStringForLanguage_context_, v31, 3);

        if (v32)
        {
          uint64_t v28 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v34 = v33;
          swift_bridgeObjectRelease();
          uint64_t v27 = v34;
LABEL_20:
        }
        uint64_t v80 = v28;
        uint64_t v81 = v27;
        sub_1A72DF534();
        uint64_t v36 = sub_1A75732E0();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v36 == -1)
        {
          uint64_t v38 = v78;
          uint64_t v39 = v79 + 8;
          if (v78 < v79 || v78 >= v39 || v78 != v79) {
            *(void *)uint64_t v78 = *(void *)v79;
          }
        }
        else
        {
          uint64_t v38 = v78;
          uint64_t v37 = v79;
          if (v78 != v15) {
            *(void *)uint64_t v78 = *(void *)v15;
          }
          v15 += 8;
          char v85 = v15;
          uint64_t v39 = v37;
        }
        a1 = v38 + 8;
        char v86 = a1;
        if (v15 < v73)
        {
          a2 = v39;
          if (v39 < v74) {
            continue;
          }
        }
        goto LABEL_62;
      }
    }
    goto LABEL_62;
  }
LABEL_63:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A74E5090()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700DF0);
  uint64_t v3 = sub_1A75734F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v31 = v0;
  uint64_t v32 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_22;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v16 >= v8) {
      break;
    }
    uint64_t v17 = (void *)(v2 + 56);
    unint64_t v18 = *(void *)(v32 + 8 * v16);
    ++v11;
    if (!v18)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v8) {
        goto LABEL_31;
      }
      unint64_t v18 = *(void *)(v32 + 8 * v11);
      if (!v18)
      {
        int64_t v19 = v16 + 2;
        if (v19 >= v8)
        {
LABEL_31:
          swift_release();
          uint64_t v1 = v31;
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v32 + 8 * v19);
        if (!v18)
        {
          while (1)
          {
            int64_t v11 = v19 + 1;
            if (__OFADD__(v19, 1)) {
              goto LABEL_39;
            }
            if (v11 >= v8) {
              goto LABEL_31;
            }
            unint64_t v18 = *(void *)(v32 + 8 * v11);
            ++v19;
            if (v18) {
              goto LABEL_21;
            }
          }
        }
        int64_t v11 = v19;
      }
    }
LABEL_21:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_22:
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    sub_1A75740C0();
    sub_1A75726F0();
    uint64_t result = sub_1A7574110();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v9 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v21;
    v13[1] = v22;
    ++*(void *)(v4 + 16);
  }
  swift_release();
  uint64_t v1 = v31;
  uint64_t v17 = (void *)(v2 + 56);
LABEL_33:
  uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
  if (v30 > 63) {
    bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v17 = -1 << v30;
  }
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1A74E5358(uint64_t a1)
{
  return sub_1A74E6268(a1, &qword_1E96F1E08);
}

uint64_t sub_1A74E5364()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F5320);
  uint64_t result = sub_1A75734F0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    unint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  uint64_t *v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_1A75740B0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1A74E55E8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1A7571BC0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F5348);
  uint64_t v5 = sub_1A75734F0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1A72E1094((unint64_t *)&qword_1EB701400, MEMORY[0x1E4F27990]);
      uint64_t result = sub_1A7572510();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_1A74E59E4(uint64_t a1)
{
  return sub_1A74E6268(a1, &qword_1E96F1DC8);
}

uint64_t sub_1A74E59F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F5340);
  uint64_t result = sub_1A75734F0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_1A75740C0();
      sub_1A75740D0();
      uint64_t result = sub_1A7574110();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1A74E5C9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F5338);
  uint64_t result = sub_1A75734F0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_1A75740C0();
      sub_1A75740D0();
      uint64_t result = sub_1A7574110();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1A74E5F48()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F5328);
  uint64_t v3 = sub_1A75734F0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      sub_1A75740C0();
      sub_1A75726F0();
      uint64_t v18 = sub_1A7574110();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1A74E625C(uint64_t a1)
{
  return sub_1A74E6268(a1, (uint64_t *)&unk_1E96F2460);
}

uint64_t sub_1A74E6268(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_1A75734F0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    char v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_1A7573180();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v6;
  return result;
}

uint64_t sub_1A74E6504()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DC0);
  uint64_t result = sub_1A75734F0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_1A75740C0();
      sub_1A75740D0();
      uint64_t result = sub_1A7574110();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1A74E67B0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1A7571D30();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F5318);
  uint64_t v5 = sub_1A75734F0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1A72E1094(&qword_1E96F1488, MEMORY[0x1E4F27A78]);
      uint64_t result = sub_1A7572510();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_1A74E6BAC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1A74E5090();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1A74E7C18();
      goto LABEL_22;
    }
    sub_1A74E8A2C();
  }
  uint64_t v11 = *v4;
  sub_1A75740C0();
  sub_1A75726F0();
  uint64_t result = sub_1A7574110();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1A7573DB0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1A7574000();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        unint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1A7573DB0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  int64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *int64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_1A74E6D48(uint64_t a1, unint64_t a2, char a3)
{
}

uint64_t sub_1A74E6D64(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1A74E5364();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1A74E7DB8();
      goto LABEL_14;
    }
    sub_1A74E8CB8();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_1A75740B0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1A7574000();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1A74E6E88(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1A7571BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1A74E55E8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1A74E877C(MEMORY[0x1E4F27990], &qword_1E96F5348);
      goto LABEL_12;
    }
    sub_1A74E8F1C();
  }
  uint64_t v12 = *v3;
  sub_1A72E1094((unint64_t *)&qword_1EB701400, MEMORY[0x1E4F27990]);
  uint64_t v13 = sub_1A7572510();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1A72E1094((unint64_t *)&qword_1EB701410, MEMORY[0x1E4F27990]);
      char v21 = sub_1A75725C0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1A7574000();
  __break(1u);
  return result;
}

void sub_1A74E7144(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1A74E6268(v8, &qword_1E96F1DC8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1A74E842C(&qword_1E96F1DC8);
      goto LABEL_14;
    }
    sub_1A74E9AA4(v8, &qword_1E96F1DC8);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1A7573180();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for REMObjectID_Codable();
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1A7573190();

    if (v13)
    {
LABEL_13:
      sub_1A7574000();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1A7573190();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1A74E72DC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1A74E59F0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1A74E7F50();
      goto LABEL_14;
    }
    sub_1A74E92CC();
  }
  uint64_t v8 = *v3;
  sub_1A75740C0();
  sub_1A75740D0();
  uint64_t result = sub_1A7574110();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for REMReminderPriorityLevel(0);
      uint64_t result = sub_1A7574000();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1A74E742C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1A74E5C9C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1A74E80E8();
      goto LABEL_14;
    }
    sub_1A74E9548();
  }
  uint64_t v8 = *v3;
  sub_1A75740C0();
  sub_1A75740D0();
  uint64_t result = sub_1A7574110();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1A7574000();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1A74E757C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_1A74E5F48();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_1A74E8280();
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1A74E97C4();
  }
  uint64_t v9 = *v3;
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A75740C0();
  sub_1A75726F0();
  uint64_t v10 = sub_1A7574110();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v14 = v13;
  if (v12 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v21 = v20;
      if (v19 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for Dataclass(0);
  uint64_t result = sub_1A7574000();
  __break(1u);
  return result;
}

void sub_1A74E77AC(uint64_t a1, unint64_t a2, char a3)
{
}

void sub_1A74E77C8(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_1A74E6268(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1A74E842C(a4);
      goto LABEL_14;
    }
    sub_1A74E9AA4(v11, a4);
  }
  uint64_t v12 = *v5;
  uint64_t v13 = sub_1A7573180();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1A72BEFEC(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_1A7573190();

    if (v16)
    {
LABEL_13:
      sub_1A7574000();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_1A7573190();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t sub_1A74E795C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1A7571D30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1A74E67B0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1A74E877C(MEMORY[0x1E4F27A78], &qword_1E96F5318);
      goto LABEL_12;
    }
    sub_1A74E9FA0();
  }
  uint64_t v12 = *v3;
  sub_1A72E1094(&qword_1E96F1488, MEMORY[0x1E4F27A78]);
  uint64_t v13 = sub_1A7572510();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    char v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1A72E1094(&qword_1E96F1490, MEMORY[0x1E4F27A78]);
      char v21 = sub_1A75725C0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1A7574000();
  __break(1u);
  return result;
}

void *sub_1A74E7C18()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700DF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75734E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    char v19 = (void *)(*(void *)(v4 + 48) + v16);
    *char v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A74E7DB8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F5320);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75734E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A74E7F50()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F5340);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75734E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A74E80E8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F5338);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75734E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1A74E8280()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F5328);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75734E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1A74E842C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1A75734E0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A74E85D0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DC0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75734E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    id result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}